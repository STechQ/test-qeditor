{"version":3,"file":"src_components_quick_QPhoneInput_vue.js","mappings":"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AAC;aACpB;YAED,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,iBAAiB,EAA5B,CAA4B,CAAC;YACzE,IAAI,OAAO,EAAE;gBACX,OAAO,OAAO,CAAC,SAAS;aACzB;YACD,OAAO,IAAI;QACb,CAAC;QACD,gBAAgB;YACd,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC;QAC5C,CAAC;QACD,KAAK;YACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACxB,CAAC;QACD,QAAQ,YAAC,UAAU;YACjB,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;KACF;CACF,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACtNuF;AAC3B;AACL;;;AAG1D;AACA,CAA6F;AAC7F,gBAAgB,uGAAU;AAC1B,EAAE,iFAAM;AACR,EAAE,mFAAM;AACR,EAAE,4FAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACA,iEAAe;;;;;;;;;;;;;;;ACtCkL,CAAC,iEAAe,yLAAG,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEArN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,aAAa;AAC5B;AACA;AACA;AACA,UAAU,SAAS,mBAAmB;AACtC;AACA;AACA;AACA,cAAc,SAAS,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://websdk/./src/components/quick/QPhoneInput.vue?8f7a","webpack://websdk/./src/components/quick/QPhoneInput.vue","webpack://websdk/./src/components/quick/QPhoneInput.vue?b49c","webpack://websdk/./src/components/quick/QPhoneInput.vue?a7f9","webpack://websdk/./src/components/quick/QPhoneInput.vue?3426"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue, {PropOptions} from \"vue\";\n\nimport { VueMaskDirective } from 'v-mask'\nimport { AsYouType } from 'libphonenumber-js'\n\nimport parsePhoneNumber from 'libphonenumber-js'\nimport countryCodes from '../static/countries.json'  \nimport turkishCountryCodes from '../static/turkishCountry.json' \nVue.directive('mask', VueMaskDirective);\nexport default Vue.extend({\n  name: \"QPhoneInput\",\n  props: {\n    countryCodeAppendIcon: {\n      type: String\n    },\n    phoneAppendIcon: {\n      type: String\n    },\n    fullPhoneNumber: {\n      type: String,\n      default: '',\n      note: 'Full phone number with country code included (like: +902164566565)'\n    } as PropOptions,\n    autoCompleteDisabled: {\n      type: Boolean,\n      default: false,\n      note: 'disable autocomplete'\n    } as PropOptions,\n          dense: {\n      type: Boolean,\n      default: false,\n      note: 'dense '\n    } as PropOptions,\n    textFieldDisabled: {\n      type: Boolean,\n      default: false,\n      note: 'disable text field'\n    } as PropOptions,\n    required: {\n      type: Boolean,\n      default: false,\n      note: 'is phone number required'\n    } as PropOptions,\n    outlined:{\n      type: Boolean,\n      default: false,\n      note: 'is phone outlined'\n    } as PropOptions,\n    label:{\n      type: String,\n      default: 'Telefon Numarası',\n      note: 'Phone input label'\n    } as PropOptions,\n    locale:{\n      type: String,\n      \n    }\n  },\n  data() {\n    const retVal = {\n      defaultMask: '### ### ## ##',\n      isValid: false,\n      countryAlpha2Code: 'TR',\n      allCountries: countryCodes,\n      turkishNameCountries:turkishCountryCodes,\n      phoneNumber: '',\n      phoneData: {\n        countryPhoneNumber: '',\n        phoneNumber: '',\n        maskedPhoneNumber: '',\n        mask: '',\n        isValid: false,\n        countryAlpha2Code: '',\n        countryDialCode: '' as string | null\n      },\n      rules: {\n        required: value => !!value || !this.required || 'Zorunlu alanı doldurunuz .',\n        valid: value => {\n          return retVal.phoneData.isValid || !value || 'Lütfen geçerli bir telefon numarası giriniz .'\n        }\n      },\n    };\n    return retVal;\n  },\n  watch: {\n     locale: {\n      immediate: true,\n      handler(newValue) {\n        (this.locale as any)=newValue;\n        if(newValue=='tr-TR'){\n            this.allCountries=this.turkishNameCountries                    \n        }\n        else{\n          this.allCountries=countryCodes\n        }\n      \n      }\n    },\n    fullPhoneNumber: {\n      immediate: true,\n      handler(newValue) {\n        const phoneObject = parsePhoneNumber(newValue)!\n        this.countryAlpha2Code = phoneObject.country!\n        this.phoneNumber = phoneObject.nationalNumber  \n      }\n    },\n    'phoneData.isValid': function(){\n        (this.$refs.phoneNumber as any).validate();\n    }\n  },\n  mounted() {\n  \n  },\n  computed: {\n    getPhoneMask() {\n      let countryMask: string = this.defaultMask;\n      this.isValid = false\n      this.phoneData.phoneNumber = \"\";\n      this.phoneData.countryPhoneNumber = \"\";\n      this.phoneData.maskedPhoneNumber = \"\";\n      if (this.phoneNumber) {\n        const asYouType = new AsYouType(this.countryAlpha2Code as any)\n        asYouType.input(this.phoneNumber)\n        try {\n          if ((asYouType as any).getTemplate()) { // ağlamak istiyorum\n            countryMask = (asYouType as any).getTemplate().replaceAll('x', '#');\n            this.phoneData.countryPhoneNumber = asYouType.getNumber()!.number;\n          }\n          this.phoneData.phoneNumber = asYouType.getChars();\n          this.isValid = asYouType.isValid();\n        } catch(e) {\n          countryMask = this.defaultMask\n        }\n      }\n      this.phoneData.mask = countryMask\n      this.phoneData.countryAlpha2Code = this.countryAlpha2Code\n      this.phoneData.countryDialCode = this.getCountryDialCode(this.countryAlpha2Code)\n      this.phoneData.maskedPhoneNumber = this.phoneNumber\n      this.phoneData.isValid = this.isValid\n      this.phoneNumberInput();\n      return countryMask\n    }\n  },\n  destroyed() {\n      this.$el?.remove();\n   },\n  methods:{\n    changePhone(){\n      this.$emit('change')\n    },\n    changeCountryCode(){\n      this.$emit('changeCountryCode')\n    },\n    inputPhone(){\n      // this.$emit('input')\n    },\n    itemText: item =>item.international_name + ' (' + item.dial_code + ')',\n    getCountryDialCode(countryAlpha2Code) {\n      if(this.phoneNumber.length>0){\n        this.$emit('input')\n      }\n      \n      const country = this.allCountries.find(e => e.code === countryAlpha2Code)\n      if (country) {\n        return country.dial_code\n      }\n      return null\n    },\n    phoneNumberInput() {\n      this.$emit('getPhoneData', this.phoneData)\n    },\n    reset(){\n      this.phoneNumber = \"\";\n    },\n    validate(checkValid){\n      return this.isValid;\n    }\n  }\n});\n","import { render, staticRenderFns } from \"./QPhoneInput.vue?vue&type=template&id=6d0d13ab&\"\nimport script from \"./QPhoneInput.vue?vue&type=script&lang=ts&\"\nexport * from \"./QPhoneInput.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/quick/quick/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6d0d13ab')) {\n      api.createRecord('6d0d13ab', component.options)\n    } else {\n      api.reload('6d0d13ab', component.options)\n    }\n    module.hot.accept(\"./QPhoneInput.vue?vue&type=template&id=6d0d13ab&\", function () {\n      api.rerender('6d0d13ab', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/quick/QPhoneInput.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QPhoneInput.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QPhoneInput.vue?vue&type=script&lang=ts&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QPhoneInput.vue?vue&type=template&id=6d0d13ab&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-container\",\n    { attrs: { fluid: \"\" } },\n    [\n      _c(\n        \"v-row\",\n        { attrs: { align: \"center\" } },\n        [\n          _c(\n            \"v-col\",\n            { attrs: { cols: \"4\" } },\n            [\n              _c(\"v-autocomplete\", {\n                attrs: {\n                  items: _vm.allCountries,\n                  \"item-text\": _vm.itemText,\n                  \"item-value\": \"code\",\n                  outlined: _vm.outlined,\n                  disabled: _vm.autoCompleteDisabled,\n                  dense: _vm.dense,\n                  \"append-icon\": _vm.countryCodeAppendIcon,\n                },\n                on: {\n                  change: function ($event) {\n                    return _vm.changeCountryCode()\n                  },\n                },\n                model: {\n                  value: _vm.countryAlpha2Code,\n                  callback: function ($$v) {\n                    _vm.countryAlpha2Code = $$v\n                  },\n                  expression: \"countryAlpha2Code\",\n                },\n              }),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"v-col\",\n            { attrs: { cols: \"8\" } },\n            [\n              _c(\"v-text-field\", {\n                directives: [\n                  {\n                    name: \"mask\",\n                    rawName: \"v-mask\",\n                    value: _vm.getPhoneMask,\n                    expression: \"getPhoneMask\",\n                  },\n                ],\n                ref: \"phoneNumber\",\n                attrs: {\n                  label: _vm.label,\n                  outlined: _vm.outlined,\n                  dense: _vm.dense,\n                  disabled: _vm.textFieldDisabled,\n                  rules: [_vm.rules.required, _vm.rules.valid],\n                  \"append-icon\": _vm.phoneAppendIcon,\n                },\n                on: {\n                  input: function ($event) {\n                    return _vm.inputPhone()\n                  },\n                  change: function ($event) {\n                    return _vm.changePhone()\n                  },\n                },\n                model: {\n                  value: _vm.phoneNumber,\n                  callback: function ($$v) {\n                    _vm.phoneNumber = $$v\n                  },\n                  expression: \"phoneNumber\",\n                },\n              }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"names":[],"sourceRoot":""}