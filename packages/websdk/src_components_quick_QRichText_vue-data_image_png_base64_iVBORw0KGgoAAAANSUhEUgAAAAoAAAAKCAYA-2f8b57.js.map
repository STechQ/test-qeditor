{"version":3,"file":"src_components_quick_QRichText_vue-data_image_png_base64_iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYA-2f8b57.js","mappings":"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","sources":["webpack://websdk/./src/components/quick/QRichText.vue?60a3","webpack://websdk/./src/components/quick/QRichText.vue?6aeb","webpack://websdk/./src/components/quick/QRichText.vue?b1d4","webpack://websdk/./src/components/quick/QRichText.vue","webpack://websdk/./src/components/quick/QRichText.vue?dac0","webpack://websdk/./src/components/quick/QRichText.vue?be2e","webpack://websdk/./src/components/quick/QRichText.vue?2f71","webpack://websdk/./src/components/quick/QRichText.vue?9521"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport Vuetify from \"vuetify\";\nimport { DOMParser } from 'prosemirror-model';\nimport { Editor } from \"tiptap\";\nimport { TiptapVuetifyPlugin } from \"tiptap-vuetify\";\nimport \"tiptap-vuetify/dist/main.css\";\nimport \"vuetify/dist/vuetify.min.css\";\nconst vuetify = new Vuetify({\n  lang: {\n    // If you change the language here, then it changes in the editor itself\n    current: \"en\" // en | es | fr | pl | ru\n  }\n});\nVue.use(Vuetify);\nVue.use(TiptapVuetifyPlugin, {\n  vuetify,\n  iconsGroup: \"mdi\",\n});\nimport {\n  // component\n  TiptapVuetify,\n  // extensions\n  Heading,\n  Bold,\n  Italic,\n  Strike,\n  Underline,\n  Code,\n  Paragraph,\n  BulletList,\n  OrderedList,\n  Image,\n  ListItem,\n  Link,\n  Blockquote,\n  HardBreak,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  HorizontalRule,\n  History,\n} from \"tiptap-vuetify\";\n\nexport default Vue.extend({\n  components: { TiptapVuetify },\n  name: \"QRichText\",\n  props: {\n    height: {\n      type: String,\n      default: \"auto\",\n    },\n    minHeight: {\n      type: String,\n      default: \"auto\",\n    },\n    ToolBarcolor: {\n      type: String,\n      default: \"\",\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    buttonsHide:{\n      type: Boolean,\n      default: false,\n    }\n  },\n  data: () => ({\n    editorContentStyle :{\n      '--height':\"auto\",\n      '--minHeight':\"auto\"\n    },\n    editor: new Editor(),\n    extensions: [\n      // Render in the Bubble menu\n      Bold,\n      [\n        Link,\n        {\n          renderIn: \"bubbleMenu\",\n        },\n      ],\n      [\n        Underline,\n        {\n          renderIn: \"bubbleMenu\",\n        },\n      ],\n      [\n        Strike,\n        {\n          renderIn: \"bubbleMenu\",\n        },\n      ],\n      // Render in the toolbar\n      [\n        Blockquote,\n        {\n          renderIn: \"toolbar\",\n        },\n      ],\n      // You can use a short form, the default \"renderIn\" is \"'toolbar'\"\n      History,\n      Image,\n      Strike,\n      Italic,\n      ListItem, // if you need to use a list (BulletList, OrderedList)\n      BulletList,\n      OrderedList,\n      Table,\n      TableHeader,\n      TableCell,\n      TableRow,\n      [\n        Heading,\n        {\n          // Options that fall into the tiptap's extension\n          options: {\n            levels: [1, 2, 3],\n          },\n        },\n      ],\n      Code,\n      HorizontalRule,\n      Paragraph,\n      HardBreak, // line break on Shift + Ctrl + Enter\n    ],\n    htmlContent:'',\n    content: `\n      <p>\n      To see the result, select the text.\n      A special menu will appear to which you can bind the necessary extensions and\n      the buttons will be displayed there.\n      </p>\n      <p>\n      <strong>Test text:</strong> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n      </p>`,\n  }),\n  mounted(){\n     \n  },\n  destroyed() {\n      this.$el?.remove();\n   },\n  methods: {\n    blurEvent() {\n      this.$emit(\"blur\");\n    },\n    focusEvent() {\n      this.$emit(\"focus\");\n    },\n    inputEvent() {\n     \n      this.$emit(\"input\");\n     \n    },\n    initEvent({editor}) {\n      this.editor = editor;\n    },\n    getElementFromString(content:string):HTMLDivElement {           \n      let element = document.createElement('div') as HTMLDivElement;\n      element.innerHTML = content;\n      return element;\n    },\n    insertContent(content:string){\n       \n      if(!content || !this.editor || !this.editor.state || !this.editor.state.tr){\n        return;\n      }\n      let { selection } = this.editor.state;\n      let element:HTMLDivElement = this.getElementFromString(content) as HTMLDivElement;\n      let slice = DOMParser.fromSchema(this.editor.state.schema).parseSlice(element);\n      let transaction = this.editor.state.tr.insert(selection.anchor, slice.content);\n      this.editor.view.dispatch(transaction);\n    },\n  },\n  watch:{\n    content: function(){\n    \n      this.$emit('change')\n     \n    },\n     height: {\n      immediate: true,\n      handler(newValue) {\n        this.editorContentStyle['--height'] = newValue ?? \"auto\";\n      },\n    },\n     minHeight: {\n      immediate: true,\n      handler(newValue) {\n        this.editorContentStyle['--minHeight'] = newValue ?? \"auto\";\n      },\n    }\n  }\n\n});\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.tiptap-vuetify-editor__action-render-btn{\\n    border: unset!important;\\n}\\n.tiptap-vuetify-editor__content ul li{\\n      list-style: unset !important;\\n}\\n.tiptap-vuetify-editor__content {\\n      height: var(--height);\\n      min-height: var(--minHeight);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/quick/QRichText.vue\"],\"names\":[],\"mappings\":\";AA0NA;IACA,uBAAA;AAEA;AACA;MACA,4BAAA;AACA;AACA;MACA,qBAAA;MACA,4BAAA;AACA\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <tiptap-vuetify\\n      @blur=\\\"blurEvent\\\"\\n      @focus=\\\"focusEvent\\\"\\n      @input=\\\"inputEvent\\\"\\n      @init=\\\"initEvent\\\"\\n      :toolbar-attributes=\\\"{ color: ToolBarcolor, style:{display:buttonsHide ? 'none':(ToolBarcolor ? 'block' : 'unset')} }\\\"\\n      v-model=\\\"content\\\"\\n      :extensions=\\\"extensions\\\"\\n      :disabled=\\\"disabled\\\"  \\n      :style=\\\"editorContentStyle\\\"\\n    >\\n    </tiptap-vuetify>\\n  </div>\\n</template>\\n<script lang=\\\"ts\\\">\\nimport Vue from \\\"vue\\\";\\nimport Vuetify from \\\"vuetify\\\";\\nimport { DOMParser } from 'prosemirror-model';\\nimport { Editor } from \\\"tiptap\\\";\\nimport { TiptapVuetifyPlugin } from \\\"tiptap-vuetify\\\";\\nimport \\\"tiptap-vuetify/dist/main.css\\\";\\nimport \\\"vuetify/dist/vuetify.min.css\\\";\\nconst vuetify = new Vuetify({\\n  lang: {\\n    // If you change the language here, then it changes in the editor itself\\n    current: \\\"en\\\" // en | es | fr | pl | ru\\n  }\\n});\\nVue.use(Vuetify);\\nVue.use(TiptapVuetifyPlugin, {\\n  vuetify,\\n  iconsGroup: \\\"mdi\\\",\\n});\\nimport {\\n  // component\\n  TiptapVuetify,\\n  // extensions\\n  Heading,\\n  Bold,\\n  Italic,\\n  Strike,\\n  Underline,\\n  Code,\\n  Paragraph,\\n  BulletList,\\n  OrderedList,\\n  Image,\\n  ListItem,\\n  Link,\\n  Blockquote,\\n  HardBreak,\\n  Table,\\n  TableHeader,\\n  TableCell,\\n  TableRow,\\n  HorizontalRule,\\n  History,\\n} from \\\"tiptap-vuetify\\\";\\n\\nexport default Vue.extend({\\n  components: { TiptapVuetify },\\n  name: \\\"QRichText\\\",\\n  props: {\\n    height: {\\n      type: String,\\n      default: \\\"auto\\\",\\n    },\\n    minHeight: {\\n      type: String,\\n      default: \\\"auto\\\",\\n    },\\n    ToolBarcolor: {\\n      type: String,\\n      default: \\\"\\\",\\n    },\\n    disabled: {\\n      type: Boolean,\\n      default: false,\\n    },\\n    buttonsHide:{\\n      type: Boolean,\\n      default: false,\\n    }\\n  },\\n  data: () => ({\\n    editorContentStyle :{\\n      '--height':\\\"auto\\\",\\n      '--minHeight':\\\"auto\\\"\\n    },\\n    editor: new Editor(),\\n    extensions: [\\n      // Render in the Bubble menu\\n      Bold,\\n      [\\n        Link,\\n        {\\n          renderIn: \\\"bubbleMenu\\\",\\n        },\\n      ],\\n      [\\n        Underline,\\n        {\\n          renderIn: \\\"bubbleMenu\\\",\\n        },\\n      ],\\n      [\\n        Strike,\\n        {\\n          renderIn: \\\"bubbleMenu\\\",\\n        },\\n      ],\\n      // Render in the toolbar\\n      [\\n        Blockquote,\\n        {\\n          renderIn: \\\"toolbar\\\",\\n        },\\n      ],\\n      // You can use a short form, the default \\\"renderIn\\\" is \\\"'toolbar'\\\"\\n      History,\\n      Image,\\n      Strike,\\n      Italic,\\n      ListItem, // if you need to use a list (BulletList, OrderedList)\\n      BulletList,\\n      OrderedList,\\n      Table,\\n      TableHeader,\\n      TableCell,\\n      TableRow,\\n      [\\n        Heading,\\n        {\\n          // Options that fall into the tiptap's extension\\n          options: {\\n            levels: [1, 2, 3],\\n          },\\n        },\\n      ],\\n      Code,\\n      HorizontalRule,\\n      Paragraph,\\n      HardBreak, // line break on Shift + Ctrl + Enter\\n    ],\\n    htmlContent:'',\\n    content: `\\n      <p>\\n      To see the result, select the text.\\n      A special menu will appear to which you can bind the necessary extensions and\\n      the buttons will be displayed there.\\n      </p>\\n      <p>\\n      <strong>Test text:</strong> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\n      </p>`,\\n  }),\\n  mounted(){\\n     \\n  },\\n  destroyed() {\\n      this.$el?.remove();\\n   },\\n  methods: {\\n    blurEvent() {\\n      this.$emit(\\\"blur\\\");\\n    },\\n    focusEvent() {\\n      this.$emit(\\\"focus\\\");\\n    },\\n    inputEvent() {\\n     \\n      this.$emit(\\\"input\\\");\\n     \\n    },\\n    initEvent({editor}) {\\n      this.editor = editor;\\n    },\\n    getElementFromString(content:string):HTMLDivElement {           \\n      let element = document.createElement('div') as HTMLDivElement;\\n      element.innerHTML = content;\\n      return element;\\n    },\\n    insertContent(content:string){\\n       \\n      if(!content || !this.editor || !this.editor.state || !this.editor.state.tr){\\n        return;\\n      }\\n      let { selection } = this.editor.state;\\n      let element:HTMLDivElement = this.getElementFromString(content) as HTMLDivElement;\\n      let slice = DOMParser.fromSchema(this.editor.state.schema).parseSlice(element);\\n      let transaction = this.editor.state.tr.insert(selection.anchor, slice.content);\\n      this.editor.view.dispatch(transaction);\\n    },\\n  },\\n  watch:{\\n    content: function(){\\n    \\n      this.$emit('change')\\n     \\n    },\\n     height: {\\n      immediate: true,\\n      handler(newValue) {\\n        this.editorContentStyle['--height'] = newValue ?? \\\"auto\\\";\\n      },\\n    },\\n     minHeight: {\\n      immediate: true,\\n      handler(newValue) {\\n        this.editorContentStyle['--minHeight'] = newValue ?? \\\"auto\\\";\\n      },\\n    }\\n  }\\n\\n});\\n</script>\\n<style >\\n.tiptap-vuetify-editor__action-render-btn{\\n    border: unset!important;\\n   \\n}\\n.tiptap-vuetify-editor__content ul li{\\n      list-style: unset !important;\\n}\\n.tiptap-vuetify-editor__content {\\n      height: var(--height);\\n      min-height: var(--minHeight);\\n}\\n</style>\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QRichText.vue?vue&type=style&index=0&id=1ed0c418&lang=css&\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QRichText.vue?vue&type=style&index=0&id=1ed0c418&lang=css&\";\n       export default content && content.locals ? content.locals : undefined;\n","import { render, staticRenderFns } from \"./QRichText.vue?vue&type=template&id=1ed0c418&\"\nimport script from \"./QRichText.vue?vue&type=script&lang=ts&\"\nexport * from \"./QRichText.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./QRichText.vue?vue&type=style&index=0&id=1ed0c418&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/quick/quick/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1ed0c418')) {\n      api.createRecord('1ed0c418', component.options)\n    } else {\n      api.reload('1ed0c418', component.options)\n    }\n    module.hot.accept(\"./QRichText.vue?vue&type=template&id=1ed0c418&\", function () {\n      api.rerender('1ed0c418', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/quick/QRichText.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QRichText.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QRichText.vue?vue&type=script&lang=ts&\"","export * from \"-!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QRichText.vue?vue&type=style&index=0&id=1ed0c418&lang=css&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QRichText.vue?vue&type=template&id=1ed0c418&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"tiptap-vuetify\", {\n        style: _vm.editorContentStyle,\n        attrs: {\n          \"toolbar-attributes\": {\n            color: _vm.ToolBarcolor,\n            style: {\n              display: _vm.buttonsHide\n                ? \"none\"\n                : _vm.ToolBarcolor\n                ? \"block\"\n                : \"unset\",\n            },\n          },\n          extensions: _vm.extensions,\n          disabled: _vm.disabled,\n        },\n        on: {\n          blur: _vm.blurEvent,\n          focus: _vm.focusEvent,\n          input: _vm.inputEvent,\n          init: _vm.initEvent,\n        },\n        model: {\n          value: _vm.content,\n          callback: function ($$v) {\n            _vm.content = $$v\n          },\n          expression: \"content\",\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"names":[],"sourceRoot":""}