{"version":3,"file":"vendors-node_modules_devextreme_ui_grid_core_ui_grid_core_adaptivity_js-node_modules_devextre-905f08.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,2CAA2C;AAC3C,iBAAiB;AACjB,iBAAiB;AACjB,YAAY,mBAAO,CAAC,4EAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,qCAAqC,mBAAO,CAAC,oEAAgB;AAC7D,eAAe,mBAAO,CAAC,sEAAiB;AACxC,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,YAAY,mBAAO,CAAC,4EAAoB;AACxC,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,kBAAkB,mBAAO,CAAC,2EAAc;AACxC,cAAc,mBAAO,CAAC,mEAAU;AAChC,aAAa,mBAAO,CAAC,iEAAS;AAC9B,eAAe,mBAAO,CAAC,kFAAuB;AAC9C,uCAAuC,mBAAO,CAAC,uEAAY;AAC3D,2CAA2C,mBAAO,CAAC,gFAAsB;AACzE,aAAa,mBAAO,CAAC,kFAAuB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,cAAc,mBAAO,CAAC,gFAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbkBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACjtBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,0CAA0C,mBAAO,CAAC,8EAAqB;AACvE,YAAY,mBAAO,CAAC,4EAAoB;AACxC,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,sCAAsC,mBAAO,CAAC,kFAAuB;AACrE,kBAAkB,mBAAO,CAAC,2EAAc;AACxC,eAAe,mBAAO,CAAC,kFAAuB;AAC9C,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACpYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,qBAAqB,GAAG,sBAAsB,GAAG,YAAY,GAAG,cAAc,GAAG,uBAAuB,GAAG,oBAAoB,GAAG,kBAAkB;AACpJ,oBAAoB,mBAAO,CAAC,gFAAsB;AAClD,YAAY,mBAAO,CAAC,4EAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACzItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,wBAAwB;AACxB,uCAAuC,mBAAO,CAAC,mEAAa;AAC5D,qBAAqB,mBAAO,CAAC,sFAAiB;AAC9C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,2CAA2C,mBAAO,CAAC,2EAAiB;AACpE,YAAY,mBAAO,CAAC,uEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD,wBAAwB;;;;;;;;;;;AC9GxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,mBAAmB,GAAG,mBAAmB;AACzC,YAAY,mBAAO,CAAC,gEAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;ACnGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,YAAY,mBAAO,CAAC,gEAAQ;AAC5B,YAAY,mBAAO,CAAC,gEAAQ;AAC5B,gBAAgB,mBAAO,CAAC,wEAAY;AACpC,iBAAiB,mBAAO,CAAC,0EAAa;AACtC,sCAAsC,mBAAO,CAAC,sEAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8BAA8B;AACtkBAAe;AACf;;;;;;;;;;;AC1pBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,qCAAqC,mBAAO,CAAC,+DAAW;AACxD,YAAY,mBAAO,CAAC,iHAAwC;AAC5D,iDAAiD,mBAAO,CAAC,+GAAuC;AAChG,YAAY,mBAAO,CAAC,gEAAQ;AAC5B,sCAAsC,mBAAO,CAAC,sEAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,GAAG,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,IAAI,uBAAuB,EAAE,SAAS,EAAE;AACxI,iCAAiC,EAAE,MAAM,EAAE,OAAO,EAAE;AACpD;AACA,uCAAuC,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,2BAA2B,GAAG,uBAAuB;AACrD,qCAAqC,mBAAO,CAAC,+DAAW;AACxD,YAAY,mBAAO,CAAC,uEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;AC7CvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,8BAA8B;AAC9B,cAAc,mBAAO,CAAC,oEAAU;AAChC,YAAY,mBAAO,CAAC,gEAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;;;;;;;;;;ACpH9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,mBAAmB,mBAAO,CAAC,qGAAgC;AAC3D,cAAc,mBAAO,CAAC,+EAAqB;AAC3C,aAAa,mBAAO,CAAC,yFAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY;AACZ,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,eAAe,mBAAO,CAAC,kFAAuB;AAC9C,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D,oCAAoC,mBAAO,CAAC,kEAAe;AAC3D,gDAAgD,mBAAO,CAAC,gGAA0B;AAClF,aAAa,mBAAO,CAAC,0EAAe;AACpC,mCAAmC,mBAAO,CAAC,4DAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;;;;;;;;;;;ACzDZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY;AACZ,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,WAAW,mBAAO,CAAC,0EAAmB;AACtC,0CAA0C,mBAAO,CAAC,8EAAqB;AACvE,oCAAoC,mBAAO,CAAC,kEAAe;AAC3D,gDAAgD,mBAAO,CAAC,gGAA0B;AAClF,aAAa,mBAAO,CAAC,8DAAS;AAC9B,aAAa,mBAAO,CAAC,0EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA,aAAa,GAAG,YAAY,GAAG,aAAa,GAAG,aAAa,GAAG,WAAW,GAAG,YAAY;AACzF,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,oBAAoB,mBAAO,CAAC,gFAAsB;AAClD,aAAa,mBAAO,CAAC,8EAAqB;AAC1C,4CAA4C,mBAAO,CAAC,oFAAwB;AAC5E,WAAW,mBAAO,CAAC,0EAAmB;AACtC,gDAAgD,mBAAO,CAAC,gGAA0B;AAClF,aAAa,mBAAO,CAAC,0EAAe;AACpC,sCAAsC,mBAAO,CAAC,kGAA2B;AACzE,kDAAkD,mBAAO,CAAC,oGAA4B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY;AACZ;AACA,WAAW;AACX;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACpTD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E,WAAW,mBAAO,CAAC,6EAAsB;AACzC,8CAA8C,mBAAO,CAAC,qGAAkC;AACxF,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,aAAa,mBAAO,CAAC,2EAAgB;AACrC,sCAAsC,mBAAO,CAAC,6EAAiB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,aAAa,mBAAO,CAAC,+DAAU;AAC/B,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,4CAA4C,mBAAO,CAAC,qFAA0B;AAC9E,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,aAAa,mBAAO,CAAC,2EAAgB;AACrC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,wBAAwB,mBAAO,CAAC,uGAAmC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,aAAa,mBAAO,CAAC,0EAAe;AACpC,sCAAsC,mBAAO,CAAC,4EAAgB;AAC9D,kDAAkD,mBAAO,CAAC,oGAA4B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,aAAa,GAAG,aAAa,GAAG,WAAW;AAC3C,aAAa,mBAAO,CAAC,0EAAe;AACpC,sCAAsC,mBAAO,CAAC,kGAA2B;AACzE,kDAAkD,mBAAO,CAAC,oGAA4B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;;;;;;;;;;AChJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,YAAY,mBAAO,CAAC,2EAAmB;AACvC,mCAAmC,mBAAO,CAAC,2EAAmB;AAC9D,qCAAqC,mBAAO,CAAC,mFAAuB;AACpE,oCAAoC,mBAAO,CAAC,+EAAqB;AACjE,kDAAkD,mBAAO,CAAC,yGAAkC;AAC5F,mBAAO,CAAC,uFAAyB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACtOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,oBAAoB;AACpB,aAAa,mBAAO,CAAC,8EAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD,oBAAoB;;;;;;;;;;;ACvCpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,sCAAsC,mBAAO,CAAC,sFAAyB;AACvE,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,qCAAqC,mBAAO,CAAC,4DAAU;AACvD,kDAAkD,mBAAO,CAAC,wHAAwC;AAClG,oCAAoC,mBAAO,CAAC,0DAAS;AACrD,sCAAsC,mBAAO,CAAC,8DAAW;AACzD,yBAAyB,mBAAO,CAAC,8GAAqC;AACtE,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACrStB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,iBAAiB,mBAAO,CAAC,sFAAyB;AAClD,YAAY,mBAAO,CAAC,4EAAoB;AACxC,aAAa,mBAAO,CAAC,8EAAqB;AAC1C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,sCAAsC,mBAAO,CAAC,kFAAuB;AACrE,mCAAmC,mBAAO,CAAC,8EAAmB;AAC9D,kDAAkD,mBAAO,CAAC,wHAAwC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACzjBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,iCAAiC,mBAAO,CAAC,wFAAwB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,oBAAoB,mBAAO,CAAC,mFAAyB;AACrD,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,mCAAmC,mBAAO,CAAC,+EAAuB;AAClE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iDAAiD,mBAAO,CAAC,2GAAqC;AAC9F,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,aAAa,mBAAO,CAAC,yEAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,qBAAqB;AACxF;AACA,uEAAuE,qBAAqB;AAC5F;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjkBAAe;AACf;;;;;;;;;;;ACvRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,qCAAqC,mBAAO,CAAC,6DAAW;AACxD,qCAAqC,mBAAO,CAAC,2EAAkB;AAC/D,wCAAwC,mBAAO,CAAC,iGAAgC;AAChF,yCAAyC,mBAAO,CAAC,mGAAyB;AAC1E,0CAA0C,mBAAO,CAAC,2FAAqB;AACvE,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,oCAAoC,mBAAO,CAAC,+EAAuB;AACnE,iDAAiD,mBAAO,CAAC,2GAAqC;AAC9F,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,yBAAyB,mBAAO,CAAC,iHAAwC;AACzE,aAAa,mBAAO,CAAC,qFAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClaAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC1/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,qCAAqC,mBAAO,CAAC,6DAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,yCAAyC,mBAAO,CAAC,mGAAyB;AAC1E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,mCAAmC,mBAAO,CAAC,+EAAuB;AAClE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oCAAoC,mBAAO,CAAC,mFAAyB;AACrE,iDAAiD,mBAAO,CAAC,2GAAqC;AAC9F,YAAY,mBAAO,CAAC,+EAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uEAAuE,qBAAqB;AAC5F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,aAAa,mBAAO,CAAC,8FAA2B;AAChD,qCAAqC,mBAAO,CAAC,0EAAiB;AAC9D,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,aAAa,mBAAO,CAAC,kFAAuB;AAC5C,aAAa,mBAAO,CAAC,sEAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;AClMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,wBAAwB,mBAAO,CAAC,uGAAmC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,kDAAkD,mBAAO,CAAC,6GAA6B;AACvF,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,wBAAwB,mBAAO,CAAC,uGAAmC;AACnE,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,qCAAqC,mBAAO,CAAC,uEAAmB;AAChE,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,0CAA0C,mBAAO,CAAC,uEAAmB;AACrE,mCAAmC,mBAAO,CAAC,mEAAQ;AACnD,iBAAiB,mBAAO,CAAC,iFAAqB;AAC9C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,mCAAmC,mBAAO,CAAC,uEAAmB;AAC9D,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,aAAa,mBAAO,CAAC,yEAAoB;AACzC,mBAAmB,mBAAO,CAAC,qFAA0B;AACrD,yBAAyB,mBAAO,CAAC,iHAAwC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdaAAa;AACbaAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,sFAAsF;AACtF;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,yCAAyC;AACzC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC12BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,kDAAkD,mBAAO,CAAC,6GAA6B;AACvF,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,8DAA8D,mBAAO,CAAC,2IAA4C;AAClH,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,mBAAmB,mBAAO,CAAC,yGAAoC;AAC/D,aAAa,mBAAO,CAAC,6FAA8B;AACnD,wCAAwC,mBAAO,CAAC,uFAAwB;AACxE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpaAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0BAA0B;AAC1D;AACA;AACA;AACA;AACA,iCAAiC,6BAA6B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC9sBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,YAAY,mBAAO,CAAC,+EAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,sDAAsD,mBAAO,CAAC,+HAAsC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,kDAAkD,mBAAO,CAAC,6GAA6B;AACvF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,mBAAmB,mBAAO,CAAC,iFAAwB;AACnD,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,qBAAqB,mBAAO,CAAC,iGAAgC;AAC7D,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,cAAc,mBAAO,CAAC,mFAAyaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qBAAqB;AACrB;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,iCAAiC,mBAAO,CAAC,wGAAgC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,WAAW,mBAAO,CAAC,6EAAsB;AACzC,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,uCAAuC,mBAAO,CAAC,qFAA0B;AACzE,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,+DAAY;AAC1D,iCAAiC,mBAAO,CAAC,qFAAgB;AACzD,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,mBAAmB,mBAAO,CAAC,qFAA0B;AACrD,mCAAmC,mBAAO,CAAC,uEAAmB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACbiBAAiB;AACjB,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClqCAAqC;AACrC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACjyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,8DAA8D,mBAAO,CAAC,uJAAwD;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,+FAA4B;AACjD,iCAAiC,mBAAO,CAAC,mKAA8D;AACvG,8CAA8C,mBAAO,CAAC,iHAA8B;AACpF,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,mCAAmC,mBAAO,CAAC,+EAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrkBAAe;AACf;;;;;;;;;;;ACnhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,0CAA0C,mBAAO,CAAC,yGAAiC;AACnF,2CAA2C,mBAAO,CAAC,6GAAmC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA,2DAA2D,mDAAmD;AAC9G;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,iCAAiC,mBAAO,CAAC,wFAAwB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,WAAW,mBAAO,CAAC,6EAAsB;AACzC,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,eAAe,mBAAO,CAAC,qFAA0B;AACjD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,eAAe,mBAAO,CAAC,qFAA0B;AACjD,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,qCAAqC,mBAAO,CAAC,uEAAmB;AAChE,mCAAmC,mBAAO,CAAC,+EAAuB;AAClE,iCAAiC,mBAAO,CAAC,mFAAiB;AAC1D,iDAAiD,mBAAO,CAAC,2GAAqC;AAC9F,kCAAkC,mBAAO,CAAC,yHAAyC;AACnF,oCAAoC,mBAAO,CAAC,mFAAyB;AACrE,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,iDAAiD,mBAAO,CAAC,mHAAiC;AAC1F,kDAAkD,mBAAO,CAAC,qHAAkC;AAC5F,kDAAkD,mBAAO,CAAC,+GAA+B;AACzF,kDAAkD,mBAAO,CAAC,uIAA2C;AACrG,kDAAkD,mBAAO,CAAC,2GAA6B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,kDAAkD;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdiBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACtpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,yCAAyC,mBAAO,CAAC,yFAAoB;AACrE;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,WAAW,mBAAO,CAAC,6EAAsB;AACzC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,sBAAsB,mBAAO,CAAC,qGAA0B;AACxD,mCAAmC,mBAAO,CAAC,mFAAyB;AACpE,aAAa,mBAAO,CAAC,2GAAqC;AAC1D,aAAa,mBAAO,CAAC,2GAAqC;AAC1D,yCAAyC,mBAAO,CAAC,yFAAoB;AACrE,qCAAqC,mBAAO,CAAC,uFAA2B;AACxE,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjaAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACxmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,uBAAuB,GAAG,kCAAkC;AAC5D,YAAY,mBAAO,CAAC,2GAAqC;AACzD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oFAAoF,aAAa;AACjG;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;;;;;;;;;;ACtLlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,iEAAa;AAC5D,yCAAyC,mBAAO,CAAC,iGAAwB;AACzE,mCAAmC,mBAAO,CAAC,+EAAuB;AAClE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC5LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iDAAiD,mBAAO,CAAC,mHAAiC;AAC1F,iCAAiC,mBAAO,CAAC,iFAAgB;AACzD,mCAAmC,mBAAO,CAAC,mFAAyB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oCAAoC,mBAAO,CAAC,+EAAuB;AACnE,kCAAkC,mBAAO,CAAC,uDAAQ;AAClD,kCAAkC,mBAAO,CAAC,mFAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AClMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,iFAAgB;AACzD,yCAAyC,mBAAO,CAAC,iGAAwB;AACzE,eAAe,mBAAO,CAAC,qFAA0B;AACjD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,kCAAkC,mBAAO,CAAC,mFAAiB;AAC3D,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,mCAAmC,mBAAO,CAAC,mFAAyB;AACpkBAAe;AACf;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,mCAAmC,mBAAO,CAAC,yDAAS;AACpD,yCAAyC,mBAAO,CAAC,iGAAwB;AACzE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,mFAAiB;AAC1D,mCAAmC,mBAAO,CAAC,mFAAyB;AACpE,iDAAiD,mBAAO,CAAC,2GAAqC;AAC9F,aAAa,mBAAO,CAAC,6FAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbsDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,yCAAyC,mBAAO,CAAC,iGAAwB;AACzE,eAAe,mBAAO,CAAC,qFAA0B;AACjD,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,iCAAiC,mBAAO,CAAC,mFAAiB;AAC1D,iDAAiD,mBAAO,CAAC,2GAAqC;AAC9F,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,iDAAiD,mBAAO,CAAC,2GAAqC;AAC9F,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,mCAAmC,mBAAO,CAAC,mFAAyB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,qCAAqC,mBAAO,CAAC,2EAAkB;AAC/D,iCAAiC,mBAAO,CAAC,+FAAuB;AAChE,mCAAmC,mBAAO,CAAC,+EAAuB;AAClE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,kCAAkC,mBAAO,CAAC,mFAAiB;AAC3D,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,oCAAoC,mBAAO,CAAC,mFAAyB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,aAAa,mBAAO,CAAC,yEAAoB;AACzC,iCAAiC,mBAAO,CAAC,mGAA8B;AACvE,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbqBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjkBAAe;AACf;;;;;;;;;;;AC1SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,qCAAqC,mBAAO,CAAC,2EAAkB;AAC/D,yCAAyC,mBAAO,CAAC,qEAAe;AAChE,yCAAyC,mBAAO,CAAC,qEAAe;AAChE,kCAAkC,mBAAO,CAAC,uDAAQ;AAClD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,mCAAmC,mBAAO,CAAC,mFAAyB;AACpE,iCAAiC,mBAAO,CAAC,mFAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC7TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,aAAa,GAAG,cAAc,GAAG,eAAe,GAAG,aAAa,GAAG,2BAA2B;AAC9F,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,wCAAwC,mBAAO,CAAC,0EAAmB;AACnE,qCAAqC,mBAAO,CAAC,oEAAgB;AAC7D,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D,qCAAqC,mBAAO,CAAC,oEAAgB;AAC7D,WAAW,mBAAO,CAAC,0EAAmB;AACtC,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,YAAY,mBAAO,CAAC,4EAAoB;AACxC,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,iBAAiB,mBAAO,CAAC,sFAAyB;AAClD,sCAAsC,mBAAO,CAAC,sFAAyB;AACvE,iCAAiC,mBAAO,CAAC,gFAAoB;AAC7D,oCAAoC,mBAAO,CAAC,0DAAS;AACrD,cAAc,mBAAO,CAAC,gFAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD,2BAA2B;AAC3B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;AChNf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,kBAAkB,mBAAO,CAAC,sFAAyB;AACnD,uCAAuC,mBAAO,CAAC,wFAAwB;AACvE,sCAAsC,mBAAO,CAAC,kFAAuB;AACrE,iBAAiB,mBAAO,CAAC,sFAAyB;AAClD,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,4CAA4C,mBAAO,CAAC,kFAAuB;AAC3E,eAAe,mBAAO,CAAC,sEAAiB;AACxC,aAAa,mBAAO,CAAC,kFAAuB;AAC5C,sCAAsC,mBAAO,CAAC,0EAAmB;AACjE,YAAY,mBAAO,CAAC,oEAAgB;AACpC,uCAAuC,mBAAO,CAAC,kFAAuB;AACtE,YAAY,mBAAO,CAAC,4EAAoB;AACxC,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,iBAAiB,mBAAO,CAAC,sFAAyB;AAClD,sBAAsB,mBAAO,CAAC,wGAAkC;AAChE,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,iBAAiB,mBAAO,CAAC,oFAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjiDAAiD;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;AC11BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,qCAAqC,mBAAO,CAAC,yIAAiD;AAC9F,sCAAsC,mBAAO,CAAC,6DAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iBAAiB,mBAAO,CAAC,iFAAqB;AAC9C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,uCAAuC,mBAAO,CAAC,qFAA0B;AACzE,iBAAiB,mBAAO,CAAC,uFAA2B;AACpD,kCAAkC,mBAAO,CAAC,uGAAuB;AACjE,kCAAkC,mBAAO,CAAC,iFAAqB;AAC/D,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,uCAAuC,mBAAO,CAAC,iEAAa;AAC5D,aAAa,mBAAO,CAAC,yEAAoB;AACzC,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,yBAAyB,mBAAO,CAAC,iHAAwC;AACzE,oCAAoC,mBAAO,CAAC,2DAAU;AACtD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,2EAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbiBAAiB;AACjB,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;AC9uBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,iCAAiC,mBAAO,CAAC,uGAAuB;AAChE,mCAAmC,mBAAO,CAAC,yDAAS;AACpD,kCAAkC,mBAAO,CAAC,iFAAqB;AAC/D,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,kCAAkC,mBAAO,CAAC,mGAA8B;AACxE,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,8BAA8B,mBAAO,CAAC,2HAA6C;AACnF,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,2DAA2D,mBAAO,CAAC,uHAAwC;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACxwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,oBAAoB,GAAG,uBAAuB;AAC9C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;AC1BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,iCAAiC,mBAAO,CAAC,gFAAoB;AAC7D,qCAAqC,mBAAO,CAAC,4DAAU;AACvD,sCAAsC,mBAAO,CAAC,8DAAW;AACzD,0CAA0C,mBAAO,CAAC,oEAAgB;AAClE,mCAAmC,mBAAO,CAAC,wDAAQ;AACnD,cAAc,mBAAO,CAAC,4DAAU;AAChC,8BAA8B,mBAAO,CAAC,wHAA0C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACxaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,oBAAoB,mBAAO,CAAC,mFAAyB;AACrD,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,gDAAgD,mBAAO,CAAC,mFAAsB;AAC9E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,iDAAiD,mBAAO,CAAC,qFAAuB;AAChF,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC9SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,+CAA+C,mBAAO,CAAC,uGAAmC;AAC1F,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,uEAAmB;AACrE,mBAAmB,mBAAO,CAAC,yGAAoC;AAC/D,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,6CAA6C,mBAAO,CAAC,0GAAiC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,iBAAiB;AACjB,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D,oCAAoC,mBAAO,CAAC,2DAAU;AACtD,aAAa,mBAAO,CAAC,2EAAkB;AACvC,kCAAkC,mBAAO,CAAC,6GAAmC;AAC7E,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,yEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,UAAU;AACV,uFAAuF;AACvF;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC5rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,eAAe;AACf,+BAA+B;AAC/B,uBAAuB;AACvB,wBAAwB;AACxB,sBAAsB;AACtB,8BAA8B;AAC9B,6BAA6B;AAC7B,6BAA6B;AAC7B,iCAAiC;AACjC,2BAA2B;AAC3B,0BAA0B;AAC1B,2BAA2B;AAC3B,gBAAgB;AAChB,2BAA2B;AAC3B,2BAA2B;AAC3B,wBAAwB;AACxB,wBAAwB;AACxB,qBAAqB;AACrB,gBAAgB;AAChB,4BAA4B;AAC5B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,iCAAiC;AACjC,yBAAyB;AACzB,mBAAmB;AACnB,oBAAoB;AACpB,eAAe;AACf,wBAAwB;AACxB,uCAAuC;AACvC,kBAAkB;AAClB,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,kCAAkC;AAClC,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,qCAAqC,mBAAO,CAAC,uEAAmB;AAChE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,wCAAwC,mBAAO,CAAC,iFAAqB;AACrE,4CAA4C,mBAAO,CAAC,2EAAqB;AACzE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iBAAiB,mBAAO,CAAC,yFAA4B;AACrD,eAAe,mBAAO,CAAC,6EAAW;AAClC,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,mBAAmB,mBAAO,CAAC,yGAAoC;AAC/D,kCAAkC,mBAAO,CAAC,6HAAmC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,aAAa;AAC7F;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;ACt1BvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,iCAAiC,mBAAO,CAAC,wEAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,wBAAwB;AACxB,uCAAuC,mBAAO,CAAC,8EAAwB;AACvE,YAAY,mBAAO,CAAC,kFAA0B;AAC9C,cAAc,mBAAO,CAAC,sFAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,8BAA8B;AAC9B,uBAAuB;AACvB,uCAAuC,mBAAO,CAAC,8EAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,wFAAwF;AACxF;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,sCAAsC,GAAG,wCAAwC,GAAG,yBAAyB,GAAG,iCAAiC,GAAG,iCAAiC,GAAG,oCAAoC,GAAG,kCAAkC,GAAG,wCAAwC,GAAG,yCAAyC;AACxV,uBAAuB;AACvB,uCAAuC,mBAAO,CAAC,8EAAwB;AACvE,4CAA4C,mBAAO,CAAC,sGAAoC;AACxF,aAAa,mBAAO,CAAC,4EAAuB;AAC5C,eAAe,mBAAO,CAAC,4EAAuB;AAC9C,iBAAiB,mBAAO,CAAC,4FAA+B;AACxD,cAAc,mBAAO,CAAC,sFAA4B;AAClD,cAAc,mBAAO,CAAC,gEAAc;AACpC,iCAAiC,mBAAO,CAAC,oFAAwB;AACjE,wCAAwC,mBAAO,CAAC,sEAAiB;AACjE,iBAAiB,mBAAO,CAAC,wEAAc;AACvC,aAAa,mBAAO,CAAC,0EAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iCAAiC;AACjC;AACA,iCAAiC;AACjC;AACA,wCAAwC;AACxC;AACA,yCAAyC;AACzC;AACA,oCAAoC;AACpC;AACA,kCAAkC;AAClC;AACA,sCAAsC;AACtC;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,qCAAqC,GAAG,sCAAsC,GAAG,sCAAsC,GAAG,mCAAmC,GAAG,uCAAuC;AACvM,mBAAmB;AACnB,oCAAoC;AACpC,uCAAuC,mBAAO,CAAC,8EAAwB;AACvE,YAAY,mBAAO,CAAC,kFAA0B;AAC9C,cAAc,mBAAO,CAAC,sFAA4B;AAClD,iBAAiB,mBAAO,CAAC,wEAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,sCAAsC;AACtC;AACA,uCAAuC;AACvC;AACA,sCAAsC;AACtC;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAA2C;AAC3D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,2CAA2C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;;;;;;;;;;AChJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,oBAAoB,GAAG,kCAAkC,GAAG,wBAAwB,GAAG,8BAA8B,GAAG,iCAAiC,GAAG,6BAA6B,GAAG,4BAA4B,GAAG,+BAA+B,GAAG,iCAAiC,GAAG,qCAAqC,GAAG,gCAAgC,GAAG,wBAAwB,GAAG,gCAAgC,GAAG,iCAAiC,GAAG,kBAAkB,GAAG,4BAA4B,GAAG,sCAAsC,GAAG,8BAA8B,GAAG,yCAAyC,GAAG,0CAA0C,GAAG,gCAAgC,GAAG,wBAAwB;AAChuB;AACA,oBAAoB;AACpB;AACA,kBAAkB;AAClB;AACA,wBAAwB;AACxB;AACA,gCAAgC;AAChC;AACA,iCAAiC;AACjC;AACA,wBAAwB;AACxB;AACA,iCAAiC;AACjC;AACA,sCAAsC;AACtC;AACA,iCAAiC;AACjC;AACA,8BAA8B;AAC9B;AACA,gCAAgC;AAChC;AACA,kCAAkC;AAClC;AACA,8BAA8B;AAC9B;AACA,gCAAgC;AAChC;AACA,0CAA0C;AAC1C;AACA,yCAAyC;AACzC;AACA,qCAAqC;AACrC;AACA,4BAA4B;AAC5B;AACA,6BAA6B;AAC7B;AACA,4BAA4B;AAC5B;AACA,+BAA+B;AAC/B;AACA,wBAAwB;;;;;;;;;;;ACrDxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,qCAAqC,mBAAO,CAAC,yGAA8B;AAC3E,oBAAoB,mBAAO,CAAC,mFAAyB;AACrD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,eAAe,mBAAO,CAAC,+EAAiB;AACxaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,yBAAyB,mBAAO,CAAC,iGAAgC;AACjE,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,qCAAqC,mBAAO,CAAC,2EAAkB;AAC/D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gDAAgD,mBAAO,CAAC,mFAAsB;AAC9E,qCAAqC,mBAAO,CAAC,yGAA8B;AAC3E,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D,kCAAkC,mBAAO,CAAC,mGAA8B;AACxE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,6DAAW;AACjC,sCAAsC,mBAAO,CAAC,6GAAgC;AAC9E,mBAAO,CAAC,iGAA0B;AAClC,eAAe,mBAAO,CAAC,+EAAiB;AACxC,iCAAiC,mBAAO,CAAC,gHAAmC;AAC5E,aAAa,mBAAO,CAAC,qFAAoB;AACzC,mBAAO,CAAC,qFAAuB;AAC/B,mBAAO,CAAC,iFAAqB;AAC7B,iBAAiB,mBAAO,CAAC,uEAAa;AACtC,kBAAkB,mBAAO,CAAC,mFAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA,qCAAqC,8CAA8C;AACnF;AACA;AACA,wCAAwC,+BAA+B;AACvE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sCAAsC;AACtC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;AACV;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACzlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,qCAAqC,mBAAO,CAAC,yGAA8B;AAC3E,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,+CAA+C,mBAAO,CAAC,uGAAmC;AAC1F,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,2CAA2C,mBAAO,CAAC,mFAAyB;AAC5E,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE,iBAAiB,mBAAO,CAAC,uEAAa;AACtC,mBAAO,CAAC,iEAAa;AACrB,mBAAO,CAAC,qEAAe;AACvB,mBAAO,CAAC,mEAAc;AACtB,mBAAO,CAAC,iEAAa;AACrB,mBAAO,CAAC,6DAAW;AACnB,kBAAkB,mBAAO,CAAC,kGAA4B;AACtD,mBAAmB,mBAAO,CAAC,oGAA6B;AACxD,kBAAkB,mBAAO,CAAC,kGAA4B;AACtD,iCAAiC,mBAAO,CAAC,gHAAmC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC9zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,iCAAiC;AACjC,uCAAuC;AACvC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,iBAAiB,mBAAO,CAAC,yFAA4B;AACrD,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,iBAAiB,mBAAO,CAAC,uEAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wBAAwB;AAC7B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,qBAAqB,GAAG,8BAA8B,GAAG,sBAAsB,GAAG,4BAA4B,GAAG,iCAAiC,GAAG,mBAAmB,GAAG,yBAAyB,GAAG,6BAA6B,GAAG,mBAAmB;AAC1P,YAAY,mBAAO,CAAC,+EAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;ACxHnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA,8BAA8B;AAC9B,4CAA4C,mBAAO,CAAC,+FAA+B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;;;;;;;;;;AC1E9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,aAAa,mBAAO,CAAC,yEAAoB;AACzC,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,mCAAmC,mBAAO,CAAC,yDAAS;AACpD,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,cAAc,mBAAO,CAAC,6DAAW;AACjC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACriCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,oBAAoB,mBAAO,CAAC,4GAA6B;AACzD,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,cAAc,mBAAO,CAAC,6DAAW;AACjC,qCAAqC,mBAAO,CAAC,6DAAW;AACxD,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,oCAAoC,mBAAO,CAAC,2DAAU;AACtD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC3cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,aAAa,mBAAO,CAAC,mFAAyB;AAC9C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,0CAA0C,mBAAO,CAAC,yGAAiC;AACnF,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,iCAAiC,mBAAO,CAAC,mGAA8B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa;AACbcAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAuD;AACvD;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,yDAAyD;AACzD;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,sDAAsD;AACtD;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC92BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,mBAAmB,mBAAO,CAAC,4GAA6B;AACxD,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oBAAoB,mBAAO,CAAC,8GAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,uDAAuD;AACvD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA,iCAAiC;AACjC;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AChdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E,+CAA+C,mBAAO,CAAC,uGAAmC;AAC1F,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,qCAAqC,mBAAO,CAAC,uEAAmB;AAChE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,iBAAiB,mBAAO,CAAC,yFAA4B;AACrD,iDAAiD,mBAAO,CAAC,2GAAqC;AAC9F,qCAAqC,mBAAO,CAAC,uFAA2B;AACxE,mCAAmC,mBAAO,CAAC,mFAAyB;AACpE,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,6CAA6C,mBAAO,CAAC,uFAA2B;AAChF,mBAAmB,mBAAO,CAAC,yGAAoC;AAC/D,aAAa,mBAAO,CAAC,6FAA8B;AACnD,wCAAwC,mBAAO,CAAC,iFAAqB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kEAAkE;AAClE;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uCAAuC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD;AACrD;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA,uDAAuD;AACvD,uDAAuD,IAAI,IAAI;AAC/D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,uEAAuE,QAAQ;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,oDAAoD,uBAAuB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,sCAAsC;AACtC;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACpyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,YAAY,mBAAO,CAAC,uEAAmB;AACvC,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,+CAA+C,mBAAO,CAAC,+FAA4B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,mEAAmE;AACnE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wKAAwK;AACxK;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,wBAAwB,wCAAwC;AAChE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdyBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC5nCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA,mBAAmB;AACnB,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,oBAAoB,mBAAO,CAAC,mFAAyB;AACrD,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,aAAa,mBAAO,CAAC,yEAAoB;AACzC,oBAAoB,mBAAO,CAAC,uFAA2B;AACvD,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,4CAA4C,mBAAO,CAAC,uFAA2B;AAC/E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,2CAA2C,mBAAO,CAAC,wHAAmC;AACtF,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA,gBAAgaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,mCAAmC;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,qCAAqC;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,yBAAyB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,oCAAoC;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,kCAAkC;AAClC,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mBAAmB;;;;;;;;;;;ACn+BnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,yEAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,2CAA2C,mBAAO,CAAC,mFAAyB;AAC5E,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,uEAAmB;AACrE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,qBAAqB,mBAAO,CAAC,iGAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oCAAoC,uBAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sDAAsD,qCAAqC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,4CAA4C,qBAAqB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,sGAAsG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA,wEAAwE;AACxE;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iCAAiC;AACjC,8BAA8B;AAC9B;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACzoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E,0CAA0C,mBAAO,CAAC,uGAAgC;AAClF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,mBAAmB,mBAAO,CAAC,iFAAwB;AACnD,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,oFAAoF,IAAI;AACxF;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sBAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;AC3mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,mCAAmC,mBAAO,CAAC,mEAAiB;AAC5D,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,WAAW,mBAAO,CAAC,6EAAsB;AACzC,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,aAAa,mBAAO,CAAC,yEAAoB;AACzC,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,mBAAmB,mBAAO,CAAC,iFAAwB;AACnD,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,6DAAW;AACjC,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,qCAAqC,mBAAO,CAAC,6DAAW;AACxD,oCAAoC,mBAAO,CAAC,2DAAU;AACtD,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,mCAAmC,mBAAO,CAAC,yDAAS;AACpD,mCAAmC,mBAAO,CAAC,uEAAmB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,wCAAwC,mBAAO,CAAC,+EAAuB;AACvE,iCAAiC,mBAAO,CAAC,mGAA8B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,wEAAwE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,4BAA4B;AAC9E;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4IAA4I;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kJAAkJ;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,kDAAkD;AAClD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,sCAAsC;AACtC;AACA;AACA;AACA;AACA,SAAS;AACT,yCAAyC;AACzC,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,qDAAqD;AACrD,gDAAgD;AAChD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACr8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,aAAa,mBAAO,CAAC,yEAAoB;AACzC,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,uCAAuC,mBAAO,CAAC,qFAA0B;AACzE,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iBAAiB,mBAAO,CAAC,uFAA2B;AACpD,iCAAiC,mBAAO,CAAC,6GAAmC;AAC5E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,aAAa,mBAAO,CAAC,yEAAoB;AACzC,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AClKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,6CAA6C,mBAAO,CAAC,+EAAqB;AAC1E,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,0CAA0C,mBAAO,CAAC,yEAAkB;AACpE,oCAAoC,mBAAO,CAAC,6DAAY;AACxD,qBAAqB,mBAAO,CAAC,yFAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,aAAa;AACb,cAAc;AACd,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,mBAAmB,mBAAO,CAAC,yGAAoC;AAC/D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,aAAa,mBAAO,CAAC,yFAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D,aAAa,mBAAO,CAAC,yFAAyB;AAC9C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,iBAAiB,mBAAO,CAAC,yFAA4B;AACrD,oBAAoB,mBAAO,CAAC,8GAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA,iBAAiB;AACjB;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gFAAgF,aAAa;AAC7F;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACtRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,qCAAqC,mBAAO,CAAC,2EAAkB;AAC/D,sCAAsC,mBAAO,CAAC,+DAAY;AAC1D,mCAAmC,mBAAO,CAAC,yDAAS;AACpD,qBAAqB,mBAAO,CAAC,yFAAyB;AACtcAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,kBAAkB;AAClB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oDAAoD;AACpD,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC5wBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,aAAa,mBAAO,CAAC,yFAAyB;AAC9C,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,wCAAwC,mBAAO,CAAC,iFAAqB;AACrE,oBAAoB,mBAAO,CAAC,oIAAyC;AACrkBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACtVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0BAA0B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACxxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,4CAA4C,mBAAO,CAAC,yFAAyB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,kBAAkkBAAe;AACf;;;;;;;;;;;ACrxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,wCAAwC,mBAAO,CAAC,iFAAqB;AACrE,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,oBAAoB,mBAAO,CAAC,wHAAmC;AAC/D,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,aAAa,mBAAO,CAAC,yEAAoB;AACzC,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,6FAA8B;AACnD,mCAAmC,mBAAO,CAAC,mFAAyB;AACpE,+CAA+C,mBAAO,CAAC,uGAAmC;AAC1F,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,qBAAqB,mBAAO,CAAC,yFAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACvbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,yBAAyB,GAAG,4BAA4B,GAAG,wBAAwB;AACnF,4CAA4C;AAC5C,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oCAAoC,mBAAO,CAAC,2DAAU;AACtD,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D,mCAAmC,mBAAO,CAAC,yDAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;ACnYzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,sCAAsC,mBAAO,CAAC,+DAAY;AAC1D,mBAAmB,mBAAO,CAAC,4GAA6B;AACxD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,yBAAyB,mBAAO,CAAC,iGAAgC;AACjE,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,mBAAO,CAAC,6EAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,iBAAiB,mBAAO,CAAC,iFAAqB;AAC9C,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,aAAa,mBAAO,CAAC,yEAAoB;AACzC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,yFAAyB;AAC7E,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,aAAa,mBAAO,CAAC,yEAAoB;AACzC,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdsBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtiBAAiB;AACjB;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdcAAc;AACd;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,kDAAkD,wBAAwB;AAC1E;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC/hEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,8FAAsB;AACxE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iCAAiC;AACjC;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACnTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,uBAAuB;AACvB,gCAAgC;AAChC,gCAAgC;AAChC,gCAAgC;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B;AAC9B,8BAA8B;AAC9B,+BAA+B;AAC/B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACvXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,oCAAoC,mBAAO,CAAC,2DAAU;AACtD,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC7KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,uCAAuC,mBAAO,CAAC,iEAAa;AAC5D,0CAA0C,mBAAO,CAAC,8FAAsB;AACxE,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,0CAA0C,mBAAO,CAAC,8FAAsB;AACxE,oBAAoB,mBAAO,CAAC,4GAA6B;AACzD,iCAAiC,mBAAO,CAAC,mGAA8B;AACvE,2CAA2C,mBAAO,CAAC,mFAAyB;AAC5E,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,iBAAiB;AACjB,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,8EAA8E;AAC9E,iBAAiB;AACjB;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mCAAmC;AACvE;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACv+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,0CAA0C,mBAAO,CAAC,8FAAsB;AACxE,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sBAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iCAAiC;AACjC;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACjVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,0CAA0C,mBAAO,CAAC,uGAAgC;AAClF,0CAA0C,mBAAO,CAAC,8FAAsB;AACxE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,eAAe,mBAAO,CAAC,qFAA0B;AACjD,aAAa,mBAAO,CAAC,yEAAoB;AACzC,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,mCAAmC,mBAAO,CAAC,uEAAmB;AAC9D,wCAAwC,mBAAO,CAAC,uFAAwB;AACxE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mDAAmD,YAAY;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC/tBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,aAAa,mBAAO,CAAC,yEAAoB;AACzC,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,yHAAyC;AAC3F,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,aAAa,mBAAO,CAAC,qFAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AClKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,mBAAmB,mBAAO,CAAC,wHAAmC;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACzPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,8BAA8B;AAC9B,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,eAAe,mBAAO,CAAC,qFAA0B;AACjD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;AACjE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,mDAAmD;AACnD,cAAc;AACd,oDAAoD;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,8BAA8B;;;;;;;;;;;AC3J9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,wCAAwC,mBAAO,CAAC,iFAAqB;AACrE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,yCAAyC,mBAAO,CAAC,qEAAe;AAChE,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,4CAA4C,mBAAO,CAAC,2EAAqB;AACzE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mDAAmD,0BAA0B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACxcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,0CAA0C,mBAAO,CAAC,kGAAwB;AAC1E,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,mBAAmB,mBAAO,CAAC,iFAAwB;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iBAAiB,mBAAO,CAAC,iFAAqB;AAC9C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,qCAAqC,mBAAO,CAAC,6DAAW;AACxD,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,gDAAgD,mBAAO,CAAC,mFAAsB;AAC9E,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D,sCAAsC,mBAAO,CAAC,+DAAY;AAC1D,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6HAA6H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC/yCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,mBAAmB,mBAAO,CAAC,4HAAqC;AAChE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACjQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,yBAAyB;AACzB,yBAAyB;AACzB,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6BAA6B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,iBAAiB;AACjB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,mBAAmB,mBAAO,CAAC,gIAAuC;AAClE,2CAA2C,mBAAO,CAAC,8FAAsB;AACzE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,wDAAwD;AACxD;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACriCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,+BAA+B;AAC/B,6BAA6B;AAC7B,qBAAqB;AACrB,oCAAoC;AACpC,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,uCAAuC,mBAAO,CAAC,qFAA0B;AACzE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,mDAAmD,uBAAuB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,6BAA6B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAqD;AACjF;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD,+BAA+B;;;;;;;;;;;AC1oB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,uFAA2B;AACpE,kCAAkC,mBAAO,CAAC,2GAAqC;AAC/E,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,2CAA2C,mBAAO,CAAC,mFAAyB;AAC5E,kCAAkC,mBAAO,CAAC,0GAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC5bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,uFAA2B;AACpE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AClNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,iCAAiC,mBAAO,CAAC,sGAAmB;AAC5D,kDAAkD,mBAAO,CAAC,yHAAyC;AACnG,yBAAyB,mBAAO,CAAC,iHAAwC;AACzE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU;AACV;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACnMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,yCAAyC,mBAAO,CAAC,gGAA4B;AAC7E,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACrBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,mCAAmC,mBAAO,CAAC,+EAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,gBAAgB;AAChB,qBAAqB;AACrB,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,aAAa,mBAAO,CAAC,yEAAoB;AACzC,aAAa,mBAAO,CAAC,yEAAoB;AACzC,eAAe,mBAAO,CAAC,qFAA0B;AACjD,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,aAAa,mBAAO,CAAC,+FAA4B;AACjD,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,mCAAmC,mBAAO,CAAC,6DAAQ;AACnD,qCAAqC,mBAAO,CAAC,6DAAW;AACxD,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,6DAAW;AACjC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,uEAAgB;AAClE,oBAAoB,mBAAO,CAAC,iHAAqC;AACjE,kDAAkD,mBAAO,CAAC,uIAAgD;AAC1G,yBAAyB,mBAAO,CAAC,iHAAwC;AACzE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,2DAA2D,mBAAO,CAAC,uHAAwC;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC71BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,yCAAyC,mBAAO,CAAC,yHAAsC;AACvF,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,mBAAmB,mBAAO,CAAC,mHAAmC;AAC9D,0CAA0C,mBAAO,CAAC,iGAA0B;AAC5E,sCAAsC,mBAAO,CAAC,+DAAY;AAC1D,cAAc,mBAAO,CAAC,6EAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACtHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,aAAa,mBAAO,CAAC,yEAAoB;AACzC,aAAa,mBAAO,CAAC,qFAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,kBAAkB,mBAAO,CAAC,mHAAmC;AAC7D,0CAA0C,mBAAO,CAAC,iGAA0B;AAC5E,uCAAuC,mBAAO,CAAC,iEAAa;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;;;;;;;;;;ACvFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,aAAa,mBAAO,CAAC,yEAAoB;AACzC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D,2CAA2C,mBAAO,CAAC,iGAA6B;AAChF,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,kBAAkB,mBAAO,CAAC,mHAAmC;AAC7D,0CAA0C,mBAAO,CAAC,iGAA0B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACba;AACb,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,qCAAqC,mBAAO,CAAC,6DAAW;AACxD,kBAAkB,mBAAO,CAAC,mHAAmC;AAC7D,0CAA0C,mBAAO,CAAC,iGAA0B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC1CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,kBAAkB,mBAAO,CAAC,mHAAmC;AAC7D,0CAA0C,mBAAO,CAAC,iGAA0B;AAC5E,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,CAAC;;;;;;;;;;;AC7DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,qCAAqC,mBAAO,CAAC,6DAAW;AACxD,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,kBAAkB,mBAAO,CAAC,mHAAmC;AAC7D,kDAAkD,mBAAO,CAAC,uHAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,yCAAyC,mBAAO,CAAC,iGAA0B;AAC3E,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,eAAe,mBAAO,CAAC,yGAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,yEAAoB;AACzC,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,eAAe,mBAAO,CAAC,yGAAoC;AAC3D,yCAAyC,mBAAO,CAAC,yHAAsC;AACvF,mBAAmB,mBAAO,CAAC,mHAAmC;AAC9D,kDAAkD,mBAAO,CAAC,uHAAqC;AAC/F,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,cAAc,mBAAO,CAAC,6DAAW;AACjC,2CAA2C,mBAAO,CAAC,yEAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AChPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,sEAAsE;AACtE;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,gBAAgB;AAChB,gBAAgB;AAChB,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iDAAiD,mBAAO,CAAC,+GAAiC;AAC1F,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,yCAAyC,mBAAO,CAAC,+FAAyB;AAC1E,cAAc,mBAAO,CAAC,6EAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACbkBAAe;AACf;;;;;;;;;;;ACtSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,kBAAkB,mBAAO,CAAC,mHAAmC;AAC7D,mBAAO,CAAC,+GAAiC;AACzC,mBAAO,CAAC,qIAA4C;AACpD,mBAAO,CAAC,mIAA2C;AACnD,mBAAO,CAAC,6GAAgC;AACxC,mBAAO,CAAC,iHAAkC;AAC1C,mBAAO,CAAC,qHAAoC;AAC5C,mBAAO,CAAC,iHAAkC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,qCAAqC,mBAAO,CAAC,6EAAgB;AAC7D,iCAAiC,mBAAO,CAAC,qGAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,2CAA2C,mBAAO,CAAC,mFAAyB;AAC5E,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,8DAA8D,mBAAO,CAAC,uJAAwD;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,eAAe,mBAAO,CAAC,kFAAuB;AAC9C,cAAc,mBAAO,CAAC,4DAAU;AAChC,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,iCAAiC,mBAAO,CAAC,gFAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4DAA4D,QAAQ;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACzKtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,sCAAsC,mBAAO,CAAC,sFAAyB;AACvE,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,6CAA6C,mBAAO,CAAC,4EAAkB;AACvE,sCAAsC,mBAAO,CAAC,8DAAW;AACzD,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,cAAc,mBAAO,CAAC,4DAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;AC9KtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,iCAAiC,mBAAO,CAAC,wEAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,2EAAkB;AACvC,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,aAAa,mBAAO,CAAC,yEAAoB;AACzC,iCAAiC,mBAAO,CAAC,mGAA8B;AACvE,sCAAsC,mBAAO,CAAC,+DAAY;AAC1D,kCAAkC,mBAAO,CAAC,yEAAc;AACxD,qCAAqC,mBAAO,CAAC,6DAAW;AACxD,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC3xBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,uCAAuC,mBAAO,CAAC,qFAA0B;AACzE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,2CAA2C,mBAAO,CAAC,yEAAiB;AACpkBAAkB;AAClB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC3LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,mBAAmB,mBAAO,CAAC,sFAAyB;AACpD,oBAAoB,mBAAO,CAAC,oHAAsC;AAClE,YAAY,mBAAO,CAAC,4EAAoB;AACxC,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,yBAAyB,mBAAO,CAAC,8FAA6B;AAC9D,eAAe,mBAAO,CAAC,sEAAiB;AACxC,YAAY,mBAAO,CAAC,4EAAoB;AACxC,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,kDAAkD,mBAAO,CAAC,sIAA+C;AACzG,wCAAwC,mBAAO,CAAC,8FAA6B;AAC7E,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACbkBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACtVtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,iBAAiB,GAAG,mBAAmB;AACvC,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,mBAAmB,mBAAO,CAAC,yFAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;ACzCjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,yCAAyC,mBAAO,CAAC,0FAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,iCAAiC,mBAAO,CAAC,+FAA4B;AACrE,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,yCAAyC,mBAAO,CAAC,2FAAoB;AACrE,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC3XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,0BAA0B,GAAG,2BAA2B;AACxD,4BAA4B;AAC5B,2BAA2B,GAAG,0BAA0B,GAAG,sBAAsB;AACjF,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,qCAAqC,mBAAO,CAAC,uFAA2B;AACxE,aAAa,mBAAO,CAAC,qEAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;AC/ItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,yCAAyC,mBAAO,CAAC,yFAAmB;AACpE;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,qCAAqC,mBAAO,CAAC,uFAA2B;AACxE,kBAAkB,mBAAO,CAAC,2FAAoB;AAC9C,eAAe,mBAAO,CAAC,iGAAgC;AACvD,0CAA0C,mBAAO,CAAC,yFAAmB;AACrE,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,qEAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACbcAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClkBAAe;AACf;;;;;;;;;;;ACxpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,eAAe,mBAAO,CAAC,yGAAoC;AAC3D,mCAAmC,mBAAO,CAAC,uEAAmB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,qCAAqC,mBAAO,CAAC,yIAAiD;AAC9F,yCAAyC,mBAAO,CAAC,yFAAmB;AACpE,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,oBAAoB,GAAG,6BAA6B,GAAG,wBAAwB,GAAG,0BAA0B;AAC5G,YAAY,mBAAO,CAAC,+EAAuB;AAC3C;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,0BAA0B;;;;;;;;;;;ACpD1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,iCAAiC,mBAAO,CAAC,oFAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,uCAAuC,mBAAO,CAAC,qFAA0B;AACzE,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,sBAAsB,mBAAO,CAAC,2GAAqC;AACnE,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,WAAW,mBAAO,CAAC,6EAAsB;AACzC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,8CAA8C,mBAAO,CAAC,qGAAkC;AACxF,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,iBAAiB,mBAAO,CAAC,yFAA4B;AACrD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,YAAY,mBAAO,CAAC,uEAAmB;AACvC,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,aAAa,mBAAO,CAAC,yEAAoB;AACzC,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,yBAAyB,mBAAO,CAAC,iGAAgC;AACjE,qBAAqB,mBAAO,CAAC,yFAA4B;AACzD,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D,iBAAiB,mBAAO,CAAC,iFAAqB;AAC9C,+CAA+C,mBAAO,CAAC,+FAA4B;AACnF,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,yCAAyC,mBAAO,CAAC,sEAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdvD;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbiBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC5wCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,mCAAmC;AACnC,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;;;;;;;;;;ACtCnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,YAAY;AACnE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;ACpClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,oCAAoC,mBAAO,CAAC,kEAAe;AAC3D,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,YAAY,mBAAO,CAAC,4EAAoB;AACxC,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,aAAa,mBAAO,CAAC,sEAAiB;AACtC,sCAAsC,mBAAO,CAAC,0EAAmB;AACjE,sCAAsC,mBAAO,CAAC,sFAAyB;AACvE,iCAAiC,mBAAO,CAAC,gFAAoB;AAC7D,yCAAyC,mBAAO,CAAC,oEAAc;AAC/D,yCAAyC,mBAAO,CAAC,oEAAc;AAC/D,aAAa,mBAAO,CAAC,kFAAuB;AAC5C,qBAAqB,mBAAO,CAAC,wFAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA,cAAc;AACd,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA,cAAc;AACd,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;AACA;;;;;;;;;;;ACpnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,eAAe,mBAAO,CAAC,sEAAiB;AACxC,0CAA0C,mBAAO,CAAC,8EAAqB;AACvE,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,kBAAkB,mBAAO,CAAC,sFAAyB;AACnD,uCAAuC,mBAAO,CAAC,kFAAuB;AACtE,YAAY,mBAAO,CAAC,4EAAoB;AACxC,YAAY,mBAAO,CAAC,4EAAoB;AACxC,aAAa,mBAAO,CAAC,kFAAuB;AAC5C,oCAAoC,mBAAO,CAAC,0DAAS;AACrD,iBAAiB,mBAAO,CAAC,oFAAwB;AACjD,wBAAwB,mBAAO,CAAC,gFAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;AC/dtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,+BAA+B;AAC/B;AACA,+BAA+B;;;;;;;;;;;ACX/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,kBAAkB,mBAAO,CAAC,sFAAyB;AACnD,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D,eAAe,mBAAO,CAAC,sEAAiB;AACxC,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,sBAAsB,mBAAO,CAAC,wGAAkC;AAChE,aAAa,mBAAO,CAAC,8EAAqB;AAC1C,sCAAsC,mBAAO,CAAC,kFAAuB;AACrE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,iBAAiB,mBAAO,CAAC,sFAAyB;AAClD,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,YAAY,mBAAO,CAAC,4EAAoB;AACxC,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,YAAY,mBAAO,CAAC,4EAAoB;AACxC,eAAe,mBAAO,CAAC,kFAAuB;AAC9C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,yBAAyB,mBAAO,CAAC,8FAA6B;AAC9D,sCAAsC,mBAAO,CAAC,sFAAyB;AACvE,qCAAqC,mBAAO,CAAC,4DAAU;AACvD,sCAAsC,mBAAO,CAAC,8DAAW;AACzD,cAAc,mBAAO,CAAC,4DAAU;AAChC,mBAAO,CAAC,8FAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,SAAS,oBAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACrqBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,+FAA4B;AACjD,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,qCAAqC,mBAAO,CAAC,2EAAkB;AAC/D,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,aAAa,mBAAO,CAAC,yEAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,kBAAkB,mBAAO,CAAC,sFAAyB;AACnD,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,4CAA4C,mBAAO,CAAC,kFAAuB;AAC3E,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,aAAa,mBAAO,CAAC,8EAAqB;AAC1C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,YAAY,mBAAO,CAAC,4EAAoB;AACxC,YAAY,mBAAO,CAAC,4EAAoB;AACxC,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,YAAY,mBAAO,CAAC,oEAAgB;AACpC,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,aAAa,mBAAO,CAAC,kFAAuB;AAC5C,yBAAyB,mBAAO,CAAC,8FAA6B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qCAAqC;AACtD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACvYtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,YAAY,mBAAO,CAAC,4EAAoB;AACxC,iCAAiC,mBAAO,CAAC,gFAAoB;AAC7D,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,kCAAkC,mBAAO,CAAC,sDAAO;AACjD,kDAAkD,mBAAO,CAAC,wHAAwC;AAClaAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB;AACnE,8CAA8C,yBAAyB;AACvE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,+CAA+C;AAC/C;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0CAA0C;AACzF;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iDAAiD,+BAA+B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACvhBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,iCAAiC,mBAAO,CAAC,oGAA8B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,aAAa,mBAAO,CAAC,+EAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6GAAsC;AACpF,kDAAkD,mBAAO,CAAC,+GAAuC;AACjG,aAAa,mBAAO,CAAC,+EAAuB;AAC5C,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,eAAe,mBAAO,CAAC,qFAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC5QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,kDAAkD,mBAAO,CAAC,0HAAmC;AAC7F,mDAAmD,mBAAO,CAAC,4HAAoC;AAC/F,4CAA4C,mBAAO,CAAC,4GAA4B;AAChF,iCAAiC,mBAAO,CAAC,sFAAiB;AAC1D,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE,cAAc,mBAAO,CAAC,+DAAa;AACnC,yCAAyC,mBAAO,CAAC,qEAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACjRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,2CAA2C,mBAAO,CAAC,oGAAwB;AAC3E,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnaAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACxOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,2CAA2C,mBAAO,CAAC,oGAAwB;AAC3E,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdkBAAe;AACf;;;;;;;;;;;ACjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,wCAAwC,mBAAO,CAAC,yFAA4B;AAC5E,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oBAAoB,mBAAO,CAAC,0GAA2B;AACvD,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACdkBAAe;AACf;;;;;;;;;;;ACxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,8BAA8B;AAC9B,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,eAAe,mBAAO,CAAC,qFAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8BAA8B;;;;;;;;;;;ACtC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,eAAe,mBAAO,CAAC,qFAA0B;AACjD,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,4CAA4C,mBAAO,CAAC,qFAA0B;AAC9E,iBAAiB,mBAAO,CAAC,iFAAqB;AAC9C,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,qDAAqD,mBAAO,CAAC,4HAAoC;AACjG,oBAAoB,mBAAO,CAAC,0GAA2B;AACvD,4CAA4C,mBAAO,CAAC,oGAAwB;AAC5E,qBAAqB,mBAAO,CAAC,oGAAwB;AACrD,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACthBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,iCAAiC,mBAAO,CAAC,oFAAgB;AACzkDAAkD;AAClD;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC5RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,yBAAyB,GAAG,gBAAgB;AAC5C,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,iBAAiB,mBAAO,CAAC,yFAA4B;AACrD,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,uCAAuC,mBAAO,CAAC,4EAAY;AAC3D,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iCAAiC,mBAAO,CAAC,oFAAgB;AACzD,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD,yBAAyB;;;;;;;;;;;AC/5BzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,8CAA8C,mBAAO,CAAC,qGAAkC;AACxF,kBAAkB,mBAAO,CAAC,yFAA4B;AACtD,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACrOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,YAAY,mBAAO,CAAC,4EAAoB;AACxC,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,aAAa,mBAAO,CAAC,8EAAqB;AAC1C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,eAAe,mBAAO,CAAC,sEAAiB;AACxC,qCAAqC,mBAAO,CAAC,oEAAgB;AAC7D,0CAA0C,mBAAO,CAAC,8EAAqB;AACvE,aAAa,mBAAO,CAAC,8FAA2B;AAChD,sCAAsC,mBAAO,CAAC,sFAAyB;AACvE,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,iCAAiC,mBAAO,CAAC,oHAAsC;AAC/E,aAAa,mBAAO,CAAC,kFAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbcAAc;AACd;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdkBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACxsBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,gDAAgD,mBAAO,CAAC,gHAA+B;AACvF,iDAAiD,mBAAO,CAAC,gHAA+B;AACxF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,uCAAuC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,wCAAwC,mBAAO,CAAC,8FAAsB;AACtE,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,qBAAqB,mBAAO,CAAC,iGAAgC;AAC7D,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,wBAAwB,mBAAO,CAAC,uGAAmC;AACnE,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,wCAAwC,mBAAO,CAAC,8FAAsB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mFAAmF;AACnF,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6CAA6C,wDAAwD;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACrXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,mBAAmB;AACnB,8BAA8B;AAC9B,oBAAoB;AACpB,kBAAkB;AAClB,mBAAmB;AACnB,iCAAiC;AACjC,mCAAmC;AACnC,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,gBAAgB,mBAAO,CAAC,uFAA2B;AACncAAc;AACd;AACA;AACA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,YAAY,mBAAO,CAAC,+EAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,+CAA+C,mBAAO,CAAC,uGAAmC;AAC1F,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,aAAa,mBAAO,CAAC,6FAA8B;AACnD,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,mBAAO,CAAC,iEAAa;AACrB,mBAAO,CAAC,qEAAe;AACvB,mBAAO,CAAC,mEAAc;AACtB,mBAAO,CAAC,qEAAe;AACvB,mBAAO,CAAC,iEAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACtTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,wCAAwC,mBAAO,CAAC,kEAAa;AAC7D,eAAe,mBAAO,CAAC,sEAAiB;AACxC,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,kBAAkB,mBAAO,CAAC,sFAAyB;AACnD,iCAAiC,mBAAO,CAAC,sEAAiB;AAC1D,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,+DAA+D;AAC/D,8CAA8C;AAC9C,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;AC1yBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,eAAe,mBAAO,CAAC,kFAAuB;AAC9C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D,0CAA0C,mBAAO,CAAC,8EAAqB;AACvE,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,yCAAyC,mBAAO,CAAC,oEAAc;AAC/D,mCAAmC,mBAAO,CAAC,wDAAQ;AACnD,mCAAmC,mBAAO,CAAC,4EAAkB;AAC7D,YAAY,mBAAO,CAAC,4EAAoB;AACxC,eAAe,mBAAO,CAAC,sEAAiB;AACxC,YAAY,mBAAO,CAAC,4EAAoB;AACxC,yBAAyB,mBAAO,CAAC,8GAAqC;AACtE,cAAc,mBAAO,CAAC,gFAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACbkBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACtUtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,mCAAmC,mBAAO,CAAC,+EAAoB;AAC/D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,sCAAsC,mBAAO,CAAC,sEAAiB;AAC/D,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,qCAAqC,mBAAO,CAAC,4DAAU;AACvD,aAAa,mBAAO,CAAC,8FAA2B;AAChD,aAAa,mBAAO,CAAC,kFAAuB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,YAAY,mBAAO,CAAC,4EAAoB;AACxC,sCAAsC,mBAAO,CAAC,0EAAmB;AACjE,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,mCAAmC,mBAAO,CAAC,kEAAa;AACxD,iBAAiB,mBAAO,CAAC,4EAAkB;AAC3C,cAAc,mBAAO,CAAC,4DAAU;AAChC,mCAAmC,mBAAO,CAAC,oEAAgB;AAC3D,iCAAiC,mBAAO,CAAC,kGAA6B;AACtE,kDAAkD,mBAAO,CAAC,sIAA+C;AACzG,YAAY,mBAAO,CAAC,4EAAoB;AACxC,yBAAyB,mBAAO,CAAC,8GAAqC;AACtE,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjaAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACrZtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,2BAA2B;AAC3B;AACA,2BAA2B;;;;;;;;;;;ACX3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,mCAAmC,mBAAO,CAAC,+EAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,kFAAqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,iCAAiC,mBAAO,CAAC,qFAAkB;AAC3D,aAAa,mBAAO,CAAC,qkBAAe;AACf;;;;;;;;;;;AC1JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,8EAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,8EAAwB;AACvE,qCAAqC,mBAAO,CAAC,kGAAU;AACvD,sCAAsC,mBAAO,CAAC,gEAAc;AAC5D,cAAc,mBAAO,CAAC,sFAA4B;AAClD,4CAA4C,mBAAO,CAAC,sGAAoC;AACxF,aAAa,mBAAO,CAAC,4EAAuB;AAC5C,aAAa,mBAAO,CAAC,4EAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,8EAAwB;AACvE,qCAAqC,mBAAO,CAAC,kGAAU;AACvD,cAAc,mBAAO,CAAC,sFAA4B;AAClD,aAAa,mBAAO,CAAC,oFAA2B;AAChD,iCAAiC,mBAAO,CAAC,oFAAwB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,WAAW,mBAAO,CAAC,6EAAsB;AACzC,iBAAiB,mBAAO,CAAC,iFAAqB;AAC9C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,6DAAW;AACjC,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,qCAAqC,mBAAO,CAAC,2EAAkB;AAC/D,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,4CAA4C,mBAAO,CAAC,iGAAwB;AAC5E,qCAAqC,mBAAO,CAAC,6HAAsC;AACnF,qCAAqC,mBAAO,CAAC,uEAAmB;AAChE,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjaAAa;AACbkBAAe;AACf;;;;;;;;;;;ACtpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,qCAAqC,mBAAO,CAAC,+HAAuC;AACpF,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,aAAa,mBAAO,CAAC,yEAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,4CAA4C,mBAAO,CAAC,+FAAuB;AAC3E;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,oCAAoC,mBAAO,CAAC,+EAAe;AAC3D,cAAc,mBAAO,CAAC,mFAAiB;AACvC,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,iBAAiB,mBAAO,CAAC,iFAAqB;AAC9C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,mFAAyB;AAC9C,yBAAyB,mBAAO,CAAC,yGAA4B;AAC7D,4CAA4C,mBAAO,CAAC,+FAAuB;AAC3E,wDAAwD,mBAAO,CAAC,iIAAwC;AACxG,yDAAyD,mBAAO,CAAC,2IAA6C;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,gDAAgD;AAChD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjkBAAe;AACf;;;;;;;;;;;AC/eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,oBAAoB,GAAG,gBAAgB,GAAG,qBAAqB;AAC/D,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,oBAAoB;;;;;;;;;;;AClPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,WAAW,mBAAO,CAAC,6EAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;;;;;ACzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,wDAAwD,mBAAO,CAAC,2HAAqC;AACrG,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6FAA8B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,wDAAwD,mBAAO,CAAC,2HAAqC;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC/JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,sCAAsC,mBAAO,CAAC,qFAA0B;AACxE,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,gCAAgC;AAChC,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,aAAa,mBAAO,CAAC,8EAAqB;AAC1C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,gDAAgD,mBAAO,CAAC,gIAA4C;AACpG,iDAAiD,mBAAO,CAAC,oIAA8C;AACvG,wCAAwC,mBAAO,CAAC,8FAA2B;AAC3E,8BAA8B,mBAAO,CAAC,wHAA0C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;AC/NtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,qBAAqB;AACrB;AACA,qBAAqB;;;;;;;;;;;ACXrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,6DAAW;AACjC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,aAAa,mBAAO,CAAC,iFAAwB;AAC7C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,kDAAkD,mBAAO,CAAC,2HAA0C;AACpG,sCAAsC,mBAAO,CAAC,6FAA8B;AAC5E,yBAAyB,mBAAO,CAAC,iHAAwC;AACzE,qCAAqC,mBAAO,CAAC,uEAAmB;AAChE,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,iBAAiB,mBAAO,CAAC,0EAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACrYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,cAAc,mBAAO,CAAC,mFAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,wCAAwC,mBAAO,CAAC,8FAAuB;AACvE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,2CAA2C,mBAAO,CAAC,yEAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,qCAAqC;AACrC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,qCAAqC;AACrC;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,wCAAwC,mBAAO,CAAC,8FAAuB;AACvE,yCAAyC,mBAAO,CAAC,sFAAmB;AACpE,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE,sCAAsC,mBAAO,CAAC,yEAAoB;AAClE,wBAAwB,mBAAO,CAAC,iFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D,qCAAqC,mBAAO,CAAC,6DAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,0CAA0C,mBAAO,CAAC,0GAAiC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,0CAA0C,mBAAO,CAAC,iFAAwB;AAC1E,4CAA4C,mBAAO,CAAC,mGAAiC;AACrF,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,aAAa,mBAAO,CAAC,yEAAoB;AACzC,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,YAAY,mBAAO,CAAC,+EAAuB;AAC3C,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,wCAAwC,mBAAO,CAAC,mEAAc;AAC9D,iCAAiC,mBAAO,CAAC,mKAA8D;AACvG,aAAa,mBAAO,CAAC,qFAA0B;AAC/C,sCAAsC,mBAAO,CAAC,6EAAsB;AACpE,oBAAoB,mBAAO,CAAC,uFAA2B;AACvD,iCAAiC,mBAAO,CAAC,yEAAoB;AAC7D,kCAAkC,mBAAO,CAAC,mGAA8B;AACxE,6CAA6C,mBAAO,CAAC,6EAAmB;AACxE,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD,kCAAkC,mBAAO,CAAC,iFAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sFAAsF;AACtrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8HAA8H;AAC9H;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACh0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,oDAAoD,mBAAO,CAAC,qGAAkC;AAC9F,iCAAiC,mBAAO,CAAC,qGAA+B;AACxE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,0CAA0C,mBAAO,CAAC,4FAAqB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oCAAoC,mBAAO,CAAC,qEAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAe;AACf;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,4CAA4C,mBAAO,CAAC,kFAAuB;AAC3E,iDAAiD,mBAAO,CAAC,oFAAsB;AAC/E,gDAAgD,mBAAO,CAAC,kFAAqB;AAC7E,wCAAwC,mBAAO,CAAC,kEAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACpFtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,wEAAkB;AACjE,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,sCAAsC,mBAAO,CAAC,8DAAW;AACzD,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClkBAAe;AACf;;;;;;;;;;;ACzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,4CAA4C,mBAAO,CAAC,gGAA8B;AAClF,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,gDAAgD,mBAAO,CAAC,kFAAqB;AAC7E,kDAAkD,mBAAO,CAAC,wHAAwC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;ACjLtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,oBAAoB,mBAAO,CAAC,gFAAsB;AAClD,wCAAwC,mBAAO,CAAC,sFAAyB;AACzE,iCAAiC,mBAAO,CAAC,gFAAoB;AAC7D,4CAA4C,mBAAO,CAAC,kFAAuB;AAC3E,cAAc,mBAAO,CAAC,gFAAsB;AAC5C,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,gDAAgD,mBAAO,CAAC,kFAAqB;AAC7E,8CAA8C,mBAAO,CAAC,oGAA8B;AACpF,oDAAoD,mBAAO,CAAC,kGAA+B;AAC3F,gBAAgB,mBAAO,CAAC,oFAAwB;AAChD,mCAAmC,mBAAO,CAAC,gEAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gEAAgE;AAChE;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAe;AACf;AACA,yBAAsB;;;;;;;;;;;AC5RtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,iBAAiB,mBAAO,CAAC,yFAA4B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,kBAAe;AACf,uCAAuC,mBAAO,CAAC,2EAAqB;AACpE,cAAc,mBAAO,CAAC,mFAAyB;AAC/C,sCAAsC,mBAAO,CAAC,yFAA4B;AAC1E,uCAAuC,mBAAO,CAAC,iEAAa;AAC5D,iCAAiC,mBAAO,CAAC,iFAAqB;AAC9D,gBAAgB,mBAAO,CAAC,uFAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf","sources":["webpack://websdk/../../node_modules/devextreme/animation/easing.js","webpack://websdk/../../node_modules/devextreme/animation/fx.js","webpack://websdk/../../node_modules/devextreme/animation/position.js","webpack://websdk/../../node_modules/devextreme/animation/translator.js","webpack://websdk/../../node_modules/devextreme/core/templates/bindable_template.js","webpack://websdk/../../node_modules/devextreme/core/utils/array_compare.js","webpack://websdk/../../node_modules/devextreme/core/utils/date.js","webpack://websdk/../../node_modules/devextreme/core/utils/date_serialization.js","webpack://websdk/../../node_modules/devextreme/core/utils/position.js","webpack://websdk/../../node_modules/devextreme/core/utils/selection_filter.js","webpack://websdk/../../node_modules/devextreme/data_helper.js","webpack://websdk/../../node_modules/devextreme/events/contextmenu.js","webpack://websdk/../../node_modules/devextreme/events/double_click.js","webpack://websdk/../../node_modules/devextreme/events/drag.js","webpack://websdk/../../node_modules/devextreme/events/gesture/emitter.gesture.js","webpack://websdk/../../node_modules/devextreme/events/gesture/swipeable.js","webpack://websdk/../../node_modules/devextreme/events/hold.js","webpack://websdk/../../node_modules/devextreme/events/swipe.js","webpack://websdk/../../node_modules/devextreme/format_helper.js","webpack://websdk/../../node_modules/devextreme/mobile/hide_callback.js","webpack://websdk/../../node_modules/devextreme/ui/action_sheet.js","webpack://websdk/../../node_modules/devextreme/ui/box.js","webpack://websdk/../../node_modules/devextreme/ui/calendar.js","webpack://websdk/../../node_modules/devextreme/ui/calendar/ui.calendar.base_view.js","webpack://websdk/../../node_modules/devextreme/ui/calendar/ui.calendar.js","webpack://websdk/../../node_modules/devextreme/ui/calendar/ui.calendar.navigator.js","webpack://websdk/../../node_modules/devextreme/ui/calendar/ui.calendar.views.js","webpack://websdk/../../node_modules/devextreme/ui/check_box.js","webpack://websdk/../../node_modules/devextreme/ui/collection/item.js","webpack://websdk/../../node_modules/devextreme/ui/collection/ui.collection_widget.async.js","webpack://websdk/../../node_modules/devextreme/ui/collection/ui.collection_widget.base.js","webpack://websdk/../../node_modules/devextreme/ui/collection/ui.collection_widget.edit.js","webpack://websdk/../../node_modules/devextreme/ui/collection/ui.collection_widget.edit.strategy.js","webpack://websdk/../../node_modules/devextreme/ui/collection/ui.collection_widget.edit.strategy.plain.js","webpack://websdk/../../node_modules/devextreme/ui/collection/ui.collection_widget.live_update.js","webpack://websdk/../../node_modules/devextreme/ui/context_menu.js","webpack://websdk/../../node_modules/devextreme/ui/context_menu/ui.context_menu.js","webpack://websdk/../../node_modules/devextreme/ui/context_menu/ui.menu_base.edit.strategy.js","webpack://websdk/../../node_modules/devextreme/ui/context_menu/ui.menu_base.js","webpack://websdk/../../node_modules/devextreme/ui/data_grid/ui.data_grid.core.js","webpack://websdk/../../node_modules/devextreme/ui/date_box.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.base.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.mask.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.mask.parts.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.strategy.calendar.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.strategy.calendar_with_time.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.strategy.date_view.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.strategy.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.strategy.list.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_box.strategy.native.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_utils.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_view.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.date_view_roller.js","webpack://websdk/../../node_modules/devextreme/ui/date_box/ui.time_view.js","webpack://websdk/../../node_modules/devextreme/ui/dialog.js","webpack://websdk/../../node_modules/devextreme/ui/draggable.js","webpack://websdk/../../node_modules/devextreme/ui/drop_down_editor/ui.drop_down_button.js","webpack://websdk/../../node_modules/devextreme/ui/drop_down_editor/ui.drop_down_editor.js","webpack://websdk/../../node_modules/devextreme/ui/drop_down_editor/ui.drop_down_list.js","webpack://websdk/../../node_modules/devextreme/ui/drop_down_editor/utils.js","webpack://websdk/../../node_modules/devextreme/ui/drop_down_menu.js","webpack://websdk/../../node_modules/devextreme/ui/editor/editor.js","webpack://websdk/../../node_modules/devextreme/ui/editor/ui.data_expression.js","webpack://websdk/../../node_modules/devextreme/ui/filter_builder.js","webpack://websdk/../../node_modules/devextreme/ui/filter_builder/between.js","webpack://websdk/../../node_modules/devextreme/ui/filter_builder/filter_builder.js","webpack://websdk/../../node_modules/devextreme/ui/filter_builder/ui.filter_operations_dictionary.js","webpack://websdk/../../node_modules/devextreme/ui/filter_builder/utils.js","webpack://websdk/../../node_modules/devextreme/ui/form.js","webpack://websdk/../../node_modules/devextreme/ui/form/components/button_item.js","webpack://websdk/../../node_modules/devextreme/ui/form/components/empty_item.js","webpack://websdk/../../node_modules/devextreme/ui/form/components/field_item.js","webpack://websdk/../../node_modules/devextreme/ui/form/components/label.js","webpack://websdk/../../node_modules/devextreme/ui/form/constants.js","webpack://websdk/../../node_modules/devextreme/ui/form/ui.form.item_option_action.js","webpack://websdk/../../node_modules/devextreme/ui/form/ui.form.item_options_actions.js","webpack://websdk/../../node_modules/devextreme/ui/form/ui.form.items_runtime_info.js","webpack://websdk/../../node_modules/devextreme/ui/form/ui.form.js","webpack://websdk/../../node_modules/devextreme/ui/form/ui.form.layout_manager.js","webpack://websdk/../../node_modules/devextreme/ui/form/ui.form.layout_manager.utils.js","webpack://websdk/../../node_modules/devextreme/ui/form/ui.form.utils.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.accessibility.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.adaptivity.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.column_chooser.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.column_fixing.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.column_headers.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.column_state_mixin.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.columns_controller.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.columns_resizing_reordering.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.columns_view.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.context_menu.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.data_controller.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.data_source_adapter.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.editing.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.editor_factory.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.error_handling.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.filter_builder.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.filter_custom_operations.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.filter_panel.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.filter_row.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.filter_sync.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.focus.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.grid_view.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.header_filter.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.header_filter_core.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.header_panel.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.keyboard_navigation.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.master_detail.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.modules.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.pager.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.row_dragging.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.rows.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.search.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.selection.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.sorting.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.sorting_mixin.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.state_storing.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.state_storing_core.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.utils.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.validating.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.virtual_columns.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.virtual_columns_core.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.virtual_scrolling.js","webpack://websdk/../../node_modules/devextreme/ui/grid_core/ui.grid_core.virtual_scrolling_core.js","webpack://websdk/../../node_modules/devextreme/ui/hierarchical_collection/ui.data_adapter.js","webpack://websdk/../../node_modules/devextreme/ui/hierarchical_collection/ui.data_converter.js","webpack://websdk/../../node_modules/devextreme/ui/hierarchical_collection/ui.hierarchical_collection_widget.js","webpack://websdk/../../node_modules/devextreme/ui/list.js","webpack://websdk/../../node_modules/devextreme/ui/list/item.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.base.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator.context.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator.reorder.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator.selection.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator.static.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator.swipe.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator.switchable.button.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator.switchable.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator.switchable.slide.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator_menu_helper.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.decorator_registry.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.provider.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.search.js","webpack://websdk/../../node_modules/devextreme/ui/list/ui.list.edit.strategy.grouped.js","webpack://websdk/../../node_modules/devextreme/ui/load_indicator.js","webpack://websdk/../../node_modules/devextreme/ui/load_panel.js","webpack://websdk/../../node_modules/devextreme/ui/menu.js","webpack://websdk/../../node_modules/devextreme/ui/menu/ui.menu.js","webpack://websdk/../../node_modules/devextreme/ui/menu/ui.submenu.js","webpack://websdk/../../node_modules/devextreme/ui/multi_view.js","webpack://websdk/../../node_modules/devextreme/ui/multi_view/ui.multi_view.animation.js","webpack://websdk/../../node_modules/devextreme/ui/number_box.js","webpack://websdk/../../node_modules/devextreme/ui/number_box/number_box.base.js","webpack://websdk/../../node_modules/devextreme/ui/number_box/number_box.caret.js","webpack://websdk/../../node_modules/devextreme/ui/number_box/number_box.js","webpack://websdk/../../node_modules/devextreme/ui/number_box/number_box.mask.js","webpack://websdk/../../node_modules/devextreme/ui/number_box/number_box.spin.js","webpack://websdk/../../node_modules/devextreme/ui/number_box/number_box.spins.js","webpack://websdk/../../node_modules/devextreme/ui/number_box/utils.js","webpack://websdk/../../node_modules/devextreme/ui/overlay.js","webpack://websdk/../../node_modules/devextreme/ui/overlay/ui.overlay.js","webpack://websdk/../../node_modules/devextreme/ui/overlay/utils.js","webpack://websdk/../../node_modules/devextreme/ui/overlay/z_index.js","webpack://websdk/../../node_modules/devextreme/ui/pager.js","webpack://websdk/../../node_modules/devextreme/ui/popover.js","webpack://websdk/../../node_modules/devextreme/ui/popover_contants.js","webpack://websdk/../../node_modules/devextreme/ui/popup.js","webpack://websdk/../../node_modules/devextreme/ui/radio_group/radio_button.js","webpack://websdk/../../node_modules/devextreme/ui/resizable.js","webpack://websdk/../../node_modules/devextreme/ui/responsive_box.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/animator.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.events.emitter.gesture.scroll.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.scroll_view.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.scroll_view.native.pull_down.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.scroll_view.native.swipe_down.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.scroll_view.simulated.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.scrollable.device.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.scrollable.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.scrollable.native.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.scrollable.simulated.js","webpack://websdk/../../node_modules/devextreme/ui/scroll_view/ui.scrollbar.js","webpack://websdk/../../node_modules/devextreme/ui/select_box.js","webpack://websdk/../../node_modules/devextreme/ui/selection/selection.js","webpack://websdk/../../node_modules/devextreme/ui/selection/selection.strategy.deferred.js","webpack://websdk/../../node_modules/devextreme/ui/selection/selection.strategy.js","webpack://websdk/../../node_modules/devextreme/ui/selection/selection.strategy.standard.js","webpack://websdk/../../node_modules/devextreme/ui/shared/accessibility.js","webpack://websdk/../../node_modules/devextreme/ui/shared/filtering.js","webpack://websdk/../../node_modules/devextreme/ui/shared/grouped_data_converter_mixin.js","webpack://websdk/../../node_modules/devextreme/ui/shared/ui.editor_factory_mixin.js","webpack://websdk/../../node_modules/devextreme/ui/sortable.js","webpack://websdk/../../node_modules/devextreme/ui/tab_panel.js","webpack://websdk/../../node_modules/devextreme/ui/tab_panel/item.js","webpack://websdk/../../node_modules/devextreme/ui/tabs.js","webpack://websdk/../../node_modules/devextreme/ui/tabs/constants.js","webpack://websdk/../../node_modules/devextreme/ui/tabs/item.js","webpack://websdk/../../node_modules/devextreme/ui/text_box.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/text_box.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/texteditor_button_collection/button.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/texteditor_button_collection/custom.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/texteditor_button_collection/index.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/ui.text_editor.base.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/ui.text_editor.clear.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/ui.text_editor.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/ui.text_editor.mask.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/ui.text_editor.mask.rule.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/ui.text_editor.mask.strategy.base.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/ui.text_editor.mask.strategy.default.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/ui.text_editor.mask.strategy.input_events.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/utils.caret.js","webpack://websdk/../../node_modules/devextreme/ui/text_box/utils.support.js","webpack://websdk/../../node_modules/devextreme/ui/toolbar.js","webpack://websdk/../../node_modules/devextreme/ui/toolbar/constants.js","webpack://websdk/../../node_modules/devextreme/ui/toolbar/ui.toolbar.base.js","webpack://websdk/../../node_modules/devextreme/ui/toolbar/ui.toolbar.menu.js","webpack://websdk/../../node_modules/devextreme/ui/toolbar/ui.toolbar.strategy.action_sheet.js","webpack://websdk/../../node_modules/devextreme/ui/toolbar/ui.toolbar.strategy.drop_down_menu.js","webpack://websdk/../../node_modules/devextreme/ui/toolbar/ui.toolbar.strategy.js","webpack://websdk/../../node_modules/devextreme/ui/tree_view.js","webpack://websdk/../../node_modules/devextreme/ui/tree_view/ui.tree_view.base.js","webpack://websdk/../../node_modules/devextreme/ui/tree_view/ui.tree_view.search.js","webpack://websdk/../../node_modules/devextreme/ui/validation/default_adapter.js","webpack://websdk/../../node_modules/devextreme/ui/validation_group.js","webpack://websdk/../../node_modules/devextreme/ui/validation_message.js","webpack://websdk/../../node_modules/devextreme/ui/validation_summary.js","webpack://websdk/../../node_modules/devextreme/ui/validator.js","webpack://websdk/../../node_modules/devextreme/ui/widget/swatch_container.js","webpack://websdk/../../node_modules/devextreme/ui/widget/ui.search_box_mixin.js"],"sourcesContent":["/**\r\n * DevExtreme (animation/easing.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.convertTransitionTimingFuncToEasing = void 0;\r\nexports.getEasing = getEasing;\r\nexports.setEasing = setEasing;\r\nvar _type = require(\"../core/utils/type\");\r\nvar CSS_TRANSITION_EASING_REGEX = /cubic-bezier\\((\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\)/;\r\nvar TransitionTimingFuncMap = {\r\n    linear: \"cubic-bezier(0, 0, 1, 1)\",\r\n    swing: \"cubic-bezier(0.445, 0.05, 0.55, 0.95)\",\r\n    ease: \"cubic-bezier(0.25, 0.1, 0.25, 1)\",\r\n    \"ease-in\": \"cubic-bezier(0.42, 0, 1, 1)\",\r\n    \"ease-out\": \"cubic-bezier(0, 0, 0.58, 1)\",\r\n    \"ease-in-out\": \"cubic-bezier(0.42, 0, 0.58, 1)\"\r\n};\r\nvar polynomBezier = function(x1, y1, x2, y2) {\r\n    var Cx = 3 * x1;\r\n    var Bx = 3 * (x2 - x1) - Cx;\r\n    var Ax = 1 - Cx - Bx;\r\n    var Cy = 3 * y1;\r\n    var By = 3 * (y2 - y1) - Cy;\r\n    var Ay = 1 - Cy - By;\r\n    var bezierX = function(t) {\r\n        return t * (Cx + t * (Bx + t * Ax))\r\n    };\r\n    var bezierY = function(t) {\r\n        return t * (Cy + t * (By + t * Ay))\r\n    };\r\n    var derivativeX = function(t) {\r\n        return Cx + t * (2 * Bx + 3 * t * Ax)\r\n    };\r\n    var findXFor = function(t) {\r\n        var x = t;\r\n        var i = 0;\r\n        var z;\r\n        while (i < 14) {\r\n            z = bezierX(x) - t;\r\n            if (Math.abs(z) < .001) {\r\n                break\r\n            }\r\n            x -= z / derivativeX(x);\r\n            i++\r\n        }\r\n        return x\r\n    };\r\n    return function(t) {\r\n        return bezierY(findXFor(t))\r\n    }\r\n};\r\nvar easing = {};\r\nvar convertTransitionTimingFuncToEasing = function(cssTransitionEasing) {\r\n    cssTransitionEasing = TransitionTimingFuncMap[cssTransitionEasing] || cssTransitionEasing;\r\n    var coeffs = cssTransitionEasing.match(CSS_TRANSITION_EASING_REGEX);\r\n    var forceName;\r\n    if (!coeffs) {\r\n        forceName = \"linear\";\r\n        coeffs = TransitionTimingFuncMap[forceName].match(CSS_TRANSITION_EASING_REGEX)\r\n    }\r\n    coeffs = coeffs.slice(1, 5);\r\n    for (var i = 0; i < coeffs.length; i++) {\r\n        coeffs[i] = parseFloat(coeffs[i])\r\n    }\r\n    var easingName = forceName || \"cubicbezier_\" + coeffs.join(\"_\").replace(/\\./g, \"p\");\r\n    if (!(0, _type.isFunction)(easing[easingName])) {\r\n        easing[easingName] = function(x, t, b, c, d) {\r\n            return c * polynomBezier(coeffs[0], coeffs[1], coeffs[2], coeffs[3])(t / d) + b\r\n        }\r\n    }\r\n    return easingName\r\n};\r\nexports.convertTransitionTimingFuncToEasing = convertTransitionTimingFuncToEasing;\r\n\r\nfunction setEasing(value) {\r\n    easing = value\r\n}\r\n\r\nfunction getEasing(name) {\r\n    return easing[name]\r\n}\r\n","/**\r\n * DevExtreme (animation/fx.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _window = require(\"../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _errors = _interopRequireDefault(require(\"../core/errors\"));\r\nvar _element = require(\"../core/element\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _translator = require(\"./translator\");\r\nvar _easing = require(\"./easing\");\r\nvar _frame = require(\"./frame\");\r\nvar _support = require(\"../core/utils/support\");\r\nvar _position = _interopRequireDefault(require(\"./position\"));\r\nvar _remove_event = _interopRequireDefault(require(\"../core/remove_event\"));\r\nvar _index = require(\"../events/utils/index\");\r\nvar _deferred = require(\"../core/utils/deferred\");\r\nvar _common = require(\"../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar removeEventName = (0, _index.addNamespace)(_remove_event.default, \"dxFX\");\r\nvar RELATIVE_VALUE_REGEX = /^([+-])=(.*)/i;\r\nvar ANIM_DATA_KEY = \"dxAnimData\";\r\nvar ANIM_QUEUE_KEY = \"dxAnimQueue\";\r\nvar TRANSFORM_PROP = \"transform\";\r\nvar TransitionAnimationStrategy = {\r\n    initAnimation: function($element, config) {\r\n        $element.css({\r\n            transitionProperty: \"none\"\r\n        });\r\n        if (\"string\" === typeof config.from) {\r\n            $element.addClass(config.from)\r\n        } else {\r\n            setProps($element, config.from)\r\n        }\r\n        var that = this;\r\n        var deferred = new _deferred.Deferred;\r\n        var cleanupWhen = config.cleanupWhen;\r\n        config.transitionAnimation = {\r\n            deferred: deferred,\r\n            finish: function() {\r\n                that._finishTransition($element);\r\n                if (cleanupWhen) {\r\n                    (0, _deferred.when)(deferred, cleanupWhen).always(function() {\r\n                        that._cleanup($element, config)\r\n                    })\r\n                } else {\r\n                    that._cleanup($element, config)\r\n                }\r\n                deferred.resolveWith($element, [config, $element])\r\n            }\r\n        };\r\n        this._completeAnimationCallback($element, config).done(function() {\r\n            config.transitionAnimation.finish()\r\n        }).fail(function() {\r\n            deferred.rejectWith($element, [config, $element])\r\n        });\r\n        if (!config.duration) {\r\n            config.transitionAnimation.finish()\r\n        }\r\n        $element.css(\"transform\")\r\n    },\r\n    animate: function($element, config) {\r\n        this._startAnimation($element, config);\r\n        return config.transitionAnimation.deferred.promise()\r\n    },\r\n    _completeAnimationCallback: function($element, config) {\r\n        var that = this;\r\n        var startTime = Date.now() + config.delay;\r\n        var deferred = new _deferred.Deferred;\r\n        var transitionEndFired = new _deferred.Deferred;\r\n        var simulatedTransitionEndFired = new _deferred.Deferred;\r\n        var simulatedEndEventTimer;\r\n        var transitionEndEventFullName = (0, _support.transitionEndEventName)() + \".dxFX\";\r\n        config.transitionAnimation.cleanup = function() {\r\n            clearTimeout(simulatedEndEventTimer);\r\n            clearTimeout(waitForJSCompleteTimer);\r\n            _events_engine.default.off($element, transitionEndEventFullName);\r\n            _events_engine.default.off($element, removeEventName)\r\n        };\r\n        _events_engine.default.one($element, transitionEndEventFullName, function() {\r\n            if (Date.now() - startTime >= config.duration) {\r\n                transitionEndFired.reject()\r\n            }\r\n        });\r\n        _events_engine.default.off($element, removeEventName);\r\n        _events_engine.default.on($element, removeEventName, function() {\r\n            that.stop($element, config);\r\n            deferred.reject()\r\n        });\r\n        var waitForJSCompleteTimer = setTimeout(function() {\r\n            simulatedEndEventTimer = setTimeout(function() {\r\n                simulatedTransitionEndFired.reject()\r\n            }, config.duration + config.delay + fx._simulatedTransitionEndDelay);\r\n            (0, _deferred.when)(transitionEndFired, simulatedTransitionEndFired).fail(function() {\r\n                deferred.resolve()\r\n            }.bind(this))\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    _startAnimation: function($element, config) {\r\n        $element.css({\r\n            transitionProperty: \"all\",\r\n            transitionDelay: config.delay + \"ms\",\r\n            transitionDuration: config.duration + \"ms\",\r\n            transitionTimingFunction: config.easing\r\n        });\r\n        if (\"string\" === typeof config.to) {\r\n            $element[0].className += \" \" + config.to\r\n        } else {\r\n            if (config.to) {\r\n                setProps($element, config.to)\r\n            }\r\n        }\r\n    },\r\n    _finishTransition: function($element) {\r\n        $element.css(\"transition\", \"none\")\r\n    },\r\n    _cleanup: function($element, config) {\r\n        config.transitionAnimation.cleanup();\r\n        if (\"string\" === typeof config.from) {\r\n            $element.removeClass(config.from);\r\n            $element.removeClass(config.to)\r\n        }\r\n    },\r\n    stop: function($element, config, jumpToEnd) {\r\n        if (!config) {\r\n            return\r\n        }\r\n        if (jumpToEnd) {\r\n            config.transitionAnimation.finish()\r\n        } else {\r\n            if ((0, _type.isPlainObject)(config.to)) {\r\n                (0, _iterator.each)(config.to, function(key) {\r\n                    $element.css(key, $element.css(key))\r\n                })\r\n            }\r\n            this._finishTransition($element);\r\n            this._cleanup($element, config)\r\n        }\r\n    }\r\n};\r\nvar FrameAnimationStrategy = {\r\n    initAnimation: function($element, config) {\r\n        setProps($element, config.from)\r\n    },\r\n    animate: function($element, config) {\r\n        var deferred = new _deferred.Deferred;\r\n        var that = this;\r\n        if (!config) {\r\n            return deferred.reject().promise()\r\n        }(0, _iterator.each)(config.to, function(prop) {\r\n            if (void 0 === config.from[prop]) {\r\n                config.from[prop] = that._normalizeValue($element.css(prop))\r\n            }\r\n        });\r\n        if (config.to[TRANSFORM_PROP]) {\r\n            config.from[TRANSFORM_PROP] = that._parseTransform(config.from[TRANSFORM_PROP]);\r\n            config.to[TRANSFORM_PROP] = that._parseTransform(config.to[TRANSFORM_PROP])\r\n        }\r\n        config.frameAnimation = {\r\n            to: config.to,\r\n            from: config.from,\r\n            currentValue: config.from,\r\n            easing: (0, _easing.convertTransitionTimingFuncToEasing)(config.easing),\r\n            duration: config.duration,\r\n            startTime: (new Date).valueOf(),\r\n            finish: function() {\r\n                this.currentValue = this.to;\r\n                this.draw();\r\n                (0, _frame.cancelAnimationFrame)(config.frameAnimation.animationFrameId);\r\n                deferred.resolve()\r\n            },\r\n            draw: function() {\r\n                if (config.draw) {\r\n                    config.draw(this.currentValue);\r\n                    return\r\n                }\r\n                var currentValue = (0, _extend.extend)({}, this.currentValue);\r\n                if (currentValue[TRANSFORM_PROP]) {\r\n                    currentValue[TRANSFORM_PROP] = (0, _iterator.map)(currentValue[TRANSFORM_PROP], function(value, prop) {\r\n                        if (\"translate\" === prop) {\r\n                            return (0, _translator.getTranslateCss)(value)\r\n                        } else {\r\n                            if (\"scale\" === prop) {\r\n                                return \"scale(\" + value + \")\"\r\n                            } else {\r\n                                if (\"rotate\" === prop.substr(0, prop.length - 1)) {\r\n                                    return prop + \"(\" + value + \"deg)\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }).join(\" \")\r\n                }\r\n                $element.css(currentValue)\r\n            }\r\n        };\r\n        if (config.delay) {\r\n            config.frameAnimation.startTime += config.delay;\r\n            config.frameAnimation.delayTimeout = setTimeout(function() {\r\n                that._startAnimation($element, config)\r\n            }, config.delay)\r\n        } else {\r\n            that._startAnimation($element, config)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    _startAnimation: function($element, config) {\r\n        _events_engine.default.off($element, removeEventName);\r\n        _events_engine.default.on($element, removeEventName, function() {\r\n            if (config.frameAnimation) {\r\n                (0, _frame.cancelAnimationFrame)(config.frameAnimation.animationFrameId)\r\n            }\r\n        });\r\n        this._animationStep($element, config)\r\n    },\r\n    _parseTransform: function(transformString) {\r\n        var result = {};\r\n        (0, _iterator.each)(transformString.match(/\\w+\\d*\\w*\\([^)]*\\)\\s*/g), function(i, part) {\r\n            var translateData = (0, _translator.parseTranslate)(part);\r\n            var scaleData = part.match(/scale\\((.+?)\\)/);\r\n            var rotateData = part.match(/(rotate.)\\((.+)deg\\)/);\r\n            if (translateData) {\r\n                result.translate = translateData\r\n            }\r\n            if (scaleData && scaleData[1]) {\r\n                result.scale = parseFloat(scaleData[1])\r\n            }\r\n            if (rotateData && rotateData[1]) {\r\n                result[rotateData[1]] = parseFloat(rotateData[2])\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    stop: function($element, config, jumpToEnd) {\r\n        var frameAnimation = config && config.frameAnimation;\r\n        if (!frameAnimation) {\r\n            return\r\n        }(0, _frame.cancelAnimationFrame)(frameAnimation.animationFrameId);\r\n        clearTimeout(frameAnimation.delayTimeout);\r\n        if (jumpToEnd) {\r\n            frameAnimation.finish()\r\n        }\r\n        delete config.frameAnimation\r\n    },\r\n    _animationStep: function($element, config) {\r\n        var frameAnimation = config && config.frameAnimation;\r\n        if (!frameAnimation) {\r\n            return\r\n        }\r\n        var now = (new Date).valueOf();\r\n        if (now >= frameAnimation.startTime + frameAnimation.duration) {\r\n            frameAnimation.finish();\r\n            return\r\n        }\r\n        frameAnimation.currentValue = this._calcStepValue(frameAnimation, now - frameAnimation.startTime);\r\n        frameAnimation.draw();\r\n        var that = this;\r\n        frameAnimation.animationFrameId = (0, _frame.requestAnimationFrame)(function() {\r\n            that._animationStep($element, config)\r\n        })\r\n    },\r\n    _calcStepValue: function(frameAnimation, currentDuration) {\r\n        var calcValueRecursively = function calcValueRecursively(from, to) {\r\n            var result = Array.isArray(to) ? [] : {};\r\n            var calcEasedValue = function(propName) {\r\n                var x = currentDuration / frameAnimation.duration;\r\n                var t = currentDuration;\r\n                var b = 1 * from[propName];\r\n                var c = to[propName] - from[propName];\r\n                var d = frameAnimation.duration;\r\n                return (0, _easing.getEasing)(frameAnimation.easing)(x, t, b, c, d)\r\n            };\r\n            (0, _iterator.each)(to, function(propName, endPropValue) {\r\n                if (\"string\" === typeof endPropValue && false === parseFloat(endPropValue, 10)) {\r\n                    return true\r\n                }\r\n                result[propName] = \"object\" === _typeof(endPropValue) ? calcValueRecursively(from[propName], endPropValue) : calcEasedValue(propName)\r\n            });\r\n            return result\r\n        };\r\n        return calcValueRecursively(frameAnimation.from, frameAnimation.to)\r\n    },\r\n    _normalizeValue: function(value) {\r\n        var numericValue = parseFloat(value, 10);\r\n        if (false === numericValue) {\r\n            return value\r\n        }\r\n        return numericValue\r\n    }\r\n};\r\nvar FallbackToNoAnimationStrategy = {\r\n    initAnimation: function() {},\r\n    animate: function() {\r\n        return (new _deferred.Deferred).resolve().promise()\r\n    },\r\n    stop: _common.noop,\r\n    isSynchronous: true\r\n};\r\nvar getAnimationStrategy = function(config) {\r\n    config = config || {};\r\n    var animationStrategies = {\r\n        transition: (0, _support.transition)() ? TransitionAnimationStrategy : FrameAnimationStrategy,\r\n        frame: FrameAnimationStrategy,\r\n        noAnimation: FallbackToNoAnimationStrategy\r\n    };\r\n    var strategy = config.strategy || \"transition\";\r\n    if (\"css\" === config.type && !(0, _support.transition)()) {\r\n        strategy = \"noAnimation\"\r\n    }\r\n    return animationStrategies[strategy]\r\n};\r\nvar baseConfigValidator = function(config, animationType, validate, typeMessage) {\r\n    (0, _iterator.each)([\"from\", \"to\"], function() {\r\n        if (!validate(config[this])) {\r\n            throw _errors.default.Error(\"E0010\", animationType, this, typeMessage)\r\n        }\r\n    })\r\n};\r\nvar isObjectConfigValidator = function(config, animationType) {\r\n    return baseConfigValidator(config, animationType, function(target) {\r\n        return (0, _type.isPlainObject)(target)\r\n    }, \"a plain object\")\r\n};\r\nvar isStringConfigValidator = function(config, animationType) {\r\n    return baseConfigValidator(config, animationType, function(target) {\r\n        return \"string\" === typeof target\r\n    }, \"a string\")\r\n};\r\nvar CustomAnimationConfigurator = {\r\n    setup: function() {}\r\n};\r\nvar CssAnimationConfigurator = {\r\n    validateConfig: function(config) {\r\n        isStringConfigValidator(config, \"css\")\r\n    },\r\n    setup: function() {}\r\n};\r\nvar positionAliases = {\r\n    top: {\r\n        my: \"bottom center\",\r\n        at: \"top center\"\r\n    },\r\n    bottom: {\r\n        my: \"top center\",\r\n        at: \"bottom center\"\r\n    },\r\n    right: {\r\n        my: \"left center\",\r\n        at: \"right center\"\r\n    },\r\n    left: {\r\n        my: \"right center\",\r\n        at: \"left center\"\r\n    }\r\n};\r\nvar SlideAnimationConfigurator = {\r\n    validateConfig: function(config) {\r\n        isObjectConfigValidator(config, \"slide\")\r\n    },\r\n    setup: function($element, config) {\r\n        var location = (0, _translator.locate)($element);\r\n        if (\"slide\" !== config.type) {\r\n            var positioningConfig = \"slideIn\" === config.type ? config.from : config.to;\r\n            positioningConfig.position = (0, _extend.extend)({\r\n                of: window\r\n            }, positionAliases[config.direction]);\r\n            setupPosition($element, positioningConfig)\r\n        }\r\n        this._setUpConfig(location, config.from);\r\n        this._setUpConfig(location, config.to);\r\n        (0, _translator.clearCache)($element)\r\n    },\r\n    _setUpConfig: function(location, config) {\r\n        config.left = \"left\" in config ? config.left : \"+=0\";\r\n        config.top = \"top\" in config ? config.top : \"+=0\";\r\n        this._initNewPosition(location, config)\r\n    },\r\n    _initNewPosition: function(location, config) {\r\n        var position = {\r\n            left: config.left,\r\n            top: config.top\r\n        };\r\n        delete config.left;\r\n        delete config.top;\r\n        var relativeValue = this._getRelativeValue(position.left);\r\n        if (void 0 !== relativeValue) {\r\n            position.left = relativeValue + location.left\r\n        } else {\r\n            config.left = 0\r\n        }\r\n        relativeValue = this._getRelativeValue(position.top);\r\n        if (void 0 !== relativeValue) {\r\n            position.top = relativeValue + location.top\r\n        } else {\r\n            config.top = 0\r\n        }\r\n        config[TRANSFORM_PROP] = (0, _translator.getTranslateCss)({\r\n            x: position.left,\r\n            y: position.top\r\n        })\r\n    },\r\n    _getRelativeValue: function(value) {\r\n        var relativeValue;\r\n        if (\"string\" === typeof value && (relativeValue = RELATIVE_VALUE_REGEX.exec(value))) {\r\n            return parseInt(relativeValue[1] + \"1\") * relativeValue[2]\r\n        }\r\n    }\r\n};\r\nvar FadeAnimationConfigurator = {\r\n    setup: function($element, config) {\r\n        var _from$opacity, _to$opacity;\r\n        var from = config.from;\r\n        var to = config.to;\r\n        var defaultFromOpacity = \"fadeOut\" === config.type ? 1 : 0;\r\n        var defaultToOpacity = \"fadeOut\" === config.type ? 0 : 1;\r\n        var fromOpacity = (0, _type.isPlainObject)(from) ? String(null !== (_from$opacity = from.opacity) && void 0 !== _from$opacity ? _from$opacity : defaultFromOpacity) : String(from);\r\n        var toOpacity = (0, _type.isPlainObject)(to) ? String(null !== (_to$opacity = to.opacity) && void 0 !== _to$opacity ? _to$opacity : defaultToOpacity) : String(to);\r\n        if (!config.skipElementInitialStyles) {\r\n            fromOpacity = $element.css(\"opacity\")\r\n        }\r\n        switch (config.type) {\r\n            case \"fadeIn\":\r\n                toOpacity = 1;\r\n                break;\r\n            case \"fadeOut\":\r\n                toOpacity = 0\r\n        }\r\n        config.from = {\r\n            visibility: \"visible\",\r\n            opacity: fromOpacity\r\n        };\r\n        config.to = {\r\n            opacity: toOpacity\r\n        }\r\n    }\r\n};\r\nvar PopAnimationConfigurator = {\r\n    validateConfig: function(config) {\r\n        isObjectConfigValidator(config, \"pop\")\r\n    },\r\n    setup: function($element, config) {\r\n        var from = config.from;\r\n        var to = config.to;\r\n        var fromOpacity = \"opacity\" in from ? from.opacity : $element.css(\"opacity\");\r\n        var toOpacity = \"opacity\" in to ? to.opacity : 1;\r\n        var fromScale = \"scale\" in from ? from.scale : 0;\r\n        var toScale = \"scale\" in to ? to.scale : 1;\r\n        config.from = {\r\n            opacity: fromOpacity\r\n        };\r\n        var translate = (0, _translator.getTranslate)($element);\r\n        config.from[TRANSFORM_PROP] = this._getCssTransform(translate, fromScale);\r\n        config.to = {\r\n            opacity: toOpacity\r\n        };\r\n        config.to[TRANSFORM_PROP] = this._getCssTransform(translate, toScale)\r\n    },\r\n    _getCssTransform: function(translate, scale) {\r\n        return (0, _translator.getTranslateCss)(translate) + \"scale(\" + scale + \")\"\r\n    }\r\n};\r\nvar animationConfigurators = {\r\n    custom: CustomAnimationConfigurator,\r\n    slide: SlideAnimationConfigurator,\r\n    slideIn: SlideAnimationConfigurator,\r\n    slideOut: SlideAnimationConfigurator,\r\n    fade: FadeAnimationConfigurator,\r\n    fadeIn: FadeAnimationConfigurator,\r\n    fadeOut: FadeAnimationConfigurator,\r\n    pop: PopAnimationConfigurator,\r\n    css: CssAnimationConfigurator\r\n};\r\nvar getAnimationConfigurator = function(config) {\r\n    var result = animationConfigurators[config.type];\r\n    if (!result) {\r\n        throw _errors.default.Error(\"E0011\", config.type)\r\n    }\r\n    return result\r\n};\r\nvar defaultJSConfig = {\r\n    type: \"custom\",\r\n    from: {},\r\n    to: {},\r\n    duration: 400,\r\n    start: _common.noop,\r\n    complete: _common.noop,\r\n    easing: \"ease\",\r\n    delay: 0\r\n};\r\nvar defaultCssConfig = {\r\n    duration: 400,\r\n    easing: \"ease\",\r\n    delay: 0\r\n};\r\n\r\nfunction setupAnimationOnElement() {\r\n    var animation = this;\r\n    var $element = animation.element;\r\n    var config = animation.config;\r\n    setupPosition($element, config.from);\r\n    setupPosition($element, config.to);\r\n    animation.configurator.setup($element, config);\r\n    $element.data(ANIM_DATA_KEY, animation);\r\n    if (fx.off) {\r\n        config.duration = 0;\r\n        config.delay = 0\r\n    }\r\n    animation.strategy.initAnimation($element, config);\r\n    if (config.start) {\r\n        var element = (0, _element.getPublicElement)($element);\r\n        config.start.apply(this, [element, config])\r\n    }\r\n}\r\nvar onElementAnimationComplete = function(animation) {\r\n    var $element = animation.element;\r\n    var config = animation.config;\r\n    $element.removeData(ANIM_DATA_KEY);\r\n    if (config.complete) {\r\n        var element = (0, _element.getPublicElement)($element);\r\n        config.complete.apply(this, [element, config])\r\n    }\r\n    animation.deferred.resolveWith(this, [$element, config])\r\n};\r\nvar startAnimationOnElement = function() {\r\n    var animation = this;\r\n    var $element = animation.element;\r\n    var config = animation.config;\r\n    animation.isStarted = true;\r\n    return animation.strategy.animate($element, config).done(function() {\r\n        onElementAnimationComplete(animation)\r\n    }).fail(function() {\r\n        animation.deferred.rejectWith(this, [$element, config])\r\n    })\r\n};\r\nvar stopAnimationOnElement = function(jumpToEnd) {\r\n    var animation = this;\r\n    var $element = animation.element;\r\n    var config = animation.config;\r\n    clearTimeout(animation.startTimeout);\r\n    if (!animation.isStarted) {\r\n        animation.start()\r\n    }\r\n    animation.strategy.stop($element, config, jumpToEnd)\r\n};\r\nvar scopedRemoveEvent = (0, _index.addNamespace)(_remove_event.default, \"dxFXStartAnimation\");\r\nvar subscribeToRemoveEvent = function(animation) {\r\n    _events_engine.default.off(animation.element, scopedRemoveEvent);\r\n    _events_engine.default.on(animation.element, scopedRemoveEvent, function() {\r\n        fx.stop(animation.element)\r\n    });\r\n    animation.deferred.always(function() {\r\n        _events_engine.default.off(animation.element, scopedRemoveEvent)\r\n    })\r\n};\r\nvar createAnimation = function(element, initialConfig) {\r\n    var defaultConfig = \"css\" === initialConfig.type ? defaultCssConfig : defaultJSConfig;\r\n    var config = (0, _extend.extend)(true, {}, defaultConfig, initialConfig);\r\n    var configurator = getAnimationConfigurator(config);\r\n    var strategy = getAnimationStrategy(config);\r\n    var animation = {\r\n        element: (0, _renderer.default)(element),\r\n        config: config,\r\n        configurator: configurator,\r\n        strategy: strategy,\r\n        isSynchronous: strategy.isSynchronous,\r\n        setup: setupAnimationOnElement,\r\n        start: startAnimationOnElement,\r\n        stop: stopAnimationOnElement,\r\n        deferred: new _deferred.Deferred\r\n    };\r\n    if ((0, _type.isFunction)(configurator.validateConfig)) {\r\n        configurator.validateConfig(config)\r\n    }\r\n    subscribeToRemoveEvent(animation);\r\n    return animation\r\n};\r\nvar animate = function(element, config) {\r\n    var $element = (0, _renderer.default)(element);\r\n    if (!$element.length) {\r\n        return (new _deferred.Deferred).resolve().promise()\r\n    }\r\n    var animation = createAnimation($element, config);\r\n    pushInAnimationQueue($element, animation);\r\n    return animation.deferred.promise()\r\n};\r\n\r\nfunction pushInAnimationQueue($element, animation) {\r\n    var queueData = getAnimQueueData($element);\r\n    writeAnimQueueData($element, queueData);\r\n    queueData.push(animation);\r\n    if (!isAnimating($element)) {\r\n        shiftFromAnimationQueue($element, queueData)\r\n    }\r\n}\r\n\r\nfunction getAnimQueueData($element) {\r\n    return $element.data(ANIM_QUEUE_KEY) || []\r\n}\r\n\r\nfunction writeAnimQueueData($element, queueData) {\r\n    $element.data(ANIM_QUEUE_KEY, queueData)\r\n}\r\nvar destroyAnimQueueData = function($element) {\r\n    $element.removeData(ANIM_QUEUE_KEY)\r\n};\r\n\r\nfunction isAnimating($element) {\r\n    return !!$element.data(ANIM_DATA_KEY)\r\n}\r\n\r\nfunction shiftFromAnimationQueue($element, queueData) {\r\n    queueData = getAnimQueueData($element);\r\n    if (!queueData.length) {\r\n        return\r\n    }\r\n    var animation = queueData.shift();\r\n    if (0 === queueData.length) {\r\n        destroyAnimQueueData($element)\r\n    }\r\n    executeAnimation(animation).done(function() {\r\n        if (!isAnimating($element)) {\r\n            shiftFromAnimationQueue($element)\r\n        }\r\n    })\r\n}\r\n\r\nfunction executeAnimation(animation) {\r\n    animation.setup();\r\n    if (fx.off || animation.isSynchronous) {\r\n        animation.start()\r\n    } else {\r\n        animation.startTimeout = setTimeout(function() {\r\n            animation.start()\r\n        })\r\n    }\r\n    return animation.deferred.promise()\r\n}\r\n\r\nfunction setupPosition($element, config) {\r\n    if (!config || !config.position) {\r\n        return\r\n    }\r\n    var win = (0, _renderer.default)(window);\r\n    var left = 0;\r\n    var top = 0;\r\n    var position = _position.default.calculate($element, config.position);\r\n    var offset = $element.offset();\r\n    var currentPosition = $element.position();\r\n    if (currentPosition.top > offset.top) {\r\n        top = win.scrollTop()\r\n    }\r\n    if (currentPosition.left > offset.left) {\r\n        left = win.scrollLeft()\r\n    }(0, _extend.extend)(config, {\r\n        left: position.h.location - offset.left + currentPosition.left - left,\r\n        top: position.v.location - offset.top + currentPosition.top - top\r\n    });\r\n    delete config.position\r\n}\r\n\r\nfunction setProps($element, props) {\r\n    (0, _iterator.each)(props, function(key, value) {\r\n        try {\r\n            $element.css(key, (0, _type.isFunction)(value) ? value() : value)\r\n        } catch (e) {}\r\n    })\r\n}\r\nvar stop = function(element, jumpToEnd) {\r\n    var $element = (0, _renderer.default)(element);\r\n    var queueData = getAnimQueueData($element);\r\n    (0, _iterator.each)(queueData, function(_, animation) {\r\n        animation.config.delay = 0;\r\n        animation.config.duration = 0;\r\n        animation.isSynchronous = true\r\n    });\r\n    if (!isAnimating($element)) {\r\n        shiftFromAnimationQueue($element, queueData)\r\n    }\r\n    var animation = $element.data(ANIM_DATA_KEY);\r\n    if (animation) {\r\n        animation.stop(jumpToEnd)\r\n    }\r\n    $element.removeData(ANIM_DATA_KEY);\r\n    destroyAnimQueueData($element)\r\n};\r\nvar fx = {\r\n    off: false,\r\n    animationTypes: animationConfigurators,\r\n    animate: animate,\r\n    createAnimation: createAnimation,\r\n    isAnimating: isAnimating,\r\n    stop: stop,\r\n    _simulatedTransitionEndDelay: 100\r\n};\r\nvar _default = fx;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (animation/position.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../core/dom_adapter\"));\r\nvar _type = require(\"../core/utils/type\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _position = require(\"../core/utils/position\");\r\nvar _browser = _interopRequireDefault(require(\"../core/utils/browser\"));\r\nvar _translator = require(\"./translator\");\r\nvar _support = require(\"../core/utils/support\");\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar horzRe = /left|right/;\r\nvar vertRe = /top|bottom/;\r\nvar collisionRe = /fit|flip|none/;\r\nvar scaleRe = /scale(.+)/;\r\nvar IS_SAFARI = _browser.default.safari;\r\nvar normalizeAlign = function(raw) {\r\n    var result = {\r\n        h: \"center\",\r\n        v: \"center\"\r\n    };\r\n    var pair = (0, _common.splitPair)(raw);\r\n    if (pair) {\r\n        (0, _iterator.each)(pair, function() {\r\n            var w = String(this).toLowerCase();\r\n            if (horzRe.test(w)) {\r\n                result.h = w\r\n            } else {\r\n                if (vertRe.test(w)) {\r\n                    result.v = w\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return result\r\n};\r\nvar normalizeOffset = function(raw) {\r\n    return (0, _common.pairToObject)(raw)\r\n};\r\nvar normalizeCollision = function(raw) {\r\n    var pair = (0, _common.splitPair)(raw);\r\n    var h = String(pair && pair[0]).toLowerCase();\r\n    var v = String(pair && pair[1]).toLowerCase();\r\n    if (!collisionRe.test(h)) {\r\n        h = \"none\"\r\n    }\r\n    if (!collisionRe.test(v)) {\r\n        v = h\r\n    }\r\n    return {\r\n        h: h,\r\n        v: v\r\n    }\r\n};\r\nvar getAlignFactor = function(align) {\r\n    switch (align) {\r\n        case \"center\":\r\n            return .5;\r\n        case \"right\":\r\n        case \"bottom\":\r\n            return 1;\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar inverseAlign = function(align) {\r\n    switch (align) {\r\n        case \"left\":\r\n            return \"right\";\r\n        case \"right\":\r\n            return \"left\";\r\n        case \"top\":\r\n            return \"bottom\";\r\n        case \"bottom\":\r\n            return \"top\";\r\n        default:\r\n            return align\r\n    }\r\n};\r\nvar calculateOversize = function(data, bounds) {\r\n    var oversize = 0;\r\n    if (data.myLocation < bounds.min) {\r\n        oversize += bounds.min - data.myLocation\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        oversize += data.myLocation - bounds.max\r\n    }\r\n    return oversize\r\n};\r\nvar collisionSide = function(direction, data, bounds) {\r\n    if (data.myLocation < bounds.min) {\r\n        return \"h\" === direction ? \"left\" : \"top\"\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        return \"h\" === direction ? \"right\" : \"bottom\"\r\n    }\r\n    return \"none\"\r\n};\r\nvar initMyLocation = function(data) {\r\n    data.myLocation = data.atLocation + getAlignFactor(data.atAlign) * data.atSize - getAlignFactor(data.myAlign) * data.mySize + data.offset\r\n};\r\nvar collisionResolvers = {\r\n    fit: function(data, bounds) {\r\n        var result = false;\r\n        if (data.myLocation > bounds.max) {\r\n            data.myLocation = bounds.max;\r\n            result = true\r\n        }\r\n        if (data.myLocation < bounds.min) {\r\n            data.myLocation = bounds.min;\r\n            result = true\r\n        }\r\n        data.fit = result\r\n    },\r\n    flip: function(data, bounds) {\r\n        data.flip = false;\r\n        if (\"center\" === data.myAlign && \"center\" === data.atAlign) {\r\n            return\r\n        }\r\n        if (data.myLocation < bounds.min || data.myLocation > bounds.max) {\r\n            var inverseData = (0, _extend.extend)({}, data, {\r\n                myAlign: inverseAlign(data.myAlign),\r\n                atAlign: inverseAlign(data.atAlign),\r\n                offset: -data.offset\r\n            });\r\n            initMyLocation(inverseData);\r\n            inverseData.oversize = calculateOversize(inverseData, bounds);\r\n            if (inverseData.myLocation >= bounds.min && inverseData.myLocation <= bounds.max || data.oversize > inverseData.oversize) {\r\n                data.myLocation = inverseData.myLocation;\r\n                data.oversize = inverseData.oversize;\r\n                data.flip = true\r\n            }\r\n        }\r\n    },\r\n    flipfit: function(data, bounds) {\r\n        this.flip(data, bounds);\r\n        this.fit(data, bounds)\r\n    },\r\n    none: function(data) {\r\n        data.oversize = 0\r\n    }\r\n};\r\nvar scrollbarWidth;\r\nvar calculateScrollbarWidth = function() {\r\n    var $scrollDiv = (0, _renderer.default)(\"<div>\").css({\r\n        width: 100,\r\n        height: 100,\r\n        overflow: \"scroll\",\r\n        position: \"absolute\",\r\n        top: -9999\r\n    }).appendTo((0, _renderer.default)(\"body\"));\r\n    var result = $scrollDiv.get(0).offsetWidth - $scrollDiv.get(0).clientWidth;\r\n    $scrollDiv.remove();\r\n    scrollbarWidth = result\r\n};\r\nvar defaultPositionResult = {\r\n    h: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    },\r\n    v: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    }\r\n};\r\nvar calculatePosition = function(what, options) {\r\n    var $what = (0, _renderer.default)(what);\r\n    var currentOffset = $what.offset();\r\n    var result = (0, _extend.extend)(true, {}, defaultPositionResult, {\r\n        h: {\r\n            location: currentOffset.left\r\n        },\r\n        v: {\r\n            location: currentOffset.top\r\n        }\r\n    });\r\n    if (!options) {\r\n        return result\r\n    }\r\n    var my = normalizeAlign(options.my);\r\n    var at = normalizeAlign(options.at);\r\n    var of = (0, _renderer.default)(options.of).length && options.of || window;\r\n    var offset = normalizeOffset(options.offset);\r\n    var collision = normalizeCollision(options.collision);\r\n    var boundary = options.boundary;\r\n    var boundaryOffset = normalizeOffset(options.boundaryOffset);\r\n    var h = {\r\n        mySize: $what.outerWidth(),\r\n        myAlign: my.h,\r\n        atAlign: at.h,\r\n        offset: offset.h,\r\n        collision: collision.h,\r\n        boundaryOffset: boundaryOffset.h\r\n    };\r\n    var v = {\r\n        mySize: $what.outerHeight(),\r\n        myAlign: my.v,\r\n        atAlign: at.v,\r\n        offset: offset.v,\r\n        collision: collision.v,\r\n        boundaryOffset: boundaryOffset.v\r\n    };\r\n    if ( of .preventDefault) {\r\n        h.atLocation = of .pageX;\r\n        v.atLocation = of .pageY;\r\n        h.atSize = 0;\r\n        v.atSize = 0\r\n    } else {\r\n        of = (0, _renderer.default)( of );\r\n        if ((0, _type.isWindow)( of [0])) {\r\n            h.atLocation = of .scrollLeft();\r\n            v.atLocation = of .scrollTop();\r\n            if (\"phone\" === _devices.default.real().deviceType && of [0].visualViewport) {\r\n                h.atLocation = Math.max(h.atLocation, of [0].visualViewport.offsetLeft);\r\n                v.atLocation = Math.max(v.atLocation, of [0].visualViewport.offsetTop);\r\n                h.atSize = of [0].visualViewport.width;\r\n                v.atSize = of [0].visualViewport.height\r\n            } else {\r\n                h.atSize = of [0].innerWidth > of [0].outerWidth ? of [0].innerWidth : of .width();\r\n                v.atSize = of [0].innerHeight > of [0].outerHeight || IS_SAFARI ? of [0].innerHeight : of .height()\r\n            }\r\n        } else {\r\n            if (9 === of [0].nodeType) {\r\n                h.atLocation = 0;\r\n                v.atLocation = 0;\r\n                h.atSize = of .width();\r\n                v.atSize = of .height()\r\n            } else {\r\n                var ofRect = (0, _position.getBoundingRect)( of .get(0));\r\n                var o = getOffsetWithoutScale( of );\r\n                h.atLocation = o.left;\r\n                v.atLocation = o.top;\r\n                h.atSize = Math.max(ofRect.width, of .outerWidth());\r\n                v.atSize = Math.max(ofRect.height, of .outerHeight())\r\n            }\r\n        }\r\n    }\r\n    initMyLocation(h);\r\n    initMyLocation(v);\r\n    var bounds = function() {\r\n        var win = (0, _renderer.default)(window);\r\n        var windowWidth = win.width();\r\n        var windowHeight = win.height();\r\n        var left = win.scrollLeft();\r\n        var top = win.scrollTop();\r\n        var documentElement = _dom_adapter.default.getDocumentElement();\r\n        var hZoomLevel = _support.touch ? documentElement.clientWidth / windowWidth : 1;\r\n        var vZoomLevel = _support.touch ? documentElement.clientHeight / windowHeight : 1;\r\n        if (void 0 === scrollbarWidth) {\r\n            calculateScrollbarWidth()\r\n        }\r\n        var boundaryWidth = windowWidth;\r\n        var boundaryHeight = windowHeight;\r\n        if (boundary) {\r\n            var $boundary = (0, _renderer.default)(boundary);\r\n            var boundaryPosition = $boundary.offset();\r\n            left = boundaryPosition.left;\r\n            top = boundaryPosition.top;\r\n            boundaryWidth = $boundary.width();\r\n            boundaryHeight = $boundary.height()\r\n        }\r\n        return {\r\n            h: {\r\n                min: left + h.boundaryOffset,\r\n                max: left + boundaryWidth / hZoomLevel - h.mySize - h.boundaryOffset\r\n            },\r\n            v: {\r\n                min: top + v.boundaryOffset,\r\n                max: top + boundaryHeight / vZoomLevel - v.mySize - v.boundaryOffset\r\n            }\r\n        }\r\n    }();\r\n    h.oversize = calculateOversize(h, bounds.h);\r\n    v.oversize = calculateOversize(v, bounds.v);\r\n    h.collisionSide = collisionSide(\"h\", h, bounds.h);\r\n    v.collisionSide = collisionSide(\"v\", v, bounds.v);\r\n    if (collisionResolvers[h.collision]) {\r\n        collisionResolvers[h.collision](h, bounds.h)\r\n    }\r\n    if (collisionResolvers[v.collision]) {\r\n        collisionResolvers[v.collision](v, bounds.v)\r\n    }\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    (0, _extend.extend)(true, result, {\r\n        h: {\r\n            location: preciser(h.myLocation),\r\n            oversize: preciser(h.oversize),\r\n            fit: h.fit,\r\n            flip: h.flip,\r\n            collisionSide: h.collisionSide\r\n        },\r\n        v: {\r\n            location: preciser(v.myLocation),\r\n            oversize: preciser(v.oversize),\r\n            fit: v.fit,\r\n            flip: v.flip,\r\n            collisionSide: v.collisionSide\r\n        },\r\n        precise: options.precise\r\n    });\r\n    return result\r\n};\r\nvar getOffsetWithoutScale = function getOffsetWithoutScale($startElement) {\r\n    var _currentElement$getAt, _style$match;\r\n    var $currentElement = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : $startElement;\r\n    var currentElement = $currentElement.get(0);\r\n    if (!currentElement) {\r\n        return $startElement.offset()\r\n    }\r\n    var style = (null === (_currentElement$getAt = currentElement.getAttribute) || void 0 === _currentElement$getAt ? void 0 : _currentElement$getAt.call(currentElement, \"style\")) || \"\";\r\n    var scale = null === (_style$match = style.match(scaleRe)) || void 0 === _style$match ? void 0 : _style$match[0];\r\n    var offset;\r\n    if (scale) {\r\n        currentElement.setAttribute(\"style\", style.replace(scale, \"\"));\r\n        offset = getOffsetWithoutScale($startElement, $currentElement.parent());\r\n        currentElement.setAttribute(\"style\", style)\r\n    } else {\r\n        offset = getOffsetWithoutScale($startElement, $currentElement.parent())\r\n    }\r\n    return offset\r\n};\r\nvar position = function(what, options) {\r\n    var $what = (0, _renderer.default)(what);\r\n    if (!options) {\r\n        return $what.offset()\r\n    }(0, _translator.resetPosition)($what, true);\r\n    var offset = getOffsetWithoutScale($what);\r\n    var targetPosition = options.h && options.v ? options : calculatePosition($what, options);\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    (0, _translator.move)($what, {\r\n        left: targetPosition.h.location - preciser(offset.left),\r\n        top: targetPosition.v.location - preciser(offset.top)\r\n    });\r\n    return targetPosition\r\n};\r\nvar offset = function(element) {\r\n    element = (0, _renderer.default)(element).get(0);\r\n    if ((0, _type.isWindow)(element)) {\r\n        return null\r\n    } else {\r\n        if (element && \"pageY\" in element && \"pageX\" in element) {\r\n            return {\r\n                top: element.pageY,\r\n                left: element.pageX\r\n            }\r\n        }\r\n    }\r\n    return (0, _renderer.default)(element).offset()\r\n};\r\nif (!position.inverseAlign) {\r\n    position.inverseAlign = inverseAlign\r\n}\r\nif (!position.normalizeAlign) {\r\n    position.normalizeAlign = normalizeAlign\r\n}\r\nvar _default = {\r\n    calculateScrollbarWidth: calculateScrollbarWidth,\r\n    calculate: calculatePosition,\r\n    setup: position,\r\n    offset: offset\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (animation/translator.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.resetPosition = exports.parseTranslate = exports.move = exports.locate = exports.getTranslateCss = exports.getTranslate = exports.clearCache = void 0;\r\nvar _element_data = require(\"../core/element_data\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar TRANSLATOR_DATA_KEY = \"dxTranslator\";\r\nvar TRANSFORM_MATRIX_REGEX = /matrix(3d)?\\((.+?)\\)/;\r\nvar TRANSLATE_REGEX = /translate(?:3d)?\\((.+?)\\)/;\r\nvar locate = function($element) {\r\n    var translate = getTranslate($element);\r\n    return {\r\n        left: translate.x,\r\n        top: translate.y\r\n    }\r\n};\r\nexports.locate = locate;\r\n\r\nfunction isPercentValue(value) {\r\n    return \"string\" === (0, _type.type)(value) && \"%\" === value[value.length - 1]\r\n}\r\n\r\nfunction cacheTranslate($element, translate) {\r\n    if ($element.length) {\r\n        (0, _element_data.data)($element.get(0), TRANSLATOR_DATA_KEY, translate)\r\n    }\r\n}\r\nvar clearCache = function($element) {\r\n    if ($element.length) {\r\n        (0, _element_data.removeData)($element.get(0), TRANSLATOR_DATA_KEY)\r\n    }\r\n};\r\nexports.clearCache = clearCache;\r\nvar getTranslateCss = function(translate) {\r\n    translate.x = translate.x || 0;\r\n    translate.y = translate.y || 0;\r\n    var xValueString = isPercentValue(translate.x) ? translate.x : translate.x + \"px\";\r\n    var yValueString = isPercentValue(translate.y) ? translate.y : translate.y + \"px\";\r\n    return \"translate(\" + xValueString + \", \" + yValueString + \")\"\r\n};\r\nexports.getTranslateCss = getTranslateCss;\r\nvar getTranslate = function($element) {\r\n    var result = $element.length ? (0, _element_data.data)($element.get(0), TRANSLATOR_DATA_KEY) : null;\r\n    if (!result) {\r\n        var transformValue = $element.css(\"transform\") || getTranslateCss({\r\n            x: 0,\r\n            y: 0\r\n        });\r\n        var matrix = transformValue.match(TRANSFORM_MATRIX_REGEX);\r\n        var is3D = matrix && matrix[1];\r\n        if (matrix) {\r\n            matrix = matrix[2].split(\",\");\r\n            if (\"3d\" === is3D) {\r\n                matrix = matrix.slice(12, 15)\r\n            } else {\r\n                matrix.push(0);\r\n                matrix = matrix.slice(4, 7)\r\n            }\r\n        } else {\r\n            matrix = [0, 0, 0]\r\n        }\r\n        result = {\r\n            x: parseFloat(matrix[0]),\r\n            y: parseFloat(matrix[1]),\r\n            z: parseFloat(matrix[2])\r\n        };\r\n        cacheTranslate($element, result)\r\n    }\r\n    return result\r\n};\r\nexports.getTranslate = getTranslate;\r\nvar move = function($element, position) {\r\n    var left = position.left;\r\n    var top = position.top;\r\n    var translate;\r\n    if (void 0 === left) {\r\n        translate = getTranslate($element);\r\n        translate.y = top || 0\r\n    } else {\r\n        if (void 0 === top) {\r\n            translate = getTranslate($element);\r\n            translate.x = left || 0\r\n        } else {\r\n            translate = {\r\n                x: left || 0,\r\n                y: top || 0,\r\n                z: 0\r\n            };\r\n            cacheTranslate($element, translate)\r\n        }\r\n    }\r\n    $element.css({\r\n        transform: getTranslateCss(translate)\r\n    });\r\n    if (isPercentValue(left) || isPercentValue(top)) {\r\n        clearCache($element)\r\n    }\r\n};\r\nexports.move = move;\r\nvar resetPosition = function($element, finishTransition) {\r\n    var originalTransition;\r\n    var stylesConfig = {\r\n        left: 0,\r\n        top: 0,\r\n        transform: \"none\"\r\n    };\r\n    if (finishTransition) {\r\n        originalTransition = $element.css(\"transition\");\r\n        stylesConfig.transition = \"none\"\r\n    }\r\n    $element.css(stylesConfig);\r\n    clearCache($element);\r\n    if (finishTransition) {\r\n        $element.get(0).offsetHeight;\r\n        $element.css(\"transition\", originalTransition)\r\n    }\r\n};\r\nexports.resetPosition = resetPosition;\r\nvar parseTranslate = function(translateString) {\r\n    var result = translateString.match(TRANSLATE_REGEX);\r\n    if (!result || !result[1]) {\r\n        return\r\n    }\r\n    result = result[1].split(\",\");\r\n    result = {\r\n        x: parseFloat(result[0]),\r\n        y: parseFloat(result[1]),\r\n        z: parseFloat(result[2])\r\n    };\r\n    return result\r\n};\r\nexports.parseTranslate = parseTranslate;\r\n","/**\r\n * DevExtreme (core/templates/bindable_template.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.BindableTemplate = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../renderer\"));\r\nvar _template_base = require(\"./template_base\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _remove_event = _interopRequireDefault(require(\"../remove_event\"));\r\nvar _type = require(\"../utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar watchChanges = function() {\r\n    var globalWatch = function(data, watchMethod, callback) {\r\n        return watchMethod(function() {\r\n            return data\r\n        }, callback)\r\n    };\r\n    var fieldsWatch = function(data, watchMethod, fields, fieldsMap, callback) {\r\n        var resolvedData = {};\r\n        var missedFields = fields.slice();\r\n        var watchHandlers = fields.map(function(name) {\r\n            var fieldGetter = fieldsMap[name];\r\n            return watchMethod(fieldGetter ? function() {\r\n                return fieldGetter(data)\r\n            } : function() {\r\n                return data[name]\r\n            }, function(value) {\r\n                resolvedData[name] = value;\r\n                if (missedFields.length) {\r\n                    var index = missedFields.indexOf(name);\r\n                    if (index >= 0) {\r\n                        missedFields.splice(index, 1)\r\n                    }\r\n                }\r\n                if (!missedFields.length) {\r\n                    callback(resolvedData)\r\n                }\r\n            })\r\n        });\r\n        return function() {\r\n            watchHandlers.forEach(function(dispose) {\r\n                return dispose()\r\n            })\r\n        }\r\n    };\r\n    return function(rawData, watchMethod, fields, fieldsMap, callback) {\r\n        var fieldsDispose;\r\n        var globalDispose = globalWatch(rawData, watchMethod, function(dataWithRawFields) {\r\n            fieldsDispose && fieldsDispose();\r\n            if ((0, _type.isPrimitive)(dataWithRawFields)) {\r\n                callback(dataWithRawFields);\r\n                return\r\n            }\r\n            fieldsDispose = fieldsWatch(dataWithRawFields, watchMethod, fields, fieldsMap, callback)\r\n        });\r\n        return function() {\r\n            fieldsDispose && fieldsDispose();\r\n            globalDispose && globalDispose()\r\n        }\r\n    }\r\n}();\r\nvar BindableTemplate = function(_TemplateBase) {\r\n    _inheritsLoose(BindableTemplate, _TemplateBase);\r\n\r\n    function BindableTemplate(render, fields, watchMethod, fieldsMap) {\r\n        var _this;\r\n        _this = _TemplateBase.call(this) || this;\r\n        _this._render = render;\r\n        _this._fields = fields;\r\n        _this._fieldsMap = fieldsMap || {};\r\n        _this._watchMethod = watchMethod;\r\n        return _this\r\n    }\r\n    var _proto = BindableTemplate.prototype;\r\n    _proto._renderCore = function(options) {\r\n        var _this2 = this;\r\n        var $container = (0, _renderer.default)(options.container);\r\n        var dispose = watchChanges(options.model, this._watchMethod, this._fields, this._fieldsMap, function(data) {\r\n            $container.empty();\r\n            _this2._render($container, data, options.model)\r\n        });\r\n        _events_engine.default.on($container, _remove_event.default, dispose);\r\n        return $container.contents()\r\n    };\r\n    return BindableTemplate\r\n}(_template_base.TemplateBase);\r\nexports.BindableTemplate = BindableTemplate;\r\n","/**\r\n * DevExtreme (core/utils/array_compare.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.isKeysEqual = exports.findChanges = void 0;\r\nvar _type = require(\"./type\");\r\nvar getKeyWrapper = function(item, getKey) {\r\n    var key = getKey(item);\r\n    if ((0, _type.isObject)(key)) {\r\n        try {\r\n            return JSON.stringify(key)\r\n        } catch (e) {\r\n            return key\r\n        }\r\n    }\r\n    return key\r\n};\r\nvar getSameNewByOld = function(oldItem, newItems, newIndexByKey, getKey) {\r\n    var key = getKeyWrapper(oldItem, getKey);\r\n    return newItems[newIndexByKey[key]]\r\n};\r\nvar isKeysEqual = function(oldKeys, newKeys) {\r\n    if (oldKeys.length !== newKeys.length) {\r\n        return false\r\n    }\r\n    for (var i = 0; i < newKeys.length; i++) {\r\n        if (oldKeys[i] !== newKeys[i]) {\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n};\r\nexports.isKeysEqual = isKeysEqual;\r\nvar findChanges = function(oldItems, newItems, getKey, isItemEquals) {\r\n    var oldIndexByKey = {};\r\n    var newIndexByKey = {};\r\n    var addedCount = 0;\r\n    var removeCount = 0;\r\n    var result = [];\r\n    oldItems.forEach(function(item, index) {\r\n        var key = getKeyWrapper(item, getKey);\r\n        oldIndexByKey[key] = index\r\n    });\r\n    newItems.forEach(function(item, index) {\r\n        var key = getKeyWrapper(item, getKey);\r\n        newIndexByKey[key] = index\r\n    });\r\n    var itemCount = Math.max(oldItems.length, newItems.length);\r\n    for (var index = 0; index < itemCount + addedCount; index++) {\r\n        var newItem = newItems[index];\r\n        var oldNextIndex = index - addedCount + removeCount;\r\n        var nextOldItem = oldItems[oldNextIndex];\r\n        var isRemoved = !newItem || nextOldItem && !getSameNewByOld(nextOldItem, newItems, newIndexByKey, getKey);\r\n        if (isRemoved) {\r\n            if (nextOldItem) {\r\n                result.push({\r\n                    type: \"remove\",\r\n                    key: getKey(nextOldItem),\r\n                    index: index,\r\n                    oldItem: nextOldItem\r\n                });\r\n                removeCount++;\r\n                index--\r\n            }\r\n        } else {\r\n            var key = getKeyWrapper(newItem, getKey);\r\n            var oldIndex = oldIndexByKey[key];\r\n            var oldItem = oldItems[oldIndex];\r\n            if (!oldItem) {\r\n                addedCount++;\r\n                result.push({\r\n                    type: \"insert\",\r\n                    data: newItem,\r\n                    index: index\r\n                })\r\n            } else {\r\n                if (oldIndex === oldNextIndex) {\r\n                    if (!isItemEquals(oldItem, newItem)) {\r\n                        result.push({\r\n                            type: \"update\",\r\n                            data: newItem,\r\n                            key: getKey(newItem),\r\n                            index: index,\r\n                            oldItem: oldItem\r\n                        })\r\n                    }\r\n                } else {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result\r\n};\r\nexports.findChanges = findChanges;\r\n","/**\r\n * DevExtreme (core/utils/date.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"./type\");\r\nvar _math = require(\"./math\");\r\nvar _iterator = require(\"./iterator\");\r\nvar _inflector = require(\"./inflector\");\r\nvar _browser = _interopRequireDefault(require(\"./browser\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _construct(Parent, args, Class) {\r\n    if (_isNativeReflectConstruct()) {\r\n        _construct = Reflect.construct\r\n    } else {\r\n        _construct = function(Parent, args, Class) {\r\n            var a = [null];\r\n            a.push.apply(a, args);\r\n            var Constructor = Function.bind.apply(Parent, a);\r\n            var instance = new Constructor;\r\n            if (Class) {\r\n                _setPrototypeOf(instance, Class.prototype)\r\n            }\r\n            return instance\r\n        }\r\n    }\r\n    return _construct.apply(null, arguments)\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n    if (\"undefined\" === typeof Reflect || !Reflect.construct) {\r\n        return false\r\n    }\r\n    if (Reflect.construct.sham) {\r\n        return false\r\n    }\r\n    if (\"function\" === typeof Proxy) {\r\n        return true\r\n    }\r\n    try {\r\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\r\n        return true\r\n    } catch (e) {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar isIE11 = _browser.default.msie && parseInt(_browser.default.version) <= 11;\r\nvar dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\"];\r\nvar toMilliseconds = function toMilliseconds(value) {\r\n    switch (value) {\r\n        case \"millisecond\":\r\n            return 1;\r\n        case \"second\":\r\n            return 1e3 * toMilliseconds(\"millisecond\");\r\n        case \"minute\":\r\n            return 60 * toMilliseconds(\"second\");\r\n        case \"hour\":\r\n            return 60 * toMilliseconds(\"minute\");\r\n        case \"day\":\r\n            return 24 * toMilliseconds(\"hour\");\r\n        case \"week\":\r\n            return 7 * toMilliseconds(\"day\");\r\n        case \"month\":\r\n            return 30 * toMilliseconds(\"day\");\r\n        case \"quarter\":\r\n            return 3 * toMilliseconds(\"month\");\r\n        case \"year\":\r\n            return 365 * toMilliseconds(\"day\");\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar getDatesInterval = function(startDate, endDate, intervalUnit) {\r\n    var delta = endDate.getTime() - startDate.getTime();\r\n    var millisecondCount = toMilliseconds(intervalUnit) || 1;\r\n    return Math.floor(delta / millisecondCount)\r\n};\r\nvar getNextDateUnit = function(unit, withWeeks) {\r\n    var interval = getDateUnitInterval(unit);\r\n    switch (interval) {\r\n        case \"millisecond\":\r\n            return \"second\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"day\":\r\n            return withWeeks ? \"week\" : \"month\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"month\":\r\n            return \"quarter\";\r\n        case \"quarter\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"year\";\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar convertMillisecondsToDateUnits = function(value) {\r\n    var i;\r\n    var dateUnitCount;\r\n    var dateUnitInterval;\r\n    var dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\"];\r\n    var result = {};\r\n    for (i = dateUnitIntervals.length - 1; i >= 0; i--) {\r\n        dateUnitInterval = dateUnitIntervals[i];\r\n        dateUnitCount = Math.floor(value / toMilliseconds(dateUnitInterval));\r\n        if (dateUnitCount > 0) {\r\n            result[dateUnitInterval + \"s\"] = dateUnitCount;\r\n            value -= convertDateUnitToMilliseconds(dateUnitInterval, dateUnitCount)\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar dateToMilliseconds = function(tickInterval) {\r\n    var milliseconds = 0;\r\n    if ((0, _type.isObject)(tickInterval)) {\r\n        (0, _iterator.each)(tickInterval, function(key, value) {\r\n            milliseconds += convertDateUnitToMilliseconds(key.substr(0, key.length - 1), value)\r\n        })\r\n    }\r\n    if ((0, _type.isString)(tickInterval)) {\r\n        milliseconds = convertDateUnitToMilliseconds(tickInterval, 1)\r\n    }\r\n    return milliseconds\r\n};\r\n\r\nfunction convertDateUnitToMilliseconds(dateUnit, count) {\r\n    return toMilliseconds(dateUnit) * count\r\n}\r\n\r\nfunction getDateUnitInterval(tickInterval) {\r\n    var maxInterval = -1;\r\n    var i;\r\n    if ((0, _type.isString)(tickInterval)) {\r\n        return tickInterval\r\n    }\r\n    if ((0, _type.isObject)(tickInterval)) {\r\n        (0, _iterator.each)(tickInterval, function(key, value) {\r\n            for (i = 0; i < dateUnitIntervals.length; i++) {\r\n                if (value && (key === dateUnitIntervals[i] + \"s\" || key === dateUnitIntervals[i]) && maxInterval < i) {\r\n                    maxInterval = i\r\n                }\r\n            }\r\n        });\r\n        return dateUnitIntervals[maxInterval]\r\n    }\r\n    return \"\"\r\n}\r\nvar tickIntervalToFormatMap = {\r\n    millisecond: \"millisecond\",\r\n    second: \"longtime\",\r\n    minute: \"shorttime\",\r\n    hour: \"shorttime\",\r\n    day: \"day\",\r\n    week: \"day\",\r\n    month: \"month\",\r\n    quarter: \"quarter\",\r\n    year: \"year\"\r\n};\r\n\r\nfunction getDateFormatByTickInterval(tickInterval) {\r\n    return tickIntervalToFormatMap[getDateUnitInterval(tickInterval)] || \"\"\r\n}\r\nvar getQuarter = function(month) {\r\n    return Math.floor(month / 3)\r\n};\r\nvar getFirstQuarterMonth = function(month) {\r\n    return 3 * getQuarter(month)\r\n};\r\n\r\nfunction correctDateWithUnitBeginning(date, dateInterval, withCorrection, firstDayOfWeek) {\r\n    date = new Date(date.getTime());\r\n    var oldDate = new Date(date.getTime());\r\n    var firstQuarterMonth;\r\n    var month;\r\n    var dateUnitInterval = getDateUnitInterval(dateInterval);\r\n    switch (dateUnitInterval) {\r\n        case \"second\":\r\n            date = new Date(1e3 * Math.floor(oldDate.getTime() / 1e3));\r\n            break;\r\n        case \"minute\":\r\n            date = new Date(6e4 * Math.floor(oldDate.getTime() / 6e4));\r\n            break;\r\n        case \"hour\":\r\n            date = new Date(36e5 * Math.floor(oldDate.getTime() / 36e5));\r\n            break;\r\n        case \"year\":\r\n            date.setMonth(0);\r\n        case \"month\":\r\n            date.setDate(1);\r\n        case \"day\":\r\n            date.setHours(0, 0, 0, 0);\r\n            break;\r\n        case \"week\":\r\n            date = getFirstWeekDate(date, firstDayOfWeek || 0);\r\n            date.setHours(0, 0, 0, 0);\r\n            break;\r\n        case \"quarter\":\r\n            firstQuarterMonth = getFirstQuarterMonth(date.getMonth());\r\n            month = date.getMonth();\r\n            date.setDate(1);\r\n            date.setHours(0, 0, 0, 0);\r\n            if (month !== firstQuarterMonth) {\r\n                date.setMonth(firstQuarterMonth)\r\n            }\r\n    }\r\n    if (withCorrection && \"hour\" !== dateUnitInterval && \"minute\" !== dateUnitInterval && \"second\" !== dateUnitInterval) {\r\n        fixTimezoneGap(oldDate, date)\r\n    }\r\n    return date\r\n}\r\n\r\nfunction trimTime(date) {\r\n    return correctDateWithUnitBeginning(date, \"day\")\r\n}\r\nvar setToDayEnd = function(date) {\r\n    var result = trimTime(date);\r\n    result.setDate(result.getDate() + 1);\r\n    return new Date(result.getTime() - 1)\r\n};\r\nvar getDatesDifferences = function(date1, date2) {\r\n    var counter = 0;\r\n    var differences = {\r\n        year: date1.getFullYear() !== date2.getFullYear(),\r\n        month: date1.getMonth() !== date2.getMonth(),\r\n        day: date1.getDate() !== date2.getDate(),\r\n        hour: date1.getHours() !== date2.getHours(),\r\n        minute: date1.getMinutes() !== date2.getMinutes(),\r\n        second: date1.getSeconds() !== date2.getSeconds(),\r\n        millisecond: date1.getMilliseconds() !== date2.getMilliseconds()\r\n    };\r\n    (0, _iterator.each)(differences, function(key, value) {\r\n        if (value) {\r\n            counter++\r\n        }\r\n    });\r\n    if (0 === counter && 0 !== getTimezonesDifference(date1, date2)) {\r\n        differences.hour = true;\r\n        counter++\r\n    }\r\n    differences.count = counter;\r\n    return differences\r\n};\r\n\r\nfunction addDateInterval(value, interval, dir) {\r\n    var result = new Date(value.getTime());\r\n    var intervalObject = (0, _type.isString)(interval) ? getDateIntervalByString(interval.toLowerCase()) : (0, _type.isNumeric)(interval) ? convertMillisecondsToDateUnits(interval) : interval;\r\n    if (intervalObject.years) {\r\n        result.setFullYear(result.getFullYear() + intervalObject.years * dir)\r\n    }\r\n    if (intervalObject.quarters) {\r\n        result.setMonth(result.getMonth() + 3 * intervalObject.quarters * dir)\r\n    }\r\n    if (intervalObject.months) {\r\n        result.setMonth(result.getMonth() + intervalObject.months * dir)\r\n    }\r\n    if (intervalObject.weeks) {\r\n        result.setDate(result.getDate() + 7 * intervalObject.weeks * dir)\r\n    }\r\n    if (intervalObject.days) {\r\n        result.setDate(result.getDate() + intervalObject.days * dir)\r\n    }\r\n    if (intervalObject.hours) {\r\n        result.setTime(result.getTime() + 36e5 * intervalObject.hours * dir)\r\n    }\r\n    if (intervalObject.minutes) {\r\n        result.setTime(result.getTime() + 6e4 * intervalObject.minutes * dir)\r\n    }\r\n    if (intervalObject.seconds) {\r\n        result.setTime(result.getTime() + 1e3 * intervalObject.seconds * dir)\r\n    }\r\n    if (intervalObject.milliseconds) {\r\n        result.setTime(result.getTime() + intervalObject.milliseconds * dir)\r\n    }\r\n    return result\r\n}\r\nvar addInterval = function(value, interval, isNegative) {\r\n    var dir = isNegative ? -1 : 1;\r\n    return (0, _type.isDate)(value) ? addDateInterval(value, interval, dir) : (0, _math.adjust)(value + interval * dir, interval)\r\n};\r\nvar getSequenceByInterval = function(min, max, interval) {\r\n    var intervals = [];\r\n    var cur;\r\n    intervals.push((0, _type.isDate)(min) ? new Date(min.getTime()) : min);\r\n    cur = min;\r\n    while (cur < max) {\r\n        cur = addInterval(cur, interval);\r\n        intervals.push(cur)\r\n    }\r\n    return intervals\r\n};\r\nvar getViewFirstCellDate = function(viewType, date) {\r\n    if (\"month\" === viewType) {\r\n        return createDateWithFullYear(date.getFullYear(), date.getMonth(), 1)\r\n    }\r\n    if (\"year\" === viewType) {\r\n        return createDateWithFullYear(date.getFullYear(), 0, date.getDate())\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        return createDateWithFullYear(getFirstYearInDecade(date), date.getMonth(), date.getDate())\r\n    }\r\n    if (\"century\" === viewType) {\r\n        return createDateWithFullYear(getFirstDecadeInCentury(date), date.getMonth(), date.getDate())\r\n    }\r\n};\r\nvar getViewLastCellDate = function(viewType, date) {\r\n    if (\"month\" === viewType) {\r\n        return createDateWithFullYear(date.getFullYear(), date.getMonth(), getLastMonthDay(date))\r\n    }\r\n    if (\"year\" === viewType) {\r\n        return createDateWithFullYear(date.getFullYear(), 11, date.getDate())\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        return createDateWithFullYear(getFirstYearInDecade(date) + 9, date.getMonth(), date.getDate())\r\n    }\r\n    if (\"century\" === viewType) {\r\n        return createDateWithFullYear(getFirstDecadeInCentury(date) + 90, date.getMonth(), date.getDate())\r\n    }\r\n};\r\nvar getViewMinBoundaryDate = function(viewType, date) {\r\n    var resultDate = createDateWithFullYear(date.getFullYear(), date.getMonth(), 1);\r\n    if (\"month\" === viewType) {\r\n        return resultDate\r\n    }\r\n    resultDate.setMonth(0);\r\n    if (\"year\" === viewType) {\r\n        return resultDate\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        resultDate.setFullYear(getFirstYearInDecade(date))\r\n    }\r\n    if (\"century\" === viewType) {\r\n        resultDate.setFullYear(getFirstDecadeInCentury(date))\r\n    }\r\n    return resultDate\r\n};\r\nvar getViewMaxBoundaryDate = function(viewType, date) {\r\n    var resultDate = new Date(date);\r\n    resultDate.setDate(getLastMonthDay(date));\r\n    if (\"month\" === viewType) {\r\n        return resultDate\r\n    }\r\n    resultDate.setMonth(11);\r\n    resultDate.setDate(getLastMonthDay(resultDate));\r\n    if (\"year\" === viewType) {\r\n        return resultDate\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        resultDate.setFullYear(getFirstYearInDecade(date) + 9)\r\n    }\r\n    if (\"century\" === viewType) {\r\n        resultDate.setFullYear(getFirstDecadeInCentury(date) + 99)\r\n    }\r\n    return resultDate\r\n};\r\n\r\nfunction getLastMonthDay(date) {\r\n    var resultDate = createDateWithFullYear(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return resultDate.getDate()\r\n}\r\nvar getViewUp = function(typeView) {\r\n    switch (typeView) {\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"decade\";\r\n        case \"decade\":\r\n            return \"century\"\r\n    }\r\n};\r\nvar getViewDown = function(typeView) {\r\n    switch (typeView) {\r\n        case \"century\":\r\n            return \"decade\";\r\n        case \"decade\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"month\"\r\n    }\r\n};\r\nvar getDifferenceInMonth = function(typeView) {\r\n    var difference = 1;\r\n    if (\"year\" === typeView) {\r\n        difference = 12\r\n    }\r\n    if (\"decade\" === typeView) {\r\n        difference = 120\r\n    }\r\n    if (\"century\" === typeView) {\r\n        difference = 1200\r\n    }\r\n    return difference\r\n};\r\nvar getDifferenceInMonthForCells = function(typeView) {\r\n    var difference = 1;\r\n    if (\"decade\" === typeView) {\r\n        difference = 12\r\n    }\r\n    if (\"century\" === typeView) {\r\n        difference = 120\r\n    }\r\n    return difference\r\n};\r\n\r\nfunction getDateIntervalByString(intervalString) {\r\n    var result = {};\r\n    switch (intervalString) {\r\n        case \"year\":\r\n            result.years = 1;\r\n            break;\r\n        case \"month\":\r\n            result.months = 1;\r\n            break;\r\n        case \"quarter\":\r\n            result.months = 3;\r\n            break;\r\n        case \"week\":\r\n            result.weeks = 1;\r\n            break;\r\n        case \"day\":\r\n            result.days = 1;\r\n            break;\r\n        case \"hour\":\r\n            result.hours = 1;\r\n            break;\r\n        case \"minute\":\r\n            result.minutes = 1;\r\n            break;\r\n        case \"second\":\r\n            result.seconds = 1;\r\n            break;\r\n        case \"millisecond\":\r\n            result.milliseconds = 1\r\n    }\r\n    return result\r\n}\r\n\r\nfunction sameDate(date1, date2) {\r\n    return sameMonthAndYear(date1, date2) && date1.getDate() === date2.getDate()\r\n}\r\n\r\nfunction sameMonthAndYear(date1, date2) {\r\n    return sameYear(date1, date2) && date1.getMonth() === date2.getMonth()\r\n}\r\n\r\nfunction sameYear(date1, date2) {\r\n    return date1 && date2 && date1.getFullYear() === date2.getFullYear()\r\n}\r\nvar sameDecade = function(date1, date2) {\r\n    if (!(0, _type.isDefined)(date1) || !(0, _type.isDefined)(date2)) {\r\n        return\r\n    }\r\n    var startDecadeDate1 = date1.getFullYear() - date1.getFullYear() % 10;\r\n    var startDecadeDate2 = date2.getFullYear() - date2.getFullYear() % 10;\r\n    return date1 && date2 && startDecadeDate1 === startDecadeDate2\r\n};\r\nvar sameCentury = function(date1, date2) {\r\n    if (!(0, _type.isDefined)(date1) || !(0, _type.isDefined)(date2)) {\r\n        return\r\n    }\r\n    var startCenturyDate1 = date1.getFullYear() - date1.getFullYear() % 100;\r\n    var startCenturyDate2 = date2.getFullYear() - date2.getFullYear() % 100;\r\n    return date1 && date2 && startCenturyDate1 === startCenturyDate2\r\n};\r\n\r\nfunction getFirstDecadeInCentury(date) {\r\n    return date && date.getFullYear() - date.getFullYear() % 100\r\n}\r\n\r\nfunction getFirstYearInDecade(date) {\r\n    return date && date.getFullYear() - date.getFullYear() % 10\r\n}\r\nvar getShortDateFormat = function() {\r\n    return \"yyyy/MM/dd\"\r\n};\r\nvar getFirstMonthDate = function(date) {\r\n    if (!(0, _type.isDefined)(date)) {\r\n        return\r\n    }\r\n    return createDateWithFullYear(date.getFullYear(), date.getMonth(), 1)\r\n};\r\nvar getLastMonthDate = function(date) {\r\n    if (!(0, _type.isDefined)(date)) {\r\n        return\r\n    }\r\n    return createDateWithFullYear(date.getFullYear(), date.getMonth() + 1, 0)\r\n};\r\n\r\nfunction getFirstWeekDate(date, firstDayOfWeek) {\r\n    var delta = (date.getDay() - firstDayOfWeek + 7) % 7;\r\n    var result = new Date(date);\r\n    result.setDate(date.getDate() - delta);\r\n    return result\r\n}\r\nvar normalizeDateByWeek = function(date, currentDate) {\r\n    var differenceInDays = dateUtils.getDatesInterval(date, currentDate, \"day\");\r\n    var resultDate = new Date(date);\r\n    if (differenceInDays >= 6) {\r\n        resultDate = new Date(resultDate.setDate(resultDate.getDate() + 7))\r\n    }\r\n    return resultDate\r\n};\r\nvar dateInRange = function(date, min, max, format) {\r\n    if (\"date\" === format) {\r\n        min = min && dateUtils.correctDateWithUnitBeginning(min, \"day\");\r\n        max = max && dateUtils.correctDateWithUnitBeginning(max, \"day\");\r\n        date = date && dateUtils.correctDateWithUnitBeginning(date, \"day\")\r\n    }\r\n    return normalizeDate(date, min, max) === date\r\n};\r\nvar dateTimeFromDecimal = function(number) {\r\n    var hours = Math.floor(number);\r\n    var minutes = number % 1 * 60;\r\n    return {\r\n        hours: hours,\r\n        minutes: minutes\r\n    }\r\n};\r\nvar roundDateByStartDayHour = function(date, startDayHour) {\r\n    var startTime = this.dateTimeFromDecimal(startDayHour);\r\n    var result = new Date(date);\r\n    if (date.getHours() === startTime.hours && date.getMinutes() < startTime.minutes || date.getHours() < startTime.hours) {\r\n        result.setHours(startTime.hours, startTime.minutes, 0, 0)\r\n    }\r\n    return result\r\n};\r\n\r\nfunction normalizeDate(date, min, max) {\r\n    var normalizedDate = date;\r\n    if (!(0, _type.isDefined)(date)) {\r\n        return date\r\n    }\r\n    if ((0, _type.isDefined)(min) && date < min) {\r\n        normalizedDate = min\r\n    }\r\n    if ((0, _type.isDefined)(max) && date > max) {\r\n        normalizedDate = max\r\n    }\r\n    return normalizedDate\r\n}\r\n\r\nfunction fixTimezoneGap(oldDate, newDate) {\r\n    if (!(0, _type.isDefined)(oldDate)) {\r\n        return\r\n    }\r\n    var diff = newDate.getHours() - oldDate.getHours();\r\n    if (0 === diff) {\r\n        return\r\n    }\r\n    var sign = 1 === diff || diff === -23 ? -1 : 1;\r\n    var trial = new Date(newDate.getTime() + 36e5 * sign);\r\n    if (sign > 0 || trial.getDate() === newDate.getDate()) {\r\n        newDate.setTime(trial.getTime())\r\n    }\r\n}\r\nvar roundToHour = function(date) {\r\n    date.setHours(date.getHours() + 1);\r\n    date.setMinutes(0);\r\n    return date\r\n};\r\n\r\nfunction getTimezonesDifference(min, max) {\r\n    return 60 * (max.getTimezoneOffset() - min.getTimezoneOffset()) * 1e3\r\n}\r\nvar makeDate = function(date) {\r\n    return new Date(date)\r\n};\r\nvar getDatesOfInterval = function(startDate, endDate, step) {\r\n    var result = [];\r\n    var currentDate = new Date(startDate.getTime());\r\n    while (currentDate < endDate) {\r\n        result.push(new Date(currentDate.getTime()));\r\n        currentDate = this.addInterval(currentDate, step)\r\n    }\r\n    return result\r\n};\r\nvar createDate = function(date) {\r\n    return new Date(isIE11 && (0, _type.isDate)(date) ? date.getTime() : date)\r\n};\r\nvar createDateWithFullYear = function(year) {\r\n    var result = _construct(Date, Array.prototype.slice.call(arguments));\r\n    result.setFullYear(year);\r\n    return result\r\n};\r\nvar dateUtils = {\r\n    dateUnitIntervals: dateUnitIntervals,\r\n    convertMillisecondsToDateUnits: convertMillisecondsToDateUnits,\r\n    dateToMilliseconds: dateToMilliseconds,\r\n    getNextDateUnit: getNextDateUnit,\r\n    convertDateUnitToMilliseconds: convertDateUnitToMilliseconds,\r\n    getDateUnitInterval: getDateUnitInterval,\r\n    getDateFormatByTickInterval: getDateFormatByTickInterval,\r\n    getDatesDifferences: getDatesDifferences,\r\n    correctDateWithUnitBeginning: correctDateWithUnitBeginning,\r\n    trimTime: trimTime,\r\n    setToDayEnd: setToDayEnd,\r\n    roundDateByStartDayHour: roundDateByStartDayHour,\r\n    dateTimeFromDecimal: dateTimeFromDecimal,\r\n    addDateInterval: addDateInterval,\r\n    addInterval: addInterval,\r\n    getSequenceByInterval: getSequenceByInterval,\r\n    getDateIntervalByString: getDateIntervalByString,\r\n    sameDate: sameDate,\r\n    sameMonthAndYear: sameMonthAndYear,\r\n    sameMonth: sameMonthAndYear,\r\n    sameYear: sameYear,\r\n    sameDecade: sameDecade,\r\n    sameCentury: sameCentury,\r\n    getDifferenceInMonth: getDifferenceInMonth,\r\n    getDifferenceInMonthForCells: getDifferenceInMonthForCells,\r\n    getFirstYearInDecade: getFirstYearInDecade,\r\n    getFirstDecadeInCentury: getFirstDecadeInCentury,\r\n    getShortDateFormat: getShortDateFormat,\r\n    getViewFirstCellDate: getViewFirstCellDate,\r\n    getViewLastCellDate: getViewLastCellDate,\r\n    getViewDown: getViewDown,\r\n    getViewUp: getViewUp,\r\n    getLastMonthDay: getLastMonthDay,\r\n    getLastMonthDate: getLastMonthDate,\r\n    getFirstMonthDate: getFirstMonthDate,\r\n    getFirstWeekDate: getFirstWeekDate,\r\n    normalizeDateByWeek: normalizeDateByWeek,\r\n    getQuarter: getQuarter,\r\n    getFirstQuarterMonth: getFirstQuarterMonth,\r\n    dateInRange: dateInRange,\r\n    roundToHour: roundToHour,\r\n    normalizeDate: normalizeDate,\r\n    getViewMinBoundaryDate: getViewMinBoundaryDate,\r\n    getViewMaxBoundaryDate: getViewMaxBoundaryDate,\r\n    fixTimezoneGap: fixTimezoneGap,\r\n    getTimezonesDifference: getTimezonesDifference,\r\n    makeDate: makeDate,\r\n    getDatesInterval: getDatesInterval,\r\n    getDatesOfInterval: getDatesOfInterval,\r\n    createDate: createDate,\r\n    createDateWithFullYear: createDateWithFullYear\r\n};\r\ndateUtils.sameView = function(view, date1, date2) {\r\n    return dateUtils[(0, _inflector.camelize)(\"same \" + view)](date1, date2)\r\n};\r\nvar _default = dateUtils;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (core/utils/date_serialization.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _config = _interopRequireDefault(require(\"../config\"));\r\nvar _date = require(\"../../localization/ldml/date.formatter\");\r\nvar _default_date_names = _interopRequireDefault(require(\"../../localization/default_date_names\"));\r\nvar _type = require(\"./type\");\r\nvar _browser = _interopRequireDefault(require(\"./browser\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar NUMBER_SERIALIZATION_FORMAT = \"number\";\r\nvar DATE_SERIALIZATION_FORMAT = \"yyyy/MM/dd\";\r\nvar DATETIME_SERIALIZATION_FORMAT = \"yyyy/MM/dd HH:mm:ss\";\r\nvar ISO8601_PATTERN = /^(\\d{4,})(-)?(\\d{2})(-)?(\\d{2})(?:T(\\d{2})(:)?(\\d{2})?(:)?(\\d{2}(?:\\.(\\d{1,3})\\d*)?)?)?(Z|([+-])(\\d{2})(:)?(\\d{2})?)?$/;\r\nvar ISO8601_TIME_PATTERN = /^(\\d{2}):(\\d{2})(:(\\d{2}))?$/;\r\nvar ISO8601_PATTERN_PARTS = [\"\", \"yyyy\", \"\", \"MM\", \"\", \"dd\", \"THH\", \"\", \"mm\", \"\", \"ss\", \".SSS\"];\r\nvar DATE_SERIALIZATION_PATTERN = /^(\\d{4})\\/(\\d{2})\\/(\\d{2})$/;\r\nvar MILLISECOND_LENGHT = 3;\r\nvar isIE11 = _browser.default.msie && parseInt(_browser.default.version) <= 11;\r\nvar dateParser = function(text, skipISO8601Parsing) {\r\n    var result;\r\n    if ((0, _type.isString)(text) && !skipISO8601Parsing) {\r\n        result = parseISO8601String(text)\r\n    }\r\n    return result || parseDate(text)\r\n};\r\n\r\nfunction getTimePart(part) {\r\n    return +part || 0\r\n}\r\n\r\nfunction parseDate(text) {\r\n    var isDefaultSerializationFormat = getDateSerializationFormat(text) === DATE_SERIALIZATION_FORMAT;\r\n    var parsedValue = !(0, _type.isDate)(text) && Date.parse(text);\r\n    if ((!parsedValue || isIE11) && isDefaultSerializationFormat) {\r\n        var parts = text.match(DATE_SERIALIZATION_PATTERN);\r\n        if (parts) {\r\n            var newDate = new Date(getTimePart(parts[1]), getTimePart(parts[2]), getTimePart(parts[3]));\r\n            newDate.setFullYear(getTimePart(parts[1]));\r\n            newDate.setMonth(getTimePart(parts[2]) - 1);\r\n            newDate.setDate(getTimePart(parts[3]));\r\n            return newDate\r\n        }\r\n    }\r\n    return (0, _type.isNumeric)(parsedValue) ? new Date(parsedValue) : text\r\n}\r\n\r\nfunction parseISO8601String(text) {\r\n    var parts = text.match(ISO8601_PATTERN);\r\n    if (!parts) {\r\n        parts = text.match(ISO8601_TIME_PATTERN);\r\n        if (parts) {\r\n            return new Date(0, 0, 0, getTimePart(parts[1]), getTimePart(parts[2]), getTimePart(parts[4]))\r\n        }\r\n        return\r\n    }\r\n    var year = parts[1];\r\n    var month = --parts[3];\r\n    var day = parts[5];\r\n    var timeZoneHour = 0;\r\n    var timeZoneMinute = 0;\r\n    timeZoneHour = getTimePart(parts[14]);\r\n    timeZoneMinute = getTimePart(parts[16]);\r\n    if (\"-\" === parts[13]) {\r\n        timeZoneHour = -timeZoneHour;\r\n        timeZoneMinute = -timeZoneMinute\r\n    }\r\n    var hour = getTimePart(parts[6]) - timeZoneHour;\r\n    var minute = getTimePart(parts[8]) - timeZoneMinute;\r\n    var second = getTimePart(parts[10]);\r\n    var parseMilliseconds = function(part) {\r\n        part = part || \"\";\r\n        return getTimePart(part) * Math.pow(10, MILLISECOND_LENGHT - part.length)\r\n    };\r\n    var millisecond = parseMilliseconds(parts[11]);\r\n    if (parts[12]) {\r\n        return new Date(Date.UTC(year, month, day, hour, minute, second, millisecond))\r\n    }\r\n    return new Date(year, month, day, hour, minute, second, millisecond)\r\n}\r\nvar getIso8601Format = function(text, useUtc) {\r\n    var parts = text.match(ISO8601_PATTERN);\r\n    var result = \"\";\r\n    if (!parts) {\r\n        parts = text.match(ISO8601_TIME_PATTERN);\r\n        if (parts) {\r\n            return parts[3] ? \"HH:mm:ss\" : \"HH:mm\"\r\n        }\r\n        return\r\n    }\r\n    for (var i = 1; i < ISO8601_PATTERN_PARTS.length; i++) {\r\n        if (parts[i]) {\r\n            result += ISO8601_PATTERN_PARTS[i] || parts[i]\r\n        }\r\n    }\r\n    if (\"Z\" === parts[12]) {\r\n        result += \"'Z'\"\r\n    }\r\n    if (parts[14]) {\r\n        if (parts[15]) {\r\n            result += \"xxx\"\r\n        } else {\r\n            if (parts[16]) {\r\n                result += \"xx\"\r\n            } else {\r\n                result += \"x\"\r\n            }\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar deserializeDate = function(value) {\r\n    if (\"number\" === typeof value) {\r\n        return new Date(value)\r\n    }\r\n    return dateParser(value, !(0, _config.default)().forceIsoDateParsing)\r\n};\r\nvar serializeDate = function(value, serializationFormat) {\r\n    if (!serializationFormat) {\r\n        return value\r\n    }\r\n    if (!(0, _type.isDate)(value)) {\r\n        return null\r\n    }\r\n    if (serializationFormat === NUMBER_SERIALIZATION_FORMAT) {\r\n        return value && value.valueOf ? value.valueOf() : null\r\n    }\r\n    return (0, _date.getFormatter)(serializationFormat, _default_date_names.default)(value)\r\n};\r\nvar getDateSerializationFormat = function(value) {\r\n    if (\"number\" === typeof value) {\r\n        return NUMBER_SERIALIZATION_FORMAT\r\n    } else {\r\n        if ((0, _type.isString)(value)) {\r\n            var format;\r\n            if ((0, _config.default)().forceIsoDateParsing) {\r\n                format = getIso8601Format(value)\r\n            }\r\n            if (format) {\r\n                return format\r\n            } else {\r\n                if (value.indexOf(\":\") >= 0) {\r\n                    return DATETIME_SERIALIZATION_FORMAT\r\n                } else {\r\n                    return DATE_SERIALIZATION_FORMAT\r\n                }\r\n            }\r\n        } else {\r\n            if (value) {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n};\r\nvar _default = {\r\n    dateParser: dateParser,\r\n    deserializeDate: deserializeDate,\r\n    serializeDate: serializeDate,\r\n    getDateSerializationFormat: getDateSerializationFormat\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (core/utils/position.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getDefaultAlignment = exports.getBoundingRect = void 0;\r\nvar _config = _interopRequireDefault(require(\"../config\"));\r\nvar _type = require(\"../utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar getDefaultAlignment = function(isRtlEnabled) {\r\n    var rtlEnabled = null !== isRtlEnabled && void 0 !== isRtlEnabled ? isRtlEnabled : (0, _config.default)().rtlEnabled;\r\n    return rtlEnabled ? \"right\" : \"left\"\r\n};\r\nexports.getDefaultAlignment = getDefaultAlignment;\r\nvar getBoundingRect = function(element) {\r\n    if ((0, _type.isWindow)(element)) {\r\n        return {\r\n            width: element.outerWidth,\r\n            height: element.outerHeight\r\n        }\r\n    }\r\n    var rect;\r\n    try {\r\n        rect = element.getBoundingClientRect()\r\n    } catch (e) {\r\n        rect = {\r\n            width: 0,\r\n            height: 0,\r\n            bottom: 0,\r\n            top: 0,\r\n            left: 0,\r\n            right: 0\r\n        }\r\n    }\r\n    return rect\r\n};\r\nexports.getBoundingRect = getBoundingRect;\r\n","/**\r\n * DevExtreme (core/utils/selection_filter.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.SelectionFilterCreator = void 0;\r\nvar _common = require(\"./common\");\r\nvar _type = require(\"./type\");\r\nvar SelectionFilterCreator = function(selectedItemKeys, isSelectAll) {\r\n    this.getLocalFilter = function(keyGetter, equalKeys, equalByReference, keyExpr) {\r\n        equalKeys = void 0 === equalKeys ? _common.equalByValue : equalKeys;\r\n        return functionFilter.bind(this, equalKeys, keyGetter, equalByReference, keyExpr)\r\n    };\r\n    this.getExpr = function(keyExpr) {\r\n        if (!keyExpr) {\r\n            return\r\n        }\r\n        var filterExpr;\r\n        selectedItemKeys.forEach(function(key, index) {\r\n            filterExpr = filterExpr || [];\r\n            var filterExprPart;\r\n            if (index > 0) {\r\n                filterExpr.push(isSelectAll ? \"and\" : \"or\")\r\n            }\r\n            if ((0, _type.isString)(keyExpr)) {\r\n                filterExprPart = getFilterForPlainKey(keyExpr, key)\r\n            } else {\r\n                filterExprPart = getFilterForCompositeKey(keyExpr, key)\r\n            }\r\n            filterExpr.push(filterExprPart)\r\n        });\r\n        if (filterExpr && 1 === filterExpr.length) {\r\n            filterExpr = filterExpr[0]\r\n        }\r\n        return filterExpr\r\n    };\r\n    this.getCombinedFilter = function(keyExpr, dataSourceFilter) {\r\n        var filterExpr = this.getExpr(keyExpr);\r\n        var combinedFilter = filterExpr;\r\n        if (isSelectAll && dataSourceFilter) {\r\n            if (filterExpr) {\r\n                combinedFilter = [];\r\n                combinedFilter.push(filterExpr);\r\n                combinedFilter.push(dataSourceFilter)\r\n            } else {\r\n                combinedFilter = dataSourceFilter\r\n            }\r\n        }\r\n        return combinedFilter\r\n    };\r\n    var selectedItemKeyHashesMap;\r\n    var getSelectedItemKeyHashesMap = function(selectedItemKeys) {\r\n        if (!selectedItemKeyHashesMap) {\r\n            selectedItemKeyHashesMap = {};\r\n            for (var i = 0; i < selectedItemKeys.length; i++) {\r\n                selectedItemKeyHashesMap[(0, _common.getKeyHash)(selectedItemKeys[i])] = true\r\n            }\r\n        }\r\n        return selectedItemKeyHashesMap\r\n    };\r\n    var normalizeKeys = function(keys, keyOf, keyExpr) {\r\n        return Array.isArray(keyExpr) ? keys.map(function(key) {\r\n            return keyOf(key)\r\n        }) : keys\r\n    };\r\n\r\n    function functionFilter(equalKeys, keyOf, equalByReference, keyExpr, item) {\r\n        var key = keyOf(item);\r\n        var keyHash;\r\n        var i;\r\n        if (!equalByReference) {\r\n            keyHash = (0, _common.getKeyHash)(key);\r\n            if (!(0, _type.isObject)(keyHash)) {\r\n                var selectedKeyHashesMap = getSelectedItemKeyHashesMap(normalizeKeys(selectedItemKeys, keyOf, keyExpr));\r\n                if (selectedKeyHashesMap[keyHash]) {\r\n                    return !isSelectAll\r\n                }\r\n                return !!isSelectAll\r\n            }\r\n        }\r\n        for (i = 0; i < selectedItemKeys.length; i++) {\r\n            if (equalKeys(selectedItemKeys[i], key)) {\r\n                return !isSelectAll\r\n            }\r\n        }\r\n        return !!isSelectAll\r\n    }\r\n\r\n    function getFilterForPlainKey(keyExpr, keyValue) {\r\n        if (void 0 === keyValue) {\r\n            return\r\n        }\r\n        return [keyExpr, isSelectAll ? \"<>\" : \"=\", keyValue]\r\n    }\r\n\r\n    function getFilterForCompositeKey(keyExpr, itemKeyValue) {\r\n        var filterExpr = [];\r\n        for (var i = 0, length = keyExpr.length; i < length; i++) {\r\n            var currentKeyExpr = keyExpr[i];\r\n            var currentKeyValue = itemKeyValue && itemKeyValue[currentKeyExpr];\r\n            var filterExprPart = getFilterForPlainKey(currentKeyExpr, currentKeyValue);\r\n            if (!filterExprPart) {\r\n                break\r\n            }\r\n            if (i > 0) {\r\n                filterExpr.push(isSelectAll ? \"or\" : \"and\")\r\n            }\r\n            filterExpr.push(filterExprPart)\r\n        }\r\n        return filterExpr\r\n    }\r\n};\r\nexports.SelectionFilterCreator = SelectionFilterCreator;\r\n","/**\r\n * DevExtreme (data_helper.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _data_source = require(\"./data/data_source/data_source\");\r\nvar _extend = require(\"./core/utils/extend\");\r\nvar _utils = require(\"./data/data_source/utils\");\r\nvar DATA_SOURCE_OPTIONS_METHOD = \"_dataSourceOptions\";\r\nvar DATA_SOURCE_CHANGED_METHOD = \"_dataSourceChangedHandler\";\r\nvar DATA_SOURCE_LOAD_ERROR_METHOD = \"_dataSourceLoadErrorHandler\";\r\nvar DATA_SOURCE_LOADING_CHANGED_METHOD = \"_dataSourceLoadingChangedHandler\";\r\nvar DATA_SOURCE_FROM_URL_LOAD_MODE_METHOD = \"_dataSourceFromUrlLoadMode\";\r\nvar SPECIFIC_DATA_SOURCE_OPTION = \"_getSpecificDataSourceOption\";\r\nvar NORMALIZE_DATA_SOURCE = \"_normalizeDataSource\";\r\nvar DataHelperMixin = {\r\n    postCtor: function() {\r\n        this.on(\"disposing\", function() {\r\n            this._disposeDataSource()\r\n        }.bind(this))\r\n    },\r\n    _refreshDataSource: function() {\r\n        this._initDataSource();\r\n        this._loadDataSource()\r\n    },\r\n    _initDataSource: function() {\r\n        var dataSourceOptions = SPECIFIC_DATA_SOURCE_OPTION in this ? this[SPECIFIC_DATA_SOURCE_OPTION]() : this.option(\"dataSource\");\r\n        var widgetDataSourceOptions;\r\n        var dataSourceType;\r\n        this._disposeDataSource();\r\n        if (dataSourceOptions) {\r\n            if (dataSourceOptions instanceof _data_source.DataSource) {\r\n                this._isSharedDataSource = true;\r\n                this._dataSource = dataSourceOptions\r\n            } else {\r\n                widgetDataSourceOptions = DATA_SOURCE_OPTIONS_METHOD in this ? this[DATA_SOURCE_OPTIONS_METHOD]() : {};\r\n                dataSourceType = this._dataSourceType ? this._dataSourceType() : _data_source.DataSource;\r\n                dataSourceOptions = (0, _utils.normalizeDataSourceOptions)(dataSourceOptions, {\r\n                    fromUrlLoadMode: DATA_SOURCE_FROM_URL_LOAD_MODE_METHOD in this && this[DATA_SOURCE_FROM_URL_LOAD_MODE_METHOD]()\r\n                });\r\n                this._dataSource = new dataSourceType((0, _extend.extend)(true, {}, widgetDataSourceOptions, dataSourceOptions))\r\n            }\r\n            if (NORMALIZE_DATA_SOURCE in this) {\r\n                this._dataSource = this[NORMALIZE_DATA_SOURCE](this._dataSource)\r\n            }\r\n            this._addDataSourceHandlers()\r\n        }\r\n    },\r\n    _addDataSourceHandlers: function() {\r\n        if (DATA_SOURCE_CHANGED_METHOD in this) {\r\n            this._addDataSourceChangeHandler()\r\n        }\r\n        if (DATA_SOURCE_LOAD_ERROR_METHOD in this) {\r\n            this._addDataSourceLoadErrorHandler()\r\n        }\r\n        if (DATA_SOURCE_LOADING_CHANGED_METHOD in this) {\r\n            this._addDataSourceLoadingChangedHandler()\r\n        }\r\n        this._addReadyWatcher()\r\n    },\r\n    _addReadyWatcher: function() {\r\n        this._dataSource.on(\"loadingChanged\", function(isLoading) {\r\n            this._ready && this._ready(!isLoading)\r\n        }.bind(this))\r\n    },\r\n    _addDataSourceChangeHandler: function() {\r\n        var dataSource = this._dataSource;\r\n        this._proxiedDataSourceChangedHandler = function(e) {\r\n            this[DATA_SOURCE_CHANGED_METHOD](dataSource.items(), e)\r\n        }.bind(this);\r\n        dataSource.on(\"changed\", this._proxiedDataSourceChangedHandler)\r\n    },\r\n    _addDataSourceLoadErrorHandler: function() {\r\n        this._proxiedDataSourceLoadErrorHandler = this[DATA_SOURCE_LOAD_ERROR_METHOD].bind(this);\r\n        this._dataSource.on(\"loadError\", this._proxiedDataSourceLoadErrorHandler)\r\n    },\r\n    _addDataSourceLoadingChangedHandler: function() {\r\n        this._proxiedDataSourceLoadingChangedHandler = this[DATA_SOURCE_LOADING_CHANGED_METHOD].bind(this);\r\n        this._dataSource.on(\"loadingChanged\", this._proxiedDataSourceLoadingChangedHandler)\r\n    },\r\n    _loadDataSource: function() {\r\n        if (this._dataSource) {\r\n            var dataSource = this._dataSource;\r\n            if (dataSource.isLoaded()) {\r\n                this._proxiedDataSourceChangedHandler && this._proxiedDataSourceChangedHandler()\r\n            } else {\r\n                dataSource.load()\r\n            }\r\n        }\r\n    },\r\n    _loadSingle: function(key, value) {\r\n        key = \"this\" === key ? this._dataSource.key() || \"this\" : key;\r\n        return this._dataSource.loadSingle(key, value)\r\n    },\r\n    _isLastPage: function() {\r\n        return !this._dataSource || this._dataSource.isLastPage() || !this._dataSource._pageSize\r\n    },\r\n    _isDataSourceLoading: function() {\r\n        return this._dataSource && this._dataSource.isLoading()\r\n    },\r\n    _disposeDataSource: function() {\r\n        if (this._dataSource) {\r\n            if (this._isSharedDataSource) {\r\n                delete this._isSharedDataSource;\r\n                this._proxiedDataSourceChangedHandler && this._dataSource.off(\"changed\", this._proxiedDataSourceChangedHandler);\r\n                this._proxiedDataSourceLoadErrorHandler && this._dataSource.off(\"loadError\", this._proxiedDataSourceLoadErrorHandler);\r\n                this._proxiedDataSourceLoadingChangedHandler && this._dataSource.off(\"loadingChanged\", this._proxiedDataSourceLoadingChangedHandler)\r\n            } else {\r\n                this._dataSource.dispose()\r\n            }\r\n            delete this._dataSource;\r\n            delete this._proxiedDataSourceChangedHandler;\r\n            delete this._proxiedDataSourceLoadErrorHandler;\r\n            delete this._proxiedDataSourceLoadingChangedHandler\r\n        }\r\n    },\r\n    getDataSource: function() {\r\n        return this._dataSource || null\r\n    }\r\n};\r\nvar _default = DataHelperMixin;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (events/contextmenu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.name = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _support = require(\"../core/utils/support\");\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\nvar _class = _interopRequireDefault(require(\"../core/class\"));\r\nvar _event_registrator = _interopRequireDefault(require(\"./core/event_registrator\"));\r\nvar _index = require(\"./utils/index\");\r\nvar _hold = _interopRequireDefault(require(\"./hold\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CONTEXTMENU_NAMESPACE = \"dxContexMenu\";\r\nvar CONTEXTMENU_NAMESPACED_EVENT_NAME = (0, _index.addNamespace)(\"contextmenu\", CONTEXTMENU_NAMESPACE);\r\nvar HOLD_NAMESPACED_EVENT_NAME = (0, _index.addNamespace)(_hold.default.name, CONTEXTMENU_NAMESPACE);\r\nvar CONTEXTMENU_EVENT_NAME = \"dxcontextmenu\";\r\nvar ContextMenu = _class.default.inherit({\r\n    setup: function(element) {\r\n        var $element = (0, _renderer.default)(element);\r\n        _events_engine.default.on($element, CONTEXTMENU_NAMESPACED_EVENT_NAME, this._contextMenuHandler.bind(this));\r\n        if (_support.touch || _devices.default.isSimulator()) {\r\n            _events_engine.default.on($element, HOLD_NAMESPACED_EVENT_NAME, this._holdHandler.bind(this))\r\n        }\r\n    },\r\n    _holdHandler: function(e) {\r\n        if ((0, _index.isMouseEvent)(e) && !_devices.default.isSimulator()) {\r\n            return\r\n        }\r\n        this._fireContextMenu(e)\r\n    },\r\n    _contextMenuHandler: function(e) {\r\n        this._fireContextMenu(e)\r\n    },\r\n    _fireContextMenu: function(e) {\r\n        return (0, _index.fireEvent)({\r\n            type: CONTEXTMENU_EVENT_NAME,\r\n            originalEvent: e\r\n        })\r\n    },\r\n    teardown: function(element) {\r\n        _events_engine.default.off(element, \".\" + CONTEXTMENU_NAMESPACE)\r\n    }\r\n});\r\n(0, _event_registrator.default)(CONTEXTMENU_EVENT_NAME, new ContextMenu);\r\nvar name = CONTEXTMENU_EVENT_NAME;\r\nexports.name = name;\r\n","/**\r\n * DevExtreme (events/double_click.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.name = void 0;\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _dom = require(\"../core/utils/dom\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../core/dom_adapter\"));\r\nvar _class = _interopRequireDefault(require(\"../core/class\"));\r\nvar _event_registrator = _interopRequireDefault(require(\"./core/event_registrator\"));\r\nvar _click = require(\"./click\");\r\nvar _index = require(\"./utils/index\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DBLCLICK_EVENT_NAME = \"dxdblclick\";\r\nexports.name = DBLCLICK_EVENT_NAME;\r\nvar DBLCLICK_NAMESPACE = \"dxDblClick\";\r\nvar NAMESPACED_CLICK_EVENT = (0, _index.addNamespace)(_click.name, DBLCLICK_NAMESPACE);\r\nvar DBLCLICK_TIMEOUT = 300;\r\nvar DblClick = _class.default.inherit({\r\n    ctor: function() {\r\n        this._handlerCount = 0;\r\n        this._forgetLastClick()\r\n    },\r\n    _forgetLastClick: function() {\r\n        this._firstClickTarget = null;\r\n        this._lastClickTimeStamp = -DBLCLICK_TIMEOUT\r\n    },\r\n    add: function() {\r\n        if (this._handlerCount <= 0) {\r\n            _events_engine.default.on(_dom_adapter.default.getDocument(), NAMESPACED_CLICK_EVENT, this._clickHandler.bind(this))\r\n        }\r\n        this._handlerCount++\r\n    },\r\n    _clickHandler: function(e) {\r\n        var timeStamp = e.timeStamp || Date.now();\r\n        var timeBetweenClicks = timeStamp - this._lastClickTimeStamp;\r\n        var isSimulated = timeBetweenClicks < 0;\r\n        var isDouble = !isSimulated && timeBetweenClicks < DBLCLICK_TIMEOUT;\r\n        if (isDouble) {\r\n            (0, _index.fireEvent)({\r\n                type: DBLCLICK_EVENT_NAME,\r\n                target: (0, _dom.closestCommonParent)(this._firstClickTarget, e.target),\r\n                originalEvent: e\r\n            });\r\n            this._forgetLastClick()\r\n        } else {\r\n            this._firstClickTarget = e.target;\r\n            this._lastClickTimeStamp = timeStamp\r\n        }\r\n    },\r\n    remove: function() {\r\n        this._handlerCount--;\r\n        if (this._handlerCount <= 0) {\r\n            this._forgetLastClick();\r\n            _events_engine.default.off(_dom_adapter.default.getDocument(), NAMESPACED_CLICK_EVENT)\r\n        }\r\n    }\r\n});\r\n(0, _event_registrator.default)(DBLCLICK_EVENT_NAME, new DblClick);\r\n","/**\r\n * DevExtreme (events/drag.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nexports.start = exports.move = exports.leave = exports.enter = exports.end = exports.drop = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _element_data = require(\"../core/element_data\");\r\nvar _array = require(\"../core/utils/array\");\r\nvar iteratorUtils = _interopRequireWildcard(require(\"../core/utils/iterator\"));\r\nvar _dom = require(\"../core/utils/dom\");\r\nvar _event_registrator = _interopRequireDefault(require(\"./core/event_registrator\"));\r\nvar _index = require(\"./utils/index\");\r\nvar _emitter = _interopRequireDefault(require(\"./gesture/emitter.gesture\"));\r\nvar _emitter_registrator = _interopRequireDefault(require(\"./core/emitter_registrator\"));\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cacheBabelInterop = new WeakMap;\r\n    var cacheNodeInterop = new WeakMap;\r\n    return (_getRequireWildcardCache = function(nodeInterop) {\r\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop\r\n    })(nodeInterop)\r\n}\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) {\r\n    if (!nodeInterop && obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache(nodeInterop);\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (\"default\" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DRAG_START_EVENT = \"dxdragstart\";\r\nexports.start = DRAG_START_EVENT;\r\nvar DRAG_EVENT = \"dxdrag\";\r\nexports.move = DRAG_EVENT;\r\nvar DRAG_END_EVENT = \"dxdragend\";\r\nexports.end = DRAG_END_EVENT;\r\nvar DRAG_ENTER_EVENT = \"dxdragenter\";\r\nexports.enter = DRAG_ENTER_EVENT;\r\nvar DRAG_LEAVE_EVENT = \"dxdragleave\";\r\nexports.leave = DRAG_LEAVE_EVENT;\r\nvar DROP_EVENT = \"dxdrop\";\r\nexports.drop = DROP_EVENT;\r\nvar DX_DRAG_EVENTS_COUNT_KEY = \"dxDragEventsCount\";\r\nvar knownDropTargets = [];\r\nvar knownDropTargetSelectors = [];\r\nvar knownDropTargetConfigs = [];\r\nvar dropTargetRegistration = {\r\n    setup: function(element, data) {\r\n        var knownDropTarget = (0, _array.inArray)(element, knownDropTargets) !== -1;\r\n        if (!knownDropTarget) {\r\n            knownDropTargets.push(element);\r\n            knownDropTargetSelectors.push([]);\r\n            knownDropTargetConfigs.push(data || {})\r\n        }\r\n    },\r\n    add: function(element, handleObj) {\r\n        var index = (0, _array.inArray)(element, knownDropTargets);\r\n        this.updateEventsCounter(element, handleObj.type, 1);\r\n        var selector = handleObj.selector;\r\n        if ((0, _array.inArray)(selector, knownDropTargetSelectors[index]) === -1) {\r\n            knownDropTargetSelectors[index].push(selector)\r\n        }\r\n    },\r\n    updateEventsCounter: function(element, event, value) {\r\n        if ([DRAG_ENTER_EVENT, DRAG_LEAVE_EVENT, DROP_EVENT].indexOf(event) > -1) {\r\n            var eventsCount = (0, _element_data.data)(element, DX_DRAG_EVENTS_COUNT_KEY) || 0;\r\n            (0, _element_data.data)(element, DX_DRAG_EVENTS_COUNT_KEY, Math.max(0, eventsCount + value))\r\n        }\r\n    },\r\n    remove: function(element, handleObj) {\r\n        this.updateEventsCounter(element, handleObj.type, -1)\r\n    },\r\n    teardown: function(element) {\r\n        var handlersCount = (0, _element_data.data)(element, DX_DRAG_EVENTS_COUNT_KEY);\r\n        if (!handlersCount) {\r\n            var index = (0, _array.inArray)(element, knownDropTargets);\r\n            knownDropTargets.splice(index, 1);\r\n            knownDropTargetSelectors.splice(index, 1);\r\n            knownDropTargetConfigs.splice(index, 1);\r\n            (0, _element_data.removeData)(element, DX_DRAG_EVENTS_COUNT_KEY)\r\n        }\r\n    }\r\n};\r\n(0, _event_registrator.default)(DRAG_ENTER_EVENT, dropTargetRegistration);\r\n(0, _event_registrator.default)(DRAG_LEAVE_EVENT, dropTargetRegistration);\r\n(0, _event_registrator.default)(DROP_EVENT, dropTargetRegistration);\r\nvar getItemDelegatedTargets = function($element) {\r\n    var dropTargetIndex = (0, _array.inArray)($element.get(0), knownDropTargets);\r\n    var dropTargetSelectors = knownDropTargetSelectors[dropTargetIndex].filter(function(selector) {\r\n        return selector\r\n    });\r\n    var $delegatedTargets = $element.find(dropTargetSelectors.join(\", \"));\r\n    if ((0, _array.inArray)(void 0, knownDropTargetSelectors[dropTargetIndex]) !== -1) {\r\n        $delegatedTargets = $delegatedTargets.add($element)\r\n    }\r\n    return $delegatedTargets\r\n};\r\nvar getItemConfig = function($element) {\r\n    var dropTargetIndex = (0, _array.inArray)($element.get(0), knownDropTargets);\r\n    return knownDropTargetConfigs[dropTargetIndex]\r\n};\r\nvar getItemPosition = function(dropTargetConfig, $element) {\r\n    if (dropTargetConfig.itemPositionFunc) {\r\n        return dropTargetConfig.itemPositionFunc($element)\r\n    } else {\r\n        return $element.offset()\r\n    }\r\n};\r\nvar getItemSize = function(dropTargetConfig, $element) {\r\n    if (dropTargetConfig.itemSizeFunc) {\r\n        return dropTargetConfig.itemSizeFunc($element)\r\n    }\r\n    return {\r\n        width: $element.get(0).getBoundingClientRect().width,\r\n        height: $element.get(0).getBoundingClientRect().height\r\n    }\r\n};\r\nvar DragEmitter = _emitter.default.inherit({\r\n    ctor: function(element) {\r\n        this.callBase(element);\r\n        this.direction = \"both\"\r\n    },\r\n    _init: function(e) {\r\n        this._initEvent = e\r\n    },\r\n    _start: function(e) {\r\n        e = this._fireEvent(DRAG_START_EVENT, this._initEvent);\r\n        this._maxLeftOffset = e.maxLeftOffset;\r\n        this._maxRightOffset = e.maxRightOffset;\r\n        this._maxTopOffset = e.maxTopOffset;\r\n        this._maxBottomOffset = e.maxBottomOffset;\r\n        var dropTargets = (0, _array.wrapToArray)(e.targetElements || (null === e.targetElements ? [] : knownDropTargets));\r\n        this._dropTargets = iteratorUtils.map(dropTargets, function(element) {\r\n            return (0, _renderer.default)(element).get(0)\r\n        })\r\n    },\r\n    _move: function(e) {\r\n        var eventData = (0, _index.eventData)(e);\r\n        var dragOffset = this._calculateOffset(eventData);\r\n        e = this._fireEvent(DRAG_EVENT, e, {\r\n            offset: dragOffset\r\n        });\r\n        this._processDropTargets(e);\r\n        if (!e._cancelPreventDefault) {\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _calculateOffset: function(eventData) {\r\n        return {\r\n            x: this._calculateXOffset(eventData),\r\n            y: this._calculateYOffset(eventData)\r\n        }\r\n    },\r\n    _calculateXOffset: function(eventData) {\r\n        if (\"vertical\" !== this.direction) {\r\n            var offset = eventData.x - this._startEventData.x;\r\n            return this._fitOffset(offset, this._maxLeftOffset, this._maxRightOffset)\r\n        }\r\n        return 0\r\n    },\r\n    _calculateYOffset: function(eventData) {\r\n        if (\"horizontal\" !== this.direction) {\r\n            var offset = eventData.y - this._startEventData.y;\r\n            return this._fitOffset(offset, this._maxTopOffset, this._maxBottomOffset)\r\n        }\r\n        return 0\r\n    },\r\n    _fitOffset: function(offset, minOffset, maxOffset) {\r\n        if (null != minOffset) {\r\n            offset = Math.max(offset, -minOffset)\r\n        }\r\n        if (null != maxOffset) {\r\n            offset = Math.min(offset, maxOffset)\r\n        }\r\n        return offset\r\n    },\r\n    _processDropTargets: function(e) {\r\n        var target = this._findDropTarget(e);\r\n        var sameTarget = target === this._currentDropTarget;\r\n        if (!sameTarget) {\r\n            this._fireDropTargetEvent(e, DRAG_LEAVE_EVENT);\r\n            this._currentDropTarget = target;\r\n            this._fireDropTargetEvent(e, DRAG_ENTER_EVENT)\r\n        }\r\n    },\r\n    _fireDropTargetEvent: function(event, eventName) {\r\n        if (!this._currentDropTarget) {\r\n            return\r\n        }\r\n        var eventData = {\r\n            type: eventName,\r\n            originalEvent: event,\r\n            draggingElement: this._$element.get(0),\r\n            target: this._currentDropTarget\r\n        };\r\n        (0, _index.fireEvent)(eventData)\r\n    },\r\n    _findDropTarget: function(e) {\r\n        var that = this;\r\n        var result;\r\n        iteratorUtils.each(knownDropTargets, function(_, target) {\r\n            if (!that._checkDropTargetActive(target)) {\r\n                return\r\n            }\r\n            var $target = (0, _renderer.default)(target);\r\n            iteratorUtils.each(getItemDelegatedTargets($target), function(_, delegatedTarget) {\r\n                var $delegatedTarget = (0, _renderer.default)(delegatedTarget);\r\n                if (that._checkDropTarget(getItemConfig($target), $delegatedTarget, (0, _renderer.default)(result), e)) {\r\n                    result = delegatedTarget\r\n                }\r\n            })\r\n        });\r\n        return result\r\n    },\r\n    _checkDropTargetActive: function(target) {\r\n        var active = false;\r\n        iteratorUtils.each(this._dropTargets, function(_, activeTarget) {\r\n            active = active || activeTarget === target || (0, _dom.contains)(activeTarget, target);\r\n            return !active\r\n        });\r\n        return active\r\n    },\r\n    _checkDropTarget: function(config, $target, $prevTarget, e) {\r\n        var isDraggingElement = $target.get(0) === (0, _renderer.default)(e.target).get(0);\r\n        if (isDraggingElement) {\r\n            return false\r\n        }\r\n        var targetPosition = getItemPosition(config, $target);\r\n        if (e.pageX < targetPosition.left) {\r\n            return false\r\n        }\r\n        if (e.pageY < targetPosition.top) {\r\n            return false\r\n        }\r\n        var targetSize = getItemSize(config, $target);\r\n        if (e.pageX > targetPosition.left + targetSize.width) {\r\n            return false\r\n        }\r\n        if (e.pageY > targetPosition.top + targetSize.height) {\r\n            return false\r\n        }\r\n        if ($prevTarget.length && $prevTarget.closest($target).length) {\r\n            return false\r\n        }\r\n        if (config.checkDropTarget && !config.checkDropTarget($target, e)) {\r\n            return false\r\n        }\r\n        return $target\r\n    },\r\n    _end: function(e) {\r\n        var eventData = (0, _index.eventData)(e);\r\n        this._fireEvent(DRAG_END_EVENT, e, {\r\n            offset: this._calculateOffset(eventData)\r\n        });\r\n        this._fireDropTargetEvent(e, DROP_EVENT);\r\n        delete this._currentDropTarget\r\n    }\r\n});\r\n(0, _emitter_registrator.default)({\r\n    emitter: DragEmitter,\r\n    events: [DRAG_START_EVENT, DRAG_EVENT, DRAG_END_EVENT]\r\n});\r\n","/**\r\n * DevExtreme (events/gesture/emitter.gesture.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _style = require(\"../../core/utils/style\");\r\nvar _call_once = _interopRequireDefault(require(\"../../core/utils/call_once\"));\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _ready_callbacks = _interopRequireDefault(require(\"../../core/utils/ready_callbacks\"));\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _index = require(\"../utils/index\");\r\nvar _emitter = _interopRequireDefault(require(\"../core/emitter\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ready = _ready_callbacks.default.add;\r\nvar abs = Math.abs;\r\nvar SLEEP = 0;\r\nvar INITED = 1;\r\nvar STARTED = 2;\r\nvar TOUCH_BOUNDARY = 10;\r\nvar IMMEDIATE_TOUCH_BOUNDARY = 0;\r\nvar IMMEDIATE_TIMEOUT = 180;\r\nvar supportPointerEvents = function() {\r\n    return (0, _style.styleProp)(\"pointer-events\")\r\n};\r\nvar setGestureCover = (0, _call_once.default)(function() {\r\n    var GESTURE_COVER_CLASS = \"dx-gesture-cover\";\r\n    var isDesktop = \"desktop\" === _devices.default.real().deviceType;\r\n    if (!supportPointerEvents() || !isDesktop) {\r\n        return _common.noop\r\n    }\r\n    var $cover = (0, _renderer.default)(\"<div>\").addClass(GESTURE_COVER_CLASS).css(\"pointerEvents\", \"none\");\r\n    _events_engine.default.subscribeGlobal($cover, \"dxmousewheel\", function(e) {\r\n        e.preventDefault()\r\n    });\r\n    ready(function() {\r\n        $cover.appendTo(\"body\")\r\n    });\r\n    return function(toggle, cursor) {\r\n        $cover.css(\"pointerEvents\", toggle ? \"all\" : \"none\");\r\n        toggle && $cover.css(\"cursor\", cursor)\r\n    }\r\n});\r\nvar gestureCover = function(toggle, cursor) {\r\n    var gestureCoverStrategy = setGestureCover();\r\n    gestureCoverStrategy(toggle, cursor)\r\n};\r\nvar GestureEmitter = _emitter.default.inherit({\r\n    gesture: true,\r\n    configure: function(data) {\r\n        this.getElement().css(\"msTouchAction\", data.immediate ? \"pinch-zoom\" : \"\");\r\n        this.callBase(data)\r\n    },\r\n    allowInterruptionByMouseWheel: function() {\r\n        return this._stage !== STARTED\r\n    },\r\n    getDirection: function() {\r\n        return this.direction\r\n    },\r\n    _cancel: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._toggleGestureCover(false);\r\n        this._stage = SLEEP\r\n    },\r\n    start: function(e) {\r\n        if (e._needSkipEvent || (0, _index.needSkipEvent)(e)) {\r\n            this._cancel(e);\r\n            return\r\n        }\r\n        this._startEvent = (0, _index.createEvent)(e);\r\n        this._startEventData = (0, _index.eventData)(e);\r\n        this._stage = INITED;\r\n        this._init(e);\r\n        this._setupImmediateTimer()\r\n    },\r\n    _setupImmediateTimer: function() {\r\n        clearTimeout(this._immediateTimer);\r\n        this._immediateAccepted = false;\r\n        if (!this.immediate) {\r\n            return\r\n        }\r\n        this._immediateTimer = setTimeout(function() {\r\n            this._immediateAccepted = true\r\n        }.bind(this), IMMEDIATE_TIMEOUT)\r\n    },\r\n    move: function(e) {\r\n        if (this._stage === INITED && this._directionConfirmed(e)) {\r\n            this._stage = STARTED;\r\n            this._resetActiveElement();\r\n            this._toggleGestureCover(true);\r\n            this._clearSelection(e);\r\n            this._adjustStartEvent(e);\r\n            this._start(this._startEvent);\r\n            if (this._stage === SLEEP) {\r\n                return\r\n            }\r\n            this._requestAccept(e);\r\n            this._move(e);\r\n            this._forgetAccept()\r\n        } else {\r\n            if (this._stage === STARTED) {\r\n                this._clearSelection(e);\r\n                this._move(e)\r\n            }\r\n        }\r\n    },\r\n    _directionConfirmed: function(e) {\r\n        var touchBoundary = this._getTouchBoundary(e);\r\n        var delta = (0, _index.eventDelta)(this._startEventData, (0, _index.eventData)(e));\r\n        var deltaX = abs(delta.x);\r\n        var deltaY = abs(delta.y);\r\n        var horizontalMove = this._validateMove(touchBoundary, deltaX, deltaY);\r\n        var verticalMove = this._validateMove(touchBoundary, deltaY, deltaX);\r\n        var direction = this.getDirection(e);\r\n        var bothAccepted = \"both\" === direction && (horizontalMove || verticalMove);\r\n        var horizontalAccepted = \"horizontal\" === direction && horizontalMove;\r\n        var verticalAccepted = \"vertical\" === direction && verticalMove;\r\n        return bothAccepted || horizontalAccepted || verticalAccepted || this._immediateAccepted\r\n    },\r\n    _validateMove: function(touchBoundary, mainAxis, crossAxis) {\r\n        return mainAxis && mainAxis >= touchBoundary && (this.immediate ? mainAxis >= crossAxis : true)\r\n    },\r\n    _getTouchBoundary: function(e) {\r\n        return this.immediate || (0, _index.isDxMouseWheelEvent)(e) ? IMMEDIATE_TOUCH_BOUNDARY : TOUCH_BOUNDARY\r\n    },\r\n    _adjustStartEvent: function(e) {\r\n        var touchBoundary = this._getTouchBoundary(e);\r\n        var delta = (0, _index.eventDelta)(this._startEventData, (0, _index.eventData)(e));\r\n        this._startEvent.pageX += (0, _math.sign)(delta.x) * touchBoundary;\r\n        this._startEvent.pageY += (0, _math.sign)(delta.y) * touchBoundary\r\n    },\r\n    _resetActiveElement: function() {\r\n        if (\"ios\" === _devices.default.real().platform && this.getElement().find(\":focus\").length) {\r\n            (0, _dom.resetActiveElement)()\r\n        }\r\n    },\r\n    _toggleGestureCover: function(toggle) {\r\n        this._toggleGestureCoverImpl(toggle)\r\n    },\r\n    _toggleGestureCoverImpl: function(toggle) {\r\n        var isStarted = this._stage === STARTED;\r\n        if (isStarted) {\r\n            gestureCover(toggle, this.getElement().css(\"cursor\"))\r\n        }\r\n    },\r\n    _clearSelection: function(e) {\r\n        if ((0, _index.isDxMouseWheelEvent)(e) || (0, _index.isTouchEvent)(e)) {\r\n            return\r\n        }(0, _dom.clearSelection)()\r\n    },\r\n    end: function(e) {\r\n        this._toggleGestureCover(false);\r\n        if (this._stage === STARTED) {\r\n            this._end(e)\r\n        } else {\r\n            if (this._stage === INITED) {\r\n                this._stop(e)\r\n            }\r\n        }\r\n        this._stage = SLEEP\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._immediateTimer);\r\n        this.callBase.apply(this, arguments);\r\n        this._toggleGestureCover(false)\r\n    },\r\n    _init: _common.noop,\r\n    _start: _common.noop,\r\n    _move: _common.noop,\r\n    _stop: _common.noop,\r\n    _end: _common.noop\r\n});\r\nGestureEmitter.initialTouchBoundary = TOUCH_BOUNDARY;\r\nGestureEmitter.touchBoundary = function(newBoundary) {\r\n    if ((0, _type.isDefined)(newBoundary)) {\r\n        TOUCH_BOUNDARY = newBoundary;\r\n        return\r\n    }\r\n    return TOUCH_BOUNDARY\r\n};\r\nvar _default = GestureEmitter;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (events/gesture/swipeable.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _swipe = require(\"../swipe\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _dom_component = _interopRequireDefault(require(\"../../core/dom_component\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _index = require(\"../utils/index\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _public_component = require(\"../../core/utils/public_component\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DX_SWIPEABLE = \"dxSwipeable\";\r\nvar SWIPEABLE_CLASS = \"dx-swipeable\";\r\nvar ACTION_TO_EVENT_MAP = {\r\n    onStart: _swipe.start,\r\n    onUpdated: _swipe.swipe,\r\n    onEnd: _swipe.end,\r\n    onCancel: \"dxswipecancel\"\r\n};\r\nvar Swipeable = _dom_component.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            elastic: true,\r\n            immediate: false,\r\n            direction: \"horizontal\",\r\n            itemSizeFunc: null,\r\n            onStart: null,\r\n            onUpdated: null,\r\n            onEnd: null,\r\n            onCancel: null\r\n        })\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(SWIPEABLE_CLASS);\r\n        this._attachEventHandlers()\r\n    },\r\n    _attachEventHandlers: function() {\r\n        this._detachEventHandlers();\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var NAME = this.NAME;\r\n        this._createEventData();\r\n        (0, _iterator.each)(ACTION_TO_EVENT_MAP, function(actionName, eventName) {\r\n            var action = this._createActionByOption(actionName, {\r\n                context: this\r\n            });\r\n            eventName = (0, _index.addNamespace)(eventName, NAME);\r\n            _events_engine.default.on(this.$element(), eventName, this._eventData, function(e) {\r\n                return action({\r\n                    event: e\r\n                })\r\n            })\r\n        }.bind(this))\r\n    },\r\n    _createEventData: function() {\r\n        this._eventData = {\r\n            elastic: this.option(\"elastic\"),\r\n            itemSizeFunc: this.option(\"itemSizeFunc\"),\r\n            direction: this.option(\"direction\"),\r\n            immediate: this.option(\"immediate\")\r\n        }\r\n    },\r\n    _detachEventHandlers: function() {\r\n        _events_engine.default.off(this.$element(), \".\" + DX_SWIPEABLE)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"disabled\":\r\n            case \"onStart\":\r\n            case \"onUpdated\":\r\n            case \"onEnd\":\r\n            case \"onCancel\":\r\n            case \"elastic\":\r\n            case \"immediate\":\r\n            case \"itemSizeFunc\":\r\n            case \"direction\":\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"rtlEnabled\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    }\r\n});\r\n(0, _public_component.name)(Swipeable, DX_SWIPEABLE);\r\nvar _default = Swipeable;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (events/hold.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _index = require(\"./utils/index\");\r\nvar _emitter = _interopRequireDefault(require(\"./core/emitter\"));\r\nvar _emitter_registrator = _interopRequireDefault(require(\"./core/emitter_registrator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar abs = Math.abs;\r\nvar HOLD_EVENT_NAME = \"dxhold\";\r\nvar HOLD_TIMEOUT = 750;\r\nvar TOUCH_BOUNDARY = 5;\r\nvar HoldEmitter = _emitter.default.inherit({\r\n    start: function(e) {\r\n        this._startEventData = (0, _index.eventData)(e);\r\n        this._startTimer(e)\r\n    },\r\n    _startTimer: function(e) {\r\n        var holdTimeout = \"timeout\" in this ? this.timeout : HOLD_TIMEOUT;\r\n        this._holdTimer = setTimeout(function() {\r\n            this._requestAccept(e);\r\n            this._fireEvent(HOLD_EVENT_NAME, e, {\r\n                target: e.target\r\n            });\r\n            this._forgetAccept()\r\n        }.bind(this), holdTimeout)\r\n    },\r\n    move: function(e) {\r\n        if (this._touchWasMoved(e)) {\r\n            this._cancel(e)\r\n        }\r\n    },\r\n    _touchWasMoved: function(e) {\r\n        var delta = (0, _index.eventDelta)(this._startEventData, (0, _index.eventData)(e));\r\n        return abs(delta.x) > TOUCH_BOUNDARY || abs(delta.y) > TOUCH_BOUNDARY\r\n    },\r\n    end: function() {\r\n        this._stopTimer()\r\n    },\r\n    _stopTimer: function() {\r\n        clearTimeout(this._holdTimer)\r\n    },\r\n    cancel: function() {\r\n        this._stopTimer()\r\n    },\r\n    dispose: function() {\r\n        this._stopTimer()\r\n    }\r\n});\r\n(0, _emitter_registrator.default)({\r\n    emitter: HoldEmitter,\r\n    bubble: true,\r\n    events: [HOLD_EVENT_NAME]\r\n});\r\nvar _default = {\r\n    name: HOLD_EVENT_NAME\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (events/swipe.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.swipe = exports.start = exports.end = void 0;\r\nvar _index = require(\"./utils/index\");\r\nvar _emitter = _interopRequireDefault(require(\"./gesture/emitter.gesture\"));\r\nvar _emitter_registrator = _interopRequireDefault(require(\"./core/emitter_registrator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SWIPE_START_EVENT = \"dxswipestart\";\r\nexports.start = SWIPE_START_EVENT;\r\nvar SWIPE_EVENT = \"dxswipe\";\r\nexports.swipe = SWIPE_EVENT;\r\nvar SWIPE_END_EVENT = \"dxswipeend\";\r\nexports.end = SWIPE_END_EVENT;\r\nvar HorizontalStrategy = {\r\n    defaultItemSizeFunc: function() {\r\n        return this.getElement().width()\r\n    },\r\n    getBounds: function() {\r\n        return [this._maxLeftOffset, this._maxRightOffset]\r\n    },\r\n    calcOffsetRatio: function(e) {\r\n        var endEventData = (0, _index.eventData)(e);\r\n        return (endEventData.x - (this._savedEventData && this._savedEventData.x || 0)) / this._itemSizeFunc().call(this, e)\r\n    },\r\n    isFastSwipe: function(e) {\r\n        var endEventData = (0, _index.eventData)(e);\r\n        return this.FAST_SWIPE_SPEED_LIMIT * Math.abs(endEventData.x - this._tickData.x) >= endEventData.time - this._tickData.time\r\n    }\r\n};\r\nvar VerticalStrategy = {\r\n    defaultItemSizeFunc: function() {\r\n        return this.getElement().height()\r\n    },\r\n    getBounds: function() {\r\n        return [this._maxTopOffset, this._maxBottomOffset]\r\n    },\r\n    calcOffsetRatio: function(e) {\r\n        var endEventData = (0, _index.eventData)(e);\r\n        return (endEventData.y - (this._savedEventData && this._savedEventData.y || 0)) / this._itemSizeFunc().call(this, e)\r\n    },\r\n    isFastSwipe: function(e) {\r\n        var endEventData = (0, _index.eventData)(e);\r\n        return this.FAST_SWIPE_SPEED_LIMIT * Math.abs(endEventData.y - this._tickData.y) >= endEventData.time - this._tickData.time\r\n    }\r\n};\r\nvar STRATEGIES = {\r\n    horizontal: HorizontalStrategy,\r\n    vertical: VerticalStrategy\r\n};\r\nvar SwipeEmitter = _emitter.default.inherit({\r\n    TICK_INTERVAL: 300,\r\n    FAST_SWIPE_SPEED_LIMIT: 10,\r\n    ctor: function(element) {\r\n        this.callBase(element);\r\n        this.direction = \"horizontal\";\r\n        this.elastic = true\r\n    },\r\n    _getStrategy: function() {\r\n        return STRATEGIES[this.direction]\r\n    },\r\n    _defaultItemSizeFunc: function() {\r\n        return this._getStrategy().defaultItemSizeFunc.call(this)\r\n    },\r\n    _itemSizeFunc: function() {\r\n        return this.itemSizeFunc || this._defaultItemSizeFunc\r\n    },\r\n    _init: function(e) {\r\n        this._tickData = (0, _index.eventData)(e)\r\n    },\r\n    _start: function(e) {\r\n        this._savedEventData = (0, _index.eventData)(e);\r\n        e = this._fireEvent(SWIPE_START_EVENT, e);\r\n        if (!e.cancel) {\r\n            this._maxLeftOffset = e.maxLeftOffset;\r\n            this._maxRightOffset = e.maxRightOffset;\r\n            this._maxTopOffset = e.maxTopOffset;\r\n            this._maxBottomOffset = e.maxBottomOffset\r\n        }\r\n    },\r\n    _move: function(e) {\r\n        var strategy = this._getStrategy();\r\n        var moveEventData = (0, _index.eventData)(e);\r\n        var offset = strategy.calcOffsetRatio.call(this, e);\r\n        offset = this._fitOffset(offset, this.elastic);\r\n        if (moveEventData.time - this._tickData.time > this.TICK_INTERVAL) {\r\n            this._tickData = moveEventData\r\n        }\r\n        this._fireEvent(SWIPE_EVENT, e, {\r\n            offset: offset\r\n        });\r\n        e.preventDefault()\r\n    },\r\n    _end: function(e) {\r\n        var strategy = this._getStrategy();\r\n        var offsetRatio = strategy.calcOffsetRatio.call(this, e);\r\n        var isFast = strategy.isFastSwipe.call(this, e);\r\n        var startOffset = offsetRatio;\r\n        var targetOffset = this._calcTargetOffset(offsetRatio, isFast);\r\n        startOffset = this._fitOffset(startOffset, this.elastic);\r\n        targetOffset = this._fitOffset(targetOffset, false);\r\n        this._fireEvent(SWIPE_END_EVENT, e, {\r\n            offset: startOffset,\r\n            targetOffset: targetOffset\r\n        })\r\n    },\r\n    _fitOffset: function(offset, elastic) {\r\n        var strategy = this._getStrategy();\r\n        var bounds = strategy.getBounds.call(this);\r\n        if (offset < -bounds[0]) {\r\n            return elastic ? (-2 * bounds[0] + offset) / 3 : -bounds[0]\r\n        }\r\n        if (offset > bounds[1]) {\r\n            return elastic ? (2 * bounds[1] + offset) / 3 : bounds[1]\r\n        }\r\n        return offset\r\n    },\r\n    _calcTargetOffset: function(offsetRatio, isFast) {\r\n        var result;\r\n        if (isFast) {\r\n            result = Math.ceil(Math.abs(offsetRatio));\r\n            if (offsetRatio < 0) {\r\n                result = -result\r\n            }\r\n        } else {\r\n            result = Math.round(offsetRatio)\r\n        }\r\n        return result\r\n    }\r\n});\r\n(0, _emitter_registrator.default)({\r\n    emitter: SwipeEmitter,\r\n    events: [SWIPE_START_EVENT, SWIPE_EVENT, SWIPE_END_EVENT]\r\n});\r\n","/**\r\n * DevExtreme (format_helper.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"./core/utils/type\");\r\nvar _date = _interopRequireDefault(require(\"./core/utils/date\"));\r\nvar _number = _interopRequireDefault(require(\"./localization/number\"));\r\nvar _date2 = _interopRequireDefault(require(\"./localization/date\"));\r\nvar _dependency_injector = _interopRequireDefault(require(\"./core/utils/dependency_injector\"));\r\nrequire(\"./localization/currency\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = (0, _dependency_injector.default)({\r\n    format: function(value, _format) {\r\n        var formatIsValid = (0, _type.isString)(_format) && \"\" !== _format || (0, _type.isPlainObject)(_format) || (0, _type.isFunction)(_format);\r\n        var valueIsValid = (0, _type.isNumeric)(value) || (0, _type.isDate)(value);\r\n        if (!formatIsValid || !valueIsValid) {\r\n            return (0, _type.isDefined)(value) ? value.toString() : \"\"\r\n        }\r\n        if ((0, _type.isFunction)(_format)) {\r\n            return _format(value)\r\n        }\r\n        if ((0, _type.isString)(_format)) {\r\n            _format = {\r\n                type: _format\r\n            }\r\n        }\r\n        if ((0, _type.isNumeric)(value)) {\r\n            return _number.default.format(value, _format)\r\n        }\r\n        if ((0, _type.isDate)(value)) {\r\n            return _date2.default.format(value, _format)\r\n        }\r\n    },\r\n    getTimeFormat: function(showSecond) {\r\n        return showSecond ? \"longtime\" : \"shorttime\"\r\n    },\r\n    _normalizeFormat: function(format) {\r\n        if (!Array.isArray(format)) {\r\n            return format\r\n        }\r\n        if (1 === format.length) {\r\n            return format[0]\r\n        }\r\n        return function(date) {\r\n            return format.map(function(formatPart) {\r\n                return _date2.default.format(date, formatPart)\r\n            }).join(\" \")\r\n        }\r\n    },\r\n    getDateFormatByDifferences: function(dateDifferences, intervalFormat) {\r\n        var resultFormat = [];\r\n        var needSpecialSecondFormatter = intervalFormat && dateDifferences.millisecond && !(dateDifferences.year || dateDifferences.month || dateDifferences.day);\r\n        if (needSpecialSecondFormatter) {\r\n            var secondFormatter = function(date) {\r\n                return date.getSeconds() + date.getMilliseconds() / 1e3 + \"s\"\r\n            };\r\n            resultFormat.push(secondFormatter)\r\n        } else {\r\n            if (dateDifferences.millisecond) {\r\n                resultFormat.push(\"millisecond\")\r\n            }\r\n        }\r\n        if (dateDifferences.hour || dateDifferences.minute || !needSpecialSecondFormatter && dateDifferences.second) {\r\n            resultFormat.unshift(this.getTimeFormat(dateDifferences.second))\r\n        }\r\n        if (dateDifferences.year && dateDifferences.month && dateDifferences.day) {\r\n            if (intervalFormat && \"month\" === intervalFormat) {\r\n                return \"monthandyear\"\r\n            } else {\r\n                resultFormat.unshift(\"shortdate\");\r\n                return this._normalizeFormat(resultFormat)\r\n            }\r\n        }\r\n        if (dateDifferences.year && dateDifferences.month) {\r\n            return \"monthandyear\"\r\n        }\r\n        if (dateDifferences.year && dateDifferences.quarter) {\r\n            return \"quarterandyear\"\r\n        }\r\n        if (dateDifferences.year) {\r\n            return \"year\"\r\n        }\r\n        if (dateDifferences.quarter) {\r\n            return \"quarter\"\r\n        }\r\n        if (dateDifferences.month && dateDifferences.day) {\r\n            if (intervalFormat) {\r\n                var monthDayFormatter = function(date) {\r\n                    return _date2.default.getMonthNames(\"abbreviated\")[date.getMonth()] + \" \" + _date2.default.format(date, \"day\")\r\n                };\r\n                resultFormat.unshift(monthDayFormatter)\r\n            } else {\r\n                resultFormat.unshift(\"monthandday\")\r\n            }\r\n            return this._normalizeFormat(resultFormat)\r\n        }\r\n        if (dateDifferences.month) {\r\n            return \"month\"\r\n        }\r\n        if (dateDifferences.day) {\r\n            if (intervalFormat) {\r\n                resultFormat.unshift(\"day\")\r\n            } else {\r\n                var dayFormatter = function(date) {\r\n                    return _date2.default.format(date, \"dayofweek\") + \", \" + _date2.default.format(date, \"day\")\r\n                };\r\n                resultFormat.unshift(dayFormatter)\r\n            }\r\n            return this._normalizeFormat(resultFormat)\r\n        }\r\n        return this._normalizeFormat(resultFormat)\r\n    },\r\n    getDateFormatByTicks: function(ticks) {\r\n        var maxDiff;\r\n        var currentDiff;\r\n        var i;\r\n        if (ticks.length > 1) {\r\n            maxDiff = _date.default.getDatesDifferences(ticks[0], ticks[1]);\r\n            for (i = 1; i < ticks.length - 1; i++) {\r\n                currentDiff = _date.default.getDatesDifferences(ticks[i], ticks[i + 1]);\r\n                if (maxDiff.count < currentDiff.count) {\r\n                    maxDiff = currentDiff\r\n                }\r\n            }\r\n        } else {\r\n            maxDiff = {\r\n                year: true,\r\n                month: true,\r\n                day: true,\r\n                hour: ticks[0].getHours() > 0,\r\n                minute: ticks[0].getMinutes() > 0,\r\n                second: ticks[0].getSeconds() > 0,\r\n                millisecond: ticks[0].getMilliseconds() > 0\r\n            }\r\n        }\r\n        var resultFormat = this.getDateFormatByDifferences(maxDiff);\r\n        return resultFormat\r\n    },\r\n    getDateFormatByTickInterval: function(startValue, endValue, tickInterval) {\r\n        var dateUnitInterval;\r\n        var dateDifferencesConverter = {\r\n            week: \"day\"\r\n        };\r\n        var correctDateDifferences = function(dateDifferences, tickInterval, value) {\r\n            switch (tickInterval) {\r\n                case \"year\":\r\n                case \"quarter\":\r\n                    dateDifferences.month = value;\r\n                case \"month\":\r\n                    dateDifferences.day = value;\r\n                case \"week\":\r\n                case \"day\":\r\n                    dateDifferences.hour = value;\r\n                case \"hour\":\r\n                    dateDifferences.minute = value;\r\n                case \"minute\":\r\n                    dateDifferences.second = value;\r\n                case \"second\":\r\n                    dateDifferences.millisecond = value\r\n            }\r\n        };\r\n        var correctDifferencesByMaxDate = function(differences, minDate, maxDate) {\r\n            if (!maxDate.getMilliseconds() && maxDate.getSeconds()) {\r\n                if (maxDate.getSeconds() - minDate.getSeconds() === 1) {\r\n                    differences.millisecond = true;\r\n                    differences.second = false\r\n                }\r\n            } else {\r\n                if (!maxDate.getSeconds() && maxDate.getMinutes()) {\r\n                    if (maxDate.getMinutes() - minDate.getMinutes() === 1) {\r\n                        differences.second = true;\r\n                        differences.minute = false\r\n                    }\r\n                } else {\r\n                    if (!maxDate.getMinutes() && maxDate.getHours()) {\r\n                        if (maxDate.getHours() - minDate.getHours() === 1) {\r\n                            differences.minute = true;\r\n                            differences.hour = false\r\n                        }\r\n                    } else {\r\n                        if (!maxDate.getHours() && maxDate.getDate() > 1) {\r\n                            if (maxDate.getDate() - minDate.getDate() === 1) {\r\n                                differences.hour = true;\r\n                                differences.day = false\r\n                            }\r\n                        } else {\r\n                            if (1 === maxDate.getDate() && maxDate.getMonth()) {\r\n                                if (maxDate.getMonth() - minDate.getMonth() === 1) {\r\n                                    differences.day = true;\r\n                                    differences.month = false\r\n                                }\r\n                            } else {\r\n                                if (!maxDate.getMonth() && maxDate.getFullYear()) {\r\n                                    if (maxDate.getFullYear() - minDate.getFullYear() === 1) {\r\n                                        differences.month = true;\r\n                                        differences.year = false\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        tickInterval = (0, _type.isString)(tickInterval) ? tickInterval.toLowerCase() : tickInterval;\r\n        var dateDifferences = _date.default.getDatesDifferences(startValue, endValue);\r\n        if (startValue !== endValue) {\r\n            correctDifferencesByMaxDate(dateDifferences, startValue > endValue ? endValue : startValue, startValue > endValue ? startValue : endValue)\r\n        }\r\n        dateUnitInterval = _date.default.getDateUnitInterval(dateDifferences);\r\n        correctDateDifferences(dateDifferences, dateUnitInterval, true);\r\n        dateUnitInterval = _date.default.getDateUnitInterval(tickInterval || \"second\");\r\n        correctDateDifferences(dateDifferences, dateUnitInterval, false);\r\n        dateDifferences[dateDifferencesConverter[dateUnitInterval] || dateUnitInterval] = true;\r\n        var resultFormat = this.getDateFormatByDifferences(dateDifferences);\r\n        return resultFormat\r\n    }\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (mobile/hide_callback.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.hideCallback = void 0;\r\nvar _array = require(\"../core/utils/array\");\r\nvar hideCallback = function() {\r\n    var callbacks = [];\r\n    return {\r\n        add: function(callback) {\r\n            var indexOfCallback = (0, _array.inArray)(callback, callbacks);\r\n            if (indexOfCallback === -1) {\r\n                callbacks.push(callback)\r\n            }\r\n        },\r\n        remove: function(callback) {\r\n            var indexOfCallback = (0, _array.inArray)(callback, callbacks);\r\n            if (indexOfCallback !== -1) {\r\n                callbacks.splice(indexOfCallback, 1)\r\n            }\r\n        },\r\n        fire: function() {\r\n            var callback = callbacks.pop();\r\n            var result = !!callback;\r\n            if (result) {\r\n                callback()\r\n            }\r\n            return result\r\n        },\r\n        hasCallback: function() {\r\n            return callbacks.length > 0\r\n        }\r\n    }\r\n}();\r\nexports.hideCallback = hideCallback;\r\n","/**\r\n * DevExtreme (ui/action_sheet.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _window = require(\"../core/utils/window\");\r\nvar _common = require(\"../core/utils/common\");\r\nvar _message = _interopRequireDefault(require(\"../localization/message\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _button = _interopRequireDefault(require(\"./button\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./collection/ui.collection_widget.edit\"));\r\nvar _popup = _interopRequireDefault(require(\"./popup\"));\r\nvar _popover = _interopRequireDefault(require(\"./popover\"));\r\nvar _bindable_template = require(\"../core/templates/bindable_template\");\r\nvar _deferred = require(\"../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar ACTION_SHEET_CLASS = \"dx-actionsheet\";\r\nvar ACTION_SHEET_CONTAINER_CLASS = \"dx-actionsheet-container\";\r\nvar ACTION_SHEET_POPUP_WRAPPER_CLASS = \"dx-actionsheet-popup-wrapper\";\r\nvar ACTION_SHEET_POPOVER_WRAPPER_CLASS = \"dx-actionsheet-popover-wrapper\";\r\nvar ACTION_SHEET_CANCEL_BUTTON_CLASS = \"dx-actionsheet-cancel\";\r\nvar ACTION_SHEET_ITEM_CLASS = \"dx-actionsheet-item\";\r\nvar ACTION_SHEET_ITEM_DATA_KEY = \"dxActionSheetItemData\";\r\nvar ACTION_SHEET_WITHOUT_TITLE_CLASS = \"dx-actionsheet-without-title\";\r\nvar ActionSheet = _uiCollection_widget.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            usePopover: false,\r\n            target: null,\r\n            title: \"\",\r\n            showTitle: true,\r\n            showCancelButton: true,\r\n            cancelText: _message.default.format(\"Cancel\"),\r\n            onCancelClick: null,\r\n            visible: false,\r\n            noDataText: \"\",\r\n            focusStateEnabled: false,\r\n            selectionByClick: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\",\r\n                tablet: true\r\n            },\r\n            options: {\r\n                usePopover: true\r\n            }\r\n        }])\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new _bindable_template.BindableTemplate(function($container, data) {\r\n                var button = new _button.default((0, _renderer.default)(\"<div>\"), (0, _extend.extend)({\r\n                    onClick: data && data.click\r\n                }, data));\r\n                $container.append(button.$element())\r\n            }, [\"disabled\", \"icon\", \"text\", \"type\", \"onClick\", \"click\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$itemContainer\r\n    },\r\n    _itemClass: function() {\r\n        return ACTION_SHEET_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return ACTION_SHEET_ITEM_DATA_KEY\r\n    },\r\n    _toggleVisibility: _common.noop,\r\n    _renderDimensions: _common.noop,\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(ACTION_SHEET_CLASS);\r\n        this._createItemContainer()\r\n    },\r\n    _render: function() {\r\n        this._renderPopup()\r\n    },\r\n    _createItemContainer: function() {\r\n        this._$itemContainer = (0, _renderer.default)(\"<div>\").addClass(ACTION_SHEET_CONTAINER_CLASS);\r\n        this._renderDisabled()\r\n    },\r\n    _renderDisabled: function() {\r\n        this._$itemContainer.toggleClass(\"dx-state-disabled\", this.option(\"disabled\"))\r\n    },\r\n    _renderPopup: function() {\r\n        this._$popup = (0, _renderer.default)(\"<div>\").appendTo(this.$element());\r\n        this._isPopoverMode() ? this._createPopover() : this._createPopup();\r\n        this._renderPopupTitle();\r\n        this._mapPopupOption(\"visible\")\r\n    },\r\n    _mapPopupOption: function(optionName) {\r\n        this._popup && this._popup.option(optionName, this.option(optionName))\r\n    },\r\n    _isPopoverMode: function() {\r\n        return this.option(\"usePopover\") && this.option(\"target\")\r\n    },\r\n    _renderPopupTitle: function() {\r\n        this._mapPopupOption(\"showTitle\");\r\n        this._popup && this._popup.$wrapper().toggleClass(ACTION_SHEET_WITHOUT_TITLE_CLASS, !this.option(\"showTitle\"))\r\n    },\r\n    _clean: function() {\r\n        if (this._$popup) {\r\n            this._$popup.remove()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _overlayConfig: function() {\r\n        return {\r\n            onInitialized: function(args) {\r\n                this._popup = args.component\r\n            }.bind(this),\r\n            disabled: false,\r\n            showTitle: true,\r\n            title: this.option(\"title\"),\r\n            deferRendering: !window.angular,\r\n            onContentReady: this._popupContentReadyAction.bind(this),\r\n            onHidden: this.hide.bind(this)\r\n        }\r\n    },\r\n    _createPopover: function() {\r\n        this._createComponent(this._$popup, _popover.default, (0, _extend.extend)(this._overlayConfig(), {\r\n            width: this.option(\"width\") || 200,\r\n            height: this.option(\"height\") || \"auto\",\r\n            target: this.option(\"target\")\r\n        }));\r\n        this._popup.$wrapper().addClass(ACTION_SHEET_POPOVER_WRAPPER_CLASS)\r\n    },\r\n    _createPopup: function() {\r\n        this._createComponent(this._$popup, _popup.default, (0, _extend.extend)(this._overlayConfig(), {\r\n            dragEnabled: false,\r\n            width: this.option(\"width\") || \"100%\",\r\n            height: this.option(\"height\") || \"auto\",\r\n            showCloseButton: false,\r\n            position: {\r\n                my: \"bottom\",\r\n                at: \"bottom\",\r\n                of: window\r\n            },\r\n            animation: {\r\n                show: {\r\n                    type: \"slide\",\r\n                    duration: 400,\r\n                    from: {\r\n                        position: {\r\n                            my: \"top\",\r\n                            at: \"bottom\",\r\n                            of: window\r\n                        }\r\n                    },\r\n                    to: {\r\n                        position: {\r\n                            my: \"bottom\",\r\n                            at: \"bottom\",\r\n                            of: window\r\n                        }\r\n                    }\r\n                },\r\n                hide: {\r\n                    type: \"slide\",\r\n                    duration: 400,\r\n                    from: {\r\n                        position: {\r\n                            my: \"bottom\",\r\n                            at: \"bottom\",\r\n                            of: window\r\n                        }\r\n                    },\r\n                    to: {\r\n                        position: {\r\n                            my: \"top\",\r\n                            at: \"bottom\",\r\n                            of: window\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        this._popup.$wrapper().addClass(ACTION_SHEET_POPUP_WRAPPER_CLASS)\r\n    },\r\n    _popupContentReadyAction: function() {\r\n        this._popup.$content().append(this._$itemContainer);\r\n        this._attachClickEvent();\r\n        this._attachHoldEvent();\r\n        this._prepareContent();\r\n        this._renderContent();\r\n        this._renderCancelButton()\r\n    },\r\n    _renderCancelButton: function() {\r\n        if (this._isPopoverMode()) {\r\n            return\r\n        }\r\n        if (this._$cancelButton) {\r\n            this._$cancelButton.remove()\r\n        }\r\n        if (this.option(\"showCancelButton\")) {\r\n            var cancelClickAction = this._createActionByOption(\"onCancelClick\") || _common.noop;\r\n            var that = this;\r\n            this._$cancelButton = (0, _renderer.default)(\"<div>\").addClass(ACTION_SHEET_CANCEL_BUTTON_CLASS).appendTo(this._popup && this._popup.$content());\r\n            this._createComponent(this._$cancelButton, _button.default, {\r\n                disabled: false,\r\n                text: this.option(\"cancelText\"),\r\n                onClick: function(e) {\r\n                    var hidingArgs = {\r\n                        event: e,\r\n                        cancel: false\r\n                    };\r\n                    cancelClickAction(hidingArgs);\r\n                    if (!hidingArgs.cancel) {\r\n                        that.hide()\r\n                    }\r\n                },\r\n                integrationOptions: {}\r\n            })\r\n        }\r\n    },\r\n    _attachItemClickEvent: _common.noop,\r\n    _itemClickHandler: function(e) {\r\n        this.callBase(e);\r\n        if (!(0, _renderer.default)(e.target).is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            this.hide()\r\n        }\r\n    },\r\n    _itemHoldHandler: function(e) {\r\n        this.callBase(e);\r\n        if (!(0, _renderer.default)(e.target).is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            this.hide()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n            case \"height\":\r\n            case \"visible\":\r\n            case \"title\":\r\n                this._mapPopupOption(args.name);\r\n                break;\r\n            case \"disabled\":\r\n                this._renderDisabled();\r\n                break;\r\n            case \"showTitle\":\r\n                this._renderPopupTitle();\r\n                break;\r\n            case \"showCancelButton\":\r\n            case \"onCancelClick\":\r\n            case \"cancelText\":\r\n                this._renderCancelButton();\r\n                break;\r\n            case \"target\":\r\n            case \"usePopover\":\r\n            case \"items\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    toggle: function(showing) {\r\n        var that = this;\r\n        var d = new _deferred.Deferred;\r\n        that._popup.toggle(showing).done(function() {\r\n            that.option(\"visible\", showing);\r\n            d.resolveWith(that)\r\n        });\r\n        return d.promise()\r\n    },\r\n    show: function() {\r\n        return this.toggle(true)\r\n    },\r\n    hide: function() {\r\n        return this.toggle(false)\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxActionSheet\", ActionSheet);\r\nvar _default = ActionSheet;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _common = require(\"../core/utils/common\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _inflector = require(\"../core/utils/inflector\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _style = require(\"../core/utils/style\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _browser = _interopRequireDefault(require(\"../core/utils/browser\"));\r\nvar _item = _interopRequireDefault(require(\"./collection/item\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./collection/ui.collection_widget.edit\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar BOX_CLASS = \"dx-box\";\r\nvar BOX_SELECTOR = \".dx-box\";\r\nvar BOX_ITEM_CLASS = \"dx-box-item\";\r\nvar BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\r\nvar IS_IE11 = _browser.default.msie && 11 === parseInt(_browser.default.version);\r\nvar MINSIZE_MAP = {\r\n    row: \"minWidth\",\r\n    col: \"minHeight\"\r\n};\r\nvar MAXSIZE_MAP = {\r\n    row: \"maxWidth\",\r\n    col: \"maxHeight\"\r\n};\r\nvar SHRINK = 1;\r\nvar FLEX_JUSTIFY_CONTENT_MAP = {\r\n    start: \"flex-start\",\r\n    end: \"flex-end\",\r\n    center: \"center\",\r\n    \"space-between\": \"space-between\",\r\n    \"space-around\": \"space-around\"\r\n};\r\nvar FLEX_ALIGN_ITEMS_MAP = {\r\n    start: \"flex-start\",\r\n    end: \"flex-end\",\r\n    center: \"center\",\r\n    stretch: \"stretch\"\r\n};\r\nvar FLEX_DIRECTION_MAP = {\r\n    row: \"row\",\r\n    col: \"column\"\r\n};\r\nvar setFlexProp = function(element, prop, value) {\r\n    value = (0, _style.normalizeStyleProp)(prop, value);\r\n    element.style[(0, _style.styleProp)(prop)] = value;\r\n    if (!(0, _window.hasWindow)()) {\r\n        if (\"\" === value || !(0, _type.isDefined)(value)) {\r\n            return\r\n        }\r\n        var cssName = (0, _inflector.dasherize)(prop);\r\n        var styleExpr = cssName + \": \" + value + \";\";\r\n        if (!element.attributes.style) {\r\n            element.setAttribute(\"style\", styleExpr)\r\n        } else {\r\n            if (element.attributes.style.value.indexOf(styleExpr) < 0) {\r\n                element.attributes.style.value += \" \" + styleExpr\r\n            }\r\n        }\r\n    }\r\n};\r\nvar BOX_EVENTNAMESPACE = \"dxBox\";\r\nvar UPDATE_EVENT = \"dxupdate.\" + BOX_EVENTNAMESPACE;\r\nvar FALLBACK_BOX_ITEM = \"dx-box-fallback-item\";\r\nvar FALLBACK_WRAP_MAP = {\r\n    row: \"nowrap\",\r\n    col: \"normal\"\r\n};\r\nvar FALLBACK_MAIN_SIZE_MAP = {\r\n    row: \"width\",\r\n    col: \"height\"\r\n};\r\nvar FALLBACK_CROSS_SIZE_MAP = {\r\n    row: \"height\",\r\n    col: \"width\"\r\n};\r\nvar FALLBACK_PRE_MARGIN_MAP = {\r\n    row: \"marginLeft\",\r\n    col: \"marginTop\"\r\n};\r\nvar FALLBACK_POST_MARGIN_MAP = {\r\n    row: \"marginRight\",\r\n    col: \"marginBottom\"\r\n};\r\nvar FALLBACK_CROSS_PRE_MARGIN_MAP = {\r\n    row: \"marginTop\",\r\n    col: \"marginLeft\"\r\n};\r\nvar FALLBACK_CROSS_POST_MARGIN_MAP = {\r\n    row: \"marginBottom\",\r\n    col: \"marginRight\"\r\n};\r\nvar MARGINS_RTL_FLIP_MAP = {\r\n    marginLeft: \"marginRight\",\r\n    marginRight: \"marginLeft\"\r\n};\r\nvar BoxItem = function(_CollectionWidgetItem) {\r\n    _inheritsLoose(BoxItem, _CollectionWidgetItem);\r\n\r\n    function BoxItem() {\r\n        return _CollectionWidgetItem.apply(this, arguments) || this\r\n    }\r\n    var _proto = BoxItem.prototype;\r\n    _proto._renderVisible = function(value, oldValue) {\r\n        _CollectionWidgetItem.prototype._renderVisible.call(this, value);\r\n        if ((0, _type.isDefined)(oldValue)) {\r\n            this._options.fireItemStateChangedAction({\r\n                name: \"visible\",\r\n                state: value,\r\n                oldState: oldValue\r\n            })\r\n        }\r\n    };\r\n    return BoxItem\r\n}(_item.default);\r\nvar FlexLayoutStrategy = function() {\r\n    function FlexLayoutStrategy($element, option) {\r\n        this._$element = $element;\r\n        this._option = option;\r\n        this.initSize = _common.noop;\r\n        this.update = _common.noop\r\n    }\r\n    var _proto2 = FlexLayoutStrategy.prototype;\r\n    _proto2.renderBox = function() {\r\n        this._$element.css({\r\n            display: (0, _style.stylePropPrefix)(\"flexDirection\") + \"flex\"\r\n        });\r\n        setFlexProp(this._$element.get(0), \"flexDirection\", FLEX_DIRECTION_MAP[this._option(\"direction\")])\r\n    };\r\n    _proto2.renderAlign = function() {\r\n        this._$element.css({\r\n            justifyContent: this._normalizedAlign()\r\n        })\r\n    };\r\n    _proto2._normalizedAlign = function() {\r\n        var align = this._option(\"align\");\r\n        return align in FLEX_JUSTIFY_CONTENT_MAP ? FLEX_JUSTIFY_CONTENT_MAP[align] : align\r\n    };\r\n    _proto2.renderCrossAlign = function() {\r\n        this._$element.css({\r\n            alignItems: this._normalizedCrossAlign()\r\n        })\r\n    };\r\n    _proto2._normalizedCrossAlign = function() {\r\n        var crossAlign = this._option(\"crossAlign\");\r\n        return crossAlign in FLEX_ALIGN_ITEMS_MAP ? FLEX_ALIGN_ITEMS_MAP[crossAlign] : crossAlign\r\n    };\r\n    _proto2.renderItems = function($items) {\r\n        var flexPropPrefix = (0, _style.stylePropPrefix)(\"flexDirection\");\r\n        var direction = this._option(\"direction\");\r\n        (0, _iterator.each)($items, function() {\r\n            var $item = (0, _renderer.default)(this);\r\n            var item = $item.data(BOX_ITEM_DATA_KEY);\r\n            $item.css({\r\n                display: flexPropPrefix + \"flex\"\r\n            }).css(MAXSIZE_MAP[direction], item.maxSize || \"none\").css(MINSIZE_MAP[direction], item.minSize || \"0\");\r\n            setFlexProp($item.get(0), \"flexBasis\", item.baseSize || 0);\r\n            setFlexProp($item.get(0), \"flexGrow\", item.ratio);\r\n            setFlexProp($item.get(0), \"flexShrink\", (0, _type.isDefined)(item.shrink) ? item.shrink : SHRINK);\r\n            $item.children().each(function(_, itemContent) {\r\n                (0, _renderer.default)(itemContent).css({\r\n                    width: \"auto\",\r\n                    height: \"auto\",\r\n                    display: (0, _style.stylePropPrefix)(\"flexDirection\") + \"flex\",\r\n                    flexBasis: IS_IE11 && item._forceItemFlexSizeCorrectionInIE ? \"auto\" : 0\r\n                });\r\n                setFlexProp(itemContent, \"flexGrow\", 1);\r\n                setFlexProp(itemContent, \"flexDirection\", (0, _renderer.default)(itemContent)[0].style.flexDirection || \"column\")\r\n            })\r\n        })\r\n    };\r\n    return FlexLayoutStrategy\r\n}();\r\nvar FallbackLayoutStrategy = function() {\r\n    function FallbackLayoutStrategy($element, option) {\r\n        this._$element = $element;\r\n        this._option = option\r\n    }\r\n    var _proto3 = FallbackLayoutStrategy.prototype;\r\n    _proto3.renderBox = function() {\r\n        this._$element.css({\r\n            fontSize: 0,\r\n            whiteSpace: FALLBACK_WRAP_MAP[this._option(\"direction\")],\r\n            verticalAlign: \"top\"\r\n        });\r\n        _events_engine.default.off(this._$element, UPDATE_EVENT);\r\n        _events_engine.default.on(this._$element, UPDATE_EVENT, this.update.bind(this))\r\n    };\r\n    _proto3.renderAlign = function() {\r\n        var $items = this._$items;\r\n        if (!$items) {\r\n            return\r\n        }\r\n        var align = this._option(\"align\");\r\n        var totalItemSize = this.totalItemSize;\r\n        var direction = this._option(\"direction\");\r\n        var boxSize = this._$element[FALLBACK_MAIN_SIZE_MAP[direction]]();\r\n        var freeSpace = boxSize - totalItemSize;\r\n        var shift = 0;\r\n        this._setItemsMargins($items, direction, 0);\r\n        switch (align) {\r\n            case \"start\":\r\n                break;\r\n            case \"end\":\r\n                shift = freeSpace;\r\n                $items.first().css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), shift);\r\n                break;\r\n            case \"center\":\r\n                shift = .5 * freeSpace;\r\n                $items.first().css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), shift);\r\n                $items.last().css(this._chooseMarginSide(FALLBACK_POST_MARGIN_MAP[direction]), shift);\r\n                break;\r\n            case \"space-between\":\r\n                shift = .5 * freeSpace / ($items.length - 1);\r\n                this._setItemsMargins($items, direction, shift);\r\n                $items.first().css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), 0);\r\n                $items.last().css(this._chooseMarginSide(FALLBACK_POST_MARGIN_MAP[direction]), 0);\r\n                break;\r\n            case \"space-around\":\r\n                shift = .5 * freeSpace / $items.length;\r\n                this._setItemsMargins($items, direction, shift)\r\n        }\r\n    };\r\n    _proto3._setItemsMargins = function($items, direction, shift) {\r\n        $items.css(this._chooseMarginSide(FALLBACK_PRE_MARGIN_MAP[direction]), shift).css(this._chooseMarginSide(FALLBACK_POST_MARGIN_MAP[direction]), shift)\r\n    };\r\n    _proto3.renderCrossAlign = function() {\r\n        var $items = this._$items;\r\n        if (!$items) {\r\n            return\r\n        }\r\n        var crossAlign = this._option(\"crossAlign\");\r\n        var direction = this._option(\"direction\");\r\n        var size = this._$element[FALLBACK_CROSS_SIZE_MAP[direction]]();\r\n        var that = this;\r\n        switch (crossAlign) {\r\n            case \"start\":\r\n                break;\r\n            case \"end\":\r\n                (0, _iterator.each)($items, function() {\r\n                    var $item = (0, _renderer.default)(this);\r\n                    var itemSize = $item[FALLBACK_CROSS_SIZE_MAP[direction]]();\r\n                    var shift = size - itemSize;\r\n                    $item.css(that._chooseMarginSide(FALLBACK_CROSS_PRE_MARGIN_MAP[direction]), shift)\r\n                });\r\n                break;\r\n            case \"center\":\r\n                (0, _iterator.each)($items, function() {\r\n                    var $item = (0, _renderer.default)(this);\r\n                    var itemSize = $item[FALLBACK_CROSS_SIZE_MAP[direction]]();\r\n                    var shift = .5 * (size - itemSize);\r\n                    $item.css(that._chooseMarginSide(FALLBACK_CROSS_PRE_MARGIN_MAP[direction]), shift).css(that._chooseMarginSide(FALLBACK_CROSS_POST_MARGIN_MAP[direction]), shift)\r\n                });\r\n                break;\r\n            case \"stretch\":\r\n                $items.css(that._chooseMarginSide(FALLBACK_CROSS_PRE_MARGIN_MAP[direction]), 0).css(that._chooseMarginSide(FALLBACK_CROSS_POST_MARGIN_MAP[direction]), 0).css(FALLBACK_CROSS_SIZE_MAP[direction], \"100%\")\r\n        }\r\n    };\r\n    _proto3._chooseMarginSide = function(value) {\r\n        if (!this._option(\"rtlEnabled\")) {\r\n            return value\r\n        }\r\n        return MARGINS_RTL_FLIP_MAP[value] || value\r\n    };\r\n    _proto3.renderItems = function($items) {\r\n        var _this = this;\r\n        this._$items = $items;\r\n        var direction = this._option(\"direction\");\r\n        var totalRatio = 0;\r\n        var totalWeightedShrink = 0;\r\n        var totalBaseSize = 0;\r\n        (0, _iterator.each)($items, function(_, item) {\r\n            var $item = (0, _renderer.default)(item);\r\n            $item.css({\r\n                display: \"inline-block\",\r\n                verticalAlign: \"top\"\r\n            });\r\n            $item[FALLBACK_MAIN_SIZE_MAP[direction]](\"auto\");\r\n            $item.removeClass(FALLBACK_BOX_ITEM);\r\n            var itemData = $item.data(BOX_ITEM_DATA_KEY);\r\n            var ratio = itemData.ratio || 0;\r\n            var size = _this._baseSize($item);\r\n            var shrink = (0, _type.isDefined)(itemData.shrink) ? itemData.shrink : SHRINK;\r\n            totalRatio += ratio;\r\n            totalWeightedShrink += shrink * size;\r\n            totalBaseSize += size\r\n        });\r\n        var freeSpaceSize = this._boxSize() - totalBaseSize;\r\n        var itemSize = function($item) {\r\n            var itemData = $item.data(BOX_ITEM_DATA_KEY);\r\n            var size = _this._baseSize($item);\r\n            var factor = freeSpaceSize >= 0 ? itemData.ratio || 0 : ((0, _type.isDefined)(itemData.shrink) ? itemData.shrink : SHRINK) * size;\r\n            var totalFactor = freeSpaceSize >= 0 ? totalRatio : totalWeightedShrink;\r\n            var shift = totalFactor ? Math.round(freeSpaceSize * factor / totalFactor) : 0;\r\n            return size + shift\r\n        };\r\n        var totalItemSize = 0;\r\n        (0, _iterator.each)($items, function(_, item) {\r\n            var $item = (0, _renderer.default)(item);\r\n            var itemData = (0, _renderer.default)(item).data(BOX_ITEM_DATA_KEY);\r\n            var size = itemSize($item);\r\n            totalItemSize += size;\r\n            $item.css(MAXSIZE_MAP[direction], itemData.maxSize || \"none\").css(MINSIZE_MAP[direction], itemData.minSize || \"0\").css(FALLBACK_MAIN_SIZE_MAP[direction], size);\r\n            $item.addClass(FALLBACK_BOX_ITEM)\r\n        });\r\n        this.totalItemSize = totalItemSize\r\n    };\r\n    _proto3._baseSize = function(item) {\r\n        var itemData = (0, _renderer.default)(item).data(BOX_ITEM_DATA_KEY);\r\n        return null == itemData.baseSize ? 0 : \"auto\" === itemData.baseSize ? this._contentSize(item) : this._parseSize(itemData.baseSize)\r\n    };\r\n    _proto3._contentSize = function(item) {\r\n        return (0, _renderer.default)(item)[FALLBACK_MAIN_SIZE_MAP[this._option(\"direction\")]]()\r\n    };\r\n    _proto3._parseSize = function(size) {\r\n        return String(size).match(/.+%$/) ? .01 * parseFloat(size) * this._boxSizeValue : size\r\n    };\r\n    _proto3._boxSize = function(value) {\r\n        if (!arguments.length) {\r\n            this._boxSizeValue = this._boxSizeValue || this._totalBaseSize();\r\n            return this._boxSizeValue\r\n        }\r\n        this._boxSizeValue = value\r\n    };\r\n    _proto3._totalBaseSize = function() {\r\n        var _this2 = this;\r\n        var result = 0;\r\n        (0, _iterator.each)(this._$items, function(_, item) {\r\n            result += _this2._baseSize(item)\r\n        });\r\n        return result\r\n    };\r\n    _proto3.initSize = function() {\r\n        this._boxSize(this._$element[FALLBACK_MAIN_SIZE_MAP[this._option(\"direction\")]]())\r\n    };\r\n    _proto3.update = function() {\r\n        if (!this._$items || this._$element.is(\":hidden\")) {\r\n            return\r\n        }\r\n        this._$items.detach();\r\n        this.initSize();\r\n        this._$element.append(this._$items);\r\n        this.renderItems(this._$items);\r\n        this.renderAlign();\r\n        this.renderCrossAlign();\r\n        var element = this._$element.get(0);\r\n        this._$items.find(BOX_SELECTOR).each(function() {\r\n            if (element === (0, _renderer.default)(this).parent().closest(BOX_SELECTOR).get(0)) {\r\n                _events_engine.default.triggerHandler(this, UPDATE_EVENT)\r\n            }\r\n        })\r\n    };\r\n    return FallbackLayoutStrategy\r\n}();\r\nvar Box = function(_CollectionWidget) {\r\n    _inheritsLoose(Box, _CollectionWidget);\r\n\r\n    function Box() {\r\n        return _CollectionWidget.apply(this, arguments) || this\r\n    }\r\n    var _proto4 = Box.prototype;\r\n    _proto4._getDefaultOptions = function() {\r\n        return (0, _extend.extend)(_CollectionWidget.prototype._getDefaultOptions.call(this), {\r\n            direction: \"row\",\r\n            align: \"start\",\r\n            crossAlign: \"stretch\",\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            onItemStateChanged: void 0,\r\n            _layoutStrategy: \"flex\",\r\n            _queue: void 0\r\n        })\r\n    };\r\n    _proto4._defaultOptionsRules = function() {\r\n        return _CollectionWidget.prototype._defaultOptionsRules.call(this).concat([{\r\n            device: function() {\r\n                return _browser.default.msie\r\n            },\r\n            options: {\r\n                _layoutStrategy: \"fallback\"\r\n            }\r\n        }])\r\n    };\r\n    _proto4._itemClass = function() {\r\n        return BOX_ITEM_CLASS\r\n    };\r\n    _proto4._itemDataKey = function() {\r\n        return BOX_ITEM_DATA_KEY\r\n    };\r\n    _proto4._itemElements = function() {\r\n        return this._itemContainer().children(this._itemSelector())\r\n    };\r\n    _proto4._init = function() {\r\n        _CollectionWidget.prototype._init.call(this);\r\n        this.$element().addClass(\"\".concat(BOX_CLASS, \"-\").concat(this.option(\"_layoutStrategy\")));\r\n        this._initLayout();\r\n        this._initBoxQueue()\r\n    };\r\n    _proto4._initLayout = function() {\r\n        this._layout = \"fallback\" === this.option(\"_layoutStrategy\") ? new FallbackLayoutStrategy(this.$element(), this.option.bind(this)) : new FlexLayoutStrategy(this.$element(), this.option.bind(this))\r\n    };\r\n    _proto4._initBoxQueue = function() {\r\n        this._queue = this.option(\"_queue\") || []\r\n    };\r\n    _proto4._queueIsNotEmpty = function() {\r\n        return this.option(\"_queue\") ? false : !!this._queue.length\r\n    };\r\n    _proto4._pushItemToQueue = function($item, config) {\r\n        this._queue.push({\r\n            $item: $item,\r\n            config: config\r\n        })\r\n    };\r\n    _proto4._shiftItemFromQueue = function() {\r\n        return this._queue.shift()\r\n    };\r\n    _proto4._initMarkup = function() {\r\n        this.$element().addClass(BOX_CLASS);\r\n        this._layout.renderBox();\r\n        _CollectionWidget.prototype._initMarkup.call(this);\r\n        this._renderAlign();\r\n        this._renderActions()\r\n    };\r\n    _proto4._renderActions = function() {\r\n        this._onItemStateChanged = this._createActionByOption(\"onItemStateChanged\")\r\n    };\r\n    _proto4._renderAlign = function() {\r\n        this._layout.renderAlign();\r\n        this._layout.renderCrossAlign()\r\n    };\r\n    _proto4._renderItems = function(items) {\r\n        var _this3 = this;\r\n        this._layout.initSize();\r\n        _CollectionWidget.prototype._renderItems.call(this, items);\r\n        while (this._queueIsNotEmpty()) {\r\n            var item = this._shiftItemFromQueue();\r\n            this._createComponent(item.$item, Box, (0, _extend.extend)({\r\n                _layoutStrategy: this.option(\"_layoutStrategy\"),\r\n                itemTemplate: this.option(\"itemTemplate\"),\r\n                itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n                onItemHold: this.option(\"onItemHold\"),\r\n                onItemClick: this.option(\"onItemClick\"),\r\n                onItemContextMenu: this.option(\"onItemContextMenu\"),\r\n                onItemRendered: this.option(\"onItemRendered\"),\r\n                _queue: this._queue\r\n            }, item.config))\r\n        }\r\n        this._layout.renderItems(this._itemElements());\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = setTimeout(function() {\r\n            if (!_this3._isUpdated) {\r\n                _this3._layout.update()\r\n            }\r\n            _this3._isUpdated = false;\r\n            _this3._updateTimer = null\r\n        })\r\n    };\r\n    _proto4._renderItemContent = function(args) {\r\n        var $itemNode = args.itemData && args.itemData.node;\r\n        if ($itemNode) {\r\n            return this._renderItemContentByNode(args, $itemNode)\r\n        }\r\n        return _CollectionWidget.prototype._renderItemContent.call(this, args)\r\n    };\r\n    _proto4._postprocessRenderItem = function(args) {\r\n        var boxConfig = args.itemData.box;\r\n        if (!boxConfig) {\r\n            return\r\n        }\r\n        this._pushItemToQueue(args.itemContent, boxConfig)\r\n    };\r\n    _proto4._createItemByTemplate = function(itemTemplate, args) {\r\n        if (args.itemData.box) {\r\n            return itemTemplate.source ? itemTemplate.source() : (0, _renderer.default)()\r\n        }\r\n        return _CollectionWidget.prototype._createItemByTemplate.call(this, itemTemplate, args)\r\n    };\r\n    _proto4._visibilityChanged = function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    };\r\n    _proto4._dimensionChanged = function() {\r\n        if (this._updateTimer) {\r\n            return\r\n        }\r\n        this._isUpdated = true;\r\n        this._layout.update()\r\n    };\r\n    _proto4._dispose = function() {\r\n        clearTimeout(this._updateTimer);\r\n        _CollectionWidget.prototype._dispose.apply(this, arguments)\r\n    };\r\n    _proto4._itemOptionChanged = function(item, property, value, oldValue) {\r\n        if (\"visible\" === property) {\r\n            this._onItemStateChanged({\r\n                name: property,\r\n                state: value,\r\n                oldState: false !== oldValue\r\n            })\r\n        }\r\n        _CollectionWidget.prototype._itemOptionChanged.call(this, item, property, value)\r\n    };\r\n    _proto4._optionChanged = function(args) {\r\n        switch (args.name) {\r\n            case \"_layoutStrategy\":\r\n            case \"_queue\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            case \"align\":\r\n                this._layout.renderAlign();\r\n                break;\r\n            case \"crossAlign\":\r\n                this._layout.renderCrossAlign();\r\n                break;\r\n            default:\r\n                _CollectionWidget.prototype._optionChanged.call(this, args)\r\n        }\r\n    };\r\n    _proto4._itemOptions = function() {\r\n        var _this4 = this;\r\n        var options = _CollectionWidget.prototype._itemOptions.call(this);\r\n        options.fireItemStateChangedAction = function(e) {\r\n            _this4._onItemStateChanged(e)\r\n        };\r\n        return options\r\n    };\r\n    _proto4.repaint = function() {\r\n        this._dimensionChanged()\r\n    };\r\n    return Box\r\n}(_uiCollection_widget.default);\r\nBox.ItemClass = BoxItem;\r\n(0, _component_registrator.default)(\"dxBox\", Box);\r\nvar _default = Box;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/calendar.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _ui = _interopRequireDefault(require(\"./calendar/ui.calendar\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _ui.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/calendar/ui.calendar.base_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _element_data = require(\"../../core/element_data\");\r\nvar _element = require(\"../../core/element\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _click = require(\"../../events/click\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar abstract = _ui.default.abstract;\r\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\r\nvar CALENDAR_CELL_CLASS = \"dx-calendar-cell\";\r\nvar CALENDAR_EMPTY_CELL_CLASS = \"dx-calendar-empty-cell\";\r\nvar CALENDAR_TODAY_CLASS = \"dx-calendar-today\";\r\nvar CALENDAR_SELECTED_DATE_CLASS = \"dx-calendar-selected-date\";\r\nvar CALENDAR_CONTOURED_DATE_CLASS = \"dx-calendar-contoured-date\";\r\nvar CALENDAR_DXCLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxCalendar\");\r\nvar CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\r\nvar BaseView = _ui.default.inherit({\r\n    _getViewName: function() {\r\n        return \"base\"\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            date: new Date,\r\n            focusStateEnabled: false,\r\n            cellTemplate: null,\r\n            disabledDates: null,\r\n            onCellClick: null,\r\n            rowCount: 3,\r\n            colCount: 4,\r\n            allowValueSelection: true,\r\n            _todayDate: function() {\r\n                return new Date\r\n            }\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderImpl()\r\n    },\r\n    _renderImpl: function() {\r\n        this.$element().append(this._createTable());\r\n        this._createDisabledDatesHandler();\r\n        this._renderBody();\r\n        this._renderContouredDate();\r\n        this._renderValue();\r\n        this._renderEvents()\r\n    },\r\n    _createTable: function() {\r\n        this._$table = (0, _renderer.default)(\"<table>\");\r\n        this.setAria({\r\n            label: _message.default.format(\"dxCalendar-ariaWidgetName\"),\r\n            role: \"grid\"\r\n        }, this._$table);\r\n        return this._$table\r\n    },\r\n    _renderBody: function() {\r\n        this.$body = (0, _renderer.default)(\"<tbody>\").appendTo(this._$table);\r\n        var rowData = {\r\n            cellDate: this._getFirstCellData(),\r\n            prevCellDate: null\r\n        };\r\n        for (var rowIndex = 0, rowCount = this.option(\"rowCount\"); rowIndex < rowCount; rowIndex++) {\r\n            rowData.row = this._createRow();\r\n            for (var colIndex = 0, colCount = this.option(\"colCount\"); colIndex < colCount; colIndex++) {\r\n                this._renderCell(rowData, colIndex)\r\n            }\r\n        }\r\n    },\r\n    _createRow: function() {\r\n        var row = _dom_adapter.default.createElement(\"tr\");\r\n        this.setAria(\"role\", \"row\", (0, _renderer.default)(row));\r\n        this.$body.get(0).appendChild(row);\r\n        return row\r\n    },\r\n    _appendCell: function(row, cell) {\r\n        if (!this._appendMethodName) {\r\n            this._cacheAppendMethodName()\r\n        }(0, _renderer.default)(row)[this._appendMethodName](cell)\r\n    },\r\n    _cacheAppendMethodName: function(rtlEnabled) {\r\n        this._appendMethodName = (null !== rtlEnabled && void 0 !== rtlEnabled ? rtlEnabled : this.option(\"rtlEnabled\")) ? \"prepend\" : \"append\"\r\n    },\r\n    _createCell: function(cellDate) {\r\n        var cell = _dom_adapter.default.createElement(\"td\");\r\n        var $cell = (0, _renderer.default)(cell);\r\n        cell.className = this._getClassNameByDate(cellDate);\r\n        cell.setAttribute(\"data-value\", _date_serialization.default.serializeDate(cellDate, _date.default.getShortDateFormat()));\r\n        (0, _element_data.data)(cell, CALENDAR_DATE_VALUE_KEY, cellDate);\r\n        this.setAria({\r\n            role: \"gridcell\",\r\n            label: this.getCellAriaLabel(cellDate)\r\n        }, $cell);\r\n        return {\r\n            cell: cell,\r\n            $cell: $cell\r\n        }\r\n    },\r\n    _renderCell: function(params, cellIndex) {\r\n        var cellDate = params.cellDate,\r\n            prevCellDate = params.prevCellDate,\r\n            row = params.row;\r\n        if (prevCellDate) {\r\n            _date.default.fixTimezoneGap(prevCellDate, cellDate)\r\n        }\r\n        params.prevCellDate = cellDate;\r\n        var _this$_createCell = this._createCell(cellDate),\r\n            cell = _this$_createCell.cell,\r\n            $cell = _this$_createCell.$cell;\r\n        var cellTemplate = this.option(\"cellTemplate\");\r\n        this._appendCell(row, cell);\r\n        if (cellTemplate) {\r\n            cellTemplate.render(this._prepareCellTemplateData(cellDate, cellIndex, $cell))\r\n        } else {\r\n            cell.innerHTML = this._getCellText(cellDate)\r\n        }\r\n        params.cellDate = this._getNextCellData(cellDate)\r\n    },\r\n    _getClassNameByDate: function(cellDate) {\r\n        var className = CALENDAR_CELL_CLASS;\r\n        if (this._isTodayCell(cellDate)) {\r\n            className += \" \".concat(CALENDAR_TODAY_CLASS)\r\n        }\r\n        if (this._isDateOutOfRange(cellDate) || this.isDateDisabled(cellDate)) {\r\n            className += \" \".concat(CALENDAR_EMPTY_CELL_CLASS)\r\n        }\r\n        if (this._isOtherView(cellDate)) {\r\n            className += \" \".concat(CALENDAR_OTHER_VIEW_CLASS)\r\n        }\r\n        return className\r\n    },\r\n    _prepareCellTemplateData: function(cellDate, cellIndex, $cell) {\r\n        return {\r\n            model: {\r\n                text: this._getCellText(cellDate),\r\n                date: cellDate,\r\n                view: this._getViewName()\r\n            },\r\n            container: (0, _element.getPublicElement)($cell),\r\n            index: cellIndex\r\n        }\r\n    },\r\n    _renderEvents: function() {\r\n        var _this = this;\r\n        this._createCellClickAction();\r\n        _events_engine.default.off(this._$table, CALENDAR_DXCLICK_EVENT_NAME);\r\n        _events_engine.default.on(this._$table, CALENDAR_DXCLICK_EVENT_NAME, \"td\", function(e) {\r\n            if (!(0, _renderer.default)(e.currentTarget).hasClass(CALENDAR_EMPTY_CELL_CLASS)) {\r\n                _this._cellClickAction({\r\n                    event: e,\r\n                    value: (0, _renderer.default)(e.currentTarget).data(CALENDAR_DATE_VALUE_KEY)\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _createCellClickAction: function() {\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\")\r\n    },\r\n    _createDisabledDatesHandler: function() {\r\n        var disabledDates = this.option(\"disabledDates\");\r\n        this._disabledDatesHandler = Array.isArray(disabledDates) ? this._getDefaultDisabledDatesHandler(disabledDates) : disabledDates || _common.noop\r\n    },\r\n    _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n        return _common.noop\r\n    },\r\n    _isTodayCell: abstract,\r\n    _isDateOutOfRange: abstract,\r\n    isDateDisabled: function(cellDate) {\r\n        var dateParts = {\r\n            date: cellDate,\r\n            view: this._getViewName()\r\n        };\r\n        return this._disabledDatesHandler(dateParts)\r\n    },\r\n    _isOtherView: abstract,\r\n    _getCellText: abstract,\r\n    _getFirstCellData: abstract,\r\n    _getNextCellData: abstract,\r\n    _renderContouredDate: function(contouredDate) {\r\n        if (!this.option(\"focusStateEnabled\")) {\r\n            return\r\n        }\r\n        contouredDate = contouredDate || this.option(\"contouredDate\");\r\n        var $oldContouredCell = this._getContouredCell();\r\n        var $newContouredCell = this._getCellByDate(contouredDate);\r\n        $oldContouredCell.removeClass(CALENDAR_CONTOURED_DATE_CLASS);\r\n        $newContouredCell.addClass(CALENDAR_CONTOURED_DATE_CLASS)\r\n    },\r\n    _getContouredCell: function() {\r\n        return this._$table.find(\".\".concat(CALENDAR_CONTOURED_DATE_CLASS))\r\n    },\r\n    _changeValue: function(cellDate) {\r\n        if (cellDate) {\r\n            var value = this.option(\"value\");\r\n            var newValue = value ? new Date(value) : new Date;\r\n            newValue.setDate(cellDate.getDate());\r\n            newValue.setMonth(cellDate.getMonth());\r\n            newValue.setFullYear(cellDate.getFullYear());\r\n            newValue.setDate(cellDate.getDate());\r\n            this.option(\"value\", newValue)\r\n        } else {\r\n            this.option(\"value\", null)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (!this.option(\"allowValueSelection\")) {\r\n            return\r\n        }\r\n        var value = this.option(\"value\");\r\n        var selectedCell = this._getCellByDate(value);\r\n        if (this._selectedCell) {\r\n            this._selectedCell.removeClass(CALENDAR_SELECTED_DATE_CLASS)\r\n        }\r\n        selectedCell.addClass(CALENDAR_SELECTED_DATE_CLASS);\r\n        this._selectedCell = selectedCell\r\n    },\r\n    getCellAriaLabel: function(date) {\r\n        return this._getCellText(date)\r\n    },\r\n    _getFirstAvailableDate: function() {\r\n        var date = this.option(\"date\");\r\n        var min = this.option(\"min\");\r\n        date = _date.default.getFirstDateView(this._getViewName(), date);\r\n        return new Date(min && date < min ? min : date)\r\n    },\r\n    _getCellByDate: abstract,\r\n    isBoundary: abstract,\r\n    _optionChanged: function(args) {\r\n        var name = args.name,\r\n            value = args.value;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._renderValue();\r\n                break;\r\n            case \"contouredDate\":\r\n                this._renderContouredDate(value);\r\n                break;\r\n            case \"onCellClick\":\r\n                this._createCellClickAction();\r\n                break;\r\n            case \"disabledDates\":\r\n            case \"cellTemplate\":\r\n                this._invalidate();\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this._cacheAppendMethodName(value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"_todayDate\":\r\n                this._renderBody();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = BaseView;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/calendar/ui.calendar.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _swipeable = _interopRequireDefault(require(\"../../events/gesture/swipeable\"));\r\nvar _uiCalendar = _interopRequireDefault(require(\"./ui.calendar.navigator\"));\r\nvar _uiCalendar2 = _interopRequireDefault(require(\"./ui.calendar.views\"));\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _date2 = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _function_template = require(\"../../core/templates/function_template\");\r\nvar _index = require(\"../../events/utils/index\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CALENDAR_CLASS = \"dx-calendar\";\r\nvar CALENDAR_BODY_CLASS = \"dx-calendar-body\";\r\nvar CALENDAR_CELL_CLASS = \"dx-calendar-cell\";\r\nvar CALENDAR_FOOTER_CLASS = \"dx-calendar-footer\";\r\nvar CALENDAR_TODAY_BUTTON_CLASS = \"dx-calendar-today-button\";\r\nvar CALENDAR_HAS_FOOTER_CLASS = \"dx-calendar-with-footer\";\r\nvar CALENDAR_VIEWS_WRAPPER_CLASS = \"dx-calendar-views-wrapper\";\r\nvar CALENDAR_VIEW_CLASS = \"dx-calendar-view\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar ANIMATION_DURATION_SHOW_VIEW = 250;\r\nvar POP_ANIMATION_FROM = .6;\r\nvar POP_ANIMATION_TO = 1;\r\nvar CALENDAR_INPUT_STANDARD_PATTERN = \"yyyy-MM-dd\";\r\nvar CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\r\nvar LEVEL_COMPARE_MAP = {\r\n    month: 3,\r\n    year: 2,\r\n    decade: 1,\r\n    century: 0\r\n};\r\nvar ZOOM_LEVEL = {\r\n    MONTH: \"month\",\r\n    YEAR: \"year\",\r\n    DECADE: \"decade\",\r\n    CENTURY: \"century\"\r\n};\r\nvar isIE11 = _browser.default.msie && parseInt(_browser.default.version) <= 11;\r\nvar Calendar = _editor.default.inherit({\r\n    _activeStateUnit: \".\" + CALENDAR_CELL_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            activeStateEnabled: true,\r\n            currentDate: new Date,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: new Date(1e3, 0),\r\n            max: new Date(3e3, 0),\r\n            firstDayOfWeek: void 0,\r\n            zoomLevel: ZOOM_LEVEL.MONTH,\r\n            maxZoomLevel: ZOOM_LEVEL.MONTH,\r\n            minZoomLevel: ZOOM_LEVEL.CENTURY,\r\n            showTodayButton: false,\r\n            cellTemplate: \"cell\",\r\n            disabledDates: null,\r\n            onCellClick: null,\r\n            onContouredChanged: null,\r\n            hasFocus: function(element) {\r\n                return element.hasClass(FOCUSED_STATE_CLASS)\r\n            },\r\n            _todayDate: function() {\r\n                return new Date\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _supportedKeys: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            rightArrow: function(e) {\r\n                e.preventDefault();\r\n                if ((0, _index.isCommandKeyPressed)(e)) {\r\n                    this._waitRenderView(1)\r\n                } else {\r\n                    this._moveCurrentDateByOffset(1 * this._getRtlCorrection())\r\n                }\r\n            },\r\n            leftArrow: function(e) {\r\n                e.preventDefault();\r\n                if ((0, _index.isCommandKeyPressed)(e)) {\r\n                    this._waitRenderView(-1)\r\n                } else {\r\n                    this._moveCurrentDateByOffset(-1 * this._getRtlCorrection())\r\n                }\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                if ((0, _index.isCommandKeyPressed)(e)) {\r\n                    this._navigateUp()\r\n                } else {\r\n                    if (_fx.default.isAnimating(this._view.$element())) {\r\n                        return\r\n                    }\r\n                    this._moveCurrentDateByOffset(-1 * this._view.option(\"colCount\"))\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                if ((0, _index.isCommandKeyPressed)(e)) {\r\n                    this._navigateDown()\r\n                } else {\r\n                    if (_fx.default.isAnimating(this._view.$element())) {\r\n                        return\r\n                    }\r\n                    this._moveCurrentDateByOffset(1 * this._view.option(\"colCount\"))\r\n                }\r\n            },\r\n            home: function(e) {\r\n                e.preventDefault();\r\n                var zoomLevel = this.option(\"zoomLevel\");\r\n                var currentDate = this.option(\"currentDate\");\r\n                var min = this._dateOption(\"min\");\r\n                if (this._view.isDateDisabled(currentDate)) {\r\n                    return\r\n                }\r\n                var date = _date2.default.sameView(zoomLevel, currentDate, min) ? min : _date2.default.getViewFirstCellDate(zoomLevel, currentDate);\r\n                this._moveToClosestAvailableDate(date)\r\n            },\r\n            end: function(e) {\r\n                e.preventDefault();\r\n                var zoomLevel = this.option(\"zoomLevel\");\r\n                var currentDate = this.option(\"currentDate\");\r\n                var max = this._dateOption(\"max\");\r\n                if (this._view.isDateDisabled(currentDate)) {\r\n                    return\r\n                }\r\n                var date = _date2.default.sameView(zoomLevel, currentDate, max) ? max : _date2.default.getViewLastCellDate(zoomLevel, currentDate);\r\n                this._moveToClosestAvailableDate(date)\r\n            },\r\n            pageUp: function(e) {\r\n                e.preventDefault();\r\n                this._waitRenderView(-1 * this._getRtlCorrection())\r\n            },\r\n            pageDown: function(e) {\r\n                e.preventDefault();\r\n                this._waitRenderView(1 * this._getRtlCorrection())\r\n            },\r\n            tab: _common.noop,\r\n            enter: function(e) {\r\n                if (!this._isMaxZoomLevel()) {\r\n                    this._navigateDown()\r\n                } else {\r\n                    if (!this._view.isDateDisabled(this.option(\"currentDate\"))) {\r\n                        var value = this._updateTimeComponent(this.option(\"currentDate\"));\r\n                        this._dateValue(value, e)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getSerializationFormat: function(optionName) {\r\n        var value = this.option(optionName || \"value\");\r\n        if (this.option(\"dateSerializationFormat\")) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if ((0, _type.isNumeric)(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!(0, _type.isString)(value)) {\r\n            return\r\n        }\r\n        return _date_serialization.default.getDateSerializationFormat(value)\r\n    },\r\n    _convertToDate: function(value, optionName) {\r\n        return _date_serialization.default.deserializeDate(value)\r\n    },\r\n    _dateValue: function(value, event) {\r\n        if (event) {\r\n            if (\"keydown\" === event.type) {\r\n                var cellElement = this._view._getContouredCell().get(0);\r\n                event.target = cellElement\r\n            }\r\n            this._saveValueChangeEvent(event)\r\n        }\r\n        this._dateOption(\"value\", value)\r\n    },\r\n    _dateOption: function(optionName, optionValue) {\r\n        if (1 === arguments.length) {\r\n            return this._convertToDate(this.option(optionName), optionName)\r\n        }\r\n        var serializationFormat = this._getSerializationFormat(optionName);\r\n        this.option(optionName, _date_serialization.default.serializeDate(optionValue, serializationFormat))\r\n    },\r\n    _shiftDate: function(zoomLevel, date, offset, reverse) {\r\n        switch (zoomLevel) {\r\n            case ZOOM_LEVEL.MONTH:\r\n                date.setDate(date.getDate() + offset * reverse);\r\n                break;\r\n            case ZOOM_LEVEL.YEAR:\r\n                date.setMonth(date.getMonth() + offset * reverse);\r\n                break;\r\n            case ZOOM_LEVEL.DECADE:\r\n                date.setFullYear(date.getFullYear() + offset * reverse);\r\n                break;\r\n            case ZOOM_LEVEL.CENTURY:\r\n                date.setFullYear(date.getFullYear() + 10 * offset * reverse)\r\n        }\r\n    },\r\n    _moveCurrentDateByOffset: function(offset) {\r\n        var baseDate = this.option(\"currentDate\");\r\n        var currentDate = new Date(baseDate);\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        this._shiftDate(zoomLevel, currentDate, offset, 1);\r\n        var maxDate = this._getMaxDate();\r\n        var minDate = this._getMinDate();\r\n        var isDateForwardInNeighborView = this._areDatesInNeighborView(zoomLevel, currentDate, baseDate);\r\n        var isDateForwardInRange = (0, _math.inRange)(currentDate, minDate, maxDate) && isDateForwardInNeighborView;\r\n        var dateForward = new Date(currentDate);\r\n        while (isDateForwardInRange) {\r\n            if (isDateForwardInRange && !this._view.isDateDisabled(dateForward)) {\r\n                currentDate = dateForward;\r\n                break\r\n            }\r\n            this._shiftDate(zoomLevel, dateForward, offset, 1);\r\n            isDateForwardInNeighborView = this._areDatesInNeighborView(zoomLevel, dateForward, baseDate);\r\n            isDateForwardInRange = (0, _math.inRange)(dateForward, minDate, maxDate) && isDateForwardInNeighborView\r\n        }\r\n        if (this._view.isDateDisabled(baseDate) || this._view.isDateDisabled(currentDate)) {\r\n            this._waitRenderView(offset > 0 ? 1 : -1)\r\n        } else {\r\n            this.option(\"currentDate\", currentDate)\r\n        }\r\n    },\r\n    _areDatesInSameView: function(zoomLevel, date1, date2) {\r\n        switch (zoomLevel) {\r\n            case ZOOM_LEVEL.MONTH:\r\n                return date1.getMonth() === date2.getMonth();\r\n            case ZOOM_LEVEL.YEAR:\r\n                return date1.getYear() === date2.getYear();\r\n            case ZOOM_LEVEL.DECADE:\r\n                return parseInt(date1.getYear() / 10) === parseInt(date2.getYear() / 10);\r\n            case ZOOM_LEVEL.CENTURY:\r\n                return parseInt(date1.getYear() / 100) === parseInt(date2.getYear() / 100)\r\n        }\r\n    },\r\n    _areDatesInNeighborView: function(zoomLevel, date1, date2) {\r\n        var monthMinDistance = function(a, b) {\r\n            var abs = Math.abs(a - b);\r\n            return Math.min(abs, 12 - abs)\r\n        };\r\n        switch (zoomLevel) {\r\n            case ZOOM_LEVEL.MONTH:\r\n                return monthMinDistance(date1.getMonth(), date2.getMonth()) <= 1;\r\n            case ZOOM_LEVEL.YEAR:\r\n                return Math.abs(date1.getYear() - date2.getYear()) <= 1;\r\n            case ZOOM_LEVEL.DECADE:\r\n                return Math.abs(date1.getYear() - date2.getYear()) <= 10;\r\n            case ZOOM_LEVEL.CENTURY:\r\n                return Math.abs(date1.getYear() - date2.getYear()) <= 100\r\n        }\r\n    },\r\n    _moveToClosestAvailableDate: function() {\r\n        var baseDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.option(\"currentDate\");\r\n        var currentDate = _date2.default.createDate(baseDate);\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var isCurrentDateAvailable = !this._isDateNotAvailable(currentDate);\r\n        var isDateForwardAvailable = isCurrentDateAvailable;\r\n        var isDateBackwardAvailable = isCurrentDateAvailable;\r\n        var isDateForwardInStartView;\r\n        var isDateBackwardInStartView;\r\n        var dateForward = _date2.default.createDate(currentDate);\r\n        var dateBackward = _date2.default.createDate(currentDate);\r\n        do {\r\n            if (isDateForwardAvailable) {\r\n                currentDate = dateForward;\r\n                break\r\n            }\r\n            if (isDateBackwardAvailable) {\r\n                currentDate = dateBackward;\r\n                break\r\n            }\r\n            this._shiftDate(zoomLevel, dateForward, 1, 1);\r\n            this._shiftDate(zoomLevel, dateBackward, 1, -1);\r\n            isDateForwardInStartView = this._areDatesInSameView(zoomLevel, dateForward, baseDate);\r\n            isDateBackwardInStartView = this._areDatesInSameView(zoomLevel, dateBackward, baseDate);\r\n            isDateForwardAvailable = isDateForwardInStartView && !this._isDateNotAvailable(dateForward);\r\n            isDateBackwardAvailable = isDateBackwardInStartView && !this._isDateNotAvailable(dateBackward)\r\n        } while (isDateForwardInStartView || isDateBackwardInStartView);\r\n        this.option(\"currentDate\", currentDate)\r\n    },\r\n    _isDateNotAvailable: function(date) {\r\n        var maxDate = this._getMaxDate();\r\n        var minDate = this._getMinDate();\r\n        return !(0, _math.inRange)(date, minDate, maxDate) || this._view.isDateDisabled(date)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._correctZoomLevel();\r\n        this._initCurrentDate();\r\n        this._initActions()\r\n    },\r\n    _correctZoomLevel: function() {\r\n        var minZoomLevel = this.option(\"minZoomLevel\");\r\n        var maxZoomLevel = this.option(\"maxZoomLevel\");\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (LEVEL_COMPARE_MAP[maxZoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\r\n            return\r\n        }\r\n        if (LEVEL_COMPARE_MAP[zoomLevel] > LEVEL_COMPARE_MAP[maxZoomLevel]) {\r\n            this.option(\"zoomLevel\", maxZoomLevel)\r\n        } else {\r\n            if (LEVEL_COMPARE_MAP[zoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\r\n                this.option(\"zoomLevel\", minZoomLevel)\r\n            }\r\n        }\r\n    },\r\n    _initCurrentDate: function() {\r\n        var currentDate = this._getNormalizedDate(this._dateOption(\"value\")) || this._getNormalizedDate(this.option(\"currentDate\"));\r\n        this.option(\"currentDate\", currentDate)\r\n    },\r\n    _getNormalizedDate: function(date) {\r\n        date = _date2.default.normalizeDate(date, this._getMinDate(), this._getMaxDate());\r\n        return (0, _type.isDefined)(date) ? this._getDate(date) : date\r\n    },\r\n    _initActions: function() {\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\");\r\n        this._onContouredChanged = this._createActionByOption(\"onContouredChanged\")\r\n    },\r\n    _initTemplates: function() {\r\n        this._templateManager.addDefaultTemplates({\r\n            cell: new _function_template.FunctionTemplate(function(options) {\r\n                var data = options.model;\r\n                (0, _renderer.default)(options.container).append((0, _renderer.default)(\"<span>\").text(data && data.text || String(data)))\r\n            })\r\n        });\r\n        this.callBase()\r\n    },\r\n    _updateCurrentDate: function(date) {\r\n        if (_fx.default.isAnimating(this._$viewsWrapper)) {\r\n            _fx.default.stop(this._$viewsWrapper, true)\r\n        }\r\n        var min = this._getMinDate();\r\n        var max = this._getMaxDate();\r\n        if (min > max) {\r\n            this.option(\"currentDate\", new Date);\r\n            return\r\n        }\r\n        var normalizedDate = this._getNormalizedDate(date);\r\n        if (date.getTime() !== normalizedDate.getTime()) {\r\n            this.option(\"currentDate\", _date2.default.createDate(normalizedDate));\r\n            return\r\n        }\r\n        var offset = this._getViewsOffset(this._view.option(\"date\"), normalizedDate);\r\n        if (0 !== offset && !this._isMaxZoomLevel() && this._isOtherViewCellClicked) {\r\n            offset = 0\r\n        }\r\n        if (this._view && 0 !== offset && !this._suppressNavigation) {\r\n            this._navigate(offset, normalizedDate)\r\n        } else {\r\n            this._renderNavigator();\r\n            this._setViewContoured(normalizedDate);\r\n            this._updateAriaId(normalizedDate)\r\n        }\r\n    },\r\n    _setViewContoured: function(date) {\r\n        if (this.option(\"hasFocus\")(this._focusTarget())) {\r\n            this._view.option(\"contouredDate\", date)\r\n        }\r\n    },\r\n    _getMinDate: function() {\r\n        if (this.min) {\r\n            return this.min\r\n        }\r\n        this.min = this._dateOption(\"min\") || new Date(1e3, 0);\r\n        return this.min\r\n    },\r\n    _getMaxDate: function() {\r\n        if (this.max) {\r\n            return this.max\r\n        }\r\n        this.max = this._dateOption(\"max\") || new Date(3e3, 0);\r\n        return this.max\r\n    },\r\n    _getViewsOffset: function(startDate, endDate) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (zoomLevel === ZOOM_LEVEL.MONTH) {\r\n            return this._getMonthsOffset(startDate, endDate)\r\n        }\r\n        var zoomCorrection;\r\n        switch (zoomLevel) {\r\n            case ZOOM_LEVEL.CENTURY:\r\n                zoomCorrection = 100;\r\n                break;\r\n            case ZOOM_LEVEL.DECADE:\r\n                zoomCorrection = 10;\r\n                break;\r\n            default:\r\n                zoomCorrection = 1\r\n        }\r\n        return parseInt(endDate.getFullYear() / zoomCorrection) - parseInt(startDate.getFullYear() / zoomCorrection)\r\n    },\r\n    _getMonthsOffset: function(startDate, endDate) {\r\n        var yearOffset = endDate.getFullYear() - startDate.getFullYear();\r\n        var monthOffset = endDate.getMonth() - startDate.getMonth();\r\n        return 12 * yearOffset + monthOffset\r\n    },\r\n    _waitRenderView: function(offset) {\r\n        var _this = this;\r\n        if (this._alreadyViewRender) {\r\n            return\r\n        }\r\n        this._alreadyViewRender = true;\r\n        var date = this._getDateByOffset(offset * this._getRtlCorrection());\r\n        this._moveToClosestAvailableDate(date);\r\n        this._waitRenderViewTimeout = setTimeout(function() {\r\n            _this._alreadyViewRender = false\r\n        })\r\n    },\r\n    _getRtlCorrection: function() {\r\n        return this.option(\"rtlEnabled\") ? -1 : 1\r\n    },\r\n    _getDateByOffset: function(offset, date) {\r\n        var _date;\r\n        date = this._getDate(null !== (_date = date) && void 0 !== _date ? _date : this.option(\"currentDate\"));\r\n        var currentDay = date.getDate();\r\n        var difference = _date2.default.getDifferenceInMonth(this.option(\"zoomLevel\")) * offset;\r\n        date.setDate(1);\r\n        date.setMonth(date.getMonth() + difference);\r\n        var lastDay = _date2.default.getLastMonthDate(date).getDate();\r\n        date.setDate(currentDay > lastDay ? lastDay : currentDay);\r\n        return date\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.callBase();\r\n        var $element = this.$element();\r\n        $element.addClass(CALENDAR_CLASS);\r\n        this._renderBody();\r\n        $element.append(this.$body);\r\n        this._renderViews();\r\n        this._renderNavigator();\r\n        $element.append(this._navigator.$element());\r\n        this._renderSwipeable();\r\n        this._renderFooter();\r\n        this._updateAriaSelected();\r\n        this._updateAriaId();\r\n        this._moveToClosestAvailableDate()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._setViewContoured(this.option(\"currentDate\"))\r\n    },\r\n    _renderBody: function() {\r\n        if (!this._$viewsWrapper) {\r\n            this.$body = (0, _renderer.default)(\"<div>\").addClass(CALENDAR_BODY_CLASS);\r\n            this._$viewsWrapper = (0, _renderer.default)(\"<div>\").addClass(CALENDAR_VIEWS_WRAPPER_CLASS);\r\n            this.$body.append(this._$viewsWrapper)\r\n        }\r\n    },\r\n    _getKeyboardListeners: function() {\r\n        return this.callBase().concat([this._view])\r\n    },\r\n    _renderViews: function() {\r\n        this.$element().addClass(CALENDAR_VIEW_CLASS + \"-\" + this.option(\"zoomLevel\"));\r\n        var currentDate = this.option(\"currentDate\");\r\n        this._view = this._renderSpecificView(currentDate);\r\n        if ((0, _window.hasWindow)()) {\r\n            var beforeDate = this._getDateByOffset(-1, currentDate);\r\n            this._beforeView = this._isViewAvailable(beforeDate) ? this._renderSpecificView(beforeDate) : null;\r\n            var afterDate = this._getDateByOffset(1, currentDate);\r\n            afterDate.setDate(1);\r\n            this._afterView = this._isViewAvailable(afterDate) ? this._renderSpecificView(afterDate) : null\r\n        }\r\n        this._translateViews()\r\n    },\r\n    _renderSpecificView: function(date) {\r\n        var specificView = _uiCalendar2.default[this.option(\"zoomLevel\")];\r\n        var $view = (0, _renderer.default)(\"<div>\").appendTo(this._$viewsWrapper);\r\n        var config = this._viewConfig(date);\r\n        return this._createComponent($view, specificView, config)\r\n    },\r\n    _viewConfig: function(date) {\r\n        var disabledDates = this.option(\"disabledDates\");\r\n        disabledDates = (0, _type.isFunction)(disabledDates) ? this._injectComponent(disabledDates.bind(this)) : disabledDates;\r\n        return {\r\n            date: date,\r\n            min: this._getMinDate(),\r\n            max: this._getMaxDate(),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            value: this._dateOption(\"value\"),\r\n            tabIndex: void 0,\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            disabledDates: disabledDates,\r\n            onCellClick: this._cellClickHandler.bind(this),\r\n            cellTemplate: this._getTemplateByOption(\"cellTemplate\"),\r\n            allowValueSelection: this._isMaxZoomLevel(),\r\n            _todayDate: this.option(\"_todayDate\")\r\n        }\r\n    },\r\n    _injectComponent: function(func) {\r\n        var that = this;\r\n        return function(params) {\r\n            (0, _extend.extend)(params, {\r\n                component: that\r\n            });\r\n            return func(params)\r\n        }\r\n    },\r\n    _isViewAvailable: function(date) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var min = _date2.default.getViewMinBoundaryDate(zoomLevel, this._getMinDate());\r\n        var max = _date2.default.getViewMaxBoundaryDate(zoomLevel, this._getMaxDate());\r\n        return _date2.default.dateInRange(date, min, max)\r\n    },\r\n    _translateViews: function() {\r\n        (0, _translator.move)(this._view.$element(), {\r\n            left: 0,\r\n            top: 0\r\n        });\r\n        this._beforeView && (0, _translator.move)(this._beforeView.$element(), {\r\n            left: this._getViewPosition(-1),\r\n            top: 0\r\n        });\r\n        this._afterView && (0, _translator.move)(this._afterView.$element(), {\r\n            left: this._getViewPosition(1),\r\n            top: 0\r\n        })\r\n    },\r\n    _getViewPosition: function(coefficient) {\r\n        var rtlCorrection = this.option(\"rtlEnabled\") && !_browser.default.msie ? -1 : 1;\r\n        return 100 * coefficient * rtlCorrection + \"%\"\r\n    },\r\n    _cellClickHandler: function(e) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var nextView = _date2.default.getViewDown(zoomLevel);\r\n        var isMaxZoomLevel = this._isMaxZoomLevel();\r\n        if (nextView && !isMaxZoomLevel) {\r\n            this._navigateDown(e.event.currentTarget)\r\n        } else {\r\n            var newValue = this._updateTimeComponent(e.value);\r\n            this._dateValue(newValue, e.event);\r\n            this._cellClickAction(e)\r\n        }\r\n    },\r\n    _updateTimeComponent: function(date) {\r\n        var result = _date2.default.createDate(date);\r\n        var currentValue = this._dateOption(\"value\");\r\n        if (currentValue) {\r\n            result.setHours(currentValue.getHours());\r\n            result.setMinutes(currentValue.getMinutes());\r\n            result.setSeconds(currentValue.getSeconds());\r\n            result.setMilliseconds(currentValue.getMilliseconds())\r\n        }\r\n        return result\r\n    },\r\n    _isMaxZoomLevel: function() {\r\n        return this.option(\"zoomLevel\") === this.option(\"maxZoomLevel\")\r\n    },\r\n    _navigateDown: function(cell) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (this._isMaxZoomLevel()) {\r\n            return\r\n        }\r\n        var nextView = _date2.default.getViewDown(zoomLevel);\r\n        if (!nextView) {\r\n            return\r\n        }\r\n        var newCurrentDate = this._view.option(\"contouredDate\") || this._view.option(\"date\");\r\n        if (cell) {\r\n            newCurrentDate = (0, _renderer.default)(cell).data(CALENDAR_DATE_VALUE_KEY)\r\n        }\r\n        this._isOtherViewCellClicked = true;\r\n        this.option(\"currentDate\", newCurrentDate);\r\n        this.option(\"zoomLevel\", nextView);\r\n        this._isOtherViewCellClicked = false;\r\n        this._renderNavigator();\r\n        this._animateShowView();\r\n        this._moveToClosestAvailableDate();\r\n        this._setViewContoured(this._getNormalizedDate(this.option(\"currentDate\")))\r\n    },\r\n    _renderNavigator: function() {\r\n        if (!this._navigator) {\r\n            this._navigator = new _uiCalendar.default((0, _renderer.default)(\"<div>\"), this._navigatorConfig())\r\n        }\r\n        this._navigator.option(\"text\", this._view.getNavigatorCaption());\r\n        this._updateButtonsVisibility()\r\n    },\r\n    _navigatorConfig: function() {\r\n        return {\r\n            text: this._view.getNavigatorCaption(),\r\n            onClick: this._navigatorClickHandler.bind(this),\r\n            onCaptionClick: this._navigateUp.bind(this),\r\n            rtlEnabled: this.option(\"rtlEnabled\")\r\n        }\r\n    },\r\n    _navigatorClickHandler: function(e) {\r\n        var currentDate = this._getDateByOffset(e.direction, this.option(\"currentDate\"));\r\n        this._moveToClosestAvailableDate(currentDate)\r\n    },\r\n    _navigateUp: function() {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var nextView = _date2.default.getViewUp(zoomLevel);\r\n        if (!nextView || this._isMinZoomLevel(zoomLevel)) {\r\n            return\r\n        }\r\n        this.option(\"zoomLevel\", nextView);\r\n        this._renderNavigator();\r\n        this._animateShowView();\r\n        this._moveToClosestAvailableDate();\r\n        this._setViewContoured(this._getNormalizedDate(this.option(\"currentDate\")))\r\n    },\r\n    _isMinZoomLevel: function(zoomLevel) {\r\n        var min = this._getMinDate();\r\n        var max = this._getMaxDate();\r\n        return _date2.default.sameView(zoomLevel, min, max) || this.option(\"minZoomLevel\") === zoomLevel\r\n    },\r\n    _updateButtonsVisibility: function() {\r\n        this._navigator.toggleButton(\"next\", !(0, _type.isDefined)(this._getRequiredView(\"next\")));\r\n        this._navigator.toggleButton(\"prev\", !(0, _type.isDefined)(this._getRequiredView(\"prev\")))\r\n    },\r\n    _renderSwipeable: function() {\r\n        if (!this._swipeable) {\r\n            this._swipeable = this._createComponent(this.$element(), _swipeable.default, {\r\n                onStart: this._swipeStartHandler.bind(this),\r\n                onUpdated: this._swipeUpdateHandler.bind(this),\r\n                onEnd: this._swipeEndHandler.bind(this),\r\n                itemSizeFunc: this._viewWidth.bind(this)\r\n            })\r\n        }\r\n    },\r\n    _swipeStartHandler: function(e) {\r\n        _fx.default.stop(this._$viewsWrapper, true);\r\n        e.event.maxLeftOffset = this._getRequiredView(\"next\") ? 1 : 0;\r\n        e.event.maxRightOffset = this._getRequiredView(\"prev\") ? 1 : 0\r\n    },\r\n    _getRequiredView: function(name) {\r\n        var view;\r\n        var isRtl = this.option(\"rtlEnabled\");\r\n        if (\"next\" === name) {\r\n            view = isRtl ? this._beforeView : this._afterView\r\n        } else {\r\n            if (\"prev\" === name) {\r\n                view = isRtl ? this._afterView : this._beforeView\r\n            }\r\n        }\r\n        return view\r\n    },\r\n    _swipeUpdateHandler: function(e) {\r\n        var offset = e.event.offset;\r\n        (0, _translator.move)(this._$viewsWrapper, {\r\n            left: offset * this._viewWidth(),\r\n            top: 0\r\n        });\r\n        this._updateNavigatorCaption(offset)\r\n    },\r\n    _swipeEndHandler: function(e) {\r\n        var targetOffset = e.event.targetOffset;\r\n        var moveOffset = !targetOffset ? 0 : targetOffset / Math.abs(targetOffset);\r\n        if (0 === moveOffset) {\r\n            this._animateWrapper(0, ANIMATION_DURATION_SHOW_VIEW);\r\n            return\r\n        }\r\n        var date = this._getDateByOffset(-moveOffset * this._getRtlCorrection());\r\n        if (this._isDateInInvalidRange(date)) {\r\n            if (moveOffset >= 0) {\r\n                date = new Date(this._getMinDate())\r\n            } else {\r\n                date = new Date(this._getMaxDate())\r\n            }\r\n        }\r\n        this.option(\"currentDate\", date)\r\n    },\r\n    _viewWidth: function() {\r\n        if (!this._viewWidthValue) {\r\n            this._viewWidthValue = this.$element().width()\r\n        }\r\n        return this._viewWidthValue\r\n    },\r\n    _updateNavigatorCaption: function(offset) {\r\n        offset *= this._getRtlCorrection();\r\n        var view = this._view;\r\n        if (offset > .5 && this._beforeView) {\r\n            view = this._beforeView\r\n        } else {\r\n            if (offset < -.5 && this._afterView) {\r\n                view = this._afterView\r\n            }\r\n        }\r\n        this._navigator.option(\"text\", view.getNavigatorCaption())\r\n    },\r\n    _isDateInInvalidRange: function(date) {\r\n        if (this._view.isBoundary(date)) {\r\n            return\r\n        }\r\n        var min = this._getMinDate();\r\n        var max = this._getMaxDate();\r\n        var normalizedDate = _date2.default.normalizeDate(date, min, max);\r\n        return normalizedDate === min || normalizedDate === max\r\n    },\r\n    _renderFooter: function() {\r\n        var showTodayButton = this.option(\"showTodayButton\");\r\n        if (showTodayButton) {\r\n            var $todayButton = this._createComponent((0, _renderer.default)(\"<a>\"), _button.default, {\r\n                focusStateEnabled: false,\r\n                text: _message.default.format(\"dxCalendar-todayButtonText\"),\r\n                onClick: function(args) {\r\n                    this._toTodayView(args)\r\n                }.bind(this),\r\n                integrationOptions: {}\r\n            }).$element().addClass(CALENDAR_TODAY_BUTTON_CLASS);\r\n            this._$footer = (0, _renderer.default)(\"<div>\").addClass(CALENDAR_FOOTER_CLASS).append($todayButton);\r\n            this.$element().append(this._$footer)\r\n        }\r\n        this.$element().toggleClass(CALENDAR_HAS_FOOTER_CLASS, showTodayButton)\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = (0, _renderer.default)(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        var dateValue = this._convertToDate(value);\r\n        this._getSubmitElement().val(_date_serialization.default.serializeDate(dateValue, CALENDAR_INPUT_STANDARD_PATTERN))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _animateShowView: function() {\r\n        _fx.default.stop(this._view.$element(), true);\r\n        return this._popAnimationView(this._view, POP_ANIMATION_FROM, POP_ANIMATION_TO, ANIMATION_DURATION_SHOW_VIEW).promise()\r\n    },\r\n    _popAnimationView: function(view, from, to, duration) {\r\n        return _fx.default.animate(view.$element(), {\r\n            type: \"pop\",\r\n            from: {\r\n                scale: from,\r\n                opacity: from\r\n            },\r\n            to: {\r\n                scale: to,\r\n                opacity: to\r\n            },\r\n            duration: duration\r\n        })\r\n    },\r\n    _navigate: function(offset, value) {\r\n        if (0 !== offset && 1 !== Math.abs(offset) && this._isViewAvailable(value)) {\r\n            var newView = this._renderSpecificView(value);\r\n            if (offset > 0) {\r\n                this._afterView && this._afterView.$element().remove();\r\n                this._afterView = newView\r\n            } else {\r\n                this._beforeView && this._beforeView.$element().remove();\r\n                this._beforeView = newView\r\n            }\r\n            this._translateViews()\r\n        }\r\n        var rtlCorrection = this._getRtlCorrection();\r\n        var offsetSign = offset > 0 ? 1 : offset < 0 ? -1 : 0;\r\n        var endPosition = -rtlCorrection * offsetSign * this._viewWidth();\r\n        var viewsWrapperPosition = this._$viewsWrapper.position().left;\r\n        if (viewsWrapperPosition !== endPosition) {\r\n            if (this._preventViewChangeAnimation) {\r\n                this._wrapperAnimationEndHandler(offset, value)\r\n            } else {\r\n                this._animateWrapper(endPosition, ANIMATION_DURATION_SHOW_VIEW).done(this._wrapperAnimationEndHandler.bind(this, offset, value))\r\n            }\r\n        }\r\n    },\r\n    _animateWrapper: function(to, duration) {\r\n        return _fx.default.animate(this._$viewsWrapper, {\r\n            type: \"slide\",\r\n            from: {\r\n                left: this._$viewsWrapper.position().left\r\n            },\r\n            to: {\r\n                left: to\r\n            },\r\n            duration: duration\r\n        })\r\n    },\r\n    _getDate: function(value) {\r\n        var result = _date2.default.createDate(value);\r\n        if (isIE11 && (0, _type.isDate)(value)) {\r\n            result.setMilliseconds(0)\r\n        }\r\n        return result\r\n    },\r\n    _toTodayView: function(args) {\r\n        this._saveValueChangeEvent(args.event);\r\n        var today = new Date;\r\n        if (this._isMaxZoomLevel()) {\r\n            this._dateOption(\"value\", today);\r\n            return\r\n        }\r\n        this._preventViewChangeAnimation = true;\r\n        this.option(\"zoomLevel\", this.option(\"maxZoomLevel\"));\r\n        this._dateOption(\"value\", today);\r\n        this._animateShowView();\r\n        this._preventViewChangeAnimation = false\r\n    },\r\n    _wrapperAnimationEndHandler: function(offset, newDate) {\r\n        this._rearrangeViews(offset);\r\n        this._translateViews();\r\n        this._resetLocation();\r\n        this._renderNavigator();\r\n        this._setViewContoured(newDate);\r\n        this._updateAriaId(newDate)\r\n    },\r\n    _rearrangeViews: function(offset) {\r\n        if (0 === offset) {\r\n            return\r\n        }\r\n        var viewOffset;\r\n        var viewToCreateKey;\r\n        var viewToRemoveKey;\r\n        if (offset < 0) {\r\n            viewOffset = 1;\r\n            viewToCreateKey = \"_beforeView\";\r\n            viewToRemoveKey = \"_afterView\"\r\n        } else {\r\n            viewOffset = -1;\r\n            viewToCreateKey = \"_afterView\";\r\n            viewToRemoveKey = \"_beforeView\"\r\n        }\r\n        if (!this[viewToCreateKey]) {\r\n            return\r\n        }\r\n        var destinationDate = this[viewToCreateKey].option(\"date\");\r\n        if (this[viewToRemoveKey]) {\r\n            this[viewToRemoveKey].$element().remove()\r\n        }\r\n        if (offset === viewOffset) {\r\n            this[viewToRemoveKey] = this._view\r\n        } else {\r\n            this[viewToRemoveKey] = this._renderSpecificView(this._getDateByOffset(viewOffset, destinationDate));\r\n            this._view.$element().remove()\r\n        }\r\n        this._view = this[viewToCreateKey];\r\n        var dateByOffset = this._getDateByOffset(-viewOffset, destinationDate);\r\n        this[viewToCreateKey] = this._isViewAvailable(dateByOffset) ? this._renderSpecificView(dateByOffset) : null\r\n    },\r\n    _resetLocation: function() {\r\n        (0, _translator.move)(this._$viewsWrapper, {\r\n            left: 0,\r\n            top: 0\r\n        })\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._clearViewWidthCache();\r\n        delete this._$viewsWrapper;\r\n        delete this._navigator;\r\n        delete this._$footer\r\n    },\r\n    _clearViewWidthCache: function() {\r\n        delete this._viewWidthValue\r\n    },\r\n    _disposeViews: function() {\r\n        this._view.$element().remove();\r\n        this._beforeView && this._beforeView.$element().remove();\r\n        this._afterView && this._afterView.$element().remove();\r\n        delete this._view;\r\n        delete this._beforeView;\r\n        delete this._afterView\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._waitRenderViewTimeout);\r\n        this.callBase()\r\n    },\r\n    _refreshViews: function() {\r\n        this._disposeViews();\r\n        this._renderViews()\r\n    },\r\n    _visibilityChanged: function() {\r\n        this._translateViews()\r\n    },\r\n    _focusInHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._view.option(\"contouredDate\", this.option(\"currentDate\"))\r\n    },\r\n    _focusOutHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._view.option(\"contouredDate\", null)\r\n    },\r\n    _updateViewsValue: function(value) {\r\n        var newValue = value ? new Date(value) : null;\r\n        this._view.option(\"value\", newValue);\r\n        this._beforeView && this._beforeView.option(\"value\", newValue);\r\n        this._afterView && this._afterView.option(\"value\", newValue)\r\n    },\r\n    _updateAriaSelected: function(value, previousValue) {\r\n        var _value;\r\n        value = null !== (_value = value) && void 0 !== _value ? _value : this._dateOption(\"value\");\r\n        var $prevSelectedCell = this._view._getCellByDate(previousValue);\r\n        var $selectedCell = this._view._getCellByDate(value);\r\n        this.setAria(\"selected\", void 0, $prevSelectedCell);\r\n        this.setAria(\"selected\", true, $selectedCell);\r\n        if (value && this.option(\"currentDate\").getTime() === value.getTime()) {\r\n            this._updateAriaId(value)\r\n        }\r\n    },\r\n    _updateAriaId: function(value) {\r\n        var _value2;\r\n        value = null !== (_value2 = value) && void 0 !== _value2 ? _value2 : this.option(\"currentDate\");\r\n        var ariaId = \"dx-\" + new _guid.default;\r\n        var $newCell = this._view._getCellByDate(value);\r\n        this.setAria(\"id\", ariaId, $newCell);\r\n        this.setAria(\"activedescendant\", ariaId);\r\n        this._onContouredChanged(ariaId)\r\n    },\r\n    _suppressingNavigation: function(callback, args) {\r\n        this._suppressNavigation = true;\r\n        callback.apply(this, args);\r\n        delete this._suppressNavigation\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        var previousValue = args.previousValue;\r\n        switch (args.name) {\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._clearViewWidthCache();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this.min = void 0;\r\n                this.max = void 0;\r\n                this._suppressingNavigation(this._updateCurrentDate, [this.option(\"currentDate\")]);\r\n                this._refreshViews();\r\n                this._renderNavigator();\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._refreshViews();\r\n                this._updateButtonsVisibility();\r\n                break;\r\n            case \"currentDate\":\r\n                this.setAria(\"id\", void 0, this._view._getCellByDate(previousValue));\r\n                this._updateCurrentDate(value);\r\n                break;\r\n            case \"zoomLevel\":\r\n                this.$element().removeClass(CALENDAR_VIEW_CLASS + \"-\" + previousValue);\r\n                this._correctZoomLevel();\r\n                this._refreshViews();\r\n                this._renderNavigator();\r\n                this._updateAriaId();\r\n                break;\r\n            case \"minZoomLevel\":\r\n            case \"maxZoomLevel\":\r\n                this._correctZoomLevel();\r\n                this._updateButtonsVisibility();\r\n                break;\r\n            case \"value\":\r\n                value = this._convertToDate(value);\r\n                previousValue = this._convertToDate(previousValue);\r\n                this._updateAriaSelected(value, previousValue);\r\n                this.option(\"currentDate\", (0, _type.isDefined)(value) ? _date2.default.createDate(value) : new Date);\r\n                this._updateViewsValue(value);\r\n                this._setSubmitValue(value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"onCellClick\":\r\n                this._view.option(\"onCellClick\", value);\r\n                break;\r\n            case \"onContouredChanged\":\r\n                this._onContouredChanged = this._createActionByOption(\"onContouredChanged\");\r\n                break;\r\n            case \"disabledDates\":\r\n            case \"dateSerializationFormat\":\r\n            case \"cellTemplate\":\r\n            case \"showTodayButton\":\r\n                this._invalidate();\r\n                break;\r\n            case \"hasFocus\":\r\n                break;\r\n            case \"_todayDate\":\r\n                this._refreshViews();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getContouredDate: function() {\r\n        return this._view.option(\"contouredDate\")\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxCalendar\", Calendar);\r\nvar _default = Calendar;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/calendar/ui.calendar.navigator.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CALENDAR_NAVIGATOR_CLASS = \"dx-calendar-navigator\";\r\nvar CALENDAR_NAVIGATOR_PREVIOUS_MONTH_CLASS = \"dx-calendar-navigator-previous-month\";\r\nvar CALENDAR_NAVIGATOR_NEXT_MONTH_CLASS = \"dx-calendar-navigator-next-month\";\r\nvar CALENDAR_NAVIGATOR_PREVIOUS_VIEW_CLASS = \"dx-calendar-navigator-previous-view\";\r\nvar CALENDAR_NAVIGATOR_NEXT_VIEW_CLASS = \"dx-calendar-navigator-next-view\";\r\nvar CALENDAR_NAVIGATOR_DISABLED_LINK_CLASS = \"dx-calendar-disabled-navigator-link\";\r\nvar CALENDAR_NAVIGATOR_CAPTION_BUTTON_CLASS = \"dx-calendar-caption-button\";\r\nvar Navigator = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            onClick: null,\r\n            onCaptionClick: null,\r\n            text: \"\"\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initActions()\r\n    },\r\n    _initActions: function() {\r\n        this._clickAction = this._createActionByOption(\"onClick\");\r\n        this._captionClickAction = this._createActionByOption(\"onCaptionClick\")\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(CALENDAR_NAVIGATOR_CLASS);\r\n        this._renderButtons();\r\n        this._renderCaption()\r\n    },\r\n    _renderButtons: function() {\r\n        var that = this;\r\n        var direction = this.option(\"rtlEnabled\") ? -1 : 1;\r\n        this._prevButton = this._createComponent((0, _renderer.default)(\"<a>\"), _button.default, {\r\n            focusStateEnabled: false,\r\n            icon: \"chevronleft\",\r\n            onClick: function(e) {\r\n                that._clickAction({\r\n                    direction: -direction,\r\n                    event: e\r\n                })\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $prevButton = this._prevButton.$element().addClass(CALENDAR_NAVIGATOR_PREVIOUS_VIEW_CLASS).addClass(CALENDAR_NAVIGATOR_PREVIOUS_MONTH_CLASS);\r\n        this._nextButton = this._createComponent((0, _renderer.default)(\"<a>\"), _button.default, {\r\n            focusStateEnabled: false,\r\n            icon: \"chevronright\",\r\n            onClick: function(e) {\r\n                that._clickAction({\r\n                    direction: direction,\r\n                    event: e\r\n                })\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $nextButton = this._nextButton.$element().addClass(CALENDAR_NAVIGATOR_NEXT_VIEW_CLASS).addClass(CALENDAR_NAVIGATOR_NEXT_MONTH_CLASS);\r\n        this._caption = this._createComponent((0, _renderer.default)(\"<a>\").addClass(CALENDAR_NAVIGATOR_CAPTION_BUTTON_CLASS), _button.default, {\r\n            focusStateEnabled: false,\r\n            onClick: function(e) {\r\n                that._captionClickAction({\r\n                    event: e\r\n                })\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $caption = this._caption.$element();\r\n        this.$element().append($prevButton, $caption, $nextButton)\r\n    },\r\n    _renderCaption: function() {\r\n        this._caption.option(\"text\", this.option(\"text\"))\r\n    },\r\n    toggleButton: function(buttonPrefix, value) {\r\n        var buttonName = \"_\" + buttonPrefix + \"Button\";\r\n        var button = this[buttonName];\r\n        if (button) {\r\n            button.option(\"disabled\", value);\r\n            button.$element().toggleClass(CALENDAR_NAVIGATOR_DISABLED_LINK_CLASS, value)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"text\":\r\n                this._renderCaption();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = Navigator;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/calendar/ui.calendar.views.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _uiCalendar = _interopRequireDefault(require(\"./ui.calendar.base_view\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _date2 = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CALENDAR_OTHER_MONTH_CLASS = \"dx-calendar-other-month\";\r\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\r\nvar Views = {\r\n    month: _uiCalendar.default.inherit({\r\n        _getViewName: function() {\r\n            return \"month\"\r\n        },\r\n        _getDefaultOptions: function() {\r\n            return (0, _extend.extend)(this.callBase(), {\r\n                firstDayOfWeek: void 0,\r\n                rowCount: 6,\r\n                colCount: 7\r\n            })\r\n        },\r\n        _renderImpl: function() {\r\n            this.callBase();\r\n            this._renderHeader()\r\n        },\r\n        _renderBody: function() {\r\n            this.callBase();\r\n            this._$table.find(\".\".concat(CALENDAR_OTHER_VIEW_CLASS)).addClass(CALENDAR_OTHER_MONTH_CLASS)\r\n        },\r\n        _renderFocusTarget: _common.noop,\r\n        getCellAriaLabel: function(date) {\r\n            return _date2.default.format(date, \"longdate\")\r\n        },\r\n        _renderHeader: function() {\r\n            var $headerRow = (0, _renderer.default)(\"<tr>\");\r\n            var $header = (0, _renderer.default)(\"<thead>\").append($headerRow);\r\n            this._$table.prepend($header);\r\n            for (var colIndex = 0, colCount = this.option(\"colCount\"); colIndex < colCount; colIndex++) {\r\n                this._renderHeaderCell(colIndex, $headerRow)\r\n            }\r\n        },\r\n        _renderHeaderCell: function(cellIndex, $headerRow) {\r\n            var _this$_getDayCaption = this._getDayCaption(this._getFirstDayOfWeek() + cellIndex),\r\n                fullCaption = _this$_getDayCaption.full,\r\n                abbrCaption = _this$_getDayCaption.abbreviated;\r\n            var $cell = (0, _renderer.default)(\"<th>\").attr({\r\n                scope: \"col\",\r\n                abbr: fullCaption\r\n            }).text(abbrCaption);\r\n            this._appendCell($headerRow, $cell)\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return _date2.default.format(this.option(\"date\"), \"monthandyear\")\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = this.option(\"_todayDate\")();\r\n            return _date.default.sameDate(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var minDate = this.option(\"min\");\r\n            var maxDate = this.option(\"max\");\r\n            return !_date.default.dateInRange(cellDate, minDate, maxDate, \"date\")\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            return cellDate.getMonth() !== this.option(\"date\").getMonth()\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return _date2.default.format(cellDate, \"d\")\r\n        },\r\n        _getDayCaption: function(day) {\r\n            var daysInWeek = this.option(\"colCount\");\r\n            var dayIndex = day % daysInWeek;\r\n            return {\r\n                full: _date2.default.getDayNames()[dayIndex],\r\n                abbreviated: _date2.default.getDayNames(\"abbreviated\")[dayIndex]\r\n            }\r\n        },\r\n        _getFirstCellData: function() {\r\n            var firstDay = _date.default.getFirstMonthDate(this.option(\"date\"));\r\n            var firstMonthDayOffset = this._getFirstDayOfWeek() - firstDay.getDay();\r\n            var daysInWeek = this.option(\"colCount\");\r\n            if (firstMonthDayOffset >= 0) {\r\n                firstMonthDayOffset -= daysInWeek\r\n            }\r\n            firstDay.setDate(firstDay.getDate() + firstMonthDayOffset);\r\n            return firstDay\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = _date.default.createDate(date);\r\n            date.setDate(date.getDate() + 1);\r\n            return date\r\n        },\r\n        _getFirstDayOfWeek: function() {\r\n            return (0, _type.isDefined)(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : _date2.default.firstDayOfWeekIndex()\r\n        },\r\n        _getCellByDate: function(date) {\r\n            return this._$table.find(\"td[data-value='\".concat(_date_serialization.default.serializeDate(date, _date.default.getShortDateFormat()), \"']\"))\r\n        },\r\n        isBoundary: function(date) {\r\n            return _date.default.sameMonthAndYear(date, this.option(\"min\")) || _date.default.sameMonthAndYear(date, this.option(\"max\"))\r\n        },\r\n        _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n            return function(args) {\r\n                var isDisabledDate = disabledDates.some(function(item) {\r\n                    return _date.default.sameDate(item, args.date)\r\n                });\r\n                if (isDisabledDate) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }),\r\n    year: _uiCalendar.default.inherit({\r\n        _getViewName: function() {\r\n            return \"year\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = this.option(\"_todayDate\")();\r\n            return _date.default.sameMonthAndYear(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            return !_date.default.dateInRange(cellDate, _date.default.getFirstMonthDate(this.option(\"min\")), _date.default.getLastMonthDate(this.option(\"max\")))\r\n        },\r\n        _isOtherView: function() {\r\n            return false\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return _date2.default.getMonthNames(\"abbreviated\")[cellDate.getMonth()]\r\n        },\r\n        _getFirstCellData: function() {\r\n            var currentDate = this.option(\"date\");\r\n            var data = _date.default.createDate(currentDate);\r\n            data.setDate(1);\r\n            data.setMonth(0);\r\n            return data\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = _date.default.createDate(date);\r\n            date.setMonth(date.getMonth() + 1);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = _date.default.createDate(date);\r\n            foundDate.setDate(1);\r\n            return this._$table.find(\"td[data-value='\".concat(_date_serialization.default.serializeDate(foundDate, _date.default.getShortDateFormat()), \"']\"))\r\n        },\r\n        getCellAriaLabel: function(date) {\r\n            return _date2.default.format(date, \"monthandyear\")\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return _date2.default.format(this.option(\"date\"), \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return _date.default.sameYear(date, this.option(\"min\")) || _date.default.sameYear(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    decade: _uiCalendar.default.inherit({\r\n        _getViewName: function() {\r\n            return \"decade\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = this.option(\"_todayDate\")();\r\n            return _date.default.sameYear(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var min = this.option(\"min\");\r\n            var max = this.option(\"max\");\r\n            return !_date.default.dateInRange(cellDate.getFullYear(), min && min.getFullYear(), max && max.getFullYear())\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = _date.default.createDate(cellDate);\r\n            date.setMonth(1);\r\n            return !_date.default.sameDecade(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return _date2.default.format(cellDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var year = _date.default.getFirstYearInDecade(this.option(\"date\")) - 1;\r\n            return _date.default.createDateWithFullYear(year, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = _date.default.createDate(date);\r\n            date.setFullYear(date.getFullYear() + 1);\r\n            return date\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\");\r\n            var firstYearInDecade = _date.default.getFirstYearInDecade(currentDate);\r\n            var startDate = _date.default.createDate(currentDate);\r\n            var endDate = _date.default.createDate(currentDate);\r\n            startDate.setFullYear(firstYearInDecade);\r\n            endDate.setFullYear(firstYearInDecade + 9);\r\n            return _date2.default.format(startDate, \"yyyy\") + \"-\" + _date2.default.format(endDate, \"yyyy\")\r\n        },\r\n        _isValueOnCurrentView: function(currentDate, value) {\r\n            return _date.default.sameDecade(currentDate, value)\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = _date.default.createDate(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            return this._$table.find(\"td[data-value='\".concat(_date_serialization.default.serializeDate(foundDate, _date.default.getShortDateFormat()), \"']\"))\r\n        },\r\n        isBoundary: function(date) {\r\n            return _date.default.sameDecade(date, this.option(\"min\")) || _date.default.sameDecade(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    century: _uiCalendar.default.inherit({\r\n        _getViewName: function() {\r\n            return \"century\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = this.option(\"_todayDate\")();\r\n            return _date.default.sameDecade(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var decade = _date.default.getFirstYearInDecade(cellDate);\r\n            var minDecade = _date.default.getFirstYearInDecade(this.option(\"min\"));\r\n            var maxDecade = _date.default.getFirstYearInDecade(this.option(\"max\"));\r\n            return !_date.default.dateInRange(decade, minDecade, maxDecade)\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = _date.default.createDate(cellDate);\r\n            date.setMonth(1);\r\n            return !_date.default.sameCentury(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            var startDate = _date2.default.format(cellDate, \"yyyy\");\r\n            var endDate = _date.default.createDate(cellDate);\r\n            endDate.setFullYear(endDate.getFullYear() + 9);\r\n            return startDate + \" - \" + _date2.default.format(endDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var decade = _date.default.getFirstDecadeInCentury(this.option(\"date\")) - 10;\r\n            return _date.default.createDateWithFullYear(decade, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = _date.default.createDate(date);\r\n            date.setFullYear(date.getFullYear() + 10);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = _date.default.createDate(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            foundDate.setFullYear(_date.default.getFirstYearInDecade(foundDate));\r\n            return this._$table.find(\"td[data-value='\".concat(_date_serialization.default.serializeDate(foundDate, _date.default.getShortDateFormat()), \"']\"))\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\");\r\n            var firstDecadeInCentury = _date.default.getFirstDecadeInCentury(currentDate);\r\n            var startDate = _date.default.createDate(currentDate);\r\n            var endDate = _date.default.createDate(currentDate);\r\n            startDate.setFullYear(firstDecadeInCentury);\r\n            endDate.setFullYear(firstDecadeInCentury + 99);\r\n            return _date2.default.format(startDate, \"yyyy\") + \"-\" + _date2.default.format(endDate, \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return _date.default.sameCentury(date, this.option(\"min\")) || _date.default.sameCentury(date, this.option(\"max\"))\r\n        }\r\n    })\r\n};\r\nvar _default = Views;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/check_box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _utils = require(\"./widget/utils.ink_ripple\");\r\nvar _editor = _interopRequireDefault(require(\"./editor/editor\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _index = require(\"../events/utils/index\");\r\nvar _click = require(\"../events/click\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CHECKBOX_CLASS = \"dx-checkbox\";\r\nvar CHECKBOX_ICON_CLASS = \"dx-checkbox-icon\";\r\nvar CHECKBOX_CHECKED_CLASS = \"dx-checkbox-checked\";\r\nvar CHECKBOX_CONTAINER_CLASS = \"dx-checkbox-container\";\r\nvar CHECKBOX_TEXT_CLASS = \"dx-checkbox-text\";\r\nvar CHECKBOX_HAS_TEXT_CLASS = \"dx-checkbox-has-text\";\r\nvar CHECKBOX_INDETERMINATE_CLASS = \"dx-checkbox-indeterminate\";\r\nvar CHECKBOX_FEEDBACK_HIDE_TIMEOUT = 100;\r\nvar CheckBox = _editor.default.inherit({\r\n    _supportedKeys: function() {\r\n        var click = function(e) {\r\n            e.preventDefault();\r\n            this._clickAction({\r\n                event: e\r\n            })\r\n        };\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            space: click\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            activeStateEnabled: true,\r\n            value: false,\r\n            text: \"\",\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _canValueBeChangedByClick: function() {\r\n        return true\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    },\r\n    _feedbackHideTimeout: CHECKBOX_FEEDBACK_HIDE_TIMEOUT,\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this._$container = (0, _renderer.default)(\"<div>\").addClass(CHECKBOX_CONTAINER_CLASS);\r\n        this.setAria(\"role\", \"checkbox\");\r\n        this.$element().addClass(CHECKBOX_CLASS);\r\n        this._renderValue();\r\n        this._renderIcon();\r\n        this._renderText();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.$element().append(this._$container);\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this._renderClick();\r\n        this.callBase()\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = (0, _renderer.default)(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = (0, _utils.render)({\r\n            waveSizeCoefficient: 2.5,\r\n            useHoldAnimation: false,\r\n            wavesNumber: 2,\r\n            isCentered: true\r\n        })\r\n    },\r\n    _renderInkWave: function(element, dxEvent, doRender, waveIndex) {\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: element,\r\n            event: dxEvent,\r\n            wave: waveIndex\r\n        };\r\n        if (doRender) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _updateFocusState: function(e, value) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$icon, e, value, 0)\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$icon, e, value, 1)\r\n    },\r\n    _renderIcon: function() {\r\n        this._$icon = (0, _renderer.default)(\"<span>\").addClass(CHECKBOX_ICON_CLASS).prependTo(this._$container)\r\n    },\r\n    _renderText: function() {\r\n        var textValue = this.option(\"text\");\r\n        if (!textValue) {\r\n            if (this._$text) {\r\n                this._$text.remove();\r\n                this.$element().removeClass(CHECKBOX_HAS_TEXT_CLASS)\r\n            }\r\n            return\r\n        }\r\n        if (!this._$text) {\r\n            this._$text = (0, _renderer.default)(\"<span>\").addClass(CHECKBOX_TEXT_CLASS)\r\n        }\r\n        this._$text.text(textValue);\r\n        this._$container.append(this._$text);\r\n        this.$element().addClass(CHECKBOX_HAS_TEXT_CLASS)\r\n    },\r\n    _renderClick: function() {\r\n        var that = this;\r\n        var eventName = (0, _index.addNamespace)(_click.name, that.NAME);\r\n        that._clickAction = that._createAction(that._clickHandler);\r\n        _events_engine.default.off(that.$element(), eventName);\r\n        _events_engine.default.on(that.$element(), eventName, function(e) {\r\n            that._clickAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _clickHandler: function(args) {\r\n        var that = args.component;\r\n        that._saveValueChangeEvent(args.event);\r\n        that.option(\"value\", !that.option(\"value\"))\r\n    },\r\n    _renderValue: function() {\r\n        var $element = this.$element();\r\n        var checked = this.option(\"value\");\r\n        var indeterminate = void 0 === checked;\r\n        $element.toggleClass(CHECKBOX_CHECKED_CLASS, Boolean(checked));\r\n        $element.toggleClass(CHECKBOX_INDETERMINATE_CLASS, indeterminate);\r\n        this._getSubmitElement().val(checked);\r\n        this.setAria(\"checked\", indeterminate ? \"mixed\" : checked || \"false\")\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                this._renderValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"text\":\r\n                this._renderText();\r\n                this._renderDimensions();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        delete this._inkRipple;\r\n        this.callBase()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxCheckBox\", CheckBox);\r\nvar _default = CheckBox;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/collection/item.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _public_component = require(\"../../core/utils/public_component\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar ITEM_CONTENT_PLACEHOLDER_CLASS = \"dx-item-content-placeholder\";\r\nvar forcibleWatcher = function(watchMethod, fn, callback) {\r\n    var filteredCallback = function() {\r\n        var oldValue;\r\n        return function(value) {\r\n            if (oldValue !== value) {\r\n                callback(value, oldValue);\r\n                oldValue = value\r\n            }\r\n        }\r\n    }();\r\n    return {\r\n        dispose: watchMethod(fn, filteredCallback),\r\n        force: function() {\r\n            filteredCallback(fn())\r\n        }\r\n    }\r\n};\r\nvar CollectionItem = _class.default.inherit({\r\n    ctor: function($element, options, rawData) {\r\n        this._$element = $element;\r\n        this._options = options;\r\n        this._rawData = rawData;\r\n        (0, _public_component.attachInstanceToElement)($element, this, this._dispose);\r\n        this._render()\r\n    },\r\n    _render: function() {\r\n        var $placeholder = (0, _renderer.default)(\"<div>\").addClass(ITEM_CONTENT_PLACEHOLDER_CLASS);\r\n        this._$element.append($placeholder);\r\n        this._watchers = [];\r\n        this._renderWatchers()\r\n    },\r\n    _renderWatchers: function() {\r\n        this._startWatcher(\"disabled\", this._renderDisabled.bind(this));\r\n        this._startWatcher(\"visible\", this._renderVisible.bind(this))\r\n    },\r\n    _startWatcher: function(field, render) {\r\n        var rawData = this._rawData;\r\n        var exprGetter = this._options.fieldGetter(field);\r\n        var watcher = forcibleWatcher(this._options.watchMethod(), function() {\r\n            return exprGetter(rawData)\r\n        }, function(value, oldValue) {\r\n            this._dirty = true;\r\n            render(value, oldValue)\r\n        }.bind(this));\r\n        this._watchers.push(watcher)\r\n    },\r\n    setDataField: function() {\r\n        this._dirty = false;\r\n        (0, _iterator.each)(this._watchers, function(_, watcher) {\r\n            watcher.force()\r\n        });\r\n        if (this._dirty) {\r\n            return true\r\n        }\r\n    },\r\n    _renderDisabled: function(value, oldValue) {\r\n        this._$element.toggleClass(DISABLED_STATE_CLASS, !!value);\r\n        this._updateOwnerFocus(value)\r\n    },\r\n    _updateOwnerFocus: function(isDisabled) {\r\n        var ownerComponent = this._options.owner;\r\n        if (ownerComponent && isDisabled) {\r\n            ownerComponent._resetItemFocus(this._$element)\r\n        }\r\n    },\r\n    _renderVisible: function(value, oldValue) {\r\n        this._$element.toggleClass(INVISIBLE_STATE_CLASS, void 0 !== value && !value)\r\n    },\r\n    _dispose: function() {\r\n        (0, _iterator.each)(this._watchers, function(_, watcher) {\r\n            watcher.dispose()\r\n        })\r\n    }\r\n});\r\nCollectionItem.getInstance = function($element) {\r\n    return (0, _public_component.getInstanceByElement)($element, this)\r\n};\r\nvar _default = CollectionItem;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/collection/ui.collection_widget.async.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./ui.collection_widget.edit\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _common = require(\"../../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar AsyncCollectionWidget = _uiCollection_widget.default.inherit({\r\n    _initMarkup: function() {\r\n        this._deferredItems = [];\r\n        this.callBase()\r\n    },\r\n    _renderItemContent: function(args) {\r\n        var renderContentDeferred = new _deferred.Deferred;\r\n        var itemDeferred = new _deferred.Deferred;\r\n        var that = this;\r\n        this._deferredItems[args.index] = itemDeferred;\r\n        var $itemContent = this.callBase.call(that, args);\r\n        itemDeferred.done(function() {\r\n            renderContentDeferred.resolve($itemContent)\r\n        });\r\n        return renderContentDeferred.promise()\r\n    },\r\n    _createItemByTemplate: function(itemTemplate, renderArgs) {\r\n        var _this = this;\r\n        return itemTemplate.render({\r\n            model: renderArgs.itemData,\r\n            container: renderArgs.container,\r\n            index: renderArgs.index,\r\n            onRendered: function() {\r\n                _this._deferredItems[renderArgs.index].resolve()\r\n            }\r\n        })\r\n    },\r\n    _postProcessRenderItems: _common.noop,\r\n    _renderItemsAsync: function() {\r\n        var _this2 = this;\r\n        var d = new _deferred.Deferred;\r\n        _deferred.when.apply(this, this._deferredItems).done(function() {\r\n            _this2._postProcessRenderItems();\r\n            d.resolve()\r\n        });\r\n        return d.promise()\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._deferredItems = []\r\n    }\r\n});\r\nvar _default = AsyncCollectionWidget;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/collection/ui.collection_widget.base.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _template_manager = require(\"../../core/utils/template_manager\");\r\nvar _element = require(\"../../core/element\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _action = _interopRequireDefault(require(\"../../core/action\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _data_helper = _interopRequireDefault(require(\"../../data_helper\"));\r\nvar _item = _interopRequireDefault(require(\"./item\"));\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _hold = _interopRequireDefault(require(\"../../events/hold\"));\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _click = require(\"../../events/click\");\r\nvar _contextmenu = require(\"../../events/contextmenu\");\r\nvar _bindable_template = require(\"../../core/templates/bindable_template\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COLLECTION_CLASS = \"dx-collection\";\r\nvar ITEM_CLASS = \"dx-item\";\r\nvar CONTENT_CLASS_POSTFIX = \"-content\";\r\nvar ITEM_CONTENT_PLACEHOLDER_CLASS = \"dx-item-content-placeholder\";\r\nvar ITEM_DATA_KEY = \"dxItemData\";\r\nvar ITEM_INDEX_KEY = \"dxItemIndex\";\r\nvar ITEM_TEMPLATE_ID_PREFIX = \"tmpl-\";\r\nvar ITEMS_OPTIONS_NAME = \"dxItem\";\r\nvar SELECTED_ITEM_CLASS = \"dx-item-selected\";\r\nvar ITEM_RESPONSE_WAIT_CLASS = \"dx-item-response-wait\";\r\nvar EMPTY_COLLECTION = \"dx-empty-collection\";\r\nvar TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\r\nvar ITEM_PATH_REGEX = /^([^.]+\\[\\d+\\]\\.)+([\\w.]+)$/;\r\nvar ANONYMOUS_TEMPLATE_NAME = \"item\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar FOCUS_PAGE_UP = \"pageup\";\r\nvar FOCUS_PAGE_DOWN = \"pagedown\";\r\nvar FOCUS_LAST = \"last\";\r\nvar FOCUS_FIRST = \"first\";\r\nvar CollectionWidget = _ui.default.inherit({\r\n    _activeStateUnit: \".\" + ITEM_CLASS,\r\n    _supportedKeys: function() {\r\n        var enter = function(e) {\r\n            var $itemElement = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n            if (!$itemElement.length) {\r\n                return\r\n            }\r\n            this._itemClickHandler((0, _extend.extend)({}, e, {\r\n                target: $itemElement.get(0),\r\n                currentTarget: $itemElement.get(0)\r\n            }))\r\n        };\r\n        var space = function(e) {\r\n            e.preventDefault();\r\n            enter.call(this, e)\r\n        };\r\n        var move = function(location, e) {\r\n            if (!(0, _index.isCommandKeyPressed)(e)) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._moveFocus(location, e)\r\n            }\r\n        };\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            space: space,\r\n            enter: enter,\r\n            leftArrow: move.bind(this, FOCUS_LEFT),\r\n            rightArrow: move.bind(this, FOCUS_RIGHT),\r\n            upArrow: move.bind(this, FOCUS_UP),\r\n            downArrow: move.bind(this, FOCUS_DOWN),\r\n            pageUp: move.bind(this, FOCUS_UP),\r\n            pageDown: move.bind(this, FOCUS_DOWN),\r\n            home: move.bind(this, FOCUS_FIRST),\r\n            end: move.bind(this, FOCUS_LAST)\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            selectOnFocus: false,\r\n            loopItemFocus: true,\r\n            items: [],\r\n            itemTemplate: \"item\",\r\n            onItemRendered: null,\r\n            onItemClick: null,\r\n            onItemHold: null,\r\n            itemHoldTimeout: 750,\r\n            onItemContextMenu: null,\r\n            onFocusedItemChanged: null,\r\n            noDataText: _message.default.format(\"dxCollectionWidget-noDataText\"),\r\n            dataSource: null,\r\n            _itemAttributes: {},\r\n            itemTemplateProperty: \"template\",\r\n            focusOnSelectedItem: true,\r\n            focusedElement: null,\r\n            displayExpr: void 0,\r\n            disabledExpr: function(data) {\r\n                return data ? data.disabled : void 0\r\n            },\r\n            visibleExpr: function(data) {\r\n                return data ? data.visible : void 0\r\n            }\r\n        })\r\n    },\r\n    _init: function() {\r\n        this._compileDisplayGetter();\r\n        this.callBase();\r\n        this._cleanRenderedItems();\r\n        this._refreshDataSource()\r\n    },\r\n    _compileDisplayGetter: function() {\r\n        var displayExpr = this.option(\"displayExpr\");\r\n        this._displayGetter = displayExpr ? (0, _data.compileGetter)(this.option(\"displayExpr\")) : void 0\r\n    },\r\n    _initTemplates: function() {\r\n        this._initItemsFromMarkup();\r\n        this._initDefaultItemTemplate();\r\n        this.callBase()\r\n    },\r\n    _getAnonymousTemplateName: function() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    },\r\n    _initDefaultItemTemplate: function() {\r\n        var fieldsMap = this._getFieldsMap();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new _bindable_template.BindableTemplate(function($container, data) {\r\n                if ((0, _type.isPlainObject)(data)) {\r\n                    this._prepareDefaultItemTemplate(data, $container)\r\n                } else {\r\n                    if (fieldsMap && (0, _type.isFunction)(fieldsMap.text)) {\r\n                        data = fieldsMap.text(data)\r\n                    }\r\n                    $container.text(String((0, _common.ensureDefined)(data, \"\")))\r\n                }\r\n            }.bind(this), this._getBindableFields(), this.option(\"integrationOptions.watchMethod\"), fieldsMap)\r\n        })\r\n    },\r\n    _getBindableFields: function() {\r\n        return [\"text\", \"html\"]\r\n    },\r\n    _getFieldsMap: function() {\r\n        if (this._displayGetter) {\r\n            return {\r\n                text: this._displayGetter\r\n            }\r\n        }\r\n    },\r\n    _prepareDefaultItemTemplate: function(data, $container) {\r\n        if ((0, _type.isDefined)(data.text)) {\r\n            $container.text(data.text)\r\n        }\r\n        if ((0, _type.isDefined)(data.html)) {\r\n            $container.html(data.html)\r\n        }\r\n    },\r\n    _initItemsFromMarkup: function() {\r\n        var _this = this;\r\n        var rawItems = (0, _template_manager.findTemplates)(this.$element(), ITEMS_OPTIONS_NAME);\r\n        if (!rawItems.length || this.option(\"items\").length) {\r\n            return\r\n        }\r\n        var items = rawItems.map(function(_ref) {\r\n            var element = _ref.element,\r\n                options = _ref.options;\r\n            var isTemplateRequired = /\\S/.test(element.innerHTML) && !options.template;\r\n            if (isTemplateRequired) {\r\n                options.template = _this._prepareItemTemplate(element)\r\n            } else {\r\n                (0, _renderer.default)(element).remove()\r\n            }\r\n            return options\r\n        });\r\n        this.option(\"items\", items)\r\n    },\r\n    _prepareItemTemplate: function(item) {\r\n        var templateId = ITEM_TEMPLATE_ID_PREFIX + new _guid.default;\r\n        var $template = (0, _renderer.default)(item).detach().clone().removeAttr(\"data-options\").addClass(TEMPLATE_WRAPPER_CLASS);\r\n        this._saveTemplate(templateId, $template);\r\n        return templateId\r\n    },\r\n    _dataSourceOptions: function() {\r\n        return {\r\n            paginate: false\r\n        }\r\n    },\r\n    _cleanRenderedItems: function() {\r\n        this._renderedItemsCount = 0\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _focusInHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if ((0, _array.inArray)(e.target, this._focusTarget()) === -1) {\r\n            return\r\n        }\r\n        var $focusedElement = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n        if ($focusedElement.length) {\r\n            this._setFocusedItem($focusedElement)\r\n        } else {\r\n            var $activeItem = this._getActiveItem();\r\n            if ($activeItem.length) {\r\n                this.option(\"focusedElement\", (0, _element.getPublicElement)($activeItem))\r\n            }\r\n        }\r\n    },\r\n    _focusOutHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var $target = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n        this._updateFocusedItemState($target, false)\r\n    },\r\n    _getActiveItem: function(last) {\r\n        var $focusedElement = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n        if ($focusedElement.length) {\r\n            return $focusedElement\r\n        }\r\n        var index = this.option(\"focusOnSelectedItem\") ? this.option(\"selectedIndex\") : 0;\r\n        var activeElements = this._getActiveElement();\r\n        var lastIndex = activeElements.length - 1;\r\n        if (index < 0) {\r\n            index = last ? lastIndex : 0\r\n        }\r\n        return activeElements.eq(index)\r\n    },\r\n    _moveFocus: function(location) {\r\n        var $items = this._getAvailableItems();\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_PAGE_UP:\r\n            case FOCUS_UP:\r\n                $newTarget = this._prevItem($items);\r\n                break;\r\n            case FOCUS_PAGE_DOWN:\r\n            case FOCUS_DOWN:\r\n                $newTarget = this._nextItem($items);\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                $newTarget = this.option(\"rtlEnabled\") ? this._prevItem($items) : this._nextItem($items);\r\n                break;\r\n            case FOCUS_LEFT:\r\n                $newTarget = this.option(\"rtlEnabled\") ? this._nextItem($items) : this._prevItem($items);\r\n                break;\r\n            case FOCUS_FIRST:\r\n                $newTarget = $items.first();\r\n                break;\r\n            case FOCUS_LAST:\r\n                $newTarget = $items.last();\r\n                break;\r\n            default:\r\n                return false\r\n        }\r\n        if (0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", (0, _element.getPublicElement)($newTarget))\r\n        }\r\n    },\r\n    _getVisibleItems: function($itemElements) {\r\n        $itemElements = $itemElements || this._itemElements();\r\n        return $itemElements.filter(\":visible\")\r\n    },\r\n    _getAvailableItems: function($itemElements) {\r\n        return this._getVisibleItems($itemElements).not(\".dx-state-disabled\")\r\n    },\r\n    _prevItem: function($items) {\r\n        var $target = this._getActiveItem();\r\n        var targetIndex = $items.index($target);\r\n        var $last = $items.last();\r\n        var $item = (0, _renderer.default)($items[targetIndex - 1]);\r\n        var loop = this.option(\"loopItemFocus\");\r\n        if (0 === $item.length && loop) {\r\n            $item = $last\r\n        }\r\n        return $item\r\n    },\r\n    _nextItem: function($items) {\r\n        var $target = this._getActiveItem(true);\r\n        var targetIndex = $items.index($target);\r\n        var $first = $items.first();\r\n        var $item = (0, _renderer.default)($items[targetIndex + 1]);\r\n        var loop = this.option(\"loopItemFocus\");\r\n        if (0 === $item.length && loop) {\r\n            $item = $first\r\n        }\r\n        return $item\r\n    },\r\n    _selectFocusedItem: function($target) {\r\n        this.selectItem($target)\r\n    },\r\n    _updateFocusedItemState: function(target, isFocused, needCleanItemId) {\r\n        var $target = (0, _renderer.default)(target);\r\n        if ($target.length) {\r\n            this._refreshActiveDescendant();\r\n            this._refreshItemId($target, needCleanItemId);\r\n            this._toggleFocusClass(isFocused, $target)\r\n        }\r\n        this._updateParentActiveDescendant()\r\n    },\r\n    _refreshActiveDescendant: function($target) {\r\n        this.setAria(\"activedescendant\", (0, _type.isDefined)(this.option(\"focusedElement\")) ? this.getFocusedItemId() : null, $target)\r\n    },\r\n    _refreshItemId: function($target, needCleanItemId) {\r\n        if (!needCleanItemId && this.option(\"focusedElement\")) {\r\n            this.setAria(\"id\", this.getFocusedItemId(), $target)\r\n        } else {\r\n            this.setAria(\"id\", null, $target)\r\n        }\r\n    },\r\n    _setFocusedItem: function($target) {\r\n        if (!$target || !$target.length) {\r\n            return\r\n        }\r\n        this._updateFocusedItemState($target, true);\r\n        this.onFocusedItemChanged(this.getFocusedItemId());\r\n        if (this.option(\"selectOnFocus\")) {\r\n            this._selectFocusedItem($target)\r\n        }\r\n    },\r\n    _findItemElementByItem: function(item) {\r\n        var result = (0, _renderer.default)();\r\n        var that = this;\r\n        this.itemElements().each(function() {\r\n            var $item = (0, _renderer.default)(this);\r\n            if ($item.data(that._itemDataKey()) === item) {\r\n                result = $item;\r\n                return false\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    _getIndexByItem: function(item) {\r\n        return this.option(\"items\").indexOf(item)\r\n    },\r\n    _itemOptionChanged: function(item, property, value, oldValue) {\r\n        var $item = this._findItemElementByItem(item);\r\n        if (!$item.length) {\r\n            return\r\n        }\r\n        if (!this.constructor.ItemClass.getInstance($item).setDataField(property, value)) {\r\n            this._refreshItem($item, item)\r\n        }\r\n        var isDisabling = \"disabled\" === property && value;\r\n        if (isDisabling) {\r\n            this._resetItemFocus($item)\r\n        }\r\n    },\r\n    _resetItemFocus: function($item) {\r\n        if ($item.is(this.option(\"focusedElement\"))) {\r\n            this.option(\"focusedElement\", null)\r\n        }\r\n    },\r\n    _refreshItem: function($item) {\r\n        var itemData = this._getItemData($item);\r\n        var index = $item.data(this._itemIndexKey());\r\n        this._renderItem(this._renderedItemsCount + index, itemData, null, $item)\r\n    },\r\n    _updateParentActiveDescendant: _common.noop,\r\n    _optionChanged: function(args) {\r\n        if (\"items\" === args.name) {\r\n            var matches = args.fullName.match(ITEM_PATH_REGEX);\r\n            if (matches && matches.length) {\r\n                var property = matches[matches.length - 1];\r\n                var itemPath = args.fullName.replace(\".\" + property, \"\");\r\n                var item = this.option(itemPath);\r\n                this._itemOptionChanged(item, property, args.value, args.previousValue);\r\n                return\r\n            }\r\n        }\r\n        switch (args.name) {\r\n            case \"items\":\r\n            case \"_itemAttributes\":\r\n            case \"itemTemplateProperty\":\r\n            case \"showItemDataTitle\":\r\n                this._cleanRenderedItems();\r\n                this._invalidate();\r\n                break;\r\n            case \"dataSource\":\r\n                this._refreshDataSource();\r\n                this._renderEmptyMessage();\r\n                break;\r\n            case \"noDataText\":\r\n                this._renderEmptyMessage();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._invalidate();\r\n                break;\r\n            case \"onItemRendered\":\r\n                this._createItemRenderAction();\r\n                break;\r\n            case \"onItemClick\":\r\n                break;\r\n            case \"onItemHold\":\r\n            case \"itemHoldTimeout\":\r\n                this._attachHoldEvent();\r\n                break;\r\n            case \"onItemContextMenu\":\r\n                this._attachContextMenuEvent();\r\n                break;\r\n            case \"onFocusedItemChanged\":\r\n                this.onFocusedItemChanged = this._createActionByOption(\"onFocusedItemChanged\");\r\n                break;\r\n            case \"selectOnFocus\":\r\n            case \"loopItemFocus\":\r\n            case \"focusOnSelectedItem\":\r\n                break;\r\n            case \"focusedElement\":\r\n                this._updateFocusedItemState(args.previousValue, false, true);\r\n                this._setFocusedItem((0, _renderer.default)(args.value));\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._initDefaultItemTemplate();\r\n                this._invalidate();\r\n                break;\r\n            case \"visibleExpr\":\r\n            case \"disabledExpr\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _invalidate: function() {\r\n        this.option(\"focusedElement\", null);\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _loadNextPage: function() {\r\n        var dataSource = this._dataSource;\r\n        this._expectNextPageLoading();\r\n        dataSource.pageIndex(1 + dataSource.pageIndex());\r\n        return dataSource.load()\r\n    },\r\n    _expectNextPageLoading: function() {\r\n        this._startIndexForAppendedItems = 0\r\n    },\r\n    _expectLastItemLoading: function() {\r\n        this._startIndexForAppendedItems = -1\r\n    },\r\n    _forgetNextPageLoading: function() {\r\n        this._startIndexForAppendedItems = null\r\n    },\r\n    _dataSourceChangedHandler: function(newItems) {\r\n        var items = this.option(\"items\");\r\n        if (this._initialized && items && this._shouldAppendItems()) {\r\n            this._renderedItemsCount = items.length;\r\n            if (!this._isLastPage() || this._startIndexForAppendedItems !== -1) {\r\n                this.option().items = items.concat(newItems.slice(this._startIndexForAppendedItems))\r\n            }\r\n            this._forgetNextPageLoading();\r\n            this._refreshContent()\r\n        } else {\r\n            this.option(\"items\", newItems.slice())\r\n        }\r\n    },\r\n    _refreshContent: function() {\r\n        this._prepareContent();\r\n        this._renderContent()\r\n    },\r\n    _dataSourceLoadErrorHandler: function() {\r\n        this._forgetNextPageLoading();\r\n        this.option(\"items\", this.option(\"items\"))\r\n    },\r\n    _shouldAppendItems: function() {\r\n        return null != this._startIndexForAppendedItems && this._allowDynamicItemsAppend()\r\n    },\r\n    _allowDynamicItemsAppend: function() {\r\n        return false\r\n    },\r\n    _clean: function() {\r\n        this._cleanFocusState();\r\n        this._cleanItemContainer()\r\n    },\r\n    _cleanItemContainer: function() {\r\n        (0, _renderer.default)(this._itemContainer()).empty()\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        clearTimeout(this._itemFocusTimeout)\r\n    },\r\n    _refresh: function() {\r\n        this._cleanRenderedItems();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _itemContainer: function() {\r\n        return this.$element()\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _itemContentClass: function() {\r\n        return this._itemClass() + CONTENT_CLASS_POSTFIX\r\n    },\r\n    _selectedItemClass: function() {\r\n        return SELECTED_ITEM_CLASS\r\n    },\r\n    _itemResponseWaitClass: function() {\r\n        return ITEM_RESPONSE_WAIT_CLASS\r\n    },\r\n    _itemSelector: function() {\r\n        return \".\" + this._itemClass()\r\n    },\r\n    _itemDataKey: function() {\r\n        return ITEM_DATA_KEY\r\n    },\r\n    _itemIndexKey: function() {\r\n        return ITEM_INDEX_KEY\r\n    },\r\n    _itemElements: function() {\r\n        return this._itemContainer().find(this._itemSelector())\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.onFocusedItemChanged = this._createActionByOption(\"onFocusedItemChanged\");\r\n        this.$element().addClass(COLLECTION_CLASS);\r\n        this._prepareContent()\r\n    },\r\n    _prepareContent: (0, _common.deferRenderer)(function() {\r\n        this._renderContentImpl()\r\n    }),\r\n    _renderContent: function() {\r\n        this._fireContentReadyAction()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._attachClickEvent();\r\n        this._attachHoldEvent();\r\n        this._attachContextMenuEvent()\r\n    },\r\n    _attachClickEvent: function() {\r\n        var itemSelector = this._itemSelector();\r\n        var clickEventNamespace = (0, _index.addNamespace)(_click.name, this.NAME);\r\n        var pointerDownEventNamespace = (0, _index.addNamespace)(_pointer.default.down, this.NAME);\r\n        var that = this;\r\n        var pointerDownAction = new _action.default(function(args) {\r\n            var event = args.event;\r\n            that._itemPointerDownHandler(event)\r\n        });\r\n        _events_engine.default.off(this._itemContainer(), clickEventNamespace, itemSelector);\r\n        _events_engine.default.off(this._itemContainer(), pointerDownEventNamespace, itemSelector);\r\n        _events_engine.default.on(this._itemContainer(), clickEventNamespace, itemSelector, function(e) {\r\n            this._itemClickHandler(e)\r\n        }.bind(this));\r\n        _events_engine.default.on(this._itemContainer(), pointerDownEventNamespace, itemSelector, function(e) {\r\n            pointerDownAction.execute({\r\n                element: (0, _renderer.default)(e.target),\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _itemClickHandler: function(e, args, config) {\r\n        this._itemDXEventHandler(e, \"onItemClick\", args, config)\r\n    },\r\n    _itemPointerDownHandler: function(e) {\r\n        if (!this.option(\"focusStateEnabled\")) {\r\n            return\r\n        }\r\n        this._itemFocusHandler = function() {\r\n            clearTimeout(this._itemFocusTimeout);\r\n            this._itemFocusHandler = null;\r\n            if (e.isDefaultPrevented()) {\r\n                return\r\n            }\r\n            var $target = (0, _renderer.default)(e.target);\r\n            var $closestItem = $target.closest(this._itemElements());\r\n            var $closestFocusable = this._closestFocusable($target);\r\n            if ($closestItem.length && $closestFocusable && (0, _array.inArray)($closestFocusable.get(0), this._focusTarget()) !== -1) {\r\n                this.option(\"focusedElement\", (0, _element.getPublicElement)($closestItem))\r\n            }\r\n        }.bind(this);\r\n        this._itemFocusTimeout = setTimeout(this._forcePointerDownFocus.bind(this))\r\n    },\r\n    _closestFocusable: function($target) {\r\n        if ($target.is(_selectors.focusable)) {\r\n            return $target\r\n        } else {\r\n            $target = $target.parent();\r\n            while ($target.length && !_dom_adapter.default.isDocument($target.get(0))) {\r\n                if ($target.is(_selectors.focusable)) {\r\n                    return $target\r\n                }\r\n                $target = $target.parent()\r\n            }\r\n        }\r\n    },\r\n    _forcePointerDownFocus: function() {\r\n        this._itemFocusHandler && this._itemFocusHandler()\r\n    },\r\n    _updateFocusState: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._forcePointerDownFocus()\r\n    },\r\n    _attachHoldEvent: function() {\r\n        var $itemContainer = this._itemContainer();\r\n        var itemSelector = this._itemSelector();\r\n        var eventName = (0, _index.addNamespace)(_hold.default.name, this.NAME);\r\n        _events_engine.default.off($itemContainer, eventName, itemSelector);\r\n        _events_engine.default.on($itemContainer, eventName, itemSelector, {\r\n            timeout: this._getHoldTimeout()\r\n        }, this._itemHoldHandler.bind(this))\r\n    },\r\n    _getHoldTimeout: function() {\r\n        return this.option(\"itemHoldTimeout\")\r\n    },\r\n    _shouldFireHoldEvent: function() {\r\n        return this.hasActionSubscription(\"onItemHold\")\r\n    },\r\n    _itemHoldHandler: function(e) {\r\n        if (this._shouldFireHoldEvent()) {\r\n            this._itemDXEventHandler(e, \"onItemHold\")\r\n        } else {\r\n            e.cancel = true\r\n        }\r\n    },\r\n    _attachContextMenuEvent: function() {\r\n        var $itemContainer = this._itemContainer();\r\n        var itemSelector = this._itemSelector();\r\n        var eventName = (0, _index.addNamespace)(_contextmenu.name, this.NAME);\r\n        _events_engine.default.off($itemContainer, eventName, itemSelector);\r\n        _events_engine.default.on($itemContainer, eventName, itemSelector, this._itemContextMenuHandler.bind(this))\r\n    },\r\n    _shouldFireContextMenuEvent: function() {\r\n        return this.hasActionSubscription(\"onItemContextMenu\")\r\n    },\r\n    _itemContextMenuHandler: function(e) {\r\n        if (this._shouldFireContextMenuEvent()) {\r\n            this._itemDXEventHandler(e, \"onItemContextMenu\")\r\n        } else {\r\n            e.cancel = true\r\n        }\r\n    },\r\n    _renderContentImpl: function() {\r\n        var items = this.option(\"items\") || [];\r\n        if (this._renderedItemsCount) {\r\n            this._renderItems(items.slice(this._renderedItemsCount))\r\n        } else {\r\n            this._renderItems(items)\r\n        }\r\n    },\r\n    _renderItems: function(items) {\r\n        if (items.length) {\r\n            (0, _iterator.each)(items, function(index, itemData) {\r\n                this._renderItem(this._renderedItemsCount + index, itemData)\r\n            }.bind(this))\r\n        }\r\n        this._renderEmptyMessage()\r\n    },\r\n    _renderItem: function(index, itemData, $container, $itemToReplace) {\r\n        var _index$item;\r\n        var itemIndex = null !== (_index$item = null === index || void 0 === index ? void 0 : index.item) && void 0 !== _index$item ? _index$item : index;\r\n        $container = $container || this._itemContainer();\r\n        var $itemFrame = this._renderItemFrame(itemIndex, itemData, $container, $itemToReplace);\r\n        this._setElementData($itemFrame, itemData, itemIndex);\r\n        $itemFrame.attr(this.option(\"_itemAttributes\"));\r\n        this._attachItemClickEvent(itemData, $itemFrame);\r\n        var $itemContent = this._getItemContent($itemFrame);\r\n        var renderContentPromise = this._renderItemContent({\r\n            index: itemIndex,\r\n            itemData: itemData,\r\n            container: (0, _element.getPublicElement)($itemContent),\r\n            contentClass: this._itemContentClass(),\r\n            defaultTemplateName: this.option(\"itemTemplate\")\r\n        });\r\n        var that = this;\r\n        (0, _deferred.when)(renderContentPromise).done(function($itemContent) {\r\n            that._postprocessRenderItem({\r\n                itemElement: $itemFrame,\r\n                itemContent: $itemContent,\r\n                itemData: itemData,\r\n                itemIndex: itemIndex\r\n            });\r\n            that._executeItemRenderAction(index, itemData, (0, _element.getPublicElement)($itemFrame))\r\n        });\r\n        return $itemFrame\r\n    },\r\n    _getItemContent: function($itemFrame) {\r\n        var $itemContent = $itemFrame.find(\".\" + ITEM_CONTENT_PLACEHOLDER_CLASS);\r\n        $itemContent.removeClass(ITEM_CONTENT_PLACEHOLDER_CLASS);\r\n        return $itemContent\r\n    },\r\n    _attachItemClickEvent: function(itemData, $itemElement) {\r\n        if (!itemData || !itemData.onClick) {\r\n            return\r\n        }\r\n        _events_engine.default.on($itemElement, _click.name, function(e) {\r\n            this._itemEventHandlerByHandler($itemElement, itemData.onClick, {\r\n                event: e\r\n            })\r\n        }.bind(this))\r\n    },\r\n    _renderItemContent: function(args) {\r\n        var itemTemplateName = this._getItemTemplateName(args);\r\n        var itemTemplate = this._getTemplate(itemTemplateName);\r\n        this._addItemContentClasses(args);\r\n        var $templateResult = (0, _renderer.default)(this._createItemByTemplate(itemTemplate, args));\r\n        if (!$templateResult.hasClass(TEMPLATE_WRAPPER_CLASS)) {\r\n            return args.container\r\n        }\r\n        return this._renderItemContentByNode(args, $templateResult)\r\n    },\r\n    _renderItemContentByNode: function(args, $node) {\r\n        (0, _renderer.default)(args.container).replaceWith($node);\r\n        args.container = (0, _element.getPublicElement)($node);\r\n        this._addItemContentClasses(args);\r\n        return $node\r\n    },\r\n    _addItemContentClasses: function(args) {\r\n        var classes = [ITEM_CLASS + CONTENT_CLASS_POSTFIX, args.contentClass];\r\n        (0, _renderer.default)(args.container).addClass(classes.join(\" \"))\r\n    },\r\n    _appendItemToContainer: function($container, $itemFrame, index) {\r\n        $itemFrame.appendTo($container)\r\n    },\r\n    _renderItemFrame: function(index, itemData, $container, $itemToReplace) {\r\n        var $itemFrame = (0, _renderer.default)(\"<div>\");\r\n        new this.constructor.ItemClass($itemFrame, this._itemOptions(), itemData || {});\r\n        if ($itemToReplace && $itemToReplace.length) {\r\n            $itemToReplace.replaceWith($itemFrame)\r\n        } else {\r\n            this._appendItemToContainer.call(this, $container, $itemFrame, index)\r\n        }\r\n        if (this.option(\"showItemDataTitle\")) {\r\n            var displayValue = this._displayGetter ? this._displayGetter(itemData) : itemData;\r\n            $itemFrame.attr(\"title\", displayValue)\r\n        }\r\n        return $itemFrame\r\n    },\r\n    _itemOptions: function() {\r\n        var that = this;\r\n        return {\r\n            watchMethod: function() {\r\n                return that.option(\"integrationOptions.watchMethod\")\r\n            },\r\n            owner: that,\r\n            fieldGetter: function(field) {\r\n                var expr = that.option(field + \"Expr\");\r\n                var getter = (0, _data.compileGetter)(expr);\r\n                return getter\r\n            }\r\n        }\r\n    },\r\n    _postprocessRenderItem: _common.noop,\r\n    _executeItemRenderAction: function(index, itemData, itemElement) {\r\n        this._getItemRenderAction()({\r\n            itemElement: itemElement,\r\n            itemIndex: index,\r\n            itemData: itemData\r\n        })\r\n    },\r\n    _setElementData: function(element, data, index) {\r\n        element.addClass([ITEM_CLASS, this._itemClass()].join(\" \")).data(this._itemDataKey(), data).data(this._itemIndexKey(), index)\r\n    },\r\n    _createItemRenderAction: function() {\r\n        return this._itemRenderAction = this._createActionByOption(\"onItemRendered\", {\r\n            element: this.element(),\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        })\r\n    },\r\n    _getItemRenderAction: function() {\r\n        return this._itemRenderAction || this._createItemRenderAction()\r\n    },\r\n    _getItemTemplateName: function(args) {\r\n        var data = args.itemData;\r\n        var templateProperty = args.templateProperty || this.option(\"itemTemplateProperty\");\r\n        var template = data && data[templateProperty];\r\n        return template || args.defaultTemplateName\r\n    },\r\n    _createItemByTemplate: function(itemTemplate, renderArgs) {\r\n        return itemTemplate.render({\r\n            model: renderArgs.itemData,\r\n            container: renderArgs.container,\r\n            index: renderArgs.index\r\n        })\r\n    },\r\n    _emptyMessageContainer: function() {\r\n        return this._itemContainer()\r\n    },\r\n    _renderEmptyMessage: function(items) {\r\n        items = items || this.option(\"items\");\r\n        var noDataText = this.option(\"noDataText\");\r\n        var hideNoData = !noDataText || items && items.length || this._isDataSourceLoading();\r\n        if (hideNoData && this._$noData) {\r\n            this._$noData.remove();\r\n            this._$noData = null;\r\n            this.setAria(\"label\", void 0)\r\n        }\r\n        if (!hideNoData) {\r\n            this._$noData = this._$noData || (0, _renderer.default)(\"<div>\").addClass(\"dx-empty-message\");\r\n            this._$noData.appendTo(this._emptyMessageContainer()).html(noDataText);\r\n            this.setAria(\"label\", noDataText)\r\n        }\r\n        this.$element().toggleClass(EMPTY_COLLECTION, !hideNoData)\r\n    },\r\n    _itemDXEventHandler: function(dxEvent, handlerOptionName, actionArgs, actionConfig) {\r\n        this._itemEventHandler(dxEvent.target, handlerOptionName, (0, _extend.extend)(actionArgs, {\r\n            event: dxEvent\r\n        }), actionConfig)\r\n    },\r\n    _itemEventHandler: function(initiator, handlerOptionName, actionArgs, actionConfig) {\r\n        var action = this._createActionByOption(handlerOptionName, (0, _extend.extend)({\r\n            validatingTargetName: \"itemElement\"\r\n        }, actionConfig));\r\n        return this._itemEventHandlerImpl(initiator, action, actionArgs)\r\n    },\r\n    _itemEventHandlerByHandler: function(initiator, handler, actionArgs, actionConfig) {\r\n        var action = this._createAction(handler, (0, _extend.extend)({\r\n            validatingTargetName: \"itemElement\"\r\n        }, actionConfig));\r\n        return this._itemEventHandlerImpl(initiator, action, actionArgs)\r\n    },\r\n    _itemEventHandlerImpl: function(initiator, action, actionArgs) {\r\n        var $itemElement = this._closestItemElement((0, _renderer.default)(initiator));\r\n        var args = (0, _extend.extend)({}, actionArgs);\r\n        return action((0, _extend.extend)(actionArgs, this._extendActionArgs($itemElement), args))\r\n    },\r\n    _extendActionArgs: function($itemElement) {\r\n        return {\r\n            itemElement: (0, _element.getPublicElement)($itemElement),\r\n            itemIndex: this._itemElements().index($itemElement),\r\n            itemData: this._getItemData($itemElement)\r\n        }\r\n    },\r\n    _closestItemElement: function($element) {\r\n        return (0, _renderer.default)($element).closest(this._itemSelector())\r\n    },\r\n    _getItemData: function(itemElement) {\r\n        return (0, _renderer.default)(itemElement).data(this._itemDataKey())\r\n    },\r\n    _getSummaryItemsWidth: function(items, includeMargin) {\r\n        var result = 0;\r\n        if (items) {\r\n            (0, _iterator.each)(items, function(_, item) {\r\n                result += (0, _renderer.default)(item).outerWidth(includeMargin || false)\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    getFocusedItemId: function() {\r\n        if (!this._focusedItemId) {\r\n            this._focusedItemId = \"dx-\" + new _guid.default\r\n        }\r\n        return this._focusedItemId\r\n    },\r\n    itemElements: function() {\r\n        return this._itemElements()\r\n    },\r\n    itemsContainer: function() {\r\n        return this._itemContainer()\r\n    }\r\n}).include(_data_helper.default);\r\nCollectionWidget.ItemClass = _item.default;\r\nvar _default = CollectionWidget;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/collection/ui.collection_widget.edit.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./ui.collection_widget.base\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _uiCollection_widgetEditStrategy = _interopRequireDefault(require(\"./ui.collection_widget.edit.strategy.plain\"));\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _data_source = require(\"../../data/data_source/data_source\");\r\nvar _utils = require(\"../../data/data_source/utils\");\r\nvar _selection = _interopRequireDefault(require(\"../selection/selection\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\nvar ITEM_DELETING_DATA_KEY = \"dxItemDeleting\";\r\nvar NOT_EXISTING_INDEX = -1;\r\nvar indexExists = function(index) {\r\n    return index !== NOT_EXISTING_INDEX\r\n};\r\nvar CollectionWidget = _uiCollection_widget.default.inherit({\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            selectionMode: \"none\",\r\n            selectionRequired: false,\r\n            selectionByClick: true,\r\n            selectedItems: [],\r\n            selectedItemKeys: [],\r\n            maxFilterLengthInRequest: 1500,\r\n            keyExpr: null,\r\n            selectedIndex: NOT_EXISTING_INDEX,\r\n            selectedItem: null,\r\n            onSelectionChanged: null,\r\n            onItemReordered: null,\r\n            onItemDeleting: null,\r\n            onItemDeleted: null\r\n        })\r\n    },\r\n    ctor: function(element, options) {\r\n        this._userOptions = options || {};\r\n        this.callBase(element, options)\r\n    },\r\n    _init: function() {\r\n        this._initEditStrategy();\r\n        this.callBase();\r\n        this._initKeyGetter();\r\n        this._initSelectionModule()\r\n    },\r\n    _initKeyGetter: function() {\r\n        this._keyGetter = (0, _data.compileGetter)(this.option(\"keyExpr\"))\r\n    },\r\n    _getKeysByItems: function(selectedItems) {\r\n        return this._editStrategy.getKeysByItems(selectedItems)\r\n    },\r\n    _getItemsByKeys: function(selectedItemKeys, selectedItems) {\r\n        return this._editStrategy.getItemsByKeys(selectedItemKeys, selectedItems)\r\n    },\r\n    _getKeyByIndex: function(index) {\r\n        return this._editStrategy.getKeyByIndex(index)\r\n    },\r\n    _getIndexByKey: function(key) {\r\n        return this._editStrategy.getIndexByKey(key)\r\n    },\r\n    _getIndexByItemData: function(itemData) {\r\n        return this._editStrategy.getIndexByItemData(itemData)\r\n    },\r\n    _isKeySpecified: function() {\r\n        return !!(this._dataSource && this._dataSource.key())\r\n    },\r\n    _getCombinedFilter: function() {\r\n        return this._dataSource && this._dataSource.filter()\r\n    },\r\n    key: function() {\r\n        if (this.option(\"keyExpr\")) {\r\n            return this.option(\"keyExpr\")\r\n        }\r\n        return this._dataSource && this._dataSource.key()\r\n    },\r\n    keyOf: function(item) {\r\n        var key = item;\r\n        var store = this._dataSource && this._dataSource.store();\r\n        if (this.option(\"keyExpr\")) {\r\n            key = this._keyGetter(item)\r\n        } else {\r\n            if (store) {\r\n                key = store.keyOf(item)\r\n            }\r\n        }\r\n        return key\r\n    },\r\n    _nullValueSelectionSupported: function() {\r\n        return false\r\n    },\r\n    _initSelectionModule: function() {\r\n        var that = this;\r\n        var itemsGetter = that._editStrategy.itemsGetter;\r\n        this._selection = new _selection.default({\r\n            allowNullValue: this._nullValueSelectionSupported(),\r\n            mode: this.option(\"selectionMode\"),\r\n            maxFilterLengthInRequest: this.option(\"maxFilterLengthInRequest\"),\r\n            equalByReference: !this._isKeySpecified(),\r\n            onSelectionChanged: function(args) {\r\n                if (args.addedItemKeys.length || args.removedItemKeys.length) {\r\n                    that.option(\"selectedItems\", that._getItemsByKeys(args.selectedItemKeys, args.selectedItems));\r\n                    that._updateSelectedItems(args)\r\n                }\r\n            },\r\n            filter: that._getCombinedFilter.bind(that),\r\n            totalCount: function() {\r\n                var items = that.option(\"items\");\r\n                var dataSource = that._dataSource;\r\n                return dataSource && dataSource.totalCount() >= 0 ? dataSource.totalCount() : items.length\r\n            },\r\n            key: that.key.bind(that),\r\n            keyOf: that.keyOf.bind(that),\r\n            load: function(options) {\r\n                if (that._dataSource) {\r\n                    var loadOptions = that._dataSource.loadOptions();\r\n                    options.customQueryParams = loadOptions.customQueryParams;\r\n                    options.userData = that._dataSource._userData\r\n                }\r\n                var store = that._dataSource && that._dataSource.store();\r\n                if (store) {\r\n                    return store.load(options).done(function(loadResult) {\r\n                        if (that._disposed) {\r\n                            return\r\n                        }\r\n                        var items = (0, _utils.normalizeLoadResult)(loadResult).data;\r\n                        that._dataSource._applyMapFunction(items)\r\n                    })\r\n                } else {\r\n                    return (new _deferred.Deferred).resolve(this.plainItems())\r\n                }\r\n            },\r\n            dataFields: function() {\r\n                return that._dataSource && that._dataSource.select()\r\n            },\r\n            plainItems: itemsGetter.bind(that._editStrategy)\r\n        })\r\n    },\r\n    _initEditStrategy: function() {\r\n        var Strategy = _uiCollection_widgetEditStrategy.default;\r\n        this._editStrategy = new Strategy(this)\r\n    },\r\n    _getSelectedItemIndices: function(keys) {\r\n        var that = this;\r\n        var indices = [];\r\n        keys = keys || this._selection.getSelectedItemKeys();\r\n        that._editStrategy.beginCache();\r\n        (0, _iterator.each)(keys, function(_, key) {\r\n            var selectedIndex = that._getIndexByKey(key);\r\n            if (indexExists(selectedIndex)) {\r\n                indices.push(selectedIndex)\r\n            }\r\n        });\r\n        that._editStrategy.endCache();\r\n        return indices\r\n    },\r\n    _initMarkup: function() {\r\n        var _this = this;\r\n        this._rendering = true;\r\n        if (!this._dataSource || !this._dataSource.isLoading()) {\r\n            this._syncSelectionOptions().done(function() {\r\n                return _this._normalizeSelectedItems()\r\n            })\r\n        }\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._rendering = false\r\n    },\r\n    _fireContentReadyAction: function() {\r\n        this._rendering = false;\r\n        this._rendered = true;\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _syncSelectionOptions: function(byOption) {\r\n        byOption = byOption || this._chooseSelectOption();\r\n        var selectedItem;\r\n        var selectedIndex;\r\n        var selectedItemKeys;\r\n        var selectedItems;\r\n        switch (byOption) {\r\n            case \"selectedIndex\":\r\n                selectedItem = this._editStrategy.getItemDataByIndex(this.option(\"selectedIndex\"));\r\n                if ((0, _type.isDefined)(selectedItem)) {\r\n                    this._setOptionWithoutOptionChange(\"selectedItems\", [selectedItem]);\r\n                    this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\r\n                    this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._editStrategy.getKeysByItems([selectedItem]))\r\n                } else {\r\n                    this._setOptionWithoutOptionChange(\"selectedItems\", []);\r\n                    this._setOptionWithoutOptionChange(\"selectedItemKeys\", []);\r\n                    this._setOptionWithoutOptionChange(\"selectedItem\", null)\r\n                }\r\n                break;\r\n            case \"selectedItems\":\r\n                selectedItems = this.option(\"selectedItems\") || [];\r\n                selectedIndex = selectedItems.length ? this._editStrategy.getIndexByItemData(selectedItems[0]) : NOT_EXISTING_INDEX;\r\n                if (this.option(\"selectionRequired\") && !indexExists(selectedIndex)) {\r\n                    return this._syncSelectionOptions(\"selectedIndex\")\r\n                }\r\n                this._setOptionWithoutOptionChange(\"selectedItem\", selectedItems[0]);\r\n                this._setOptionWithoutOptionChange(\"selectedIndex\", selectedIndex);\r\n                this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._editStrategy.getKeysByItems(selectedItems));\r\n                break;\r\n            case \"selectedItem\":\r\n                selectedItem = this.option(\"selectedItem\");\r\n                selectedIndex = this._editStrategy.getIndexByItemData(selectedItem);\r\n                if (this.option(\"selectionRequired\") && !indexExists(selectedIndex)) {\r\n                    return this._syncSelectionOptions(\"selectedIndex\")\r\n                }\r\n                if ((0, _type.isDefined)(selectedItem)) {\r\n                    this._setOptionWithoutOptionChange(\"selectedItems\", [selectedItem]);\r\n                    this._setOptionWithoutOptionChange(\"selectedIndex\", selectedIndex);\r\n                    this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._editStrategy.getKeysByItems([selectedItem]))\r\n                } else {\r\n                    this._setOptionWithoutOptionChange(\"selectedItems\", []);\r\n                    this._setOptionWithoutOptionChange(\"selectedItemKeys\", []);\r\n                    this._setOptionWithoutOptionChange(\"selectedIndex\", NOT_EXISTING_INDEX)\r\n                }\r\n                break;\r\n            case \"selectedItemKeys\":\r\n                selectedItemKeys = this.option(\"selectedItemKeys\");\r\n                if (this.option(\"selectionRequired\")) {\r\n                    var selectedItemIndex = this._getIndexByKey(selectedItemKeys[0]);\r\n                    if (!indexExists(selectedItemIndex)) {\r\n                        return this._syncSelectionOptions(\"selectedIndex\")\r\n                    }\r\n                }\r\n                return this._selection.setSelection(selectedItemKeys)\r\n        }\r\n        return (new _deferred.Deferred).resolve().promise()\r\n    },\r\n    _chooseSelectOption: function() {\r\n        var optionName = \"selectedIndex\";\r\n        var isOptionDefined = function(optionName) {\r\n            var optionValue = this.option(optionName);\r\n            var length = (0, _type.isDefined)(optionValue) && optionValue.length;\r\n            return length || optionName in this._userOptions\r\n        }.bind(this);\r\n        if (isOptionDefined(\"selectedItems\")) {\r\n            optionName = \"selectedItems\"\r\n        } else {\r\n            if (isOptionDefined(\"selectedItem\")) {\r\n                optionName = \"selectedItem\"\r\n            } else {\r\n                if (isOptionDefined(\"selectedItemKeys\")) {\r\n                    optionName = \"selectedItemKeys\"\r\n                }\r\n            }\r\n        }\r\n        return optionName\r\n    },\r\n    _compareKeys: function(oldKeys, newKeys) {\r\n        if (oldKeys.length !== newKeys.length) {\r\n            return false\r\n        }\r\n        for (var i = 0; i < newKeys.length; i++) {\r\n            if (oldKeys[i] !== newKeys[i]) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _normalizeSelectedItems: function() {\r\n        if (\"none\" === this.option(\"selectionMode\")) {\r\n            this._setOptionWithoutOptionChange(\"selectedItems\", []);\r\n            this._syncSelectionOptions(\"selectedItems\")\r\n        } else {\r\n            if (\"single\" === this.option(\"selectionMode\")) {\r\n                var newSelection = this.option(\"selectedItems\");\r\n                if (newSelection.length > 1 || !newSelection.length && this.option(\"selectionRequired\") && this.option(\"items\") && this.option(\"items\").length) {\r\n                    var currentSelection = this._selection.getSelectedItems();\r\n                    var normalizedSelection = void 0 === newSelection[0] ? currentSelection[0] : newSelection[0];\r\n                    if (void 0 === normalizedSelection) {\r\n                        normalizedSelection = this._editStrategy.itemsGetter()[0]\r\n                    }\r\n                    if (this.option(\"grouped\") && normalizedSelection && normalizedSelection.items) {\r\n                        normalizedSelection.items = [normalizedSelection.items[0]]\r\n                    }\r\n                    this._selection.setSelection(this._getKeysByItems([normalizedSelection]));\r\n                    this._setOptionWithoutOptionChange(\"selectedItems\", [normalizedSelection]);\r\n                    return this._syncSelectionOptions(\"selectedItems\")\r\n                } else {\r\n                    this._selection.setSelection(this._getKeysByItems(newSelection))\r\n                }\r\n            } else {\r\n                var newKeys = this._getKeysByItems(this.option(\"selectedItems\"));\r\n                var oldKeys = this._selection.getSelectedItemKeys();\r\n                if (!this._compareKeys(oldKeys, newKeys)) {\r\n                    this._selection.setSelection(newKeys)\r\n                }\r\n            }\r\n        }\r\n        return (new _deferred.Deferred).resolve().promise()\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        var _arguments = arguments,\r\n            _this2 = this;\r\n        var itemSelectPromise = (new _deferred.Deferred).resolve();\r\n        var callBase = this.callBase;\r\n        this._createAction(function(e) {\r\n            var _this$_itemSelectHand;\r\n            itemSelectPromise = null !== (_this$_itemSelectHand = this._itemSelectHandler(e.event)) && void 0 !== _this$_itemSelectHand ? _this$_itemSelectHand : itemSelectPromise\r\n        }.bind(this), {\r\n            validatingTargetName: \"itemElement\"\r\n        })({\r\n            itemElement: (0, _renderer.default)(e.currentTarget),\r\n            event: e\r\n        });\r\n        itemSelectPromise.always(function() {\r\n            callBase.apply(_this2, _arguments)\r\n        })\r\n    },\r\n    _itemSelectHandler: function(e) {\r\n        var _itemSelectPromise;\r\n        var itemSelectPromise;\r\n        if (!this.option(\"selectionByClick\")) {\r\n            return\r\n        }\r\n        var $itemElement = e.currentTarget;\r\n        if (this.isItemSelected($itemElement)) {\r\n            this.unselectItem(e.currentTarget)\r\n        } else {\r\n            itemSelectPromise = this.selectItem(e.currentTarget)\r\n        }\r\n        return null === (_itemSelectPromise = itemSelectPromise) || void 0 === _itemSelectPromise ? void 0 : _itemSelectPromise.promise()\r\n    },\r\n    _selectedItemElement: function(index) {\r\n        return this._itemElements().eq(index)\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        if (\"none\" !== this.option(\"selectionMode\")) {\r\n            var $itemElement = (0, _renderer.default)(args.itemElement);\r\n            var normalizedItemIndex = this._editStrategy.getNormalizedIndex($itemElement);\r\n            var isItemSelected = this._isItemSelected(normalizedItemIndex);\r\n            this._processSelectableItem($itemElement, isItemSelected)\r\n        }\r\n    },\r\n    _processSelectableItem: function($itemElement, isSelected) {\r\n        $itemElement.toggleClass(this._selectedItemClass(), isSelected);\r\n        this._setAriaSelected($itemElement, String(isSelected))\r\n    },\r\n    _updateSelectedItems: function(args) {\r\n        var that = this;\r\n        var addedItemKeys = args.addedItemKeys;\r\n        var removedItemKeys = args.removedItemKeys;\r\n        if (that._rendered && (addedItemKeys.length || removedItemKeys.length)) {\r\n            var selectionChangePromise = that._selectionChangePromise;\r\n            if (!that._rendering) {\r\n                var addedSelection = [];\r\n                var normalizedIndex;\r\n                var removedSelection = [];\r\n                that._editStrategy.beginCache();\r\n                for (var i = 0; i < addedItemKeys.length; i++) {\r\n                    normalizedIndex = that._getIndexByKey(addedItemKeys[i]);\r\n                    addedSelection.push(normalizedIndex);\r\n                    that._addSelection(normalizedIndex)\r\n                }\r\n                for (var _i = 0; _i < removedItemKeys.length; _i++) {\r\n                    normalizedIndex = that._getIndexByKey(removedItemKeys[_i]);\r\n                    removedSelection.push(normalizedIndex);\r\n                    that._removeSelection(normalizedIndex)\r\n                }\r\n                that._editStrategy.endCache();\r\n                that._updateSelection(addedSelection, removedSelection)\r\n            }(0, _deferred.when)(selectionChangePromise).done(function() {\r\n                that._fireSelectionChangeEvent(args.addedItems, args.removedItems)\r\n            })\r\n        }\r\n    },\r\n    _fireSelectionChangeEvent: function(addedItems, removedItems) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: addedItems,\r\n            removedItems: removedItems\r\n        })\r\n    },\r\n    _updateSelection: _common.noop,\r\n    _setAriaSelected: function($target, value) {\r\n        this.setAria(\"selected\", value, $target)\r\n    },\r\n    _removeSelection: function(normalizedIndex) {\r\n        var $itemElement = this._editStrategy.getItemElement(normalizedIndex);\r\n        if (indexExists(normalizedIndex)) {\r\n            this._processSelectableItem($itemElement, false);\r\n            _events_engine.default.triggerHandler($itemElement, \"stateChanged\", false)\r\n        }\r\n    },\r\n    _addSelection: function(normalizedIndex) {\r\n        var $itemElement = this._editStrategy.getItemElement(normalizedIndex);\r\n        if (indexExists(normalizedIndex)) {\r\n            this._processSelectableItem($itemElement, true);\r\n            _events_engine.default.triggerHandler($itemElement, \"stateChanged\", true)\r\n        }\r\n    },\r\n    _isItemSelected: function(index) {\r\n        var key = this._getKeyByIndex(index);\r\n        return this._selection.isItemSelected(key, {\r\n            checkPending: true\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var _this3 = this;\r\n        switch (args.name) {\r\n            case \"selectionMode\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dataSource\":\r\n                if (!args.value || Array.isArray(args.value) && !args.value.length) {\r\n                    this.option(\"selectedItemKeys\", [])\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            case \"selectedIndex\":\r\n            case \"selectedItem\":\r\n            case \"selectedItems\":\r\n            case \"selectedItemKeys\":\r\n                this._syncSelectionOptions(args.name).done(function() {\r\n                    return _this3._normalizeSelectedItems()\r\n                });\r\n                break;\r\n            case \"keyExpr\":\r\n                this._initKeyGetter();\r\n                break;\r\n            case \"selectionRequired\":\r\n                this._normalizeSelectedItems();\r\n                break;\r\n            case \"selectionByClick\":\r\n            case \"onSelectionChanged\":\r\n            case \"onItemDeleting\":\r\n            case \"onItemDeleted\":\r\n            case \"onItemReordered\":\r\n            case \"maxFilterLengthInRequest\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clearSelectedItems: function() {\r\n        this._setOptionWithoutOptionChange(\"selectedItems\", []);\r\n        this._syncSelectionOptions(\"selectedItems\")\r\n    },\r\n    _waitDeletingPrepare: function($itemElement) {\r\n        if ($itemElement.data(ITEM_DELETING_DATA_KEY)) {\r\n            return (new _deferred.Deferred).resolve().promise()\r\n        }\r\n        $itemElement.data(ITEM_DELETING_DATA_KEY, true);\r\n        var deferred = new _deferred.Deferred;\r\n        var deletingActionArgs = {\r\n            cancel: false\r\n        };\r\n        var deletePromise = this._itemEventHandler($itemElement, \"onItemDeleting\", deletingActionArgs, {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        (0, _deferred.when)(deletePromise).always(function(value) {\r\n            var deletePromiseExists = !deletePromise;\r\n            var deletePromiseResolved = !deletePromiseExists && \"resolved\" === deletePromise.state();\r\n            var argumentsSpecified = !!arguments.length;\r\n            var shouldDelete = deletePromiseExists || deletePromiseResolved && !argumentsSpecified || deletePromiseResolved && value;\r\n            (0, _deferred.when)((0, _deferred.fromPromise)(deletingActionArgs.cancel)).always(function() {\r\n                $itemElement.data(ITEM_DELETING_DATA_KEY, false)\r\n            }).done(function(cancel) {\r\n                shouldDelete && !cancel ? deferred.resolve() : deferred.reject()\r\n            }).fail(deferred.reject)\r\n        }.bind(this));\r\n        return deferred.promise()\r\n    },\r\n    _deleteItemFromDS: function($item) {\r\n        if (!this._dataSource) {\r\n            return (new _deferred.Deferred).resolve().promise()\r\n        }\r\n        var deferred = new _deferred.Deferred;\r\n        var disabledState = this.option(\"disabled\");\r\n        var dataStore = this._dataSource.store();\r\n        this.option(\"disabled\", true);\r\n        if (!dataStore.remove) {\r\n            throw _ui.default.Error(\"E1011\")\r\n        }\r\n        dataStore.remove(dataStore.keyOf(this._getItemData($item))).done(function(key) {\r\n            if (void 0 !== key) {\r\n                deferred.resolve()\r\n            } else {\r\n                deferred.reject()\r\n            }\r\n        }).fail(function() {\r\n            deferred.reject()\r\n        });\r\n        deferred.always(function() {\r\n            this.option(\"disabled\", disabledState)\r\n        }.bind(this));\r\n        return deferred\r\n    },\r\n    _tryRefreshLastPage: function() {\r\n        var deferred = new _deferred.Deferred;\r\n        if (this._isLastPage() || this.option(\"grouped\")) {\r\n            deferred.resolve()\r\n        } else {\r\n            this._refreshLastPage().done(function() {\r\n                deferred.resolve()\r\n            })\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    _refreshLastPage: function() {\r\n        this._expectLastItemLoading();\r\n        return this._dataSource.load()\r\n    },\r\n    _updateSelectionAfterDelete: function(index) {\r\n        var key = this._getKeyByIndex(index);\r\n        this._selection.deselect([key])\r\n    },\r\n    _updateIndicesAfterIndex: function(index) {\r\n        var itemElements = this._itemElements();\r\n        for (var i = index + 1; i < itemElements.length; i++) {\r\n            (0, _renderer.default)(itemElements[i]).data(this._itemIndexKey(), i - 1)\r\n        }\r\n    },\r\n    _simulateOptionChange: function(optionName) {\r\n        var optionValue = this.option(optionName);\r\n        if (optionValue instanceof _data_source.DataSource) {\r\n            return\r\n        }\r\n        this._optionChangedAction({\r\n            name: optionName,\r\n            fullName: optionName,\r\n            value: optionValue\r\n        })\r\n    },\r\n    isItemSelected: function(itemElement) {\r\n        return this._isItemSelected(this._editStrategy.getNormalizedIndex(itemElement))\r\n    },\r\n    selectItem: function(itemElement) {\r\n        if (\"none\" === this.option(\"selectionMode\")) {\r\n            return\r\n        }\r\n        var itemIndex = this._editStrategy.getNormalizedIndex(itemElement);\r\n        if (!indexExists(itemIndex)) {\r\n            return\r\n        }\r\n        var key = this._getKeyByIndex(itemIndex);\r\n        if (this._selection.isItemSelected(key)) {\r\n            return\r\n        }\r\n        if (\"single\" === this.option(\"selectionMode\")) {\r\n            return this._selection.setSelection([key])\r\n        } else {\r\n            var selectedItemKeys = this.option(\"selectedItemKeys\") || [];\r\n            return this._selection.setSelection([].concat(_toConsumableArray(selectedItemKeys), [key]), [key])\r\n        }\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        var itemIndex = this._editStrategy.getNormalizedIndex(itemElement);\r\n        if (!indexExists(itemIndex)) {\r\n            return\r\n        }\r\n        var selectedItemKeys = this._selection.getSelectedItemKeys();\r\n        if (this.option(\"selectionRequired\") && selectedItemKeys.length <= 1) {\r\n            return\r\n        }\r\n        var key = this._getKeyByIndex(itemIndex);\r\n        if (!this._selection.isItemSelected(key, {\r\n                checkPending: true\r\n            })) {\r\n            return\r\n        }\r\n        this._selection.deselect([key])\r\n    },\r\n    _deleteItemElementByIndex: function(index) {\r\n        this._updateSelectionAfterDelete(index);\r\n        this._updateIndicesAfterIndex(index);\r\n        this._editStrategy.deleteItemAtIndex(index)\r\n    },\r\n    _afterItemElementDeleted: function($item, deletedActionArgs) {\r\n        var changingOption = this._dataSource ? \"dataSource\" : \"items\";\r\n        this._simulateOptionChange(changingOption);\r\n        this._itemEventHandler($item, \"onItemDeleted\", deletedActionArgs, {\r\n            beforeExecute: function() {\r\n                $item.remove()\r\n            },\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._renderEmptyMessage()\r\n    },\r\n    deleteItem: function(itemElement) {\r\n        var that = this;\r\n        var deferred = new _deferred.Deferred;\r\n        var $item = this._editStrategy.getItemElement(itemElement);\r\n        var index = this._editStrategy.getNormalizedIndex(itemElement);\r\n        var itemResponseWaitClass = this._itemResponseWaitClass();\r\n        if (indexExists(index)) {\r\n            this._waitDeletingPrepare($item).done(function() {\r\n                $item.addClass(itemResponseWaitClass);\r\n                var deletedActionArgs = that._extendActionArgs($item);\r\n                that._deleteItemFromDS($item).done(function() {\r\n                    that._deleteItemElementByIndex(index);\r\n                    that._afterItemElementDeleted($item, deletedActionArgs);\r\n                    that._tryRefreshLastPage().done(function() {\r\n                        deferred.resolveWith(that)\r\n                    })\r\n                }).fail(function() {\r\n                    $item.removeClass(itemResponseWaitClass);\r\n                    deferred.rejectWith(that)\r\n                })\r\n            }).fail(function() {\r\n                deferred.rejectWith(that)\r\n            })\r\n        } else {\r\n            deferred.rejectWith(that)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    reorderItem: function(itemElement, toItemElement) {\r\n        var deferred = new _deferred.Deferred;\r\n        var that = this;\r\n        var strategy = this._editStrategy;\r\n        var $movingItem = strategy.getItemElement(itemElement);\r\n        var $destinationItem = strategy.getItemElement(toItemElement);\r\n        var movingIndex = strategy.getNormalizedIndex(itemElement);\r\n        var destinationIndex = strategy.getNormalizedIndex(toItemElement);\r\n        var changingOption = this._dataSource ? \"dataSource\" : \"items\";\r\n        var canMoveItems = indexExists(movingIndex) && indexExists(destinationIndex) && movingIndex !== destinationIndex;\r\n        if (canMoveItems) {\r\n            deferred.resolveWith(this)\r\n        } else {\r\n            deferred.rejectWith(this)\r\n        }\r\n        return deferred.promise().done(function() {\r\n            $destinationItem[strategy.itemPlacementFunc(movingIndex, destinationIndex)]($movingItem);\r\n            strategy.moveItemAtIndexToIndex(movingIndex, destinationIndex);\r\n            this._updateIndicesAfterIndex(movingIndex);\r\n            that.option(\"selectedItems\", that._getItemsByKeys(that._selection.getSelectedItemKeys(), that._selection.getSelectedItems()));\r\n            if (\"items\" === changingOption) {\r\n                that._simulateOptionChange(changingOption)\r\n            }\r\n            that._itemEventHandler($movingItem, \"onItemReordered\", {\r\n                fromIndex: strategy.getIndex(movingIndex),\r\n                toIndex: strategy.getIndex(destinationIndex)\r\n            }, {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            })\r\n        })\r\n    }\r\n});\r\nvar _default = CollectionWidget;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/collection/ui.collection_widget.edit.strategy.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar abstract = _class.default.abstract;\r\nvar EditStrategy = _class.default.inherit({\r\n    ctor: function(collectionWidget) {\r\n        this._collectionWidget = collectionWidget\r\n    },\r\n    getIndexByItemData: abstract,\r\n    getItemDataByIndex: abstract,\r\n    getKeysByItems: abstract,\r\n    getItemsByKeys: abstract,\r\n    itemsGetter: abstract,\r\n    getKeyByIndex: function(index) {\r\n        var resultIndex = this._denormalizeItemIndex(index);\r\n        return this.getKeysByItems([this.getItemDataByIndex(resultIndex)])[0]\r\n    },\r\n    _equalKeys: function(key1, key2) {\r\n        if (this._collectionWidget._isKeySpecified()) {\r\n            return (0, _common.equalByValue)(key1, key2)\r\n        } else {\r\n            return key1 === key2\r\n        }\r\n    },\r\n    beginCache: function() {\r\n        this._cache = {}\r\n    },\r\n    endCache: function() {\r\n        this._cache = null\r\n    },\r\n    getIndexByKey: abstract,\r\n    getNormalizedIndex: function(value) {\r\n        if (this._isNormalizedItemIndex(value)) {\r\n            return value\r\n        }\r\n        if (this._isItemIndex(value)) {\r\n            return this._normalizeItemIndex(value)\r\n        }\r\n        if (this._isNode(value)) {\r\n            return this._getNormalizedItemIndex(value)\r\n        }\r\n        return this._normalizeItemIndex(this.getIndexByItemData(value))\r\n    },\r\n    getIndex: function(value) {\r\n        if (this._isNormalizedItemIndex(value)) {\r\n            return this._denormalizeItemIndex(value)\r\n        }\r\n        if (this._isItemIndex(value)) {\r\n            return value\r\n        }\r\n        if (this._isNode(value)) {\r\n            return this._denormalizeItemIndex(this._getNormalizedItemIndex(value))\r\n        }\r\n        return this.getIndexByItemData(value)\r\n    },\r\n    getItemElement: function(value) {\r\n        if (this._isNormalizedItemIndex(value)) {\r\n            return this._getItemByNormalizedIndex(value)\r\n        }\r\n        if (this._isItemIndex(value)) {\r\n            return this._getItemByNormalizedIndex(this._normalizeItemIndex(value))\r\n        }\r\n        if (this._isNode(value)) {\r\n            return (0, _renderer.default)(value)\r\n        }\r\n        var normalizedItemIndex = this._normalizeItemIndex(this.getIndexByItemData(value));\r\n        return this._getItemByNormalizedIndex(normalizedItemIndex)\r\n    },\r\n    _isNode: function(el) {\r\n        return _dom_adapter.default.isNode(el && (0, _type.isRenderer)(el) ? el.get(0) : el)\r\n    },\r\n    deleteItemAtIndex: abstract,\r\n    itemPlacementFunc: function(movingIndex, destinationIndex) {\r\n        return this._itemsFromSameParent(movingIndex, destinationIndex) && movingIndex < destinationIndex ? \"after\" : \"before\"\r\n    },\r\n    moveItemAtIndexToIndex: abstract,\r\n    _isNormalizedItemIndex: function(index) {\r\n        return \"number\" === typeof index && Math.round(index) === index\r\n    },\r\n    _isItemIndex: abstract,\r\n    _getNormalizedItemIndex: abstract,\r\n    _normalizeItemIndex: abstract,\r\n    _denormalizeItemIndex: abstract,\r\n    _getItemByNormalizedIndex: abstract,\r\n    _itemsFromSameParent: abstract\r\n});\r\nvar _default = EditStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/collection/ui.collection_widget.edit.strategy.plain.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _uiCollection_widgetEdit = _interopRequireDefault(require(\"./ui.collection_widget.edit.strategy\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nvar PlainEditStrategy = _uiCollection_widgetEdit.default.inherit({\r\n    _getPlainItems: function() {\r\n        return this._collectionWidget.option(\"items\") || []\r\n    },\r\n    getIndexByItemData: function(itemData) {\r\n        var keyOf = this._collectionWidget.keyOf.bind(this._collectionWidget);\r\n        if (keyOf) {\r\n            return this.getIndexByKey(keyOf(itemData))\r\n        } else {\r\n            return (0, _array.inArray)(itemData, this._getPlainItems())\r\n        }\r\n    },\r\n    getItemDataByIndex: function(index) {\r\n        return this._getPlainItems()[index]\r\n    },\r\n    deleteItemAtIndex: function(index) {\r\n        this._getPlainItems().splice(index, 1)\r\n    },\r\n    itemsGetter: function() {\r\n        return this._getPlainItems()\r\n    },\r\n    getKeysByItems: function(items) {\r\n        var keyOf = this._collectionWidget.keyOf.bind(this._collectionWidget);\r\n        var result = items;\r\n        if (keyOf) {\r\n            result = [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                result.push(keyOf(items[i]))\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    getIndexByKey: function(key) {\r\n        var cache = this._cache;\r\n        var keys = cache && cache.keys || this.getKeysByItems(this._getPlainItems());\r\n        if (cache && !cache.keys) {\r\n            cache.keys = keys\r\n        }\r\n        if (\"object\" === _typeof(key)) {\r\n            for (var i = 0, length = keys.length; i < length; i++) {\r\n                if (this._equalKeys(key, keys[i])) {\r\n                    return i\r\n                }\r\n            }\r\n        } else {\r\n            return keys.indexOf(key)\r\n        }\r\n        return -1\r\n    },\r\n    getItemsByKeys: function(keys, items) {\r\n        return (items || keys).slice()\r\n    },\r\n    moveItemAtIndexToIndex: function(movingIndex, destinationIndex) {\r\n        var items = this._getPlainItems();\r\n        var movedItemData = items[movingIndex];\r\n        items.splice(movingIndex, 1);\r\n        items.splice(destinationIndex, 0, movedItemData)\r\n    },\r\n    _isItemIndex: function(index) {\r\n        return \"number\" === typeof index && Math.round(index) === index\r\n    },\r\n    _getNormalizedItemIndex: function(itemElement) {\r\n        return this._collectionWidget._itemElements().index(itemElement)\r\n    },\r\n    _normalizeItemIndex: function(index) {\r\n        return index\r\n    },\r\n    _denormalizeItemIndex: function(index) {\r\n        return index\r\n    },\r\n    _getItemByNormalizedIndex: function(index) {\r\n        return index > -1 ? this._collectionWidget._itemElements().eq(index) : null\r\n    },\r\n    _itemsFromSameParent: function() {\r\n        return true\r\n    }\r\n});\r\nvar _default = PlainEditStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/collection/ui.collection_widget.live_update.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./ui.collection_widget.edit\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _array_utils = require(\"../../data/array_utils\");\r\nvar _utils = _interopRequireDefault(require(\"../../data/utils\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _array_compare = require(\"../../core/utils/array_compare\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _common = require(\"../../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar PRIVATE_KEY_FIELD = \"__dx_key__\";\r\nvar _default = _uiCollection_widget.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            repaintChangesOnly: false\r\n        })\r\n    },\r\n    ctor: function() {\r\n        var _this = this;\r\n        this.callBase.apply(this, arguments);\r\n        this._customizeStoreLoadOptions = function(e) {\r\n            var dataSource = _this._dataSource;\r\n            if (dataSource && !dataSource.isLoaded()) {\r\n                _this._correctionIndex = 0\r\n            }\r\n            if (_this._correctionIndex && e.storeLoadOptions) {\r\n                e.storeLoadOptions.skip += _this._correctionIndex\r\n            }\r\n        }, this._dataSource && this._dataSource.on(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptions)\r\n    },\r\n    reload: function() {\r\n        this._correctionIndex = 0\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._refreshItemsCache();\r\n        this._correctionIndex = 0\r\n    },\r\n    _findItemElementByKey: function(key) {\r\n        var _this2 = this;\r\n        var result = (0, _renderer.default)();\r\n        var keyExpr = this.key();\r\n        this.itemElements().each(function(_, item) {\r\n            var $item = (0, _renderer.default)(item);\r\n            var itemData = _this2._getItemData($item);\r\n            if (keyExpr ? _utils.default.keysEqual(keyExpr, _this2.keyOf(itemData), key) : _this2._isItemEquals(itemData, key)) {\r\n                result = $item;\r\n                return false\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    _dataSourceChangedHandler: function(newItems, e) {\r\n        if (null !== e && void 0 !== e && e.changes) {\r\n            this._modifyByChanges(e.changes)\r\n        } else {\r\n            this.callBase(newItems, e);\r\n            this._refreshItemsCache()\r\n        }\r\n    },\r\n    _isItemEquals: function(item1, item2) {\r\n        if (item1 && item1[PRIVATE_KEY_FIELD]) {\r\n            item1 = item1.data\r\n        }\r\n        try {\r\n            return JSON.stringify(item1) === JSON.stringify(item2)\r\n        } catch (e) {\r\n            return item1 === item2\r\n        }\r\n    },\r\n    _isItemStrictEquals: function(item1, item2) {\r\n        return this._isItemEquals(item1, item2)\r\n    },\r\n    _shouldAddNewGroup: function(changes, items) {\r\n        var result = false;\r\n        if (this.option(\"grouped\")) {\r\n            if (!changes.length) {\r\n                result = true\r\n            }(0, _iterator.each)(changes, function(i, change) {\r\n                if (\"insert\" === change.type) {\r\n                    result = true;\r\n                    (0, _iterator.each)(items, function(_, item) {\r\n                        if (void 0 !== change.data.key && change.data.key === item.key) {\r\n                            result = false;\r\n                            return false\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _partialRefresh: function() {\r\n        var _this3 = this;\r\n        if (this.option(\"repaintChangesOnly\")) {\r\n            var keyOf = function(data) {\r\n                if (data && void 0 !== data[PRIVATE_KEY_FIELD]) {\r\n                    return data[PRIVATE_KEY_FIELD]\r\n                }\r\n                return _this3.keyOf(data)\r\n            };\r\n            var result = (0, _array_compare.findChanges)(this._itemsCache, this._editStrategy.itemsGetter(), keyOf, this._isItemStrictEquals.bind(this));\r\n            if (result && this._itemsCache.length && !this._shouldAddNewGroup(result, this._itemsCache)) {\r\n                this._modifyByChanges(result, true);\r\n                this._renderEmptyMessage();\r\n                return true\r\n            } else {\r\n                this._refreshItemsCache()\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _refreshItemsCache: function() {\r\n        if (this.option(\"repaintChangesOnly\")) {\r\n            var items = this._editStrategy.itemsGetter();\r\n            try {\r\n                this._itemsCache = (0, _extend.extend)(true, [], items);\r\n                if (!this.key()) {\r\n                    this._itemsCache = this._itemsCache.map(function(itemCache, index) {\r\n                        var _ref;\r\n                        return _ref = {}, _defineProperty(_ref, PRIVATE_KEY_FIELD, items[index]), _defineProperty(_ref, \"data\", itemCache), _ref\r\n                    })\r\n                }\r\n            } catch (e) {\r\n                this._itemsCache = (0, _extend.extend)([], items)\r\n            }\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this._dataSource && this._dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptions);\r\n        this.callBase()\r\n    },\r\n    _updateByChange: function(keyInfo, items, change, isPartialRefresh) {\r\n        var _this4 = this;\r\n        if (isPartialRefresh) {\r\n            this._renderItem(change.index, change.data, null, this._findItemElementByKey(change.key))\r\n        } else {\r\n            var changedItem = items[(0, _array_utils.indexByKey)(keyInfo, items, change.key)];\r\n            if (changedItem) {\r\n                (0, _array_utils.update)(keyInfo, items, change.key, change.data).done(function() {\r\n                    _this4._renderItem(items.indexOf(changedItem), changedItem, null, _this4._findItemElementByKey(change.key))\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _insertByChange: function(keyInfo, items, change, isPartialRefresh) {\r\n        var _this5 = this;\r\n        (0, _deferred.when)(isPartialRefresh || (0, _array_utils.insert)(keyInfo, items, change.data, change.index)).done(function() {\r\n            var _change$index;\r\n            _this5._beforeItemElementInserted(change);\r\n            var $itemContainer = _this5._getItemContainer(change.data);\r\n            _this5._renderItem(null !== (_change$index = change.index) && void 0 !== _change$index ? _change$index : items.length, change.data, $itemContainer);\r\n            _this5._afterItemElementInserted();\r\n            _this5._correctionIndex++\r\n        })\r\n    },\r\n    _getItemContainer: function(changeData) {\r\n        return this._itemContainer()\r\n    },\r\n    _updateSelectionAfterRemoveByChange: function(removeIndex) {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        if (selectedIndex > removeIndex) {\r\n            this.option(\"selectedIndex\", selectedIndex - 1)\r\n        } else {\r\n            if (selectedIndex === removeIndex && 1 === this.option(\"selectedItems\").length) {\r\n                this.option(\"selectedItems\", [])\r\n            } else {\r\n                this._normalizeSelectedItems()\r\n            }\r\n        }\r\n    },\r\n    _beforeItemElementInserted: function(change) {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        if (change.index <= selectedIndex) {\r\n            this.option(\"selectedIndex\", selectedIndex + 1)\r\n        }\r\n    },\r\n    _afterItemElementInserted: _common.noop,\r\n    _removeByChange: function(keyInfo, items, change, isPartialRefresh) {\r\n        var _this6 = this;\r\n        var index = isPartialRefresh ? change.index : (0, _array_utils.indexByKey)(keyInfo, items, change.key);\r\n        var removedItem = isPartialRefresh ? change.oldItem : items[index];\r\n        if (removedItem) {\r\n            var $removedItemElement = this._findItemElementByKey(change.key);\r\n            var deletedActionArgs = this._extendActionArgs($removedItemElement);\r\n            this._waitDeletingPrepare($removedItemElement).done(function() {\r\n                if (isPartialRefresh) {\r\n                    _this6._updateIndicesAfterIndex(index - 1);\r\n                    _this6._afterItemElementDeleted($removedItemElement, deletedActionArgs);\r\n                    _this6._updateSelectionAfterRemoveByChange(index)\r\n                } else {\r\n                    _this6._deleteItemElementByIndex(index);\r\n                    _this6._afterItemElementDeleted($removedItemElement, deletedActionArgs)\r\n                }\r\n            });\r\n            this._correctionIndex--\r\n        }\r\n    },\r\n    _modifyByChanges: function(changes, isPartialRefresh) {\r\n        var _this7 = this;\r\n        var items = this._editStrategy.itemsGetter();\r\n        var keyInfo = {\r\n            key: this.key.bind(this),\r\n            keyOf: this.keyOf.bind(this)\r\n        };\r\n        var dataSource = this._dataSource;\r\n        var paginate = dataSource && dataSource.paginate();\r\n        var group = dataSource && dataSource.group();\r\n        if (paginate || group) {\r\n            changes = changes.filter(function(item) {\r\n                return \"insert\" !== item.type || void 0 !== item.index\r\n            })\r\n        }\r\n        changes.forEach(function(change) {\r\n            return _this7[\"_\".concat(change.type, \"ByChange\")](keyInfo, items, change, isPartialRefresh)\r\n        });\r\n        this._renderedItemsCount = items.length;\r\n        this._refreshItemsCache();\r\n        this._fireContentReadyAction()\r\n    },\r\n    _appendItemToContainer: function($container, $itemFrame, index) {\r\n        var nextSiblingElement = $container.children(this._itemSelector()).get(index);\r\n        _dom_adapter.default.insertElement($container.get(0), $itemFrame.get(0), nextSiblingElement)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"items\":\r\n                var isItemsUpdated = this._partialRefresh(args.value);\r\n                if (!isItemsUpdated) {\r\n                    this.callBase(args)\r\n                }\r\n                break;\r\n            case \"dataSource\":\r\n                if (!this.option(\"repaintChangesOnly\") || !args.value) {\r\n                    this.option(\"items\", [])\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            case \"repaintChangesOnly\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/context_menu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _ui = _interopRequireDefault(require(\"./context_menu/ui.context_menu\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _ui.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/context_menu/ui.context_menu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _element = require(\"../../core/element\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _position = _interopRequireDefault(require(\"../../animation/position\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _overlay = _interopRequireDefault(require(\"../overlay\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.menu_base\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _contextmenu = require(\"../../events/contextmenu\");\r\nvar _hold = _interopRequireDefault(require(\"../../events/hold\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\r\nvar DX_MENU_PHONE_CLASS = \"dx-menu-phone-overlay\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_WRAPPER_CLASS = DX_MENU_ITEM_CLASS + \"-wrapper\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nvar DX_HAS_CONTEXT_MENU_CLASS = \"dx-has-context-menu\";\r\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar DX_STATE_FOCUSED_CLASS = \"dx-state-focused\";\r\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar FOCUS_FIRST = \"first\";\r\nvar FOCUS_LAST = \"last\";\r\nvar ACTIONS = [\"onShowing\", \"onShown\", \"onSubmenuCreated\", \"onHiding\", \"onHidden\", \"onPositioning\", \"onLeftFirstItem\", \"onLeftLastItem\", \"onCloseRootSubmenu\", \"onExpandLastSubmenu\"];\r\nvar LOCAL_SUBMENU_DIRECTIONS = [FOCUS_UP, FOCUS_DOWN, FOCUS_FIRST, FOCUS_LAST];\r\nvar DEFAULT_SHOW_EVENT = \"dxcontextmenu\";\r\nvar ContextMenu = function(_MenuBase) {\r\n    _inheritsLoose(ContextMenu, _MenuBase);\r\n\r\n    function ContextMenu() {\r\n        return _MenuBase.apply(this, arguments) || this\r\n    }\r\n    var _proto = ContextMenu.prototype;\r\n    _proto.getShowEvent = function(showEventOption) {\r\n        var result = null;\r\n        if ((0, _type.isObject)(showEventOption)) {\r\n            if (null !== showEventOption.name) {\r\n                result = showEventOption.name || DEFAULT_SHOW_EVENT\r\n            }\r\n        } else {\r\n            result = showEventOption\r\n        }\r\n        return result\r\n    };\r\n    _proto.getShowDelay = function(showEventOption) {\r\n        return (0, _type.isObject)(showEventOption) && showEventOption.delay\r\n    };\r\n    _proto._getDefaultOptions = function() {\r\n        return (0, _extend.extend)(_MenuBase.prototype._getDefaultOptions.call(this), {\r\n            showEvent: DEFAULT_SHOW_EVENT,\r\n            closeOnOutsideClick: true,\r\n            position: {\r\n                at: \"top left\",\r\n                my: \"top left\"\r\n            },\r\n            onShowing: null,\r\n            onShown: null,\r\n            onSubmenuCreated: null,\r\n            onHiding: null,\r\n            onHidden: null,\r\n            onPositioning: null,\r\n            submenuDirection: \"auto\",\r\n            visible: false,\r\n            target: void 0,\r\n            onLeftFirstItem: null,\r\n            onLeftLastItem: null,\r\n            onCloseRootSubmenu: null,\r\n            onExpandLastSubmenu: null\r\n        })\r\n    };\r\n    _proto._defaultOptionsRules = function() {\r\n        return _MenuBase.prototype._defaultOptionsRules.call(this).concat([{\r\n            device: function() {\r\n                return !(0, _window.hasWindow)()\r\n            },\r\n            options: {\r\n                animation: null\r\n            }\r\n        }])\r\n    };\r\n    _proto._initActions = function() {\r\n        var _this = this;\r\n        this._actions = {};\r\n        (0, _iterator.each)(ACTIONS, function(index, action) {\r\n            _this._actions[action] = _this._createActionByOption(action) || _common.noop\r\n        })\r\n    };\r\n    _proto._setOptionsByReference = function() {\r\n        _MenuBase.prototype._setOptionsByReference.call(this);\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    };\r\n    _proto._focusInHandler = function() {};\r\n    _proto._itemContainer = function() {\r\n        return this._overlay ? this._overlay.$content() : (0, _renderer.default)()\r\n    };\r\n    _proto._eventBindingTarget = function() {\r\n        return this._itemContainer()\r\n    };\r\n    _proto.itemsContainer = function() {\r\n        return this._overlay ? this._overlay.$content() : void 0\r\n    };\r\n    _proto._supportedKeys = function() {\r\n        var _this2 = this;\r\n        var selectItem = function() {\r\n            var $item = (0, _renderer.default)(_this2.option(\"focusedElement\"));\r\n            _this2.hide();\r\n            if (!$item.length || !_this2._isSelectionEnabled()) {\r\n                return\r\n            }\r\n            _this2.selectItem($item[0])\r\n        };\r\n        return (0, _extend.extend)(_MenuBase.prototype._supportedKeys.call(this), {\r\n            space: selectItem,\r\n            escape: this.hide\r\n        })\r\n    };\r\n    _proto._getActiveItem = function() {\r\n        var $availableItems = this._getAvailableItems();\r\n        var $focusedItem = $availableItems.filter(\".\".concat(DX_STATE_FOCUSED_CLASS));\r\n        var $hoveredItem = $availableItems.filter(\".\".concat(DX_STATE_HOVER_CLASS));\r\n        var $hoveredItemContainer = $hoveredItem.closest(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS));\r\n        if ($hoveredItemContainer.find(\".\".concat(DX_MENU_ITEM_CLASS)).index($focusedItem) >= 0) {\r\n            return $focusedItem\r\n        }\r\n        if ($hoveredItem.length) {\r\n            return $hoveredItem\r\n        }\r\n        return _MenuBase.prototype._getActiveItem.call(this)\r\n    };\r\n    _proto._moveFocus = function(location) {\r\n        var $items = this._getItemsByLocation(location);\r\n        var $oldTarget = this._getActiveItem(true);\r\n        var $hoveredItem = this.itemsContainer().find(\".\".concat(DX_STATE_HOVER_CLASS));\r\n        var $focusedItem = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n        var $activeItemHighlighted = !!($focusedItem.length || $hoveredItem.length);\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                $newTarget = $activeItemHighlighted ? this._prevItem($items) : $oldTarget;\r\n                this._setFocusedElement($newTarget);\r\n                if ($oldTarget.is($items.first())) {\r\n                    this._actions.onLeftFirstItem($oldTarget)\r\n                }\r\n                break;\r\n            case FOCUS_DOWN:\r\n                $newTarget = $activeItemHighlighted ? this._nextItem($items) : $oldTarget;\r\n                this._setFocusedElement($newTarget);\r\n                if ($oldTarget.is($items.last())) {\r\n                    this._actions.onLeftLastItem($oldTarget)\r\n                }\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                $newTarget = this.option(\"rtlEnabled\") ? this._hideSubmenuHandler() : this._expandSubmenuHandler($items, location);\r\n                this._setFocusedElement($newTarget);\r\n                break;\r\n            case FOCUS_LEFT:\r\n                $newTarget = this.option(\"rtlEnabled\") ? this._expandSubmenuHandler($items, location) : this._hideSubmenuHandler();\r\n                this._setFocusedElement($newTarget);\r\n                break;\r\n            case FOCUS_FIRST:\r\n                $newTarget = $items.first();\r\n                this._setFocusedElement($newTarget);\r\n                break;\r\n            case FOCUS_LAST:\r\n                $newTarget = $items.last();\r\n                this._setFocusedElement($newTarget);\r\n                break;\r\n            default:\r\n                return _MenuBase.prototype._moveFocus.call(this, location)\r\n        }\r\n    };\r\n    _proto._setFocusedElement = function($element) {\r\n        if ($element && 0 !== $element.length) {\r\n            this.option(\"focusedElement\", (0, _element.getPublicElement)($element))\r\n        }\r\n    };\r\n    _proto._getItemsByLocation = function(location) {\r\n        var $activeItem = this._getActiveItem(true);\r\n        var $items;\r\n        if ((0, _array.inArray)(location, LOCAL_SUBMENU_DIRECTIONS) >= 0) {\r\n            $items = $activeItem.closest(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).children().children()\r\n        }\r\n        $items = this._getAvailableItems($items);\r\n        return $items\r\n    };\r\n    _proto._getAriaTarget = function() {\r\n        return this.$element()\r\n    };\r\n    _proto._refreshActiveDescendant = function() {\r\n        if ((0, _type.isDefined)(this._overlay)) {\r\n            var $target = this._overlay.$content();\r\n            _MenuBase.prototype._refreshActiveDescendant.call(this, $target)\r\n        }\r\n    };\r\n    _proto._hideSubmenuHandler = function() {\r\n        var $curItem = this._getActiveItem(true);\r\n        var $parentItem = $curItem.parents(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).first();\r\n        if ($parentItem.length) {\r\n            this._hideSubmenusOnSameLevel($parentItem);\r\n            this._hideSubmenu($curItem.closest(\".\".concat(DX_SUBMENU_CLASS)));\r\n            return $parentItem\r\n        }\r\n        this._actions.onCloseRootSubmenu($curItem);\r\n        return $curItem\r\n    };\r\n    _proto._expandSubmenuHandler = function($items, location) {\r\n        var $curItem = this._getActiveItem(true);\r\n        var itemData = this._getItemData($curItem);\r\n        var node = this._dataAdapter.getNodeByItem(itemData);\r\n        var isItemHasSubmenu = this._hasSubmenu(node);\r\n        var $submenu = $curItem.children(\".\".concat(DX_SUBMENU_CLASS));\r\n        if (isItemHasSubmenu && !$curItem.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n            if (!$submenu.length || \"hidden\" === $submenu.css(\"visibility\")) {\r\n                this._showSubmenu($curItem)\r\n            }\r\n            return this._nextItem(this._getItemsByLocation(location))\r\n        }\r\n        this._actions.onExpandLastSubmenu($curItem);\r\n        return\r\n    };\r\n    _proto._clean = function() {\r\n        if (this._overlay) {\r\n            this._overlay.$element().remove();\r\n            this._overlay = null\r\n        }\r\n        this._detachShowContextMenuEvents(this._getTarget());\r\n        _MenuBase.prototype._clean.call(this)\r\n    };\r\n    _proto._initMarkup = function() {\r\n        this.$element().addClass(DX_HAS_CONTEXT_MENU_CLASS);\r\n        _MenuBase.prototype._initMarkup.call(this)\r\n    };\r\n    _proto._render = function() {\r\n        _MenuBase.prototype._render.call(this);\r\n        this._renderVisibility(this.option(\"visible\"));\r\n        this._addWidgetClass()\r\n    };\r\n    _proto._renderContentImpl = function() {\r\n        this._detachShowContextMenuEvents(this._getTarget());\r\n        this._attachShowContextMenuEvents()\r\n    };\r\n    _proto._attachKeyboardEvents = function() {\r\n        !this._keyboardListenerId && this._focusTarget().length && _MenuBase.prototype._attachKeyboardEvents.call(this)\r\n    };\r\n    _proto._renderContextMenuOverlay = function() {\r\n        if (this._overlay) {\r\n            return\r\n        }\r\n        var overlayOptions = this._getOverlayOptions();\r\n        this._overlay = this._createComponent((0, _renderer.default)(\"<div>\").appendTo(this._$element), _overlay.default, overlayOptions);\r\n        var $overlayContent = this._overlay.$content();\r\n        $overlayContent.addClass(DX_CONTEXT_MENU_CLASS);\r\n        this._addCustomCssClass($overlayContent);\r\n        this._addPlatformDependentClass($overlayContent);\r\n        this._attachContextMenuEvent()\r\n    };\r\n    _proto.preventShowingDefaultContextMenuAboveOverlay = function() {\r\n        var $itemContainer = this._itemContainer();\r\n        var eventName = (0, _index.addNamespace)(_contextmenu.name, this.NAME);\r\n        _events_engine.default.off($itemContainer, eventName, \".\".concat(DX_SUBMENU_CLASS));\r\n        _events_engine.default.on($itemContainer, eventName, \".\".concat(DX_SUBMENU_CLASS), function(e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            _events_engine.default.off($itemContainer, eventName, \".\".concat(DX_SUBMENU_CLASS))\r\n        }.bind(this))\r\n    };\r\n    _proto._itemContextMenuHandler = function(e) {\r\n        _MenuBase.prototype._itemContextMenuHandler.call(this, e);\r\n        e.stopPropagation()\r\n    };\r\n    _proto._addPlatformDependentClass = function($element) {\r\n        if (_devices.default.current().phone) {\r\n            $element.addClass(DX_MENU_PHONE_CLASS)\r\n        }\r\n    };\r\n    _proto._detachShowContextMenuEvents = function(target) {\r\n        var showEvent = this.getShowEvent(this.option(\"showEvent\"));\r\n        if (!showEvent) {\r\n            return\r\n        }\r\n        var eventName = (0, _index.addNamespace)(showEvent, this.NAME);\r\n        if (this._showContextMenuEventHandler) {\r\n            _events_engine.default.off(_dom_adapter.default.getDocument(), eventName, target, this._showContextMenuEventHandler)\r\n        } else {\r\n            _events_engine.default.off((0, _renderer.default)(target), eventName)\r\n        }\r\n    };\r\n    _proto._attachShowContextMenuEvents = function() {\r\n        var _this3 = this;\r\n        var target = this._getTarget();\r\n        var showEvent = this.getShowEvent(this.option(\"showEvent\"));\r\n        if (!showEvent) {\r\n            return\r\n        }\r\n        var eventName = (0, _index.addNamespace)(showEvent, this.NAME);\r\n        var contextMenuAction = this._createAction(function(e) {\r\n            var delay = _this3.getShowDelay(_this3.option(\"showEvent\"));\r\n            if (delay) {\r\n                setTimeout(function() {\r\n                    return _this3._show(e.event)\r\n                }, delay)\r\n            } else {\r\n                _this3._show(e.event)\r\n            }\r\n        }, {\r\n            validatingTargetName: \"target\"\r\n        });\r\n        var handler = function(e) {\r\n            return contextMenuAction({\r\n                event: e,\r\n                target: (0, _renderer.default)(e.currentTarget)\r\n            })\r\n        };\r\n        contextMenuAction = this._createAction(contextMenuAction);\r\n        if ((0, _type.isRenderer)(target) || target.nodeType || (0, _type.isWindow)(target)) {\r\n            this._showContextMenuEventHandler = void 0;\r\n            _events_engine.default.on(target, eventName, handler)\r\n        } else {\r\n            this._showContextMenuEventHandler = handler;\r\n            _events_engine.default.on(_dom_adapter.default.getDocument(), eventName, target, this._showContextMenuEventHandler)\r\n        }\r\n    };\r\n    _proto._hoverEndHandler = function(e) {\r\n        _MenuBase.prototype._hoverEndHandler.call(this, e);\r\n        e.stopPropagation()\r\n    };\r\n    _proto._renderDimensions = function() {};\r\n    _proto._renderContainer = function($wrapper, submenuContainer) {\r\n        var $holder = submenuContainer || this._itemContainer();\r\n        $wrapper = (0, _renderer.default)(\"<div>\");\r\n        $wrapper.appendTo($holder).addClass(DX_SUBMENU_CLASS).css(\"visibility\", submenuContainer ? \"hidden\" : \"visible\");\r\n        var $itemsContainer = _MenuBase.prototype._renderContainer.call(this, $wrapper);\r\n        if (submenuContainer) {\r\n            return $itemsContainer\r\n        }\r\n        if (this.option(\"width\")) {\r\n            return $itemsContainer.css(\"minWidth\", this.option(\"width\"))\r\n        }\r\n        if (this.option(\"height\")) {\r\n            return $itemsContainer.css(\"minHeight\", this.option(\"height\"))\r\n        }\r\n        return $itemsContainer\r\n    };\r\n    _proto._renderSubmenuItems = function(node, $itemFrame) {\r\n        this._renderItems(this._getChildNodes(node), $itemFrame);\r\n        this._actions.onSubmenuCreated({\r\n            itemElement: (0, _element.getPublicElement)($itemFrame),\r\n            itemData: node.internalFields.item,\r\n            submenuElement: (0, _element.getPublicElement)($itemFrame.children(\".\".concat(DX_SUBMENU_CLASS)))\r\n        })\r\n    };\r\n    _proto._getOverlayOptions = function() {\r\n        var position = this.option(\"position\");\r\n        var overlayOptions = {\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            innerOverlay: true,\r\n            closeOnOutsideClick: this._closeOnOutsideClickHandler.bind(this),\r\n            propagateOutsideClick: true,\r\n            closeOnTargetScroll: true,\r\n            deferRendering: false,\r\n            position: {\r\n                at: position.at,\r\n                my: position.my,\r\n                of: this._getTarget(),\r\n                collision: \"flipfit\"\r\n            },\r\n            shading: false,\r\n            showTitle: false,\r\n            height: \"auto\",\r\n            width: \"auto\",\r\n            onShown: this._overlayShownActionHandler.bind(this),\r\n            onHiding: this._overlayHidingActionHandler.bind(this),\r\n            onHidden: this._overlayHiddenActionHandler.bind(this)\r\n        };\r\n        return overlayOptions\r\n    };\r\n    _proto._overlayShownActionHandler = function(arg) {\r\n        this._actions.onShown(arg)\r\n    };\r\n    _proto._overlayHidingActionHandler = function(arg) {\r\n        this._actions.onHiding(arg);\r\n        if (!arg.cancel) {\r\n            this._hideAllShownSubmenus();\r\n            this._setOptionWithoutOptionChange(\"visible\", false)\r\n        }\r\n    };\r\n    _proto._overlayHiddenActionHandler = function(arg) {\r\n        this._actions.onHidden(arg)\r\n    };\r\n    _proto._closeOnOutsideClickHandler = function(e) {\r\n        var closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n        if ((0, _type.isFunction)(closeOnOutsideClick)) {\r\n            return closeOnOutsideClick(e)\r\n        }\r\n        if (!closeOnOutsideClick) {\r\n            return false\r\n        }\r\n        if (_dom_adapter.default.isDocument(e.target)) {\r\n            return true\r\n        }\r\n        var $activeItemContainer = this._getActiveItemsContainer(e.target);\r\n        var $itemContainers = this._getItemsContainers();\r\n        var $clickedItem = this._searchActiveItem(e.target);\r\n        var $rootItem = this.$element().parents(\".\".concat(DX_MENU_ITEM_CLASS));\r\n        var isRootItemClicked = $clickedItem[0] === $rootItem[0] && $clickedItem.length && $rootItem.length;\r\n        var isInnerOverlayClicked = this._isIncludeOverlay($activeItemContainer, $itemContainers) && $clickedItem.length;\r\n        if (isInnerOverlayClicked || isRootItemClicked) {\r\n            if (\"onClick\" === this._getShowSubmenuMode()) {\r\n                this._hideAllShownChildSubmenus($clickedItem)\r\n            }\r\n            return false\r\n        }\r\n        return true\r\n    };\r\n    _proto._getActiveItemsContainer = function(target) {\r\n        return (0, _renderer.default)(target).closest(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS))\r\n    };\r\n    _proto._getItemsContainers = function() {\r\n        return this._overlay.$content().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS))\r\n    };\r\n    _proto._searchActiveItem = function(target) {\r\n        return (0, _renderer.default)(target).closest(\".\".concat(DX_MENU_ITEM_CLASS)).eq(0)\r\n    };\r\n    _proto._isIncludeOverlay = function($activeOverlay, $allOverlays) {\r\n        var isSame = false;\r\n        (0, _iterator.each)($allOverlays, function(index, $overlay) {\r\n            if ($activeOverlay.is($overlay) && !isSame) {\r\n                isSame = true\r\n            }\r\n        });\r\n        return isSame\r\n    };\r\n    _proto._hideAllShownChildSubmenus = function($clickedItem) {\r\n        var _this4 = this;\r\n        var $submenuElements = $clickedItem.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var shownSubmenus = (0, _extend.extend)([], this._shownSubmenus);\r\n        if ($submenuElements.length > 0) {\r\n            (0, _iterator.each)(shownSubmenus, function(index, $submenu) {\r\n                var $context = _this4._searchActiveItem($submenu.context).parent();\r\n                if ($context.parent().is($clickedItem.parent().parent()) && !$context.is($clickedItem.parent())) {\r\n                    _this4._hideSubmenu($submenu)\r\n                }\r\n            })\r\n        }\r\n    };\r\n    _proto._showSubmenu = function($item) {\r\n        var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        this._hideSubmenusOnSameLevel($item);\r\n        if (!this._hasSubmenu(node)) {\r\n            return\r\n        }\r\n        var $submenu = $item.children(\".\".concat(DX_SUBMENU_CLASS));\r\n        var isSubmenuRendered = $submenu.length;\r\n        _MenuBase.prototype._showSubmenu.call(this, $item);\r\n        if (!isSubmenuRendered) {\r\n            this._renderSubmenuItems(node, $item)\r\n        }\r\n        if (!this._isSubmenuVisible($submenu)) {\r\n            this._drawSubmenu($item)\r\n        }\r\n    };\r\n    _proto._hideSubmenusOnSameLevel = function($item) {\r\n        var $expandedItems = $item.parent(\".\".concat(DX_MENU_ITEM_WRAPPER_CLASS)).siblings().find(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS));\r\n        if ($expandedItems.length) {\r\n            $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n            this._hideSubmenu($expandedItems.find(\".\".concat(DX_SUBMENU_CLASS)))\r\n        }\r\n    };\r\n    _proto._hideSubmenuGroup = function($submenu) {\r\n        if (this._isSubmenuVisible($submenu)) {\r\n            this._hideSubmenuCore($submenu)\r\n        }\r\n    };\r\n    _proto._isSubmenuVisible = function($submenu) {\r\n        return \"visible\" === $submenu.css(\"visibility\")\r\n    };\r\n    _proto._drawSubmenu = function($itemElement) {\r\n        var animation = this.option(\"animation\") ? this.option(\"animation\").show : {};\r\n        var $submenu = $itemElement.children(\".\".concat(DX_SUBMENU_CLASS));\r\n        var submenuPosition = this._getSubmenuPosition($itemElement);\r\n        if (this._overlay && this._overlay.option(\"visible\")) {\r\n            if (!(0, _type.isDefined)(this._shownSubmenus)) {\r\n                this._shownSubmenus = []\r\n            }\r\n            if ((0, _array.inArray)($submenu, this._shownSubmenus)) {\r\n                this._shownSubmenus.push($submenu)\r\n            }\r\n            if (animation) {\r\n                _fx.default.stop($submenu)\r\n            }\r\n            _position.default.setup($submenu, submenuPosition);\r\n            if (animation) {\r\n                if ((0, _type.isPlainObject)(animation.to)) {\r\n                    animation.to.position = submenuPosition\r\n                }\r\n                this._animate($submenu, animation)\r\n            }\r\n            $submenu.css(\"visibility\", \"visible\")\r\n        }\r\n    };\r\n    _proto._animate = function($container, options) {\r\n        _fx.default.animate($container, options)\r\n    };\r\n    _proto._getSubmenuPosition = function($rootItem) {\r\n        var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        var $rootItemWrapper = $rootItem.parent(\".\".concat(DX_MENU_ITEM_WRAPPER_CLASS));\r\n        var position = {\r\n            collision: \"flip\",\r\n            of: $rootItemWrapper,\r\n            offset: {\r\n                h: 0,\r\n                v: -1\r\n            }\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"left\":\r\n                position.at = \"left top\";\r\n                position.my = \"right top\";\r\n                break;\r\n            case \"right\":\r\n                position.at = \"right top\";\r\n                position.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (this.option(\"rtlEnabled\")) {\r\n                    position.at = \"left top\";\r\n                    position.my = \"right top\"\r\n                } else {\r\n                    position.at = \"right top\";\r\n                    position.my = \"left top\"\r\n                }\r\n        }\r\n        return position\r\n    };\r\n    _proto._updateSubmenuVisibilityOnClick = function(actionArgs) {\r\n        if (!actionArgs.args.length) {\r\n            return\r\n        }\r\n        var itemData = actionArgs.args[0].itemData;\r\n        var node = this._dataAdapter.getNodeByItem(itemData);\r\n        if (!node) {\r\n            return\r\n        }\r\n        var $itemElement = (0, _renderer.default)(actionArgs.args[0].itemElement);\r\n        var $submenu = $itemElement.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var shouldRenderSubmenu = this._hasSubmenu(node) && !$submenu.length;\r\n        if (shouldRenderSubmenu) {\r\n            this._renderSubmenuItems(node, $itemElement);\r\n            $submenu = $itemElement.find(\".\".concat(DX_SUBMENU_CLASS))\r\n        }\r\n        if ($itemElement.context === $submenu.context && \"visible\" === $submenu.css(\"visibility\")) {\r\n            return\r\n        }\r\n        var notCloseMenuOnItemClick = itemData && false === itemData.closeMenuOnClick;\r\n        if (!itemData || itemData.disabled || notCloseMenuOnItemClick) {\r\n            return\r\n        }\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (0 === $submenu.length) {\r\n            var $prevSubmenu = (0, _renderer.default)($itemElement.parents(\".\".concat(DX_SUBMENU_CLASS))[0]);\r\n            this._hideSubmenu($prevSubmenu);\r\n            if (!actionArgs.canceled && this._overlay && this._overlay.option(\"visible\")) {\r\n                this.option(\"visible\", false)\r\n            }\r\n        } else {\r\n            if (this._shownSubmenus && this._shownSubmenus.length > 0) {\r\n                if (this._shownSubmenus[0].is($submenu)) {\r\n                    this._hideSubmenu($submenu)\r\n                }\r\n            }\r\n            this._showSubmenu($itemElement)\r\n        }\r\n    };\r\n    _proto._hideSubmenu = function($curSubmenu) {\r\n        var _this5 = this;\r\n        var shownSubmenus = (0, _extend.extend)([], this._shownSubmenus);\r\n        (0, _iterator.each)(shownSubmenus, function(index, $submenu) {\r\n            if ($curSubmenu.is($submenu) || (0, _dom.contains)($curSubmenu[0], $submenu[0])) {\r\n                $submenu.parent().removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                _this5._hideSubmenuCore($submenu)\r\n            }\r\n        })\r\n    };\r\n    _proto._hideSubmenuCore = function($submenu) {\r\n        var index = (0, _array.inArray)($submenu, this._shownSubmenus);\r\n        var animation = this.option(\"animation\") ? this.option(\"animation\").hide : null;\r\n        if (index >= 0) {\r\n            this._shownSubmenus.splice(index, 1)\r\n        }\r\n        this._stopAnimate($submenu);\r\n        animation && this._animate($submenu, animation);\r\n        $submenu.css(\"visibility\", \"hidden\")\r\n    };\r\n    _proto._stopAnimate = function($container) {\r\n        _fx.default.stop($container, true)\r\n    };\r\n    _proto._hideAllShownSubmenus = function() {\r\n        var _this6 = this;\r\n        var shownSubmenus = (0, _extend.extend)([], this._shownSubmenus);\r\n        var $expandedItems = this._overlay.$content().find(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS));\r\n        $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n        (0, _iterator.each)(shownSubmenus, function(_, $submenu) {\r\n            _this6._hideSubmenu($submenu)\r\n        })\r\n    };\r\n    _proto._visibilityChanged = function(visible) {\r\n        if (visible) {\r\n            this._renderContentImpl()\r\n        }\r\n    };\r\n    _proto._optionChanged = function(args) {\r\n        if ((0, _array.inArray)(args.name, ACTIONS) > -1) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"visible\":\r\n                this._renderVisibility(args.value);\r\n                break;\r\n            case \"showEvent\":\r\n            case \"position\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"target\":\r\n                args.previousValue && this._detachShowContextMenuEvents(args.previousValue);\r\n                this._invalidate();\r\n                break;\r\n            case \"closeOnOutsideClick\":\r\n                break;\r\n            default:\r\n                _MenuBase.prototype._optionChanged.call(this, args)\r\n        }\r\n    };\r\n    _proto._renderVisibility = function(showing) {\r\n        return showing ? this._show() : this._hide()\r\n    };\r\n    _proto._toggleVisibility = function() {};\r\n    _proto._show = function(event) {\r\n        var args = {\r\n            jQEvent: event\r\n        };\r\n        var promise = (new _deferred.Deferred).reject().promise();\r\n        this._actions.onShowing(args);\r\n        if (args.cancel) {\r\n            return promise\r\n        }\r\n        var position = this._positionContextMenu(event);\r\n        if (position) {\r\n            var _event$originalEvent;\r\n            if (!this._overlay) {\r\n                this._renderContextMenuOverlay();\r\n                this._overlay.$content().addClass(this._widgetClass());\r\n                this._renderFocusState();\r\n                this._attachHoverEvents();\r\n                this._attachClickEvent();\r\n                this._renderItems(this._dataAdapter.getRootNodes())\r\n            }\r\n            this._setOptionWithoutOptionChange(\"visible\", true);\r\n            this._overlay.option(\"position\", position);\r\n            promise = this._overlay.show();\r\n            event && event.stopPropagation();\r\n            this._setAriaAttributes();\r\n            if ((null === event || void 0 === event ? void 0 : null === (_event$originalEvent = event.originalEvent) || void 0 === _event$originalEvent ? void 0 : _event$originalEvent.type) === _hold.default.name) {\r\n                this.preventShowingDefaultContextMenuAboveOverlay()\r\n            }\r\n        }\r\n        return promise\r\n    };\r\n    _proto._setAriaAttributes = function() {\r\n        this._overlayContentId = \"dx-\".concat(new _guid.default);\r\n        this.setAria(\"owns\", this._overlayContentId);\r\n        this.setAria({\r\n            id: this._overlayContentId,\r\n            role: \"menu\"\r\n        }, this._overlay.$content())\r\n    };\r\n    _proto._cleanAriaAttributes = function() {\r\n        this._overlay && this.setAria(\"id\", null, this._overlay.$content());\r\n        this.setAria(\"owns\", void 0)\r\n    };\r\n    _proto._getTarget = function() {\r\n        return this.option(\"target\") || this.option(\"position\").of || (0, _renderer.default)(_dom_adapter.default.getDocument())\r\n    };\r\n    _proto._getContextMenuPosition = function() {\r\n        return (0, _extend.extend)({}, this.option(\"position\"), {\r\n            of: this._getTarget()\r\n        })\r\n    };\r\n    _proto._positionContextMenu = function(jQEvent) {\r\n        var position = this._getContextMenuPosition();\r\n        var isInitialPosition = this._isInitialOptionValue(\"position\");\r\n        var positioningAction = this._createActionByOption(\"onPositioning\", actionArgs);\r\n        if (jQEvent && jQEvent.preventDefault && isInitialPosition) {\r\n            position.of = jQEvent\r\n        }\r\n        var actionArgs = {\r\n            position: position,\r\n            event: jQEvent\r\n        };\r\n        positioningAction(actionArgs);\r\n        if (actionArgs.cancel) {\r\n            position = null\r\n        } else {\r\n            if (actionArgs.event) {\r\n                actionArgs.event.cancel = true;\r\n                jQEvent.preventDefault()\r\n            }\r\n        }\r\n        return position\r\n    };\r\n    _proto._refresh = function() {\r\n        if (!(0, _window.hasWindow)()) {\r\n            _MenuBase.prototype._refresh.call(this)\r\n        } else {\r\n            if (this._overlay) {\r\n                var lastPosition = this._overlay.option(\"position\");\r\n                _MenuBase.prototype._refresh.call(this);\r\n                this._overlay && this._overlay.option(\"position\", lastPosition)\r\n            } else {\r\n                _MenuBase.prototype._refresh.call(this)\r\n            }\r\n        }\r\n    };\r\n    _proto._hide = function() {\r\n        var promise;\r\n        if (this._overlay) {\r\n            promise = this._overlay.hide();\r\n            this._setOptionWithoutOptionChange(\"visible\", false)\r\n        }\r\n        this._cleanAriaAttributes();\r\n        this.option(\"focusedElement\", null);\r\n        return promise || (new _deferred.Deferred).reject().promise()\r\n    };\r\n    _proto.toggle = function(showing) {\r\n        var visible = this.option(\"visible\");\r\n        showing = void 0 === showing ? !visible : showing;\r\n        return this._renderVisibility(showing)\r\n    };\r\n    _proto.show = function() {\r\n        return this.toggle(true)\r\n    };\r\n    _proto.hide = function() {\r\n        return this.toggle(false)\r\n    };\r\n    return ContextMenu\r\n}(_ui.default);\r\n(0, _component_registrator.default)(\"dxContextMenu\", ContextMenu);\r\nvar _default = ContextMenu;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.edit.strategy.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiCollection_widgetEditStrategy = _interopRequireDefault(require(\"../collection/ui.collection_widget.edit.strategy.plain\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar MenuBaseEditStrategy = function(_PlainEditStrategy) {\r\n    _inheritsLoose(MenuBaseEditStrategy, _PlainEditStrategy);\r\n\r\n    function MenuBaseEditStrategy() {\r\n        return _PlainEditStrategy.apply(this, arguments) || this\r\n    }\r\n    var _proto = MenuBaseEditStrategy.prototype;\r\n    _proto._getPlainItems = function() {\r\n        return (0, _iterator.map)(this._collectionWidget.option(\"items\"), function getMenuItems(item) {\r\n            return item.items ? [item].concat((0, _iterator.map)(item.items, getMenuItems)) : item\r\n        })\r\n    };\r\n    _proto._stringifyItem = function(item) {\r\n        var _this = this;\r\n        return JSON.stringify(item, function(key, value) {\r\n            if (\"template\" === key) {\r\n                return _this._getTemplateString(value)\r\n            }\r\n            return value\r\n        })\r\n    };\r\n    _proto._getTemplateString = function(template) {\r\n        var result;\r\n        if (\"object\" === _typeof(template)) {\r\n            result = (0, _renderer.default)(template).text()\r\n        } else {\r\n            result = template.toString()\r\n        }\r\n        return result\r\n    };\r\n    return MenuBaseEditStrategy\r\n}(_uiCollection_widgetEditStrategy.default);\r\nvar _default = MenuBaseEditStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _utils = require(\"../widget/utils.ink_ripple\");\r\nvar _ui = _interopRequireDefault(require(\"../hierarchical_collection/ui.hierarchical_collection_widget\"));\r\nvar _uiMenu_baseEdit = _interopRequireDefault(require(\"./ui.menu_base.edit.strategy\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _item = _interopRequireDefault(require(\"../collection/item\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_NO_ICONS_CLASS = DX_MENU_CLASS + \"-no-icons\";\r\nvar DX_MENU_BASE_CLASS = \"dx-menu-base\";\r\nvar ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_ITEM_CONTENT_CLASS = ITEM_CLASS + \"-content\";\r\nvar DX_MENU_SELECTED_ITEM_CLASS = ITEM_CLASS + \"-selected\";\r\nvar DX_MENU_ITEM_WRAPPER_CLASS = ITEM_CLASS + \"-wrapper\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = ITEM_CLASS + \"-expanded\";\r\nvar DX_MENU_SEPARATOR_CLASS = DX_MENU_CLASS + \"-separator\";\r\nvar DX_MENU_ITEM_LAST_GROUP_ITEM = DX_MENU_CLASS + \"-last-group-item\";\r\nvar DX_ITEM_HAS_TEXT = ITEM_CLASS + \"-has-text\";\r\nvar DX_ITEM_HAS_ICON = ITEM_CLASS + \"-has-icon\";\r\nvar DX_ITEM_HAS_SUBMENU = ITEM_CLASS + \"-has-submenu\";\r\nvar DX_MENU_ITEM_POPOUT_CLASS = ITEM_CLASS + \"-popout\";\r\nvar DX_MENU_ITEM_POPOUT_CONTAINER_CLASS = DX_MENU_ITEM_POPOUT_CLASS + \"-container\";\r\nvar DX_MENU_ITEM_CAPTION_CLASS = ITEM_CLASS + \"-text\";\r\nvar SINGLE_SELECTION_MODE = \"single\";\r\nvar DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nvar MenuBase = function(_HierarchicalCollecti) {\r\n    _inheritsLoose(MenuBase, _HierarchicalCollecti);\r\n\r\n    function MenuBase() {\r\n        return _HierarchicalCollecti.apply(this, arguments) || this\r\n    }\r\n    var _proto = MenuBase.prototype;\r\n    _proto._getDefaultOptions = function() {\r\n        return (0, _extend.extend)(_HierarchicalCollecti.prototype._getDefaultOptions.call(this), {\r\n            items: [],\r\n            cssClass: \"\",\r\n            activeStateEnabled: true,\r\n            showSubmenuMode: {\r\n                name: \"onHover\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    from: 0,\r\n                    to: 1,\r\n                    duration: 100\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    from: 1,\r\n                    to: 0,\r\n                    duration: 100\r\n                }\r\n            },\r\n            selectByClick: false,\r\n            focusOnSelectedItem: false,\r\n            keyExpr: null,\r\n            _itemAttributes: {\r\n                role: \"menuitem\"\r\n            },\r\n            useInkRipple: false\r\n        })\r\n    };\r\n    _proto._itemDataKey = function() {\r\n        return \"dxMenuItemDataKey\"\r\n    };\r\n    _proto._itemClass = function() {\r\n        return ITEM_CLASS\r\n    };\r\n    _proto._setAriaSelected = function() {};\r\n    _proto._selectedItemClass = function() {\r\n        return DX_MENU_SELECTED_ITEM_CLASS\r\n    };\r\n    _proto._widgetClass = function() {\r\n        return DX_MENU_BASE_CLASS\r\n    };\r\n    _proto._focusTarget = function() {\r\n        return this._itemContainer()\r\n    };\r\n    _proto._clean = function() {\r\n        this.option(\"focusedElement\", null);\r\n        _HierarchicalCollecti.prototype._clean.call(this)\r\n    };\r\n    _proto._supportedKeys = function() {\r\n        var _this = this;\r\n        var selectItem = function() {\r\n            var $item = (0, _renderer.default)(_this.option(\"focusedElement\"));\r\n            if (!$item.length || !_this._isSelectionEnabled()) {\r\n                return\r\n            }\r\n            _this.selectItem($item[0])\r\n        };\r\n        return (0, _extend.extend)(_HierarchicalCollecti.prototype._supportedKeys.call(this), {\r\n            space: selectItem,\r\n            pageUp: _common.noop,\r\n            pageDown: _common.noop\r\n        })\r\n    };\r\n    _proto._isSelectionEnabled = function() {\r\n        return this.option(\"selectionMode\") === SINGLE_SELECTION_MODE\r\n    };\r\n    _proto._init = function() {\r\n        this._activeStateUnit = \".\".concat(ITEM_CLASS);\r\n        _HierarchicalCollecti.prototype._init.call(this);\r\n        this._renderSelectedItem();\r\n        this._initActions()\r\n    };\r\n    _proto._getTextContainer = function(itemData) {\r\n        var itemText = itemData.text;\r\n        var $itemContainer = (0, _renderer.default)(\"<span>\").addClass(DX_MENU_ITEM_CAPTION_CLASS);\r\n        var itemContent = (0, _type.isPlainObject)(itemData) ? itemText : String(itemData);\r\n        return itemText && $itemContainer.text(itemContent)\r\n    };\r\n    _proto._getPopoutContainer = function(itemData) {\r\n        var items = itemData.items;\r\n        var $popOutContainer;\r\n        if (items && items.length) {\r\n            var $popOutImage = (0, _renderer.default)(\"<div>\").addClass(DX_MENU_ITEM_POPOUT_CLASS);\r\n            $popOutContainer = (0, _renderer.default)(\"<span>\").addClass(DX_MENU_ITEM_POPOUT_CONTAINER_CLASS).append($popOutImage)\r\n        }\r\n        return $popOutContainer\r\n    };\r\n    _proto._getDataAdapterOptions = function() {\r\n        return {\r\n            rootValue: 0,\r\n            multipleSelection: false,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            searchValue: \"\"\r\n        }\r\n    };\r\n    _proto._selectByItem = function(selectedItem) {\r\n        if (!selectedItem) {\r\n            return\r\n        }\r\n        var nodeToSelect = this._dataAdapter.getNodeByItem(selectedItem);\r\n        this._dataAdapter.toggleSelection(nodeToSelect.internalFields.key, true)\r\n    };\r\n    _proto._renderSelectedItem = function() {\r\n        var selectedKeys = this._dataAdapter.getSelectedNodesKeys();\r\n        var selectedKey = selectedKeys.length && selectedKeys[0];\r\n        var selectedItem = this.option(\"selectedItem\");\r\n        if (!selectedKey) {\r\n            this._selectByItem(selectedItem);\r\n            return\r\n        }\r\n        var node = this._dataAdapter.getNodeByKey(selectedKey);\r\n        if (false === node.selectable) {\r\n            return\r\n        }\r\n        if (!selectedItem) {\r\n            this.option(\"selectedItem\", node.internalFields.item);\r\n            return\r\n        }\r\n        if (selectedItem !== node.internalFields.item) {\r\n            this._dataAdapter.toggleSelection(selectedKey, false);\r\n            this._selectByItem(selectedItem)\r\n        }\r\n    };\r\n    _proto._initActions = function() {};\r\n    _proto._initMarkup = function() {\r\n        _HierarchicalCollecti.prototype._initMarkup.call(this);\r\n        this._addCustomCssClass(this.$element());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple()\r\n    };\r\n    _proto._renderInkRipple = function() {\r\n        this._inkRipple = (0, _utils.render)()\r\n    };\r\n    _proto._toggleActiveState = function($element, value, e) {\r\n        _HierarchicalCollecti.prototype._toggleActiveState.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    };\r\n    _proto._getShowSubmenuMode = function() {\r\n        var defaultValue = \"onClick\";\r\n        var optionValue = this.option(\"showSubmenuMode\");\r\n        optionValue = (0, _type.isObject)(optionValue) ? optionValue.name : optionValue;\r\n        return this._isDesktopDevice() ? optionValue : defaultValue\r\n    };\r\n    _proto._initSelectedItems = function() {};\r\n    _proto._isDesktopDevice = function() {\r\n        return \"desktop\" === _devices.default.real().deviceType\r\n    };\r\n    _proto._initEditStrategy = function() {\r\n        var Strategy = _uiMenu_baseEdit.default;\r\n        this._editStrategy = new Strategy(this)\r\n    };\r\n    _proto._addCustomCssClass = function($element) {\r\n        $element.addClass(this.option(\"cssClass\"))\r\n    };\r\n    _proto._itemWrapperSelector = function() {\r\n        return \".\".concat(DX_MENU_ITEM_WRAPPER_CLASS)\r\n    };\r\n    _proto._hoverStartHandler = function(e) {\r\n        var $itemElement = this._getItemElementByEventArgs(e);\r\n        if (!$itemElement || this._isItemDisabled($itemElement)) {\r\n            return\r\n        }\r\n        e.stopPropagation();\r\n        if (\"onHover\" === this._getShowSubmenuMode()) {\r\n            clearTimeout(this._showSubmenusTimeout);\r\n            this._showSubmenusTimeout = setTimeout(this._showSubmenu.bind(this, $itemElement), this._getSubmenuDelay(\"show\"))\r\n        }\r\n    };\r\n    _proto._getAvailableItems = function($itemElements) {\r\n        return _HierarchicalCollecti.prototype._getAvailableItems.call(this, $itemElements).filter(function() {\r\n            return \"hidden\" !== (0, _renderer.default)(this).css(\"visibility\")\r\n        })\r\n    };\r\n    _proto._isItemDisabled = function($item) {\r\n        return this._disabledGetter($item.data(this._itemDataKey()))\r\n    };\r\n    _proto._showSubmenu = function($itemElement) {\r\n        this._addExpandedClass($itemElement)\r\n    };\r\n    _proto._addExpandedClass = function(itemElement) {\r\n        (0, _renderer.default)(itemElement).addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    };\r\n    _proto._getSubmenuDelay = function(action) {\r\n        var _this$option = this.option(\"showSubmenuMode\"),\r\n            delay = _this$option.delay;\r\n        if (!(0, _type.isDefined)(delay)) {\r\n            return DEFAULT_DELAY[action]\r\n        }\r\n        return (0, _type.isObject)(delay) ? delay[action] : delay\r\n    };\r\n    _proto._getItemElementByEventArgs = function(eventArgs) {\r\n        var $target = (0, _renderer.default)(eventArgs.target);\r\n        if ($target.hasClass(this._itemClass()) || $target.get(0) === eventArgs.currentTarget) {\r\n            return $target\r\n        }\r\n        while (!$target.hasClass(this._itemClass())) {\r\n            $target = $target.parent();\r\n            if ($target.hasClass(\"dx-submenu\")) {\r\n                return null\r\n            }\r\n        }\r\n        return $target\r\n    };\r\n    _proto._hoverEndHandler = function() {\r\n        clearTimeout(this._showSubmenusTimeout)\r\n    };\r\n    _proto._hasSubmenu = function(node) {\r\n        return node && node.internalFields.childrenKeys.length\r\n    };\r\n    _proto._renderContentImpl = function() {\r\n        this._renderItems(this._dataAdapter.getRootNodes())\r\n    };\r\n    _proto._renderItems = function(nodes, submenuContainer) {\r\n        var _this2 = this;\r\n        if (nodes.length) {\r\n            this.hasIcons = false;\r\n            var $nodeContainer = this._renderContainer(this.$element(), submenuContainer);\r\n            var firstVisibleIndex = -1;\r\n            var nextGroupFirstIndex = -1;\r\n            (0, _iterator.each)(nodes, function(index, node) {\r\n                var isVisibleNode = false !== node.visible;\r\n                if (isVisibleNode && firstVisibleIndex < 0) {\r\n                    firstVisibleIndex = index\r\n                }\r\n                var isBeginGroup = firstVisibleIndex < index && (node.beginGroup || index === nextGroupFirstIndex);\r\n                if (isBeginGroup) {\r\n                    nextGroupFirstIndex = isVisibleNode ? index : index + 1\r\n                }\r\n                if (index === nextGroupFirstIndex && firstVisibleIndex < index) {\r\n                    _this2._renderSeparator($nodeContainer)\r\n                }\r\n                _this2._renderItem(index, node, $nodeContainer)\r\n            });\r\n            if (!this.hasIcons) {\r\n                $nodeContainer.addClass(DX_MENU_NO_ICONS_CLASS)\r\n            }\r\n        }\r\n    };\r\n    _proto._renderContainer = function($wrapper) {\r\n        var $container = (0, _renderer.default)(\"<ul>\");\r\n        this.setAria(\"role\", \"none\", $container);\r\n        return $container.appendTo($wrapper).addClass(DX_MENU_ITEMS_CONTAINER_CLASS)\r\n    };\r\n    _proto._createDOMElement = function($nodeContainer) {\r\n        var $node = (0, _renderer.default)(\"<li>\");\r\n        this.setAria(\"role\", \"none\", $node);\r\n        return $node.appendTo($nodeContainer).addClass(DX_MENU_ITEM_WRAPPER_CLASS)\r\n    };\r\n    _proto._renderItem = function(index, node, $nodeContainer, $nodeElement) {\r\n        var items = this.option(\"items\");\r\n        var $node = $nodeElement || this._createDOMElement($nodeContainer);\r\n        if (items[index + 1] && items[index + 1].beginGroup) {\r\n            $node.addClass(DX_MENU_ITEM_LAST_GROUP_ITEM)\r\n        }\r\n        var $itemFrame = _HierarchicalCollecti.prototype._renderItem.call(this, index, node.internalFields.item, $node);\r\n        if (node.internalFields.item === this.option(\"selectedItem\")) {\r\n            $itemFrame.addClass(DX_MENU_SELECTED_ITEM_CLASS)\r\n        }\r\n        $itemFrame.attr(\"tabIndex\", -1);\r\n        if (this._hasSubmenu(node)) {\r\n            this.setAria(\"haspopup\", \"true\", $itemFrame)\r\n        }\r\n    };\r\n    _proto._renderItemFrame = function(index, itemData, $itemContainer) {\r\n        var $itemFrame = $itemContainer.children(\".\".concat(ITEM_CLASS));\r\n        return $itemFrame.length ? $itemFrame : _HierarchicalCollecti.prototype._renderItemFrame.apply(this, arguments)\r\n    };\r\n    _proto._refreshItem = function($item, item) {\r\n        var node = this._dataAdapter.getNodeByItem(item);\r\n        var index = $item.data(this._itemIndexKey());\r\n        var $nodeContainer = $item.closest(\"ul\");\r\n        var $nodeElement = $item.closest(\"li\");\r\n        this._renderItem(index, node, $nodeContainer, $nodeElement)\r\n    };\r\n    _proto._addContentClasses = function(itemData, $itemFrame) {\r\n        var hasText = itemData.text ? !!itemData.text.length : false;\r\n        var hasIcon = !!itemData.icon;\r\n        var hasSubmenu = itemData.items ? !!itemData.items.length : false;\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_TEXT, hasText);\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_ICON, hasIcon);\r\n        if (!this.hasIcons) {\r\n            this.hasIcons = hasIcon\r\n        }\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_SUBMENU, hasSubmenu)\r\n    };\r\n    _proto._getItemContent = function($itemFrame) {\r\n        var $itemContent = _HierarchicalCollecti.prototype._getItemContent.call(this, $itemFrame);\r\n        if (!$itemContent.length) {\r\n            $itemContent = $itemFrame.children(\".\".concat(DX_ITEM_CONTENT_CLASS))\r\n        }\r\n        return $itemContent\r\n    };\r\n    _proto._postprocessRenderItem = function(args) {\r\n        var $itemElement = (0, _renderer.default)(args.itemElement);\r\n        var selectedIndex = this._dataAdapter.getSelectedNodesKeys();\r\n        if (!selectedIndex.length || !this._selectedGetter(args.itemData) || !this._isItemSelectable(args.itemData)) {\r\n            this._setAriaSelected($itemElement, \"false\");\r\n            return\r\n        }\r\n        var node = this._dataAdapter.getNodeByItem(args.itemData);\r\n        if (node.internalFields.key === selectedIndex[0]) {\r\n            $itemElement.addClass(this._selectedItemClass());\r\n            this._setAriaSelected($itemElement, \"true\")\r\n        } else {\r\n            this._setAriaSelected($itemElement, \"false\")\r\n        }\r\n    };\r\n    _proto._isItemSelectable = function(item) {\r\n        return false !== item.selectable\r\n    };\r\n    _proto._renderSeparator = function($itemsContainer) {\r\n        (0, _renderer.default)(\"<li>\").appendTo($itemsContainer).addClass(DX_MENU_SEPARATOR_CLASS)\r\n    };\r\n    _proto._itemClickHandler = function(e) {\r\n        if (e._skipHandling) {\r\n            return\r\n        }\r\n        var itemClickActionHandler = this._createAction(this._updateSubmenuVisibilityOnClick.bind(this));\r\n        this._itemDXEventHandler(e, \"onItemClick\", {}, {\r\n            afterExecute: itemClickActionHandler.bind(this)\r\n        });\r\n        e._skipHandling = true\r\n    };\r\n    _proto._updateSubmenuVisibilityOnClick = function(actionArgs) {\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (\"onClick\" === this._getShowSubmenuMode()) {\r\n            this._addExpandedClass(actionArgs.args[0].itemElement)\r\n        }\r\n    };\r\n    _proto._updateSelectedItemOnClick = function(actionArgs) {\r\n        var args = actionArgs.args ? actionArgs.args[0] : actionArgs;\r\n        if (!this._isItemSelectionAllowed(args.itemData)) {\r\n            return\r\n        }\r\n        var selectedItemKey = this._dataAdapter.getSelectedNodesKeys();\r\n        var selectedNode = selectedItemKey.length && this._dataAdapter.getNodeByKey(selectedItemKey[0]);\r\n        if (selectedNode) {\r\n            this._toggleItemSelection(selectedNode, false)\r\n        }\r\n        if (!selectedNode || selectedNode.internalFields.item !== args.itemData) {\r\n            this.selectItem(args.itemData)\r\n        } else {\r\n            this._fireSelectionChangeEvent(null, this.option(\"selectedItem\"));\r\n            this._setOptionWithoutOptionChange(\"selectedItem\", null)\r\n        }\r\n    };\r\n    _proto._isItemSelectionAllowed = function(item) {\r\n        var isSelectionByClickEnabled = this._isSelectionEnabled() && this.option(\"selectByClick\");\r\n        return !this._isContainerEmpty() && isSelectionByClickEnabled && this._isItemSelectable(item) && !this._itemsGetter(item)\r\n    };\r\n    _proto._isContainerEmpty = function() {\r\n        return this._itemContainer().is(\":empty\")\r\n    };\r\n    _proto._syncSelectionOptions = function() {\r\n        return (0, _common.asyncNoop)()\r\n    };\r\n    _proto._optionChanged = function(args) {\r\n        switch (args.name) {\r\n            case \"showSubmenuMode\":\r\n                break;\r\n            case \"selectedItem\":\r\n                var node = this._dataAdapter.getNodeByItem(args.value);\r\n                var selectedKey = this._dataAdapter.getSelectedNodesKeys()[0];\r\n                if (node && node.internalFields.key !== selectedKey) {\r\n                    if (false === node.selectable) {\r\n                        break\r\n                    }\r\n                    if (selectedKey) {\r\n                        this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n                    }\r\n                    this._toggleItemSelection(node, true);\r\n                    this._updateSelectedItems()\r\n                }\r\n                break;\r\n            case \"cssClass\":\r\n            case \"position\":\r\n            case \"selectByClick\":\r\n            case \"animation\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                _HierarchicalCollecti.prototype._optionChanged.call(this, args)\r\n        }\r\n    };\r\n    _proto._toggleItemSelection = function(node, value) {\r\n        var itemElement = this._getElementByItem(node.internalFields.item);\r\n        itemElement && (0, _renderer.default)(itemElement).toggleClass(DX_MENU_SELECTED_ITEM_CLASS);\r\n        this._dataAdapter.toggleSelection(node.internalFields.key, value)\r\n    };\r\n    _proto._getElementByItem = function(itemData) {\r\n        var _this3 = this;\r\n        var result;\r\n        (0, _iterator.each)(this._itemElements(), function(_, itemElement) {\r\n            if ((0, _renderer.default)(itemElement).data(_this3._itemDataKey()) !== itemData) {\r\n                return true\r\n            }\r\n            result = itemElement;\r\n            return false\r\n        });\r\n        return result\r\n    };\r\n    _proto._updateSelectedItems = function(oldSelection, newSelection) {\r\n        if (oldSelection || newSelection) {\r\n            this._fireSelectionChangeEvent(newSelection, oldSelection)\r\n        }\r\n    };\r\n    _proto._fireSelectionChangeEvent = function(addedSelection, removedSelection) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: [addedSelection],\r\n            removedItems: [removedSelection]\r\n        })\r\n    };\r\n    _proto.selectItem = function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement;\r\n        var selectedKey = this._dataAdapter.getSelectedNodesKeys()[0];\r\n        var selectedItem = this.option(\"selectedItem\");\r\n        var node = this._dataAdapter.getNodeByItem(itemData);\r\n        if (node.internalFields.key !== selectedKey) {\r\n            if (selectedKey) {\r\n                this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n            }\r\n            this._toggleItemSelection(node, true);\r\n            this._updateSelectedItems(selectedItem, itemData);\r\n            this._setOptionWithoutOptionChange(\"selectedItem\", itemData)\r\n        }\r\n    };\r\n    _proto.unselectItem = function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement;\r\n        var node = this._dataAdapter.getNodeByItem(itemData);\r\n        var selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.selected) {\r\n            this._toggleItemSelection(node, false);\r\n            this._updateSelectedItems(selectedItem, null);\r\n            this._setOptionWithoutOptionChange(\"selectedItem\", null)\r\n        }\r\n    };\r\n    return MenuBase\r\n}(_ui.default);\r\nMenuBase.ItemClass = _item.default;\r\nvar _default = MenuBase;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/data_grid/ui.data_grid.core.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.utils\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"../grid_core/ui.grid_core.modules\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n    var keys = Object.keys(object);\r\n    if (Object.getOwnPropertySymbols) {\r\n        var symbols = Object.getOwnPropertySymbols(object);\r\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\r\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable\r\n        })), keys.push.apply(keys, symbols)\r\n    }\r\n    return keys\r\n}\r\n\r\nfunction _objectSpread(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = null != arguments[i] ? arguments[i] : {};\r\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\r\n            _defineProperty(target, key, source[key])\r\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\r\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\r\n        })\r\n    }\r\n    return target\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar _default = _objectSpread(_objectSpread(_objectSpread({}, _uiGrid_core2.default), _uiGrid_core.default), {}, {\r\n    modules: []\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _ui = _interopRequireDefault(require(\"./date_box/ui.date_box\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _ui.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.base.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _version = require(\"../../core/utils/version\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _support = require(\"../../core/utils/support\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _config = _interopRequireDefault(require(\"../../core/config\"));\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.date_utils\"));\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _ui2 = _interopRequireDefault(require(\"../drop_down_editor/ui.drop_down_editor\"));\r\nvar _date2 = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _uiDate_boxStrategy = _interopRequireDefault(require(\"./ui.date_box.strategy.calendar\"));\r\nvar _uiDate_boxStrategy2 = _interopRequireDefault(require(\"./ui.date_box.strategy.date_view\"));\r\nvar _uiDate_boxStrategy3 = _interopRequireDefault(require(\"./ui.date_box.strategy.native\"));\r\nvar _uiDate_boxStrategy4 = _interopRequireDefault(require(\"./ui.date_box.strategy.calendar_with_time\"));\r\nvar _uiDate_boxStrategy5 = _interopRequireDefault(require(\"./ui.date_box.strategy.list\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar DATEBOX_CLASS = \"dx-datebox\";\r\nvar DX_AUTO_WIDTH_CLASS = \"dx-auto-width\";\r\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\r\nvar DX_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\r\nvar DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\r\nvar PICKER_TYPE = {\r\n    calendar: \"calendar\",\r\n    rollers: \"rollers\",\r\n    list: \"list\",\r\n    \"native\": \"native\"\r\n};\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar STRATEGY_NAME = {\r\n    calendar: \"Calendar\",\r\n    dateView: \"DateView\",\r\n    \"native\": \"Native\",\r\n    calendarWithTime: \"CalendarWithTime\",\r\n    list: \"List\"\r\n};\r\nvar STRATEGY_CLASSES = {\r\n    Calendar: _uiDate_boxStrategy.default,\r\n    DateView: _uiDate_boxStrategy2.default,\r\n    Native: _uiDate_boxStrategy3.default,\r\n    CalendarWithTime: _uiDate_boxStrategy4.default,\r\n    List: _uiDate_boxStrategy5.default\r\n};\r\nvar DateBox = _ui2.default.inherit({\r\n    _supportedKeys: function() {\r\n        return (0, _extend.extend)(this.callBase(), this._strategy.supportedKeys())\r\n    },\r\n    _renderButtonContainers: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._strategy.customizeButtons()\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            type: \"date\",\r\n            showAnalogClock: true,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            displayFormat: null,\r\n            interval: 30,\r\n            disabledDates: null,\r\n            pickerType: PICKER_TYPE.calendar,\r\n            invalidDateMessage: _message.default.format(\"dxDateBox-validation-datetime\"),\r\n            dateOutOfRangeMessage: _message.default.format(\"validation-range\"),\r\n            applyButtonText: _message.default.format(\"OK\"),\r\n            adaptivityEnabled: false,\r\n            calendarOptions: {},\r\n            useHiddenSubmitElement: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                \"dropDownOptions.showTitle\": true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                var realDevice = _devices.default.real();\r\n                var platform = realDevice.platform;\r\n                return \"ios\" === platform || \"android\" === platform\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.native\r\n            }\r\n        }, {\r\n            device: function(currentDevice) {\r\n                var realDevice = _devices.default.real();\r\n                var platform = realDevice.platform;\r\n                var version = realDevice.version;\r\n                return \"generic\" === platform && \"desktop\" !== currentDevice.deviceType || \"android\" === platform && (0, _version.compare)(version, [4, 4]) < 0\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.rollers\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\",\r\n                deviceType: \"desktop\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }])\r\n    },\r\n    _initOptions: function(options) {\r\n        this._userOptions = (0, _extend.extend)({}, options);\r\n        this.callBase(options);\r\n        this._updatePickerOptions()\r\n    },\r\n    _updatePickerOptions: function() {\r\n        var pickerType = this.option(\"pickerType\");\r\n        var type = this.option(\"type\");\r\n        if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\r\n            pickerType = PICKER_TYPE.calendar\r\n        }\r\n        if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\r\n            pickerType = PICKER_TYPE.list\r\n        }\r\n        this.option(\"showDropDownButton\", \"generic\" !== _devices.default.real().platform || pickerType !== PICKER_TYPE.native);\r\n        this._pickerType = pickerType\r\n    },\r\n    _init: function() {\r\n        this._initStrategy();\r\n        this.option((0, _extend.extend)({}, this._strategy.getDefaultOptions(), this._userOptions));\r\n        delete this._userOptions;\r\n        this.callBase()\r\n    },\r\n    _toLowerCaseFirstLetter: function(string) {\r\n        return string.charAt(0).toLowerCase() + string.substr(1)\r\n    },\r\n    _initStrategy: function() {\r\n        var strategyName = this._getStrategyName(this._getFormatType());\r\n        var strategy = STRATEGY_CLASSES[strategyName];\r\n        if (!(this._strategy && this._strategy.NAME === strategyName)) {\r\n            this._strategy = new strategy(this)\r\n        }\r\n    },\r\n    _getFormatType: function() {\r\n        var currentType = this.option(\"type\");\r\n        var isTime = /h|m|s/g.test(currentType);\r\n        var isDate = /d|M|Y/g.test(currentType);\r\n        var type = \"\";\r\n        if (isDate) {\r\n            type += TYPE.date\r\n        }\r\n        if (isTime) {\r\n            type += TYPE.time\r\n        }\r\n        return type\r\n    },\r\n    _getStrategyName: function(type) {\r\n        var pickerType = this._pickerType;\r\n        if (pickerType === PICKER_TYPE.rollers) {\r\n            return STRATEGY_NAME.dateView\r\n        } else {\r\n            if (pickerType === PICKER_TYPE.native) {\r\n                return STRATEGY_NAME.native\r\n            }\r\n        }\r\n        if (type === TYPE.date) {\r\n            return STRATEGY_NAME.calendar\r\n        }\r\n        if (type === TYPE.datetime) {\r\n            return STRATEGY_NAME.calendarWithTime\r\n        }\r\n        return STRATEGY_NAME.list\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(DATEBOX_CLASS);\r\n        this.callBase();\r\n        this._refreshFormatClass();\r\n        this._refreshPickerTypeClass();\r\n        this._strategy.renderInputMinMax(this._input())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._formatValidationIcon()\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"));\r\n        this._dimensionChanged()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.callBase(arguments);\r\n        if (this._popup) {\r\n            var _this$_strategy$_upda, _this$_strategy;\r\n            null === (_this$_strategy$_upda = (_this$_strategy = this._strategy)._updatePopupHeight) || void 0 === _this$_strategy$_upda ? void 0 : _this$_strategy$_upda.call(_this$_strategy)\r\n        }\r\n    },\r\n    _refreshFormatClass: function() {\r\n        var $element = this.$element();\r\n        (0, _iterator.each)(TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"))\r\n    },\r\n    _refreshPickerTypeClass: function() {\r\n        var $element = this.$element();\r\n        (0, _iterator.each)(PICKER_TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _formatValidationIcon: function() {\r\n        if (!(0, _window.hasWindow)()) {\r\n            return\r\n        }\r\n        var inputElement = this._input().get(0);\r\n        var isRtlEnabled = this.option(\"rtlEnabled\");\r\n        var clearButtonWidth = this._getClearButtonWidth();\r\n        var longestElementDimensions = this._getLongestElementDimensions();\r\n        var curWidth = parseFloat(window.getComputedStyle(inputElement).width) - clearButtonWidth;\r\n        var shouldHideValidationIcon = longestElementDimensions.width > curWidth;\r\n        var style = inputElement.style;\r\n        this.$element().toggleClass(DX_INVALID_BADGE_CLASS, !shouldHideValidationIcon);\r\n        if (shouldHideValidationIcon) {\r\n            if (void 0 === this._storedPadding) {\r\n                this._storedPadding = isRtlEnabled ? longestElementDimensions.leftPadding : longestElementDimensions.rightPadding\r\n            }\r\n            isRtlEnabled ? style.paddingLeft = 0 : style.paddingRight = 0\r\n        } else {\r\n            isRtlEnabled ? style.paddingLeft = this._storedPadding + \"px\" : style.paddingRight = this._storedPadding + \"px\"\r\n        }\r\n    },\r\n    _getClearButtonWidth: function() {\r\n        var clearButtonWidth = 0;\r\n        if (this._isClearButtonVisible() && \"\" === this._input().val()) {\r\n            var clearButtonElement = this.$element().find(\".\" + DX_CLEAR_BUTTON_CLASS).get(0);\r\n            clearButtonWidth = parseFloat(window.getComputedStyle(clearButtonElement).width)\r\n        }\r\n        return clearButtonWidth\r\n    },\r\n    _getLongestElementDimensions: function() {\r\n        var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var longestValue = _date2.default.format(_ui.default.getLongestDate(format, _date2.default.getMonthNames(), _date2.default.getDayNames()), format);\r\n        var $input = this._input();\r\n        var inputElement = $input.get(0);\r\n        var $longestValueElement = (0, _dom.createTextElementHiddenCopy)($input, longestValue);\r\n        var isPaddingStored = void 0 !== this._storedPadding;\r\n        var storedPadding = !isPaddingStored ? 0 : this._storedPadding;\r\n        $longestValueElement.appendTo(this.$element());\r\n        var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width);\r\n        var rightPadding = parseFloat(window.getComputedStyle(inputElement).paddingRight);\r\n        var leftPadding = parseFloat(window.getComputedStyle(inputElement).paddingLeft);\r\n        var necessaryWidth = elementWidth + leftPadding + rightPadding + storedPadding;\r\n        $longestValueElement.remove();\r\n        return {\r\n            width: necessaryWidth,\r\n            leftPadding: leftPadding,\r\n            rightPadding: rightPadding\r\n        }\r\n    },\r\n    _getKeyboardListeners: function() {\r\n        return this.callBase().concat([this._strategy && this._strategy.getKeyboardListener()])\r\n    },\r\n    _renderPopup: function() {\r\n        this.callBase();\r\n        this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS);\r\n        this._renderPopupWrapper()\r\n    },\r\n    _popupConfig: function() {\r\n        var popupConfig = this.callBase();\r\n        return (0, _extend.extend)(this._strategy.popupConfig(popupConfig), {\r\n            title: this._getPopupTitle(),\r\n            dragEnabled: false\r\n        })\r\n    },\r\n    _renderPopupWrapper: function() {\r\n        if (!this._popup) {\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        var classPostfixes = (0, _extend.extend)({}, TYPE, PICKER_TYPE);\r\n        (0, _iterator.each)(classPostfixes, function(_, item) {\r\n            $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item)\r\n        }.bind(this));\r\n        this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _renderPopupContent: function() {\r\n        this.callBase();\r\n        this._strategy.renderPopupContent()\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._strategy.getFirstPopupElement() || this.callBase()\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._strategy.getLastPopupElement() || this.callBase()\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupShowingHandler()\r\n    },\r\n    _popupShownHandler: function() {\r\n        this.callBase();\r\n        this._strategy.renderOpenedState()\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this.callBase();\r\n        this._strategy.renderOpenedState();\r\n        this._strategy.popupHiddenHandler()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._formatValidationIcon()\r\n        }\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        this.option(\"text\", \"\");\r\n        this.callBase(e)\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        if (this._pickerType === PICKER_TYPE.rollers) {\r\n            return true\r\n        }\r\n        var platform = _devices.default.real().platform;\r\n        var isCustomValueDisabled = this._isNativeType() && (\"ios\" === platform || \"android\" === platform);\r\n        if (isCustomValueDisabled) {\r\n            return this.option(\"readOnly\")\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.callBase() && !this._isNativeType()\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        this.option(\"text\", this._getDisplayedText(value));\r\n        this._strategy.renderValue();\r\n        return this.callBase()\r\n    },\r\n    _setSubmitValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        var dateSerializationFormat = this.option(\"dateSerializationFormat\");\r\n        var submitFormat = _ui.default.SUBMIT_FORMATS_MAP[this.option(\"type\")];\r\n        var submitValue = dateSerializationFormat ? _date_serialization.default.serializeDate(value, dateSerializationFormat) : _ui.default.toStandardDateFormat(value, submitFormat);\r\n        this._getSubmitElement().val(submitValue)\r\n    },\r\n    _getDisplayedText: function(value) {\r\n        var mode = this.option(\"mode\");\r\n        var displayedText;\r\n        if (\"text\" === mode) {\r\n            var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n            displayedText = _date2.default.format(value, displayFormat)\r\n        } else {\r\n            var format = this._getFormatByMode(mode);\r\n            if (format) {\r\n                displayedText = _date2.default.format(value, format)\r\n            } else {\r\n                displayedText = _ui.default.toStandardDateFormat(value, mode)\r\n            }\r\n        }\r\n        return displayedText\r\n    },\r\n    _getFormatByMode: function(mode) {\r\n        return (0, _support.inputType)(mode) ? null : _ui.default.FORMATS_MAP[mode]\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var _this$option = this.option(),\r\n            text = _this$option.text,\r\n            type = _this$option.type,\r\n            validationError = _this$option.validationError;\r\n        var currentValue = this.dateOption(\"value\");\r\n        if (text === this._getDisplayedText(currentValue)) {\r\n            if (!validationError || validationError.editorSpecific) {\r\n                this._applyInternalValidation(currentValue);\r\n                this._applyCustomValidation(currentValue)\r\n            }\r\n            return\r\n        }\r\n        var parsedDate = this._getParsedDate(text);\r\n        var value = null !== currentValue && void 0 !== currentValue ? currentValue : this._getDateByDefault();\r\n        var newValue = _ui.default.mergeDates(value, parsedDate, type);\r\n        var date = parsedDate && \"time\" === type ? newValue : parsedDate;\r\n        if (this._applyInternalValidation(date).isValid) {\r\n            var displayedText = this._getDisplayedText(newValue);\r\n            if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\r\n                this._renderValue()\r\n            } else {\r\n                this.dateValue(newValue, e)\r\n            }\r\n        }\r\n    },\r\n    _getDateByDefault: function() {\r\n        return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate()\r\n    },\r\n    _getParsedDate: function(text) {\r\n        var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var parsedText = this._strategy.getParsedText(text, displayFormat);\r\n        return null !== parsedText && void 0 !== parsedText ? parsedText : void 0\r\n    },\r\n    _applyInternalValidation: function(value) {\r\n        var text = this.option(\"text\");\r\n        var hasText = !!text && null !== value;\r\n        var isDate = !!value && (0, _type.isDate)(value) && !isNaN(value.getTime());\r\n        var isDateInRange = isDate && _date.default.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\"));\r\n        var isValid = !hasText && !value || isDateInRange;\r\n        var validationMessage = \"\";\r\n        if (!isDate) {\r\n            validationMessage = this.option(\"invalidDateMessage\")\r\n        } else {\r\n            if (!isDateInRange) {\r\n                validationMessage = this.option(\"dateOutOfRangeMessage\")\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: validationMessage\r\n            }\r\n        });\r\n        return {\r\n            isValid: isValid,\r\n            isDate: isDate\r\n        }\r\n    },\r\n    _applyCustomValidation: function(value) {\r\n        this.validationRequest.fire({\r\n            editor: this,\r\n            value: this._serializeDate(value)\r\n        })\r\n    },\r\n    _isValueChanged: function(newValue) {\r\n        var oldValue = this.dateOption(\"value\");\r\n        var oldTime = oldValue && oldValue.getTime();\r\n        var newTime = newValue && newValue.getTime();\r\n        return oldTime !== newTime\r\n    },\r\n    _isTextChanged: function(newValue) {\r\n        var oldText = this.option(\"text\");\r\n        var newText = newValue && this._getDisplayedText(newValue) || \"\";\r\n        return oldText !== newText\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().attr(\"autocomplete\", \"off\")\r\n    },\r\n    _renderOpenedState: function() {\r\n        if (!this._isNativeType()) {\r\n            this.callBase()\r\n        }\r\n        if (this._strategy.isAdaptivityChanged()) {\r\n            this._refreshStrategy()\r\n        }\r\n    },\r\n    _getPopupTitle: function() {\r\n        var placeholder = this.option(\"placeholder\");\r\n        if (placeholder) {\r\n            return placeholder\r\n        }\r\n        var type = this.option(\"type\");\r\n        if (type === TYPE.time) {\r\n            return _message.default.format(\"dxDateBox-simulatedDataPickerTitleTime\")\r\n        }\r\n        if (type === TYPE.date || type === TYPE.datetime) {\r\n            return _message.default.format(\"dxDateBox-simulatedDataPickerTitleDate\")\r\n        }\r\n        return \"\"\r\n    },\r\n    _refreshStrategy: function() {\r\n        this._strategy.dispose();\r\n        this._initStrategy();\r\n        this.option(this._strategy.getDefaultOptions());\r\n        this._refresh()\r\n    },\r\n    _applyButtonHandler: function(e) {\r\n        var value = this._strategy.getValue();\r\n        var _this$_applyInternalV = this._applyInternalValidation(value),\r\n            isValid = _this$_applyInternalV.isValid,\r\n            isDate = _this$_applyInternalV.isDate;\r\n        if (isValid) {\r\n            this.dateValue(value, e.event)\r\n        } else {\r\n            if (isDate) {\r\n                var displayedText = this._getDisplayedText(value);\r\n                this.option(\"text\", displayedText);\r\n                this._renderDisplayText(displayedText)\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        var _this$_strategy2;\r\n        this.callBase();\r\n        null === (_this$_strategy2 = this._strategy) || void 0 === _this$_strategy2 ? void 0 : _this$_strategy2.dispose()\r\n    },\r\n    _isNativeType: function() {\r\n        return this._pickerType === PICKER_TYPE.native\r\n    },\r\n    _updatePopupTitle: function() {\r\n        var _this$_popup;\r\n        null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.option(\"title\", this._getPopupTitle())\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showClearButton\":\r\n            case \"buttons\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"pickerType\":\r\n                this._updatePickerOptions({\r\n                    pickerType: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshPickerTypeClass();\r\n                this._invalidate();\r\n                break;\r\n            case \"type\":\r\n                this._updatePickerOptions({\r\n                    format: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshFormatClass();\r\n                this._renderPopupWrapper();\r\n                this._formatValidationIcon();\r\n                this._updateValue();\r\n                break;\r\n            case \"placeholder\":\r\n                this.callBase.apply(this, arguments);\r\n                this._updatePopupTitle();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                var isValid = this.option(\"isValid\");\r\n                this._applyInternalValidation(this.dateOption(\"value\"));\r\n                if (!isValid) {\r\n                    this._applyCustomValidation(this.dateOption(\"value\"))\r\n                }\r\n                this._invalidate();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"interval\":\r\n            case \"disabledDates\":\r\n            case \"calendarOptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"displayFormat\":\r\n                this.option(\"text\", this._getDisplayedText(this.dateOption(\"value\")));\r\n                this._renderInputValue();\r\n                break;\r\n            case \"text\":\r\n                this._strategy.textChangedHandler(args.value);\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"isValid\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"showDropDownButton\":\r\n                this._formatValidationIcon();\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"readOnly\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"invalidDateMessage\":\r\n            case \"dateOutOfRangeMessage\":\r\n            case \"adaptivityEnabled\":\r\n            case \"showAnalogClock\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _getSerializationFormat: function() {\r\n        var value = this.option(\"value\");\r\n        if (this.option(\"dateSerializationFormat\") && (0, _config.default)().forceIsoDateParsing) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if ((0, _type.isNumeric)(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!(0, _type.isString)(value)) {\r\n            return\r\n        }\r\n        return _date_serialization.default.getDateSerializationFormat(value)\r\n    },\r\n    _updateValue: function(value) {\r\n        this.callBase();\r\n        this._applyInternalValidation(null !== value && void 0 !== value ? value : this.dateOption(\"value\"))\r\n    },\r\n    dateValue: function(value, dxEvent) {\r\n        var isValueChanged = this._isValueChanged(value);\r\n        if (isValueChanged && dxEvent) {\r\n            this._saveValueChangeEvent(dxEvent)\r\n        }\r\n        if (!isValueChanged) {\r\n            if (this._isTextChanged(value)) {\r\n                this._updateValue(value)\r\n            } else {\r\n                if (\"\" === this.option(\"text\")) {\r\n                    this._applyCustomValidation(value)\r\n                }\r\n            }\r\n        }\r\n        return this.dateOption(\"value\", value)\r\n    },\r\n    dateOption: function(optionName, value) {\r\n        if (1 === arguments.length) {\r\n            return _date_serialization.default.deserializeDate(this.option(optionName))\r\n        }\r\n        this.option(optionName, this._serializeDate(value))\r\n    },\r\n    _serializeDate: function(date) {\r\n        var serializationFormat = this._getSerializationFormat();\r\n        return _date_serialization.default.serializeDate(date, serializationFormat)\r\n    },\r\n    _clearValue: function() {\r\n        var value = this.option(\"value\");\r\n        this.callBase();\r\n        if (null === value) {\r\n            this._applyCustomValidation(null)\r\n        }\r\n    },\r\n    reset: function() {\r\n        var value = this.option(\"value\");\r\n        this.callBase();\r\n        if (null === value) {\r\n            this._applyInternalValidation(null)\r\n        }\r\n    }\r\n});\r\nvar _default = DateBox;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _uiDate_box = _interopRequireDefault(require(\"./ui.date_box.mask\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}(0, _component_registrator.default)(\"dxDateBox\", _uiDate_box.default);\r\nvar _default = _uiDate_box.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.mask.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiDate_boxMask = require(\"./ui.date_box.mask.parts\");\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _date2 = require(\"../../localization/ldml/date.parser\");\r\nvar _date3 = require(\"../../localization/ldml/date.format\");\r\nvar _uiDate_box = _interopRequireDefault(require(\"./ui.date_box.base\"));\r\nvar _number = _interopRequireDefault(require(\"../../localization/number\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MASK_EVENT_NAMESPACE = \"dateBoxMask\";\r\nvar FORWARD = 1;\r\nvar BACKWARD = -1;\r\nvar DateBoxMask = _uiDate_box.default.inherit({\r\n    _supportedKeys: function(e) {\r\n        var _this = this;\r\n        var originalHandlers = this.callBase(e);\r\n        var callOriginalHandler = function(e) {\r\n            var originalHandler = originalHandlers[(0, _index.normalizeKeyName)(e)];\r\n            return originalHandler && originalHandler.apply(_this, [e])\r\n        };\r\n        var applyHandler = function(e, maskHandler) {\r\n            if (_this._shouldUseOriginalHandler(e)) {\r\n                return callOriginalHandler.apply(_this, [e])\r\n            } else {\r\n                return maskHandler.apply(_this, [e])\r\n            }\r\n        };\r\n        return (0, _extend.extend)({}, originalHandlers, {\r\n            del: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._revertPart(FORWARD);\r\n                    _this._isAllSelected() || event.preventDefault()\r\n                })\r\n            },\r\n            backspace: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._revertPart(BACKWARD);\r\n                    _this._isAllSelected() || event.preventDefault()\r\n                })\r\n            },\r\n            home: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._selectFirstPart();\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            end: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._selectLastPart();\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            escape: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._revertChanges(event)\r\n                })\r\n            },\r\n            enter: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._enterHandler(event)\r\n                })\r\n            },\r\n            leftArrow: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._selectNextPart(BACKWARD);\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            rightArrow: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._selectNextPart(FORWARD);\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            upArrow: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._upDownArrowHandler(FORWARD);\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            downArrow: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._upDownArrowHandler(BACKWARD);\r\n                    event.preventDefault()\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _shouldUseOriginalHandler: function(e) {\r\n        var keysToHandleByMask = [\"backspace\", \"del\"];\r\n        var isNotDeletingInCalendar = this.option(\"opened\") && e && keysToHandleByMask.indexOf((0, _index.normalizeKeyName)(e)) === -1;\r\n        return !this._useMaskBehavior() || isNotDeletingInCalendar || e && e.altKey\r\n    },\r\n    _upDownArrowHandler: function(step) {\r\n        this._setNewDateIfEmpty();\r\n        var originalValue = this._getActivePartValue(this._initialMaskValue);\r\n        var currentValue = this._getActivePartValue();\r\n        var delta = currentValue - originalValue;\r\n        this._loadMaskValue(this._initialMaskValue);\r\n        this._partIncrease(delta + step, true)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            useMaskBehavior: false,\r\n            emptyDateValue: new Date(2e3, 0, 1, 0, 0, 0)\r\n        })\r\n    },\r\n    _isSingleCharKey: function(_ref) {\r\n        var originalEvent = _ref.originalEvent,\r\n            alt = _ref.alt;\r\n        var key = originalEvent.data || (\"space\" === (0, _index.normalizeKeyName)(originalEvent) ? \" \" : originalEvent.key);\r\n        return \"string\" === typeof key && 1 === key.length && !alt && !(0, _index.isCommandKeyPressed)(originalEvent)\r\n    },\r\n    _isSingleDigitKey: function(e) {\r\n        var _e$originalEvent;\r\n        var data = null === (_e$originalEvent = e.originalEvent) || void 0 === _e$originalEvent ? void 0 : _e$originalEvent.data;\r\n        return 1 === (null === data || void 0 === data ? void 0 : data.length) && parseInt(data, 10)\r\n    },\r\n    _useBeforeInputEvent: function() {\r\n        var device = _devices.default.real();\r\n        return device.android && device.version[0] > 4\r\n    },\r\n    _keyInputHandler: function(e, key) {\r\n        var oldInputValue = this._input().val();\r\n        this._processInputKey(key);\r\n        e.preventDefault();\r\n        var isValueChanged = oldInputValue !== this._input().val();\r\n        isValueChanged && _events_engine.default.trigger(this._input(), \"input\")\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        var _this2 = this;\r\n        var key = e.originalEvent.key;\r\n        var result = this.callBase(e);\r\n        if (!this._useMaskBehavior() || this._useBeforeInputEvent()) {\r\n            return result\r\n        }\r\n        if (_browser.default.chrome && \"Process\" === e.key && 0 === e.code.indexOf(\"Digit\")) {\r\n            key = e.code.replace(\"Digit\", \"\");\r\n            this._processInputKey(key);\r\n            this._maskInputHandler = function() {\r\n                _this2._renderSelectedPart()\r\n            }\r\n        } else {\r\n            if (this._isSingleCharKey(e)) {\r\n                this._keyInputHandler(e.originalEvent, key)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _maskBeforeInputHandler: function(e) {\r\n        var _this3 = this;\r\n        this._maskInputHandler = null;\r\n        var inputType = e.originalEvent.inputType;\r\n        if (\"insertCompositionText\" === inputType) {\r\n            this._maskInputHandler = function() {\r\n                _this3._renderSelectedPart()\r\n            }\r\n        }\r\n        var isBackwardDeletion = \"deleteContentBackward\" === inputType;\r\n        var isForwardDeletion = \"deleteContentForward\" === inputType;\r\n        if (isBackwardDeletion || isForwardDeletion) {\r\n            var direction = isBackwardDeletion ? BACKWARD : FORWARD;\r\n            this._maskInputHandler = function() {\r\n                _this3._revertPart();\r\n                _this3._selectNextPart(direction)\r\n            }\r\n        }\r\n        if (!this._useMaskBehavior() || !this._isSingleCharKey(e)) {\r\n            return\r\n        }\r\n        var key = e.originalEvent.data;\r\n        this._keyInputHandler(e, key);\r\n        return true\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        var event = e.originalEvent;\r\n        if (\"insertCompositionText\" === (null === event || void 0 === event ? void 0 : event.inputType) && this._isSingleDigitKey(e)) {\r\n            this._processInputKey(event.data);\r\n            this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n            this._selectNextPart()\r\n        }\r\n        this.callBase(e);\r\n        if (this._maskInputHandler) {\r\n            this._maskInputHandler();\r\n            this._maskInputHandler = null\r\n        }\r\n    },\r\n    _processInputKey: function(key) {\r\n        if (this._isAllSelected()) {\r\n            this._activePartIndex = 0\r\n        }\r\n        this._setNewDateIfEmpty();\r\n        if (isNaN(parseInt(key))) {\r\n            this._searchString(key)\r\n        } else {\r\n            this._searchNumber(key)\r\n        }\r\n    },\r\n    _isAllSelected: function() {\r\n        var caret = this._caret();\r\n        return caret.end - caret.start === this.option(\"text\").length\r\n    },\r\n    _getFormatPattern: function() {\r\n        if (this._formatPattern) {\r\n            return this._formatPattern\r\n        }\r\n        var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var isLDMLPattern = (0, _type.isString)(format) && !_date.default._getPatternByFormat(format);\r\n        if (isLDMLPattern) {\r\n            this._formatPattern = format\r\n        } else {\r\n            this._formatPattern = (0, _date3.getFormat)(function(value) {\r\n                return _date.default.format(value, format)\r\n            })\r\n        }\r\n        return this._formatPattern\r\n    },\r\n    _setNewDateIfEmpty: function() {\r\n        if (!this._maskValue) {\r\n            var value = \"time\" === this.option(\"type\") ? new Date(null) : new Date;\r\n            this._maskValue = value;\r\n            this._initialMaskValue = value;\r\n            this._renderDateParts()\r\n        }\r\n    },\r\n    _partLimitsReached: function(max) {\r\n        var maxLimitLength = String(max).length;\r\n        var formatLength = this._getActivePartProp(\"pattern\").length;\r\n        var isShortFormat = 1 === formatLength;\r\n        var maxSearchLength = isShortFormat ? maxLimitLength : Math.min(formatLength, maxLimitLength);\r\n        var isLengthExceeded = this._searchValue.length === maxSearchLength;\r\n        var isValueOverflowed = parseInt(this._searchValue + \"0\") > max;\r\n        return isLengthExceeded || isValueOverflowed\r\n    },\r\n    _searchNumber: function(char) {\r\n        var _this$_getActivePartL = this._getActivePartLimits(),\r\n            max = _this$_getActivePartL.max;\r\n        var maxLimitLength = String(max).length;\r\n        this._searchValue = (this._searchValue + char).substr(-maxLimitLength);\r\n        if (isNaN(this._searchValue)) {\r\n            this._searchValue = char\r\n        }\r\n        this._setActivePartValue(this._searchValue);\r\n        if (this._partLimitsReached(max)) {\r\n            this._selectNextPart(FORWARD)\r\n        }\r\n    },\r\n    _searchString: function(char) {\r\n        if (!isNaN(parseInt(this._getActivePartProp(\"text\")))) {\r\n            return\r\n        }\r\n        var limits = this._getActivePartProp(\"limits\")(this._maskValue);\r\n        var startString = this._searchValue + char.toLowerCase();\r\n        var endLimit = limits.max - limits.min;\r\n        for (var i = 0; i <= endLimit; i++) {\r\n            this._loadMaskValue(this._initialMaskValue);\r\n            this._partIncrease(i + 1);\r\n            if (0 === this._getActivePartProp(\"text\").toLowerCase().indexOf(startString)) {\r\n                this._searchValue = startString;\r\n                return\r\n            }\r\n        }\r\n        this._setNewDateIfEmpty();\r\n        if (this._searchValue) {\r\n            this._clearSearchValue();\r\n            this._searchString(char)\r\n        }\r\n    },\r\n    _clearSearchValue: function() {\r\n        this._searchValue = \"\"\r\n    },\r\n    _revertPart: function(direction) {\r\n        if (!this._isAllSelected()) {\r\n            var actual = this._getActivePartValue(this.option(\"emptyDateValue\"));\r\n            this._setActivePartValue(actual);\r\n            this._selectNextPart(direction)\r\n        }\r\n        this._clearSearchValue()\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return this.option(\"useMaskBehavior\") && \"text\" === this.option(\"mode\")\r\n    },\r\n    _prepareRegExpInfo: function() {\r\n        this._regExpInfo = (0, _date2.getRegExpInfo)(this._getFormatPattern(), _date.default);\r\n        var regexp = this._regExpInfo.regexp;\r\n        var source = regexp.source;\r\n        var flags = regexp.flags;\r\n        var quantifierRegexp = new RegExp(/(\\{[0-9]+,?[0-9]*\\})/);\r\n        var convertedSource = source.split(quantifierRegexp).map(function(sourcePart) {\r\n            return quantifierRegexp.test(sourcePart) ? sourcePart : _number.default.convertDigits(sourcePart, false)\r\n        }).join(\"\");\r\n        this._regExpInfo.regexp = new RegExp(convertedSource, flags)\r\n    },\r\n    _initMaskState: function() {\r\n        this._activePartIndex = 0;\r\n        this._formatPattern = null;\r\n        this._prepareRegExpInfo();\r\n        this._loadMaskValue()\r\n    },\r\n    _renderMask: function() {\r\n        this.callBase();\r\n        this._detachMaskEvents();\r\n        this._clearMaskState();\r\n        if (this._useMaskBehavior()) {\r\n            this._attachMaskEvents();\r\n            this._initMaskState();\r\n            this._renderDateParts()\r\n        }\r\n    },\r\n    _renderDateParts: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this.option(\"text\") || this._getDisplayedText(this._maskValue);\r\n        if (text) {\r\n            this._dateParts = (0, _uiDate_boxMask.renderDateParts)(text, this._regExpInfo);\r\n            if (!this._input().is(\":hidden\")) {\r\n                this._selectNextPart()\r\n            }\r\n        }\r\n    },\r\n    _detachMaskEvents: function() {\r\n        _events_engine.default.off(this._input(), \".\" + MASK_EVENT_NAMESPACE)\r\n    },\r\n    _attachMaskEvents: function() {\r\n        var _this4 = this;\r\n        _events_engine.default.on(this._input(), (0, _index.addNamespace)(\"dxclick\", MASK_EVENT_NAMESPACE), this._maskClickHandler.bind(this));\r\n        _events_engine.default.on(this._input(), (0, _index.addNamespace)(\"paste\", MASK_EVENT_NAMESPACE), this._maskPasteHandler.bind(this));\r\n        _events_engine.default.on(this._input(), (0, _index.addNamespace)(\"drop\", MASK_EVENT_NAMESPACE), function() {\r\n            _this4._renderSelectedPart()\r\n        });\r\n        _events_engine.default.on(this._input(), (0, _index.addNamespace)(\"compositionend\", MASK_EVENT_NAMESPACE), this._maskCompositionEndHandler.bind(this));\r\n        if (this._useBeforeInputEvent()) {\r\n            _events_engine.default.on(this._input(), (0, _index.addNamespace)(\"beforeinput\", MASK_EVENT_NAMESPACE), this._maskBeforeInputHandler.bind(this))\r\n        }\r\n    },\r\n    _renderSelectedPart: function() {\r\n        this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n        this._selectNextPart()\r\n    },\r\n    _selectLastPart: function() {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = this._dateParts.length;\r\n            this._selectNextPart(BACKWARD)\r\n        }\r\n    },\r\n    _selectFirstPart: function() {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = -1;\r\n            this._selectNextPart(FORWARD)\r\n        }\r\n    },\r\n    _onMouseWheel: function(e) {\r\n        if (this._useMaskBehavior()) {\r\n            this._partIncrease(e.delta > 0 ? FORWARD : BACKWARD, e)\r\n        }\r\n    },\r\n    _selectNextPart: function() {\r\n        var step = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\r\n        if (!this.option(\"text\") || this._disposed) {\r\n            return\r\n        }\r\n        if (step) {\r\n            this._initialMaskValue = new Date(this._maskValue)\r\n        }\r\n        var index = (0, _math.fitIntoRange)(this._activePartIndex + step, 0, this._dateParts.length - 1);\r\n        if (this._dateParts[index].isStub) {\r\n            var isBoundaryIndex = 0 === index && step < 0 || index === this._dateParts.length - 1 && step > 0;\r\n            if (!isBoundaryIndex) {\r\n                this._selectNextPart(step >= 0 ? step + 1 : step - 1);\r\n                return\r\n            } else {\r\n                index = this._activePartIndex\r\n            }\r\n        }\r\n        if (this._activePartIndex !== index) {\r\n            this._clearSearchValue()\r\n        }\r\n        this._activePartIndex = index;\r\n        this._caret(this._getActivePartProp(\"caret\"))\r\n    },\r\n    _getRealLimitsPattern: function() {\r\n        if (\"d\" === this._getActivePartProp(\"pattern\")[0]) {\r\n            return \"dM\"\r\n        }\r\n    },\r\n    _getActivePartLimits: function(lockOtherParts) {\r\n        var limitFunction = this._getActivePartProp(\"limits\");\r\n        return limitFunction(this._maskValue, lockOtherParts && this._getRealLimitsPattern())\r\n    },\r\n    _getActivePartValue: function(dateValue) {\r\n        dateValue = dateValue || this._maskValue;\r\n        var getter = this._getActivePartProp(\"getter\");\r\n        return (0, _type.isFunction)(getter) ? getter(dateValue) : dateValue[getter]()\r\n    },\r\n    _addLeadingZeroes: function(value) {\r\n        var zeroes = this._searchValue.match(/^0+/);\r\n        var limits = this._getActivePartLimits();\r\n        var maxLimitLength = String(limits.max).length;\r\n        return ((zeroes && zeroes[0] || \"\") + String(value)).substr(-maxLimitLength)\r\n    },\r\n    _setActivePartValue: function(value, dateValue) {\r\n        dateValue = dateValue || this._maskValue;\r\n        var setter = this._getActivePartProp(\"setter\");\r\n        var limits = this._getActivePartLimits();\r\n        value = (0, _math.inRange)(value, limits.min, limits.max) ? value : value % 10;\r\n        value = this._addLeadingZeroes((0, _math.fitIntoRange)(value, limits.min, limits.max));\r\n        (0, _type.isFunction)(setter) ? setter(dateValue, value): dateValue[setter](value);\r\n        this._renderDisplayText(this._getDisplayedText(dateValue));\r\n        this._renderDateParts()\r\n    },\r\n    _getActivePartProp: function(property) {\r\n        if (!this._dateParts || !this._dateParts[this._activePartIndex]) {\r\n            return\r\n        }\r\n        return this._dateParts[this._activePartIndex][property]\r\n    },\r\n    _loadMaskValue: function() {\r\n        var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.dateOption(\"value\");\r\n        this._maskValue = value && new Date(value);\r\n        this._initialMaskValue = value && new Date(value)\r\n    },\r\n    _saveMaskValue: function() {\r\n        var value = this._maskValue && new Date(this._maskValue);\r\n        if (value && \"date\" === this.option(\"type\")) {\r\n            value.setHours(0, 0, 0, 0)\r\n        }\r\n        this._initialMaskValue = new Date(value);\r\n        this.dateOption(\"value\", value)\r\n    },\r\n    _revertChanges: function() {\r\n        this._loadMaskValue();\r\n        this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n        this._renderDateParts()\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        this.callBase(text);\r\n        if (this._useMaskBehavior()) {\r\n            this.option(\"text\", text)\r\n        }\r\n    },\r\n    _partIncrease: function(step, lockOtherParts) {\r\n        this._setNewDateIfEmpty();\r\n        var _this$_getActivePartL2 = this._getActivePartLimits(lockOtherParts),\r\n            max = _this$_getActivePartL2.max,\r\n            min = _this$_getActivePartL2.min;\r\n        var limitDelta = max - min;\r\n        if (1 === limitDelta) {\r\n            limitDelta++\r\n        }\r\n        var newValue = step + this._getActivePartValue();\r\n        if (newValue > max) {\r\n            newValue = this._applyLimits(newValue, {\r\n                limitBase: min,\r\n                limitClosest: max,\r\n                limitDelta: limitDelta\r\n            })\r\n        } else {\r\n            if (newValue < min) {\r\n                newValue = this._applyLimits(newValue, {\r\n                    limitBase: max,\r\n                    limitClosest: min,\r\n                    limitDelta: limitDelta\r\n                })\r\n            }\r\n        }\r\n        this._setActivePartValue(newValue)\r\n    },\r\n    _applyLimits: function(newValue, _ref2) {\r\n        var limitBase = _ref2.limitBase,\r\n            limitClosest = _ref2.limitClosest,\r\n            limitDelta = _ref2.limitDelta;\r\n        var delta = (newValue - limitClosest) % limitDelta;\r\n        return delta ? limitBase + delta - 1 * (0, _math.sign)(delta) : limitClosest\r\n    },\r\n    _maskClickHandler: function() {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = (0, _uiDate_boxMask.getDatePartIndexByPosition)(this._dateParts, this._caret().start);\r\n            if (!this._isAllSelected()) {\r\n                if ((0, _type.isDefined)(this._activePartIndex)) {\r\n                    this._caret(this._getActivePartProp(\"caret\"))\r\n                } else {\r\n                    this._selectLastPart()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _maskCompositionEndHandler: function(e) {\r\n        var _this5 = this;\r\n        if (_browser.default.msie && this._isSingleDigitKey(e)) {\r\n            var key = e.originalEvent.data;\r\n            this._processInputKey(key)\r\n        } else {\r\n            this._input().val(this._getDisplayedText(this._maskValue));\r\n            this._selectNextPart();\r\n            this._maskInputHandler = function() {\r\n                _this5._renderSelectedPart()\r\n            }\r\n        }\r\n    },\r\n    _maskPasteHandler: function(e) {\r\n        var newText = this._replaceSelectedText(this.option(\"text\"), this._caret(), (0, _dom.clipboardText)(e));\r\n        var date = _date.default.parse(newText, this._getFormatPattern());\r\n        if (date && this._isDateValid(date)) {\r\n            this._maskValue = date;\r\n            this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n            this._renderDateParts();\r\n            this._selectNextPart()\r\n        }\r\n        e.preventDefault()\r\n    },\r\n    _isDateValid: function(date) {\r\n        return (0, _type.isDate)(date) && !isNaN(date)\r\n    },\r\n    _isValueDirty: function() {\r\n        var value = this.dateOption(\"value\");\r\n        return (this._maskValue && this._maskValue.getTime()) !== (value && value.getTime())\r\n    },\r\n    _fireChangeEvent: function() {\r\n        this._clearSearchValue();\r\n        if (this._isValueDirty()) {\r\n            _events_engine.default.trigger(this._input(), \"change\")\r\n        }\r\n    },\r\n    _enterHandler: function(e) {\r\n        this._fireChangeEvent();\r\n        this._selectNextPart(FORWARD);\r\n        e.preventDefault()\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        var shouldFireChangeEvent = this._useMaskBehavior() && !e.isDefaultPrevented();\r\n        if (shouldFireChangeEvent) {\r\n            this._fireChangeEvent();\r\n            this.callBase(e);\r\n            this._selectFirstPart(e)\r\n        } else {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var text = this.option(\"text\");\r\n        if (this._useMaskBehavior()) {\r\n            this._saveValueChangeEvent(e);\r\n            if (!text) {\r\n                this._maskValue = null\r\n            } else {\r\n                if (null === this._maskValue) {\r\n                    this._loadMaskValue(text)\r\n                }\r\n            }\r\n            this._saveMaskValue()\r\n        } else {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useMaskBehavior\":\r\n                this._renderMask();\r\n                break;\r\n            case \"displayFormat\":\r\n            case \"mode\":\r\n                this.callBase(args);\r\n                this._renderMask();\r\n                break;\r\n            case \"value\":\r\n                this._loadMaskValue();\r\n                this.callBase(args);\r\n                this._renderDateParts();\r\n                break;\r\n            case \"emptyDateValue\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clearMaskState: function() {\r\n        this._clearSearchValue();\r\n        delete this._dateParts;\r\n        delete this._activePartIndex;\r\n        delete this._maskValue\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._clearMaskState();\r\n        this._activePartIndex = 0\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._detachMaskEvents();\r\n        this._clearMaskState()\r\n    }\r\n});\r\nvar _default = DateBoxMask;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.mask.parts.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.renderDateParts = exports.getDatePartIndexByPosition = void 0;\r\nvar _date = require(\"../../localization/ldml/date.parser\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar monthGetter = function(date) {\r\n    return date.getMonth() + 1\r\n};\r\nvar monthSetter = function(date, value) {\r\n    var day = date.getDate();\r\n    var monthLimits = getLimits(\"M\", date);\r\n    var newValue = (0, _math.fitIntoRange)(parseInt(value), monthLimits.min, monthLimits.max);\r\n    date.setMonth(newValue - 1, 1);\r\n    var _getLimits = getLimits(\"dM\", date),\r\n        min = _getLimits.min,\r\n        max = _getLimits.max;\r\n    var newDay = (0, _math.fitIntoRange)(day, min, max);\r\n    date.setDate(newDay)\r\n};\r\nvar PATTERN_GETTERS = {\r\n    a: function(date) {\r\n        return date.getHours() < 12 ? 0 : 1\r\n    },\r\n    E: \"getDay\",\r\n    y: \"getFullYear\",\r\n    M: monthGetter,\r\n    L: monthGetter,\r\n    d: \"getDate\",\r\n    H: \"getHours\",\r\n    h: \"getHours\",\r\n    m: \"getMinutes\",\r\n    s: \"getSeconds\",\r\n    S: \"getMilliseconds\"\r\n};\r\nvar PATTERN_SETTERS = (0, _extend.extend)({}, (0, _date.getPatternSetters)(), {\r\n    a: function(date, value) {\r\n        var hours = date.getHours();\r\n        var current = hours >= 12;\r\n        if (current === !!parseInt(value)) {\r\n            return\r\n        }\r\n        date.setHours((hours + 12) % 24)\r\n    },\r\n    d: function(date, value) {\r\n        var lastDayInMonth = getLimits(\"dM\", date).max;\r\n        if (value > lastDayInMonth) {\r\n            date.setMonth(date.getMonth() + 1)\r\n        }\r\n        date.setDate(value)\r\n    },\r\n    h: function(date, value) {\r\n        var isPM = date.getHours() >= 12;\r\n        date.setHours(+value % 12 + (isPM ? 12 : 0))\r\n    },\r\n    M: monthSetter,\r\n    L: monthSetter,\r\n    E: function(date, value) {\r\n        if (value < 0) {\r\n            return\r\n        }\r\n        date.setDate(date.getDate() - date.getDay() + parseInt(value))\r\n    },\r\n    y: function(date, value) {\r\n        var currentYear = date.getFullYear();\r\n        var valueLength = String(value).length;\r\n        var maxLimitLength = String(getLimits(\"y\", date).max).length;\r\n        var newValue = parseInt(String(currentYear).substr(0, maxLimitLength - valueLength) + value);\r\n        date.setFullYear(newValue)\r\n    }\r\n});\r\nvar getPatternGetter = function(patternChar) {\r\n    var unsupportedCharGetter = function() {\r\n        return patternChar\r\n    };\r\n    return PATTERN_GETTERS[patternChar] || unsupportedCharGetter\r\n};\r\nvar renderDateParts = function(text, regExpInfo) {\r\n    var result = regExpInfo.regexp.exec(text);\r\n    var start = 0;\r\n    var end = 0;\r\n    var sections = [];\r\n    var _loop = function(i) {\r\n        start = end;\r\n        end = start + result[i].length;\r\n        var pattern = regExpInfo.patterns[i - 1].replace(/^'|'$/g, \"\");\r\n        var getter = getPatternGetter(pattern[0]);\r\n        sections.push({\r\n            index: i - 1,\r\n            isStub: pattern === result[i],\r\n            caret: {\r\n                start: start,\r\n                end: end\r\n            },\r\n            pattern: pattern,\r\n            text: result[i],\r\n            limits: function() {\r\n                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                    args[_key] = arguments[_key]\r\n                }\r\n                return getLimits.apply(void 0, [pattern[0]].concat(args))\r\n            },\r\n            setter: PATTERN_SETTERS[pattern[0]] || _common.noop,\r\n            getter: getter\r\n        })\r\n    };\r\n    for (var i = 1; i < result.length; i++) {\r\n        _loop(i)\r\n    }\r\n    return sections\r\n};\r\nexports.renderDateParts = renderDateParts;\r\nvar getLimits = function(pattern, date, forcedPattern) {\r\n    var limits = {\r\n        y: {\r\n            min: 0,\r\n            max: 9999\r\n        },\r\n        M: {\r\n            min: 1,\r\n            max: 12\r\n        },\r\n        L: {\r\n            min: 1,\r\n            max: 12\r\n        },\r\n        d: {\r\n            min: 1,\r\n            max: 31\r\n        },\r\n        dM: {\r\n            min: 1,\r\n            max: new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\r\n        },\r\n        E: {\r\n            min: 0,\r\n            max: 6\r\n        },\r\n        H: {\r\n            min: 0,\r\n            max: 23\r\n        },\r\n        h: {\r\n            min: 0,\r\n            max: 23\r\n        },\r\n        m: {\r\n            min: 0,\r\n            max: 59\r\n        },\r\n        s: {\r\n            min: 0,\r\n            max: 59\r\n        },\r\n        S: {\r\n            min: 0,\r\n            max: 999\r\n        },\r\n        a: {\r\n            min: 0,\r\n            max: 1\r\n        }\r\n    };\r\n    return limits[forcedPattern || pattern] || limits.getAmPm\r\n};\r\nvar getDatePartIndexByPosition = function(dateParts, position) {\r\n    for (var i = 0; i < dateParts.length; i++) {\r\n        var caretInGroup = dateParts[i].caret.end >= position;\r\n        if (!dateParts[i].isStub && caretInGroup) {\r\n            return i\r\n        }\r\n    }\r\n    return null\r\n};\r\nexports.getDatePartIndexByPosition = getDatePartIndexByPosition;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.calendar.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _calendar = _interopRequireDefault(require(\"../calendar\"));\r\nvar _uiDate_box = _interopRequireDefault(require(\"./ui.date_box.strategy\"));\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CalendarStrategy = _uiDate_box.default.inherit({\r\n    NAME: \"Calendar\",\r\n    supportedKeys: function() {\r\n        var homeEndHandler = function(e) {\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n            return false\r\n        };\r\n        return {\r\n            rightArrow: function() {\r\n                if (this.option(\"opened\")) {\r\n                    return true\r\n                }\r\n            },\r\n            leftArrow: function() {\r\n                if (this.option(\"opened\")) {\r\n                    return true\r\n                }\r\n            },\r\n            enter: function(e) {\r\n                if (this.dateBox.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    if (this._widget.option(\"zoomLevel\") === this._widget.option(\"maxZoomLevel\")) {\r\n                        var viewValue = this._getContouredValue();\r\n                        var lastActionElement = this._lastActionElement;\r\n                        var shouldCloseDropDown = this._closeDropDownByEnter();\r\n                        if (shouldCloseDropDown && viewValue && \"calendar\" === lastActionElement) {\r\n                            this.dateBoxValue(viewValue, e)\r\n                        }\r\n                        shouldCloseDropDown && this.dateBox.close();\r\n                        this.dateBox._valueChangeEventHandler(e);\r\n                        return !shouldCloseDropDown\r\n                    } else {\r\n                        return true\r\n                    }\r\n                } else {\r\n                    this.dateBox._valueChangeEventHandler(e)\r\n                }\r\n            }.bind(this),\r\n            home: homeEndHandler,\r\n            end: homeEndHandler\r\n        }\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shortdate\"\r\n    },\r\n    _closeDropDownByEnter: function() {\r\n        return true\r\n    },\r\n    _getWidgetName: function() {\r\n        return _calendar.default\r\n    },\r\n    _getContouredValue: function() {\r\n        return this._widget._view.option(\"contouredDate\")\r\n    },\r\n    getKeyboardListener: function() {\r\n        return this._widget\r\n    },\r\n    _getWidgetOptions: function() {\r\n        var disabledDates = this.dateBox.option(\"disabledDates\");\r\n        return (0, _extend.extend)(this.dateBox.option(\"calendarOptions\"), {\r\n            value: this.dateBoxValue() || null,\r\n            dateSerializationFormat: null,\r\n            min: this.dateBox.dateOption(\"min\"),\r\n            max: this.dateBox.dateOption(\"max\"),\r\n            onValueChanged: this._valueChangedHandler.bind(this),\r\n            onCellClick: this._cellClickHandler.bind(this),\r\n            tabIndex: null,\r\n            disabledDates: (0, _type.isFunction)(disabledDates) ? this._injectComponent(disabledDates.bind(this.dateBox)) : disabledDates,\r\n            onContouredChanged: this._refreshActiveDescendant.bind(this),\r\n            hasFocus: function() {\r\n                return true\r\n            }\r\n        })\r\n    },\r\n    _injectComponent: function(func) {\r\n        var that = this;\r\n        return function(params) {\r\n            (0, _extend.extend)(params, {\r\n                component: that.dateBox\r\n            });\r\n            return func(params)\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function(e) {\r\n        this._lastActionElement = \"calendar\";\r\n        this.dateBox.setAria(\"activedescendant\", e.actionValue)\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        var _this = this;\r\n        var toolbarItems = _popupConfig.toolbarItems;\r\n        var buttonsLocation = this.dateBox.option(\"buttonsLocation\");\r\n        var position = [];\r\n        if (\"default\" !== buttonsLocation) {\r\n            position = (0, _common.splitPair)(buttonsLocation)\r\n        } else {\r\n            position = [\"bottom\", \"center\"]\r\n        }\r\n        if (\"useButtons\" === this.dateBox.option(\"applyValueMode\") && this._isCalendarVisible()) {\r\n            toolbarItems.unshift({\r\n                widget: \"dxButton\",\r\n                toolbar: position[0],\r\n                location: \"after\" === position[1] ? \"before\" : position[1],\r\n                options: {\r\n                    onInitialized: function(e) {\r\n                        e.component.registerKeyHandler(\"escape\", this._escapeHandler.bind(this))\r\n                    }.bind(this),\r\n                    onClick: function(args) {\r\n                        _this._widget._toTodayView(args)\r\n                    },\r\n                    text: _message.default.format(\"dxCalendar-todayButtonText\"),\r\n                    type: \"today\"\r\n                }\r\n            })\r\n        }\r\n        return (0, _extend.extend)(true, _popupConfig, {\r\n            toolbarItems: toolbarItems,\r\n            position: {\r\n                collision: \"flipfit flip\"\r\n            },\r\n            width: \"auto\"\r\n        })\r\n    },\r\n    _isCalendarVisible: function() {\r\n        return (0, _type.isEmptyObject)(this.dateBox.option(\"calendarOptions\")) || false !== this.dateBox.option(\"calendarOptions.visible\")\r\n    },\r\n    _escapeHandler: function() {\r\n        this.dateBox.close();\r\n        this.dateBox.focus()\r\n    },\r\n    _valueChangedHandler: function(e) {\r\n        var dateBox = this.dateBox;\r\n        var value = e.value;\r\n        var prevValue = e.previousValue;\r\n        if (_date.default.sameDate(value, prevValue)) {\r\n            return\r\n        }\r\n        if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\r\n            this.dateBoxValue(this.getValue(), e.event)\r\n        }\r\n    },\r\n    _updateValue: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._widget.option(\"value\", this.dateBoxValue())\r\n    },\r\n    textChangedHandler: function() {\r\n        this._lastActionElement = \"input\";\r\n        if (this.dateBox.option(\"opened\") && this._widget) {\r\n            this._updateValue(true)\r\n        }\r\n    },\r\n    _cellClickHandler: function(e) {\r\n        var dateBox = this.dateBox;\r\n        if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\r\n            dateBox.option(\"opened\", false);\r\n            this.dateBoxValue(this.getValue(), e.event)\r\n        }\r\n    }\r\n});\r\nvar _default = CalendarStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.calendar_with_time.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _uiDate_boxStrategy = _interopRequireDefault(require(\"./ui.date_box.strategy.calendar\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.time_view\"));\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _date2 = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _box = _interopRequireDefault(require(\"../box\"));\r\nvar _ui2 = _interopRequireDefault(require(\"./ui.date_utils\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar SHRINK_VIEW_SCREEN_WIDTH = 573;\r\nvar DATEBOX_ADAPTIVITY_MODE_CLASS = \"dx-datebox-adaptivity-mode\";\r\nvar CalendarWithTimeStrategy = _uiDate_boxStrategy.default.inherit({\r\n    NAME: \"CalendarWithTime\",\r\n    getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            applyValueMode: \"useButtons\",\r\n            buttonsLocation: \"bottom after\",\r\n            \"dropDownOptions.showTitle\": false\r\n        })\r\n    },\r\n    _closeDropDownByEnter: function() {\r\n        return _date2.default.sameDate(this._getContouredValue(), this.widgetOption(\"value\"))\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shortdateshorttime\"\r\n    },\r\n    _is24HourFormat: function() {\r\n        return _date.default.is24HourFormat(this.getDisplayFormat(this.dateBox.option(\"displayFormat\")))\r\n    },\r\n    _getContouredValue: function() {\r\n        var viewDate = this.callBase();\r\n        return this._updateDateTime(viewDate)\r\n    },\r\n    _renderWidget: function() {\r\n        this.callBase();\r\n        this._timeView = this.dateBox._createComponent((0, _renderer.default)(\"<div>\"), _ui.default, {\r\n            value: this.dateBoxValue(),\r\n            _showClock: !this._isShrinkView(),\r\n            use24HourFormat: this._is24HourFormat(),\r\n            onValueChanged: this._valueChangedHandler.bind(this),\r\n            stylingMode: this.dateBox.option(\"stylingMode\")\r\n        });\r\n        this._timeView.registerKeyHandler(\"escape\", this._escapeHandler.bind(this))\r\n    },\r\n    renderOpenedState: function() {\r\n        this.callBase();\r\n        var popup = this._getPopup();\r\n        if (popup) {\r\n            popup.$wrapper().toggleClass(DATEBOX_ADAPTIVITY_MODE_CLASS, this._isSmallScreen())\r\n        }\r\n        clearTimeout(this._repaintTimer);\r\n        this._repaintTimer = setTimeout(function() {\r\n            this._getPopup() && this._getPopup().repaint()\r\n        }.bind(this), 0)\r\n    },\r\n    isAdaptivityChanged: function() {\r\n        var isAdaptiveMode = this._isShrinkView();\r\n        var currentAdaptiveMode = this._currentAdaptiveMode;\r\n        if (isAdaptiveMode !== currentAdaptiveMode) {\r\n            this._currentAdaptiveMode = isAdaptiveMode;\r\n            return void 0 !== currentAdaptiveMode\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _updateValue: function(preventDefaultValue) {\r\n        var date = this.dateBoxValue();\r\n        if (!date && !preventDefaultValue) {\r\n            date = new Date;\r\n            _ui2.default.normalizeTime(date)\r\n        }\r\n        this.callBase();\r\n        if (this._timeView) {\r\n            date && this._timeView.option(\"value\", date);\r\n            this._timeView.option(\"use24HourFormat\", this._is24HourFormat())\r\n        }\r\n    },\r\n    _isSmallScreen: function() {\r\n        return (0, _renderer.default)(window).width() <= SHRINK_VIEW_SCREEN_WIDTH\r\n    },\r\n    _isShrinkView: function() {\r\n        return !this.dateBox.option(\"showAnalogClock\") || this.dateBox.option(\"adaptivityEnabled\") && this._isSmallScreen()\r\n    },\r\n    _getBoxItems: function() {\r\n        var items = [{\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            name: \"calendar\"\r\n        }];\r\n        if (!this._isShrinkView()) {\r\n            items.push({\r\n                ratio: 0,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                name: \"time\"\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    renderPopupContent: function() {\r\n        this.callBase();\r\n        this._currentAdaptiveMode = this._isShrinkView();\r\n        var $popupContent = this._getPopup().$content();\r\n        this._box = this.dateBox._createComponent((0, _renderer.default)(\"<div>\").appendTo($popupContent), _box.default, {\r\n            direction: \"row\",\r\n            crossAlign: \"start\",\r\n            items: this._getBoxItems(),\r\n            itemTemplate: function(data) {\r\n                var $container = (0, _renderer.default)(\"<div>\");\r\n                switch (data.name) {\r\n                    case \"calendar\":\r\n                        $container.append(this._widget.$element());\r\n                        if (this._isShrinkView()) {\r\n                            $container.append(this._timeView.$element())\r\n                        }\r\n                        break;\r\n                    case \"time\":\r\n                        $container.append(this._timeView.$element())\r\n                }\r\n                return $container\r\n            }.bind(this)\r\n        });\r\n        this._attachTabHandler()\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        var calendarPopupConfig = this.callBase(_popupConfig);\r\n        var result = (0, _extend.extend)(calendarPopupConfig, {\r\n            width: \"auto\",\r\n            onShowing: function() {\r\n                if (\"fallback\" === this._box.option(\"_layoutStrategy\")) {\r\n                    var clockMinWidth = this._getPopup().$content().find(\".dx-timeview-clock\").css(\"minWidth\");\r\n                    this._timeView.$element().css(\"maxWidth\", clockMinWidth)\r\n                }\r\n            }.bind(this)\r\n        });\r\n        return result\r\n    },\r\n    getFirstPopupElement: function() {\r\n        return this._timeView._hourBox.$element().find(\"input\")\r\n    },\r\n    _attachTabHandler: function() {\r\n        var dateBox = this.dateBox;\r\n        var handler = function(e) {\r\n            if (e.shiftKey) {\r\n                e.preventDefault();\r\n                dateBox.focus()\r\n            }\r\n        };\r\n        this._timeView._hourBox.registerKeyHandler(\"tab\", handler)\r\n    },\r\n    _preventFocusOnPopup: function(e) {\r\n        if (!(0, _renderer.default)(e.target).hasClass(\"dx-texteditor-input\")) {\r\n            this.callBase.apply(this, arguments);\r\n            if (!this.dateBox._hasFocusClass()) {\r\n                this.dateBox.focus()\r\n            }\r\n        }\r\n    },\r\n    _updateDateTime: function(date) {\r\n        var time = this._timeView.option(\"value\");\r\n        date.setHours(time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\r\n        return date\r\n    },\r\n    getValue: function() {\r\n        var _this$_widget$option;\r\n        var date = null !== (_this$_widget$option = this._widget.option(\"value\")) && void 0 !== _this$_widget$option ? _this$_widget$option : this._widget.getContouredDate();\r\n        date = date ? new Date(date) : new Date;\r\n        return this._updateDateTime(date)\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._removeMinWidthTimer);\r\n        clearTimeout(this._repaintTimer);\r\n        this.callBase()\r\n    }\r\n});\r\nvar _default = CalendarWithTimeStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.date_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _ui = _interopRequireDefault(require(\"./ui.date_view\"));\r\nvar _uiDate_box = _interopRequireDefault(require(\"./ui.date_box.strategy\"));\r\nvar _support = require(\"../../core/utils/support\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui2 = _interopRequireDefault(require(\"./ui.date_utils\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar DateViewStrategy = _uiDate_box.default.inherit({\r\n    NAME: \"DateView\",\r\n    getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            openOnFieldClick: true,\r\n            applyButtonText: _message.default.format(\"OK\"),\r\n            \"dropDownOptions.showTitle\": true\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || _ui2.default.FORMATS_MAP[this.dateBox.option(\"type\")]\r\n    },\r\n    popupConfig: function(config) {\r\n        return {\r\n            toolbarItems: this.dateBox._popupToolbarItemsConfig(),\r\n            onInitialized: config.onInitialized,\r\n            defaultOptionsRules: [{\r\n                device: {\r\n                    platform: \"android\"\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    height: 331\r\n                }\r\n            }, {\r\n                device: function(_device) {\r\n                    var platform = _device.platform;\r\n                    return \"generic\" === platform || \"ios\" === platform\r\n                },\r\n                options: {\r\n                    width: \"auto\",\r\n                    height: \"auto\"\r\n                }\r\n            }, {\r\n                device: function(_device2) {\r\n                    var platform = _device2.platform;\r\n                    var phone = _device2.phone;\r\n                    return \"generic\" === platform && phone\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    maxWidth: \"100%\",\r\n                    maxHeight: \"100%\",\r\n                    height: \"auto\",\r\n                    position: {\r\n                        collision: \"flipfit flip\"\r\n                    }\r\n                }\r\n            }, {\r\n                device: {\r\n                    platform: \"ios\",\r\n                    phone: true\r\n                },\r\n                options: {\r\n                    width: \"100%\",\r\n                    position: {\r\n                        my: \"bottom\",\r\n                        at: \"bottom\",\r\n                        of: window\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n    },\r\n    _renderWidget: function() {\r\n        if ((0, _support.inputType)(this.dateBox.option(\"mode\")) && this.dateBox._isNativeType() || this.dateBox.option(\"readOnly\")) {\r\n            if (this._widget) {\r\n                this._widget.$element().remove();\r\n                this._widget = null\r\n            }\r\n            return\r\n        }\r\n        var popup = this._getPopup();\r\n        if (this._widget) {\r\n            this._widget.option(this._getWidgetOptions())\r\n        } else {\r\n            var element = (0, _renderer.default)(\"<div>\").appendTo(popup.$content());\r\n            this._widget = this._createWidget(element)\r\n        }\r\n        this._widget.$element().appendTo(this._getWidgetContainer())\r\n    },\r\n    _getWidgetName: function() {\r\n        return _ui.default\r\n    },\r\n    renderOpenedState: function() {\r\n        this.callBase();\r\n        if (this._widget) {\r\n            this._widget.option(\"value\", this._widget._getCurrentDate())\r\n        }\r\n    },\r\n    _getWidgetOptions: function() {\r\n        return {\r\n            value: this.dateBoxValue() || new Date,\r\n            type: this.dateBox.option(\"type\"),\r\n            minDate: this.dateBox.dateOption(\"min\") || new Date(1900, 0, 1),\r\n            maxDate: this.dateBox.dateOption(\"max\") || new Date(Date.now() + 50 * _ui2.default.ONE_YEAR),\r\n            onDisposing: function() {\r\n                this._widget = null\r\n            }.bind(this)\r\n        }\r\n    }\r\n});\r\nvar _default = DateViewStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar abstract = _class.default.abstract;\r\nvar DateBoxStrategy = _class.default.inherit({\r\n    ctor: function(dateBox) {\r\n        this.dateBox = dateBox\r\n    },\r\n    widgetOption: function() {\r\n        return this._widget && this._widget.option.apply(this._widget, arguments)\r\n    },\r\n    _renderWidget: function(element) {\r\n        element = element || (0, _renderer.default)(\"<div>\");\r\n        this._widget = this._createWidget(element);\r\n        this._widget.$element().appendTo(this._getWidgetContainer())\r\n    },\r\n    _createWidget: function(element) {\r\n        var widgetName = this._getWidgetName();\r\n        var widgetOptions = this._getWidgetOptions();\r\n        return this.dateBox._createComponent(element, widgetName, widgetOptions)\r\n    },\r\n    _getWidgetOptions: abstract,\r\n    _getWidgetName: abstract,\r\n    getDefaultOptions: function() {\r\n        return {\r\n            mode: \"text\"\r\n        }\r\n    },\r\n    getDisplayFormat: abstract,\r\n    supportedKeys: _common.noop,\r\n    getKeyboardListener: _common.noop,\r\n    customizeButtons: _common.noop,\r\n    getParsedText: function(text, format) {\r\n        var value = _date.default.parse(text, format);\r\n        return value ? value : _date.default.parse(text)\r\n    },\r\n    renderInputMinMax: _common.noop,\r\n    renderOpenedState: function() {\r\n        this._updateValue()\r\n    },\r\n    popupConfig: abstract,\r\n    _dimensionChanged: function() {\r\n        var _this$_getPopup;\r\n        null === (_this$_getPopup = this._getPopup()) || void 0 === _this$_getPopup ? void 0 : _this$_getPopup.repaint()\r\n    },\r\n    renderPopupContent: function() {\r\n        var popup = this._getPopup();\r\n        this._renderWidget();\r\n        var $popupContent = popup.$content().parent();\r\n        _events_engine.default.off($popupContent, \"mousedown\");\r\n        _events_engine.default.on($popupContent, \"mousedown\", this._preventFocusOnPopup.bind(this))\r\n    },\r\n    getFirstPopupElement: _common.noop,\r\n    getLastPopupElement: _common.noop,\r\n    _preventFocusOnPopup: function(e) {\r\n        e.preventDefault()\r\n    },\r\n    _getWidgetContainer: function() {\r\n        return this._getPopup().$content()\r\n    },\r\n    _getPopup: function() {\r\n        return this.dateBox._popup\r\n    },\r\n    popupShowingHandler: _common.noop,\r\n    popupHiddenHandler: _common.noop,\r\n    _updateValue: function() {\r\n        this._widget && this._widget.option(\"value\", this.dateBoxValue())\r\n    },\r\n    useCurrentDateByDefault: _common.noop,\r\n    getDefaultDate: function() {\r\n        return new Date\r\n    },\r\n    textChangedHandler: _common.noop,\r\n    renderValue: function() {\r\n        if (this.dateBox.option(\"opened\")) {\r\n            this._updateValue()\r\n        }\r\n    },\r\n    getValue: function() {\r\n        return this._widget.option(\"value\")\r\n    },\r\n    isAdaptivityChanged: function() {\r\n        return false\r\n    },\r\n    dispose: function() {\r\n        var popup = this._getPopup();\r\n        if (popup) {\r\n            popup.$content().empty()\r\n        }\r\n    },\r\n    dateBoxValue: function() {\r\n        if (arguments.length) {\r\n            return this.dateBox.dateValue.apply(this.dateBox, arguments)\r\n        } else {\r\n            return this.dateBox.dateOption.apply(this.dateBox, [\"value\"])\r\n        }\r\n    }\r\n});\r\nvar _default = DateBoxStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.list.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _list = _interopRequireDefault(require(\"../list\"));\r\nvar _uiDate_box = _interopRequireDefault(require(\"./ui.date_box.strategy\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"./ui.date_utils\"));\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _utils = require(\"../drop_down_editor/utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar DATE_FORMAT = \"date\";\r\nvar BOUNDARY_VALUES = {\r\n    min: new Date(0, 0, 0, 0, 0),\r\n    max: new Date(0, 0, 0, 23, 59)\r\n};\r\nvar ListStrategy = _uiDate_box.default.inherit({\r\n    NAME: \"List\",\r\n    supportedKeys: function() {\r\n        return {\r\n            tab: function() {\r\n                var _this$option = this.option(),\r\n                    opened = _this$option.opened,\r\n                    applyValueMode = _this$option.applyValueMode;\r\n                if (opened && \"instantly\" === applyValueMode) {\r\n                    this.close()\r\n                }\r\n            },\r\n            space: _common.noop,\r\n            home: _common.noop,\r\n            end: _common.noop\r\n        }\r\n    },\r\n    getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            applyValueMode: \"instantly\"\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shorttime\"\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        return _popupConfig\r\n    },\r\n    getValue: function() {\r\n        var selectedIndex = this._widget.option(\"selectedIndex\");\r\n        if (selectedIndex === -1) {\r\n            return this.dateBox.option(\"value\")\r\n        }\r\n        var itemData = this._widgetItems[selectedIndex];\r\n        return this._getDateByItemData(itemData)\r\n    },\r\n    useCurrentDateByDefault: function() {\r\n        return true\r\n    },\r\n    getDefaultDate: function() {\r\n        return new Date(null)\r\n    },\r\n    popupShowingHandler: function() {\r\n        this.dateBox._dimensionChanged()\r\n    },\r\n    _renderWidget: function() {\r\n        this.callBase();\r\n        this._refreshItems()\r\n    },\r\n    _getWidgetName: function() {\r\n        return _list.default\r\n    },\r\n    _getWidgetOptions: function() {\r\n        return {\r\n            itemTemplate: this._timeListItemTemplate.bind(this),\r\n            onItemClick: this._listItemClickHandler.bind(this),\r\n            tabIndex: -1,\r\n            onFocusedItemChanged: this._refreshActiveDescendant.bind(this),\r\n            selectionMode: \"single\"\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function(e) {\r\n        this.dateBox.setAria(\"activedescendant\", \"\");\r\n        this.dateBox.setAria(\"activedescendant\", e.actionValue)\r\n    },\r\n    _refreshItems: function() {\r\n        this._widgetItems = this._getTimeListItems();\r\n        this._widget.option(\"items\", this._widgetItems)\r\n    },\r\n    renderOpenedState: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._widget.option(\"focusedElement\", null);\r\n        this._setSelectedItemsByValue();\r\n        if (this._widget.option(\"templatesRenderAsynchronously\")) {\r\n            this._asyncScrollTimeout = setTimeout(this._scrollToSelectedItem.bind(this))\r\n        } else {\r\n            this._scrollToSelectedItem()\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        clearTimeout(this._asyncScrollTimeout)\r\n    },\r\n    _updateValue: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._refreshItems();\r\n        this._setSelectedItemsByValue();\r\n        this._scrollToSelectedItem()\r\n    },\r\n    _setSelectedItemsByValue: function() {\r\n        var value = this.dateBoxValue();\r\n        var dateIndex = this._getDateIndex(value);\r\n        if (dateIndex === -1) {\r\n            this._widget.option(\"selectedItems\", [])\r\n        } else {\r\n            this._widget.option(\"selectedIndex\", dateIndex)\r\n        }\r\n    },\r\n    _scrollToSelectedItem: function() {\r\n        this._widget.scrollToItem(this._widget.option(\"selectedIndex\"))\r\n    },\r\n    _getDateIndex: function(date) {\r\n        var result = -1;\r\n        for (var i = 0, n = this._widgetItems.length; i < n; i++) {\r\n            if (this._areDatesEqual(date, this._widgetItems[i])) {\r\n                result = i;\r\n                break\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _areDatesEqual: function(first, second) {\r\n        return (0, _type.isDate)(first) && (0, _type.isDate)(second) && first.getHours() === second.getHours() && first.getMinutes() === second.getMinutes()\r\n    },\r\n    _getTimeListItems: function() {\r\n        var min = this.dateBox.dateOption(\"min\") || this._getBoundaryDate(\"min\");\r\n        var max = this.dateBox.dateOption(\"max\") || this._getBoundaryDate(\"max\");\r\n        var value = this.dateBox.dateOption(\"value\") || null;\r\n        var delta = max - min;\r\n        var minutes = min.getMinutes() % this.dateBox.option(\"interval\");\r\n        if (delta < 0) {\r\n            return []\r\n        }\r\n        if (delta > _ui.default.ONE_DAY) {\r\n            delta = _ui.default.ONE_DAY\r\n        }\r\n        if (value - min < _ui.default.ONE_DAY) {\r\n            return this._getRangeItems(min, new Date(min), delta)\r\n        }\r\n        min = this._getBoundaryDate(\"min\");\r\n        min.setMinutes(minutes);\r\n        if (value && Math.abs(value - max) < _ui.default.ONE_DAY) {\r\n            delta = (60 * max.getHours() + Math.abs(max.getMinutes() - minutes)) * _ui.default.ONE_MINUTE\r\n        }\r\n        return this._getRangeItems(min, new Date(min), delta)\r\n    },\r\n    _getRangeItems: function(startValue, currentValue, rangeDuration) {\r\n        var rangeItems = [];\r\n        var interval = this.dateBox.option(\"interval\");\r\n        while (currentValue - startValue <= rangeDuration) {\r\n            rangeItems.push(new Date(currentValue));\r\n            currentValue.setMinutes(currentValue.getMinutes() + interval)\r\n        }\r\n        return rangeItems\r\n    },\r\n    _getBoundaryDate: function(boundary) {\r\n        var boundaryValue = BOUNDARY_VALUES[boundary];\r\n        var currentValue = new Date((0, _common.ensureDefined)(this.dateBox.dateOption(\"value\"), 0));\r\n        return new Date(currentValue.getFullYear(), currentValue.getMonth(), currentValue.getDate(), boundaryValue.getHours(), boundaryValue.getMinutes())\r\n    },\r\n    _timeListItemTemplate: function(itemData) {\r\n        var displayFormat = this.dateBox.option(\"displayFormat\");\r\n        return _date.default.format(itemData, this.getDisplayFormat(displayFormat))\r\n    },\r\n    _listItemClickHandler: function(e) {\r\n        if (\"useButtons\" === this.dateBox.option(\"applyValueMode\")) {\r\n            return\r\n        }\r\n        var date = this._getDateByItemData(e.itemData);\r\n        this.dateBox.option(\"opened\", false);\r\n        this.dateBoxValue(date, e.event)\r\n    },\r\n    _getDateByItemData: function(itemData) {\r\n        var date = this.dateBox.option(\"value\");\r\n        var hours = itemData.getHours();\r\n        var minutes = itemData.getMinutes();\r\n        var seconds = itemData.getSeconds();\r\n        var year = itemData.getFullYear();\r\n        var month = itemData.getMonth();\r\n        var day = itemData.getDate();\r\n        if (date) {\r\n            if (this.dateBox.option(\"dateSerializationFormat\")) {\r\n                date = _date_serialization.default.deserializeDate(date)\r\n            } else {\r\n                date = new Date(date)\r\n            }\r\n            date.setHours(hours);\r\n            date.setMinutes(minutes);\r\n            date.setSeconds(seconds);\r\n            date.setFullYear(year);\r\n            date.setMonth(month);\r\n            date.setDate(day)\r\n        } else {\r\n            date = new Date(year, month, day, hours, minutes, 0, 0)\r\n        }\r\n        return date\r\n    },\r\n    getKeyboardListener: function() {\r\n        return this._widget\r\n    },\r\n    _updatePopupHeight: function() {\r\n        var dropDownOptionsHeight = (0, _utils.getSizeValue)(this.dateBox.option(\"dropDownOptions.height\"));\r\n        if (void 0 === dropDownOptionsHeight || \"auto\" === dropDownOptionsHeight) {\r\n            this.dateBox._setPopupOption(\"height\", \"auto\");\r\n            var popupHeight = this._widget.$element().outerHeight();\r\n            var maxHeight = .45 * (0, _renderer.default)(window).height();\r\n            this.dateBox._setPopupOption(\"height\", Math.min(popupHeight, maxHeight))\r\n        }\r\n        this.dateBox._timeList && this.dateBox._timeList.updateDimensions()\r\n    },\r\n    getParsedText: function(text, format) {\r\n        var value = this.callBase(text, format);\r\n        if (value) {\r\n            value = _ui.default.mergeDates(value, new Date(null), DATE_FORMAT)\r\n        }\r\n        return value\r\n    }\r\n});\r\nvar _default = ListStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.native.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _uiDate_box = _interopRequireDefault(require(\"./ui.date_box.strategy\"));\r\nvar _support = require(\"../../core/utils/support\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _ui = _interopRequireDefault(require(\"./ui.date_utils\"));\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar NativeStrategy = _uiDate_box.default.inherit({\r\n    NAME: \"Native\",\r\n    popupConfig: function(_popupConfig) {\r\n        return (0, _extend.extend)({}, _popupConfig, {\r\n            width: \"auto\"\r\n        })\r\n    },\r\n    getParsedText: function(text, format) {\r\n        if (!text) {\r\n            return null\r\n        }\r\n        if (\"datetime\" === this.dateBox.option(\"type\")) {\r\n            return new Date(text.replace(/-/g, \"/\").replace(\"T\", \" \").split(\".\")[0])\r\n        }\r\n        if (this._isTextInput()) {\r\n            return this.callBase(text, format)\r\n        } else {\r\n            return _ui.default.fromStandardDateFormat(text)\r\n        }\r\n    },\r\n    _isTextInput: function() {\r\n        return \"text\" === this.dateBox._input().prop(\"type\")\r\n    },\r\n    renderPopupContent: _common.noop,\r\n    _getWidgetName: _common.noop,\r\n    _getWidgetOptions: _common.noop,\r\n    _getDateBoxType: function() {\r\n        var type = this.dateBox.option(\"type\");\r\n        if ((0, _array.inArray)(type, _ui.default.SUPPORTED_FORMATS) === -1) {\r\n            type = \"date\"\r\n        } else {\r\n            if (\"datetime\" === type && !(0, _support.inputType)(type)) {\r\n                type = \"datetime-local\"\r\n            }\r\n        }\r\n        return type\r\n    },\r\n    customizeButtons: function() {\r\n        var dropDownButton = this.dateBox.getButton(\"dropDown\");\r\n        if (_devices.default.real().android && dropDownButton) {\r\n            dropDownButton.on(\"click\", function() {\r\n                this.dateBox._input().get(0).click()\r\n            }.bind(this))\r\n        }\r\n    },\r\n    getDefaultOptions: function() {\r\n        return {\r\n            mode: this._getDateBoxType()\r\n        }\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        var type = this._getDateBoxType();\r\n        return displayFormat || _ui.default.FORMATS_MAP[type]\r\n    },\r\n    renderInputMinMax: function($input) {\r\n        $input.attr({\r\n            min: _date_serialization.default.serializeDate(this.dateBox.dateOption(\"min\"), \"yyyy-MM-dd\"),\r\n            max: _date_serialization.default.serializeDate(this.dateBox.dateOption(\"max\"), \"yyyy-MM-dd\")\r\n        })\r\n    }\r\n});\r\nvar _default = NativeStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_utils.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nvar DATE_COMPONENTS = [\"year\", \"day\", \"month\", \"day\"];\r\nvar TIME_COMPONENTS = [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"];\r\nvar ONE_MINUTE = 6e4;\r\nvar ONE_DAY = 60 * ONE_MINUTE * 24;\r\nvar ONE_YEAR = 365 * ONE_DAY;\r\nvar getStringFormat = function(format) {\r\n    var formatType = _typeof(format);\r\n    if (\"string\" === formatType) {\r\n        return \"format\"\r\n    }\r\n    if (\"object\" === formatType && void 0 !== format.type) {\r\n        return format.type\r\n    }\r\n    return null\r\n};\r\nvar dateUtils = {\r\n    SUPPORTED_FORMATS: [\"date\", \"time\", \"datetime\"],\r\n    ONE_MINUTE: ONE_MINUTE,\r\n    ONE_DAY: ONE_DAY,\r\n    ONE_YEAR: ONE_YEAR,\r\n    MIN_DATEVIEW_DEFAULT_DATE: new Date(1900, 0, 1),\r\n    MAX_DATEVIEW_DEFAULT_DATE: function() {\r\n        var newDate = new Date;\r\n        return new Date(newDate.getFullYear() + 50, newDate.getMonth(), newDate.getDate(), 23, 59, 59)\r\n    }(),\r\n    FORMATS_INFO: {\r\n        date: {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-dd\"\r\n            },\r\n            components: DATE_COMPONENTS\r\n        },\r\n        time: {\r\n            getStandardPattern: function() {\r\n                return \"HH:mm\"\r\n            },\r\n            components: TIME_COMPONENTS\r\n        },\r\n        datetime: {\r\n            getStandardPattern: function() {\r\n                var standardPattern;\r\n                ! function() {\r\n                    var androidFormatPattern = \"yyyy-MM-ddTHH:mmZ\";\r\n                    var testDateString = \"2000-01-01T01:01Z\";\r\n                    var $input = (0, _renderer.default)(\"<input>\").attr(\"type\", \"datetime\");\r\n                    $input.val(testDateString);\r\n                    if ($input.val()) {\r\n                        standardPattern = androidFormatPattern\r\n                    }\r\n                }();\r\n                if (!standardPattern) {\r\n                    standardPattern = \"yyyy-MM-ddTHH:mm:ssZ\"\r\n                }\r\n                dateUtils.FORMATS_INFO.datetime.getStandardPattern = function() {\r\n                    return standardPattern\r\n                };\r\n                return standardPattern\r\n            },\r\n            components: [].concat(DATE_COMPONENTS, TIME_COMPONENTS)\r\n        },\r\n        \"datetime-local\": {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-ddTHH:mm:ss\"\r\n            },\r\n            components: [].concat(DATE_COMPONENTS, [\"hours\", \"minutes\", \"seconds\"])\r\n        }\r\n    },\r\n    FORMATS_MAP: {\r\n        date: \"shortdate\",\r\n        time: \"shorttime\",\r\n        datetime: \"shortdateshorttime\"\r\n    },\r\n    SUBMIT_FORMATS_MAP: {\r\n        date: \"date\",\r\n        time: \"time\",\r\n        datetime: \"datetime-local\"\r\n    },\r\n    toStandardDateFormat: function(date, type) {\r\n        var pattern = dateUtils.FORMATS_INFO[type].getStandardPattern();\r\n        return _date_serialization.default.serializeDate(date, pattern)\r\n    },\r\n    fromStandardDateFormat: function(text) {\r\n        var date = _date_serialization.default.dateParser(text);\r\n        return (0, _type.isDate)(date) ? date : void 0\r\n    },\r\n    getMaxMonthDay: function(year, month) {\r\n        return new Date(year, month + 1, 0).getDate()\r\n    },\r\n    mergeDates: function(oldValue, newValue, format) {\r\n        if (!newValue) {\r\n            return newValue || null\r\n        }\r\n        if (!oldValue || isNaN(oldValue.getTime())) {\r\n            var now = new Date(null);\r\n            oldValue = new Date(now.getFullYear(), now.getMonth(), now.getDate())\r\n        }\r\n        var result = new Date(oldValue.valueOf());\r\n        var formatInfo = dateUtils.FORMATS_INFO[format];\r\n        (0, _iterator.each)(formatInfo.components, function() {\r\n            var componentInfo = dateUtils.DATE_COMPONENTS_INFO[this];\r\n            result[componentInfo.setter](newValue[componentInfo.getter]())\r\n        });\r\n        return result\r\n    },\r\n    getLongestCaptionIndex: function(captionArray) {\r\n        var longestIndex = 0;\r\n        var longestCaptionLength = 0;\r\n        var i;\r\n        for (i = 0; i < captionArray.length; ++i) {\r\n            if (captionArray[i].length > longestCaptionLength) {\r\n                longestIndex = i;\r\n                longestCaptionLength = captionArray[i].length\r\n            }\r\n        }\r\n        return longestIndex\r\n    },\r\n    formatUsesMonthName: function(format) {\r\n        return _date.default.formatUsesMonthName(format)\r\n    },\r\n    formatUsesDayName: function(format) {\r\n        return _date.default.formatUsesDayName(format)\r\n    },\r\n    getLongestDate: function(format, monthNames, dayNames) {\r\n        var stringFormat = getStringFormat(format);\r\n        var month = 9;\r\n        if (!stringFormat || dateUtils.formatUsesMonthName(stringFormat)) {\r\n            month = dateUtils.getLongestCaptionIndex(monthNames)\r\n        }\r\n        var longestDate = new Date(1888, month, 21, 23, 59, 59, 999);\r\n        if (!stringFormat || dateUtils.formatUsesDayName(stringFormat)) {\r\n            var date = longestDate.getDate() - longestDate.getDay() + dateUtils.getLongestCaptionIndex(dayNames);\r\n            longestDate.setDate(date)\r\n        }\r\n        return longestDate\r\n    },\r\n    normalizeTime: function(date) {\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0)\r\n    }\r\n};\r\ndateUtils.DATE_COMPONENTS_INFO = {\r\n    year: {\r\n        getter: \"getFullYear\",\r\n        setter: \"setFullYear\",\r\n        formatter: function(value, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setFullYear(value);\r\n            return _date.default.format(formatDate, \"yyyy\")\r\n        },\r\n        startValue: void 0,\r\n        endValue: void 0\r\n    },\r\n    day: {\r\n        getter: \"getDate\",\r\n        setter: \"setDate\",\r\n        formatter: function(value, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setDate(value);\r\n            return _date.default.format(formatDate, \"d\")\r\n        },\r\n        startValue: 1,\r\n        endValue: void 0\r\n    },\r\n    month: {\r\n        getter: \"getMonth\",\r\n        setter: \"setMonth\",\r\n        formatter: function(value) {\r\n            return _date.default.getMonthNames()[value]\r\n        },\r\n        startValue: 0,\r\n        endValue: 11\r\n    },\r\n    hours: {\r\n        getter: \"getHours\",\r\n        setter: \"setHours\",\r\n        formatter: function(value) {\r\n            return _date.default.format(new Date(0, 0, 0, value), \"hour\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 23\r\n    },\r\n    minutes: {\r\n        getter: \"getMinutes\",\r\n        setter: \"setMinutes\",\r\n        formatter: function(value) {\r\n            return _date.default.format(new Date(0, 0, 0, 0, value), \"minute\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    seconds: {\r\n        getter: \"getSeconds\",\r\n        setter: \"setSeconds\",\r\n        formatter: function(value) {\r\n            return _date.default.format(new Date(0, 0, 0, 0, 0, value), \"second\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    milliseconds: {\r\n        getter: \"getMilliseconds\",\r\n        setter: \"setMilliseconds\",\r\n        formatter: function(value) {\r\n            return _date.default.format(new Date(0, 0, 0, 0, 0, 0, value), \"millisecond\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 999\r\n    }\r\n};\r\nvar _default = dateUtils;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.date_view_roller\"));\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui2 = _interopRequireDefault(require(\"./ui.date_utils\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _date2 = _interopRequireDefault(require(\"../../localization/date\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DATEVIEW_CLASS = \"dx-dateview\";\r\nvar DATEVIEW_COMPACT_CLASS = \"dx-dateview-compact\";\r\nvar DATEVIEW_WRAPPER_CLASS = \"dx-dateview-wrapper\";\r\nvar DATEVIEW_ROLLER_CONTAINER_CLASS = \"dx-dateview-rollers\";\r\nvar DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar ROLLER_TYPE = {\r\n    year: \"year\",\r\n    month: \"month\",\r\n    day: \"day\",\r\n    hours: \"hours\"\r\n};\r\nvar DateView = _editor.default.inherit({\r\n    _valueOption: function() {\r\n        var value = this.option(\"value\");\r\n        var date = new Date(value);\r\n        return !value || isNaN(date) ? this._getDefaultDate() : date\r\n    },\r\n    _getDefaultDate: function() {\r\n        var date = new Date;\r\n        if (this.option(\"type\") === TYPE.date) {\r\n            return new Date(date.getFullYear(), date.getMonth(), date.getDate())\r\n        }\r\n        return date\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            minDate: _ui2.default.MIN_DATEVIEW_DEFAULT_DATE,\r\n            maxDate: _ui2.default.MAX_DATEVIEW_DEFAULT_DATE,\r\n            type: TYPE.date,\r\n            value: new Date,\r\n            applyCompactClass: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"desktop\" !== _device.deviceType\r\n            },\r\n            options: {\r\n                applyCompactClass: true\r\n            }\r\n        }])\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DATEVIEW_CLASS);\r\n        this._toggleFormatClasses(this.option(\"type\"));\r\n        this._toggleCompactClass()\r\n    },\r\n    _toggleFormatClasses: function(currentFormat, previousFormat) {\r\n        this.$element().addClass(DATEVIEW_CLASS + \"-\" + currentFormat);\r\n        previousFormat && this.$element().removeClass(DATEVIEW_CLASS + \"-\" + previousFormat)\r\n    },\r\n    _toggleCompactClass: function() {\r\n        this.$element().toggleClass(DATEVIEW_COMPACT_CLASS, this.option(\"applyCompactClass\"))\r\n    },\r\n    _wrapper: function() {\r\n        return this._$wrapper\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._$wrapper = (0, _renderer.default)(\"<div>\").addClass(DATEVIEW_WRAPPER_CLASS);\r\n        this._renderRollers();\r\n        this._$wrapper.appendTo(this.$element())\r\n    },\r\n    _renderRollers: function() {\r\n        if (!this._$rollersContainer) {\r\n            this._$rollersContainer = (0, _renderer.default)(\"<div>\").addClass(DATEVIEW_ROLLER_CONTAINER_CLASS)\r\n        }\r\n        this._$rollersContainer.empty();\r\n        this._createRollerConfigs();\r\n        this._rollers = {};\r\n        var that = this;\r\n        (0, _iterator.each)(that._rollerConfigs, function(name) {\r\n            var $roller = (0, _renderer.default)(\"<div>\").appendTo(that._$rollersContainer).addClass(DATEVIEW_ROLLER_CLASS + \"-\" + that._rollerConfigs[name].type);\r\n            that._rollers[that._rollerConfigs[name].type] = that._createComponent($roller, _ui.default, {\r\n                items: that._rollerConfigs[name].displayItems,\r\n                selectedIndex: that._rollerConfigs[name].selectedIndex,\r\n                showScrollbar: false,\r\n                onStart: function(e) {\r\n                    var roller = e.component;\r\n                    roller._toggleActive(true);\r\n                    that._setActiveRoller(that._rollerConfigs[name], roller.option(\"selectedIndex\"))\r\n                },\r\n                onEnd: function(e) {\r\n                    var roller = e.component;\r\n                    roller._toggleActive(false)\r\n                },\r\n                onClick: function(e) {\r\n                    var roller = e.component;\r\n                    roller._toggleActive(true);\r\n                    that._setActiveRoller(that._rollerConfigs[name], roller.option(\"selectedIndex\"));\r\n                    that._setRollerState(that._rollerConfigs[name], roller.option(\"selectedIndex\"));\r\n                    roller._toggleActive(false)\r\n                },\r\n                onSelectedIndexChanged: function(e) {\r\n                    var roller = e.component;\r\n                    that._setRollerState(that._rollerConfigs[name], roller.option(\"selectedIndex\"))\r\n                }\r\n            })\r\n        });\r\n        that._$rollersContainer.appendTo(that._wrapper())\r\n    },\r\n    _createRollerConfigs: function(type) {\r\n        var that = this;\r\n        type = type || that.option(\"type\");\r\n        that._rollerConfigs = {};\r\n        _date2.default.getFormatParts(_ui2.default.FORMATS_MAP[type]).forEach(function(partName) {\r\n            that._createRollerConfig(partName)\r\n        })\r\n    },\r\n    _createRollerConfig: function(componentName) {\r\n        var componentInfo = _ui2.default.DATE_COMPONENTS_INFO[componentName];\r\n        var valueRange = this._calculateRollerConfigValueRange(componentName);\r\n        var startValue = valueRange.startValue;\r\n        var endValue = valueRange.endValue;\r\n        var formatter = componentInfo.formatter;\r\n        var curDate = this._getCurrentDate();\r\n        var config = {\r\n            type: componentName,\r\n            setValue: componentInfo.setter,\r\n            valueItems: [],\r\n            displayItems: [],\r\n            getIndex: function(value) {\r\n                return value[componentInfo.getter]() - startValue\r\n            }\r\n        };\r\n        for (var i = startValue; i <= endValue; i++) {\r\n            config.valueItems.push(i);\r\n            config.displayItems.push(formatter(i, curDate))\r\n        }\r\n        config.selectedIndex = config.getIndex(curDate);\r\n        this._rollerConfigs[componentName] = config\r\n    },\r\n    _setActiveRoller: function(currentRoller) {\r\n        var activeRoller = currentRoller && this._rollers[currentRoller.type];\r\n        (0, _iterator.each)(this._rollers, function() {\r\n            this.toggleActiveState(this === activeRoller)\r\n        })\r\n    },\r\n    _updateRollersPosition: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._rollers, function(type) {\r\n            var correctIndex = that._rollerConfigs[type].getIndex(that._getCurrentDate());\r\n            this.option(\"selectedIndex\", correctIndex)\r\n        })\r\n    },\r\n    _setRollerState: function(roller, selectedIndex) {\r\n        if (selectedIndex !== roller.selectedIndex) {\r\n            var rollerValue = roller.valueItems[selectedIndex];\r\n            var setValue = roller.setValue;\r\n            var currentValue = new Date(this._getCurrentDate());\r\n            var currentDate = currentValue.getDate();\r\n            var minDate = this.option(\"minDate\");\r\n            var maxDate = this.option(\"maxDate\");\r\n            if (roller.type === ROLLER_TYPE.month) {\r\n                currentDate = Math.min(currentDate, _ui2.default.getMaxMonthDay(currentValue.getFullYear(), rollerValue))\r\n            } else {\r\n                if (roller.type === ROLLER_TYPE.year) {\r\n                    currentDate = Math.min(currentDate, _ui2.default.getMaxMonthDay(rollerValue, currentValue.getMonth()))\r\n                }\r\n            }\r\n            currentValue.setDate(currentDate);\r\n            currentValue[setValue](rollerValue);\r\n            var normalizedDate = _date.default.normalizeDate(currentValue, minDate, maxDate);\r\n            currentValue = _ui2.default.mergeDates(normalizedDate, currentValue, \"time\");\r\n            currentValue = _date.default.normalizeDate(currentValue, minDate, maxDate);\r\n            this.option(\"value\", currentValue);\r\n            roller.selectedIndex = selectedIndex\r\n        }\r\n        if (roller.type === ROLLER_TYPE.year) {\r\n            this._refreshRollers()\r\n        }\r\n        if (roller.type === ROLLER_TYPE.month) {\r\n            this._refreshRoller(ROLLER_TYPE.day);\r\n            this._refreshRoller(ROLLER_TYPE.hours)\r\n        }\r\n    },\r\n    _refreshRoller: function(rollerType) {\r\n        var roller = this._rollers[rollerType];\r\n        if (roller) {\r\n            this._createRollerConfig(rollerType);\r\n            var rollerConfig = this._rollerConfigs[rollerType];\r\n            if (rollerType === ROLLER_TYPE.day || rollerConfig.displayItems.toString() !== roller.option(\"items\").toString()) {\r\n                roller.option({\r\n                    items: rollerConfig.displayItems,\r\n                    selectedIndex: rollerConfig.selectedIndex\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _getCurrentDate: function() {\r\n        var curDate = this._valueOption();\r\n        var minDate = this.option(\"minDate\");\r\n        var maxDate = this.option(\"maxDate\");\r\n        return _date.default.normalizeDate(curDate, minDate, maxDate)\r\n    },\r\n    _calculateRollerConfigValueRange: function(componentName) {\r\n        var curDate = this._getCurrentDate();\r\n        var minDate = this.option(\"minDate\");\r\n        var maxDate = this.option(\"maxDate\");\r\n        var minYear = _date.default.sameYear(curDate, minDate);\r\n        var minMonth = minYear && curDate.getMonth() === minDate.getMonth();\r\n        var maxYear = _date.default.sameYear(curDate, maxDate);\r\n        var maxMonth = maxYear && curDate.getMonth() === maxDate.getMonth();\r\n        var minHour = minMonth && curDate.getDate() === minDate.getDate();\r\n        var maxHour = maxMonth && curDate.getDate() === maxDate.getDate();\r\n        var componentInfo = _ui2.default.DATE_COMPONENTS_INFO[componentName];\r\n        var startValue = componentInfo.startValue;\r\n        var endValue = componentInfo.endValue;\r\n        if (componentName === ROLLER_TYPE.year) {\r\n            startValue = minDate.getFullYear();\r\n            endValue = maxDate.getFullYear()\r\n        }\r\n        if (componentName === ROLLER_TYPE.month) {\r\n            if (minYear) {\r\n                startValue = minDate.getMonth()\r\n            }\r\n            if (maxYear) {\r\n                endValue = maxDate.getMonth()\r\n            }\r\n        }\r\n        if (componentName === ROLLER_TYPE.day) {\r\n            endValue = _ui2.default.getMaxMonthDay(curDate.getFullYear(), curDate.getMonth());\r\n            if (minYear && minMonth) {\r\n                startValue = minDate.getDate()\r\n            }\r\n            if (maxYear && maxMonth) {\r\n                endValue = maxDate.getDate()\r\n            }\r\n        }\r\n        if (componentName === ROLLER_TYPE.hours) {\r\n            startValue = minHour ? minDate.getHours() : startValue;\r\n            endValue = maxHour ? maxDate.getHours() : endValue\r\n        }\r\n        return {\r\n            startValue: startValue,\r\n            endValue: endValue\r\n        }\r\n    },\r\n    _refreshRollers: function() {\r\n        this._refreshRoller(ROLLER_TYPE.month);\r\n        this._refreshRoller(ROLLER_TYPE.day);\r\n        this._refreshRoller(ROLLER_TYPE.hours)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"minDate\":\r\n            case \"maxDate\":\r\n            case \"type\":\r\n                this._renderRollers();\r\n                this._toggleFormatClasses(args.value, args.previousValue);\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (args.value) {\r\n                    this._renderRollers()\r\n                }\r\n                break;\r\n            case \"value\":\r\n                this.option(\"value\", this._valueOption());\r\n                this._refreshRollers();\r\n                this._updateRollersPosition();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        delete this._$rollersContainer\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxDateView\", DateView);\r\nvar _default = DateView;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.date_view_roller.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _click = require(\"../../events/click\");\r\nvar _ui = _interopRequireDefault(require(\"../scroll_view/ui.scrollable\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _translator = require(\"../../animation/translator\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\r\nvar DATEVIEW_ROLLER_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DATEVIEW_ROLLER_CURRENT_CLASS = \"dx-dateviewroller-current\";\r\nvar DATEVIEW_ROLLER_ITEM_CLASS = \"dx-dateview-item\";\r\nvar DATEVIEW_ROLLER_ITEM_SELECTED_CLASS = \"dx-dateview-item-selected\";\r\nvar DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS = \"dx-dateview-item-selected-frame\";\r\nvar DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS = \"dx-dateview-item-selected-border\";\r\nvar DateViewRoller = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            showScrollbar: false,\r\n            useNative: false,\r\n            selectedIndex: 0,\r\n            bounceEnabled: false,\r\n            items: [],\r\n            showOnClick: false,\r\n            onClick: null,\r\n            onSelectedIndexChanged: null\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                scrollByContent: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItemFrame()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DATEVIEW_ROLLER_CLASS);\r\n        this._renderContainerClick();\r\n        this._renderItems();\r\n        this._renderSelectedValue();\r\n        this._renderItemsClick();\r\n        this._renderWheelEvent();\r\n        this._wrapAction(\"_endAction\", this._endActionHandler.bind(this));\r\n        this._renderSelectedIndexChanged()\r\n    },\r\n    _renderSelectedIndexChanged: function() {\r\n        this._selectedIndexChanged = this._createActionByOption(\"onSelectedIndexChanged\")\r\n    },\r\n    _renderWheelEvent: function() {\r\n        var _this = this;\r\n        _events_engine.default.on(this._$container, \"dxmousewheel\", function(e) {\r\n            _this._isWheelScrolled = true\r\n        })\r\n    },\r\n    _renderContainerClick: function() {\r\n        if (!this.option(\"showOnClick\")) {\r\n            return\r\n        }\r\n        var eventName = (0, _index.addNamespace)(_click.name, this.NAME);\r\n        var clickAction = this._createActionByOption(\"onClick\");\r\n        _events_engine.default.off(this._$container, eventName);\r\n        _events_engine.default.on(this._$container, eventName, function(e) {\r\n            clickAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _wrapAction: function(actionName, callback) {\r\n        var strategy = this._strategy;\r\n        var originalAction = strategy[actionName];\r\n        strategy[actionName] = function() {\r\n            callback.apply(this, arguments);\r\n            return originalAction.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderItems: function() {\r\n        var items = this.option(\"items\") || [];\r\n        var $items = (0, _renderer.default)();\r\n        this._$content.empty();\r\n        items.forEach(function(item) {\r\n            $items = $items.add((0, _renderer.default)(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_CLASS).append(item))\r\n        });\r\n        this._$content.append($items);\r\n        this._$items = $items;\r\n        this.update()\r\n    },\r\n    _renderSelectedItemFrame: function() {\r\n        (0, _renderer.default)(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS).append((0, _renderer.default)(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS)).appendTo(this._$container)\r\n    },\r\n    _renderSelectedValue: function(selectedIndex) {\r\n        var index = this._fitIndex(null !== selectedIndex && void 0 !== selectedIndex ? selectedIndex : this.option(\"selectedIndex\"));\r\n        this._moveTo({\r\n            top: this._getItemPosition(index)\r\n        });\r\n        this._renderActiveStateItem()\r\n    },\r\n    _fitIndex: function(index) {\r\n        var items = this.option(\"items\") || [];\r\n        var itemCount = items.length;\r\n        if (index >= itemCount) {\r\n            return itemCount - 1\r\n        }\r\n        if (index < 0) {\r\n            return 0\r\n        }\r\n        return index\r\n    },\r\n    _getItemPosition: function(index) {\r\n        return Math.round(this._itemHeight() * index)\r\n    },\r\n    _renderItemsClick: function() {\r\n        var itemSelector = this._getItemSelector();\r\n        var eventName = (0, _index.addNamespace)(_click.name, this.NAME);\r\n        _events_engine.default.off(this.$element(), eventName, itemSelector);\r\n        _events_engine.default.on(this.$element(), eventName, itemSelector, this._itemClickHandler.bind(this))\r\n    },\r\n    _getItemSelector: function() {\r\n        return \".\" + DATEVIEW_ROLLER_ITEM_CLASS\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        this.option(\"selectedIndex\", this._itemElementIndex(e.currentTarget))\r\n    },\r\n    _itemElementIndex: function(itemElement) {\r\n        return this._itemElements().index(itemElement)\r\n    },\r\n    _itemElements: function() {\r\n        return this.$element().find(this._getItemSelector())\r\n    },\r\n    _renderActiveStateItem: function() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        (0, _iterator.each)(this._$items, function(index) {\r\n            (0, _renderer.default)(this).toggleClass(DATEVIEW_ROLLER_ITEM_SELECTED_CLASS, selectedIndex === index)\r\n        })\r\n    },\r\n    _shouldScrollToNeighborItem: function() {\r\n        return \"desktop\" === _devices.default.real().deviceType && this._isWheelScrolled\r\n    },\r\n    _moveTo: function(targetLocation) {\r\n        targetLocation = this._normalizeLocation(targetLocation);\r\n        var location = this._location();\r\n        var delta = {\r\n            x: -(location.left - targetLocation.left),\r\n            y: -(location.top - targetLocation.top)\r\n        };\r\n        if (this._isVisible() && (delta.x || delta.y)) {\r\n            this._strategy._prepareDirections(true);\r\n            if (this._animation && !this._shouldScrollToNeighborItem()) {\r\n                var that = this;\r\n                _fx.default.stop(this._$content);\r\n                _fx.default.animate(this._$content, {\r\n                    duration: 200,\r\n                    type: \"slide\",\r\n                    to: {\r\n                        top: Math.floor(delta.y)\r\n                    },\r\n                    complete: function() {\r\n                        (0, _translator.resetPosition)(that._$content);\r\n                        that._strategy.handleMove({\r\n                            delta: delta\r\n                        })\r\n                    }\r\n                });\r\n                delete this._animation\r\n            } else {\r\n                this._strategy.handleMove({\r\n                    delta: delta\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _validate: function(e) {\r\n        return this._strategy.validate(e)\r\n    },\r\n    _fitSelectedIndexInRange: function(index) {\r\n        var itemsCount = this.option(\"items\").length;\r\n        return Math.max(Math.min(index, itemsCount - 1), 0)\r\n    },\r\n    _isInNullNeighborhood: function(x) {\r\n        var EPS = .1;\r\n        return -EPS <= x && x <= EPS\r\n    },\r\n    _getSelectedIndexAfterScroll: function(currentSelectedIndex) {\r\n        var locationTop = -this._location().top;\r\n        var currentSelectedIndexPosition = currentSelectedIndex * this._itemHeight();\r\n        var dy = locationTop - currentSelectedIndexPosition;\r\n        if (this._isInNullNeighborhood(dy)) {\r\n            return currentSelectedIndex\r\n        }\r\n        var direction = dy > 0 ? 1 : -1;\r\n        var newSelectedIndex = this._fitSelectedIndexInRange(currentSelectedIndex + direction);\r\n        return newSelectedIndex\r\n    },\r\n    _getNewSelectedIndex: function(currentSelectedIndex) {\r\n        if (this._shouldScrollToNeighborItem()) {\r\n            return this._getSelectedIndexAfterScroll(currentSelectedIndex)\r\n        }\r\n        this._animation = true;\r\n        var ratio = -this._location().top / this._itemHeight();\r\n        return Math.round(ratio)\r\n    },\r\n    _endActionHandler: function() {\r\n        var currentSelectedIndex = this.option(\"selectedIndex\");\r\n        var newSelectedIndex = this._getNewSelectedIndex(currentSelectedIndex);\r\n        if (newSelectedIndex === currentSelectedIndex) {\r\n            this._renderSelectedValue(newSelectedIndex)\r\n        } else {\r\n            this.option(\"selectedIndex\", newSelectedIndex)\r\n        }\r\n        this._isWheelScrolled = false\r\n    },\r\n    _itemHeight: function() {\r\n        var $item = this._$items.first();\r\n        return $item.height()\r\n    },\r\n    _toggleActive: function(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_ACTIVE_CLASS, state)\r\n    },\r\n    _isVisible: function() {\r\n        return this._$container.is(\":visible\")\r\n    },\r\n    _fireSelectedIndexChanged: function(value, previousValue) {\r\n        this._selectedIndexChanged({\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: void 0\r\n        })\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        this.callBase(visible);\r\n        if (visible) {\r\n            this._renderSelectedValue(this.option(\"selectedIndex\"))\r\n        }\r\n        this.toggleActiveState(false)\r\n    },\r\n    toggleActiveState: function(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_CURRENT_CLASS, state)\r\n    },\r\n    _refreshSelectedIndex: function() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        var fitIndex = this._fitIndex(selectedIndex);\r\n        if (fitIndex === selectedIndex) {\r\n            this._renderActiveStateItem()\r\n        } else {\r\n            this.option(\"selectedIndex\", fitIndex)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"selectedIndex\":\r\n                this._fireSelectedIndexChanged(args.value, args.previousValue);\r\n                this._renderSelectedValue(args.value);\r\n                break;\r\n            case \"items\":\r\n                this._renderItems();\r\n                this._refreshSelectedIndex();\r\n                break;\r\n            case \"onClick\":\r\n            case \"showOnClick\":\r\n                this._renderContainerClick();\r\n                break;\r\n            case \"onSelectedIndexChanged\":\r\n                this._renderSelectedIndexChanged();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxDateViewRoller\", DateViewRoller);\r\nvar _default = DateViewRoller;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/date_box/ui.time_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _number_box = _interopRequireDefault(require(\"../number_box\"));\r\nvar _select_box = _interopRequireDefault(require(\"../select_box\"));\r\nvar _box = _interopRequireDefault(require(\"../box\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.date_utils\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TIMEVIEW_CLASS = \"dx-timeview\";\r\nvar TIMEVIEW_CLOCK_CLASS = \"dx-timeview-clock\";\r\nvar TIMEVIEW_FIELD_CLASS = \"dx-timeview-field\";\r\nvar TIMEVIEW_HOURARROW_CLASS = \"dx-timeview-hourarrow\";\r\nvar TIMEVIEW_TIME_SEPARATOR_CLASS = \"dx-timeview-time-separator\";\r\nvar TIMEVIEW_FORMAT12_CLASS = \"dx-timeview-format12\";\r\nvar TIMEVIEW_FORMAT12_AM = -1;\r\nvar TIMEVIEW_FORMAT12_PM = 1;\r\nvar TIMEVIEW_MINUTEARROW_CLASS = \"dx-timeview-minutearrow\";\r\nvar rotateArrow = function($arrow, angle, offset) {\r\n    cssRotate($arrow, angle, offset)\r\n};\r\nvar cssRotate = function($arrow, angle, offset) {\r\n    $arrow.css(\"transform\", \"rotate(\" + angle + \"deg) translate(0,\" + offset + \"px)\")\r\n};\r\nvar TimeView = _editor.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: new Date(Date.now()),\r\n            use24HourFormat: true,\r\n            _showClock: true,\r\n            _arrowOffset: 0,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 15\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 5\r\n            }\r\n        }])\r\n    },\r\n    _getValue: function() {\r\n        return this.option(\"value\") || new Date\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TIMEVIEW_CLASS)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderBox();\r\n        this._updateTime()\r\n    },\r\n    _renderBox: function() {\r\n        var $box = (0, _renderer.default)(\"<div>\").appendTo(this.$element());\r\n        var items = [];\r\n        if (this.option(\"_showClock\")) {\r\n            items.push({\r\n                ratio: 1,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: this._renderClock.bind(this)\r\n            })\r\n        }\r\n        items.push({\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: 50,\r\n            template: this._renderField.bind(this)\r\n        });\r\n        this._createComponent($box, _box.default, {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            direction: \"col\",\r\n            items: items\r\n        })\r\n    },\r\n    _renderClock: function(_, __, container) {\r\n        this._$hourArrow = (0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_HOURARROW_CLASS);\r\n        this._$minuteArrow = (0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_MINUTEARROW_CLASS);\r\n        var $container = (0, _renderer.default)(container);\r\n        $container.addClass(TIMEVIEW_CLOCK_CLASS).append(this._$hourArrow).append(this._$minuteArrow);\r\n        this.setAria(\"role\", \"presentation\", $container)\r\n    },\r\n    _updateClock: function() {\r\n        var time = this._getValue();\r\n        var hourArrowAngle = time.getHours() / 12 * 360 + time.getMinutes() / 60 * 30;\r\n        var minuteArrowAngle = time.getMinutes() / 60 * 360;\r\n        rotateArrow(this._$hourArrow, hourArrowAngle, this.option(\"_arrowOffset\"));\r\n        rotateArrow(this._$minuteArrow, minuteArrowAngle, this.option(\"_arrowOffset\"))\r\n    },\r\n    _getBoxItems: function(is12HourFormat) {\r\n        var _this = this;\r\n        var items = [{\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return _this._hourBox.$element()\r\n            }\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: (0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_TIME_SEPARATOR_CLASS).text(_date.default.getTimeSeparator())\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return _this._minuteBox.$element()\r\n            }\r\n        }];\r\n        if (is12HourFormat) {\r\n            items.push({\r\n                ratio: 0,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: function() {\r\n                    return _this._format12.$element()\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _renderField: function() {\r\n        var is12HourFormat = !this.option(\"use24HourFormat\");\r\n        this._createHourBox(is12HourFormat);\r\n        this._createMinuteBox();\r\n        if (is12HourFormat) {\r\n            this._createFormat12Box()\r\n        }\r\n        return this._createComponent((0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_FIELD_CLASS), _box.default, {\r\n            direction: \"row\",\r\n            align: \"center\",\r\n            crossAlign: \"center\",\r\n            items: this._getBoxItems(is12HourFormat)\r\n        }).$element()\r\n    },\r\n    _createHourBox: function(is12HourFormat) {\r\n        var _this2 = this;\r\n        var editor = this._hourBox = this._createComponent((0, _renderer.default)(\"<div>\"), _number_box.default, (0, _extend.extend)({\r\n            min: -1,\r\n            max: is12HourFormat ? 13 : 24,\r\n            value: this._getValue().getHours(),\r\n            onValueChanged: this._onHourBoxValueChanged.bind(this),\r\n            onKeyboardHandled: function(opts) {\r\n                return _this2._keyboardHandler(opts)\r\n            }\r\n        }, this._getNumberBoxConfig()));\r\n        editor.setAria(\"label\", \"hours\")\r\n    },\r\n    _isPM: function() {\r\n        return !this.option(\"use24HourFormat\") && 1 === this._format12.option(\"value\")\r\n    },\r\n    _onHourBoxValueChanged: function(_ref) {\r\n        var value = _ref.value,\r\n            component = _ref.component;\r\n        var currentValue = this._getValue();\r\n        var newValue = new Date(currentValue);\r\n        var newHours = this._convertMaxHourToMin(value);\r\n        component.option(\"value\", newHours);\r\n        if (this._isPM()) {\r\n            newHours += 12\r\n        }\r\n        newValue.setHours(newHours);\r\n        _ui.default.normalizeTime(newValue);\r\n        this.option(\"value\", newValue)\r\n    },\r\n    _convertMaxHourToMin: function(hours) {\r\n        var maxHoursValue = this.option(\"use24HourFormat\") ? 24 : 12;\r\n        return (maxHoursValue + hours) % maxHoursValue\r\n    },\r\n    _createMinuteBox: function() {\r\n        var _this3 = this;\r\n        var editor = this._minuteBox = this._createComponent((0, _renderer.default)(\"<div>\"), _number_box.default, (0, _extend.extend)({\r\n            min: -1,\r\n            max: 60,\r\n            value: this._getValue().getMinutes(),\r\n            onKeyboardHandled: function(opts) {\r\n                return _this3._keyboardHandler(opts)\r\n            },\r\n            onValueChanged: function(_ref2) {\r\n                var value = _ref2.value,\r\n                    component = _ref2.component;\r\n                var newMinutes = (60 + value) % 60;\r\n                component.option(\"value\", newMinutes);\r\n                var time = new Date(_this3._getValue());\r\n                time.setMinutes(newMinutes);\r\n                _ui.default.normalizeTime(time);\r\n                _this3.option(\"value\", time)\r\n            }\r\n        }, this._getNumberBoxConfig()));\r\n        editor.setAria(\"label\", \"minutes\")\r\n    },\r\n    _createFormat12Box: function() {\r\n        var _this4 = this;\r\n        var periodNames = _date.default.getPeriodNames();\r\n        var editor = this._format12 = this._createComponent((0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_FORMAT12_CLASS), _select_box.default, {\r\n            items: [{\r\n                value: TIMEVIEW_FORMAT12_AM,\r\n                text: periodNames[0]\r\n            }, {\r\n                value: TIMEVIEW_FORMAT12_PM,\r\n                text: periodNames[1]\r\n            }],\r\n            valueExpr: \"value\",\r\n            displayExpr: \"text\",\r\n            onKeyboardHandled: function(opts) {\r\n                return _this4._keyboardHandler(opts)\r\n            },\r\n            onValueChanged: function(_ref3) {\r\n                var value = _ref3.value;\r\n                var hours = _this4._getValue().getHours();\r\n                var time = new Date(_this4._getValue());\r\n                var newHours = (hours + 12 * value) % 24;\r\n                time.setHours(newHours);\r\n                _this4.option(\"value\", time)\r\n            },\r\n            value: this._getValue().getHours() >= 12 ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM,\r\n            stylingMode: this.option(\"stylingMode\")\r\n        });\r\n        editor.setAria(\"label\", \"type\")\r\n    },\r\n    _refreshFormat12: function() {\r\n        if (this.option(\"use24HourFormat\")) {\r\n            return\r\n        }\r\n        var value = this._getValue();\r\n        var hours = value.getHours();\r\n        var isPM = hours >= 12;\r\n        var newValue = isPM ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM;\r\n        this._silentEditorValueUpdate(this._format12, newValue)\r\n    },\r\n    _silentEditorValueUpdate: function(editor, value) {\r\n        if (editor) {\r\n            editor._suppressValueChangeAction();\r\n            editor.option(\"value\", value);\r\n            editor._resumeValueChangeAction()\r\n        }\r\n    },\r\n    _getNumberBoxConfig: function() {\r\n        return {\r\n            showSpinButtons: true,\r\n            displayValueFormatter: function(value) {\r\n                return (value < 10 ? \"0\" : \"\") + value\r\n            },\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }\r\n    },\r\n    _normalizeHours: function(hours) {\r\n        return this.option(\"use24HourFormat\") ? hours : hours % 12 || 12\r\n    },\r\n    _updateField: function() {\r\n        var hours = this._normalizeHours(this._getValue().getHours());\r\n        this._silentEditorValueUpdate(this._hourBox, hours);\r\n        this._silentEditorValueUpdate(this._minuteBox, this._getValue().getMinutes());\r\n        this._refreshFormat12()\r\n    },\r\n    _updateTime: function() {\r\n        if (this.option(\"_showClock\")) {\r\n            this._updateClock()\r\n        }\r\n        this._updateField()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateTime()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._updateTime();\r\n                this.callBase(args);\r\n                break;\r\n            case \"_arrowOffset\":\r\n                break;\r\n            case \"use24HourFormat\":\r\n            case \"_showClock\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxTimeView\", TimeView);\r\nvar _default = TimeView;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/dialog.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.title = exports.custom = exports.confirm = exports.alert = exports.FakeDialogComponent = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _component = _interopRequireDefault(require(\"../core/component\"));\r\nvar _action = _interopRequireDefault(require(\"../core/action\"));\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\nvar _config = _interopRequireDefault(require(\"../core/config\"));\r\nvar _dom = require(\"../core/utils/dom\");\r\nvar _deferred = require(\"../core/utils/deferred\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _view_port = require(\"../core/utils/view_port\");\r\nvar _message = _interopRequireDefault(require(\"../localization/message\"));\r\nvar _ui = _interopRequireDefault(require(\"./widget/ui.errors\"));\r\nvar _popup = _interopRequireDefault(require(\"./popup\"));\r\nvar _common = require(\"../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar DEFAULT_BUTTON = {\r\n    text: \"OK\",\r\n    onClick: function() {\r\n        return true\r\n    }\r\n};\r\nvar DX_DIALOG_CLASSNAME = \"dx-dialog\";\r\nvar DX_DIALOG_WRAPPER_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-wrapper\");\r\nvar DX_DIALOG_ROOT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-root\");\r\nvar DX_DIALOG_CONTENT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-content\");\r\nvar DX_DIALOG_MESSAGE_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-message\");\r\nvar DX_DIALOG_BUTTONS_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-buttons\");\r\nvar DX_DIALOG_BUTTON_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-button\");\r\nvar DX_BUTTON_CLASSNAME = \"dx-button\";\r\nvar FakeDialogComponent = _component.default.inherit({\r\n    ctor: function(element, options) {\r\n        this.callBase(options)\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                width: 276\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                lWidth: \"60%\",\r\n                pWidth: \"80%\"\r\n            }\r\n        }])\r\n    }\r\n});\r\nexports.FakeDialogComponent = FakeDialogComponent;\r\nvar title = \"\";\r\nexports.title = title;\r\nvar custom = function(options) {\r\n    var deferred = new _deferred.Deferred;\r\n    var defaultOptions = (new FakeDialogComponent).option();\r\n    options = (0, _extend.extend)(defaultOptions, options);\r\n    var $element = (0, _renderer.default)(\"<div>\").addClass(DX_DIALOG_CLASSNAME).appendTo((0, _view_port.value)());\r\n    var isMessageDefined = \"message\" in options;\r\n    var isMessageHtmlDefined = \"messageHtml\" in options;\r\n    if (isMessageDefined) {\r\n        _ui.default.log(\"W1013\")\r\n    }\r\n    var messageHtml = String(isMessageHtmlDefined ? options.messageHtml : options.message);\r\n    var $message = (0, _renderer.default)(\"<div>\").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(messageHtml);\r\n    var popupToolbarItems = [];\r\n    (0, _iterator.each)(options.buttons || [DEFAULT_BUTTON], function() {\r\n        var action = new _action.default(this.onClick, {\r\n            context: popupInstance\r\n        });\r\n        popupToolbarItems.push({\r\n            toolbar: \"bottom\",\r\n            location: _devices.default.current().android ? \"after\" : \"center\",\r\n            widget: \"dxButton\",\r\n            options: (0, _extend.extend)({}, this, {\r\n                onClick: function() {\r\n                    var result = action.execute.apply(action, arguments);\r\n                    hide(result)\r\n                }\r\n            })\r\n        })\r\n    });\r\n    var popupInstance = new _popup.default($element, (0, _extend.extend)({\r\n        title: options.title || title,\r\n        showTitle: (0, _common.ensureDefined)(options.showTitle, true),\r\n        dragEnabled: (0, _common.ensureDefined)(options.dragEnabled, true),\r\n        height: \"auto\",\r\n        width: function() {\r\n            var isPortrait = (0, _renderer.default)(window).height() > (0, _renderer.default)(window).width();\r\n            var key = (isPortrait ? \"p\" : \"l\") + \"Width\";\r\n            var widthOption = Object.prototype.hasOwnProperty.call(options, key) ? options[key] : options.width;\r\n            return (0, _type.isFunction)(widthOption) ? widthOption() : widthOption\r\n        },\r\n        showCloseButton: options.showCloseButton || false,\r\n        ignoreChildEvents: false,\r\n        onContentReady: function(args) {\r\n            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message)\r\n        },\r\n        onShowing: function(e) {\r\n            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(\".\".concat(DX_BUTTON_CLASSNAME)).addClass(DX_DIALOG_BUTTON_CLASSNAME);\r\n            (0, _dom.resetActiveElement)()\r\n        },\r\n        onShown: function(e) {\r\n            var $firstButton = e.component.bottomToolbar().find(\".\".concat(DX_BUTTON_CLASSNAME)).first();\r\n            _events_engine.default.trigger($firstButton, \"focus\")\r\n        },\r\n        onHiding: function() {\r\n            deferred.reject()\r\n        },\r\n        toolbarItems: popupToolbarItems,\r\n        animation: {\r\n            show: {\r\n                type: \"pop\",\r\n                duration: 400\r\n            },\r\n            hide: {\r\n                type: \"pop\",\r\n                duration: 400,\r\n                to: {\r\n                    opacity: 0,\r\n                    scale: 0\r\n                },\r\n                from: {\r\n                    opacity: 1,\r\n                    scale: 1\r\n                }\r\n            }\r\n        },\r\n        rtlEnabled: (0, _config.default)().rtlEnabled,\r\n        boundaryOffset: {\r\n            h: 10,\r\n            v: 0\r\n        }\r\n    }, options.popupOptions));\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);\r\n    if (options.position) {\r\n        popupInstance.option(\"position\", options.position)\r\n    }\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);\r\n\r\n    function show() {\r\n        popupInstance.show();\r\n        return deferred.promise()\r\n    }\r\n\r\n    function hide(value) {\r\n        deferred.resolve(value);\r\n        popupInstance.hide().done(function() {\r\n            popupInstance.$element().remove()\r\n        })\r\n    }\r\n    return {\r\n        show: show,\r\n        hide: hide\r\n    }\r\n};\r\nexports.custom = custom;\r\nvar alert = function(messageHtml, title, showTitle) {\r\n    var options = (0, _type.isPlainObject)(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\nexports.alert = alert;\r\nvar confirm = function(messageHtml, title, showTitle) {\r\n    var options = (0, _type.isPlainObject)(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        buttons: [{\r\n            text: _message.default.format(\"Yes\"),\r\n            onClick: function() {\r\n                return true\r\n            }\r\n        }, {\r\n            text: _message.default.format(\"No\"),\r\n            onClick: function() {\r\n                return false\r\n            }\r\n        }],\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\nexports.confirm = confirm;\r\n","/**\r\n * DevExtreme (ui/draggable.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _window = require(\"../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _string = require(\"../core/utils/string\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _translator = require(\"../animation/translator\");\r\nvar _animator = _interopRequireDefault(require(\"./scroll_view/animator\"));\r\nvar _browser = _interopRequireDefault(require(\"../core/utils/browser\"));\r\nvar _inflector = require(\"../core/utils/inflector\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _dom_component = _interopRequireDefault(require(\"../core/dom_component\"));\r\nvar _element = require(\"../core/element\");\r\nvar _index = require(\"../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../events/pointer\"));\r\nvar _drag = require(\"../events/drag\");\r\nvar _position = _interopRequireDefault(require(\"../animation/position\"));\r\nvar _type = require(\"../core/utils/type\");\r\nvar _common = require(\"../core/utils/common\");\r\nvar _view_port = require(\"../core/utils/view_port\");\r\nvar _empty_template = require(\"../core/templates/empty_template\");\r\nvar _deferred = require(\"../core/utils/deferred\");\r\nvar _position2 = require(\"../core/utils/position\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar DRAGGABLE = \"dxDraggable\";\r\nvar DRAGSTART_EVENT_NAME = (0, _index.addNamespace)(_drag.start, DRAGGABLE);\r\nvar DRAG_EVENT_NAME = (0, _index.addNamespace)(_drag.move, DRAGGABLE);\r\nvar DRAGEND_EVENT_NAME = (0, _index.addNamespace)(_drag.end, DRAGGABLE);\r\nvar DRAG_ENTER_EVENT_NAME = (0, _index.addNamespace)(_drag.enter, DRAGGABLE);\r\nvar DRAGEND_LEAVE_EVENT_NAME = (0, _index.addNamespace)(_drag.leave, DRAGGABLE);\r\nvar POINTERDOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, DRAGGABLE);\r\nvar CLONE_CLASS = \"clone\";\r\nvar targetDraggable;\r\nvar sourceDraggable;\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nvar getMousePosition = function(event) {\r\n    return {\r\n        x: event.pageX - (0, _renderer.default)(window).scrollLeft(),\r\n        y: event.pageY - (0, _renderer.default)(window).scrollTop()\r\n    }\r\n};\r\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\r\nvar OVERLAY_WRAPPER_CLASS = \"dx-overlay-wrapper\";\r\nvar OVERLAY_CONTENT_CLASS = \"dx-overlay-content\";\r\nvar ScrollHelper = function() {\r\n    function ScrollHelper(orientation, component) {\r\n        this._preventScroll = true;\r\n        this._component = component;\r\n        if (\"vertical\" === orientation) {\r\n            this._scrollValue = \"scrollTop\";\r\n            this._overFlowAttr = \"overflowY\";\r\n            this._sizeAttr = \"height\";\r\n            this._scrollSizeProp = \"scrollHeight\";\r\n            this._clientSizeProp = \"clientHeight\";\r\n            this._limitProps = {\r\n                start: \"top\",\r\n                end: \"bottom\"\r\n            }\r\n        } else {\r\n            this._scrollValue = \"scrollLeft\";\r\n            this._overFlowAttr = \"overflowX\";\r\n            this._sizeAttr = \"width\";\r\n            this._scrollSizeProp = \"scrollWidth\";\r\n            this._clientSizeProp = \"clientWidth\";\r\n            this._limitProps = {\r\n                start: \"left\",\r\n                end: \"right\"\r\n            }\r\n        }\r\n    }\r\n    var _proto = ScrollHelper.prototype;\r\n    _proto.updateScrollable = function(elements, mousePosition) {\r\n        var _this = this;\r\n        var isScrollableFound = false;\r\n        elements.some(function(element) {\r\n            var $element = (0, _renderer.default)(element);\r\n            var isTargetOverOverlayWrapper = $element.hasClass(OVERLAY_WRAPPER_CLASS) && \"none\" !== $element.css(\"pointerEvents\");\r\n            var isTargetOverOverlayContent = $element.hasClass(OVERLAY_CONTENT_CLASS);\r\n            if (isTargetOverOverlayWrapper || isTargetOverOverlayContent) {\r\n                return true\r\n            }\r\n            isScrollableFound = _this._trySetScrollable(element, mousePosition);\r\n            return isScrollableFound\r\n        });\r\n        if (!isScrollableFound) {\r\n            this._$scrollableAtPointer = null;\r\n            this._scrollSpeed = 0\r\n        }\r\n    };\r\n    _proto.isScrolling = function() {\r\n        return !!this._scrollSpeed\r\n    };\r\n    _proto.isScrollable = function($element) {\r\n        var that = this;\r\n        return (\"auto\" === $element.css(that._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(that._scrollSizeProp) > $element[that._sizeAttr]()\r\n    };\r\n    _proto._trySetScrollable = function(element, mousePosition) {\r\n        var that = this;\r\n        var $element = (0, _renderer.default)(element);\r\n        var distanceToBorders;\r\n        var sensitivity = that._component.option(\"scrollSensitivity\");\r\n        var isScrollable = that.isScrollable($element);\r\n        if (isScrollable) {\r\n            distanceToBorders = that._calculateDistanceToBorders($element, mousePosition);\r\n            if (sensitivity > distanceToBorders[that._limitProps.start]) {\r\n                if (!that._preventScroll) {\r\n                    that._scrollSpeed = -that._calculateScrollSpeed(distanceToBorders[that._limitProps.start]);\r\n                    that._$scrollableAtPointer = $element\r\n                }\r\n            } else {\r\n                if (sensitivity > distanceToBorders[that._limitProps.end]) {\r\n                    if (!that._preventScroll) {\r\n                        that._scrollSpeed = that._calculateScrollSpeed(distanceToBorders[that._limitProps.end]);\r\n                        that._$scrollableAtPointer = $element\r\n                    }\r\n                } else {\r\n                    isScrollable = false;\r\n                    that._preventScroll = false\r\n                }\r\n            }\r\n        }\r\n        return isScrollable\r\n    };\r\n    _proto._calculateDistanceToBorders = function($area, mousePosition) {\r\n        var area = $area.get(0);\r\n        var areaBoundingRect;\r\n        if (area) {\r\n            areaBoundingRect = (0, _position2.getBoundingRect)(area);\r\n            return {\r\n                left: mousePosition.x - areaBoundingRect.left,\r\n                top: mousePosition.y - areaBoundingRect.top,\r\n                right: areaBoundingRect.right - mousePosition.x,\r\n                bottom: areaBoundingRect.bottom - mousePosition.y\r\n            }\r\n        } else {\r\n            return {}\r\n        }\r\n    };\r\n    _proto._calculateScrollSpeed = function(distance) {\r\n        var component = this._component;\r\n        var sensitivity = component.option(\"scrollSensitivity\");\r\n        var maxSpeed = component.option(\"scrollSpeed\");\r\n        return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed)\r\n    };\r\n    _proto.scrollByStep = function() {\r\n        var that = this;\r\n        if (that._$scrollableAtPointer && that._scrollSpeed) {\r\n            if (that._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\r\n                var $scrollable = that._$scrollableAtPointer.closest(\".dx-scrollable\");\r\n                var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\r\n                if (scrollableInstance) {\r\n                    var nextScrollPosition = scrollableInstance.scrollOffset()[that._limitProps.start] + that._scrollSpeed;\r\n                    scrollableInstance.scrollTo(_defineProperty({}, that._limitProps.start, nextScrollPosition))\r\n                }\r\n            } else {\r\n                var _nextScrollPosition = that._$scrollableAtPointer[that._scrollValue]() + that._scrollSpeed;\r\n                that._$scrollableAtPointer[that._scrollValue](_nextScrollPosition)\r\n            }\r\n            var dragMoveArgs = that._component._dragMoveArgs;\r\n            if (dragMoveArgs) {\r\n                that._component._dragMoveHandler(dragMoveArgs)\r\n            }\r\n        }\r\n    };\r\n    _proto.reset = function() {\r\n        this._$scrollableAtPointer = null;\r\n        this._scrollSpeed = 0;\r\n        this._preventScroll = true\r\n    };\r\n    _proto.isOutsideScrollable = function($scrollable, event) {\r\n        if (!$scrollable) {\r\n            return false\r\n        }\r\n        var scrollableSize = (0, _position2.getBoundingRect)($scrollable.get(0));\r\n        var start = scrollableSize[this._limitProps.start];\r\n        var size = scrollableSize[this._sizeAttr];\r\n        var mousePosition = getMousePosition(event);\r\n        var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\r\n        return location < start || location > start + size\r\n    };\r\n    return ScrollHelper\r\n}();\r\nvar ScrollAnimator = _animator.default.inherit({\r\n    ctor: function(strategy) {\r\n        this.callBase();\r\n        this._strategy = strategy\r\n    },\r\n    _step: function() {\r\n        var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\r\n        var verticalScrollHelper = this._strategy._verticalScrollHelper;\r\n        horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\r\n        verticalScrollHelper && verticalScrollHelper.scrollByStep()\r\n    }\r\n});\r\nvar Draggable = _dom_component.default.inherit({\r\n    reset: _common.noop,\r\n    dragMove: _common.noop,\r\n    dragEnter: _common.noop,\r\n    dragLeave: _common.noop,\r\n    dragEnd: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable._fireRemoveEvent(sourceEvent);\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    _fireRemoveEvent: _common.noop,\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            onDragStart: null,\r\n            onDragMove: null,\r\n            onDragEnd: null,\r\n            onDragEnter: null,\r\n            onDragLeave: null,\r\n            onDrop: null,\r\n            immediate: true,\r\n            dragDirection: \"both\",\r\n            boundary: void 0,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false,\r\n            itemData: null,\r\n            container: void 0,\r\n            dragTemplate: void 0,\r\n            contentTemplate: \"content\",\r\n            handle: \"\",\r\n            filter: \"\",\r\n            clone: false,\r\n            autoScroll: true,\r\n            scrollSpeed: 30,\r\n            scrollSensitivity: 60,\r\n            group: void 0,\r\n            data: void 0\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase.apply(this, arguments);\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            component: true,\r\n            group: true,\r\n            itemData: true,\r\n            data: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers();\r\n        this._scrollAnimator = new ScrollAnimator(this);\r\n        this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\r\n        this._verticalScrollHelper = new ScrollHelper(\"vertical\", this)\r\n    },\r\n    _normalizeCursorOffset: function(offset) {\r\n        if ((0, _type.isObject)(offset)) {\r\n            offset = {\r\n                h: offset.x,\r\n                v: offset.y\r\n            }\r\n        }\r\n        offset = (0, _common.splitPair)(offset).map(function(value) {\r\n            return parseFloat(value)\r\n        });\r\n        return {\r\n            left: offset[0],\r\n            top: 1 === offset.length ? offset[0] : offset[1]\r\n        }\r\n    },\r\n    _getNormalizedCursorOffset: function(offset, options) {\r\n        if ((0, _type.isFunction)(offset)) {\r\n            offset = offset.call(this, options)\r\n        }\r\n        return this._normalizeCursorOffset(offset)\r\n    },\r\n    _calculateElementOffset: function(options) {\r\n        var elementOffset;\r\n        var dragElementOffset;\r\n        var event = options.event;\r\n        var $element = (0, _renderer.default)(options.itemElement);\r\n        var $dragElement = (0, _renderer.default)(options.dragElement);\r\n        var isCloned = this._dragElementIsCloned();\r\n        var cursorOffset = this.option(\"cursorOffset\");\r\n        var normalizedCursorOffset = {\r\n            left: 0,\r\n            top: 0\r\n        };\r\n        var currentLocate = this._initialLocate = (0, _translator.locate)($dragElement);\r\n        if (isCloned || options.initialOffset || cursorOffset) {\r\n            elementOffset = options.initialOffset || $element.offset();\r\n            if (cursorOffset) {\r\n                normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\r\n                if (isFinite(normalizedCursorOffset.left)) {\r\n                    elementOffset.left = event.pageX\r\n                }\r\n                if (isFinite(normalizedCursorOffset.top)) {\r\n                    elementOffset.top = event.pageY\r\n                }\r\n            }\r\n            dragElementOffset = $dragElement.offset();\r\n            elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\r\n            elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left\r\n        }\r\n        return elementOffset\r\n    },\r\n    _initPosition: function(options) {\r\n        var $dragElement = (0, _renderer.default)(options.dragElement);\r\n        var elementOffset = this._calculateElementOffset(options);\r\n        if (elementOffset) {\r\n            this._move(elementOffset, $dragElement)\r\n        }\r\n        this._startPosition = (0, _translator.locate)($dragElement)\r\n    },\r\n    _startAnimator: function() {\r\n        if (!this._scrollAnimator.inProgress()) {\r\n            this._scrollAnimator.start()\r\n        }\r\n    },\r\n    _stopAnimator: function() {\r\n        this._scrollAnimator.stop()\r\n    },\r\n    _addWidgetPrefix: function(className) {\r\n        var componentName = this.NAME;\r\n        return (0, _inflector.dasherize)(componentName) + (className ? \"-\" + className : \"\")\r\n    },\r\n    _getItemsSelector: function() {\r\n        return this.option(\"filter\") || \"\"\r\n    },\r\n    _$content: function() {\r\n        var $element = this.$element();\r\n        var $wrapper = $element.children(\".dx-template-wrapper\");\r\n        return $wrapper.length ? $wrapper : $element\r\n    },\r\n    _attachEventHandlers: function() {\r\n        var _this2 = this;\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this._$content();\r\n        var itemsSelector = this._getItemsSelector();\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        var data = {\r\n            direction: this.option(\"dragDirection\"),\r\n            immediate: this.option(\"immediate\"),\r\n            checkDropTarget: function($target, event) {\r\n                var targetGroup = _this2.option(\"group\");\r\n                var sourceGroup = _this2._getSourceDraggable().option(\"group\");\r\n                var $scrollable = _this2._getScrollable($target);\r\n                if (_this2._verticalScrollHelper.isOutsideScrollable($scrollable, event) || _this2._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\r\n                    return false\r\n                }\r\n                return sourceGroup && sourceGroup === targetGroup\r\n            }\r\n        };\r\n        if (allowMoveByClick) {\r\n            $element = this._getArea();\r\n            _events_engine.default.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this))\r\n        }\r\n        if (\">\" === itemsSelector[0]) {\r\n            itemsSelector = itemsSelector.slice(1)\r\n        }\r\n        _events_engine.default.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\r\n        _events_engine.default.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\r\n        _events_engine.default.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\r\n        _events_engine.default.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\r\n        _events_engine.default.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this))\r\n    },\r\n    _dragElementIsCloned: function() {\r\n        return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS))\r\n    },\r\n    _getDragTemplateArgs: function($element, $container) {\r\n        return {\r\n            container: (0, _element.getPublicElement)($container),\r\n            model: {\r\n                itemData: this.option(\"itemData\"),\r\n                itemElement: (0, _element.getPublicElement)($element)\r\n            }\r\n        }\r\n    },\r\n    _createDragElement: function($element) {\r\n        var result = $element;\r\n        var clone = this.option(\"clone\");\r\n        var $container = this._getContainer();\r\n        var template = this.option(\"dragTemplate\");\r\n        if (template) {\r\n            template = this._getTemplate(template);\r\n            result = (0, _renderer.default)(\"<div>\").appendTo($container);\r\n            template.render(this._getDragTemplateArgs($element, result))\r\n        } else {\r\n            if (clone) {\r\n                result = (0, _renderer.default)(\"<div>\").appendTo($container);\r\n                $element.clone().css({\r\n                    width: $element.css(\"width\"),\r\n                    height: $element.css(\"height\")\r\n                }).appendTo(result)\r\n            }\r\n        }\r\n        return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"))\r\n    },\r\n    _resetDragElement: function() {\r\n        if (this._dragElementIsCloned()) {\r\n            this._$dragElement.remove()\r\n        } else {\r\n            this._toggleDraggingClass(false)\r\n        }\r\n        this._$dragElement = null\r\n    },\r\n    _resetSourceElement: function() {\r\n        this._toggleDragSourceClass(false);\r\n        this._$sourceElement = null\r\n    },\r\n    _detachEventHandlers: function() {\r\n        _events_engine.default.off(this._$content(), \".\" + DRAGGABLE);\r\n        _events_engine.default.off(this._getArea(), \".\" + DRAGGABLE)\r\n    },\r\n    _move: function(position, $element) {\r\n        (0, _translator.move)($element || this._$dragElement, position)\r\n    },\r\n    _getDraggableElement: function(e) {\r\n        var $sourceElement = this._getSourceElement();\r\n        if ($sourceElement) {\r\n            return $sourceElement\r\n        }\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        if (allowMoveByClick) {\r\n            return this.$element()\r\n        }\r\n        var $target = (0, _renderer.default)(e && e.target);\r\n        var itemsSelector = this._getItemsSelector();\r\n        if (\">\" === itemsSelector[0]) {\r\n            var $items = this._$content().find(itemsSelector);\r\n            if (!$items.is($target)) {\r\n                $target = $target.closest($items)\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _getSourceElement: function() {\r\n        var draggable = this._getSourceDraggable();\r\n        return draggable._$sourceElement\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        if ((0, _index.needSkipEvent)(e)) {\r\n            return\r\n        }\r\n        var position = {};\r\n        var $element = this.$element();\r\n        var dragDirection = this.option(\"dragDirection\");\r\n        if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\r\n            position.left = e.pageX - $element.offset().left + (0, _translator.locate)($element).left - $element.width() / 2\r\n        }\r\n        if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\r\n            position.top = e.pageY - $element.offset().top + (0, _translator.locate)($element).top - $element.height() / 2\r\n        }\r\n        this._move(position, $element);\r\n        this._getAction(\"onDragMove\")(this._getEventArgs(e))\r\n    },\r\n    _isValidElement: function(event, $element) {\r\n        var handle = this.option(\"handle\");\r\n        var $target = (0, _renderer.default)(event.originalEvent && event.originalEvent.target);\r\n        if (handle && !$target.closest(handle).length) {\r\n            return false\r\n        }\r\n        if (!$element.length) {\r\n            return false\r\n        }\r\n        return !$element.is(\".dx-state-disabled, .dx-state-disabled *\")\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this._getDraggableElement(e);\r\n        if (!this._isValidElement(e, $element)) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        if (this._$sourceElement) {\r\n            return\r\n        }\r\n        var dragStartArgs = this._getDragStartArgs(e, $element);\r\n        this._getAction(\"onDragStart\")(dragStartArgs);\r\n        if (dragStartArgs.cancel) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this.option(\"itemData\", dragStartArgs.itemData);\r\n        this._setSourceDraggable();\r\n        this._$sourceElement = $element;\r\n        var initialOffset = $element.offset();\r\n        var $dragElement = this._$dragElement = this._createDragElement($element);\r\n        this._toggleDraggingClass(true);\r\n        this._toggleDragSourceClass(true);\r\n        this._setGestureCoverCursor($dragElement.children());\r\n        var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\r\n        this._initPosition((0, _extend.extend)({}, dragStartArgs, {\r\n            dragElement: $dragElement.get(0),\r\n            initialOffset: isFixedPosition && initialOffset\r\n        }));\r\n        var $area = this._getArea();\r\n        var areaOffset = this._getAreaOffset($area);\r\n        var boundOffset = this._getBoundOffset();\r\n        var areaWidth = $area.outerWidth();\r\n        var areaHeight = $area.outerHeight();\r\n        var elementWidth = $dragElement.width();\r\n        var elementHeight = $dragElement.height();\r\n        var startOffset = {\r\n            left: $dragElement.offset().left - areaOffset.left,\r\n            top: $dragElement.offset().top - areaOffset.top\r\n        };\r\n        if ($area.length) {\r\n            e.maxLeftOffset = startOffset.left - boundOffset.left;\r\n            e.maxRightOffset = areaWidth - startOffset.left - elementWidth - boundOffset.right;\r\n            e.maxTopOffset = startOffset.top - boundOffset.top;\r\n            e.maxBottomOffset = areaHeight - startOffset.top - elementHeight - boundOffset.bottom\r\n        }\r\n        if (this.option(\"autoScroll\")) {\r\n            this._startAnimator()\r\n        }\r\n    },\r\n    _getAreaOffset: function($area) {\r\n        var offset = $area && _position.default.offset($area);\r\n        return offset ? offset : {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass: function(value) {\r\n        this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value)\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value)\r\n    },\r\n    _setGestureCoverCursor: function($element) {\r\n        (0, _renderer.default)(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", $element.css(\"cursor\"))\r\n    },\r\n    _getBoundOffset: function() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if ((0, _type.isFunction)(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return (0, _string.quadToObject)(boundOffset)\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"boundary\");\r\n        if ((0, _type.isFunction)(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return (0, _renderer.default)(area)\r\n    },\r\n    _getContainer: function() {\r\n        var container = this.option(\"container\");\r\n        if (void 0 === container) {\r\n            container = (0, _view_port.value)()\r\n        }\r\n        return (0, _renderer.default)(container)\r\n    },\r\n    _dragMoveHandler: function(e, scrollBy) {\r\n        this._dragMoveArgs = e;\r\n        if (!this._$dragElement) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var offset = e.offset;\r\n        var startPosition = this._startPosition;\r\n        this._move({\r\n            left: startPosition.left + offset.x,\r\n            top: startPosition.top + offset.y\r\n        });\r\n        if (!scrollBy) {\r\n            this._updateScrollable(e)\r\n        }\r\n        var eventArgs = this._getEventArgs(e);\r\n        this._getAction(\"onDragMove\")(eventArgs);\r\n        if (true === eventArgs.cancel) {\r\n            return\r\n        }\r\n        var targetDraggable = this._getTargetDraggable();\r\n        targetDraggable.dragMove(e, scrollBy)\r\n    },\r\n    _updateScrollable: function(e) {\r\n        var that = this;\r\n        if (that.option(\"autoScroll\")) {\r\n            var mousePosition = getMousePosition(e);\r\n            var allObjects = that.getElementsFromPoint(mousePosition);\r\n            that._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\r\n            that._horizontalScrollHelper.updateScrollable(allObjects, mousePosition)\r\n        }\r\n    },\r\n    getElementsFromPoint: function(position, dragElement) {\r\n        var ownerDocument = (dragElement || this._$dragElement.get(0)).ownerDocument;\r\n        if (_browser.default.msie) {\r\n            var msElements = ownerDocument.msElementsFromPoint(position.x, position.y);\r\n            if (msElements) {\r\n                return Array.prototype.slice.call(msElements)\r\n            }\r\n            return []\r\n        }\r\n        return ownerDocument.elementsFromPoint(position.x, position.y)\r\n    },\r\n    _getScrollable: function($element) {\r\n        var _this3 = this;\r\n        var $scrollable;\r\n        $element.parents().toArray().some(function(parent) {\r\n            var $parent = (0, _renderer.default)(parent);\r\n            if (_this3._horizontalScrollHelper.isScrollable($parent) || _this3._verticalScrollHelper.isScrollable($parent)) {\r\n                $scrollable = $parent;\r\n                return true\r\n            }\r\n        });\r\n        return $scrollable\r\n    },\r\n    _defaultActionArgs: function() {\r\n        var args = this.callBase.apply(this, arguments);\r\n        var component = this.option(\"component\");\r\n        if (component) {\r\n            args.component = component;\r\n            args.element = component.element()\r\n        }\r\n        return args\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return {\r\n            event: e,\r\n            itemData: sourceDraggable.option(\"itemData\"),\r\n            itemElement: (0, _element.getPublicElement)(sourceDraggable._$sourceElement),\r\n            fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\r\n            toComponent: targetDraggable.option(\"component\") || targetDraggable,\r\n            fromData: sourceDraggable.option(\"data\"),\r\n            toData: targetDraggable.option(\"data\")\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        var args = this._getEventArgs(e);\r\n        return {\r\n            event: args.event,\r\n            itemData: args.itemData,\r\n            itemElement: $itemElement,\r\n            fromData: args.fromData\r\n        }\r\n    },\r\n    _revertItemToInitialPosition: function() {\r\n        !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement)\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var _this4 = this;\r\n        var d = new _deferred.Deferred;\r\n        var dragEndEventArgs = this._getEventArgs(e);\r\n        var dropEventArgs = this._getEventArgs(e);\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var needRevertPosition = true;\r\n        try {\r\n            this._getAction(\"onDragEnd\")(dragEndEventArgs)\r\n        } finally {\r\n            (0, _deferred.when)((0, _deferred.fromPromise)(dragEndEventArgs.cancel)).done(function(cancel) {\r\n                if (!cancel) {\r\n                    if (targetDraggable !== _this4) {\r\n                        targetDraggable._getAction(\"onDrop\")(dropEventArgs)\r\n                    }\r\n                    if (!dropEventArgs.cancel) {\r\n                        needRevertPosition = false;\r\n                        (0, _deferred.when)((0, _deferred.fromPromise)(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\r\n                        return\r\n                    }\r\n                }\r\n                d.resolve()\r\n            }).fail(d.resolve);\r\n            d.done(function() {\r\n                if (needRevertPosition) {\r\n                    _this4._revertItemToInitialPosition()\r\n                }\r\n                _this4.reset();\r\n                targetDraggable.reset();\r\n                _this4._stopAnimator();\r\n                _this4._horizontalScrollHelper.reset();\r\n                _this4._verticalScrollHelper.reset();\r\n                _this4._resetDragElement();\r\n                _this4._resetSourceElement();\r\n                _this4._resetTargetDraggable();\r\n                _this4._resetSourceDraggable()\r\n            })\r\n        }\r\n    },\r\n    _isTargetOverAnotherDraggable: function(e) {\r\n        var _this5 = this;\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (this === sourceDraggable) {\r\n            return false\r\n        }\r\n        var $dragElement = sourceDraggable._$dragElement;\r\n        var $sourceDraggableElement = sourceDraggable.$element();\r\n        var $targetDraggableElement = this.$element();\r\n        var mousePosition = getMousePosition(e);\r\n        var elements = this.getElementsFromPoint(mousePosition, e.target);\r\n        var firstWidgetElement = elements.filter(function(element) {\r\n            var $element = (0, _renderer.default)(element);\r\n            if ($element.hasClass(_this5._addWidgetPrefix())) {\r\n                return !$element.closest($dragElement).length\r\n            }\r\n        })[0];\r\n        var $sourceElement = this._getSourceElement();\r\n        var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\r\n        var isTargetOverNestedDraggable = (0, _renderer.default)(firstWidgetElement).closest($sourceElement).length;\r\n        return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable\r\n    },\r\n    _dragEnterHandler: function(e) {\r\n        this._fireDragEnterEvent(e);\r\n        if (this._isTargetOverAnotherDraggable(e)) {\r\n            this._setTargetDraggable()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragEnter(e)\r\n    },\r\n    _dragLeaveHandler: function(e) {\r\n        this._fireDragLeaveEvent(e);\r\n        this._resetTargetDraggable();\r\n        if (this !== this._getSourceDraggable()) {\r\n            this.reset()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragLeave(e)\r\n    },\r\n    _getAction: function(name) {\r\n        return this[\"_\" + name + \"Action\"] || this._createActionByOption(name)\r\n    },\r\n    _getAnonymousTemplateName: function() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    },\r\n    _initTemplates: function() {\r\n        if (!this.option(\"contentTemplate\")) {\r\n            return\r\n        }\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new _empty_template.EmptyTemplate\r\n        });\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(this._addWidgetPrefix());\r\n        var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\r\n        var template = this._getTemplateByOption(\"contentTemplate\");\r\n        if (template) {\r\n            (0, _renderer.default)(template.render({\r\n                container: this.element(),\r\n                transclude: transclude\r\n            }))\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDragMove\":\r\n            case \"onDragEnd\":\r\n            case \"onDrop\":\r\n            case \"onDragEnter\":\r\n            case \"onDragLeave\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"dragTemplate\":\r\n            case \"contentTemplate\":\r\n            case \"container\":\r\n            case \"clone\":\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"dragDirection\":\r\n            case \"disabled\":\r\n            case \"boundary\":\r\n            case \"filter\":\r\n            case \"immediate\":\r\n                this._resetDragElement();\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"autoScroll\":\r\n                this._verticalScrollHelper.reset();\r\n                this._horizontalScrollHelper.reset();\r\n                break;\r\n            case \"scrollSensitivity\":\r\n            case \"scrollSpeed\":\r\n            case \"boundOffset\":\r\n            case \"handle\":\r\n            case \"group\":\r\n            case \"data\":\r\n            case \"itemData\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getTargetDraggable: function() {\r\n        return targetDraggable || this\r\n    },\r\n    _getSourceDraggable: function() {\r\n        return sourceDraggable || this\r\n    },\r\n    _setTargetDraggable: function() {\r\n        var currentGroup = this.option(\"group\");\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\r\n            targetDraggable = this\r\n        }\r\n    },\r\n    _setSourceDraggable: function() {\r\n        sourceDraggable = this\r\n    },\r\n    _resetSourceDraggable: function() {\r\n        sourceDraggable = null\r\n    },\r\n    _resetTargetDraggable: function() {\r\n        targetDraggable = null\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._detachEventHandlers();\r\n        this._resetDragElement();\r\n        this._resetTargetDraggable();\r\n        this._resetSourceDraggable();\r\n        this._$sourceElement = null;\r\n        this._stopAnimator()\r\n    },\r\n    _fireDragEnterEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragEnter\")(args)\r\n    },\r\n    _fireDragLeaveEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragLeave\")(args)\r\n    }\r\n});\r\n(0, _component_registrator.default)(DRAGGABLE, Draggable);\r\nvar _default = Draggable;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_button.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _button = _interopRequireDefault(require(\"../text_box/texteditor_button_collection/button\"));\r\nvar _button2 = _interopRequireDefault(require(\"../button\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\";\r\nvar DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\";\r\nvar BUTTON_MESSAGE = \"dxDropDownEditor-selectLabel\";\r\nvar DropDownButton = function(_TextEditorButton) {\r\n    _inheritsLoose(DropDownButton, _TextEditorButton);\r\n\r\n    function DropDownButton(name, editor, options) {\r\n        var _this;\r\n        _this = _TextEditorButton.call(this, name, editor, options) || this;\r\n        _this.currentTemplate = null;\r\n        return _this\r\n    }\r\n    var _proto = DropDownButton.prototype;\r\n    _proto._attachEvents = function(instance) {\r\n        var editor = this.editor;\r\n        instance.option(\"onClick\", function(e) {\r\n            !editor.option(\"openOnFieldClick\") && editor._openHandler(e)\r\n        });\r\n        _events_engine.default.on(instance.$element(), \"mousedown\", function(e) {\r\n            if (editor.$element().is(\".dx-state-focused\")) {\r\n                e.preventDefault()\r\n            }\r\n        })\r\n    };\r\n    _proto._create = function() {\r\n        var editor = this.editor;\r\n        var $element = (0, _renderer.default)(\"<div>\");\r\n        var options = this._getOptions();\r\n        this._addToContainer($element);\r\n        var instance = editor._createComponent($element, _button2.default, (0, _extend.extend)({}, options, {\r\n            elementAttr: {\r\n                \"aria-label\": _message.default.format(BUTTON_MESSAGE)\r\n            }\r\n        }));\r\n        this._legacyRender(editor.$element(), $element, options.visible);\r\n        return {\r\n            $element: $element,\r\n            instance: instance\r\n        }\r\n    };\r\n    _proto._getOptions = function() {\r\n        var editor = this.editor;\r\n        var visible = this._isVisible();\r\n        var isReadOnly = editor.option(\"readOnly\");\r\n        var options = {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            activeStateEnabled: false,\r\n            useInkRipple: false,\r\n            disabled: isReadOnly,\r\n            visible: visible\r\n        };\r\n        this._addTemplate(options);\r\n        return options\r\n    };\r\n    _proto._isVisible = function() {\r\n        var editor = this.editor;\r\n        return _TextEditorButton.prototype._isVisible.call(this) && editor.option(\"showDropDownButton\")\r\n    };\r\n    _proto._legacyRender = function($editor, $element, isVisible) {\r\n        $editor.toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, isVisible);\r\n        if ($element) {\r\n            $element.removeClass(\"dx-button\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS)\r\n        }\r\n    };\r\n    _proto._isSameTemplate = function() {\r\n        return this.editor.option(\"dropDownButtonTemplate\") === this.currentTemplate\r\n    };\r\n    _proto._addTemplate = function(options) {\r\n        if (!this._isSameTemplate()) {\r\n            options.template = this.editor._getTemplateByOption(\"dropDownButtonTemplate\");\r\n            this.currentTemplate = this.editor.option(\"dropDownButtonTemplate\")\r\n        }\r\n    };\r\n    _proto.update = function() {\r\n        var shouldUpdate = _TextEditorButton.prototype.update.call(this);\r\n        if (shouldUpdate) {\r\n            var editor = this.editor,\r\n                instance = this.instance;\r\n            var $editor = editor.$element();\r\n            var options = this._getOptions();\r\n            null === instance || void 0 === instance ? void 0 : instance.option(options);\r\n            this._legacyRender($editor, null === instance || void 0 === instance ? void 0 : instance.$element(), options.visible)\r\n        }\r\n    };\r\n    return DropDownButton\r\n}(_button.default);\r\nexports.default = DropDownButton;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_editor.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _element = require(\"../../core/element\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _position = _interopRequireDefault(require(\"../../animation/position\"));\r\nvar _position2 = require(\"../../core/utils/position\");\r\nvar _ui2 = _interopRequireDefault(require(\"./ui.drop_down_button\"));\r\nvar _ui3 = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _text_box = _interopRequireDefault(require(\"../text_box\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _function_template = require(\"../../core/templates/function_template\");\r\nvar _popup = _interopRequireDefault(require(\"../popup\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _utils = require(\"./utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DROP_DOWN_EDITOR_CLASS = \"dx-dropdowneditor\";\r\nvar DROP_DOWN_EDITOR_INPUT_WRAPPER = \"dx-dropdowneditor-input-wrapper\";\r\nvar DROP_DOWN_EDITOR_BUTTON_ICON = \"dx-dropdowneditor-icon\";\r\nvar DROP_DOWN_EDITOR_OVERLAY = \"dx-dropdowneditor-overlay\";\r\nvar DROP_DOWN_EDITOR_OVERLAY_FLIPPED = \"dx-dropdowneditor-overlay-flipped\";\r\nvar DROP_DOWN_EDITOR_ACTIVE = \"dx-dropdowneditor-active\";\r\nvar DROP_DOWN_EDITOR_FIELD_CLICKABLE = \"dx-dropdowneditor-field-clickable\";\r\nvar DROP_DOWN_EDITOR_FIELD_TEMPLATE_WRAPPER = \"dx-dropdowneditor-field-template-wrapper\";\r\nvar isIOs = \"ios\" === _devices.default.current().platform;\r\nvar DropDownEditor = _text_box.default.inherit({\r\n    _supportedKeys: function() {\r\n        return (0, _extend.extend)({}, this.callBase(), {\r\n            tab: function(e) {\r\n                if (!this.option(\"opened\")) {\r\n                    return\r\n                }\r\n                if (\"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this.close();\r\n                    return\r\n                }\r\n                var $focusableElement = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();\r\n                $focusableElement && _events_engine.default.trigger($focusableElement, \"focus\");\r\n                e.preventDefault()\r\n            },\r\n            escape: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault()\r\n                }\r\n                this.close();\r\n                return true\r\n            },\r\n            upArrow: function(e) {\r\n                if (!(0, _index.isCommandKeyPressed)(e)) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    if (e.altKey) {\r\n                        this.close();\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            },\r\n            downArrow: function(e) {\r\n                if (!(0, _index.isCommandKeyPressed)(e)) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    if (e.altKey) {\r\n                        this._validatedOpening();\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            },\r\n            enter: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._valueChangeEventHandler(e)\r\n                }\r\n                return true\r\n            }\r\n        })\r\n    },\r\n    _getDefaultButtons: function() {\r\n        return this.callBase().concat([{\r\n            name: \"dropDown\",\r\n            Ctor: _ui2.default\r\n        }])\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: null,\r\n            onOpened: null,\r\n            onClosed: null,\r\n            opened: false,\r\n            acceptCustomValue: true,\r\n            applyValueMode: \"instantly\",\r\n            deferRendering: true,\r\n            activeStateEnabled: true,\r\n            dropDownButtonTemplate: \"dropDownButton\",\r\n            fieldTemplate: null,\r\n            openOnFieldClick: false,\r\n            showDropDownButton: true,\r\n            buttons: void 0,\r\n            dropDownOptions: {\r\n                showTitle: false\r\n            },\r\n            popupPosition: this._getDefaultPopupPosition(),\r\n            onPopupInitialized: null,\r\n            applyButtonText: _message.default.format(\"OK\"),\r\n            cancelButtonText: _message.default.format(\"Cancel\"),\r\n            buttonsLocation: \"default\",\r\n            useHiddenSubmitElement: false\r\n        })\r\n    },\r\n    _useTemplates: function() {\r\n        return true\r\n    },\r\n    _getDefaultPopupPosition: function(isRtlEnabled) {\r\n        var position = (0, _position2.getDefaultAlignment)(isRtlEnabled);\r\n        return {\r\n            offset: {\r\n                h: 0,\r\n                v: -1\r\n            },\r\n            my: position + \" top\",\r\n            at: position + \" bottom\",\r\n            collision: \"flip flip\"\r\n        }\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                var isGeneric = \"generic\" === _device.platform;\r\n                return isGeneric\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element().find(\".\" + DROP_DOWN_EDITOR_INPUT_WRAPPER).first()\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initVisibilityActions();\r\n        this._initPopupInitializedAction();\r\n        this._updatePopupPosition(this.option(\"rtlEnabled\"));\r\n        this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"))\r\n    },\r\n    _updatePopupPosition: function(isRtlEnabled) {\r\n        var _this$_getDefaultPopu = this._getDefaultPopupPosition(isRtlEnabled),\r\n            my = _this$_getDefaultPopu.my,\r\n            at = _this$_getDefaultPopu.at;\r\n        var currentPosition = this.option(\"popupPosition\");\r\n        this.option(\"popupPosition\", (0, _extend.extend)({}, currentPosition, {\r\n            my: my,\r\n            at: at\r\n        }))\r\n    },\r\n    _initVisibilityActions: function() {\r\n        this._openAction = this._createActionByOption(\"onOpened\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._closeAction = this._createActionByOption(\"onClosed\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initPopupInitializedAction: function() {\r\n        this._popupInitializedAction = this._createActionByOption(\"onPopupInitialized\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_EDITOR_CLASS);\r\n        this.setAria(\"role\", \"combobox\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderOpenHandler();\r\n        this._attachFocusOutHandler();\r\n        this._renderOpenedState()\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._createPopup()\r\n        }\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._wrapInput();\r\n        this._setDefaultAria()\r\n    },\r\n    _wrapInput: function() {\r\n        this._$container = this.$element().wrapInner((0, _renderer.default)(\"<div>\").addClass(DROP_DOWN_EDITOR_INPUT_WRAPPER)).children().eq(0)\r\n    },\r\n    _setDefaultAria: function() {\r\n        this.setAria({\r\n            haspopup: \"true\",\r\n            autocomplete: \"list\"\r\n        })\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return !this._isEditable() || this.callBase()\r\n    },\r\n    _cleanFocusState: function() {\r\n        this.callBase();\r\n        if (this.option(\"fieldTemplate\")) {\r\n            this._detachFocusEvents()\r\n        }\r\n    },\r\n    _getFieldTemplate: function() {\r\n        return this.option(\"fieldTemplate\") && this._getTemplateByOption(\"fieldTemplate\")\r\n    },\r\n    _renderMask: function() {\r\n        if (this.option(\"fieldTemplate\")) {\r\n            return\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderField: function() {\r\n        var fieldTemplate = this._getFieldTemplate();\r\n        fieldTemplate && this._renderTemplatedField(fieldTemplate, this._fieldRenderData())\r\n    },\r\n    _renderPlaceholder: function() {\r\n        var hasFieldTemplate = !!this._getFieldTemplate();\r\n        if (!hasFieldTemplate) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (this.option(\"useHiddenSubmitElement\")) {\r\n            this._setSubmitValue()\r\n        }\r\n        var promise = this.callBase();\r\n        promise.always(this._renderField.bind(this))\r\n    },\r\n    _renderTemplatedField: function(fieldTemplate, data) {\r\n        var _this = this;\r\n        var isFocused = (0, _selectors.focused)(this._input());\r\n        var $container = this._$container;\r\n        this._detachKeyboardEvents();\r\n        this._refreshButtonsContainer();\r\n        this._detachWrapperContent();\r\n        this._detachFocusEvents();\r\n        $container.empty();\r\n        var $templateWrapper = (0, _renderer.default)(\"<div>\").addClass(DROP_DOWN_EDITOR_FIELD_TEMPLATE_WRAPPER).appendTo($container);\r\n        fieldTemplate.render({\r\n            model: data,\r\n            container: (0, _element.getPublicElement)($templateWrapper),\r\n            onRendered: function() {\r\n                var $input = _this._input();\r\n                if (!$input.length) {\r\n                    throw _ui.default.Error(\"E1010\")\r\n                }\r\n                _this._integrateInput();\r\n                isFocused && _events_engine.default.trigger($input, \"focus\")\r\n            }\r\n        });\r\n        this._attachWrapperContent($container)\r\n    },\r\n    _detachWrapperContent: function() {\r\n        var _this$_$submitElement, _this$_$beforeButtons, _this$_$afterButtonsC;\r\n        var useHiddenSubmitElement = this.option(\"useHiddenSubmitElement\");\r\n        useHiddenSubmitElement && (null === (_this$_$submitElement = this._$submitElement) || void 0 === _this$_$submitElement ? void 0 : _this$_$submitElement.detach());\r\n        var beforeButtonsContainerParent = null === (_this$_$beforeButtons = this._$beforeButtonsContainer) || void 0 === _this$_$beforeButtons ? void 0 : _this$_$beforeButtons[0].parentNode;\r\n        var afterButtonsContainerParent = null === (_this$_$afterButtonsC = this._$afterButtonsContainer) || void 0 === _this$_$afterButtonsC ? void 0 : _this$_$afterButtonsC[0].parentNode;\r\n        null === beforeButtonsContainerParent || void 0 === beforeButtonsContainerParent ? void 0 : beforeButtonsContainerParent.removeChild(this._$beforeButtonsContainer[0]);\r\n        null === afterButtonsContainerParent || void 0 === afterButtonsContainerParent ? void 0 : afterButtonsContainerParent.removeChild(this._$afterButtonsContainer[0])\r\n    },\r\n    _attachWrapperContent: function($container) {\r\n        var _this$_$submitElement2;\r\n        var useHiddenSubmitElement = this.option(\"useHiddenSubmitElement\");\r\n        $container.prepend(this._$beforeButtonsContainer);\r\n        useHiddenSubmitElement && (null === (_this$_$submitElement2 = this._$submitElement) || void 0 === _this$_$submitElement2 ? void 0 : _this$_$submitElement2.appendTo($container));\r\n        $container.append(this._$afterButtonsContainer)\r\n    },\r\n    _refreshButtonsContainer: function() {\r\n        this._$buttonsContainer = this.$element().children().eq(0)\r\n    },\r\n    _integrateInput: function() {\r\n        this._renderFocusState();\r\n        this._refreshValueChangeEvent();\r\n        this._refreshEvents();\r\n        this._refreshEmptinessEvent()\r\n    },\r\n    _refreshEmptinessEvent: function() {\r\n        _events_engine.default.off(this._input(), \"input blur\", this._toggleEmptinessEventHandler);\r\n        this._renderEmptinessEvent()\r\n    },\r\n    _fieldRenderData: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _initTemplates: function() {\r\n        this._templateManager.addDefaultTemplates({\r\n            dropDownButton: new _function_template.FunctionTemplate(function(options) {\r\n                var $icon = (0, _renderer.default)(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_ICON);\r\n                (0, _renderer.default)(options.container).append($icon)\r\n            })\r\n        });\r\n        this.callBase()\r\n    },\r\n    _renderOpenHandler: function() {\r\n        var $inputWrapper = this._inputWrapper();\r\n        var eventName = (0, _index.addNamespace)(_click.name, this.NAME);\r\n        var openOnFieldClick = this.option(\"openOnFieldClick\");\r\n        _events_engine.default.off($inputWrapper, eventName);\r\n        _events_engine.default.on($inputWrapper, eventName, this._getInputClickHandler(openOnFieldClick));\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_FIELD_CLICKABLE, openOnFieldClick);\r\n        if (openOnFieldClick) {\r\n            this._openOnFieldClickAction = this._createAction(this._openHandler.bind(this))\r\n        }\r\n    },\r\n    _attachFocusOutHandler: function() {\r\n        var _this2 = this;\r\n        if (isIOs) {\r\n            this._detachFocusOutEvents();\r\n            _events_engine.default.on(this._inputWrapper(), (0, _index.addNamespace)(\"focusout\", this.NAME), function(event) {\r\n                var newTarget = event.relatedTarget;\r\n                var popupWrapper = _this2.content ? (0, _renderer.default)(_this2.content()).closest(\".\" + DROP_DOWN_EDITOR_OVERLAY) : _this2._$popup;\r\n                if (newTarget && _this2.option(\"opened\")) {\r\n                    var isNewTargetOutside = 0 === (0, _renderer.default)(newTarget).closest(\".\" + DROP_DOWN_EDITOR_OVERLAY, popupWrapper).length;\r\n                    if (isNewTargetOutside) {\r\n                        _this2.close()\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _detachFocusOutEvents: function() {\r\n        isIOs && _events_engine.default.off(this._inputWrapper(), (0, _index.addNamespace)(\"focusout\", this.NAME))\r\n    },\r\n    _getInputClickHandler: function(openOnFieldClick) {\r\n        var _this3 = this;\r\n        return openOnFieldClick ? function(e) {\r\n            _this3._executeOpenAction(e)\r\n        } : function(e) {\r\n            _this3._focusInput()\r\n        }\r\n    },\r\n    _openHandler: function() {\r\n        this._toggleOpenState()\r\n    },\r\n    _executeOpenAction: function(e) {\r\n        this._openOnFieldClickAction({\r\n            event: e\r\n        })\r\n    },\r\n    _keyboardEventBindingTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusInput: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"focusStateEnabled\") && !(0, _selectors.focused)(this._input())) {\r\n            this._resetCaretPosition();\r\n            _events_engine.default.trigger(this._input(), \"focus\")\r\n        }\r\n        return true\r\n    },\r\n    _resetCaretPosition: function() {\r\n        var ignoreEditable = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        var inputElement = this._input().get(0);\r\n        if (inputElement) {\r\n            var value = inputElement.value;\r\n            var caretPosition = (0, _type.isDefined)(value) && (ignoreEditable || this._isEditable()) ? value.length : 0;\r\n            this._caret({\r\n                start: caretPosition,\r\n                end: caretPosition\r\n            }, true)\r\n        }\r\n    },\r\n    _isEditable: function() {\r\n        return this.option(\"acceptCustomValue\")\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (!this._focusInput()) {\r\n            return\r\n        }\r\n        if (!this.option(\"readOnly\")) {\r\n            isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n            this.option(\"opened\", isVisible)\r\n        }\r\n    },\r\n    _renderOpenedState: function() {\r\n        var opened = this.option(\"opened\");\r\n        if (opened) {\r\n            this._createPopup()\r\n        }\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_ACTIVE, opened);\r\n        this._setPopupOption(\"visible\", opened);\r\n        this.setAria({\r\n            expanded: opened\r\n        });\r\n        this.setAria(\"owns\", (opened || void 0) && this._popupContentId, this.$element())\r\n    },\r\n    _createPopup: function() {\r\n        if (this._$popup) {\r\n            return\r\n        }\r\n        this._$popup = (0, _renderer.default)(\"<div>\").addClass(DROP_DOWN_EDITOR_OVERLAY).appendTo(this.$element());\r\n        this._renderPopup();\r\n        this._renderPopupContent()\r\n    },\r\n    _renderPopupContent: _common.noop,\r\n    _renderPopup: function() {\r\n        var popupConfig = (0, _extend.extend)(this._popupConfig(), this._options.cache(\"dropDownOptions\"));\r\n        this._popup = this._createComponent(this._$popup, _popup.default, popupConfig);\r\n        this._popup.on({\r\n            showing: this._popupShowingHandler.bind(this),\r\n            shown: this._popupShownHandler.bind(this),\r\n            hiding: this._popupHidingHandler.bind(this),\r\n            hidden: this._popupHiddenHandler.bind(this),\r\n            contentReady: this._contentReadyHandler.bind(this)\r\n        });\r\n        this._contentReadyHandler();\r\n        this._setPopupContentId(this._popup.$content());\r\n        this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\")\r\n    },\r\n    _setPopupContentId: function($popupContent) {\r\n        this._popupContentId = \"dx-\" + new _guid.default;\r\n        this.setAria(\"id\", this._popupContentId, $popupContent)\r\n    },\r\n    _contentReadyHandler: _common.noop,\r\n    _popupConfig: function() {\r\n        var _this4 = this;\r\n        return {\r\n            onInitialized: this._popupInitializedHandler(),\r\n            position: (0, _extend.extend)(this.option(\"popupPosition\"), {\r\n                of: this.$element()\r\n            }),\r\n            showTitle: this.option(\"dropDownOptions.showTitle\"),\r\n            width: function() {\r\n                return (0, _utils.getElementWidth)(_this4.$element())\r\n            },\r\n            height: \"auto\",\r\n            shading: false,\r\n            closeOnTargetScroll: true,\r\n            closeOnOutsideClick: this._closeOutsideDropDownHandler.bind(this),\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            deferRendering: false,\r\n            focusStateEnabled: false,\r\n            showCloseButton: false,\r\n            dragEnabled: false,\r\n            toolbarItems: this._getPopupToolbarItems(),\r\n            onPositioned: this._popupPositionedHandler.bind(this),\r\n            fullScreen: false,\r\n            contentTemplate: null\r\n        }\r\n    },\r\n    _popupInitializedHandler: function() {\r\n        var _this5 = this;\r\n        if (!this.option(\"onPopupInitialized\")) {\r\n            return null\r\n        }\r\n        return function(e) {\r\n            _this5._popupInitializedAction({\r\n                popup: e.component\r\n            })\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var _this6 = this;\r\n        var popupWidth = (0, _utils.getSizeValue)(this.option(\"dropDownOptions.width\"));\r\n        if (void 0 === popupWidth) {\r\n            this._setPopupOption(\"width\", function() {\r\n                return (0, _utils.getElementWidth)(_this6.$element())\r\n            })\r\n        }\r\n    },\r\n    _popupPositionedHandler: function(e) {\r\n        e.position && this._popup.$overlayContent().toggleClass(DROP_DOWN_EDITOR_OVERLAY_FLIPPED, e.position.v.flip)\r\n    },\r\n    _popupShowingHandler: _common.noop,\r\n    _popupHidingHandler: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    _popupShownHandler: function() {\r\n        var _this$_validationMess;\r\n        this._openAction();\r\n        null === (_this$_validationMess = this._validationMessage) || void 0 === _this$_validationMess ? void 0 : _this$_validationMess.option(\"positionRequest\", this._getValidationMessagePositionRequest())\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        var _this$_validationMess2;\r\n        this._closeAction();\r\n        null === (_this$_validationMess2 = this._validationMessage) || void 0 === _this$_validationMess2 ? void 0 : _this$_validationMess2.option(\"positionRequest\", this._getValidationMessagePositionRequest())\r\n    },\r\n    _getValidationMessagePositionRequest: function() {\r\n        var positionRequest = \"below\";\r\n        if (this._popup && this._popup.option(\"visible\")) {\r\n            var _animationPosition$se = _position.default.setup(this.$element()),\r\n                myTop = _animationPosition$se.top;\r\n            var _animationPosition$se2 = _position.default.setup(this._popup.$content()),\r\n                popupTop = _animationPosition$se2.top;\r\n            positionRequest = myTop + this.option(\"popupPosition\").offset.v > popupTop ? \"below\" : \"above\"\r\n        }\r\n        return positionRequest\r\n    },\r\n    _closeOutsideDropDownHandler: function(_ref) {\r\n        var target = _ref.target;\r\n        var $target = (0, _renderer.default)(target);\r\n        var dropDownButton = this.getButton(\"dropDown\");\r\n        var $dropDownButton = dropDownButton && dropDownButton.$element();\r\n        var isInputClicked = !!$target.closest(this.$element()).length;\r\n        var isDropDownButtonClicked = !!$target.closest($dropDownButton).length;\r\n        var isOutsideClick = !isInputClicked && !isDropDownButtonClicked;\r\n        return isOutsideClick\r\n    },\r\n    _clean: function() {\r\n        delete this._openOnFieldClickAction;\r\n        if (this._$popup) {\r\n            this._$popup.remove();\r\n            delete this._$popup;\r\n            delete this._popup\r\n        }\r\n        this.callBase()\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _validatedOpening: function() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._toggleOpenState(true)\r\n        }\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        return \"useButtons\" === this.option(\"applyValueMode\") ? this._popupToolbarItemsConfig() : []\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._popup.$wrapper().find(\".dx-popup-done.dx-button\")\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._popup.$wrapper().find(\".dx-popup-cancel.dx-button\")\r\n    },\r\n    _popupElementTabHandler: function(e) {\r\n        var $element = (0, _renderer.default)(e.currentTarget);\r\n        if (e.shiftKey && $element.is(this._getFirstPopupElement()) || !e.shiftKey && $element.is(this._getLastPopupElement())) {\r\n            _events_engine.default.trigger(this._input(), \"focus\");\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _popupElementEscHandler: function() {\r\n        _events_engine.default.trigger(this._input(), \"focus\");\r\n        this.close()\r\n    },\r\n    _popupButtonInitializedHandler: function(e) {\r\n        e.component.registerKeyHandler(\"tab\", this._popupElementTabHandler.bind(this));\r\n        e.component.registerKeyHandler(\"escape\", this._popupElementEscHandler.bind(this))\r\n    },\r\n    _popupToolbarItemsConfig: function() {\r\n        var buttonsConfig = [{\r\n            shortcut: \"done\",\r\n            options: {\r\n                onClick: this._applyButtonHandler.bind(this),\r\n                text: this.option(\"applyButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }, {\r\n            shortcut: \"cancel\",\r\n            options: {\r\n                onClick: this._cancelButtonHandler.bind(this),\r\n                text: this.option(\"cancelButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }];\r\n        return this._applyButtonsLocation(buttonsConfig)\r\n    },\r\n    _applyButtonsLocation: function(buttonsConfig) {\r\n        var buttonsLocation = this.option(\"buttonsLocation\");\r\n        var resultConfig = buttonsConfig;\r\n        if (\"default\" !== buttonsLocation) {\r\n            var position = (0, _common.splitPair)(buttonsLocation);\r\n            (0, _iterator.each)(resultConfig, function(_, element) {\r\n                (0, _extend.extend)(element, {\r\n                    toolbar: position[0],\r\n                    location: position[1]\r\n                })\r\n            })\r\n        }\r\n        return resultConfig\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _popupOptionChanged: function(args) {\r\n        var options = _ui3.default.getOptionsFromContainer(args);\r\n        this._setPopupOption(options);\r\n        var optionsKeys = Object.keys(options);\r\n        if (optionsKeys.indexOf(\"width\") !== -1 || optionsKeys.indexOf(\"height\") !== -1) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _renderSubmitElement: function() {\r\n        if (this.option(\"useHiddenSubmitElement\")) {\r\n            this._$submitElement = (0, _renderer.default)(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n        }\r\n    },\r\n    _setSubmitValue: function() {\r\n        this._getSubmitElement().val(this.option(\"value\"))\r\n    },\r\n    _getSubmitElement: function() {\r\n        if (this.option(\"useHiddenSubmitElement\")) {\r\n            return this._$submitElement\r\n        } else {\r\n            return this.callBase()\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this._detachFocusOutEvents();\r\n        this.callBase()\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._deprecatedOptions, {\r\n            showPopupTitle: {\r\n                since: \"20.1\",\r\n                alias: \"dropDownOptions.showTitle\"\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var _this$_popup;\r\n        switch (args.name) {\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\r\n                break;\r\n            case \"opened\":\r\n                this._renderOpenedState();\r\n                break;\r\n            case \"onOpened\":\r\n            case \"onClosed\":\r\n                this._initVisibilityActions();\r\n                break;\r\n            case \"onPopupInitialized\":\r\n                this._initPopupInitializedAction();\r\n                break;\r\n            case \"fieldTemplate\":\r\n                if ((0, _type.isDefined)(args.value)) {\r\n                    this._renderField()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"acceptCustomValue\":\r\n            case \"openOnFieldClick\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dropDownButtonTemplate\":\r\n            case \"showDropDownButton\":\r\n                this._updateButtons([\"dropDown\"]);\r\n                break;\r\n            case \"dropDownOptions\":\r\n                this._popupOptionChanged(args);\r\n                this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"));\r\n                break;\r\n            case \"popupPosition\":\r\n                break;\r\n            case \"deferRendering\":\r\n                if ((0, _window.hasWindow)()) {\r\n                    this._createPopup()\r\n                }\r\n                break;\r\n            case \"applyValueMode\":\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n            case \"buttonsLocation\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"showPopupTitle\":\r\n                this._setPopupOption(\"showTitle\", args.value);\r\n                break;\r\n            case \"useHiddenSubmitElement\":\r\n                if (this._$submitElement) {\r\n                    this._$submitElement.remove();\r\n                    this._$submitElement = void 0\r\n                }\r\n                this._renderSubmitElement();\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this._updatePopupPosition(args.value);\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    open: function() {\r\n        this.option(\"opened\", true)\r\n    },\r\n    close: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    field: function() {\r\n        return (0, _element.getPublicElement)(this._input())\r\n    },\r\n    content: function() {\r\n        return this._popup ? this._popup.content() : null\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxDropDownEditor\", DropDownEditor);\r\nvar _default = DropDownEditor;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_list.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _ui = _interopRequireDefault(require(\"./ui.drop_down_editor\"));\r\nvar _list = _interopRequireDefault(require(\"../list\"));\r\nvar _ui2 = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _ui3 = _interopRequireDefault(require(\"../editor/ui.data_expression\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _child_default_template = require(\"../../core/templates/child_default_template\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _grouped_data_converter_mixin = _interopRequireDefault(require(\"../shared/grouped_data_converter_mixin\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar LIST_ITEM_SELECTOR = \".dx-list-item\";\r\nvar LIST_ITEM_DATA_KEY = \"dxListItemData\";\r\nvar DROPDOWNLIST_POPUP_WRAPPER_CLASS = \"dx-dropdownlist-popup-wrapper\";\r\nvar SKIP_GESTURE_EVENT_CLASS = \"dx-skip-gesture-event\";\r\nvar SEARCH_EVENT = \"input\";\r\nvar SEARCH_MODES = [\"startswith\", \"contains\", \"endwith\", \"notcontains\"];\r\nvar DropDownList = _ui.default.inherit({\r\n    _supportedKeys: function() {\r\n        var parent = this.callBase();\r\n        return (0, _extend.extend)({}, parent, {\r\n            tab: function(e) {\r\n                if (this._allowSelectItemByTab()) {\r\n                    this._saveValueChangeEvent(e);\r\n                    var $focusedItem = (0, _renderer.default)(this._list.option(\"focusedElement\"));\r\n                    $focusedItem.length && this._setSelectedElement($focusedItem)\r\n                }\r\n                parent.tab.apply(this, arguments)\r\n            },\r\n            space: _common.noop,\r\n            home: _common.noop,\r\n            end: _common.noop\r\n        })\r\n    },\r\n    _allowSelectItemByTab: function() {\r\n        return this.option(\"opened\") && \"instantly\" === this.option(\"applyValueMode\")\r\n    },\r\n    _setSelectedElement: function($element) {\r\n        var value = this._valueGetter(this._list._getItemData($element));\r\n        this._setValue(value)\r\n    },\r\n    _setValue: function(value) {\r\n        this.option(\"value\", value)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), (0, _extend.extend)(_ui3.default._dataExpressionDefaultOptions(), {\r\n            displayValue: void 0,\r\n            searchEnabled: false,\r\n            searchMode: \"contains\",\r\n            searchTimeout: 500,\r\n            minSearchLength: 0,\r\n            searchExpr: null,\r\n            valueChangeEvent: \"input change keyup\",\r\n            selectedItem: null,\r\n            noDataText: _message.default.format(\"dxCollectionWidget-noDataText\"),\r\n            onSelectionChanged: null,\r\n            onItemClick: _common.noop,\r\n            showDataBeforeSearch: false,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            popupPosition: {\r\n                my: \"left top\",\r\n                at: \"left bottom\",\r\n                offset: {\r\n                    h: 0,\r\n                    v: 0\r\n                },\r\n                collision: \"flip\"\r\n            },\r\n            wrapItemText: false\r\n        }))\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: -1\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom center\"\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            value: true,\r\n            selectedItem: true,\r\n            displayValue: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initDataExpressions();\r\n        this._initActions();\r\n        this._setListDataSource();\r\n        this._validateSearchMode();\r\n        this._clearSelectedItem();\r\n        this._initItems()\r\n    },\r\n    _setListFocusedElementOptionChange: function() {\r\n        this._list._updateParentActiveDescendant = this._updateActiveDescendant.bind(this)\r\n    },\r\n    _initItems: function() {\r\n        var items = this.option().items;\r\n        if (items && !items.length && this._dataSource) {\r\n            this.option().items = this._dataSource.items()\r\n        }\r\n    },\r\n    _initActions: function() {\r\n        this._initContentReadyAction();\r\n        this._initSelectionChangedAction();\r\n        this._initItemClickAction()\r\n    },\r\n    _initContentReadyAction: function() {\r\n        this._contentReadyAction = this._createActionByOption(\"onContentReady\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initSelectionChangedAction: function() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initItemClickAction: function() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new _child_default_template.ChildDefaultTemplate(\"item\")\r\n        })\r\n    },\r\n    _isEditable: function() {\r\n        return this.callBase() || this.option(\"searchEnabled\")\r\n    },\r\n    _saveFocusOnWidget: function(e) {\r\n        if (this._list && this._list.initialOption(\"focusStateEnabled\")) {\r\n            this._focusInput()\r\n        }\r\n    },\r\n    _fitIntoRange: function(value, start, end) {\r\n        if (value > end) {\r\n            return start\r\n        }\r\n        if (value < start) {\r\n            return end\r\n        }\r\n        return value\r\n    },\r\n    _items: function() {\r\n        var items = this._getPlainItems(!this._list && this._dataSource.items());\r\n        var availableItems = new _query.default(items).filter(\"disabled\", \"<>\", true).toArray();\r\n        return availableItems\r\n    },\r\n    _calcNextItem: function(step) {\r\n        var items = this._items();\r\n        var nextIndex = this._fitIntoRange(this._getSelectedIndex() + step, 0, items.length - 1);\r\n        return items[nextIndex]\r\n    },\r\n    _getSelectedIndex: function() {\r\n        var items = this._items();\r\n        var selectedItem = this.option(\"selectedItem\");\r\n        var result = -1;\r\n        (0, _iterator.each)(items, function(index, item) {\r\n            if (this._isValueEquals(item, selectedItem)) {\r\n                result = index;\r\n                return false\r\n            }\r\n        }.bind(this));\r\n        return result\r\n    },\r\n    _createPopup: function() {\r\n        this.callBase();\r\n        this._updateCustomBoundaryContainer();\r\n        this._popup.$wrapper().addClass(this._popupWrapperClass());\r\n        var $popupContent = this._popup.$content();\r\n        _events_engine.default.off($popupContent, \"mouseup\");\r\n        _events_engine.default.on($popupContent, \"mouseup\", this._saveFocusOnWidget.bind(this));\r\n        var that = this;\r\n        this._popup.on({\r\n            shown: function() {\r\n                that.$element().addClass(SKIP_GESTURE_EVENT_CLASS)\r\n            },\r\n            hidden: function() {\r\n                that.$element().removeClass(SKIP_GESTURE_EVENT_CLASS)\r\n            }\r\n        })\r\n    },\r\n    _updateCustomBoundaryContainer: function() {\r\n        var customContainer = this.option(\"dropDownOptions.container\");\r\n        var $container = customContainer && (0, _renderer.default)(customContainer);\r\n        if ($container && $container.length && !(0, _type.isWindow)($container.get(0))) {\r\n            var $containerWithParents = [].slice.call($container.parents());\r\n            $containerWithParents.unshift($container.get(0));\r\n            (0, _iterator.each)($containerWithParents, function(i, parent) {\r\n                if (parent === (0, _renderer.default)(\"body\").get(0)) {\r\n                    return false\r\n                } else {\r\n                    if (\"hidden\" === window.getComputedStyle(parent).overflowY) {\r\n                        this._$customBoundaryContainer = (0, _renderer.default)(parent);\r\n                        return false\r\n                    }\r\n                }\r\n            }.bind(this))\r\n        }\r\n    },\r\n    _popupWrapperClass: function() {\r\n        return DROPDOWNLIST_POPUP_WRAPPER_CLASS\r\n    },\r\n    _renderInputValue: function() {\r\n        var value = this._getCurrentValue();\r\n        this._rejectValueLoading();\r\n        return this._loadInputValue(value, this._setSelectedItem.bind(this)).always(this.callBase.bind(this, value))\r\n    },\r\n    _loadInputValue: function(value, callback) {\r\n        return this._loadItem(value).always(callback)\r\n    },\r\n    _getItemFromPlain: function(value, cache) {\r\n        var plainItems;\r\n        var selectedItem;\r\n        if (cache && \"object\" !== _typeof(value)) {\r\n            if (!cache.itemByValue) {\r\n                cache.itemByValue = {};\r\n                plainItems = this._getPlainItems();\r\n                plainItems.forEach(function(item) {\r\n                    cache.itemByValue[this._valueGetter(item)] = item\r\n                }, this)\r\n            }\r\n            selectedItem = cache.itemByValue[value]\r\n        }\r\n        if (!selectedItem) {\r\n            plainItems = this._getPlainItems();\r\n            selectedItem = (0, _common.grep)(plainItems, function(item) {\r\n                return this._isValueEquals(this._valueGetter(item), value)\r\n            }.bind(this))[0]\r\n        }\r\n        return selectedItem\r\n    },\r\n    _loadItem: function(value, cache) {\r\n        var selectedItem = this._getItemFromPlain(value, cache);\r\n        return void 0 !== selectedItem ? (new _deferred.Deferred).resolve(selectedItem).promise() : this._loadValue(value)\r\n    },\r\n    _getPlainItems: function(items) {\r\n        var plainItems = [];\r\n        items = items || this.option(\"items\") || this._dataSource.items() || [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            if (items[i] && items[i].items) {\r\n                plainItems = plainItems.concat(items[i].items)\r\n            } else {\r\n                plainItems.push(items[i])\r\n            }\r\n        }\r\n        return plainItems\r\n    },\r\n    _updateActiveDescendant: function() {\r\n        var _this$_list;\r\n        var opened = this.option(\"opened\");\r\n        var listFocusedItemId = null === (_this$_list = this._list) || void 0 === _this$_list ? void 0 : _this$_list.getFocusedItemId();\r\n        var isElementOnDom = (0, _renderer.default)(\"#\".concat(listFocusedItemId)).length > 0;\r\n        var activedescendant = opened && isElementOnDom && listFocusedItemId;\r\n        this.setAria({\r\n            activedescendant: activedescendant || null\r\n        })\r\n    },\r\n    _setSelectedItem: function(item) {\r\n        var displayValue = this._displayValue(item);\r\n        this.option(\"selectedItem\", (0, _common.ensureDefined)(item, null));\r\n        this.option(\"displayValue\", displayValue)\r\n    },\r\n    _displayValue: function(item) {\r\n        return this._displayGetter(item)\r\n    },\r\n    _refreshSelected: function() {\r\n        var cache = {};\r\n        this._listItemElements().each(function(_, itemElement) {\r\n            var $itemElement = (0, _renderer.default)(itemElement);\r\n            var itemValue = this._valueGetter($itemElement.data(LIST_ITEM_DATA_KEY));\r\n            var isItemSelected = this._isSelectedValue(itemValue, cache);\r\n            if (isItemSelected) {\r\n                this._list.selectItem($itemElement)\r\n            } else {\r\n                this._list.unselectItem($itemElement)\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _popupShownHandler: function() {\r\n        this.callBase();\r\n        this._setFocusPolicy()\r\n    },\r\n    _setFocusPolicy: function() {\r\n        if (!this.option(\"focusStateEnabled\") || !this._list) {\r\n            return\r\n        }\r\n        this._list.option(\"focusedElement\", null)\r\n    },\r\n    _isSelectedValue: function(value) {\r\n        return this._isValueEquals(value, this.option(\"value\"))\r\n    },\r\n    _validateSearchMode: function() {\r\n        var searchMode = this.option(\"searchMode\");\r\n        var normalizedSearchMode = searchMode.toLowerCase();\r\n        if ((0, _array.inArray)(normalizedSearchMode, SEARCH_MODES) < 0) {\r\n            throw _ui2.default.Error(\"E1019\", searchMode)\r\n        }\r\n    },\r\n    _clearSelectedItem: function() {\r\n        this.option(\"selectedItem\", null)\r\n    },\r\n    _processDataSourceChanging: function() {\r\n        this._setListDataSource();\r\n        this._renderInputValue().fail(function() {\r\n            if (this._isCustomValueAllowed()) {\r\n                return\r\n            }\r\n            this._clearSelectedItem()\r\n        }.bind(this))\r\n    },\r\n    _isCustomValueAllowed: function() {\r\n        return this.option(\"displayCustomValue\")\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._clearFilter();\r\n        this._clearSelectedItem()\r\n    },\r\n    _listItemElements: function() {\r\n        return this._$list ? this._$list.find(LIST_ITEM_SELECTOR) : (0, _renderer.default)()\r\n    },\r\n    _popupConfig: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            templatesRenderAsynchronously: false,\r\n            autoResizeEnabled: false,\r\n            maxHeight: this._getMaxHeight.bind(this)\r\n        })\r\n    },\r\n    _renderPopupContent: function() {\r\n        this.callBase();\r\n        this._renderList()\r\n    },\r\n    _getKeyboardListeners: function() {\r\n        var canListHaveFocus = this._canListHaveFocus();\r\n        return this.callBase().concat([!canListHaveFocus && this._list])\r\n    },\r\n    _setAriaTargetForList: function() {\r\n        this._list._getAriaTarget = this._getAriaTarget.bind(this)\r\n    },\r\n    _renderList: function() {\r\n        this._listId = \"dx-\" + (new _guid.default)._value;\r\n        var $list = this._$list = (0, _renderer.default)(\"<div>\").attr(\"id\", this._listId).appendTo(this._popup.$content());\r\n        this._list = this._createComponent($list, _list.default, this._listConfig());\r\n        this._refreshList();\r\n        this._setAriaTargetForList();\r\n        this._list.option(\"_listAttributes\", {\r\n            role: \"combobox\"\r\n        });\r\n        this._renderPreventBlur(this._$list);\r\n        this._setListFocusedElementOptionChange()\r\n    },\r\n    _renderPreventBlur: function($target) {\r\n        var eventName = (0, _index.addNamespace)(\"mousedown\", \"dxDropDownList\");\r\n        _events_engine.default.off($target, eventName);\r\n        _events_engine.default.on($target, eventName, function(e) {\r\n            e.preventDefault()\r\n        }.bind(this))\r\n    },\r\n    _renderOpenedState: function() {\r\n        this.callBase();\r\n        this._list && this._updateActiveDescendant();\r\n        this.setAria({\r\n            controls: this._list && this._listId,\r\n            owns: this._popup && this._popupContentId\r\n        })\r\n    },\r\n    _setDefaultAria: function() {\r\n        this.setAria({\r\n            haspopup: \"listbox\",\r\n            autocomplete: \"list\"\r\n        })\r\n    },\r\n    _refreshList: function() {\r\n        if (this._list && this._shouldRefreshDataSource()) {\r\n            this._setListDataSource()\r\n        }\r\n    },\r\n    _shouldRefreshDataSource: function() {\r\n        var dataSourceProvided = !!this._list.option(\"dataSource\");\r\n        return dataSourceProvided !== this._needPassDataSourceToList()\r\n    },\r\n    _isDesktopDevice: function() {\r\n        return \"desktop\" === _devices.default.real().deviceType\r\n    },\r\n    _listConfig: function() {\r\n        var options = {\r\n            selectionMode: \"single\",\r\n            _templates: this.option(\"_templates\"),\r\n            templateProvider: this.option(\"templateProvider\"),\r\n            noDataText: this.option(\"noDataText\"),\r\n            grouped: this.option(\"grouped\"),\r\n            wrapItemText: this.option(\"wrapItemText\"),\r\n            onContentReady: this._listContentReadyHandler.bind(this),\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            indicateLoading: false,\r\n            keyExpr: this._getCollectionKeyExpr(),\r\n            displayExpr: this._displayGetterExpr(),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            onItemClick: this._listItemClickAction.bind(this),\r\n            dataSource: this._getDataSource(),\r\n            _revertPageOnEmptyLoad: true,\r\n            hoverStateEnabled: this._isDesktopDevice() ? this.option(\"hoverStateEnabled\") : false,\r\n            focusStateEnabled: this._isDesktopDevice() ? this.option(\"focusStateEnabled\") : false\r\n        };\r\n        if (!this._canListHaveFocus()) {\r\n            options.tabIndex = null\r\n        }\r\n        return options\r\n    },\r\n    _canListHaveFocus: function() {\r\n        return false\r\n    },\r\n    _getDataSource: function() {\r\n        return this._needPassDataSourceToList() ? this._dataSource : null\r\n    },\r\n    _dataSourceOptions: function() {\r\n        return {\r\n            paginate: false\r\n        }\r\n    },\r\n    _getGroupedOption: function() {\r\n        return this.option(\"grouped\")\r\n    },\r\n    _dataSourceFromUrlLoadMode: function() {\r\n        return \"raw\"\r\n    },\r\n    _listContentReadyHandler: function() {\r\n        this._list = this._list || this._$list.dxList(\"instance\");\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._refreshSelected()\r\n        }\r\n        this._dimensionChanged();\r\n        this._contentReadyAction()\r\n    },\r\n    _setListOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_list\", arguments)\r\n    },\r\n    _listItemClickAction: function(e) {\r\n        this._listItemClickHandler(e);\r\n        this._itemClickAction(e)\r\n    },\r\n    _listItemClickHandler: _common.noop,\r\n    _setListDataSource: function() {\r\n        if (!this._list) {\r\n            return\r\n        }\r\n        this._setListOption(\"dataSource\", this._getDataSource());\r\n        if (!this._needPassDataSourceToList()) {\r\n            this._setListOption(\"items\", [])\r\n        }\r\n    },\r\n    _needPassDataSourceToList: function() {\r\n        return this.option(\"showDataBeforeSearch\") || this._isMinSearchLengthExceeded()\r\n    },\r\n    _isMinSearchLengthExceeded: function() {\r\n        return this._searchValue().toString().length >= this.option(\"minSearchLength\")\r\n    },\r\n    _needClearFilter: function() {\r\n        return this._canKeepDataSource() ? false : this._needPassDataSourceToList()\r\n    },\r\n    _canKeepDataSource: function() {\r\n        var _this$_dataSource;\r\n        var isMinSearchLengthExceeded = this._isMinSearchLengthExceeded();\r\n        return (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.isLoaded()) && this.option(\"showDataBeforeSearch\") && this.option(\"minSearchLength\") && !isMinSearchLengthExceeded && !this._isLastMinSearchLengthExceeded\r\n    },\r\n    _searchValue: function() {\r\n        return this._input().val() || \"\"\r\n    },\r\n    _getSearchEvent: function() {\r\n        return (0, _index.addNamespace)(SEARCH_EVENT, this.NAME + \"Search\")\r\n    },\r\n    _getCompositionStartEvent: function() {\r\n        return (0, _index.addNamespace)(\"compositionstart\", this.NAME + \"CompositionStart\")\r\n    },\r\n    _getCompositionEndEvent: function() {\r\n        return (0, _index.addNamespace)(\"compositionend\", this.NAME + \"CompositionEnd\")\r\n    },\r\n    _getSetFocusPolicyEvent: function() {\r\n        return (0, _index.addNamespace)(\"input\", this.NAME + \"FocusPolicy\")\r\n    },\r\n    _renderEvents: function() {\r\n        var _this = this;\r\n        this.callBase();\r\n        _events_engine.default.on(this._input(), this._getSetFocusPolicyEvent(), function() {\r\n            _this._setFocusPolicy()\r\n        });\r\n        if (this._shouldRenderSearchEvent()) {\r\n            _events_engine.default.on(this._input(), this._getSearchEvent(), function(e) {\r\n                _this._searchHandler(e)\r\n            });\r\n            _events_engine.default.on(this._input(), this._getCompositionStartEvent(), function() {\r\n                _this._isTextCompositionInProgress(true)\r\n            });\r\n            _events_engine.default.on(this._input(), this._getCompositionEndEvent(), function(e) {\r\n                _this._isTextCompositionInProgress(void 0);\r\n                _this._searchHandler(e, _this._searchValue())\r\n            })\r\n        }\r\n    },\r\n    _shouldRenderSearchEvent: function() {\r\n        return this.option(\"searchEnabled\")\r\n    },\r\n    _refreshEvents: function() {\r\n        _events_engine.default.off(this._input(), this._getSearchEvent());\r\n        _events_engine.default.off(this._input(), this._getSetFocusPolicyEvent());\r\n        _events_engine.default.off(this._input(), this._getCompositionStartEvent());\r\n        _events_engine.default.off(this._input(), this._getCompositionEndEvent());\r\n        this.callBase()\r\n    },\r\n    _isTextCompositionInProgress: function(value) {\r\n        if (arguments.length) {\r\n            this._isTextComposition = value\r\n        } else {\r\n            return this._isTextComposition\r\n        }\r\n    },\r\n    _searchHandler: function(e, searchValue) {\r\n        var _this2 = this;\r\n        if (this._isTextCompositionInProgress()) {\r\n            return\r\n        }\r\n        if (!this._isMinSearchLengthExceeded()) {\r\n            this._searchCanceled();\r\n            return\r\n        }\r\n        var searchTimeout = this.option(\"searchTimeout\");\r\n        if (searchTimeout) {\r\n            this._clearSearchTimer();\r\n            this._searchTimer = setTimeout(function() {\r\n                _this2._searchDataSource(searchValue)\r\n            }, searchTimeout)\r\n        } else {\r\n            this._searchDataSource(searchValue)\r\n        }\r\n    },\r\n    _searchCanceled: function() {\r\n        this._clearSearchTimer();\r\n        if (this._needClearFilter()) {\r\n            this._filterDataSource(null)\r\n        }\r\n        this._refreshList()\r\n    },\r\n    _searchDataSource: function() {\r\n        var searchValue = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._searchValue();\r\n        this._filterDataSource(searchValue)\r\n    },\r\n    _filterDataSource: function(searchValue) {\r\n        this._clearSearchTimer();\r\n        var dataSource = this._dataSource;\r\n        if (dataSource) {\r\n            dataSource.searchExpr(this.option(\"searchExpr\") || this._displayGetterExpr());\r\n            dataSource.searchOperation(this.option(\"searchMode\"));\r\n            dataSource.searchValue(searchValue);\r\n            dataSource.load().done(this._dataSourceFiltered.bind(this, searchValue))\r\n        }\r\n    },\r\n    _clearFilter: function() {\r\n        var dataSource = this._dataSource;\r\n        dataSource && dataSource.searchValue() && dataSource.searchValue(null)\r\n    },\r\n    _dataSourceFiltered: function() {\r\n        this._isLastMinSearchLengthExceeded = this._isMinSearchLengthExceeded();\r\n        this._refreshList();\r\n        this._refreshPopupVisibility()\r\n    },\r\n    _shouldOpenPopup: function() {\r\n        return this._hasItemsToShow()\r\n    },\r\n    _refreshPopupVisibility: function() {\r\n        if (this.option(\"readOnly\") || !this._searchValue()) {\r\n            return\r\n        }\r\n        var shouldOpenPopup = this._shouldOpenPopup();\r\n        if (shouldOpenPopup && !this._isFocused()) {\r\n            return\r\n        }\r\n        this.option(\"opened\", shouldOpenPopup);\r\n        if (shouldOpenPopup) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dataSourceChangedHandler: function(newItems) {\r\n        if (0 === this._dataSource.pageIndex()) {\r\n            this.option().items = newItems\r\n        } else {\r\n            this.option().items = this.option().items.concat(newItems)\r\n        }\r\n    },\r\n    _hasItemsToShow: function() {\r\n        var resultItems = this._dataSource && this._dataSource.items() || [];\r\n        var resultAmount = resultItems.length;\r\n        var isMinSearchLengthExceeded = this._needPassDataSourceToList();\r\n        return !!(isMinSearchLengthExceeded && resultAmount)\r\n    },\r\n    _clearSearchTimer: function() {\r\n        clearTimeout(this._searchTimer);\r\n        delete this._searchTimer\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this._dimensionChanged()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.callBase(arguments);\r\n        this._popup && this._updatePopupDimensions()\r\n    },\r\n    _needPopupRepaint: function() {\r\n        if (!this._dataSource) {\r\n            return false\r\n        }\r\n        var currentPageIndex = this._dataSource.pageIndex();\r\n        var needRepaint = (0, _type.isDefined)(this._pageIndex) && currentPageIndex <= this._pageIndex;\r\n        this._pageIndex = currentPageIndex;\r\n        return needRepaint\r\n    },\r\n    _updatePopupDimensions: function() {\r\n        if (this._needPopupRepaint()) {\r\n            this._popup.repaint()\r\n        }\r\n        this._list && this._list.updateDimensions()\r\n    },\r\n    _getMaxHeight: function() {\r\n        var $element = this.$element();\r\n        var $customBoundaryContainer = this._$customBoundaryContainer;\r\n        var offsetTop = $element.offset().top - ($customBoundaryContainer ? $customBoundaryContainer.offset().top : 0);\r\n        var windowHeight = (0, _renderer.default)(window).outerHeight();\r\n        var containerHeight = $customBoundaryContainer ? Math.min($customBoundaryContainer.outerHeight(), windowHeight) : windowHeight;\r\n        var maxHeight = Math.max(offsetTop, containerHeight - offsetTop - $element.outerHeight());\r\n        return Math.min(.5 * containerHeight, maxHeight)\r\n    },\r\n    _clean: function() {\r\n        if (this._list) {\r\n            delete this._list\r\n        }\r\n        delete this._isLastMinSearchLengthExceeded;\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        this._clearSearchTimer();\r\n        this.callBase()\r\n    },\r\n    _setCollectionWidgetOption: function() {\r\n        this._setListOption.apply(this, arguments)\r\n    },\r\n    _setSubmitValue: function() {\r\n        var value = this.option(\"value\");\r\n        var submitValue = this._shouldUseDisplayValue(value) ? this._displayGetter(value) : value;\r\n        this._getSubmitElement().val(submitValue)\r\n    },\r\n    _shouldUseDisplayValue: function(value) {\r\n        return \"this\" === this.option(\"valueExpr\") && (0, _type.isObject)(value)\r\n    },\r\n    _optionChanged: function(args) {\r\n        this._dataExpressionOptionChanged(args);\r\n        switch (args.name) {\r\n            case \"hoverStateEnabled\":\r\n            case \"focusStateEnabled\":\r\n                this._isDesktopDevice() && this._setListOption(args.name, args.value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                if (!this.option(\"dataSource\")) {\r\n                    this._processDataSourceChanging()\r\n                }\r\n                break;\r\n            case \"dataSource\":\r\n                this._processDataSourceChanging();\r\n                break;\r\n            case \"valueExpr\":\r\n                this._renderValue();\r\n                this._setListOption(\"keyExpr\", this._getCollectionKeyExpr());\r\n                break;\r\n            case \"displayExpr\":\r\n                this._renderValue();\r\n                this._setListOption(\"displayExpr\", this._displayGetterExpr());\r\n                break;\r\n            case \"searchMode\":\r\n                this._validateSearchMode();\r\n                break;\r\n            case \"minSearchLength\":\r\n                this._refreshList();\r\n                break;\r\n            case \"searchEnabled\":\r\n            case \"showDataBeforeSearch\":\r\n            case \"searchExpr\":\r\n                this._invalidate();\r\n                break;\r\n            case \"onContentReady\":\r\n                this._initContentReadyAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._initSelectionChangedAction();\r\n                break;\r\n            case \"onItemClick\":\r\n                this._initItemClickAction();\r\n                break;\r\n            case \"grouped\":\r\n            case \"groupTemplate\":\r\n            case \"wrapItemText\":\r\n            case \"noDataText\":\r\n                this._setListOption(args.name);\r\n                break;\r\n            case \"displayValue\":\r\n                this.option(\"text\", args.value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"searchTimeout\":\r\n                break;\r\n            case \"selectedItem\":\r\n                if (args.previousValue !== args.value) {\r\n                    this._selectionChangedAction({\r\n                        selectedItem: args.value\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(_ui3.default, _grouped_data_converter_mixin.default);\r\n(0, _component_registrator.default)(\"dxDropDownList\", DropDownList);\r\nvar _default = DropDownList;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/drop_down_editor/utils.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getSizeValue = exports.getElementWidth = void 0;\r\nvar _window = require(\"../../core/utils/window\");\r\nvar getElementWidth = function($element) {\r\n    if ((0, _window.hasWindow)()) {\r\n        return $element.outerWidth()\r\n    }\r\n};\r\nexports.getElementWidth = getElementWidth;\r\nvar getSizeValue = function(size) {\r\n    if (null === size) {\r\n        size = void 0\r\n    }\r\n    if (\"function\" === typeof size) {\r\n        size = size()\r\n    }\r\n    return size\r\n};\r\nexports.getSizeValue = getSizeValue;\r\n","/**\r\n * DevExtreme (ui/drop_down_menu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _window = require(\"../core/utils/window\");\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"./widget/ui.widget\"));\r\nvar _button = _interopRequireDefault(require(\"./button\"));\r\nvar _popover = _interopRequireDefault(require(\"./popover\"));\r\nvar _data_helper = _interopRequireDefault(require(\"../data_helper\"));\r\nvar _list = _interopRequireDefault(require(\"./list\"));\r\nvar _themes = require(\"./themes\");\r\nvar _child_default_template = require(\"../core/templates/child_default_template\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar DROP_DOWN_MENU_CLASS = \"dx-dropdownmenu\";\r\nvar DROP_DOWN_MENU_POPUP_CLASS = \"dx-dropdownmenu-popup\";\r\nvar DROP_DOWN_MENU_POPUP_WRAPPER_CLASS = \"dx-dropdownmenu-popup-wrapper\";\r\nvar DROP_DOWN_MENU_LIST_CLASS = \"dx-dropdownmenu-list\";\r\nvar DROP_DOWN_MENU_BUTTON_CLASS = \"dx-dropdownmenu-button\";\r\nvar POPUP_OPTION_MAP = {\r\n    popupWidth: \"width\",\r\n    popupHeight: \"height\",\r\n    popupMaxHeight: \"maxHeight\",\r\n    popupAutoResizeEnabled: \"autoResizeEnabled\"\r\n};\r\nvar BUTTON_OPTION_MAP = {\r\n    buttonIcon: \"icon\",\r\n    buttonText: \"text\",\r\n    buttonWidth: \"width\",\r\n    buttonHeight: \"height\",\r\n    buttonTemplate: \"template\"\r\n};\r\nvar DropDownMenu = _ui.default.inherit({\r\n    _supportedKeys: function() {\r\n        var extension = {};\r\n        if (!this.option(\"opened\") || !this._list.option(\"focusedElement\")) {\r\n            extension = this._button._supportedKeys()\r\n        }\r\n        return (0, _extend.extend)(this.callBase(), extension, {\r\n            tab: function() {\r\n                this._popup && this._popup.hide()\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            items: [],\r\n            onItemClick: null,\r\n            dataSource: null,\r\n            itemTemplate: \"item\",\r\n            buttonText: \"\",\r\n            buttonIcon: \"overflow\",\r\n            buttonWidth: void 0,\r\n            buttonHeight: void 0,\r\n            buttonTemplate: \"content\",\r\n            onButtonClick: null,\r\n            usePopover: false,\r\n            popupWidth: \"auto\",\r\n            popupHeight: \"auto\",\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            opened: false,\r\n            selectionMode: \"none\",\r\n            selectedItemKeys: [],\r\n            deferRendering: false,\r\n            popupPosition: {\r\n                my: \"top center\",\r\n                at: \"bottom center\",\r\n                collision: \"fit flip\",\r\n                offset: {\r\n                    v: 1\r\n                }\r\n            },\r\n            popupAnimation: void 0,\r\n            onItemRendered: null,\r\n            menuWidget: _list.default,\r\n            popupMaxHeight: void 0,\r\n            closeOnClick: true,\r\n            useInkRipple: false,\r\n            container: void 0,\r\n            popupAutoResizeEnabled: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                usePopover: true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: 4\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    my: \"top \" + (this.option(\"rtlEnabled\") ? \"left\" : \"right\"),\r\n                    at: \"top \" + (this.option(\"rtlEnabled\") ? \"left\" : \"right\"),\r\n                    collision: \"flipfit\"\r\n                },\r\n                popupAnimation: {\r\n                    show: {\r\n                        type: \"pop\",\r\n                        duration: 200,\r\n                        from: {\r\n                            scale: 0\r\n                        },\r\n                        to: {\r\n                            scale: 1\r\n                        }\r\n                    },\r\n                    hide: {\r\n                        type: \"pop\",\r\n                        duration: 200,\r\n                        from: {\r\n                            scale: 1\r\n                        },\r\n                        to: {\r\n                            scale: 0\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return (0, _themes.isMaterial)()\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _initOptions: function(options) {\r\n        if (\"android\" === _devices.default.current().platform) {\r\n            if (!options.popupPosition) {\r\n                options.popupPosition = {\r\n                    at: (options.usePopover ? \"bottom \" : \"top \") + (options.rtlEnabled ? \"left\" : \"right\")\r\n                }\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _dataSourceOptions: function() {\r\n        return {\r\n            paginate: false\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_MENU_CLASS);\r\n        this._initDataSource();\r\n        this._initItemClickAction();\r\n        this._initButtonClickAction()\r\n    },\r\n    _initItemClickAction: function() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _initButtonClickAction: function() {\r\n        this._buttonClickAction = this._createActionByOption(\"onButtonClick\")\r\n    },\r\n    _initTemplates: function() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new _child_default_template.ChildDefaultTemplate(\"content\")\r\n        });\r\n        this.callBase()\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderButton();\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.setAria({\r\n            role: \"menubar\",\r\n            haspopup: true,\r\n            expanded: this.option(\"opened\")\r\n        })\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (this.option(\"opened\")) {\r\n            this._renderPopup()\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this._cleanFocusState();\r\n        if (this._popup) {\r\n            this._popup.$element().remove();\r\n            delete this._$popup\r\n        }\r\n    },\r\n    _renderButton: function() {\r\n        var $button = this.$element().addClass(DROP_DOWN_MENU_BUTTON_CLASS);\r\n        var config = this._buttonOptions();\r\n        this._button = this._createComponent($button, _button.default, config)\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this._button._toggleActiveState($element, value, e)\r\n    },\r\n    _buttonOptions: function() {\r\n        return {\r\n            text: this.option(\"buttonText\"),\r\n            icon: this.option(\"buttonIcon\"),\r\n            width: this.option(\"buttonWidth\"),\r\n            height: this.option(\"buttonHeight\"),\r\n            useInkRipple: this.option(\"useInkRipple\"),\r\n            template: this.option(\"buttonTemplate\"),\r\n            focusStateEnabled: false,\r\n            onClick: function(e) {\r\n                this.option(\"opened\", !this.option(\"opened\"));\r\n                this._buttonClickAction(e)\r\n            }.bind(this)\r\n        }\r\n    },\r\n    _toggleMenuVisibility: function(opened) {\r\n        var state = void 0 === opened ? !this._popup.option(\"visible\") : opened;\r\n        if (opened) {\r\n            this._renderPopup()\r\n        }\r\n        this._popup.toggle(state);\r\n        this.setAria(\"expanded\", state)\r\n    },\r\n    _renderPopup: function() {\r\n        if (this._$popup) {\r\n            return\r\n        }\r\n        var $popup = this._$popup = (0, _renderer.default)(\"<div>\").appendTo(this.$element());\r\n        var config = this._popupOptions();\r\n        this._popup = this._createComponent($popup, _popover.default, config)\r\n    },\r\n    _popupOptions: function() {\r\n        var usePopup = !this.option(\"usePopover\");\r\n        return {\r\n            onInitialized: function(args) {\r\n                args.component.$wrapper().addClass(DROP_DOWN_MENU_POPUP_WRAPPER_CLASS).toggleClass(DROP_DOWN_MENU_POPUP_CLASS, usePopup)\r\n            },\r\n            visible: this.option(\"opened\"),\r\n            deferRendering: false,\r\n            contentTemplate: function(contentElement) {\r\n                this._renderList(contentElement)\r\n            }.bind(this),\r\n            position: this.option(\"popupPosition\"),\r\n            animation: this.option(\"popupAnimation\"),\r\n            onOptionChanged: function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    this.option(\"opened\", args.value)\r\n                }\r\n            }.bind(this),\r\n            target: this.$element(),\r\n            height: this.option(\"popupHeight\"),\r\n            width: this.option(\"popupWidth\"),\r\n            maxHeight: this.option(\"popupMaxHeight\"),\r\n            container: this.option(\"container\"),\r\n            autoResizeEnabled: this.option(\"popupAutoResizeEnabled\")\r\n        }\r\n    },\r\n    _renderList: function(contentElement) {\r\n        var $content = (0, _renderer.default)(contentElement);\r\n        var listConfig = this._listOptions();\r\n        $content.addClass(DROP_DOWN_MENU_LIST_CLASS);\r\n        this._list = this._createComponent($content, this.option(\"menuWidget\"), listConfig);\r\n        this._list._getAriaTarget = function() {\r\n            return this.$element()\r\n        }.bind(this);\r\n        this._setListDataSource();\r\n        var listMaxHeight = .5 * (0, _renderer.default)(window).height();\r\n        if ($content.height() > listMaxHeight) {\r\n            $content.height(listMaxHeight)\r\n        }\r\n    },\r\n    _listOptions: function() {\r\n        return {\r\n            pageLoadMode: \"scrollBottom\",\r\n            indicateLoading: false,\r\n            noDataText: \"\",\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            selectedItemKeys: this.option(\"selectedItemKeys\"),\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            onItemClick: function(e) {\r\n                if (this.option(\"closeOnClick\")) {\r\n                    this.option(\"opened\", false)\r\n                }\r\n                this._itemClickAction(e)\r\n            }.bind(this),\r\n            tabIndex: -1,\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            onItemRendered: this.option(\"onItemRendered\"),\r\n            _itemAttributes: {\r\n                role: \"menuitem\"\r\n            }\r\n        }\r\n    },\r\n    _setListDataSource: function() {\r\n        if (this._list) {\r\n            this._list.option(\"dataSource\", this._dataSource || this.option(\"items\"))\r\n        }\r\n        delete this._deferRendering\r\n    },\r\n    _getKeyboardListeners: function() {\r\n        return this.callBase().concat([this._list])\r\n    },\r\n    _toggleVisibility: function(visible) {\r\n        this.callBase(visible);\r\n        this._button.option(\"visible\", visible)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        var value = args.value;\r\n        switch (name) {\r\n            case \"items\":\r\n            case \"dataSource\":\r\n                if (this.option(\"deferRendering\") && !this.option(\"opened\")) {\r\n                    this._deferRendering = true\r\n                } else {\r\n                    this._refreshDataSource();\r\n                    this._setListDataSource()\r\n                }\r\n                break;\r\n            case \"itemTemplate\":\r\n                if (this._list) {\r\n                    this._list.option(name, this._getTemplate(value))\r\n                }\r\n                break;\r\n            case \"onItemClick\":\r\n                this._initItemClickAction();\r\n                break;\r\n            case \"onButtonClick\":\r\n                this._buttonClickAction();\r\n                break;\r\n            case \"buttonIcon\":\r\n            case \"buttonText\":\r\n            case \"buttonWidth\":\r\n            case \"buttonHeight\":\r\n            case \"buttonTemplate\":\r\n                this._button.option(BUTTON_OPTION_MAP[name], value);\r\n                this._renderPopup();\r\n                break;\r\n            case \"popupWidth\":\r\n            case \"popupHeight\":\r\n            case \"popupMaxHeight\":\r\n            case \"popupAutoResizeEnabled\":\r\n                this._popup.option(POPUP_OPTION_MAP[name], value);\r\n                break;\r\n            case \"usePopover\":\r\n            case \"menuWidget\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"focusStateEnabled\":\r\n            case \"activeStateEnabled\":\r\n                if (this._list) {\r\n                    this._list.option(name, value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            case \"selectionMode\":\r\n            case \"selectedItemKeys\":\r\n            case \"onItemRendered\":\r\n                if (this._list) {\r\n                    this._list.option(name, value)\r\n                }\r\n                break;\r\n            case \"opened\":\r\n                if (this._deferRendering) {\r\n                    this._refreshDataSource();\r\n                    this._setListDataSource()\r\n                }\r\n                this._toggleMenuVisibility(value);\r\n                break;\r\n            case \"deferRendering\":\r\n            case \"popupPosition\":\r\n            case \"closeOnClick\":\r\n                break;\r\n            case \"container\":\r\n                this._popup && this._popup.option(args.name, args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    open: function() {\r\n        this.option(\"opened\", true)\r\n    },\r\n    close: function() {\r\n        this.option(\"opened\", false)\r\n    }\r\n}).include(_data_helper.default);\r\n(0, _component_registrator.default)(\"dxDropDownMenu\", DropDownMenu);\r\nvar _default = DropDownMenu;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/editor/editor.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _element_data = require(\"../../core/element_data\");\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _validation_engine = _interopRequireDefault(require(\"../validation_engine\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _validation_message = _interopRequireDefault(require(\"../validation_message\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\";\r\nvar READONLY_STATE_CLASS = \"dx-state-readonly\";\r\nvar INVALID_CLASS = \"dx-invalid\";\r\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\r\nvar VALIDATION_TARGET = \"dx-validation-target\";\r\nvar VALIDATION_STATUS_VALID = \"valid\";\r\nvar VALIDATION_STATUS_INVALID = \"invalid\";\r\nvar READONLY_NAMESPACE = \"editorReadOnly\";\r\nvar VALIDATION_MESSAGE_KEYS_MAP = {\r\n    validationMessageMode: \"mode\",\r\n    validationMessageOffset: \"offset\",\r\n    validationBoundary: \"boundary\"\r\n};\r\nvar Editor = _ui.default.inherit({\r\n    ctor: function() {\r\n        this.showValidationMessageTimeout = null;\r\n        this.validationRequest = (0, _callbacks.default)();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _createElement: function(element) {\r\n        this.callBase(element);\r\n        var $element = this.$element();\r\n        if ($element) {\r\n            (0, _element_data.data)($element[0], VALIDATION_TARGET, this)\r\n        }\r\n    },\r\n    _initOptions: function(options) {\r\n        this.callBase.apply(this, arguments);\r\n        this.option(_validation_engine.default.initValidationOptions(options))\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._options.cache(\"validationTooltipOptions\", this.option(\"validationTooltipOptions\"));\r\n        var $element = this.$element();\r\n        $element.addClass(DX_INVALID_BADGE_CLASS)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: null,\r\n            name: \"\",\r\n            onValueChanged: null,\r\n            readOnly: false,\r\n            isValid: true,\r\n            validationError: null,\r\n            validationErrors: null,\r\n            validationStatus: VALIDATION_STATUS_VALID,\r\n            validationMessageMode: \"auto\",\r\n            validationBoundary: void 0,\r\n            validationMessageOffset: {\r\n                h: 0,\r\n                v: 0\r\n            },\r\n            validationTooltipOptions: {}\r\n        })\r\n    },\r\n    _attachKeyboardEvents: function() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            validationError: true\r\n        })\r\n    },\r\n    _createValueChangeAction: function() {\r\n        this._valueChangeAction = this._createActionByOption(\"onValueChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _suppressValueChangeAction: function() {\r\n        this._valueChangeActionSuppressed = true\r\n    },\r\n    _resumeValueChangeAction: function() {\r\n        this._valueChangeActionSuppressed = false\r\n    },\r\n    _initMarkup: function() {\r\n        var _this$option;\r\n        this._toggleReadOnlyState();\r\n        this._setSubmitElementName(this.option(\"name\"));\r\n        this.callBase();\r\n        this._renderValidationState();\r\n        null === (_this$option = this.option(\"_onMarkupRendered\")) || void 0 === _this$option ? void 0 : _this$option()\r\n    },\r\n    _raiseValueChangeAction: function(value, previousValue) {\r\n        if (!this._valueChangeAction) {\r\n            this._createValueChangeAction()\r\n        }\r\n        this._valueChangeAction(this._valueChangeArgs(value, previousValue))\r\n    },\r\n    _valueChangeArgs: function(value, previousValue) {\r\n        return {\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: this._valueChangeEventInstance\r\n        }\r\n    },\r\n    _saveValueChangeEvent: function(e) {\r\n        this._valueChangeEventInstance = e\r\n    },\r\n    _focusInHandler: function(e) {\r\n        var isValidationMessageShownOnFocus = \"auto\" === this.option(\"validationMessageMode\");\r\n        if (this._canValueBeChangedByClick() && isValidationMessageShownOnFocus) {\r\n            var _this$_validationMess;\r\n            var $validationMessageWrapper = null === (_this$_validationMess = this._validationMessage) || void 0 === _this$_validationMess ? void 0 : _this$_validationMess.$wrapper();\r\n            null === $validationMessageWrapper || void 0 === $validationMessageWrapper ? void 0 : $validationMessageWrapper.removeClass(INVALID_MESSAGE_AUTO);\r\n            clearTimeout(this.showValidationMessageTimeout);\r\n            this.showValidationMessageTimeout = setTimeout(function() {\r\n                return null === $validationMessageWrapper || void 0 === $validationMessageWrapper ? void 0 : $validationMessageWrapper.addClass(INVALID_MESSAGE_AUTO)\r\n            }, 150)\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _canValueBeChangedByClick: function() {\r\n        return false\r\n    },\r\n    _getValidationErrors: function() {\r\n        var validationErrors = this.option(\"validationErrors\");\r\n        if (!validationErrors && this.option(\"validationError\")) {\r\n            validationErrors = [this.option(\"validationError\")]\r\n        }\r\n        return validationErrors\r\n    },\r\n    _disposeValidationMessage: function() {\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.remove();\r\n            this.setAria(\"describedby\", null);\r\n            this._$validationMessage = void 0;\r\n            this._validationMessage = void 0\r\n        }\r\n    },\r\n    _toggleValidationClasses: function(isInvalid) {\r\n        this.$element().toggleClass(INVALID_CLASS, isInvalid);\r\n        this.setAria(VALIDATION_STATUS_INVALID, isInvalid || void 0)\r\n    },\r\n    _renderValidationState: function() {\r\n        var isValid = this.option(\"isValid\") && this.option(\"validationStatus\") !== VALIDATION_STATUS_INVALID;\r\n        var validationErrors = this._getValidationErrors();\r\n        var $element = this.$element();\r\n        this._toggleValidationClasses(!isValid);\r\n        if (!(0, _window.hasWindow)()) {\r\n            return\r\n        }\r\n        this._disposeValidationMessage();\r\n        if (!isValid && validationErrors) {\r\n            var _this$option2 = this.option(),\r\n                validationMessageMode = _this$option2.validationMessageMode,\r\n                validationMessageOffset = _this$option2.validationMessageOffset,\r\n                validationBoundary = _this$option2.validationBoundary,\r\n                rtlEnabled = _this$option2.rtlEnabled;\r\n            this._$validationMessage = (0, _renderer.default)(\"<div>\").appendTo($element);\r\n            this.setAria(\"describedby\", \"dx-\" + new _guid.default);\r\n            this._validationMessage = new _validation_message.default(this._$validationMessage, (0, _extend.extend)({\r\n                validationErrors: validationErrors,\r\n                rtlEnabled: rtlEnabled,\r\n                target: this._getValidationMessageTarget(),\r\n                container: $element,\r\n                mode: validationMessageMode,\r\n                positionRequest: \"below\",\r\n                offset: validationMessageOffset,\r\n                boundary: validationBoundary,\r\n                describedElement: this._focusTarget()\r\n            }, this._options.cache(\"validationTooltipOptions\")));\r\n            this._bindInnerWidgetOptions(this._validationMessage, \"validationTooltipOptions\")\r\n        }\r\n    },\r\n    _getValidationMessageTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        var readOnly = this.option(\"readOnly\");\r\n        this._toggleBackspaceHandler(readOnly);\r\n        this.$element().toggleClass(READONLY_STATE_CLASS, !!readOnly);\r\n        this.setAria(\"readonly\", readOnly || void 0)\r\n    },\r\n    _toggleBackspaceHandler: function(isReadOnly) {\r\n        var $eventTarget = this._keyboardEventBindingTarget();\r\n        var eventName = (0, _index.addNamespace)(\"keydown\", READONLY_NAMESPACE);\r\n        _events_engine.default.off($eventTarget, eventName);\r\n        if (isReadOnly) {\r\n            _events_engine.default.on($eventTarget, eventName, function(e) {\r\n                if (\"backspace\" === (0, _index.normalizeKeyName)(e)) {\r\n                    e.preventDefault()\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        var element = this.$element()[0];\r\n        (0, _element_data.data)(element, VALIDATION_TARGET, null);\r\n        clearTimeout(this.showValidationMessageTimeout);\r\n        this._disposeValidationMessage();\r\n        this.callBase()\r\n    },\r\n    _setSubmitElementName: function(name) {\r\n        var $submitElement = this._getSubmitElement();\r\n        if (!$submitElement) {\r\n            return\r\n        }\r\n        if (name.length > 0) {\r\n            $submitElement.attr(\"name\", name)\r\n        } else {\r\n            $submitElement.removeAttr(\"name\")\r\n        }\r\n    },\r\n    _getSubmitElement: function() {\r\n        return null\r\n    },\r\n    _setValidationMessageOption: function(_ref) {\r\n        var _this$_validationMess2;\r\n        var name = _ref.name,\r\n            value = _ref.value;\r\n        var optionKey = VALIDATION_MESSAGE_KEYS_MAP[name] ? VALIDATION_MESSAGE_KEYS_MAP[name] : name;\r\n        null === (_this$_validationMess2 = this._validationMessage) || void 0 === _this$_validationMess2 ? void 0 : _this$_validationMess2.option(optionKey, value)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var _this$_validationMess3;\r\n        switch (args.name) {\r\n            case \"onValueChanged\":\r\n                this._createValueChangeAction();\r\n                break;\r\n            case \"readOnly\":\r\n                this._toggleReadOnlyState();\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"value\":\r\n                if (args.value != args.previousValue) {\r\n                    this.validationRequest.fire({\r\n                        value: args.value,\r\n                        editor: this\r\n                    })\r\n                }\r\n                if (!this._valueChangeActionSuppressed) {\r\n                    this._raiseValueChangeAction(args.value, args.previousValue);\r\n                    this._saveValueChangeEvent(void 0)\r\n                }\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                null === (_this$_validationMess3 = this._validationMessage) || void 0 === _this$_validationMess3 ? void 0 : _this$_validationMess3.updateMaxWidth();\r\n                break;\r\n            case \"name\":\r\n                this._setSubmitElementName(args.value);\r\n                break;\r\n            case \"isValid\":\r\n            case \"validationError\":\r\n            case \"validationErrors\":\r\n            case \"validationStatus\":\r\n                this.option(_validation_engine.default.synchronizeValidationOptions(args, this.option()));\r\n                this._renderValidationState();\r\n                break;\r\n            case \"validationBoundary\":\r\n            case \"validationMessageMode\":\r\n            case \"validationMessageOffset\":\r\n                this._setValidationMessageOption(args);\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this._setValidationMessageOption(args);\r\n                this.callBase(args);\r\n                break;\r\n            case \"validationTooltipOptions\":\r\n                this._innerWidgetOptionChanged(this._validationMessage, args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    reset: function() {\r\n        var defaultOptions = this._getDefaultOptions();\r\n        this.option(\"value\", defaultOptions.value)\r\n    }\r\n});\r\nvar _default = Editor;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/editor/ui.data_expression.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _variable_wrapper = _interopRequireDefault(require(\"../../core/utils/variable_wrapper\"));\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _data_helper = _interopRequireDefault(require(\"../../data_helper\"));\r\nvar _data_source = require(\"../../data/data_source/data_source\");\r\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nvar DataExpressionMixin = (0, _extend.extend)({}, _data_helper.default, {\r\n    _dataExpressionDefaultOptions: function() {\r\n        return {\r\n            items: [],\r\n            dataSource: null,\r\n            itemTemplate: \"item\",\r\n            value: null,\r\n            valueExpr: \"this\",\r\n            displayExpr: void 0\r\n        }\r\n    },\r\n    _initDataExpressions: function() {\r\n        this._compileValueGetter();\r\n        this._compileDisplayGetter();\r\n        this._initDynamicTemplates();\r\n        this._initDataSource();\r\n        this._itemsToDataSource()\r\n    },\r\n    _itemsToDataSource: function() {\r\n        if (!this.option(\"dataSource\")) {\r\n            this._dataSource = new _data_source.DataSource({\r\n                store: new _array_store.default(this.option(\"items\")),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _compileDisplayGetter: function() {\r\n        this._displayGetter = (0, _data.compileGetter)(this._displayGetterExpr())\r\n    },\r\n    _displayGetterExpr: function() {\r\n        return this.option(\"displayExpr\")\r\n    },\r\n    _compileValueGetter: function() {\r\n        this._valueGetter = (0, _data.compileGetter)(this._valueGetterExpr())\r\n    },\r\n    _valueGetterExpr: function() {\r\n        return this.option(\"valueExpr\") || \"this\"\r\n    },\r\n    _loadValue: function(value) {\r\n        var deferred = new _deferred.Deferred;\r\n        value = this._unwrappedValue(value);\r\n        if (!(0, _type.isDefined)(value)) {\r\n            return deferred.reject().promise()\r\n        }\r\n        this._loadSingle(this._valueGetterExpr(), value).done(function(item) {\r\n            this._isValueEquals(this._valueGetter(item), value) ? deferred.resolve(item) : deferred.reject()\r\n        }.bind(this)).fail(function() {\r\n            deferred.reject()\r\n        });\r\n        this._loadValueDeferred = deferred;\r\n        return deferred.promise()\r\n    },\r\n    _rejectValueLoading: function() {\r\n        var _this$_loadValueDefer;\r\n        null === (_this$_loadValueDefer = this._loadValueDeferred) || void 0 === _this$_loadValueDefer ? void 0 : _this$_loadValueDefer.reject({\r\n            shouldSkipCallback: true\r\n        })\r\n    },\r\n    _getCurrentValue: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _unwrappedValue: function(value) {\r\n        var _value;\r\n        value = null !== (_value = value) && void 0 !== _value ? _value : this._getCurrentValue();\r\n        if (value && this._dataSource && \"this\" === this._valueGetterExpr()) {\r\n            value = this._getItemKey(value)\r\n        }\r\n        return _variable_wrapper.default.unwrap(value)\r\n    },\r\n    _getItemKey: function(value) {\r\n        var key = this._dataSource.key();\r\n        if (Array.isArray(key)) {\r\n            var result = {};\r\n            for (var i = 0, n = key.length; i < n; i++) {\r\n                result[key[i]] = value[key[i]]\r\n            }\r\n            return result\r\n        }\r\n        if (key && \"object\" === _typeof(value)) {\r\n            value = value[key]\r\n        }\r\n        return value\r\n    },\r\n    _isValueEquals: function(value1, value2) {\r\n        var dataSourceKey = this._dataSource && this._dataSource.key();\r\n        var result = this._compareValues(value1, value2);\r\n        if (!result && dataSourceKey && (0, _type.isDefined)(value1) && (0, _type.isDefined)(value2)) {\r\n            if (Array.isArray(dataSourceKey)) {\r\n                result = this._compareByCompositeKey(value1, value2, dataSourceKey)\r\n            } else {\r\n                result = this._compareByKey(value1, value2, dataSourceKey)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _compareByCompositeKey: function(value1, value2, key) {\r\n        var isObject = _type.isObject;\r\n        if (!isObject(value1) || !isObject(value2)) {\r\n            return false\r\n        }\r\n        for (var i = 0, n = key.length; i < n; i++) {\r\n            if (value1[key[i]] !== value2[key[i]]) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _compareByKey: function(value1, value2, key) {\r\n        var unwrapObservable = _variable_wrapper.default.unwrap;\r\n        var valueKey1 = (0, _common.ensureDefined)(unwrapObservable(value1[key]), value1);\r\n        var valueKey2 = (0, _common.ensureDefined)(unwrapObservable(value2[key]), value2);\r\n        return this._compareValues(valueKey1, valueKey2)\r\n    },\r\n    _compareValues: function(value1, value2) {\r\n        return (0, _data.toComparable)(value1, true) === (0, _data.toComparable)(value2, true)\r\n    },\r\n    _initDynamicTemplates: _common.noop,\r\n    _setCollectionWidgetItemTemplate: function() {\r\n        this._initDynamicTemplates();\r\n        this._setCollectionWidgetOption(\"itemTemplate\", this.option(\"itemTemplate\"))\r\n    },\r\n    _getCollectionKeyExpr: function() {\r\n        var valueExpr = this.option(\"valueExpr\");\r\n        var isValueExprField = (0, _type.isString)(valueExpr) && \"this\" !== valueExpr || (0, _type.isFunction)(valueExpr);\r\n        return isValueExprField ? valueExpr : null\r\n    },\r\n    _dataExpressionOptionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"items\":\r\n                this._itemsToDataSource();\r\n                this._setCollectionWidgetOption(\"items\");\r\n                break;\r\n            case \"dataSource\":\r\n                this._initDataSource();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._setCollectionWidgetItemTemplate();\r\n                break;\r\n            case \"valueExpr\":\r\n                this._compileValueGetter();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._initDynamicTemplates();\r\n                this._setCollectionWidgetOption(\"displayExpr\")\r\n        }\r\n    }\r\n});\r\nvar _default = DataExpressionMixin;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/filter_builder.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _filter_builder = _interopRequireDefault(require(\"./filter_builder/filter_builder\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _filter_builder.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/filter_builder/between.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getConfig = getConfig;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FILTER_BUILDER_RANGE_CLASS = \"dx-filterbuilder-range\";\r\nvar FILTER_BUILDER_RANGE_START_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-start\";\r\nvar FILTER_BUILDER_RANGE_END_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-end\";\r\nvar FILTER_BUILDER_RANGE_SEPARATOR_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-separator\";\r\nvar SEPARATOR = \"\\u2013\";\r\n\r\nfunction editorTemplate(conditionInfo, container) {\r\n    var $editorStart = (0, _renderer.default)(\"<div>\").addClass(FILTER_BUILDER_RANGE_START_CLASS);\r\n    var $editorEnd = (0, _renderer.default)(\"<div>\").addClass(FILTER_BUILDER_RANGE_END_CLASS);\r\n    var values = conditionInfo.value || [];\r\n    var getStartValue = function(values) {\r\n        return values && values.length > 0 ? values[0] : null\r\n    };\r\n    var getEndValue = function(values) {\r\n        return values && 2 === values.length ? values[1] : null\r\n    };\r\n    container.append($editorStart);\r\n    container.append((0, _renderer.default)(\"<span>\").addClass(FILTER_BUILDER_RANGE_SEPARATOR_CLASS).text(SEPARATOR));\r\n    container.append($editorEnd);\r\n    container.addClass(FILTER_BUILDER_RANGE_CLASS);\r\n    this._editorFactory.createEditor.call(this, $editorStart, (0, _extend.extend)({}, conditionInfo.field, conditionInfo, {\r\n        value: getStartValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [value, getEndValue(values)];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }));\r\n    this._editorFactory.createEditor.call(this, $editorEnd, (0, _extend.extend)({}, conditionInfo.field, conditionInfo, {\r\n        value: getEndValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [getStartValue(values), value];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }))\r\n}\r\n\r\nfunction getConfig(caption, context) {\r\n    return {\r\n        name: \"between\",\r\n        caption: caption,\r\n        icon: \"range\",\r\n        valueSeparator: SEPARATOR,\r\n        dataTypes: [\"number\", \"date\", \"datetime\"],\r\n        editorTemplate: editorTemplate.bind(context),\r\n        notForLookup: true\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (ui/filter_builder/filter_builder.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _tree_view = _interopRequireDefault(require(\"../tree_view\"));\r\nvar _popup = _interopRequireDefault(require(\"../popup\"));\r\nvar _utils = require(\"../overlay/utils\");\r\nvar _ui2 = _interopRequireDefault(require(\"../shared/ui.editor_factory_mixin\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _utils2 = require(\"./utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_GROUP_CLASS = FILTER_BUILDER_CLASS + \"-group\";\r\nvar FILTER_BUILDER_GROUP_ITEM_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-item\";\r\nvar FILTER_BUILDER_GROUP_CONTENT_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-content\";\r\nvar FILTER_BUILDER_GROUP_OPERATIONS_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_GROUP_OPERATION_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operation\";\r\nvar FILTER_BUILDER_ACTION_CLASS = FILTER_BUILDER_CLASS + \"-action\";\r\nvar FILTER_BUILDER_IMAGE_CLASS = FILTER_BUILDER_ACTION_CLASS + \"-icon\";\r\nvar FILTER_BUILDER_IMAGE_ADD_CLASS = \"dx-icon-plus\";\r\nvar FILTER_BUILDER_IMAGE_REMOVE_CLASS = \"dx-icon-remove\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_FIELD_CLASS = FILTER_BUILDER_CLASS + \"-item-field\";\r\nvar FILTER_BUILDER_ITEM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-item-operation\";\r\nvar FILTER_BUILDER_ITEM_VALUE_CLASS = FILTER_BUILDER_CLASS + \"-item-value\";\r\nvar FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-item-value-text\";\r\nvar FILTER_BUILDER_OVERLAY_CLASS = FILTER_BUILDER_CLASS + \"-overlay\";\r\nvar FILTER_BUILDER_FILTER_OPERATIONS_CLASS = FILTER_BUILDER_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_FIELDS_CLASS = FILTER_BUILDER_CLASS + \"-fields\";\r\nvar FILTER_BUILDER_ADD_CONDITION_CLASS = FILTER_BUILDER_CLASS + \"-add-condition\";\r\nvar ACTIVE_CLASS = \"dx-state-active\";\r\nvar FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-menu-custom-operation\";\r\nvar SOURCE = \"filterBuilder\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar TAB_KEY = \"tab\";\r\nvar ENTER_KEY = \"enter\";\r\nvar ESCAPE_KEY = \"escape\";\r\nvar ACTIONS = [{\r\n    name: \"onEditorPreparing\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onEditorPrepared\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onValueChanged\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"]\r\n    }\r\n}];\r\nvar OPERATORS = {\r\n    and: \"and\",\r\n    or: \"or\",\r\n    notAnd: \"!and\",\r\n    notOr: \"!or\"\r\n};\r\nvar EditorFactory = _class.default.inherit(_ui2.default);\r\nvar FilterBuilder = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            onEditorPreparing: null,\r\n            onEditorPrepared: null,\r\n            onValueChanged: null,\r\n            fields: [],\r\n            defaultGroupOperation: \"and\",\r\n            groupOperations: [\"and\", \"or\", \"notAnd\", \"notOr\"],\r\n            maxGroupLevel: void 0,\r\n            value: null,\r\n            allowHierarchicalFields: false,\r\n            groupOperationDescriptions: {\r\n                and: _message.default.format(\"dxFilterBuilder-and\"),\r\n                or: _message.default.format(\"dxFilterBuilder-or\"),\r\n                notAnd: _message.default.format(\"dxFilterBuilder-notAnd\"),\r\n                notOr: _message.default.format(\"dxFilterBuilder-notOr\")\r\n            },\r\n            customOperations: [],\r\n            closePopupOnTargetScroll: true,\r\n            filterOperationDescriptions: {\r\n                between: _message.default.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                equal: _message.default.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                notEqual: _message.default.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                lessThan: _message.default.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                lessThanOrEqual: _message.default.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                greaterThan: _message.default.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                greaterThanOrEqual: _message.default.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                startsWith: _message.default.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                contains: _message.default.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                notContains: _message.default.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                endsWith: _message.default.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                isBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                isNotBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"closePopupOnTargetScroll\":\r\n                break;\r\n            case \"onEditorPreparing\":\r\n            case \"onEditorPrepared\":\r\n            case \"onValueChanged\":\r\n                this._initActions();\r\n                break;\r\n            case \"customOperations\":\r\n                this._initCustomOperations();\r\n                this._invalidate();\r\n                break;\r\n            case \"fields\":\r\n            case \"defaultGroupOperation\":\r\n            case \"maxGroupLevel\":\r\n            case \"groupOperations\":\r\n            case \"allowHierarchicalFields\":\r\n            case \"groupOperationDescriptions\":\r\n            case \"filterOperationDescriptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                if (args.value !== args.previousValue) {\r\n                    var disableInvalidateForValue = this._disableInvalidateForValue;\r\n                    if (!disableInvalidateForValue) {\r\n                        this._initModel();\r\n                        this._invalidate()\r\n                    }\r\n                    this._disableInvalidateForValue = false;\r\n                    this.executeAction(\"onValueChanged\", {\r\n                        value: args.value,\r\n                        previousValue: args.previousValue\r\n                    });\r\n                    this._disableInvalidateForValue = disableInvalidateForValue\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getFilterExpression: function() {\r\n        var fields = this._getNormalizedFields();\r\n        var value = (0, _extend.extend)(true, [], this._model);\r\n        return (0, _utils2.getFilterExpression)((0, _utils2.getNormalizedFilter)(value), fields, this._customOperations, SOURCE)\r\n    },\r\n    _getNormalizedFields: function() {\r\n        return (0, _utils2.getNormalizedFields)(this.option(\"fields\"))\r\n    },\r\n    _updateFilter: function() {\r\n        this._disableInvalidateForValue = true;\r\n        var value = (0, _extend.extend)(true, [], this._model);\r\n        var normalizedValue = (0, _utils2.getNormalizedFilter)(value);\r\n        var oldValue = (0, _utils2.getNormalizedFilter)(this._getModel(this.option(\"value\")));\r\n        if (JSON.stringify(oldValue) !== JSON.stringify(normalizedValue)) {\r\n            this.option(\"value\", normalizedValue)\r\n        }\r\n        this._disableInvalidateForValue = false;\r\n        this._fireContentReadyAction()\r\n    },\r\n    _init: function() {\r\n        this._initCustomOperations();\r\n        this._initModel();\r\n        this._initEditorFactory();\r\n        this._initActions();\r\n        this.callBase()\r\n    },\r\n    _initEditorFactory: function() {\r\n        this._editorFactory = new EditorFactory\r\n    },\r\n    _initCustomOperations: function() {\r\n        this._customOperations = (0, _utils2.getMergedOperations)(this.option(\"customOperations\"), this.option(\"filterOperationDescriptions.between\"), this)\r\n    },\r\n    _getModel: function(value) {\r\n        return (0, _utils2.convertToInnerStructure)(value, this._customOperations)\r\n    },\r\n    _initModel: function() {\r\n        this._model = this._getModel(this.option(\"value\"))\r\n    },\r\n    _initActions: function() {\r\n        var that = this;\r\n        that._actions = {};\r\n        ACTIONS.forEach(function(action) {\r\n            var actionConfig = (0, _extend.extend)({}, action.config);\r\n            that._actions[action.name] = that._createActionByOption(action.name, actionConfig)\r\n        })\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(FILTER_BUILDER_CLASS);\r\n        this.callBase();\r\n        this._createGroupElementByCriteria(this._model).appendTo(this.$element())\r\n    },\r\n    _createConditionElement: function(condition, parent) {\r\n        return (0, _renderer.default)(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append(this._createConditionItem(condition, parent))\r\n    },\r\n    _createGroupElementByCriteria: function(criteria, parent) {\r\n        var groupLevel = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\r\n        var $group = this._createGroupElement(criteria, parent, groupLevel);\r\n        var $groupContent = $group.find(\".\" + FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var groupCriteria = (0, _utils2.getGroupCriteria)(criteria);\r\n        for (var i = 0; i < groupCriteria.length; i++) {\r\n            var innerCriteria = groupCriteria[i];\r\n            if ((0, _utils2.isGroup)(innerCriteria)) {\r\n                this._createGroupElementByCriteria(innerCriteria, criteria, groupLevel + 1).appendTo($groupContent)\r\n            } else {\r\n                if ((0, _utils2.isCondition)(innerCriteria)) {\r\n                    this._createConditionElement(innerCriteria, criteria).appendTo($groupContent)\r\n                }\r\n            }\r\n        }\r\n        return $group\r\n    },\r\n    _createGroupElement: function(criteria, parent, groupLevel) {\r\n        var _this = this;\r\n        var $groupItem = (0, _renderer.default)(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var $groupContent = (0, _renderer.default)(\"<div>\").addClass(FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var $group = (0, _renderer.default)(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append($groupItem).append($groupContent);\r\n        if (null != parent) {\r\n            this._createRemoveButton(function() {\r\n                (0, _utils2.removeItem)(parent, criteria);\r\n                $group.remove();\r\n                _this._updateFilter()\r\n            }).appendTo($groupItem)\r\n        }\r\n        this._createGroupOperationButton(criteria).appendTo($groupItem);\r\n        this._createAddButton(function() {\r\n            var newGroup = (0, _utils2.createEmptyGroup)(_this.option(\"defaultGroupOperation\"));\r\n            (0, _utils2.addItem)(newGroup, criteria);\r\n            _this._createGroupElement(newGroup, criteria, groupLevel + 1).appendTo($groupContent);\r\n            _this._updateFilter()\r\n        }, function() {\r\n            var field = _this.option(\"fields\")[0];\r\n            var newCondition = (0, _utils2.createCondition)(field, _this._customOperations);\r\n            (0, _utils2.addItem)(newCondition, criteria);\r\n            _this._createConditionElement(newCondition, criteria).appendTo($groupContent);\r\n            _this._updateFilter()\r\n        }, groupLevel).appendTo($groupItem);\r\n        return $group\r\n    },\r\n    _createButton: function(caption) {\r\n        return (0, _renderer.default)(\"<div>\").text(caption)\r\n    },\r\n    _createGroupOperationButton: function(criteria) {\r\n        var _this2 = this;\r\n        var groupOperations = this._getGroupOperations(criteria);\r\n        var groupMenuItem = (0, _utils2.getGroupMenuItem)(criteria, groupOperations);\r\n        var caption = groupMenuItem.text;\r\n        var $operationButton = groupOperations && groupOperations.length < 2 ? this._createButton(caption).addClass(DISABLED_STATE_CLASS) : this._createButtonWithMenu({\r\n            caption: caption,\r\n            menu: {\r\n                items: groupOperations,\r\n                displayExpr: \"text\",\r\n                keyExpr: \"value\",\r\n                onItemClick: function(e) {\r\n                    if (groupMenuItem !== e.itemData) {\r\n                        (0, _utils2.setGroupValue)(criteria, e.itemData.value);\r\n                        $operationButton.html(e.itemData.text);\r\n                        groupMenuItem = e.itemData;\r\n                        _this2._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(groupMenuItem)\r\n                },\r\n                cssClass: FILTER_BUILDER_GROUP_OPERATIONS_CLASS\r\n            }\r\n        });\r\n        return $operationButton.addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_GROUP_OPERATION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createButtonWithMenu: function(options) {\r\n        var that = this;\r\n        var removeMenu = function() {\r\n            that.$element().find(\".\" + ACTIVE_CLASS).removeClass(ACTIVE_CLASS);\r\n            that.$element().find(\".dx-overlay .dx-treeview\").remove();\r\n            that.$element().find(\".dx-overlay\").remove()\r\n        };\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var menuOnItemClickWrapper = function(handler) {\r\n            return function(e) {\r\n                handler(e);\r\n                if (\"dxclick\" === e.event.type) {\r\n                    removeMenu()\r\n                }\r\n            }\r\n        };\r\n        var position = rtlEnabled ? \"right\" : \"left\";\r\n        var $button = this._createButton(options.caption);\r\n        (0, _extend.extend)(options.menu, {\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            onItemClick: menuOnItemClickWrapper(options.menu.onItemClick),\r\n            onHiding: function(e) {\r\n                $button.removeClass(ACTIVE_CLASS)\r\n            },\r\n            position: {\r\n                my: position + \" top\",\r\n                at: position + \" bottom\",\r\n                offset: \"0 1\",\r\n                of: $button,\r\n                collision: \"flip\"\r\n            },\r\n            animation: null,\r\n            onHidden: function() {\r\n                removeMenu()\r\n            },\r\n            cssClass: FILTER_BUILDER_OVERLAY_CLASS + \" \" + options.menu.cssClass,\r\n            rtlEnabled: rtlEnabled\r\n        });\r\n        options.popup = {\r\n            onShown: function(info) {\r\n                var treeViewElement = (0, _renderer.default)(info.component.content()).find(\".dx-treeview\");\r\n                var treeView = treeViewElement.dxTreeView(\"instance\");\r\n                _events_engine.default.on(treeViewElement, \"keyup keydown\", function(e) {\r\n                    var keyName = (0, _index.normalizeKeyName)(e);\r\n                    if (\"keydown\" === e.type && keyName === TAB_KEY || \"keyup\" === e.type && (keyName === ESCAPE_KEY || keyName === ENTER_KEY)) {\r\n                        info.component.hide();\r\n                        _events_engine.default.trigger(options.menu.position.of, \"focus\")\r\n                    }\r\n                });\r\n                treeView.focus();\r\n                treeView.option(\"focusedElement\", null)\r\n            }\r\n        };\r\n        this._subscribeOnClickAndEnterKey($button, function() {\r\n            removeMenu();\r\n            that._createPopupWithTreeView(options, that.$element());\r\n            $button.addClass(ACTIVE_CLASS)\r\n        });\r\n        return $button\r\n    },\r\n    _hasValueButton: function(condition) {\r\n        var customOperation = (0, _utils2.getCustomOperation)(this._customOperations, condition[1]);\r\n        return customOperation ? false !== customOperation.hasValue : null !== condition[2]\r\n    },\r\n    _createOperationButtonWithMenu: function(condition, field) {\r\n        var _this3 = this;\r\n        var that = this;\r\n        var availableOperations = (0, _utils2.getAvailableOperations)(field, this.option(\"filterOperationDescriptions\"), this._customOperations);\r\n        var currentOperation = (0, _utils2.getOperationFromAvailable)((0, _utils2.getOperationValue)(condition), availableOperations);\r\n        var $operationButton = this._createButtonWithMenu({\r\n            caption: currentOperation.text,\r\n            menu: {\r\n                items: availableOperations,\r\n                displayExpr: \"text\",\r\n                onItemRendered: function(e) {\r\n                    e.itemData.isCustom && (0, _renderer.default)(e.itemElement).addClass(FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS)\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(currentOperation)\r\n                },\r\n                onItemClick: function(e) {\r\n                    if (currentOperation !== e.itemData) {\r\n                        currentOperation = e.itemData;\r\n                        (0, _utils2.updateConditionByOperation)(condition, currentOperation.value, that._customOperations);\r\n                        var $valueButton = $operationButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n                        if (that._hasValueButton(condition)) {\r\n                            if (0 !== $valueButton.length) {\r\n                                $valueButton.remove()\r\n                            }\r\n                            that._createValueButton(condition, field).appendTo($operationButton.parent())\r\n                        } else {\r\n                            $valueButton.remove()\r\n                        }\r\n                        $operationButton.html(currentOperation.text);\r\n                        _this3._updateFilter()\r\n                    }\r\n                },\r\n                cssClass: FILTER_BUILDER_FILTER_OPERATIONS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_OPERATION_CLASS).attr(\"tabindex\", 0);\r\n        return $operationButton\r\n    },\r\n    _createOperationAndValueButtons: function(condition, field, $item) {\r\n        this._createOperationButtonWithMenu(condition, field).appendTo($item);\r\n        if (this._hasValueButton(condition)) {\r\n            this._createValueButton(condition, field).appendTo($item)\r\n        }\r\n    },\r\n    _createFieldButtonWithMenu: function(fields, condition, field) {\r\n        var _this4 = this;\r\n        var that = this;\r\n        var allowHierarchicalFields = this.option(\"allowHierarchicalFields\");\r\n        var items = (0, _utils2.getItems)(fields, allowHierarchicalFields);\r\n        var item = (0, _utils2.getField)(field.name || field.dataField, items);\r\n        var getFullCaption = function(item, items) {\r\n            return allowHierarchicalFields ? (0, _utils2.getCaptionWithParents)(item, items) : item.caption\r\n        };\r\n        var $fieldButton = this._createButtonWithMenu({\r\n            caption: getFullCaption(item, items),\r\n            menu: {\r\n                items: items,\r\n                dataStructure: \"plain\",\r\n                keyExpr: \"id\",\r\n                parentId: \"parentId\",\r\n                displayExpr: \"caption\",\r\n                onItemClick: function(e) {\r\n                    if (item !== e.itemData) {\r\n                        item = e.itemData;\r\n                        condition[0] = item.name || item.dataField;\r\n                        condition[2] = \"object\" === item.dataType ? null : \"\";\r\n                        (0, _utils2.updateConditionByOperation)(condition, (0, _utils2.getDefaultOperation)(item), that._customOperations);\r\n                        $fieldButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_TEXT_CLASS).remove();\r\n                        that._createOperationAndValueButtons(condition, item, $fieldButton.parent());\r\n                        var caption = getFullCaption(item, e.component.option(\"items\"));\r\n                        $fieldButton.html(caption);\r\n                        _this4._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(item)\r\n                },\r\n                cssClass: FILTER_BUILDER_FIELDS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_FIELD_CLASS).attr(\"tabindex\", 0);\r\n        return $fieldButton\r\n    },\r\n    _createConditionItem: function(condition, parent) {\r\n        var _this5 = this;\r\n        var $item = (0, _renderer.default)(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var fields = this._getNormalizedFields();\r\n        var field = (0, _utils2.getField)(condition[0], fields);\r\n        this._createRemoveButton(function() {\r\n            (0, _utils2.removeItem)(parent, condition);\r\n            var isSingleChild = 1 === $item.parent().children().length;\r\n            if (isSingleChild) {\r\n                $item.parent().remove()\r\n            } else {\r\n                $item.remove()\r\n            }\r\n            _this5._updateFilter()\r\n        }).appendTo($item);\r\n        this._createFieldButtonWithMenu(fields, condition, field).appendTo($item);\r\n        this._createOperationAndValueButtons(condition, field, $item);\r\n        return $item\r\n    },\r\n    _getGroupOperations: function(criteria) {\r\n        var groupOperations = this.option(\"groupOperations\");\r\n        var groupOperationDescriptions = this.option(\"groupOperationDescriptions\");\r\n        if (!groupOperations || !groupOperations.length) {\r\n            groupOperations = [(0, _utils2.getGroupValue)(criteria).replace(\"!\", \"not\")]\r\n        }\r\n        return groupOperations.map(function(operation) {\r\n            return {\r\n                text: groupOperationDescriptions[operation],\r\n                value: OPERATORS[operation]\r\n            }\r\n        })\r\n    },\r\n    _createRemoveButton: function(handler) {\r\n        var $removeButton = (0, _renderer.default)(\"<div>\").addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_REMOVE_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0);\r\n        this._subscribeOnClickAndEnterKey($removeButton, handler);\r\n        return $removeButton\r\n    },\r\n    _createAddButton: function(addGroupHandler, addConditionHandler, groupLevel) {\r\n        var $button;\r\n        var maxGroupLevel = this.option(\"maxGroupLevel\");\r\n        if ((0, _type.isDefined)(maxGroupLevel) && groupLevel >= maxGroupLevel) {\r\n            $button = this._createButton();\r\n            this._subscribeOnClickAndEnterKey($button, addConditionHandler)\r\n        } else {\r\n            $button = this._createButtonWithMenu({\r\n                menu: {\r\n                    items: [{\r\n                        caption: _message.default.format(\"dxFilterBuilder-addCondition\"),\r\n                        click: addConditionHandler\r\n                    }, {\r\n                        caption: _message.default.format(\"dxFilterBuilder-addGroup\"),\r\n                        click: addGroupHandler\r\n                    }],\r\n                    displayExpr: \"caption\",\r\n                    onItemClick: function(e) {\r\n                        e.itemData.click()\r\n                    },\r\n                    cssClass: FILTER_BUILDER_ADD_CONDITION_CLASS\r\n                }\r\n            })\r\n        }\r\n        return $button.addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_ADD_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createValueText: function(item, field, $container) {\r\n        var that = this;\r\n        var $text = (0, _renderer.default)(\"<div>\").html(\"&nbsp;\").addClass(FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS).attr(\"tabindex\", 0).appendTo($container);\r\n        var value = item[2];\r\n        var customOperation = (0, _utils2.getCustomOperation)(that._customOperations, item[1]);\r\n        if (!customOperation && field.lookup) {\r\n            (0, _utils2.getCurrentLookupValueText)(field, value, function(result) {\r\n                (0, _utils2.renderValueText)($text, result)\r\n            })\r\n        } else {\r\n            (0, _deferred.when)((0, _utils2.getCurrentValueText)(field, value, customOperation)).done(function(result) {\r\n                (0, _utils2.renderValueText)($text, result, customOperation)\r\n            })\r\n        }\r\n        that._subscribeOnClickAndEnterKey($text, function(e) {\r\n            if (\"keyup\" === e.type) {\r\n                e.stopPropagation()\r\n            }\r\n            that._createValueEditorWithEvents(item, field, $container)\r\n        });\r\n        return $text\r\n    },\r\n    _updateConditionValue: function(item, value, callback) {\r\n        var areValuesDifferent = item[2] !== value;\r\n        if (areValuesDifferent) {\r\n            item[2] = value\r\n        }\r\n        callback();\r\n        this._updateFilter()\r\n    },\r\n    _addDocumentKeyUp: function($editor, handler) {\r\n        var isComposing = false;\r\n        var hasCompositionJustEnded = false;\r\n        var document = _dom_adapter.default.getDocument();\r\n        var documentKeyUpHandler = function(e) {\r\n            if (isComposing || hasCompositionJustEnded) {\r\n                hasCompositionJustEnded = false;\r\n                return\r\n            }\r\n            handler(e)\r\n        };\r\n        _events_engine.default.on(document, \"keyup\", documentKeyUpHandler);\r\n        var input = $editor.find(\"input\");\r\n        _events_engine.default.on(input, \"compositionstart\", function() {\r\n            isComposing = true\r\n        });\r\n        _events_engine.default.on(input, \"compositionend\", function() {\r\n            isComposing = false;\r\n            hasCompositionJustEnded = true\r\n        });\r\n        _events_engine.default.on(input, \"keydown\", function(event) {\r\n            if (229 !== event.which) {\r\n                hasCompositionJustEnded = false\r\n            }\r\n        });\r\n        this._documentKeyUpHandler = documentKeyUpHandler\r\n    },\r\n    _addDocumentClick: function($editor, closeEditorFunc) {\r\n        var _this6 = this;\r\n        var document = _dom_adapter.default.getDocument();\r\n        var documentClickHandler = function(e) {\r\n            if (!_this6._isFocusOnEditorParts($editor, e.target)) {\r\n                _events_engine.default.trigger($editor.find(\"input\"), \"change\");\r\n                closeEditorFunc()\r\n            }\r\n        };\r\n        _events_engine.default.on(document, \"dxpointerdown\", documentClickHandler);\r\n        this._documentClickHandler = documentClickHandler\r\n    },\r\n    _isFocusOnEditorParts: function($editor, target) {\r\n        var activeElement = target || _dom_adapter.default.getActiveElement();\r\n        return (0, _renderer.default)(activeElement).closest($editor.children()).length || (0, _renderer.default)(activeElement).closest(\".dx-dropdowneditor-overlay\").length\r\n    },\r\n    _removeEvents: function() {\r\n        var document = _dom_adapter.default.getDocument();\r\n        (0, _type.isDefined)(this._documentKeyUpHandler) && _events_engine.default.off(document, \"keyup\", this._documentKeyUpHandler);\r\n        (0, _type.isDefined)(this._documentClickHandler) && _events_engine.default.off(document, \"dxpointerdown\", this._documentClickHandler)\r\n    },\r\n    _dispose: function() {\r\n        this._removeEvents();\r\n        this.callBase()\r\n    },\r\n    _createValueEditorWithEvents: function(item, field, $container) {\r\n        var _this7 = this;\r\n        var value = item[2];\r\n        var createValueText = function() {\r\n            $container.empty();\r\n            _this7._removeEvents();\r\n            return _this7._createValueText(item, field, $container)\r\n        };\r\n        var closeEditor = function() {\r\n            _this7._updateConditionValue(item, value, function() {\r\n                createValueText()\r\n            })\r\n        };\r\n        var options = {\r\n            value: \"\" === value ? null : value,\r\n            filterOperation: (0, _utils2.getOperationValue)(item),\r\n            setValue: function(data) {\r\n                value = null === data ? \"\" : data\r\n            },\r\n            closeEditor: closeEditor,\r\n            text: $container.text()\r\n        };\r\n        $container.empty();\r\n        var $editor = this._createValueEditor($container, field, options);\r\n        _events_engine.default.trigger($editor.find(\"input\").not(\":hidden\").eq(0), \"focus\");\r\n        this._removeEvents();\r\n        this._addDocumentClick($editor, closeEditor);\r\n        this._addDocumentKeyUp($editor, function(e) {\r\n            var keyName = (0, _index.normalizeKeyName)(e);\r\n            if (keyName === TAB_KEY) {\r\n                if (_this7._isFocusOnEditorParts($editor)) {\r\n                    return\r\n                }\r\n                _this7._updateConditionValue(item, value, function() {\r\n                    createValueText();\r\n                    if (e.shiftKey) {\r\n                        _events_engine.default.trigger($container.prev(), \"focus\")\r\n                    }\r\n                })\r\n            }\r\n            if (keyName === ESCAPE_KEY) {\r\n                _events_engine.default.trigger(createValueText(), \"focus\")\r\n            }\r\n            if (keyName === ENTER_KEY) {\r\n                _this7._updateConditionValue(item, value, function() {\r\n                    _events_engine.default.trigger(createValueText(), \"focus\")\r\n                })\r\n            }\r\n        });\r\n        this._fireContentReadyAction()\r\n    },\r\n    _createValueButton: function(item, field) {\r\n        var $valueButton = (0, _renderer.default)(\"<div>\").addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n        this._createValueText(item, field, $valueButton);\r\n        return $valueButton\r\n    },\r\n    _createValueEditor: function($container, field, options) {\r\n        var $editor = (0, _renderer.default)(\"<div>\").attr(\"tabindex\", 0).appendTo($container);\r\n        var customOperation = (0, _utils2.getCustomOperation)(this._customOperations, options.filterOperation);\r\n        var editorTemplate = customOperation && customOperation.editorTemplate ? customOperation.editorTemplate : field.editorTemplate;\r\n        if (editorTemplate) {\r\n            var template = this._getTemplate(editorTemplate);\r\n            template.render({\r\n                model: (0, _extend.extend)({\r\n                    field: field\r\n                }, options),\r\n                container: $editor\r\n            })\r\n        } else {\r\n            this._editorFactory.createEditor.call(this, $editor, (0, _extend.extend)({}, field, options, {\r\n                parentType: SOURCE\r\n            }))\r\n        }\r\n        return $editor\r\n    },\r\n    _createPopupWithTreeView: function(options, $container) {\r\n        var that = this;\r\n        var $popup = (0, _renderer.default)(\"<div>\").addClass(options.menu.cssClass).appendTo($container);\r\n        this._createComponent($popup, _popup.default, {\r\n            onHiding: options.menu.onHiding,\r\n            onHidden: options.menu.onHidden,\r\n            rtlEnabled: options.menu.rtlEnabled,\r\n            position: options.menu.position,\r\n            animation: options.menu.animation,\r\n            contentTemplate: function(contentElement) {\r\n                var $menuContainer = (0, _renderer.default)(\"<div>\").appendTo(contentElement);\r\n                that._createComponent($menuContainer, _tree_view.default, options.menu);\r\n                this.repaint()\r\n            },\r\n            maxHeight: function() {\r\n                return (0, _utils.getElementMaxHeightByWindow)(options.menu.position.of)\r\n            },\r\n            visible: true,\r\n            focusStateEnabled: false,\r\n            closeOnTargetScroll: this.option(\"closePopupOnTargetScroll\"),\r\n            closeOnOutsideClick: true,\r\n            onShown: options.popup.onShown,\r\n            shading: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            showTitle: false\r\n        })\r\n    },\r\n    _subscribeOnClickAndEnterKey: function($button, handler) {\r\n        _events_engine.default.on($button, \"dxclick\", handler);\r\n        _events_engine.default.on($button, \"keyup\", function(e) {\r\n            if ((0, _index.normalizeKeyName)(e) === ENTER_KEY) {\r\n                handler(e)\r\n            }\r\n        })\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxFilterBuilder\", FilterBuilder);\r\nvar _default = FilterBuilder;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/filter_builder/ui.filter_operations_dictionary.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notequal\",\r\n    \"<\": \"less\",\r\n    \"<=\": \"lessorequal\",\r\n    \">\": \"greater\",\r\n    \">=\": \"greaterorequal\",\r\n    notcontains: \"doesnotcontain\",\r\n    contains: \"contains\",\r\n    startswith: \"startswith\",\r\n    endswith: \"endswith\",\r\n    isblank: \"isblank\",\r\n    isnotblank: \"isnotblank\"\r\n};\r\nvar OPERATION_NAME = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    isblank: \"isBlank\",\r\n    isnotblank: \"isNotBlank\",\r\n    between: \"between\"\r\n};\r\nvar _default = {\r\n    getIconByFilterOperation: function(filterOperation) {\r\n        return OPERATION_ICONS[filterOperation]\r\n    },\r\n    getNameByFilterOperation: function(filterOperation) {\r\n        return OPERATION_NAME[filterOperation]\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/filter_builder/utils.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.addItem = addItem;\r\nexports.convertToInnerStructure = convertToInnerStructure;\r\nexports.createCondition = createCondition;\r\nexports.createEmptyGroup = createEmptyGroup;\r\nexports.filterHasField = filterHasField;\r\nexports.getAvailableOperations = getAvailableOperations;\r\nexports.getCaptionByOperation = getCaptionByOperation;\r\nexports.getCaptionWithParents = getCaptionWithParents;\r\nexports.getCurrentLookupValueText = getCurrentLookupValueText;\r\nexports.getCurrentValueText = getCurrentValueText;\r\nexports.getCustomOperation = getCustomOperation;\r\nexports.getDefaultOperation = getDefaultOperation;\r\nexports.getField = getField;\r\nexports.getFilterExpression = getFilterExpression;\r\nexports.getFilterOperations = getFilterOperations;\r\nexports.getGroupCriteria = getGroupCriteria;\r\nexports.getGroupMenuItem = getGroupMenuItem;\r\nexports.getGroupValue = getGroupValue;\r\nexports.getItems = getItems;\r\nexports.getMatchedConditions = getMatchedConditions;\r\nexports.getMergedOperations = getMergedOperations;\r\nexports.getNormalizedFields = getNormalizedFields;\r\nexports.getNormalizedFilter = getNormalizedFilter;\r\nexports.getOperationFromAvailable = getOperationFromAvailable;\r\nexports.getOperationValue = getOperationValue;\r\nexports.isCondition = isCondition;\r\nexports.isEmptyGroup = isEmptyGroup;\r\nexports.isGroup = isGroup;\r\nexports.isValidCondition = isValidCondition;\r\nexports.removeFieldConditionsFromFilter = removeFieldConditionsFromFilter;\r\nexports.removeItem = removeItem;\r\nexports.renderValueText = void 0;\r\nexports.setGroupValue = setGroupValue;\r\nexports.syncFilters = syncFilters;\r\nexports.updateConditionByOperation = updateConditionByOperation;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _errors = _interopRequireDefault(require(\"../../data/errors\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _filtering = _interopRequireDefault(require(\"../shared/filtering\"));\r\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _inflector = require(\"../../core/utils/inflector\");\r\nvar _between = require(\"./between\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _data_source = require(\"../../data/data_source/data_source\");\r\nvar _ui2 = _interopRequireDefault(require(\"./ui.filter_operations_dictionary\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DEFAULT_DATA_TYPE = \"string\";\r\nvar EMPTY_MENU_ICON = \"icon-none\";\r\nvar AND_GROUP_OPERATION = \"and\";\r\nvar EQUAL_OPERATION = \"=\";\r\nvar NOT_EQUAL_OPERATION = \"<>\";\r\nvar DATATYPE_OPERATIONS = {\r\n    number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    \"boolean\": [\"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    object: [\"isblank\", \"isnotblank\"]\r\n};\r\nvar DEFAULT_FORMAT = {\r\n    date: \"shortDate\",\r\n    datetime: \"shortDateShortTime\"\r\n};\r\nvar LOOKUP_OPERATIONS = [\"=\", \"<>\", \"isblank\", \"isnotblank\"];\r\nvar AVAILABLE_FIELD_PROPERTIES = [\"caption\", \"customizeText\", \"dataField\", \"dataType\", \"editorTemplate\", \"falseText\", \"editorOptions\", \"filterOperations\", \"format\", \"lookup\", \"trueText\", \"calculateFilterExpression\", \"name\"];\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_TEXT_PART_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-part\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-separator\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS = FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS + \"-empty\";\r\n\r\nfunction getFormattedValueText(field, value) {\r\n    var fieldFormat = field.format || DEFAULT_FORMAT[field.dataType];\r\n    return _format_helper.default.format(value, fieldFormat)\r\n}\r\n\r\nfunction isNegationGroup(group) {\r\n    return group && group.length > 1 && \"!\" === group[0] && !isCondition(group)\r\n}\r\n\r\nfunction getGroupCriteria(group) {\r\n    return isNegationGroup(group) ? group[1] : group\r\n}\r\n\r\nfunction setGroupCriteria(group, criteria) {\r\n    if (isNegationGroup(group)) {\r\n        group[1] = criteria\r\n    } else {\r\n        group = criteria\r\n    }\r\n    return group\r\n}\r\n\r\nfunction convertGroupToNewStructure(group, value) {\r\n    var isNegationValue = function(value) {\r\n        return value.indexOf(\"!\") !== -1\r\n    };\r\n    var convertGroupToNegationGroup = function(group) {\r\n        var criteria = group.slice(0);\r\n        group.length = 0;\r\n        group.push(\"!\", criteria)\r\n    };\r\n    var convertNegationGroupToGroup = function(group) {\r\n        var criteria = getGroupCriteria(group);\r\n        group.length = 0;\r\n        [].push.apply(group, criteria)\r\n    };\r\n    if (isNegationValue(value)) {\r\n        if (!isNegationGroup(group)) {\r\n            convertGroupToNegationGroup(group)\r\n        }\r\n    } else {\r\n        if (isNegationGroup(group)) {\r\n            convertNegationGroupToGroup(group)\r\n        }\r\n    }\r\n}\r\n\r\nfunction setGroupValue(group, value) {\r\n    convertGroupToNewStructure(group, value);\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    var getNormalizedGroupValue = function(value) {\r\n        return value.indexOf(\"!\") === -1 ? value : value.substring(1)\r\n    };\r\n    var changeCriteriaValue = function(criteria, value) {\r\n        for (i = 0; i < criteria.length; i++) {\r\n            if (!Array.isArray(criteria[i])) {\r\n                criteria[i] = value\r\n            }\r\n        }\r\n    };\r\n    value = getNormalizedGroupValue(value);\r\n    changeCriteriaValue(criteria, value);\r\n    return group\r\n}\r\n\r\nfunction getGroupMenuItem(group, availableGroups) {\r\n    var groupValue = getGroupValue(group);\r\n    return availableGroups.filter(function(item) {\r\n        return item.value === groupValue\r\n    })[0]\r\n}\r\n\r\nfunction getCriteriaOperation(criteria) {\r\n    if (isCondition(criteria)) {\r\n        return AND_GROUP_OPERATION\r\n    }\r\n    var value = \"\";\r\n    for (var i = 0; i < criteria.length; i++) {\r\n        var item = criteria[i];\r\n        if (!Array.isArray(item)) {\r\n            if (value && value !== item) {\r\n                throw new _errors.default.errors.Error(\"E4019\")\r\n            }\r\n            if (\"!\" !== item) {\r\n                value = item\r\n            }\r\n        }\r\n    }\r\n    return value\r\n}\r\n\r\nfunction getGroupValue(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var value = getCriteriaOperation(criteria);\r\n    if (!value) {\r\n        value = AND_GROUP_OPERATION\r\n    }\r\n    if (criteria !== group) {\r\n        value = \"!\" + value\r\n    }\r\n    return value\r\n}\r\n\r\nfunction getDefaultFilterOperations(field) {\r\n    return field.lookup && LOOKUP_OPERATIONS || DATATYPE_OPERATIONS[field.dataType || DEFAULT_DATA_TYPE]\r\n}\r\n\r\nfunction containItems(entity) {\r\n    return Array.isArray(entity) && entity.length\r\n}\r\n\r\nfunction getFilterOperations(field) {\r\n    var result = containItems(field.filterOperations) ? field.filterOperations : getDefaultFilterOperations(field);\r\n    return (0, _extend.extend)([], result)\r\n}\r\n\r\nfunction getCaptionByOperation(operation, filterOperationDescriptions) {\r\n    var operationName = _ui2.default.getNameByFilterOperation(operation);\r\n    return filterOperationDescriptions && filterOperationDescriptions[operationName] ? filterOperationDescriptions[operationName] : operationName\r\n}\r\n\r\nfunction getOperationFromAvailable(operation, availableOperations) {\r\n    for (var i = 0; i < availableOperations.length; i++) {\r\n        if (availableOperations[i].value === operation) {\r\n            return availableOperations[i]\r\n        }\r\n    }\r\n    throw new _ui.default.Error(\"E1048\", operation)\r\n}\r\n\r\nfunction getCustomOperation(customOperations, name) {\r\n    var filteredOperations = customOperations.filter(function(item) {\r\n        return item.name === name\r\n    });\r\n    return filteredOperations.length ? filteredOperations[0] : null\r\n}\r\n\r\nfunction getAvailableOperations(field, filterOperationDescriptions, customOperations) {\r\n    var filterOperations = getFilterOperations(field);\r\n    var isLookupField = !!field.lookup;\r\n    customOperations.forEach(function(customOperation) {\r\n        if (!field.filterOperations && filterOperations.indexOf(customOperation.name) === -1) {\r\n            var dataTypes = customOperation && customOperation.dataTypes;\r\n            var isOperationForbidden = isLookupField ? !!customOperation.notForLookup : false;\r\n            if (!isOperationForbidden && dataTypes && dataTypes.indexOf(field.dataType || DEFAULT_DATA_TYPE) >= 0) {\r\n                filterOperations.push(customOperation.name)\r\n            }\r\n        }\r\n    });\r\n    return filterOperations.map(function(operation) {\r\n        var customOperation = getCustomOperation(customOperations, operation);\r\n        if (customOperation) {\r\n            return {\r\n                icon: customOperation.icon || EMPTY_MENU_ICON,\r\n                text: customOperation.caption || (0, _inflector.captionize)(customOperation.name),\r\n                value: customOperation.name,\r\n                isCustom: true\r\n            }\r\n        } else {\r\n            return {\r\n                icon: _ui2.default.getIconByFilterOperation(operation) || EMPTY_MENU_ICON,\r\n                text: getCaptionByOperation(operation, filterOperationDescriptions),\r\n                value: operation\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction getDefaultOperation(field) {\r\n    return field.defaultFilterOperation || getFilterOperations(field)[0]\r\n}\r\n\r\nfunction createCondition(field, customOperations) {\r\n    var condition = [field.dataField, \"\", \"\"];\r\n    var filterOperation = getDefaultOperation(field);\r\n    updateConditionByOperation(condition, filterOperation, customOperations);\r\n    return condition\r\n}\r\n\r\nfunction removeItem(group, item) {\r\n    var criteria = getGroupCriteria(group);\r\n    var index = criteria.indexOf(item);\r\n    criteria.splice(index, 1);\r\n    if (1 !== criteria.length) {\r\n        criteria.splice(index, 1)\r\n    }\r\n    return group\r\n}\r\n\r\nfunction createEmptyGroup(value) {\r\n    return value.indexOf(\"not\") !== -1 ? [\"!\", [value.substring(3).toLowerCase()]] : [value]\r\n}\r\n\r\nfunction isEmptyGroup(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    if (isCondition(criteria)) {\r\n        return false\r\n    }\r\n    var hasConditions = criteria.some(function(item) {\r\n        return isCondition(item)\r\n    });\r\n    return !hasConditions\r\n}\r\n\r\nfunction addItem(item, group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var groupValue = getGroupValue(criteria);\r\n    1 === criteria.length ? criteria.unshift(item) : criteria.push(item, groupValue);\r\n    return group\r\n}\r\n\r\nfunction getField(dataField, fields) {\r\n    for (var i = 0; i < fields.length; i++) {\r\n        if (fields[i].name === dataField) {\r\n            return fields[i]\r\n        }\r\n        if (fields[i].dataField.toLowerCase() === dataField.toLowerCase()) {\r\n            return fields[i]\r\n        }\r\n    }\r\n    var extendedFields = getItems(fields, true).filter(function(item) {\r\n        return item.dataField.toLowerCase() === dataField.toLowerCase()\r\n    });\r\n    if (extendedFields.length > 0) {\r\n        return extendedFields[0]\r\n    }\r\n    throw new _ui.default.Error(\"E1047\", dataField)\r\n}\r\n\r\nfunction isGroup(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length < 2 || Array.isArray(criteria[0]) || Array.isArray(criteria[1])\r\n}\r\n\r\nfunction isCondition(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length > 1 && !Array.isArray(criteria[0]) && !Array.isArray(criteria[1])\r\n}\r\n\r\nfunction convertToInnerGroup(group, customOperations) {\r\n    var groupOperation = getCriteriaOperation(group).toLowerCase() || AND_GROUP_OPERATION;\r\n    var innerGroup = [];\r\n    for (var i = 0; i < group.length; i++) {\r\n        if (isGroup(group[i])) {\r\n            innerGroup.push(convertToInnerStructure(group[i], customOperations));\r\n            innerGroup.push(groupOperation)\r\n        } else {\r\n            if (isCondition(group[i])) {\r\n                innerGroup.push(convertToInnerCondition(group[i], customOperations));\r\n                innerGroup.push(groupOperation)\r\n            }\r\n        }\r\n    }\r\n    if (0 === innerGroup.length) {\r\n        innerGroup.push(groupOperation)\r\n    }\r\n    return innerGroup\r\n}\r\n\r\nfunction conditionHasCustomOperation(condition, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, condition[1]);\r\n    return customOperation && customOperation.name === condition[1]\r\n}\r\n\r\nfunction convertToInnerCondition(condition, customOperations) {\r\n    if (conditionHasCustomOperation(condition, customOperations)) {\r\n        return condition\r\n    }\r\n    if (condition.length < 3) {\r\n        condition[2] = condition[1];\r\n        condition[1] = EQUAL_OPERATION\r\n    }\r\n    return condition\r\n}\r\n\r\nfunction convertToInnerStructure(value, customOperations) {\r\n    if (!value) {\r\n        return [AND_GROUP_OPERATION]\r\n    }\r\n    value = (0, _extend.extend)(true, [], value);\r\n    if (isCondition(value)) {\r\n        return [convertToInnerCondition(value, customOperations), AND_GROUP_OPERATION]\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        return [\"!\", isCondition(value[1]) ? [convertToInnerCondition(value[1], customOperations), AND_GROUP_OPERATION] : isNegationGroup(value[1]) ? [convertToInnerStructure(value[1], customOperations), AND_GROUP_OPERATION] : convertToInnerGroup(value[1], customOperations)]\r\n    }\r\n    return convertToInnerGroup(value, customOperations)\r\n}\r\n\r\nfunction getNormalizedFields(fields) {\r\n    return fields.reduce(function(result, field) {\r\n        if ((0, _type.isDefined)(field.dataField)) {\r\n            var normalizedField = {};\r\n            for (var key in field) {\r\n                if (field[key] && AVAILABLE_FIELD_PROPERTIES.indexOf(key) > -1) {\r\n                    normalizedField[key] = field[key]\r\n                }\r\n            }\r\n            normalizedField.defaultCalculateFilterExpression = _filtering.default.defaultCalculateFilterExpression;\r\n            if (!(0, _type.isDefined)(normalizedField.dataType)) {\r\n                normalizedField.dataType = DEFAULT_DATA_TYPE\r\n            }\r\n            if (!(0, _type.isDefined)(normalizedField.trueText)) {\r\n                normalizedField.trueText = _message.default.format(\"dxDataGrid-trueText\")\r\n            }\r\n            if (!(0, _type.isDefined)(normalizedField.falseText)) {\r\n                normalizedField.falseText = _message.default.format(\"dxDataGrid-falseText\")\r\n            }\r\n            result.push(normalizedField)\r\n        }\r\n        return result\r\n    }, [])\r\n}\r\n\r\nfunction getConditionFilterExpression(condition, fields, customOperations, target) {\r\n    var field = getField(condition[0], fields);\r\n    var filterExpression = convertToInnerCondition(condition, customOperations);\r\n    var customOperation = customOperations.length && getCustomOperation(customOperations, filterExpression[1]);\r\n    if (customOperation && customOperation.calculateFilterExpression) {\r\n        return customOperation.calculateFilterExpression.apply(customOperation, [filterExpression[2], field, fields])\r\n    } else {\r\n        if (field.createFilterExpression) {\r\n            return field.createFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n        } else {\r\n            if (field.calculateFilterExpression) {\r\n                return field.calculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n            } else {\r\n                return field.defaultCalculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getFilterExpression(value, fields, customOperations, target) {\r\n    if (!(0, _type.isDefined)(value)) {\r\n        return null\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        var filterExpression = getFilterExpression(value[1], fields, customOperations, target);\r\n        return [\"!\", filterExpression]\r\n    }\r\n    var criteria = getGroupCriteria(value);\r\n    if (isCondition(criteria)) {\r\n        return getConditionFilterExpression(criteria, fields, customOperations, target) || null\r\n    } else {\r\n        var result = [];\r\n        var _filterExpression;\r\n        var groupValue = getGroupValue(criteria);\r\n        for (var i = 0; i < criteria.length; i++) {\r\n            if (isGroup(criteria[i])) {\r\n                _filterExpression = getFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    i && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            } else {\r\n                if (isCondition(criteria[i])) {\r\n                    _filterExpression = getConditionFilterExpression(criteria[i], fields, customOperations, target);\r\n                    if (_filterExpression) {\r\n                        result.length && result.push(groupValue);\r\n                        result.push(_filterExpression)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (1 === result.length) {\r\n            result = result[0]\r\n        }\r\n        return result.length ? result : null\r\n    }\r\n}\r\n\r\nfunction getNormalizedFilter(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    if (0 === criteria.length) {\r\n        return null\r\n    }\r\n    var itemsForRemove = [];\r\n    for (i = 0; i < criteria.length; i++) {\r\n        if (isGroup(criteria[i])) {\r\n            var normalizedGroupValue = getNormalizedFilter(criteria[i]);\r\n            if (normalizedGroupValue) {\r\n                criteria[i] = normalizedGroupValue\r\n            } else {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        } else {\r\n            if (isCondition(criteria[i])) {\r\n                if (!isValidCondition(criteria[i])) {\r\n                    itemsForRemove.push(criteria[i])\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < itemsForRemove.length; i++) {\r\n        removeItem(criteria, itemsForRemove[i])\r\n    }\r\n    if (1 === criteria.length) {\r\n        return null\r\n    }\r\n    criteria.splice(criteria.length - 1, 1);\r\n    if (1 === criteria.length) {\r\n        group = setGroupCriteria(group, criteria[0])\r\n    }\r\n    if (0 === group.length) {\r\n        return null\r\n    }\r\n    return group\r\n}\r\n\r\nfunction getCurrentLookupValueText(field, value, handler) {\r\n    if (\"\" === value) {\r\n        handler(\"\");\r\n        return\r\n    }\r\n    var lookup = field.lookup;\r\n    if (lookup.items) {\r\n        handler(lookup.calculateCellValue(value) || \"\")\r\n    } else {\r\n        var lookupDataSource = (0, _type.isFunction)(lookup.dataSource) ? lookup.dataSource({}) : lookup.dataSource;\r\n        var dataSource = new _data_source.DataSource(lookupDataSource);\r\n        dataSource.loadSingle(lookup.valueExpr, value).done(function(result) {\r\n            var valueText = \"\";\r\n            if (result) {\r\n                valueText = lookup.displayExpr ? (0, _data.compileGetter)(lookup.displayExpr)(result) : result\r\n            }\r\n            if (field.customizeText) {\r\n                valueText = field.customizeText({\r\n                    value: value,\r\n                    valueText: valueText\r\n                })\r\n            }\r\n            handler(valueText)\r\n        }).fail(function() {\r\n            handler(\"\")\r\n        })\r\n    }\r\n}\r\n\r\nfunction getPrimitiveValueText(field, value, customOperation, target, options) {\r\n    var valueText;\r\n    if (true === value) {\r\n        valueText = field.trueText || _message.default.format(\"dxDataGrid-trueText\")\r\n    } else {\r\n        if (false === value) {\r\n            valueText = field.falseText || _message.default.format(\"dxDataGrid-falseText\")\r\n        } else {\r\n            valueText = getFormattedValueText(field, value)\r\n        }\r\n    }\r\n    if (field.customizeText) {\r\n        valueText = field.customizeText.call(field, {\r\n            value: value,\r\n            valueText: valueText,\r\n            target: target\r\n        })\r\n    }\r\n    if (customOperation && customOperation.customizeText) {\r\n        valueText = customOperation.customizeText.call(customOperation, {\r\n            value: value,\r\n            valueText: valueText,\r\n            field: field,\r\n            target: target\r\n        }, options)\r\n    }\r\n    return valueText\r\n}\r\n\r\nfunction getArrayValueText(field, value, customOperation, target) {\r\n    var options = {\r\n        values: value\r\n    };\r\n    return value.map(function(v) {\r\n        return getPrimitiveValueText(field, v, customOperation, target, options)\r\n    })\r\n}\r\n\r\nfunction checkDefaultValue(value) {\r\n    return \"\" === value || null === value\r\n}\r\n\r\nfunction getCurrentValueText(field, value, customOperation) {\r\n    var target = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : \"filterBuilder\";\r\n    if (checkDefaultValue(value)) {\r\n        return \"\"\r\n    }\r\n    if (Array.isArray(value)) {\r\n        var result = new _deferred.Deferred;\r\n        _deferred.when.apply(this, getArrayValueText(field, value, customOperation, target)).done(function() {\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            var text = args.some(function(item) {\r\n                return !checkDefaultValue(item)\r\n            }) ? args.map(function(item) {\r\n                return !checkDefaultValue(item) ? item : \"?\"\r\n            }) : \"\";\r\n            result.resolve(text)\r\n        });\r\n        return result\r\n    } else {\r\n        return getPrimitiveValueText(field, value, customOperation, target)\r\n    }\r\n}\r\n\r\nfunction itemExists(plainItems, parentId) {\r\n    return plainItems.some(function(item) {\r\n        return item.dataField === parentId\r\n    })\r\n}\r\n\r\nfunction pushItemAndCheckParent(originalItems, plainItems, item) {\r\n    var dataField = item.dataField;\r\n    if (hasParent(dataField)) {\r\n        item.parentId = getParentIdFromItemDataField(dataField);\r\n        if (!itemExists(plainItems, item.parentId) && !itemExists(originalItems, item.parentId)) {\r\n            pushItemAndCheckParent(originalItems, plainItems, {\r\n                id: item.parentId,\r\n                dataType: \"object\",\r\n                dataField: item.parentId,\r\n                caption: generateCaptionByDataField(item.parentId, true),\r\n                filterOperations: [\"isblank\", \"isnotblank\"]\r\n            })\r\n        }\r\n    }\r\n    plainItems.push(item)\r\n}\r\n\r\nfunction generateCaptionByDataField(dataField, allowHierarchicalFields) {\r\n    var caption = \"\";\r\n    if (allowHierarchicalFields) {\r\n        dataField = dataField.substring(dataField.lastIndexOf(\".\") + 1)\r\n    } else {\r\n        if (hasParent(dataField)) {\r\n            dataField.split(\".\").forEach(function(field, index, arr) {\r\n                caption += (0, _inflector.captionize)(field);\r\n                if (index !== arr.length - 1) {\r\n                    caption += \".\"\r\n                }\r\n            });\r\n            return caption\r\n        }\r\n    }\r\n    return (0, _inflector.captionize)(dataField)\r\n}\r\n\r\nfunction getItems(fields, allowHierarchicalFields) {\r\n    var items = [];\r\n    for (var i = 0; i < fields.length; i++) {\r\n        var item = (0, _extend.extend)(true, {\r\n            caption: generateCaptionByDataField(fields[i].dataField, allowHierarchicalFields)\r\n        }, fields[i]);\r\n        item.id = item.name || item.dataField;\r\n        if (allowHierarchicalFields) {\r\n            pushItemAndCheckParent(fields, items, item)\r\n        } else {\r\n            items.push(item)\r\n        }\r\n    }\r\n    return items\r\n}\r\n\r\nfunction hasParent(dataField) {\r\n    return dataField.lastIndexOf(\".\") !== -1\r\n}\r\n\r\nfunction getParentIdFromItemDataField(dataField) {\r\n    return dataField.substring(0, dataField.lastIndexOf(\".\"))\r\n}\r\n\r\nfunction getCaptionWithParents(item, plainItems) {\r\n    if (hasParent(item.dataField)) {\r\n        var parentId = getParentIdFromItemDataField(item.dataField);\r\n        for (var i = 0; i < plainItems.length; i++) {\r\n            if (plainItems[i].dataField === parentId) {\r\n                return getCaptionWithParents(plainItems[i], plainItems) + \".\" + item.caption\r\n            }\r\n        }\r\n    }\r\n    return item.caption\r\n}\r\n\r\nfunction updateConditionByOperation(condition, operation, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, operation);\r\n    if (customOperation) {\r\n        if (false === customOperation.hasValue) {\r\n            condition[1] = operation;\r\n            condition.length = 2\r\n        } else {\r\n            condition[1] = operation;\r\n            condition[2] = \"\"\r\n        }\r\n        return condition\r\n    }\r\n    if (\"isblank\" === operation) {\r\n        condition[1] = EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else {\r\n        if (\"isnotblank\" === operation) {\r\n            condition[1] = NOT_EQUAL_OPERATION;\r\n            condition[2] = null\r\n        } else {\r\n            customOperation = getCustomOperation(customOperations, condition[1]);\r\n            if (customOperation || 2 === condition.length || null === condition[2]) {\r\n                condition[2] = \"\"\r\n            }\r\n            condition[1] = operation\r\n        }\r\n    }\r\n    return condition\r\n}\r\n\r\nfunction getOperationValue(condition) {\r\n    var caption;\r\n    if (null === condition[2]) {\r\n        if (condition[1] === EQUAL_OPERATION) {\r\n            caption = \"isblank\"\r\n        } else {\r\n            caption = \"isnotblank\"\r\n        }\r\n    } else {\r\n        caption = condition[1]\r\n    }\r\n    return caption\r\n}\r\n\r\nfunction isValidCondition(condition) {\r\n    return \"\" !== condition[2]\r\n}\r\n\r\nfunction getMergedOperations(customOperations, betweenCaption, context) {\r\n    var result = (0, _extend.extend)(true, [], customOperations);\r\n    var betweenIndex = -1;\r\n    result.some(function(customOperation, index) {\r\n        if (\"between\" === customOperation.name) {\r\n            betweenIndex = index;\r\n            return true\r\n        }\r\n    });\r\n    if (betweenIndex !== -1) {\r\n        result[betweenIndex] = (0, _extend.extend)((0, _between.getConfig)(betweenCaption, context), result[betweenIndex])\r\n    } else {\r\n        result.unshift((0, _between.getConfig)(betweenCaption, context))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isMatchedCondition(filter, addedFilterDataField) {\r\n    return filter[0] === addedFilterDataField\r\n}\r\n\r\nfunction removeFieldConditionsFromFilter(filter, dataField) {\r\n    if (!filter || 0 === filter.length) {\r\n        return null\r\n    }\r\n    if (isCondition(filter)) {\r\n        var hasMatchedCondition = isMatchedCondition(filter, dataField);\r\n        return !hasMatchedCondition ? filter : null\r\n    } else {\r\n        return syncConditionIntoGroup(filter, [dataField], false)\r\n    }\r\n}\r\n\r\nfunction syncConditionIntoGroup(filter, addedFilter, canPush) {\r\n    var result = [];\r\n    filter.forEach(function(item) {\r\n        if (isCondition(item)) {\r\n            if (isMatchedCondition(item, addedFilter[0])) {\r\n                if (canPush) {\r\n                    result.push(addedFilter);\r\n                    canPush = false\r\n                } else {\r\n                    result.splice(result.length - 1, 1)\r\n                }\r\n            } else {\r\n                result.push(item)\r\n            }\r\n        } else {\r\n            (result.length || isGroup(item)) && result.push(item)\r\n        }\r\n    });\r\n    if (0 === result.length) {\r\n        return null\r\n    }\r\n    if (canPush) {\r\n        result.push(AND_GROUP_OPERATION);\r\n        result.push(addedFilter)\r\n    }\r\n    return 1 === result.length ? result[0] : result\r\n}\r\n\r\nfunction syncFilters(filter, addedFilter) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return addedFilter\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, addedFilter[0])) {\r\n            return addedFilter\r\n        } else {\r\n            return [filter, AND_GROUP_OPERATION, addedFilter]\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return [addedFilter, \"and\", filter]\r\n    }\r\n    return syncConditionIntoGroup(filter, addedFilter, true)\r\n}\r\n\r\nfunction getMatchedConditions(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return []\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, dataField)) {\r\n            return [filter]\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return []\r\n    }\r\n    var result = filter.filter(function(item) {\r\n        return isCondition(item) && isMatchedCondition(item, dataField)\r\n    });\r\n    return result\r\n}\r\n\r\nfunction filterHasField(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return false\r\n    }\r\n    if (isCondition(filter)) {\r\n        return filter[0] === dataField\r\n    }\r\n    return filter.some(function(item) {\r\n        return (isCondition(item) || isGroup(item)) && filterHasField(item, dataField)\r\n    })\r\n}\r\nvar renderValueText = function($container, value, customOperation) {\r\n    if (Array.isArray(value)) {\r\n        var lastItemIndex = value.length - 1;\r\n        $container.empty();\r\n        value.forEach(function(t, i) {\r\n            (0, _renderer.default)(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_PART_CLASS).text(t).appendTo($container);\r\n            if (i !== lastItemIndex) {\r\n                (0, _renderer.default)(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS).text(customOperation && customOperation.valueSeparator ? customOperation.valueSeparator : \"|\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS).appendTo($container)\r\n            }\r\n        })\r\n    } else {\r\n        if (value) {\r\n            $container.text(value)\r\n        } else {\r\n            $container.text(_message.default.format(\"dxFilterBuilder-enterValueText\"))\r\n        }\r\n    }\r\n};\r\nexports.renderValueText = renderValueText;\r\n","/**\r\n * DevExtreme (ui/form.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _ui = _interopRequireDefault(require(\"./form/ui.form\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _ui.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/form/components/button_item.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.renderButtonItem = renderButtonItem;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _extend = require(\"../../../core/utils/extend\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FIELD_BUTTON_ITEM_CLASS = \"dx-field-button-item\";\r\n\r\nfunction renderButtonItem(_ref) {\r\n    var item = _ref.item,\r\n        $parent = _ref.$parent,\r\n        rootElementCssClassList = _ref.rootElementCssClassList,\r\n        validationGroup = _ref.validationGroup,\r\n        createComponentCallback = _ref.createComponentCallback;\r\n    var $rootElement = (0, _renderer.default)(\"<div>\").appendTo($parent).addClass(rootElementCssClassList.join(\" \")).addClass(FIELD_BUTTON_ITEM_CLASS).css(\"textAlign\", convertAlignmentToTextAlign(item.horizontalAlignment));\r\n    $parent.css(\"justifyContent\", convertAlignmentToJustifyContent(item.verticalAlignment));\r\n    var $button = (0, _renderer.default)(\"<div>\").appendTo($rootElement);\r\n    return {\r\n        $rootElement: $rootElement,\r\n        buttonInstance: createComponentCallback($button, \"dxButton\", (0, _extend.extend)({\r\n            validationGroup: validationGroup\r\n        }, item.buttonOptions))\r\n    }\r\n}\r\n\r\nfunction convertAlignmentToTextAlign(horizontalAlignment) {\r\n    return (0, _type.isDefined)(horizontalAlignment) ? horizontalAlignment : \"right\"\r\n}\r\n\r\nfunction convertAlignmentToJustifyContent(verticalAlignment) {\r\n    switch (verticalAlignment) {\r\n        case \"center\":\r\n            return \"center\";\r\n        case \"bottom\":\r\n            return \"flex-end\";\r\n        default:\r\n            return \"flex-start\"\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (ui/form/components/empty_item.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.FIELD_EMPTY_ITEM_CLASS = void 0;\r\nexports.renderEmptyItem = renderEmptyItem;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FIELD_EMPTY_ITEM_CLASS = \"dx-field-empty-item\";\r\nexports.FIELD_EMPTY_ITEM_CLASS = FIELD_EMPTY_ITEM_CLASS;\r\n\r\nfunction renderEmptyItem(_ref) {\r\n    var $parent = _ref.$parent,\r\n        rootElementCssClassList = _ref.rootElementCssClassList;\r\n    return (0, _renderer.default)(\"<div>\").addClass(FIELD_EMPTY_ITEM_CLASS).html(\"&nbsp;\").addClass(rootElementCssClassList.join(\" \")).appendTo($parent)\r\n}\r\n","/**\r\n * DevExtreme (ui/form/components/field_item.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.LABEL_VERTICAL_ALIGNMENT_CLASS = exports.LABEL_HORIZONTAL_ALIGNMENT_CLASS = exports.FLEX_LAYOUT_CLASS = exports.FIELD_ITEM_REQUIRED_CLASS = exports.FIELD_ITEM_OPTIONAL_CLASS = exports.FIELD_ITEM_LABEL_ALIGN_CLASS = exports.FIELD_ITEM_HELP_TEXT_CLASS = exports.FIELD_ITEM_CONTENT_WRAPPER_CLASS = exports.FIELD_ITEM_CONTENT_LOCATION_CLASS = void 0;\r\nexports.renderFieldItem = renderFieldItem;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../../events/core/events_engine\"));\r\nvar _click = require(\"../../../events/click\");\r\nvar _element = require(\"../../../core/element\");\r\nvar _inflector = require(\"../../../core/utils/inflector\");\r\nvar _string = require(\"../../../core/utils/string\");\r\nvar _themes = require(\"../../themes\");\r\nvar _ui = _interopRequireDefault(require(\"../../widget/ui.errors\"));\r\nvar _validator = _interopRequireDefault(require(\"../../validator\"));\r\nvar _constants = require(\"../constants\");\r\nvar _label = require(\"./label\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FLEX_LAYOUT_CLASS = \"dx-flex-layout\";\r\nexports.FLEX_LAYOUT_CLASS = FLEX_LAYOUT_CLASS;\r\nvar FIELD_ITEM_OPTIONAL_CLASS = \"dx-field-item-optional\";\r\nexports.FIELD_ITEM_OPTIONAL_CLASS = FIELD_ITEM_OPTIONAL_CLASS;\r\nvar FIELD_ITEM_REQUIRED_CLASS = \"dx-field-item-required\";\r\nexports.FIELD_ITEM_REQUIRED_CLASS = FIELD_ITEM_REQUIRED_CLASS;\r\nvar FIELD_ITEM_CONTENT_WRAPPER_CLASS = \"dx-field-item-content-wrapper\";\r\nexports.FIELD_ITEM_CONTENT_WRAPPER_CLASS = FIELD_ITEM_CONTENT_WRAPPER_CLASS;\r\nvar FIELD_ITEM_CONTENT_LOCATION_CLASS = \"dx-field-item-content-location-\";\r\nexports.FIELD_ITEM_CONTENT_LOCATION_CLASS = FIELD_ITEM_CONTENT_LOCATION_CLASS;\r\nvar FIELD_ITEM_LABEL_ALIGN_CLASS = \"dx-field-item-label-align\";\r\nexports.FIELD_ITEM_LABEL_ALIGN_CLASS = FIELD_ITEM_LABEL_ALIGN_CLASS;\r\nvar FIELD_ITEM_HELP_TEXT_CLASS = \"dx-field-item-help-text\";\r\nexports.FIELD_ITEM_HELP_TEXT_CLASS = FIELD_ITEM_HELP_TEXT_CLASS;\r\nvar LABEL_VERTICAL_ALIGNMENT_CLASS = \"dx-label-v-align\";\r\nexports.LABEL_VERTICAL_ALIGNMENT_CLASS = LABEL_VERTICAL_ALIGNMENT_CLASS;\r\nvar LABEL_HORIZONTAL_ALIGNMENT_CLASS = \"dx-label-h-align\";\r\nexports.LABEL_HORIZONTAL_ALIGNMENT_CLASS = LABEL_HORIZONTAL_ALIGNMENT_CLASS;\r\nvar TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\r\nvar INVALID_CLASS = \"dx-invalid\";\r\n\r\nfunction renderFieldItem(_ref) {\r\n    var $parent = _ref.$parent,\r\n        rootElementCssClassList = _ref.rootElementCssClassList,\r\n        parentComponent = _ref.parentComponent,\r\n        createComponentCallback = _ref.createComponentCallback,\r\n        useFlexLayout = _ref.useFlexLayout,\r\n        labelOptions = _ref.labelOptions,\r\n        labelNeedBaselineAlign = _ref.labelNeedBaselineAlign,\r\n        labelLocation = _ref.labelLocation,\r\n        needRenderLabel = _ref.needRenderLabel,\r\n        formLabelLocation = _ref.formLabelLocation,\r\n        item = _ref.item,\r\n        editorOptions = _ref.editorOptions,\r\n        isSimpleItem = _ref.isSimpleItem,\r\n        isRequired = _ref.isRequired,\r\n        template = _ref.template,\r\n        helpID = _ref.helpID,\r\n        labelID = _ref.labelID,\r\n        name = _ref.name,\r\n        helpText = _ref.helpText,\r\n        requiredMessageTemplate = _ref.requiredMessageTemplate,\r\n        validationGroup = _ref.validationGroup;\r\n    var $rootElement = (0, _renderer.default)(\"<div>\").addClass(rootElementCssClassList.join(\" \")).appendTo($parent);\r\n    $rootElement.addClass(isRequired ? FIELD_ITEM_REQUIRED_CLASS : FIELD_ITEM_OPTIONAL_CLASS);\r\n    if (isSimpleItem && useFlexLayout) {\r\n        $rootElement.addClass(FLEX_LAYOUT_CLASS)\r\n    }\r\n    if (isSimpleItem && labelNeedBaselineAlign) {\r\n        $rootElement.addClass(FIELD_ITEM_LABEL_ALIGN_CLASS)\r\n    }\r\n    var $fieldEditorContainer = (0, _renderer.default)(\"<div>\");\r\n    $fieldEditorContainer.data(\"dx-form-item\", item);\r\n    var locationClassSuffix = {\r\n        right: \"left\",\r\n        left: \"right\",\r\n        top: \"bottom\"\r\n    };\r\n    $fieldEditorContainer.addClass(_constants.FIELD_ITEM_CONTENT_CLASS).addClass(FIELD_ITEM_CONTENT_LOCATION_CLASS + locationClassSuffix[formLabelLocation]);\r\n    var $label = needRenderLabel ? (0, _label.renderLabel)(labelOptions) : null;\r\n    if ($label) {\r\n        $rootElement.append($label);\r\n        if (\"top\" === labelLocation || \"left\" === labelLocation) {\r\n            $rootElement.append($fieldEditorContainer)\r\n        }\r\n        if (\"right\" === labelLocation) {\r\n            $rootElement.prepend($fieldEditorContainer)\r\n        }\r\n        if (\"top\" === labelLocation) {\r\n            $rootElement.addClass(LABEL_VERTICAL_ALIGNMENT_CLASS)\r\n        } else {\r\n            $rootElement.addClass(LABEL_HORIZONTAL_ALIGNMENT_CLASS)\r\n        }\r\n        if (\"dxCheckBox\" === item.editorType || \"dxSwitch\" === item.editorType) {\r\n            _events_engine.default.on($label, _click.name, function() {\r\n                _events_engine.default.trigger($fieldEditorContainer.children(), _click.name)\r\n            })\r\n        }\r\n    } else {\r\n        $rootElement.append($fieldEditorContainer)\r\n    }\r\n    var widgetInstance;\r\n    if (template) {\r\n        template.render({\r\n            container: (0, _element.getPublicElement)($fieldEditorContainer),\r\n            model: {\r\n                dataField: item.dataField,\r\n                editorType: item.editorType,\r\n                editorOptions: editorOptions,\r\n                component: parentComponent,\r\n                name: item.name\r\n            }\r\n        })\r\n    } else {\r\n        var $div = (0, _renderer.default)(\"<div>\").appendTo($fieldEditorContainer);\r\n        try {\r\n            widgetInstance = createComponentCallback($div, item.editorType, editorOptions);\r\n            widgetInstance.setAria(\"describedby\", helpID);\r\n            widgetInstance.setAria(\"labelledby\", labelID);\r\n            widgetInstance.setAria(\"required\", isRequired)\r\n        } catch (e) {\r\n            _ui.default.log(\"E1035\", e.message)\r\n        }\r\n    }\r\n    var editorElem = $fieldEditorContainer.children().first();\r\n    var $validationTarget = editorElem.hasClass(TEMPLATE_WRAPPER_CLASS) ? editorElem.children().first() : editorElem;\r\n    var validationTargetInstance = $validationTarget && $validationTarget.data(\"dx-validation-target\");\r\n    if (validationTargetInstance) {\r\n        var isItemHaveCustomLabel = item.label && item.label.text;\r\n        var itemName = isItemHaveCustomLabel ? null : name;\r\n        var fieldName = isItemHaveCustomLabel ? item.label.text : itemName && (0, _inflector.captionize)(itemName);\r\n        var validationRules;\r\n        if (isSimpleItem) {\r\n            if (item.validationRules) {\r\n                validationRules = item.validationRules\r\n            } else {\r\n                var requiredMessage = (0, _string.format)(requiredMessageTemplate, fieldName || \"\");\r\n                validationRules = item.isRequired ? [{\r\n                    type: \"required\",\r\n                    message: requiredMessage\r\n                }] : null\r\n            }\r\n        }\r\n        if (Array.isArray(validationRules) && validationRules.length) {\r\n            createComponentCallback($validationTarget, _validator.default, {\r\n                validationRules: validationRules,\r\n                validationGroup: validationGroup,\r\n                dataGetter: function() {\r\n                    return {\r\n                        formItem: item\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        if ((0, _themes.isMaterial)()) {\r\n            var wrapperClass = \".\" + FIELD_ITEM_CONTENT_WRAPPER_CLASS;\r\n            var toggleInvalidClass = function(e) {\r\n                (0, _renderer.default)(e.element).parents(wrapperClass).toggleClass(INVALID_CLASS, e.component._isFocused() && false === e.component.option(\"isValid\"))\r\n            };\r\n            validationTargetInstance.on(\"focusIn\", toggleInvalidClass).on(\"focusOut\", toggleInvalidClass).on(\"enterKey\", toggleInvalidClass)\r\n        }\r\n    }\r\n    if (helpText && isSimpleItem) {\r\n        var $editorParent = $fieldEditorContainer.parent();\r\n        $editorParent.append((0, _renderer.default)(\"<div>\").addClass(FIELD_ITEM_CONTENT_WRAPPER_CLASS).append($fieldEditorContainer).append((0, _renderer.default)(\"<div>\").addClass(FIELD_ITEM_HELP_TEXT_CLASS).attr(\"id\", helpID).text(helpText)))\r\n    }\r\n    return {\r\n        $fieldEditorContainer: $fieldEditorContainer,\r\n        $rootElement: $rootElement,\r\n        widgetInstance: widgetInstance\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (ui/form/components/label.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.GET_LABEL_WIDTH_BY_TEXT_CLASS = exports.FIELD_ITEM_REQUIRED_MARK_CLASS = exports.FIELD_ITEM_OPTIONAL_MARK_CLASS = exports.FIELD_ITEM_LABEL_TEXT_CLASS = exports.FIELD_ITEM_LABEL_LOCATION_CLASS = void 0;\r\nexports.renderLabel = renderLabel;\r\nexports.setLabelWidthByMaxLabelWidth = setLabelWidthByMaxLabelWidth;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _string = require(\"../../../core/utils/string\");\r\nvar _constants = require(\"../constants\");\r\nvar _excluded = [\"$FIELD_ITEM_LABEL_CONTENT_CLASS\"];\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _objectWithoutProperties(source, excluded) {\r\n    if (null == source) {\r\n        return {}\r\n    }\r\n    var target = _objectWithoutPropertiesLoose(source, excluded);\r\n    var key, i;\r\n    if (Object.getOwnPropertySymbols) {\r\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n        for (i = 0; i < sourceSymbolKeys.length; i++) {\r\n            key = sourceSymbolKeys[i];\r\n            if (excluded.indexOf(key) >= 0) {\r\n                continue\r\n            }\r\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) {\r\n                continue\r\n            }\r\n            target[key] = source[key]\r\n        }\r\n    }\r\n    return target\r\n}\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n    if (null == source) {\r\n        return {}\r\n    }\r\n    var target = {};\r\n    var sourceKeys = Object.keys(source);\r\n    var key, i;\r\n    for (i = 0; i < sourceKeys.length; i++) {\r\n        key = sourceKeys[i];\r\n        if (excluded.indexOf(key) >= 0) {\r\n            continue\r\n        }\r\n        target[key] = source[key]\r\n    }\r\n    return target\r\n}\r\nvar GET_LABEL_WIDTH_BY_TEXT_CLASS = \"dx-layout-manager-hidden-label\";\r\nexports.GET_LABEL_WIDTH_BY_TEXT_CLASS = GET_LABEL_WIDTH_BY_TEXT_CLASS;\r\nvar FIELD_ITEM_REQUIRED_MARK_CLASS = \"dx-field-item-required-mark\";\r\nexports.FIELD_ITEM_REQUIRED_MARK_CLASS = FIELD_ITEM_REQUIRED_MARK_CLASS;\r\nvar FIELD_ITEM_LABEL_LOCATION_CLASS = \"dx-field-item-label-location-\";\r\nexports.FIELD_ITEM_LABEL_LOCATION_CLASS = FIELD_ITEM_LABEL_LOCATION_CLASS;\r\nvar FIELD_ITEM_OPTIONAL_MARK_CLASS = \"dx-field-item-optional-mark\";\r\nexports.FIELD_ITEM_OPTIONAL_MARK_CLASS = FIELD_ITEM_OPTIONAL_MARK_CLASS;\r\nvar FIELD_ITEM_LABEL_TEXT_CLASS = \"dx-field-item-label-text\";\r\nexports.FIELD_ITEM_LABEL_TEXT_CLASS = FIELD_ITEM_LABEL_TEXT_CLASS;\r\n\r\nfunction renderLabel(_ref) {\r\n    var text = _ref.text,\r\n        id = _ref.id,\r\n        location = _ref.location,\r\n        alignment = _ref.alignment,\r\n        _ref$labelID = _ref.labelID,\r\n        labelID = void 0 === _ref$labelID ? null : _ref$labelID,\r\n        _ref$markOptions = _ref.markOptions,\r\n        markOptions = void 0 === _ref$markOptions ? {} : _ref$markOptions;\r\n    if (!(0, _type.isDefined)(text) || text.length <= 0) {\r\n        return null\r\n    }\r\n    return (0, _renderer.default)(\"<label>\").addClass(_constants.FIELD_ITEM_LABEL_CLASS + \" \" + FIELD_ITEM_LABEL_LOCATION_CLASS + location).attr(\"for\", id).attr(\"id\", labelID).css(\"textAlign\", alignment).append((0, _renderer.default)(\"<span>\").addClass(_constants.FIELD_ITEM_LABEL_CONTENT_CLASS).append((0, _renderer.default)(\"<span>\").addClass(FIELD_ITEM_LABEL_TEXT_CLASS).text(text), _renderLabelMark(markOptions)))\r\n}\r\n\r\nfunction _renderLabelMark(_ref2) {\r\n    var showRequiredMark = _ref2.showRequiredMark,\r\n        requiredMark = _ref2.requiredMark,\r\n        showOptionalMark = _ref2.showOptionalMark,\r\n        optionalMark = _ref2.optionalMark;\r\n    if (!showRequiredMark && !showOptionalMark) {\r\n        return null\r\n    }\r\n    return (0, _renderer.default)(\"<span>\").addClass(showRequiredMark ? FIELD_ITEM_REQUIRED_MARK_CLASS : FIELD_ITEM_OPTIONAL_MARK_CLASS).text(String.fromCharCode(160) + (showRequiredMark ? requiredMark : optionalMark))\r\n}\r\n\r\nfunction setLabelWidthByMaxLabelWidth($targetContainer, labelsSelector, labelMarkOptions) {\r\n    var FIELD_ITEM_LABEL_CONTENT_CLASS_Selector = \"\".concat(labelsSelector, \" > .\").concat(_constants.FIELD_ITEM_LABEL_CLASS, \":not(.\").concat(FIELD_ITEM_LABEL_LOCATION_CLASS, \"top) > .\").concat(_constants.FIELD_ITEM_LABEL_CONTENT_CLASS);\r\n    var $FIELD_ITEM_LABEL_CONTENT_CLASS_Items = $targetContainer.find(FIELD_ITEM_LABEL_CONTENT_CLASS_Selector);\r\n    var FIELD_ITEM_LABEL_CONTENT_CLASS_Length = $FIELD_ITEM_LABEL_CONTENT_CLASS_Items.length;\r\n    var labelWidth;\r\n    var i;\r\n    var maxWidth = 0;\r\n    for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {\r\n        labelWidth = getLabelWidthByInnerHTML({\r\n            $FIELD_ITEM_LABEL_CONTENT_CLASS: $FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i],\r\n            location: \"left\",\r\n            markOptions: labelMarkOptions\r\n        });\r\n        if (labelWidth > maxWidth) {\r\n            maxWidth = labelWidth\r\n        }\r\n    }\r\n    for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {\r\n        $FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i].style.width = maxWidth + \"px\"\r\n    }\r\n}\r\n\r\nfunction getLabelWidthByInnerHTML(options) {\r\n    var $FIELD_ITEM_LABEL_CONTENT_CLASS = options.$FIELD_ITEM_LABEL_CONTENT_CLASS,\r\n        renderLabelOptions = _objectWithoutProperties(options, _excluded);\r\n    var $hiddenContainer = (0, _renderer.default)(\"<div>\").addClass(_constants.WIDGET_CLASS).addClass(GET_LABEL_WIDTH_BY_TEXT_CLASS).appendTo(\"body\");\r\n    renderLabelOptions.text = \" \";\r\n    var $label = renderLabel(renderLabelOptions).appendTo($hiddenContainer);\r\n    var labelTextElement = $label.find(\".\" + FIELD_ITEM_LABEL_TEXT_CLASS)[0];\r\n    labelTextElement.innerHTML = getLabelInnerHTML($FIELD_ITEM_LABEL_CONTENT_CLASS);\r\n    var result = labelTextElement.offsetWidth;\r\n    $hiddenContainer.remove();\r\n    return result\r\n}\r\n\r\nfunction getLabelInnerHTML($FIELD_ITEM_LABEL_CONTENT_CLASS) {\r\n    var length = $FIELD_ITEM_LABEL_CONTENT_CLASS.children.length;\r\n    var child;\r\n    var result = \"\";\r\n    var i;\r\n    for (i = 0; i < length; i++) {\r\n        child = $FIELD_ITEM_LABEL_CONTENT_CLASS.children[i];\r\n        result += !(0, _string.isEmpty)(child.innerText) ? child.innerText : child.innerHTML\r\n    }\r\n    return result\r\n}\r\n","/**\r\n * DevExtreme (ui/form/constants.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.WIDGET_CLASS = exports.SINGLE_COLUMN_ITEM_CONTENT = exports.SIMPLE_ITEM_TYPE = exports.ROOT_SIMPLE_ITEM_CLASS = exports.LAYOUT_MANAGER_ONE_COLUMN = exports.GROUP_COL_COUNT_CLASS = exports.GROUP_COL_COUNT_ATTR = exports.FORM_VALIDATION_SUMMARY = exports.FORM_LAYOUT_MANAGER_CLASS = exports.FORM_GROUP_WITH_CAPTION_CLASS = exports.FORM_GROUP_CONTENT_CLASS = exports.FORM_GROUP_CLASS = exports.FORM_GROUP_CAPTION_CLASS = exports.FORM_FIELD_ITEM_COL_CLASS = exports.FORM_CLASS = exports.FIELD_ITEM_TAB_CLASS = exports.FIELD_ITEM_LABEL_CONTENT_CLASS = exports.FIELD_ITEM_LABEL_CLASS = exports.FIELD_ITEM_CONTENT_HAS_TABS_CLASS = exports.FIELD_ITEM_CONTENT_HAS_GROUP_CLASS = exports.FIELD_ITEM_CONTENT_CLASS = exports.FIELD_ITEM_CLASS = void 0;\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nexports.WIDGET_CLASS = WIDGET_CLASS;\r\nvar FORM_CLASS = \"dx-form\";\r\nexports.FORM_CLASS = FORM_CLASS;\r\nvar FORM_GROUP_CLASS = \"dx-form-group\";\r\nexports.FORM_GROUP_CLASS = FORM_GROUP_CLASS;\r\nvar FORM_GROUP_CAPTION_CLASS = \"dx-form-group-caption\";\r\nexports.FORM_GROUP_CAPTION_CLASS = FORM_GROUP_CAPTION_CLASS;\r\nvar FORM_FIELD_ITEM_COL_CLASS = \"dx-col-\";\r\nexports.FORM_FIELD_ITEM_COL_CLASS = FORM_FIELD_ITEM_COL_CLASS;\r\nvar FIELD_ITEM_CLASS = \"dx-field-item\";\r\nexports.FIELD_ITEM_CLASS = FIELD_ITEM_CLASS;\r\nvar LAYOUT_MANAGER_ONE_COLUMN = \"dx-layout-manager-one-col\";\r\nexports.LAYOUT_MANAGER_ONE_COLUMN = LAYOUT_MANAGER_ONE_COLUMN;\r\nvar FIELD_ITEM_LABEL_CONTENT_CLASS = \"dx-field-item-label-content\";\r\nexports.FIELD_ITEM_LABEL_CONTENT_CLASS = FIELD_ITEM_LABEL_CONTENT_CLASS;\r\nvar FORM_LAYOUT_MANAGER_CLASS = \"dx-layout-manager\";\r\nexports.FORM_LAYOUT_MANAGER_CLASS = FORM_LAYOUT_MANAGER_CLASS;\r\nvar FIELD_ITEM_LABEL_CLASS = \"dx-field-item-label\";\r\nexports.FIELD_ITEM_LABEL_CLASS = FIELD_ITEM_LABEL_CLASS;\r\nvar FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nexports.FIELD_ITEM_CONTENT_CLASS = FIELD_ITEM_CONTENT_CLASS;\r\nvar SINGLE_COLUMN_ITEM_CONTENT = \"dx-single-column-item-content\";\r\nexports.SINGLE_COLUMN_ITEM_CONTENT = SINGLE_COLUMN_ITEM_CONTENT;\r\nvar ROOT_SIMPLE_ITEM_CLASS = \"dx-root-simple-item\";\r\nexports.ROOT_SIMPLE_ITEM_CLASS = ROOT_SIMPLE_ITEM_CLASS;\r\nvar FORM_GROUP_CONTENT_CLASS = \"dx-form-group-content\";\r\nexports.FORM_GROUP_CONTENT_CLASS = FORM_GROUP_CONTENT_CLASS;\r\nvar FIELD_ITEM_CONTENT_HAS_GROUP_CLASS = \"dx-field-item-has-group\";\r\nexports.FIELD_ITEM_CONTENT_HAS_GROUP_CLASS = FIELD_ITEM_CONTENT_HAS_GROUP_CLASS;\r\nvar FIELD_ITEM_CONTENT_HAS_TABS_CLASS = \"dx-field-item-has-tabs\";\r\nexports.FIELD_ITEM_CONTENT_HAS_TABS_CLASS = FIELD_ITEM_CONTENT_HAS_TABS_CLASS;\r\nvar FORM_GROUP_WITH_CAPTION_CLASS = \"dx-form-group-with-caption\";\r\nexports.FORM_GROUP_WITH_CAPTION_CLASS = FORM_GROUP_WITH_CAPTION_CLASS;\r\nvar FIELD_ITEM_TAB_CLASS = \"dx-field-item-tab\";\r\nexports.FIELD_ITEM_TAB_CLASS = FIELD_ITEM_TAB_CLASS;\r\nvar GROUP_COL_COUNT_CLASS = \"dx-group-colcount-\";\r\nexports.GROUP_COL_COUNT_CLASS = GROUP_COL_COUNT_CLASS;\r\nvar GROUP_COL_COUNT_ATTR = \"group-col-count\";\r\nexports.GROUP_COL_COUNT_ATTR = GROUP_COL_COUNT_ATTR;\r\nvar FORM_VALIDATION_SUMMARY = \"dx-form-validation-summary\";\r\nexports.FORM_VALIDATION_SUMMARY = FORM_VALIDATION_SUMMARY;\r\nvar SIMPLE_ITEM_TYPE = \"simple\";\r\nexports.SIMPLE_ITEM_TYPE = SIMPLE_ITEM_TYPE;\r\n","/**\r\n * DevExtreme (ui/form/ui.form.item_option_action.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ItemOptionAction = function() {\r\n    function ItemOptionAction(options) {\r\n        this._options = options;\r\n        this._itemsRunTimeInfo = this._options.itemsRunTimeInfo\r\n    }\r\n    var _proto = ItemOptionAction.prototype;\r\n    _proto.findInstance = function() {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByItem(this._options.item)\r\n    };\r\n    _proto.findItemContainer = function() {\r\n        return this._itemsRunTimeInfo.findItemContainerByItem(this._options.item)\r\n    };\r\n    _proto.tryExecute = function() {\r\n        _class.default.abstract()\r\n    };\r\n    return ItemOptionAction\r\n}();\r\nexports.default = ItemOptionAction;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/form/ui.form.item_options_actions.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiForm = _interopRequireDefault(require(\"./ui.form.item_option_action\"));\r\nvar _element_data = require(\"../../core/element_data\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiForm2 = require(\"./ui.form.utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar WidgetOptionItemOptionAction = function(_ItemOptionAction) {\r\n    _inheritsLoose(WidgetOptionItemOptionAction, _ItemOptionAction);\r\n\r\n    function WidgetOptionItemOptionAction() {\r\n        return _ItemOptionAction.apply(this, arguments) || this\r\n    }\r\n    var _proto = WidgetOptionItemOptionAction.prototype;\r\n    _proto.tryExecute = function() {\r\n        var value = this._options.value;\r\n        var instance = this.findInstance();\r\n        if (instance) {\r\n            instance.option(value);\r\n            return true\r\n        }\r\n        return false\r\n    };\r\n    return WidgetOptionItemOptionAction\r\n}(_uiForm.default);\r\nvar TabOptionItemOptionAction = function(_ItemOptionAction2) {\r\n    _inheritsLoose(TabOptionItemOptionAction, _ItemOptionAction2);\r\n\r\n    function TabOptionItemOptionAction() {\r\n        return _ItemOptionAction2.apply(this, arguments) || this\r\n    }\r\n    var _proto2 = TabOptionItemOptionAction.prototype;\r\n    _proto2.tryExecute = function() {\r\n        var tabPanel = this.findInstance();\r\n        if (tabPanel) {\r\n            var _this$_options = this._options,\r\n                optionName = _this$_options.optionName,\r\n                item = _this$_options.item,\r\n                value = _this$_options.value;\r\n            var itemIndex = this._itemsRunTimeInfo.findItemIndexByItem(item);\r\n            if (itemIndex >= 0) {\r\n                tabPanel.option((0, _uiForm2.getFullOptionName)(\"items[\".concat(itemIndex, \"]\"), optionName), value);\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    };\r\n    return TabOptionItemOptionAction\r\n}(_uiForm.default);\r\nvar TabsOptionItemOptionAction = function(_ItemOptionAction3) {\r\n    _inheritsLoose(TabsOptionItemOptionAction, _ItemOptionAction3);\r\n\r\n    function TabsOptionItemOptionAction() {\r\n        return _ItemOptionAction3.apply(this, arguments) || this\r\n    }\r\n    var _proto3 = TabsOptionItemOptionAction.prototype;\r\n    _proto3.tryExecute = function() {\r\n        var tabPanel = this.findInstance();\r\n        if (tabPanel) {\r\n            var value = this._options.value;\r\n            tabPanel.option(\"dataSource\", value);\r\n            return true\r\n        }\r\n        return false\r\n    };\r\n    return TabsOptionItemOptionAction\r\n}(_uiForm.default);\r\nvar ValidationRulesItemOptionAction = function(_ItemOptionAction4) {\r\n    _inheritsLoose(ValidationRulesItemOptionAction, _ItemOptionAction4);\r\n\r\n    function ValidationRulesItemOptionAction() {\r\n        return _ItemOptionAction4.apply(this, arguments) || this\r\n    }\r\n    var _proto4 = ValidationRulesItemOptionAction.prototype;\r\n    _proto4.tryExecute = function() {\r\n        var item = this._options.item;\r\n        var instance = this.findInstance();\r\n        var validator = instance && (0, _element_data.data)(instance.$element()[0], \"dxValidator\");\r\n        if (validator && item) {\r\n            var filterRequired = function(item) {\r\n                return \"required\" === item.type\r\n            };\r\n            var oldContainsRequired = (validator.option(\"validationRules\") || []).some(filterRequired);\r\n            var newContainsRequired = (item.validationRules || []).some(filterRequired);\r\n            if (!oldContainsRequired && !newContainsRequired || oldContainsRequired && newContainsRequired) {\r\n                validator.option(\"validationRules\", item.validationRules);\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    };\r\n    return ValidationRulesItemOptionAction\r\n}(_uiForm.default);\r\nvar CssClassItemOptionAction = function(_ItemOptionAction5) {\r\n    _inheritsLoose(CssClassItemOptionAction, _ItemOptionAction5);\r\n\r\n    function CssClassItemOptionAction() {\r\n        return _ItemOptionAction5.apply(this, arguments) || this\r\n    }\r\n    var _proto5 = CssClassItemOptionAction.prototype;\r\n    _proto5.tryExecute = function() {\r\n        var $itemContainer = this.findItemContainer();\r\n        var _this$_options2 = this._options,\r\n            previousValue = _this$_options2.previousValue,\r\n            value = _this$_options2.value;\r\n        if ($itemContainer) {\r\n            $itemContainer.removeClass(previousValue).addClass(value);\r\n            return true\r\n        }\r\n        return false\r\n    };\r\n    return CssClassItemOptionAction\r\n}(_uiForm.default);\r\nvar tryCreateItemOptionAction = function(optionName, itemActionOptions) {\r\n    switch (optionName) {\r\n        case \"editorOptions\":\r\n        case \"buttonOptions\":\r\n            return new WidgetOptionItemOptionAction(itemActionOptions);\r\n        case \"validationRules\":\r\n            return new ValidationRulesItemOptionAction(itemActionOptions);\r\n        case \"cssClass\":\r\n            return new CssClassItemOptionAction(itemActionOptions);\r\n        case \"badge\":\r\n        case \"disabled\":\r\n        case \"icon\":\r\n        case \"template\":\r\n        case \"tabTemplate\":\r\n        case \"title\":\r\n            return new TabOptionItemOptionAction((0, _extend.extend)(itemActionOptions, {\r\n                optionName: optionName\r\n            }));\r\n        case \"tabs\":\r\n            return new TabsOptionItemOptionAction(itemActionOptions);\r\n        default:\r\n            return null\r\n    }\r\n};\r\nvar _default = tryCreateItemOptionAction;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/form/ui.form.items_runtime_info.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FormItemsRunTimeInfo = function() {\r\n    function FormItemsRunTimeInfo() {\r\n        this._map = {}\r\n    }\r\n    var _proto = FormItemsRunTimeInfo.prototype;\r\n    _proto._findWidgetInstance = function(condition) {\r\n        var result;\r\n        (0, _iterator.each)(this._map, function(guid, _ref) {\r\n            var widgetInstance = _ref.widgetInstance,\r\n                item = _ref.item;\r\n            if (condition(item)) {\r\n                result = widgetInstance;\r\n                return false\r\n            }\r\n        });\r\n        return result\r\n    };\r\n    _proto._findFieldByCondition = function(callback, valueExpr) {\r\n        var result;\r\n        (0, _iterator.each)(this._map, function(key, value) {\r\n            if (callback(value)) {\r\n                result = \"guid\" === valueExpr ? key : value[valueExpr];\r\n                return false\r\n            }\r\n        });\r\n        return result\r\n    };\r\n    _proto.clear = function() {\r\n        this._map = {}\r\n    };\r\n    _proto.removeItemsByItems = function(itemsRunTimeInfo) {\r\n        var _this = this;\r\n        (0, _iterator.each)(itemsRunTimeInfo.getItems(), function(guid) {\r\n            return _this.removeItemByKey(guid)\r\n        })\r\n    };\r\n    _proto.removeItemByKey = function(key) {\r\n        delete this._map[key]\r\n    };\r\n    _proto.add = function(options) {\r\n        var key = options.guid || new _guid.default;\r\n        this._map[key] = options;\r\n        return key\r\n    };\r\n    _proto.addItemsOrExtendFrom = function(itemsRunTimeInfo) {\r\n        var _this2 = this;\r\n        itemsRunTimeInfo.each(function(key, itemRunTimeInfo) {\r\n            if (_this2._map[key]) {\r\n                if (itemRunTimeInfo.widgetInstance) {\r\n                    _this2._map[key].widgetInstance = itemRunTimeInfo.widgetInstance\r\n                }\r\n                _this2._map[key].$itemContainer = itemRunTimeInfo.$itemContainer\r\n            } else {\r\n                _this2.add({\r\n                    item: itemRunTimeInfo.item,\r\n                    widgetInstance: itemRunTimeInfo.widgetInstance,\r\n                    guid: key,\r\n                    $itemContainer: itemRunTimeInfo.$itemContainer\r\n                })\r\n            }\r\n        })\r\n    };\r\n    _proto.extendRunTimeItemInfoByKey = function(key, options) {\r\n        if (this._map[key]) {\r\n            this._map[key] = (0, _extend.extend)(this._map[key], options)\r\n        }\r\n    };\r\n    _proto.findWidgetInstanceByItem = function(item) {\r\n        return this._findWidgetInstance(function(storedItem) {\r\n            return storedItem === item\r\n        })\r\n    };\r\n    _proto.getGroupOrTabLayoutManagerByPath = function(targetPath) {\r\n        return this._findFieldByCondition(function(_ref2) {\r\n            var path = _ref2.path;\r\n            return path === targetPath\r\n        }, \"layoutManager\")\r\n    };\r\n    _proto.getKeyByPath = function(targetPath) {\r\n        return this._findFieldByCondition(function(_ref3) {\r\n            var path = _ref3.path;\r\n            return path === targetPath\r\n        }, \"guid\")\r\n    };\r\n    _proto.findWidgetInstanceByName = function(name) {\r\n        return this._findWidgetInstance(function(item) {\r\n            return name === item.name\r\n        })\r\n    };\r\n    _proto.findWidgetInstanceByDataField = function(dataField) {\r\n        return this._findWidgetInstance(function(item) {\r\n            return dataField === ((0, _type.isString)(item) ? item : item.dataField)\r\n        })\r\n    };\r\n    _proto.findItemContainerByItem = function(item) {\r\n        for (var key in this._map) {\r\n            if (this._map[key].item === item) {\r\n                return this._map[key].$itemContainer\r\n            }\r\n        }\r\n        return null\r\n    };\r\n    _proto.findItemIndexByItem = function(targetItem) {\r\n        return this._findFieldByCondition(function(_ref4) {\r\n            var item = _ref4.item;\r\n            return item === targetItem\r\n        }, \"itemIndex\")\r\n    };\r\n    _proto.getItems = function() {\r\n        return this._map\r\n    };\r\n    _proto.each = function(handler) {\r\n        (0, _iterator.each)(this._map, function(key, itemRunTimeInfo) {\r\n            handler(key, itemRunTimeInfo)\r\n        })\r\n    };\r\n    _proto.removeItemsByPathStartWith = function(path) {\r\n        var _this3 = this;\r\n        var keys = Object.keys(this._map);\r\n        var filteredKeys = keys.filter(function(key) {\r\n            return _this3._map[key].path.indexOf(path, 0) > -1\r\n        });\r\n        filteredKeys.forEach(function(key) {\r\n            return _this3.removeItemByKey(key)\r\n        })\r\n    };\r\n    return FormItemsRunTimeInfo\r\n}();\r\nexports.default = FormItemsRunTimeInfo;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/form/ui.form.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _visibility_change = require(\"../../events/visibility_change\");\r\nvar _element = require(\"../../core/element\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _validation_engine = _interopRequireDefault(require(\"../validation_engine\"));\r\nvar _uiForm = _interopRequireDefault(require(\"./ui.form.items_runtime_info\"));\r\nvar _tab_panel = _interopRequireDefault(require(\"../tab_panel\"));\r\nvar _ui2 = _interopRequireDefault(require(\"../scroll_view/ui.scrollable\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _themes = require(\"../themes\");\r\nvar _uiForm2 = _interopRequireDefault(require(\"./ui.form.item_options_actions\"));\r\nrequire(\"./ui.form.layout_manager\");\r\nvar _uiForm4 = require(\"./ui.form.utils\");\r\nvar _uiFormLayout_managerUtils = require(\"./ui.form.layout_manager.utils.js\");\r\nvar _label = require(\"./components/label\");\r\nrequire(\"../validation_summary\");\r\nrequire(\"../validation_group\");\r\nvar _constants = require(\"./constants\");\r\nvar _constants2 = require(\"../toolbar/constants\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar ITEM_OPTIONS_FOR_VALIDATION_UPDATING = [\"items\", \"isRequired\", \"validationRules\", \"visible\"];\r\nvar Form = _ui.default.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._cachedColCountOptions = [];\r\n        this._itemsRunTimeInfo = new _uiForm.default;\r\n        this._groupsColCount = [];\r\n        this._attachSyncSubscriptions()\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            formID: \"dx-\" + new _guid.default,\r\n            formData: {},\r\n            colCount: 1,\r\n            screenByWidth: _window.defaultScreenFactorFunc,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            readOnly: false,\r\n            onFieldDataChanged: null,\r\n            customizeItem: null,\r\n            onEditorEnterKey: null,\r\n            minColWidth: 200,\r\n            alignItemLabels: true,\r\n            alignItemLabelsInAllGroups: true,\r\n            alignRootItemLabels: true,\r\n            showColonAfterLabel: true,\r\n            showRequiredMark: true,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: _message.default.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: _message.default.getFormatter(\"dxForm-requiredMessage\"),\r\n            showValidationSummary: false,\r\n            items: void 0,\r\n            scrollingEnabled: false,\r\n            validationGroup: void 0,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return (0, _themes.isMaterial)()\r\n            },\r\n            options: {\r\n                showColonAfterLabel: false,\r\n                labelLocation: \"top\"\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            formData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _getGroupColCount: function($element) {\r\n        return parseInt($element.attr(_constants.GROUP_COL_COUNT_ATTR))\r\n    },\r\n    _applyLabelsWidthByCol: function($container, index) {\r\n        var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n        var labelMarkOptions = arguments.length > 3 ? arguments[3] : void 0;\r\n        var fieldItemClass = options.inOneColumn ? _constants.FIELD_ITEM_CLASS : _constants.FORM_FIELD_ITEM_COL_CLASS + index;\r\n        var cssExcludeTabbedSelector = options.excludeTabbed ? \":not(.\".concat(_constants.FIELD_ITEM_TAB_CLASS, \")\") : \"\";\r\n        (0, _label.setLabelWidthByMaxLabelWidth)($container, \".\".concat(fieldItemClass).concat(cssExcludeTabbedSelector), labelMarkOptions);\r\n        return\r\n    },\r\n    _applyLabelsWidth: function($container, excludeTabbed, inOneColumn, colCount, labelMarkOptions) {\r\n        colCount = inOneColumn ? 1 : colCount || this._getGroupColCount($container);\r\n        var applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed,\r\n            inOneColumn: inOneColumn\r\n        };\r\n        var i;\r\n        for (i = 0; i < colCount; i++) {\r\n            this._applyLabelsWidthByCol($container, i, applyLabelsOptions, labelMarkOptions)\r\n        }\r\n    },\r\n    _getGroupElementsInColumn: function($container, columnIndex, colCount) {\r\n        var cssColCountSelector = (0, _type.isDefined)(colCount) ? \".\" + _constants.GROUP_COL_COUNT_CLASS + colCount : \"\";\r\n        var groupSelector = \".\" + _constants.FORM_FIELD_ITEM_COL_CLASS + columnIndex + \" > .\" + _constants.FIELD_ITEM_CONTENT_CLASS + \" > .\" + _constants.FORM_GROUP_CLASS + cssColCountSelector;\r\n        return $container.find(groupSelector)\r\n    },\r\n    _applyLabelsWidthWithGroups: function($container, colCount, excludeTabbed, labelMarkOptions) {\r\n        if (true === this.option(\"alignRootItemLabels\")) {\r\n            var $rootSimpleItems = $container.find(\".\".concat(_constants.ROOT_SIMPLE_ITEM_CLASS));\r\n            for (var colIndex = 0; colIndex < colCount; colIndex++) {\r\n                this._applyLabelsWidthByCol($rootSimpleItems, colIndex, excludeTabbed, labelMarkOptions)\r\n            }\r\n        }\r\n        var alignItemLabelsInAllGroups = this.option(\"alignItemLabelsInAllGroups\");\r\n        if (alignItemLabelsInAllGroups) {\r\n            this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed, labelMarkOptions)\r\n        } else {\r\n            var $groups = this.$element().find(\".\" + _constants.FORM_GROUP_CLASS);\r\n            var i;\r\n            for (i = 0; i < $groups.length; i++) {\r\n                this._applyLabelsWidth($groups.eq(i), excludeTabbed, void 0, void 0, labelMarkOptions)\r\n            }\r\n        }\r\n    },\r\n    _applyLabelsWidthWithNestedGroups: function($container, colCount, excludeTabbed, labelMarkOptions) {\r\n        var applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed\r\n        };\r\n        var colIndex;\r\n        var groupsColIndex;\r\n        var groupColIndex;\r\n        var $groupsByCol;\r\n        for (colIndex = 0; colIndex < colCount; colIndex++) {\r\n            $groupsByCol = this._getGroupElementsInColumn($container, colIndex);\r\n            this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions, labelMarkOptions);\r\n            for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {\r\n                $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);\r\n                var groupColCount = this._getGroupColCount($groupsByCol);\r\n                for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {\r\n                    this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions, labelMarkOptions)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _labelLocation: function() {\r\n        return this.option(\"labelLocation\")\r\n    },\r\n    _alignLabelsInColumn: function(_ref) {\r\n        var layoutManager = _ref.layoutManager,\r\n            inOneColumn = _ref.inOneColumn,\r\n            $container = _ref.$container,\r\n            excludeTabbed = _ref.excludeTabbed,\r\n            items = _ref.items;\r\n        if (!(0, _window.hasWindow)() || \"top\" === this._labelLocation()) {\r\n            return\r\n        }\r\n        var labelMarkOptions = (0, _uiFormLayout_managerUtils.convertToLabelMarkOptions)(layoutManager._getMarkOptions());\r\n        if (inOneColumn) {\r\n            this._applyLabelsWidth($container, excludeTabbed, true, void 0, labelMarkOptions)\r\n        } else {\r\n            if (this._checkGrouping(items)) {\r\n                this._applyLabelsWidthWithGroups($container, layoutManager._getColCount(), excludeTabbed, labelMarkOptions)\r\n            } else {\r\n                this._applyLabelsWidth($container, excludeTabbed, false, layoutManager._getColCount(), labelMarkOptions)\r\n            }\r\n        }\r\n    },\r\n    _prepareFormData: function() {\r\n        if (!(0, _type.isDefined)(this.option(\"formData\"))) {\r\n            this.option(\"formData\", {})\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        _validation_engine.default.addGroup(this._getValidationGroup());\r\n        this._clearCachedInstances();\r\n        this._prepareFormData();\r\n        this.$element().addClass(_constants.FORM_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"form\", this.$element());\r\n        if (this.option(\"scrollingEnabled\")) {\r\n            this._renderScrollable()\r\n        }\r\n        this._renderLayout();\r\n        this._renderValidationSummary();\r\n        this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor()\r\n    },\r\n    _getCurrentScreenFactor: function() {\r\n        return (0, _window.hasWindow)() ? (0, _window.getCurrentScreenFactor)(this.option(\"screenByWidth\")) : \"lg\"\r\n    },\r\n    _clearCachedInstances: function() {\r\n        this._itemsRunTimeInfo.clear();\r\n        this._cachedLayoutManagers = []\r\n    },\r\n    _alignLabels: function(layoutManager, inOneColumn) {\r\n        this._alignLabelsInColumn({\r\n            $container: this.$element(),\r\n            layoutManager: layoutManager,\r\n            excludeTabbed: true,\r\n            items: this.option(\"items\"),\r\n            inOneColumn: inOneColumn\r\n        });\r\n        (0, _visibility_change.triggerResizeEvent)(this.$element().find(\".\".concat(_constants2.TOOLBAR_CLASS)))\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._groupsColCount = [];\r\n        this._cachedColCountOptions = [];\r\n        this._lastMarkupScreenFactor = void 0\r\n    },\r\n    _renderScrollable: function() {\r\n        var useNativeScrolling = this.option(\"useNativeScrolling\");\r\n        this._scrollable = new _ui2.default(this.$element(), {\r\n            useNative: !!useNativeScrolling,\r\n            useSimulatedScrollbar: !useNativeScrolling,\r\n            useKeyboard: false,\r\n            direction: \"both\",\r\n            bounceEnabled: false\r\n        })\r\n    },\r\n    _getContent: function() {\r\n        return this.option(\"scrollingEnabled\") ? this._scrollable.$content() : this.$element()\r\n    },\r\n    _renderValidationSummary: function() {\r\n        var $validationSummary = this.$element().find(\".\" + _constants.FORM_VALIDATION_SUMMARY);\r\n        if ($validationSummary.length > 0) {\r\n            $validationSummary.remove()\r\n        }\r\n        if (this.option(\"showValidationSummary\")) {\r\n            var _$validationSummary = (0, _renderer.default)(\"<div>\").addClass(_constants.FORM_VALIDATION_SUMMARY).appendTo(this._getContent());\r\n            this._validationSummary = _$validationSummary.dxValidationSummary({\r\n                validationGroup: this._getValidationGroup()\r\n            }).dxValidationSummary(\"instance\")\r\n        }\r\n    },\r\n    _prepareItems: function(items, parentIsTabbedItem, currentPath, isTabs) {\r\n        if (items) {\r\n            var result = [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                var path = (0, _uiForm4.concatPaths)(currentPath, (0, _uiForm4.createItemPathByIndex)(i, isTabs));\r\n                var guid = this._itemsRunTimeInfo.add({\r\n                    item: item,\r\n                    itemIndex: i,\r\n                    path: path\r\n                });\r\n                if ((0, _type.isString)(item)) {\r\n                    item = {\r\n                        dataField: item\r\n                    }\r\n                }\r\n                if ((0, _type.isObject)(item)) {\r\n                    var itemCopy = (0, _extend.extend)({}, item);\r\n                    itemCopy.guid = guid;\r\n                    this._tryPrepareGroupItem(itemCopy);\r\n                    this._tryPrepareTabbedItem(itemCopy, path);\r\n                    this._tryPrepareItemTemplate(itemCopy);\r\n                    if (parentIsTabbedItem) {\r\n                        itemCopy.cssItemClass = _constants.FIELD_ITEM_TAB_CLASS\r\n                    }\r\n                    if (itemCopy.items) {\r\n                        itemCopy.items = this._prepareItems(itemCopy.items, parentIsTabbedItem, path)\r\n                    }\r\n                    result.push(itemCopy)\r\n                } else {\r\n                    result.push(item)\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    },\r\n    _tryPrepareGroupItem: function(item) {\r\n        if (\"group\" === item.itemType) {\r\n            item.alignItemLabels = (0, _common.ensureDefined)(item.alignItemLabels, true);\r\n            if (item.template) {\r\n                item.groupContentTemplate = this._getTemplate(item.template)\r\n            }\r\n            item.template = this._itemGroupTemplate.bind(this, item)\r\n        }\r\n    },\r\n    _tryPrepareTabbedItem: function(item, path) {\r\n        if (\"tabbed\" === item.itemType) {\r\n            item.template = this._itemTabbedTemplate.bind(this, item);\r\n            item.tabs = this._prepareItems(item.tabs, true, path, true)\r\n        }\r\n    },\r\n    _tryPrepareItemTemplate: function(item) {\r\n        if (item.template) {\r\n            item.template = this._getTemplate(item.template)\r\n        }\r\n    },\r\n    _checkGrouping: function(items) {\r\n        if (items) {\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                if (\"group\" === item.itemType) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderLayout: function() {\r\n        var that = this;\r\n        var items = that.option(\"items\");\r\n        var $content = that._getContent();\r\n        items = that._prepareItems(items);\r\n        that._rootLayoutManager = that._renderLayoutManager(items, $content, {\r\n            isRoot: true,\r\n            colCount: that.option(\"colCount\"),\r\n            alignItemLabels: that.option(\"alignItemLabels\"),\r\n            screenByWidth: this.option(\"screenByWidth\"),\r\n            colCountByScreen: this.option(\"colCountByScreen\"),\r\n            onLayoutChanged: function(inOneColumn) {\r\n                that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn)\r\n            },\r\n            onContentReady: function(e) {\r\n                that._alignLabels(e.component, e.component.isSingleColumnMode())\r\n            }\r\n        })\r\n    },\r\n    _tryGetItemsForTemplate: function(item) {\r\n        return item.items || []\r\n    },\r\n    _itemTabbedTemplate: function(item, e, $container) {\r\n        var _this = this;\r\n        var $tabPanel = (0, _renderer.default)(\"<div>\").appendTo($container);\r\n        var tabPanelOptions = (0, _extend.extend)({}, item.tabPanelOptions, {\r\n            dataSource: item.tabs,\r\n            onItemRendered: function(args) {\r\n                return (0, _visibility_change.triggerShownEvent)(args.itemElement)\r\n            },\r\n            itemTemplate: function(itemData, e, container) {\r\n                var $container = (0, _renderer.default)(container);\r\n                var alignItemLabels = (0, _common.ensureDefined)(itemData.alignItemLabels, true);\r\n                var layoutManager = _this._renderLayoutManager(_this._tryGetItemsForTemplate(itemData), $container, {\r\n                    colCount: itemData.colCount,\r\n                    alignItemLabels: alignItemLabels,\r\n                    screenByWidth: _this.option(\"screenByWidth\"),\r\n                    colCountByScreen: itemData.colCountByScreen,\r\n                    cssItemClass: itemData.cssItemClass,\r\n                    onLayoutChanged: function(inOneColumn) {\r\n                        _this._alignLabelsInColumn({\r\n                            $container: $container,\r\n                            layoutManager: layoutManager,\r\n                            items: itemData.items,\r\n                            inOneColumn: inOneColumn\r\n                        })\r\n                    }\r\n                });\r\n                if (_this._itemsRunTimeInfo) {\r\n                    _this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(itemData.guid, {\r\n                        layoutManager: layoutManager\r\n                    })\r\n                }\r\n                if (alignItemLabels) {\r\n                    _this._alignLabelsInColumn({\r\n                        $container: $container,\r\n                        layoutManager: layoutManager,\r\n                        items: itemData.items,\r\n                        inOneColumn: layoutManager.isSingleColumnMode()\r\n                    })\r\n                }\r\n            }\r\n        });\r\n        var tryUpdateTabPanelInstance = function(items, instance) {\r\n            if (Array.isArray(items)) {\r\n                items.forEach(function(item) {\r\n                    return _this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\r\n                        widgetInstance: instance\r\n                    })\r\n                })\r\n            }\r\n        };\r\n        var tabPanel = this._createComponent($tabPanel, _tab_panel.default, tabPanelOptions);\r\n        (0, _renderer.default)($container).parent().addClass(_constants.FIELD_ITEM_CONTENT_HAS_TABS_CLASS);\r\n        tabPanel.on(\"optionChanged\", function(e) {\r\n            if (\"dataSource\" === e.fullName) {\r\n                tryUpdateTabPanelInstance(e.value, e.component)\r\n            }\r\n        });\r\n        tryUpdateTabPanelInstance([{\r\n            guid: item.guid\r\n        }].concat(_toConsumableArray(item.tabs)), tabPanel)\r\n    },\r\n    _itemGroupTemplate: function(item, e, $container) {\r\n        var $group = (0, _renderer.default)(\"<div>\").toggleClass(_constants.FORM_GROUP_WITH_CAPTION_CLASS, (0, _type.isDefined)(item.caption) && item.caption.length).addClass(_constants.FORM_GROUP_CLASS).appendTo($container);\r\n        (0, _renderer.default)($container).parent().addClass(_constants.FIELD_ITEM_CONTENT_HAS_GROUP_CLASS);\r\n        var colCount;\r\n        var layoutManager;\r\n        if (item.caption) {\r\n            (0, _renderer.default)(\"<span>\").addClass(_constants.FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group)\r\n        }\r\n        var $groupContent = (0, _renderer.default)(\"<div>\").addClass(_constants.FORM_GROUP_CONTENT_CLASS).appendTo($group);\r\n        if (item.groupContentTemplate) {\r\n            var data = {\r\n                formData: this.option(\"formData\"),\r\n                component: this\r\n            };\r\n            item.groupContentTemplate.render({\r\n                model: data,\r\n                container: (0, _element.getPublicElement)($groupContent)\r\n            })\r\n        } else {\r\n            layoutManager = this._renderLayoutManager(this._tryGetItemsForTemplate(item), $groupContent, {\r\n                colCount: item.colCount,\r\n                colCountByScreen: item.colCountByScreen,\r\n                alignItemLabels: item.alignItemLabels,\r\n                cssItemClass: item.cssItemClass\r\n            });\r\n            this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\r\n                layoutManager: layoutManager\r\n            });\r\n            colCount = layoutManager._getColCount();\r\n            if ((0, _array.inArray)(colCount, this._groupsColCount) === -1) {\r\n                this._groupsColCount.push(colCount)\r\n            }\r\n            $group.addClass(_constants.GROUP_COL_COUNT_CLASS + colCount);\r\n            $group.attr(_constants.GROUP_COL_COUNT_ATTR, colCount)\r\n        }\r\n    },\r\n    _renderLayoutManager: function(items, $rootElement, options) {\r\n        var $element = (0, _renderer.default)(\"<div>\");\r\n        var that = this;\r\n        var config = that._getLayoutManagerConfig(items, options);\r\n        var baseColCountByScreen = {\r\n            lg: options.colCount,\r\n            md: options.colCount,\r\n            sm: options.colCount,\r\n            xs: 1\r\n        };\r\n        that._cachedColCountOptions.push({\r\n            colCountByScreen: (0, _extend.extend)(baseColCountByScreen, options.colCountByScreen)\r\n        });\r\n        $element.appendTo($rootElement);\r\n        var instance = that._createComponent($element, \"dxLayoutManager\", config);\r\n        instance.on(\"autoColCountChanged\", function() {\r\n            that._refresh()\r\n        });\r\n        that._cachedLayoutManagers.push(instance);\r\n        return instance\r\n    },\r\n    _getValidationGroup: function() {\r\n        return this.option(\"validationGroup\") || this\r\n    },\r\n    _getLayoutManagerConfig: function(items, options) {\r\n        var _this2 = this;\r\n        var baseConfig = {\r\n            form: this,\r\n            isRoot: options.isRoot,\r\n            validationGroup: this._getValidationGroup(),\r\n            showRequiredMark: this.option(\"showRequiredMark\"),\r\n            showOptionalMark: this.option(\"showOptionalMark\"),\r\n            requiredMark: this.option(\"requiredMark\"),\r\n            optionalMark: this.option(\"optionalMark\"),\r\n            requiredMessage: this.option(\"requiredMessage\"),\r\n            screenByWidth: this.option(\"screenByWidth\"),\r\n            layoutData: this.option(\"formData\"),\r\n            labelLocation: this.option(\"labelLocation\"),\r\n            customizeItem: this.option(\"customizeItem\"),\r\n            minColWidth: this.option(\"minColWidth\"),\r\n            showColonAfterLabel: this.option(\"showColonAfterLabel\"),\r\n            onEditorEnterKey: this.option(\"onEditorEnterKey\"),\r\n            onFieldDataChanged: function(args) {\r\n                if (!_this2._isDataUpdating) {\r\n                    _this2._triggerOnFieldDataChanged(args)\r\n                }\r\n            },\r\n            validationBoundary: this.option(\"scrollingEnabled\") ? this.$element() : void 0\r\n        };\r\n        return (0, _extend.extend)(baseConfig, {\r\n            items: items,\r\n            onContentReady: function(args) {\r\n                _this2._itemsRunTimeInfo.addItemsOrExtendFrom(args.component._itemsRunTimeInfo);\r\n                options.onContentReady && options.onContentReady(args)\r\n            },\r\n            onDisposing: function(_ref2) {\r\n                var component = _ref2.component;\r\n                var nestedItemsRunTimeInfo = component.getItemsRunTimeInfo();\r\n                _this2._itemsRunTimeInfo.removeItemsByItems(nestedItemsRunTimeInfo)\r\n            },\r\n            colCount: options.colCount,\r\n            alignItemLabels: options.alignItemLabels,\r\n            cssItemClass: options.cssItemClass,\r\n            colCountByScreen: options.colCountByScreen,\r\n            onLayoutChanged: options.onLayoutChanged,\r\n            width: options.width\r\n        })\r\n    },\r\n    _createComponent: function($element, type, config) {\r\n        var that = this;\r\n        config = config || {};\r\n        that._extendConfig(config, {\r\n            readOnly: that.option(\"readOnly\")\r\n        });\r\n        return that.callBase($element, type, config)\r\n    },\r\n    _attachSyncSubscriptions: function() {\r\n        var that = this;\r\n        that.on(\"optionChanged\", function(args) {\r\n            var optionFullName = args.fullName;\r\n            if (\"formData\" === optionFullName) {\r\n                if (!(0, _type.isDefined)(args.value)) {\r\n                    that._options.silent(\"formData\", args.value = {})\r\n                }\r\n                that._triggerOnFieldDataChangedByDataSet(args.value)\r\n            }\r\n            if (that._cachedLayoutManagers.length) {\r\n                (0, _iterator.each)(that._cachedLayoutManagers, function(index, layoutManager) {\r\n                    if (\"formData\" === optionFullName) {\r\n                        that._isDataUpdating = true;\r\n                        layoutManager.option(\"layoutData\", args.value);\r\n                        that._isDataUpdating = false\r\n                    }\r\n                    if (\"readOnly\" === args.name || \"disabled\" === args.name) {\r\n                        layoutManager.option(optionFullName, args.value)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var rootNameOfComplexOption = this._getRootLevelOfExpectedComplexOption(args.fullName, [\"formData\", \"items\"]);\r\n        if (rootNameOfComplexOption) {\r\n            this._customHandlerOfComplexOption(args, rootNameOfComplexOption);\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"formData\":\r\n                if (!this.option(\"items\")) {\r\n                    this._invalidate()\r\n                } else {\r\n                    if ((0, _type.isEmptyObject)(args.value)) {\r\n                        this._resetValues()\r\n                    }\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            case \"items\":\r\n            case \"colCount\":\r\n            case \"onEditorEnterKey\":\r\n            case \"labelLocation\":\r\n            case \"alignItemLabels\":\r\n            case \"showColonAfterLabel\":\r\n            case \"customizeItem\":\r\n            case \"alignItemLabelsInAllGroups\":\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n            case \"requiredMessage\":\r\n            case \"scrollingEnabled\":\r\n            case \"formID\":\r\n            case \"colCountByScreen\":\r\n            case \"screenByWidth\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationSummary\":\r\n                this._renderValidationSummary();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"alignRootItemLabels\":\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._rootLayoutManager.option(args.name, args.value);\r\n                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (args.value) {\r\n                    (0, _visibility_change.triggerShownEvent)(this.$element())\r\n                }\r\n                break;\r\n            case \"validationGroup\":\r\n                _validation_engine.default.removeGroup(args.previousValue || this);\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getRootLevelOfExpectedComplexOption: function(fullOptionName, expectedRootNames) {\r\n        var splitFullName = fullOptionName.split(\".\");\r\n        var result;\r\n        if (splitFullName.length > 1) {\r\n            var i;\r\n            var rootOptionName = splitFullName[0];\r\n            for (i = 0; i < expectedRootNames.length; i++) {\r\n                if (rootOptionName.search(expectedRootNames[i]) !== -1) {\r\n                    result = expectedRootNames[i]\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _tryCreateItemOptionAction: function(optionName, item, value, previousValue, itemPath) {\r\n        if (\"tabs\" === optionName) {\r\n            this._itemsRunTimeInfo.removeItemsByPathStartWith(\"\".concat(itemPath, \".tabs\"));\r\n            value = this._prepareItems(value, true, itemPath, true)\r\n        }\r\n        return (0, _uiForm2.default)(optionName, {\r\n            item: item,\r\n            value: value,\r\n            previousValue: previousValue,\r\n            itemsRunTimeInfo: this._itemsRunTimeInfo\r\n        })\r\n    },\r\n    _tryExecuteItemOptionAction: function(action) {\r\n        return action && action.tryExecute()\r\n    },\r\n    _updateValidationGroupAndSummaryIfNeeded: function(fullName) {\r\n        var optionName = (0, _uiForm4.getOptionNameFromFullName)(fullName);\r\n        if (ITEM_OPTIONS_FOR_VALIDATION_UPDATING.indexOf(optionName) > -1) {\r\n            _validation_engine.default.addGroup(this._getValidationGroup());\r\n            if (this.option(\"showValidationSummary\")) {\r\n                this._validationSummary && this._validationSummary._initGroupRegistration()\r\n            }\r\n        }\r\n    },\r\n    _setLayoutManagerItemOption: function(layoutManager, optionName, value, path) {\r\n        var _this3 = this;\r\n        if (this._updateLockCount > 0) {\r\n            !layoutManager._updateLockCount && layoutManager.beginUpdate();\r\n            var key = this._itemsRunTimeInfo.getKeyByPath(path);\r\n            this.postponedOperations.add(key, function() {\r\n                !layoutManager._disposed && layoutManager.endUpdate();\r\n                return (new _deferred.Deferred).resolve()\r\n            })\r\n        }\r\n        var contentReadyHandler = function contentReadyHandler(e) {\r\n            e.component.off(\"contentReady\", contentReadyHandler);\r\n            if ((0, _uiForm4.isFullPathContainsTabs)(path)) {\r\n                var tabPath = (0, _uiForm4.tryGetTabPath)(path);\r\n                var tabLayoutManager = _this3._itemsRunTimeInfo.getGroupOrTabLayoutManagerByPath(tabPath);\r\n                _this3._alignLabelsInColumn({\r\n                    items: tabLayoutManager.option(\"items\"),\r\n                    layoutManager: tabLayoutManager,\r\n                    $container: tabLayoutManager.$element(),\r\n                    inOneColumn: tabLayoutManager.isSingleColumnMode()\r\n                })\r\n            } else {\r\n                _this3._alignLabels(_this3._rootLayoutManager, _this3._rootLayoutManager.isSingleColumnMode())\r\n            }\r\n        };\r\n        layoutManager.on(\"contentReady\", contentReadyHandler);\r\n        layoutManager.option(optionName, value);\r\n        this._updateValidationGroupAndSummaryIfNeeded(optionName)\r\n    },\r\n    _tryChangeLayoutManagerItemOption: function(fullName, value) {\r\n        var nameParts = fullName.split(\".\");\r\n        var optionName = (0, _uiForm4.getOptionNameFromFullName)(fullName);\r\n        if (\"items\" === optionName && nameParts.length > 1) {\r\n            var itemPath = this._getItemPath(nameParts);\r\n            var layoutManager = this._itemsRunTimeInfo.getGroupOrTabLayoutManagerByPath(itemPath);\r\n            if (layoutManager) {\r\n                this._itemsRunTimeInfo.removeItemsByItems(layoutManager.getItemsRunTimeInfo());\r\n                var items = this._prepareItems(value, false, itemPath);\r\n                this._setLayoutManagerItemOption(layoutManager, optionName, items, itemPath);\r\n                return true\r\n            }\r\n        } else {\r\n            if (nameParts.length > 2) {\r\n                var endPartIndex = nameParts.length - 2;\r\n                var _itemPath = this._getItemPath(nameParts.slice(0, endPartIndex));\r\n                var _layoutManager = this._itemsRunTimeInfo.getGroupOrTabLayoutManagerByPath(_itemPath);\r\n                if (_layoutManager) {\r\n                    var fullOptionName = (0, _uiForm4.getFullOptionName)(nameParts[endPartIndex], optionName);\r\n                    if (\"editorType\" === optionName) {\r\n                        if (_layoutManager.option(fullOptionName) !== value) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    if (\"visible\" === optionName) {\r\n                        var formItems = this.option((0, _uiForm4.getFullOptionName)(_itemPath, \"items\"));\r\n                        if (formItems && formItems.length) {\r\n                            var layoutManagerItems = _layoutManager.option(\"items\");\r\n                            formItems.forEach(function(item, index) {\r\n                                var layoutItem = layoutManagerItems[index];\r\n                                layoutItem.visibleIndex = item.visibleIndex\r\n                            })\r\n                        }\r\n                    }\r\n                    this._setLayoutManagerItemOption(_layoutManager, fullOptionName, value, _itemPath);\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _tryChangeLayoutManagerItemOptions: function(itemPath, options) {\r\n        var _this4 = this;\r\n        var result;\r\n        this.beginUpdate();\r\n        (0, _iterator.each)(options, function(optionName, optionValue) {\r\n            result = _this4._tryChangeLayoutManagerItemOption((0, _uiForm4.getFullOptionName)(itemPath, optionName), optionValue);\r\n            if (!result) {\r\n                return false\r\n            }\r\n        });\r\n        this.endUpdate();\r\n        return result\r\n    },\r\n    _customHandlerOfComplexOption: function(args, rootOptionName) {\r\n        var nameParts = args.fullName.split(\".\");\r\n        var value = args.value;\r\n        if (\"items\" === rootOptionName) {\r\n            var itemPath = this._getItemPath(nameParts);\r\n            var item = this.option(itemPath);\r\n            var optionNameWithoutPath = args.fullName.replace(itemPath + \".\", \"\");\r\n            var simpleOptionName = optionNameWithoutPath.split(\".\")[0].replace(/\\[\\d+]/, \"\");\r\n            var itemAction = this._tryCreateItemOptionAction(simpleOptionName, item, item[simpleOptionName], args.previousValue, itemPath);\r\n            if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(args.fullName, value)) {\r\n                if (item) {\r\n                    this._changeItemOption(item, optionNameWithoutPath, value);\r\n                    var items = this._generateItemsFromData(this.option(\"items\"));\r\n                    this.option(\"items\", items)\r\n                }\r\n            }\r\n        }\r\n        if (\"formData\" === rootOptionName) {\r\n            var dataField = nameParts.slice(1).join(\".\");\r\n            var editor = this.getEditor(dataField);\r\n            if (editor) {\r\n                editor.option(\"value\", value)\r\n            } else {\r\n                this._triggerOnFieldDataChanged({\r\n                    dataField: dataField,\r\n                    value: value\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _getItemPath: function(nameParts) {\r\n        var itemPath = nameParts[0];\r\n        var i;\r\n        for (i = 1; i < nameParts.length; i++) {\r\n            if (nameParts[i].search(/items\\[\\d+]|tabs\\[\\d+]/) !== -1) {\r\n                itemPath += \".\" + nameParts[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        return itemPath\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _triggerOnFieldDataChangedByDataSet: function(data) {\r\n        var that = this;\r\n        if (data && (0, _type.isObject)(data)) {\r\n            (0, _iterator.each)(data, function(dataField, value) {\r\n                that._triggerOnFieldDataChanged({\r\n                    dataField: dataField,\r\n                    value: value\r\n                })\r\n            })\r\n        }\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        if ((0, _type.isDefined)(this.option(\"formData\"))) {\r\n            var editor = this.getEditor(dataField);\r\n            this.option(\"formData.\" + dataField, value);\r\n            if (editor) {\r\n                var editorValue = editor.option(\"value\");\r\n                if (editorValue !== value) {\r\n                    editor.option(\"value\", value)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _generateItemsFromData: function(items) {\r\n        var formData = this.option(\"formData\");\r\n        var result = [];\r\n        if (!items && (0, _type.isDefined)(formData)) {\r\n            (0, _iterator.each)(formData, function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            })\r\n        }\r\n        if (items) {\r\n            (0, _iterator.each)(items, function(index, item) {\r\n                if ((0, _type.isObject)(item)) {\r\n                    result.push(item)\r\n                } else {\r\n                    result.push({\r\n                        dataField: item\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _getItemByField: function(field, items) {\r\n        var that = this;\r\n        var fieldParts = (0, _type.isObject)(field) ? field : that._getFieldParts(field);\r\n        var fieldName = fieldParts.fieldName;\r\n        var fieldPath = fieldParts.fieldPath;\r\n        var resultItem;\r\n        if (items.length) {\r\n            (0, _iterator.each)(items, function(index, item) {\r\n                var itemType = item.itemType;\r\n                if (fieldPath.length) {\r\n                    var path = fieldPath.slice();\r\n                    item = that._getItemByFieldPath(path, fieldName, item)\r\n                } else {\r\n                    if (\"group\" === itemType && !(item.caption || item.name) || \"tabbed\" === itemType && !item.name) {\r\n                        var subItemsField = that._getSubItemField(itemType);\r\n                        item.items = that._generateItemsFromData(item.items);\r\n                        item = that._getItemByField({\r\n                            fieldName: fieldName,\r\n                            fieldPath: fieldPath\r\n                        }, item[subItemsField])\r\n                    }\r\n                }\r\n                if ((0, _uiForm4.isExpectedItem)(item, fieldName)) {\r\n                    resultItem = item;\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        return resultItem\r\n    },\r\n    _getFieldParts: function(field) {\r\n        var fieldSeparator = \".\";\r\n        var fieldName = field;\r\n        var separatorIndex = fieldName.indexOf(fieldSeparator);\r\n        var resultPath = [];\r\n        while (separatorIndex !== -1) {\r\n            resultPath.push(fieldName.substr(0, separatorIndex));\r\n            fieldName = fieldName.substr(separatorIndex + 1);\r\n            separatorIndex = fieldName.indexOf(fieldSeparator)\r\n        }\r\n        return {\r\n            fieldName: fieldName,\r\n            fieldPath: resultPath.reverse()\r\n        }\r\n    },\r\n    _getItemByFieldPath: function(path, fieldName, item) {\r\n        var that = this;\r\n        var itemType = item.itemType;\r\n        var subItemsField = that._getSubItemField(itemType);\r\n        var isItemWithSubItems = \"group\" === itemType || \"tabbed\" === itemType || item.title;\r\n        var result;\r\n        do {\r\n            if (isItemWithSubItems) {\r\n                var name = item.name || item.caption || item.title;\r\n                var isGroupWithName = (0, _type.isDefined)(name);\r\n                var nameWithoutSpaces = (0, _uiForm4.getTextWithoutSpaces)(name);\r\n                var pathNode = void 0;\r\n                item[subItemsField] = that._generateItemsFromData(item[subItemsField]);\r\n                if (isGroupWithName) {\r\n                    pathNode = path.pop()\r\n                }\r\n                if (!path.length) {\r\n                    result = that._getItemByField(fieldName, item[subItemsField]);\r\n                    if (result) {\r\n                        break\r\n                    }\r\n                }\r\n                if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {\r\n                    if (path.length) {\r\n                        result = that._searchItemInEverySubItem(path, fieldName, item[subItemsField])\r\n                    }\r\n                }\r\n            } else {\r\n                break\r\n            }\r\n        } while (path.length && !(0, _type.isDefined)(result));\r\n        return result\r\n    },\r\n    _getSubItemField: function(itemType) {\r\n        return \"tabbed\" === itemType ? \"tabs\" : \"items\"\r\n    },\r\n    _searchItemInEverySubItem: function(path, fieldName, items) {\r\n        var that = this;\r\n        var result;\r\n        (0, _iterator.each)(items, function(index, groupItem) {\r\n            result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);\r\n            if (result) {\r\n                return false\r\n            }\r\n        });\r\n        if (!result) {\r\n            result = false\r\n        }\r\n        return result\r\n    },\r\n    _changeItemOption: function(item, option, value) {\r\n        if ((0, _type.isObject)(item)) {\r\n            item[option] = value\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var currentScreenFactor = this._getCurrentScreenFactor();\r\n        if (this._lastMarkupScreenFactor !== currentScreenFactor) {\r\n            if (this._isColCountChanged(this._lastMarkupScreenFactor, currentScreenFactor)) {\r\n                this._targetScreenFactor = currentScreenFactor;\r\n                this._refresh();\r\n                this._targetScreenFactor = void 0\r\n            }\r\n            this._lastMarkupScreenFactor = currentScreenFactor\r\n        }\r\n    },\r\n    _isColCountChanged: function(oldScreenSize, newScreenSize) {\r\n        var isChanged = false;\r\n        (0, _iterator.each)(this._cachedColCountOptions, function(index, item) {\r\n            if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {\r\n                isChanged = true;\r\n                return false\r\n            }\r\n        });\r\n        return isChanged\r\n    },\r\n    _refresh: function() {\r\n        var editorSelector = \".\" + FOCUSED_STATE_CLASS + \" input, .\" + FOCUSED_STATE_CLASS + \" textarea\";\r\n        _events_engine.default.trigger(this.$element().find(editorSelector), \"change\");\r\n        this.callBase()\r\n    },\r\n    _resetValues: function() {\r\n        this._itemsRunTimeInfo.each(function(_, itemRunTimeInfo) {\r\n            if ((0, _type.isDefined)(itemRunTimeInfo.widgetInstance) && itemRunTimeInfo.widgetInstance instanceof _editor.default) {\r\n                itemRunTimeInfo.widgetInstance.reset();\r\n                itemRunTimeInfo.widgetInstance.option(\"isValid\", true)\r\n            }\r\n        });\r\n        _validation_engine.default.resetGroup(this._getValidationGroup())\r\n    },\r\n    _updateData: function(data, value, isComplexData) {\r\n        var that = this;\r\n        var _data = isComplexData ? value : data;\r\n        if ((0, _type.isObject)(_data)) {\r\n            (0, _iterator.each)(_data, function(dataField, fieldValue) {\r\n                that._updateData(isComplexData ? data + \".\" + dataField : dataField, fieldValue, (0, _type.isObject)(fieldValue))\r\n            })\r\n        } else {\r\n            if ((0, _type.isString)(data)) {\r\n                that._updateFieldValue(data, value)\r\n            }\r\n        }\r\n    },\r\n    registerKeyHandler: function(key, handler) {\r\n        this.callBase(key, handler);\r\n        this._itemsRunTimeInfo.each(function(_, itemRunTimeInfo) {\r\n            if ((0, _type.isDefined)(itemRunTimeInfo.widgetInstance)) {\r\n                itemRunTimeInfo.widgetInstance.registerKeyHandler(key, handler)\r\n            }\r\n        })\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element().find(\".\" + _constants.FIELD_ITEM_CONTENT_CLASS + \" [tabindex]\").first()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible && _browser.default.msie) {\r\n            this._refresh()\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        _validation_engine.default.removeGroup(this._getValidationGroup());\r\n        this.callBase()\r\n    },\r\n    resetValues: function() {\r\n        this._resetValues()\r\n    },\r\n    updateData: function(data, value) {\r\n        this._updateData(data, value)\r\n    },\r\n    getEditor: function(dataField) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(dataField) || this._itemsRunTimeInfo.findWidgetInstanceByName(dataField)\r\n    },\r\n    getButton: function(name) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByName(name)\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this;\r\n        var deferred = new _deferred.Deferred;\r\n        if (that._scrollable) {\r\n            that._scrollable.update().done(function() {\r\n                deferred.resolveWith(that)\r\n            })\r\n        } else {\r\n            deferred.resolveWith(that)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    itemOption: function(id, option, value) {\r\n        var _this5 = this;\r\n        var items = this._generateItemsFromData(this.option(\"items\"));\r\n        var item = this._getItemByField(id, items);\r\n        var path = (0, _uiForm4.getItemPath)(items, item);\r\n        if (!item) {\r\n            return\r\n        }\r\n        switch (arguments.length) {\r\n            case 1:\r\n                return item;\r\n            case 3:\r\n                var itemAction = this._tryCreateItemOptionAction(option, item, value, item[option], path);\r\n                this._changeItemOption(item, option, value);\r\n                var fullName = (0, _uiForm4.getFullOptionName)(path, option);\r\n                if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(fullName, value)) {\r\n                    this.option(\"items\", items)\r\n                }\r\n                break;\r\n            default:\r\n                if ((0, _type.isObject)(option)) {\r\n                    if (!this._tryChangeLayoutManagerItemOptions(path, option)) {\r\n                        var allowUpdateItems;\r\n                        (0, _iterator.each)(option, function(optionName, optionValue) {\r\n                            var itemAction = _this5._tryCreateItemOptionAction(optionName, item, optionValue, item[optionName], path);\r\n                            _this5._changeItemOption(item, optionName, optionValue);\r\n                            if (!allowUpdateItems && !_this5._tryExecuteItemOptionAction(itemAction)) {\r\n                                allowUpdateItems = true\r\n                            }\r\n                        });\r\n                        allowUpdateItems && this.option(\"items\", items)\r\n                    }\r\n                }\r\n        }\r\n    },\r\n    validate: function() {\r\n        return _validation_engine.default.validateGroup(this._getValidationGroup())\r\n    },\r\n    getItemID: function(name) {\r\n        return \"dx_\" + this.option(\"formID\") + \"_\" + (name || new _guid.default)\r\n    },\r\n    getTargetScreenFactor: function() {\r\n        return this._targetScreenFactor\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxForm\", Form);\r\nvar _default = Form;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/form/ui.form.layout_manager.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiForm = _interopRequireDefault(require(\"./ui.form.items_runtime_info\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _variable_wrapper = _interopRequireDefault(require(\"../../core/utils/variable_wrapper\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _remove_event = _interopRequireDefault(require(\"../../core/remove_event\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _style = require(\"../../core/utils/style\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _responsive_box = _interopRequireDefault(require(\"../responsive_box\"));\r\nvar _constants = require(\"./constants\");\r\nrequire(\"../text_box\");\r\nrequire(\"../number_box\");\r\nrequire(\"../check_box\");\r\nrequire(\"../date_box\");\r\nrequire(\"../button\");\r\nvar _field_item = require(\"./components/field_item.js\");\r\nvar _button_item = require(\"./components/button_item.js\");\r\nvar _empty_item = require(\"./components/empty_item.js\");\r\nvar _uiFormLayout_managerUtils = require(\"./ui.form.layout_manager.utils.js\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\";\r\nvar LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\";\r\nvar LAYOUT_MANAGER_LAST_ROW_CLASS = \"dx-last-row\";\r\nvar LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\";\r\nvar LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\";\r\nvar LAYOUT_STRATEGY_FLEX = \"flex\";\r\nvar LAYOUT_STRATEGY_FALLBACK = \"fallback\";\r\nvar LayoutManager = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            layoutData: {},\r\n            readOnly: false,\r\n            colCount: 1,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            onFieldDataChanged: null,\r\n            onEditorEnterKey: null,\r\n            customizeItem: null,\r\n            alignItemLabels: true,\r\n            minColWidth: 200,\r\n            showRequiredMark: true,\r\n            screenByWidth: null,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: _message.default.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: _message.default.getFormatter(\"dxForm-requiredMessage\")\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            layoutData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        var layoutData = this.option(\"layoutData\");\r\n        this.callBase();\r\n        this._itemWatchers = [];\r\n        this._itemsRunTimeInfo = new _uiForm.default;\r\n        this._updateReferencedOptions(layoutData);\r\n        this._initDataAndItems(layoutData)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._cleanItemWatchers()\r\n    },\r\n    _initDataAndItems: function(initialData) {\r\n        this._syncDataWithItems();\r\n        this._updateItems(initialData)\r\n    },\r\n    _syncDataWithItems: function() {\r\n        var _this = this;\r\n        var layoutData = this.option(\"layoutData\");\r\n        var userItems = this.option(\"items\");\r\n        if ((0, _type.isDefined)(userItems)) {\r\n            userItems.forEach(function(item) {\r\n                if (item.dataField && void 0 === _this._getDataByField(item.dataField)) {\r\n                    var value;\r\n                    if (item.editorOptions) {\r\n                        value = item.editorOptions.value\r\n                    }\r\n                    if ((0, _type.isDefined)(value) || item.dataField in layoutData) {\r\n                        _this._updateFieldValue(item.dataField, value)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getDataByField: function(dataField) {\r\n        return dataField ? this.option(\"layoutData.\" + dataField) : null\r\n    },\r\n    _isCheckboxUndefinedStateEnabled: function(_ref) {\r\n        var allowIndeterminateState = _ref.allowIndeterminateState,\r\n            editorType = _ref.editorType,\r\n            dataField = _ref.dataField;\r\n        if (true === allowIndeterminateState && \"dxCheckBox\" === editorType) {\r\n            var nameParts = [\"layoutData\"].concat(_toConsumableArray(dataField.split(\".\")));\r\n            var propertyName = nameParts.pop();\r\n            var layoutData = this.option(nameParts.join(\".\"));\r\n            return layoutData && propertyName in layoutData\r\n        }\r\n        return false\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        var layoutData = this.option(\"layoutData\");\r\n        var newValue = value;\r\n        if (!_variable_wrapper.default.isWrapped(layoutData[dataField]) && (0, _type.isDefined)(dataField)) {\r\n            this.option(\"layoutData.\" + dataField, newValue)\r\n        } else {\r\n            if (_variable_wrapper.default.isWritableWrapped(layoutData[dataField])) {\r\n                newValue = (0, _type.isFunction)(newValue) ? newValue() : newValue;\r\n                layoutData[dataField](newValue)\r\n            }\r\n        }\r\n        this._triggerOnFieldDataChanged({\r\n            dataField: dataField,\r\n            value: newValue\r\n        })\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _updateItems: function(layoutData) {\r\n        var that = this;\r\n        var userItems = this.option(\"items\");\r\n        var isUserItemsExist = (0, _type.isDefined)(userItems);\r\n        var customizeItem = that.option(\"customizeItem\");\r\n        var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\r\n        if ((0, _type.isDefined)(items)) {\r\n            var processedItems = [];\r\n            (0, _iterator.each)(items, function(index, item) {\r\n                if (that._isAcceptableItem(item)) {\r\n                    item = that._processItem(item);\r\n                    customizeItem && customizeItem(item);\r\n                    if ((0, _type.isObject)(item) && false !== _variable_wrapper.default.unwrap(item.visible)) {\r\n                        processedItems.push(item)\r\n                    }\r\n                }\r\n            });\r\n            if (!that._itemWatchers.length || !isUserItemsExist) {\r\n                that._updateItemWatchers(items)\r\n            }\r\n            this._setItems(processedItems);\r\n            this._sortItems()\r\n        }\r\n    },\r\n    _cleanItemWatchers: function() {\r\n        this._itemWatchers.forEach(function(dispose) {\r\n            dispose()\r\n        });\r\n        this._itemWatchers = []\r\n    },\r\n    _updateItemWatchers: function(items) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        items.forEach(function(item) {\r\n            if ((0, _type.isObject)(item) && (0, _type.isDefined)(item.visible) && (0, _type.isFunction)(watch)) {\r\n                that._itemWatchers.push(watch(function() {\r\n                    return _variable_wrapper.default.unwrap(item.visible)\r\n                }, function() {\r\n                    that._updateItems(that.option(\"layoutData\"));\r\n                    that.repaint()\r\n                }, {\r\n                    skipImmediate: true\r\n                }))\r\n            }\r\n        })\r\n    },\r\n    _generateItemsByData: function(layoutData) {\r\n        var result = [];\r\n        if ((0, _type.isDefined)(layoutData)) {\r\n            (0, _iterator.each)(layoutData, function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _isAcceptableItem: function(item) {\r\n        var itemField = item.dataField || item;\r\n        var itemData = this._getDataByField(itemField);\r\n        return !((0, _type.isFunction)(itemData) && !_variable_wrapper.default.isWrapped(itemData))\r\n    },\r\n    _processItem: function(item) {\r\n        if (\"string\" === typeof item) {\r\n            item = {\r\n                dataField: item\r\n            }\r\n        }\r\n        if (\"object\" === _typeof(item) && !item.itemType) {\r\n            item.itemType = _constants.SIMPLE_ITEM_TYPE\r\n        }\r\n        if (!(0, _type.isDefined)(item.editorType) && (0, _type.isDefined)(item.dataField)) {\r\n            var value = this._getDataByField(item.dataField);\r\n            item.editorType = (0, _type.isDefined)(value) ? this._getEditorTypeByDataType((0, _type.type)(value)) : FORM_EDITOR_BY_DEFAULT\r\n        }\r\n        if (\"dxCheckBox\" === item.editorType) {\r\n            var _item$allowIndetermin;\r\n            item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true\r\n        }\r\n        return item\r\n    },\r\n    _getEditorTypeByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"number\":\r\n                return \"dxNumberBox\";\r\n            case \"date\":\r\n                return \"dxDateBox\";\r\n            case \"boolean\":\r\n                return \"dxCheckBox\";\r\n            default:\r\n                return \"dxTextBox\"\r\n        }\r\n    },\r\n    _sortItems: function() {\r\n        (0, _array.normalizeIndexes)(this._items, \"visibleIndex\");\r\n        this._sortIndexes()\r\n    },\r\n    _sortIndexes: function() {\r\n        this._items.sort(function(itemA, itemB) {\r\n            var indexA = itemA.visibleIndex;\r\n            var indexB = itemB.visibleIndex;\r\n            var result;\r\n            if (indexA > indexB) {\r\n                result = 1\r\n            } else {\r\n                if (indexA < indexB) {\r\n                    result = -1\r\n                } else {\r\n                    result = 0\r\n                }\r\n            }\r\n            return result\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this._itemsRunTimeInfo.clear();\r\n        this.$element().addClass(_constants.FORM_LAYOUT_MANAGER_CLASS);\r\n        this.callBase();\r\n        this._renderResponsiveBox()\r\n    },\r\n    _hasBrowserFlex: function() {\r\n        return (0, _style.styleProp)(LAYOUT_STRATEGY_FLEX) === LAYOUT_STRATEGY_FLEX\r\n    },\r\n    _renderResponsiveBox: function() {\r\n        var that = this;\r\n        var templatesInfo = [];\r\n        if (that._items && that._items.length) {\r\n            var colCount = that._getColCount();\r\n            var $container = (0, _renderer.default)(\"<div>\").appendTo(that.$element());\r\n            that._prepareItemsWithMerging(colCount);\r\n            var layoutItems = that._generateLayoutItems();\r\n            that._responsiveBox = that._createComponent($container, _responsive_box.default, that._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\r\n            if (!(0, _window.hasWindow)()) {\r\n                that._renderTemplates(templatesInfo)\r\n            }\r\n        }\r\n    },\r\n    _itemStateChangedHandler: function(e) {\r\n        this._refresh()\r\n    },\r\n    _renderTemplates: function(templatesInfo) {\r\n        var that = this;\r\n        (0, _iterator.each)(templatesInfo, function(_, info) {\r\n            switch (info.itemType) {\r\n                case \"empty\":\r\n                    (0, _empty_item.renderEmptyItem)(info);\r\n                    break;\r\n                case \"button\":\r\n                    that._renderButtonItem(info);\r\n                    break;\r\n                default:\r\n                    that._renderFieldItem(info)\r\n            }\r\n        })\r\n    },\r\n    _getResponsiveBoxConfig: function(layoutItems, colCount, templatesInfo) {\r\n        var that = this;\r\n        var colCountByScreen = that.option(\"colCountByScreen\");\r\n        var xsColCount = colCountByScreen && colCountByScreen.xs;\r\n        return {\r\n            onItemStateChanged: this._itemStateChangedHandler.bind(this),\r\n            _layoutStrategy: that._hasBrowserFlex() ? LAYOUT_STRATEGY_FLEX : LAYOUT_STRATEGY_FALLBACK,\r\n            onLayoutChanged: function onLayoutChanged() {\r\n                var onLayoutChanged = that.option(\"onLayoutChanged\");\r\n                var isSingleColumnMode = that.isSingleColumnMode();\r\n                if (onLayoutChanged) {\r\n                    that.$element().toggleClass(_constants.LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\r\n                    onLayoutChanged(isSingleColumnMode)\r\n                }\r\n            },\r\n            onContentReady: function(e) {\r\n                if ((0, _window.hasWindow)()) {\r\n                    that._renderTemplates(templatesInfo)\r\n                }\r\n                if (that.option(\"onLayoutChanged\")) {\r\n                    that.$element().toggleClass(_constants.LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component))\r\n                }\r\n            },\r\n            itemTemplate: function(e, itemData, itemElement) {\r\n                if (!e.location) {\r\n                    return\r\n                }\r\n                var $itemElement = (0, _renderer.default)(itemElement);\r\n                var itemRenderedCountInPreviousRows = e.location.row * colCount;\r\n                var item = that._items[e.location.col + itemRenderedCountInPreviousRows];\r\n                var itemCssClassList = [item.cssClass];\r\n                $itemElement.toggleClass(_constants.SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\r\n                if (0 === e.location.row) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_ROW_CLASS)\r\n                }\r\n                if (0 === e.location.col) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_COL_CLASS)\r\n                }\r\n                if (item.itemType === _constants.SIMPLE_ITEM_TYPE && that.option(\"isRoot\")) {\r\n                    $itemElement.addClass(_constants.ROOT_SIMPLE_ITEM_CLASS)\r\n                }\r\n                var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;\r\n                var rowsCount = that._getRowsCount();\r\n                var isLastRow = e.location.row === rowsCount - 1;\r\n                if (isLastColumn) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_LAST_COL_CLASS)\r\n                }\r\n                if (isLastRow) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_LAST_ROW_CLASS)\r\n                }\r\n                if (\"empty\" !== item.itemType) {\r\n                    itemCssClassList.push(_constants.FIELD_ITEM_CLASS);\r\n                    itemCssClassList.push(that.option(\"cssItemClass\"));\r\n                    if ((0, _type.isDefined)(item.col)) {\r\n                        itemCssClassList.push(\"dx-col-\" + item.col)\r\n                    }\r\n                }\r\n                templatesInfo.push({\r\n                    itemType: item.itemType,\r\n                    item: item,\r\n                    $parent: $itemElement,\r\n                    rootElementCssClassList: itemCssClassList\r\n                })\r\n            },\r\n            cols: that._generateRatio(colCount),\r\n            rows: that._generateRatio(that._getRowsCount(), true),\r\n            dataSource: layoutItems,\r\n            screenByWidth: that.option(\"screenByWidth\"),\r\n            singleColumnScreen: xsColCount ? false : \"xs\"\r\n        }\r\n    },\r\n    _getColCount: function() {\r\n        var colCount = this.option(\"colCount\");\r\n        var colCountByScreen = this.option(\"colCountByScreen\");\r\n        if (colCountByScreen) {\r\n            var screenFactor = this.option(\"form\").getTargetScreenFactor();\r\n            if (!screenFactor) {\r\n                screenFactor = (0, _window.hasWindow)() ? (0, _window.getCurrentScreenFactor)(this.option(\"screenByWidth\")) : \"lg\"\r\n            }\r\n            colCount = colCountByScreen[screenFactor] || colCount\r\n        }\r\n        if (\"auto\" === colCount) {\r\n            if (this._cashedColCount) {\r\n                return this._cashedColCount\r\n            }\r\n            this._cashedColCount = colCount = this._getMaxColCount()\r\n        }\r\n        return colCount < 1 ? 1 : colCount\r\n    },\r\n    _getMaxColCount: function() {\r\n        if (!(0, _window.hasWindow)()) {\r\n            return 1\r\n        }\r\n        var minColWidth = this.option(\"minColWidth\");\r\n        var width = this.$element().width();\r\n        var itemsCount = this._items.length;\r\n        var maxColCount = Math.floor(width / minColWidth) || 1;\r\n        return itemsCount < maxColCount ? itemsCount : maxColCount\r\n    },\r\n    isCachedColCountObsolete: function() {\r\n        return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount\r\n    },\r\n    _prepareItemsWithMerging: function(colCount) {\r\n        var items = this._items.slice(0);\r\n        var item;\r\n        var itemsMergedByCol;\r\n        var result = [];\r\n        var j;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            result.push(item);\r\n            if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\r\n                item.col = this._getColByIndex(result.length - 1, colCount)\r\n            }\r\n            if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\r\n                itemsMergedByCol = [];\r\n                for (j = 0; j < item.colSpan - 1; j++) {\r\n                    itemsMergedByCol.push({\r\n                        merged: true\r\n                    })\r\n                }\r\n                result = result.concat(itemsMergedByCol)\r\n            } else {\r\n                delete item.colSpan\r\n            }\r\n        }\r\n        this._setItems(result)\r\n    },\r\n    _getColByIndex: function(index, colCount) {\r\n        return index % colCount\r\n    },\r\n    _setItems: function(items) {\r\n        this._items = items;\r\n        this._cashedColCount = null\r\n    },\r\n    _generateLayoutItems: function() {\r\n        var items = this._items;\r\n        var colCount = this._getColCount();\r\n        var result = [];\r\n        var item;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            if (!item.merged) {\r\n                var generatedItem = {\r\n                    location: {\r\n                        row: parseInt(i / colCount),\r\n                        col: this._getColByIndex(i, colCount)\r\n                    }\r\n                };\r\n                if ((0, _type.isDefined)(item.disabled)) {\r\n                    generatedItem.disabled = item.disabled\r\n                }\r\n                if ((0, _type.isDefined)(item.visible)) {\r\n                    generatedItem.visible = item.visible\r\n                }\r\n                if ((0, _type.isDefined)(item.colSpan)) {\r\n                    generatedItem.location.colspan = item.colSpan\r\n                }\r\n                if ((0, _type.isDefined)(item.rowSpan)) {\r\n                    generatedItem.location.rowspan = item.rowSpan\r\n                }\r\n                if ((0, _type.isDefined)(item._forceItemFlexSizeCorrectionInIE)) {\r\n                    generatedItem._forceItemFlexSizeCorrectionInIE = item._forceItemFlexSizeCorrectionInIE\r\n                }\r\n                result.push(generatedItem)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _renderEmptyItem: function($container) {\r\n        (0, _empty_item.renderEmptyItem)({\r\n            $container: $container\r\n        })\r\n    },\r\n    _renderButtonItem: function(_ref2) {\r\n        var item = _ref2.item,\r\n            $parent = _ref2.$parent,\r\n            rootElementCssClassList = _ref2.rootElementCssClassList;\r\n        var _renderButtonItem2 = (0, _button_item.renderButtonItem)({\r\n                item: item,\r\n                $parent: $parent,\r\n                rootElementCssClassList: rootElementCssClassList,\r\n                validationGroup: this.option(\"validationGroup\"),\r\n                createComponentCallback: this._createComponent.bind(this)\r\n            }),\r\n            $rootElement = _renderButtonItem2.$rootElement,\r\n            buttonInstance = _renderButtonItem2.buttonInstance;\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: buttonInstance,\r\n            guid: item.guid,\r\n            $itemContainer: $rootElement\r\n        })\r\n    },\r\n    _renderFieldItem: function(_ref3) {\r\n        var item = _ref3.item,\r\n            $parent = _ref3.$parent,\r\n            rootElementCssClassList = _ref3.rootElementCssClassList;\r\n        var editorValue = this._getDataByField(item.dataField);\r\n        var canAssignUndefinedValueToEditor = false;\r\n        if (void 0 === editorValue) {\r\n            var allowIndeterminateState = item.allowIndeterminateState,\r\n                editorType = item.editorType,\r\n                dataField = item.dataField;\r\n            canAssignUndefinedValueToEditor = this._isCheckboxUndefinedStateEnabled({\r\n                allowIndeterminateState: allowIndeterminateState,\r\n                editorType: editorType,\r\n                dataField: dataField\r\n            })\r\n        }\r\n        var name = item.dataField || item.name;\r\n        var _renderFieldItem2 = (0, _field_item.renderFieldItem)((0, _uiFormLayout_managerUtils.convertToRenderFieldItemOptions)({\r\n                $parent: $parent,\r\n                rootElementCssClassList: rootElementCssClassList,\r\n                item: item,\r\n                name: name,\r\n                editorValue: editorValue,\r\n                canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,\r\n                parentComponent: this._getComponentOwner(),\r\n                createComponentCallback: this._createComponent.bind(this),\r\n                useFlexLayout: this._hasBrowserFlex(),\r\n                formLabelLocation: this.option(\"labelLocation\"),\r\n                requiredMessageTemplate: this.option(\"requiredMessage\"),\r\n                validationGroup: this.option(\"validationGroup\"),\r\n                editorValidationBoundary: this.option(\"validationBoundary\"),\r\n                editorStylingMode: this.option(\"form\") && this.option(\"form\").option(\"stylingMode\"),\r\n                showColonAfterLabel: this.option(\"showColonAfterLabel\"),\r\n                managerLabelLocation: this.option(\"labelLocation\"),\r\n                template: item.template ? this._getTemplate(item.template) : null,\r\n                itemId: this.option(\"form\") && this.option(\"form\").getItemID(name),\r\n                managerMarkOptions: this._getMarkOptions()\r\n            })),\r\n            $fieldEditorContainer = _renderFieldItem2.$fieldEditorContainer,\r\n            widgetInstance = _renderFieldItem2.widgetInstance,\r\n            $rootElement = _renderFieldItem2.$rootElement;\r\n        if (widgetInstance && item.dataField) {\r\n            this._bindDataField(widgetInstance, item.dataField, item.editorType, $fieldEditorContainer)\r\n        }\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: widgetInstance,\r\n            guid: item.guid,\r\n            $itemContainer: $rootElement\r\n        })\r\n    },\r\n    _getMarkOptions: function() {\r\n        return {\r\n            showRequiredMark: this.option(\"showRequiredMark\"),\r\n            requiredMark: this.option(\"requiredMark\"),\r\n            showOptionalMark: this.option(\"showOptionalMark\"),\r\n            optionalMark: this.option(\"optionalMark\")\r\n        }\r\n    },\r\n    _getComponentOwner: function() {\r\n        return this.option(\"form\") || this\r\n    },\r\n    _bindDataField: function(editorInstance, dataField, editorType, $container) {\r\n        var componentOwner = this._getComponentOwner();\r\n        editorInstance.on(\"enterKey\", function(args) {\r\n            componentOwner._createActionByOption(\"onEditorEnterKey\")((0, _extend.extend)(args, {\r\n                dataField: dataField\r\n            }))\r\n        });\r\n        this._createWatcher(editorInstance, $container, dataField);\r\n        this.linkEditorToDataField(editorInstance, dataField, editorType)\r\n    },\r\n    _createWatcher: function(editorInstance, $container, dataField) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        if (!(0, _type.isFunction)(watch)) {\r\n            return\r\n        }\r\n        var dispose = watch(function() {\r\n            return that._getDataByField(dataField)\r\n        }, function() {\r\n            editorInstance.option(\"value\", that._getDataByField(dataField))\r\n        }, {\r\n            deep: true,\r\n            skipImmediate: true\r\n        });\r\n        _events_engine.default.on($container, _remove_event.default, dispose)\r\n    },\r\n    _getWatch: function() {\r\n        if (!(0, _type.isDefined)(this._watch)) {\r\n            var formInstance = this.option(\"form\");\r\n            this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\")\r\n        }\r\n        return this._watch\r\n    },\r\n    _createComponent: function($editor, type, editorOptions) {\r\n        var that = this;\r\n        var readOnlyState = this.option(\"readOnly\");\r\n        var instance = that.callBase($editor, type, editorOptions);\r\n        readOnlyState && instance.option(\"readOnly\", readOnlyState);\r\n        that.on(\"optionChanged\", function(args) {\r\n            if (\"readOnly\" === args.name && !(0, _type.isDefined)(editorOptions.readOnly)) {\r\n                instance.option(args.name, args.value)\r\n            }\r\n        });\r\n        return instance\r\n    },\r\n    _generateRatio: function(count, isAutoSize) {\r\n        var result = [];\r\n        var ratio;\r\n        var i;\r\n        for (i = 0; i < count; i++) {\r\n            ratio = {\r\n                ratio: 1\r\n            };\r\n            if (isAutoSize) {\r\n                ratio.baseSize = \"auto\"\r\n            }\r\n            result.push(ratio)\r\n        }\r\n        return result\r\n    },\r\n    _getRowsCount: function() {\r\n        return Math.ceil(this._items.length / this._getColCount())\r\n    },\r\n    _updateReferencedOptions: function(newLayoutData) {\r\n        var _this2 = this;\r\n        var layoutData = this.option(\"layoutData\");\r\n        if ((0, _type.isObject)(layoutData)) {\r\n            Object.getOwnPropertyNames(layoutData).forEach(function(property) {\r\n                return delete _this2._optionsByReference[\"layoutData.\" + property]\r\n            })\r\n        }\r\n        if ((0, _type.isObject)(newLayoutData)) {\r\n            Object.getOwnPropertyNames(newLayoutData).forEach(function(property) {\r\n                return _this2._optionsByReference[\"layoutData.\" + property] = true\r\n            })\r\n        }\r\n    },\r\n    _resetWidget: function(instance) {\r\n        this._disableEditorValueChangedHandler = true;\r\n        instance.reset();\r\n        this._disableEditorValueChangedHandler = false;\r\n        instance.option(\"isValid\", true)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var _this3 = this;\r\n        if (0 === args.fullName.search(\"layoutData.\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n                this._cashedRequiredConfig = null;\r\n                this._invalidate();\r\n                break;\r\n            case \"layoutData\":\r\n                this._updateReferencedOptions(args.value);\r\n                if (this.option(\"items\")) {\r\n                    if (!(0, _type.isEmptyObject)(args.value)) {\r\n                        this._itemsRunTimeInfo.each(function(_, itemRunTimeInfo) {\r\n                            if ((0, _type.isDefined)(itemRunTimeInfo.item)) {\r\n                                var dataField = itemRunTimeInfo.item.dataField;\r\n                                if (dataField && (0, _type.isDefined)(itemRunTimeInfo.widgetInstance)) {\r\n                                    var valueGetter = (0, _data.compileGetter)(dataField);\r\n                                    var dataValue = valueGetter(args.value);\r\n                                    var _itemRunTimeInfo$item = itemRunTimeInfo.item,\r\n                                        allowIndeterminateState = _itemRunTimeInfo$item.allowIndeterminateState,\r\n                                        editorType = _itemRunTimeInfo$item.editorType;\r\n                                    if (void 0 !== dataValue || _this3._isCheckboxUndefinedStateEnabled({\r\n                                            allowIndeterminateState: allowIndeterminateState,\r\n                                            editorType: editorType,\r\n                                            dataField: dataField\r\n                                        })) {\r\n                                        itemRunTimeInfo.widgetInstance.option(\"value\", dataValue)\r\n                                    } else {\r\n                                        _this3._resetWidget(itemRunTimeInfo.widgetInstance)\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    this._initDataAndItems(args.value);\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"items\":\r\n                this._cleanItemWatchers();\r\n                this._initDataAndItems(args.value);\r\n                this._invalidate();\r\n                break;\r\n            case \"alignItemLabels\":\r\n            case \"labelLocation\":\r\n            case \"requiredMessage\":\r\n                this._invalidate();\r\n                break;\r\n            case \"customizeItem\":\r\n                this._updateItems(this.option(\"layoutData\"));\r\n                this._invalidate();\r\n                break;\r\n            case \"colCount\":\r\n                this._resetColCount();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _resetColCount: function() {\r\n        this._cashedColCount = null;\r\n        this._invalidate()\r\n    },\r\n    linkEditorToDataField: function(editorInstance, dataField) {\r\n        var _this4 = this;\r\n        this.on(\"optionChanged\", function(args) {\r\n            if (args.fullName === \"layoutData.\".concat(dataField)) {\r\n                editorInstance._setOptionWithoutOptionChange(\"value\", args.value)\r\n            }\r\n        });\r\n        editorInstance.on(\"valueChanged\", function(args) {\r\n            var isValueReferenceType = (0, _type.isObject)(args.value) || Array.isArray(args.value);\r\n            if (!_this4._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {\r\n                _this4._updateFieldValue(dataField, args.value)\r\n            }\r\n        })\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\r\n            this._eventsStrategy.fireEvent(\"autoColCountChanged\")\r\n        }\r\n    },\r\n    updateData: function(data, value) {\r\n        var that = this;\r\n        if ((0, _type.isObject)(data)) {\r\n            (0, _iterator.each)(data, function(dataField, fieldValue) {\r\n                that._updateFieldValue(dataField, fieldValue)\r\n            })\r\n        } else {\r\n            if (\"string\" === typeof data) {\r\n                that._updateFieldValue(data, value)\r\n            }\r\n        }\r\n    },\r\n    getEditor: function(field) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field)\r\n    },\r\n    isSingleColumnMode: function(component) {\r\n        var responsiveBox = this._responsiveBox || component;\r\n        if (responsiveBox) {\r\n            return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\")\r\n        }\r\n    },\r\n    getItemsRunTimeInfo: function() {\r\n        return this._itemsRunTimeInfo\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxLayoutManager\", LayoutManager);\r\nvar _default = LayoutManager;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/form/ui.form.layout_manager.utils.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.convertToLabelMarkOptions = convertToLabelMarkOptions;\r\nexports.convertToRenderFieldItemOptions = convertToRenderFieldItemOptions;\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _inflector = require(\"../../core/utils/inflector\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _constants = require(\"./constants\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar EDITORS_WITH_ARRAY_VALUE = [\"dxTagBox\", \"dxRangeSlider\"];\r\n\r\nfunction convertToRenderFieldItemOptions(_ref) {\r\n    var $parent = _ref.$parent,\r\n        rootElementCssClassList = _ref.rootElementCssClassList,\r\n        parentComponent = _ref.parentComponent,\r\n        createComponentCallback = _ref.createComponentCallback,\r\n        useFlexLayout = _ref.useFlexLayout,\r\n        item = _ref.item,\r\n        template = _ref.template,\r\n        name = _ref.name,\r\n        formLabelLocation = _ref.formLabelLocation,\r\n        requiredMessageTemplate = _ref.requiredMessageTemplate,\r\n        validationGroup = _ref.validationGroup,\r\n        editorValue = _ref.editorValue,\r\n        canAssignUndefinedValueToEditor = _ref.canAssignUndefinedValueToEditor,\r\n        editorValidationBoundary = _ref.editorValidationBoundary,\r\n        editorStylingMode = _ref.editorStylingMode,\r\n        showColonAfterLabel = _ref.showColonAfterLabel,\r\n        managerLabelLocation = _ref.managerLabelLocation,\r\n        itemId = _ref.itemId,\r\n        managerMarkOptions = _ref.managerMarkOptions;\r\n    var isRequired = (0, _type.isDefined)(item.isRequired) ? item.isRequired : !!_hasRequiredRuleInSet(item.validationRules);\r\n    var isSimpleItem = item.itemType === _constants.SIMPLE_ITEM_TYPE;\r\n    var helpID = item.helpText ? \"dx-\" + new _guid.default : null;\r\n    var helpText = item.helpText;\r\n    var labelOptions = _convertToLabelOptions({\r\n        item: item,\r\n        id: itemId,\r\n        isRequired: isRequired,\r\n        managerMarkOptions: managerMarkOptions,\r\n        showColonAfterLabel: showColonAfterLabel,\r\n        labelLocation: managerLabelLocation\r\n    });\r\n    var needRenderLabel = labelOptions.visible && labelOptions.text;\r\n    var labelLocation = labelOptions.location,\r\n        labelID = labelOptions.labelID;\r\n    var labelNeedBaselineAlign = \"top\" !== labelLocation && (!!item.helpText && !useFlexLayout || (0, _array.inArray)(item.editorType, [\"dxTextArea\", \"dxRadioGroup\", \"dxCalendar\", \"dxHtmlEditor\"]) !== -1);\r\n    return {\r\n        $parent: $parent,\r\n        rootElementCssClassList: rootElementCssClassList,\r\n        parentComponent: parentComponent,\r\n        createComponentCallback: createComponentCallback,\r\n        useFlexLayout: useFlexLayout,\r\n        labelOptions: labelOptions,\r\n        labelNeedBaselineAlign: labelNeedBaselineAlign,\r\n        labelLocation: labelLocation,\r\n        needRenderLabel: needRenderLabel,\r\n        item: item,\r\n        isSimpleItem: isSimpleItem,\r\n        isRequired: isRequired,\r\n        template: template,\r\n        helpID: helpID,\r\n        labelID: labelID,\r\n        name: name,\r\n        helpText: helpText,\r\n        formLabelLocation: formLabelLocation,\r\n        requiredMessageTemplate: requiredMessageTemplate,\r\n        validationGroup: validationGroup,\r\n        editorOptions: _convertToEditorOptions({\r\n            editorType: item.editorType,\r\n            editorValue: editorValue,\r\n            defaultEditorName: item.dataField,\r\n            canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,\r\n            externalEditorOptions: item.editorOptions,\r\n            editorInputId: itemId,\r\n            editorValidationBoundary: editorValidationBoundary,\r\n            editorStylingMode: editorStylingMode\r\n        })\r\n    }\r\n}\r\n\r\nfunction convertToLabelMarkOptions(_ref2, isRequired) {\r\n    var showRequiredMark = _ref2.showRequiredMark,\r\n        requiredMark = _ref2.requiredMark,\r\n        showOptionalMark = _ref2.showOptionalMark,\r\n        optionalMark = _ref2.optionalMark;\r\n    return {\r\n        showRequiredMark: showRequiredMark && isRequired,\r\n        requiredMark: requiredMark,\r\n        showOptionalMark: showOptionalMark && !isRequired,\r\n        optionalMark: optionalMark\r\n    }\r\n}\r\n\r\nfunction _convertToEditorOptions(_ref3) {\r\n    var editorType = _ref3.editorType,\r\n        defaultEditorName = _ref3.defaultEditorName,\r\n        editorValue = _ref3.editorValue,\r\n        canAssignUndefinedValueToEditor = _ref3.canAssignUndefinedValueToEditor,\r\n        externalEditorOptions = _ref3.externalEditorOptions,\r\n        editorInputId = _ref3.editorInputId,\r\n        editorValidationBoundary = _ref3.editorValidationBoundary,\r\n        editorStylingMode = _ref3.editorStylingMode;\r\n    var editorOptionsWithValue = {};\r\n    if (void 0 !== editorValue || canAssignUndefinedValueToEditor) {\r\n        editorOptionsWithValue.value = editorValue\r\n    }\r\n    if (EDITORS_WITH_ARRAY_VALUE.indexOf(editorType) !== -1) {\r\n        editorOptionsWithValue.value = editorOptionsWithValue.value || []\r\n    }\r\n    var result = (0, _extend.extend)(true, editorOptionsWithValue, externalEditorOptions, {\r\n        inputAttr: {\r\n            id: editorInputId\r\n        },\r\n        validationBoundary: editorValidationBoundary,\r\n        stylingMode: editorStylingMode\r\n    });\r\n    if (externalEditorOptions) {\r\n        if (result.dataSource) {\r\n            result.dataSource = externalEditorOptions.dataSource\r\n        }\r\n        if (result.items) {\r\n            result.items = externalEditorOptions.items\r\n        }\r\n    }\r\n    if (defaultEditorName && !result.name) {\r\n        result.name = defaultEditorName\r\n    }\r\n    return result\r\n}\r\n\r\nfunction _hasRequiredRuleInSet(rules) {\r\n    var hasRequiredRule;\r\n    if (rules && rules.length) {\r\n        (0, _iterator.each)(rules, function(index, rule) {\r\n            if (\"required\" === rule.type) {\r\n                hasRequiredRule = true;\r\n                return false\r\n            }\r\n        })\r\n    }\r\n    return hasRequiredRule\r\n}\r\n\r\nfunction _convertToLabelOptions(_ref4) {\r\n    var item = _ref4.item,\r\n        id = _ref4.id,\r\n        isRequired = _ref4.isRequired,\r\n        managerMarkOptions = _ref4.managerMarkOptions,\r\n        showColonAfterLabel = _ref4.showColonAfterLabel,\r\n        labelLocation = _ref4.labelLocation;\r\n    var labelOptions = (0, _extend.extend)({\r\n        showColon: showColonAfterLabel,\r\n        location: labelLocation,\r\n        id: id,\r\n        visible: true,\r\n        isRequired: isRequired\r\n    }, item ? item.label : {}, {\r\n        markOptions: convertToLabelMarkOptions(managerMarkOptions, isRequired)\r\n    });\r\n    var editorsRequiringIdForLabel = [\"dxRadioGroup\", \"dxCheckBox\", \"dxLookup\", \"dxSlider\", \"dxRangeSlider\", \"dxSwitch\", \"dxHtmlEditor\"];\r\n    if ((0, _array.inArray)(item.editorType, editorsRequiringIdForLabel) !== -1) {\r\n        labelOptions.labelID = \"dx-label-\".concat(new _guid.default)\r\n    }\r\n    if (!labelOptions.text && item.dataField) {\r\n        labelOptions.text = (0, _inflector.captionize)(item.dataField)\r\n    }\r\n    if (labelOptions.text) {\r\n        labelOptions.text += labelOptions.showColon ? \":\" : \"\"\r\n    }\r\n    return labelOptions\r\n}\r\n","/**\r\n * DevExtreme (ui/form/ui.form.utils.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.tryGetTabPath = exports.isFullPathContainsTabs = exports.isExpectedItem = exports.getTextWithoutSpaces = exports.getOptionNameFromFullName = exports.getItemPath = exports.getFullOptionName = exports.createItemPathByIndex = exports.concatPaths = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\nvar createItemPathByIndex = function(index, isTabs) {\r\n    return \"\".concat(isTabs ? \"tabs\" : \"items\", \"[\").concat(index, \"]\")\r\n};\r\nexports.createItemPathByIndex = createItemPathByIndex;\r\nvar concatPaths = function(path1, path2) {\r\n    if ((0, _type.isDefined)(path1) && (0, _type.isDefined)(path2)) {\r\n        return \"\".concat(path1, \".\").concat(path2)\r\n    }\r\n    return path1 || path2\r\n};\r\nexports.concatPaths = concatPaths;\r\nvar getTextWithoutSpaces = function(text) {\r\n    return text ? text.replace(/\\s/g, \"\") : void 0\r\n};\r\nexports.getTextWithoutSpaces = getTextWithoutSpaces;\r\nvar isExpectedItem = function(item, fieldName) {\r\n    return item && (item.dataField === fieldName || item.name === fieldName || getTextWithoutSpaces(item.title) === fieldName || \"group\" === item.itemType && getTextWithoutSpaces(item.caption) === fieldName)\r\n};\r\nexports.isExpectedItem = isExpectedItem;\r\nvar getFullOptionName = function(path, optionName) {\r\n    return \"\".concat(path, \".\").concat(optionName)\r\n};\r\nexports.getFullOptionName = getFullOptionName;\r\nvar getOptionNameFromFullName = function(fullName) {\r\n    var parts = fullName.split(\".\");\r\n    return parts[parts.length - 1].replace(/\\[\\d+]/, \"\")\r\n};\r\nexports.getOptionNameFromFullName = getOptionNameFromFullName;\r\nvar tryGetTabPath = function(fullPath) {\r\n    var pathParts = fullPath.split(\".\");\r\n    var resultPathParts = _toConsumableArray(pathParts);\r\n    for (var i = pathParts.length - 1; i >= 0; i--) {\r\n        if (isFullPathContainsTabs(pathParts[i])) {\r\n            return resultPathParts.join(\".\")\r\n        }\r\n        resultPathParts.splice(i, 1)\r\n    }\r\n    return \"\"\r\n};\r\nexports.tryGetTabPath = tryGetTabPath;\r\nvar isFullPathContainsTabs = function(fullPath) {\r\n    return fullPath.indexOf(\"tabs\") > -1\r\n};\r\nexports.isFullPathContainsTabs = isFullPathContainsTabs;\r\nvar getItemPath = function getItemPath(items, item, isTabs) {\r\n    var index = items.indexOf(item);\r\n    if (index > -1) {\r\n        return createItemPathByIndex(index, isTabs)\r\n    }\r\n    for (var i = 0; i < items.length; i++) {\r\n        var targetItem = items[i];\r\n        var tabOrGroupItems = targetItem.tabs || targetItem.items;\r\n        if (tabOrGroupItems) {\r\n            var itemPath = getItemPath(tabOrGroupItems, item, targetItem.tabs);\r\n            if (itemPath) {\r\n                return concatPaths(createItemPathByIndex(i, isTabs), itemPath)\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.getItemPath = getItemPath;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.accessibility.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nexports.registerKeyboardAction = void 0;\r\nvar accessibility = _interopRequireWildcard(require(\"../../ui/shared/accessibility\"));\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cacheBabelInterop = new WeakMap;\r\n    var cacheNodeInterop = new WeakMap;\r\n    return (_getRequireWildcardCache = function(nodeInterop) {\r\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop\r\n    })(nodeInterop)\r\n}\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) {\r\n    if (!nodeInterop && obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache(nodeInterop);\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (\"default\" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\nvar registerKeyboardAction = function(viewName, instance, $element, selector, action) {\r\n    var keyboardController = instance.getController(\"keyboardNavigation\");\r\n    if (instance.option(\"useLegacyKeyboardNavigation\") || keyboardController && !keyboardController.isKeyboardEnabled()) {\r\n        return\r\n    }\r\n    var executeKeyDown = function(args) {\r\n        instance.executeAction(\"onKeyDown\", args)\r\n    };\r\n    instance.createAction(\"onKeyDown\");\r\n    accessibility.registerKeyboardAction(viewName, instance, $element, selector, action, executeKeyDown)\r\n};\r\nexports.registerKeyboardAction = registerKeyboardAction;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.adaptivity.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _click = require(\"../../events/click\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _form = _interopRequireDefault(require(\"../form\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _themes = require(\"../themes\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\nvar ROWS_VIEW = \"rowsView\";\r\nvar FOOTER_VIEW = \"footerView\";\r\nvar COLUMN_VIEWS = [COLUMN_HEADERS_VIEW, ROWS_VIEW, FOOTER_VIEW];\r\nvar ADAPTIVE_NAMESPACE = \"dxDataGridAdaptivity\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar ADAPTIVE_ROW_TYPE = \"detailAdaptive\";\r\nvar FORM_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar FORM_ITEM_MODIFIED = \"dx-item-modified\";\r\nvar HIDDEN_COLUMN_CLASS = \"hidden-column\";\r\nvar ADAPTIVE_COLUMN_BUTTON_CLASS = \"adaptive-more\";\r\nvar ADAPTIVE_COLUMN_NAME_CLASS = \"dx-command-adaptive\";\r\nvar COMMAND_ADAPTIVE_HIDDEN_CLASS = \"dx-command-adaptive-hidden\";\r\nvar ADAPTIVE_DETAIL_ROW_CLASS = \"dx-adaptive-detail-row\";\r\nvar ADAPTIVE_ITEM_TEXT_CLASS = \"dx-adaptive-item-text\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar LAST_DATA_CELL_CLASS = \"dx-last-data-cell\";\r\nvar ADAPTIVE_COLUMN_NAME = \"adaptive\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar EXPAND_ARIA_NAME = \"dxDataGrid-ariaAdaptiveExpand\";\r\nvar COLLAPSE_ARIA_NAME = \"dxDataGrid-ariaAdaptiveCollapse\";\r\n\r\nfunction getColumnId(that, column) {\r\n    return that._columnsController.getColumnId(column)\r\n}\r\n\r\nfunction getDataCellElements($row) {\r\n    return $row.find(\"td:not(.dx-datagrid-hidden-column):not([class*='dx-command-'])\")\r\n}\r\n\r\nfunction adaptiveCellTemplate(container, options) {\r\n    var $adaptiveColumnButton;\r\n    var $container = (0, _renderer.default)(container);\r\n    var adaptiveColumnsController = options.component.getController(\"adaptiveColumns\");\r\n    if (\"data\" === options.rowType) {\r\n        $adaptiveColumnButton = (0, _renderer.default)(\"<span>\").addClass(adaptiveColumnsController.addWidgetPrefix(ADAPTIVE_COLUMN_BUTTON_CLASS));\r\n        _events_engine.default.on($adaptiveColumnButton, (0, _index.addNamespace)(_click.name, ADAPTIVE_NAMESPACE), adaptiveColumnsController.createAction(function() {\r\n            adaptiveColumnsController.toggleExpandAdaptiveDetailRow(options.key)\r\n        }));\r\n        $adaptiveColumnButton.appendTo($container)\r\n    } else {\r\n        _uiGrid_core2.default.setEmptyText($container)\r\n    }\r\n}\r\nvar AdaptiveColumnsController = _uiGrid_core.default.ViewController.inherit({\r\n    _isRowEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_ROW\r\n    },\r\n    _isItemModified: function(item, cellOptions) {\r\n        var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n        var rowIndex = this._dataController.getRowIndexByKey(cellOptions.key);\r\n        var row = this._dataController.items()[rowIndex + 1];\r\n        return row && row.modifiedValues && (0, _type.isDefined)(row.modifiedValues[columnIndex])\r\n    },\r\n    _renderFormViewTemplate: function(item, cellOptions, $container) {\r\n        var that = this;\r\n        var column = item.column;\r\n        var focusAction = that.createAction(function() {\r\n            _events_engine.default.trigger($container, _click.name)\r\n        });\r\n        var value = column.calculateCellValue(cellOptions.data);\r\n        var displayValue = _uiGrid_core2.default.getDisplayValue(column, value, cellOptions.data, cellOptions.rowType);\r\n        var text = _uiGrid_core2.default.formatValue(displayValue, column);\r\n        var isCellOrBatchEditMode = this._editingController.isCellOrBatchEditMode();\r\n        var rowsView = that._rowsView;\r\n        if (column.allowEditing && that.getController(\"keyboardNavigation\").isKeyboardEnabled()) {\r\n            $container.attr(\"tabIndex\", that.option(\"tabIndex\"));\r\n            if (isCellOrBatchEditMode) {\r\n                _events_engine.default.off($container, \"focus\", focusAction);\r\n                _events_engine.default.on($container, \"focus\", focusAction)\r\n            }\r\n        }\r\n        if (column.cellTemplate) {\r\n            var templateOptions = (0, _extend.extend)({}, cellOptions, {\r\n                value: value,\r\n                displayValue: displayValue,\r\n                text: text,\r\n                column: column\r\n            });\r\n            var isDomElement = !!$container.closest((0, _window.getWindow)().document).length;\r\n            rowsView.renderTemplate($container, column.cellTemplate, templateOptions, isDomElement).done(function() {\r\n                rowsView._cellPrepared($container, cellOptions)\r\n            })\r\n        } else {\r\n            var container = $container.get(0);\r\n            if (column.encodeHtml) {\r\n                container.textContent = text\r\n            } else {\r\n                container.innerHTML = text\r\n            }\r\n            $container.addClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n            if (!(0, _type.isDefined)(text) || \"\" === text) {\r\n                $container.html(\"&nbsp;\")\r\n            }\r\n            if (!that._isRowEditMode()) {\r\n                if (that._isItemModified(item, cellOptions)) {\r\n                    $container.addClass(FORM_ITEM_MODIFIED)\r\n                }\r\n            }\r\n            rowsView._cellPrepared($container, cellOptions)\r\n        }\r\n    },\r\n    _getTemplate: function(item, cellOptions) {\r\n        var that = this;\r\n        var column = item.column;\r\n        var editingController = this.getController(\"editing\");\r\n        return function(options, container) {\r\n            var $container = (0, _renderer.default)(container);\r\n            var columnIndex = that._columnsController.getVisibleIndex(column.index);\r\n            var templateOptions = (0, _extend.extend)({}, cellOptions);\r\n            var renderFormTemplate = function() {\r\n                var isItemEdited = that._isItemEdited(item);\r\n                templateOptions.value = cellOptions.row.values[columnIndex];\r\n                if (isItemEdited || column.showEditorAlways) {\r\n                    editingController.renderFormEditTemplate(templateOptions, item, options.component, $container, !isItemEdited)\r\n                } else {\r\n                    templateOptions.column = column;\r\n                    templateOptions.columnIndex = columnIndex;\r\n                    that._renderFormViewTemplate(item, templateOptions, $container)\r\n                }\r\n            };\r\n            renderFormTemplate();\r\n            templateOptions.watch && templateOptions.watch(function() {\r\n                return {\r\n                    isItemEdited: that._isItemEdited(item),\r\n                    value: cellOptions.row.values[columnIndex]\r\n                }\r\n            }, function() {\r\n                $container.contents().remove();\r\n                $container.removeClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n                renderFormTemplate()\r\n            })\r\n        }\r\n    },\r\n    _isVisibleColumnsValid: function(visibleColumns) {\r\n        var getCommandColumnsCount = function() {\r\n            var result = 0;\r\n            for (var j = 0; j < visibleColumns.length; j++) {\r\n                var visibleColumn = visibleColumns[j];\r\n                if (visibleColumn.command) {\r\n                    result++\r\n                }\r\n            }\r\n            return result\r\n        };\r\n        if (visibleColumns < 2) {\r\n            return false\r\n        }\r\n        if (visibleColumns.length - getCommandColumnsCount() <= 1) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _calculatePercentWidths: function(widths, visibleColumns) {\r\n        var that = this;\r\n        var percentWidths = 0;\r\n        visibleColumns.forEach(function(item, index) {\r\n            if (widths[index] !== HIDDEN_COLUMNS_WIDTH) {\r\n                percentWidths += that._getItemPercentWidth(item)\r\n            }\r\n        });\r\n        return percentWidths\r\n    },\r\n    _isPercentWidth: function(width) {\r\n        return (0, _type.isString)(width) && \"%\" === width.slice(-1)\r\n    },\r\n    _isColumnHidden: function(column) {\r\n        return this._hiddenColumns.filter(function(hiddenColumn) {\r\n            return hiddenColumn.index === column.index\r\n        }).length > 0\r\n    },\r\n    _getAverageColumnsWidth: function(containerWidth, columns, columnsCanFit) {\r\n        var that = this;\r\n        var fixedColumnsWidth = 0;\r\n        var columnsWithoutFixedWidthCount = 0;\r\n        columns.forEach(function(column) {\r\n            if (!that._isColumnHidden(column)) {\r\n                var width = column.width;\r\n                if ((0, _type.isDefined)(width) && !isNaN(parseFloat(width))) {\r\n                    fixedColumnsWidth += that._isPercentWidth(width) ? that._calculatePercentWidth({\r\n                        visibleIndex: column.visibleIndex,\r\n                        columnsCount: columns.length,\r\n                        columnsCanFit: columnsCanFit,\r\n                        bestFitWidth: column.bestFitWidth,\r\n                        columnWidth: width,\r\n                        containerWidth: containerWidth\r\n                    }) : parseFloat(width)\r\n                } else {\r\n                    columnsWithoutFixedWidthCount++\r\n                }\r\n            }\r\n        });\r\n        return (containerWidth - fixedColumnsWidth) / columnsWithoutFixedWidthCount\r\n    },\r\n    _calculateColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        var columnsCount = contentColumns.length;\r\n        var colWidth;\r\n        if (widthOption && \"auto\" !== widthOption) {\r\n            if (this._isPercentWidth(widthOption)) {\r\n                colWidth = this._calculatePercentWidth({\r\n                    visibleIndex: column.visibleIndex,\r\n                    columnsCount: columnsCount,\r\n                    columnsCanFit: columnsCanFit,\r\n                    bestFitWidth: bestFitWidth,\r\n                    columnWidth: widthOption,\r\n                    containerWidth: containerWidth\r\n                })\r\n            } else {\r\n                return parseFloat(widthOption)\r\n            }\r\n        } else {\r\n            var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n            colWidth = columnAutoWidth || !!column.command ? bestFitWidth : this._getAverageColumnsWidth(containerWidth, contentColumns, columnsCanFit)\r\n        }\r\n        return colWidth\r\n    },\r\n    _calculatePercentWidth: function(options) {\r\n        var columnFitted = options.visibleIndex < options.columnsCount - 1 && options.columnsCanFit;\r\n        var partialWidth = options.containerWidth * parseFloat(options.columnWidth) / 100;\r\n        var resultWidth = options.columnsCanFit && partialWidth < options.bestFitWidth ? options.bestFitWidth : partialWidth;\r\n        return columnFitted ? options.containerWidth * parseFloat(options.columnWidth) / 100 : resultWidth\r\n    },\r\n    _getNotTruncatedColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        if (widthOption && \"auto\" !== widthOption && !this._isPercentWidth(widthOption)) {\r\n            return parseFloat(widthOption)\r\n        }\r\n        var colWidth = this._calculateColumnWidth(column, containerWidth, contentColumns, columnsCanFit);\r\n        return colWidth < bestFitWidth ? null : colWidth\r\n    },\r\n    _getItemPercentWidth: function(item) {\r\n        var result = 0;\r\n        if (item.width && this._isPercentWidth(item.width)) {\r\n            result = parseFloat(item.width)\r\n        }\r\n        return result\r\n    },\r\n    _getCommandColumnsWidth: function() {\r\n        var that = this;\r\n        var columns = that._columnsController.getVisibleColumns();\r\n        var colWidth = 0;\r\n        (0, _iterator.each)(columns, function(index, column) {\r\n            if (column.index < 0 || column.command) {\r\n                colWidth += that._columnsController.columnOption(getColumnId(that, column), \"bestFitWidth\") || 0\r\n            }\r\n        });\r\n        return colWidth\r\n    },\r\n    _isItemEdited: function(item) {\r\n        if (this.isFormEditMode()) {\r\n            return false\r\n        }\r\n        if (this._isRowEditMode()) {\r\n            var editRowKey = this.option(\"editing.editRowKey\");\r\n            if ((0, _common.equalByValue)(editRowKey, this._dataController.adaptiveExpandedKey())) {\r\n                return true\r\n            }\r\n        } else {\r\n            var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n            var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n            return this._editingController.isEditCell(rowIndex, columnIndex)\r\n        }\r\n    },\r\n    _getFormItemsByHiddenColumns: function(hiddenColumns) {\r\n        var items = [];\r\n        (0, _iterator.each)(hiddenColumns, function(_, column) {\r\n            items.push({\r\n                column: column,\r\n                name: column.name,\r\n                dataField: column.dataField,\r\n                visibleIndex: column.visibleIndex\r\n            })\r\n        });\r\n        return items\r\n    },\r\n    _getAdaptiveColumnVisibleIndex: function(visibleColumns) {\r\n        for (var i = 0; i < visibleColumns.length; i++) {\r\n            var column = visibleColumns[i];\r\n            if (column.command === ADAPTIVE_COLUMN_NAME) {\r\n                return i\r\n            }\r\n        }\r\n    },\r\n    _hideAdaptiveColumn: function(resultWidths, visibleColumns) {\r\n        var visibleIndex = this._getAdaptiveColumnVisibleIndex(visibleColumns);\r\n        if ((0, _type.isDefined)(visibleIndex)) {\r\n            resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n            this._hideVisibleColumn({\r\n                isCommandColumn: true,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }\r\n    },\r\n    _showHiddenCellsInView: function(_ref) {\r\n        var $cells = _ref.$cells,\r\n            isCommandColumn = _ref.isCommandColumn;\r\n        var cssClassNameToRemove = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cells.removeClass(cssClassNameToRemove)\r\n    },\r\n    _showHiddenColumns: function() {\r\n        for (var i = 0; i < COLUMN_VIEWS.length; i++) {\r\n            var view = this.getView(COLUMN_VIEWS[i]);\r\n            if (view && view.isVisible() && view.element()) {\r\n                var viewName = view.name;\r\n                var $hiddenCommandCells = view.element().find(\".\" + COMMAND_ADAPTIVE_HIDDEN_CLASS);\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCommandCells,\r\n                    isCommandColumn: true\r\n                });\r\n                var $hiddenCells = view.element().find(\".\" + this.addWidgetPrefix(HIDDEN_COLUMN_CLASS));\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCells\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _isCellValid: function($cell) {\r\n        return $cell && $cell.length && !$cell.hasClass(MASTER_DETAIL_CELL_CLASS) && !$cell.hasClass(GROUP_CELL_CLASS)\r\n    },\r\n    _hideVisibleColumn: function(_ref2) {\r\n        var isCommandColumn = _ref2.isCommandColumn,\r\n            visibleIndex = _ref2.visibleIndex;\r\n        var that = this;\r\n        COLUMN_VIEWS.forEach(function(viewName) {\r\n            var view = that.getView(viewName);\r\n            view && that._hideVisibleColumnInView({\r\n                view: view,\r\n                isCommandColumn: isCommandColumn,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        })\r\n    },\r\n    _hideVisibleColumnInView: function(_ref3) {\r\n        var view = _ref3.view,\r\n            isCommandColumn = _ref3.isCommandColumn,\r\n            visibleIndex = _ref3.visibleIndex;\r\n        var viewName = view.name;\r\n        var $cellElement;\r\n        var column = this._columnsController.getVisibleColumns()[visibleIndex];\r\n        var editFormRowIndex = this._editingController && this._editingController.getEditFormRowIndex();\r\n        if (view && view.isVisible() && column) {\r\n            var rowsCount = view.getRowsCount();\r\n            var $rowElements = view._getRowElements();\r\n            for (var rowIndex = 0; rowIndex < rowsCount; rowIndex++) {\r\n                var cancelClassAdding = rowIndex === editFormRowIndex && viewName === ROWS_VIEW && \"popup\" !== this.option(\"editing.mode\");\r\n                if (!cancelClassAdding) {\r\n                    var currentVisibleIndex = viewName === COLUMN_HEADERS_VIEW ? this._columnsController.getVisibleIndex(column.index, rowIndex) : visibleIndex;\r\n                    if (currentVisibleIndex >= 0) {\r\n                        var $rowElement = $rowElements.eq(rowIndex);\r\n                        $cellElement = this._findCellElementInRow($rowElement, currentVisibleIndex);\r\n                        this._isCellValid($cellElement) && this._hideVisibleCellInView({\r\n                            viewName: viewName,\r\n                            isCommandColumn: isCommandColumn,\r\n                            $cell: $cellElement\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _findCellElementInRow: function($rowElement, visibleColumnIndex) {\r\n        var $rowCells = $rowElement.children();\r\n        var visibleIndex = visibleColumnIndex;\r\n        var cellIsInsideGroup = false;\r\n        if ($rowElement.hasClass(GROUP_ROW_CLASS)) {\r\n            var $groupCell = $rowElement.find(\".\".concat(GROUP_CELL_CLASS));\r\n            var colSpan = $groupCell.attr(\"colspan\");\r\n            if ($groupCell.length && (0, _type.isDefined)(colSpan)) {\r\n                var groupCellLength = parseInt(colSpan);\r\n                var endGroupIndex = $groupCell.index() + groupCellLength - 1;\r\n                if (visibleColumnIndex > endGroupIndex) {\r\n                    visibleIndex = visibleColumnIndex - groupCellLength + 1\r\n                } else {\r\n                    cellIsInsideGroup = true\r\n                }\r\n            }\r\n        }\r\n        var $cellElement = !cellIsInsideGroup ? $rowCells.eq(visibleIndex) : void 0;\r\n        return $cellElement\r\n    },\r\n    _hideVisibleCellInView: function(_ref4) {\r\n        var $cell = _ref4.$cell,\r\n            isCommandColumn = _ref4.isCommandColumn;\r\n        var cssClassNameToAdd = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cell.addClass(cssClassNameToAdd)\r\n    },\r\n    _getEditMode: function() {\r\n        return this._editingController.getEditMode()\r\n    },\r\n    isFormEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_FORM || editMode === EDIT_MODE_POPUP\r\n    },\r\n    hideRedundantColumns: function(resultWidths, visibleColumns, hiddenQueue) {\r\n        var that = this;\r\n        this._hiddenColumns = [];\r\n        if (that._isVisibleColumnsValid(visibleColumns) && hiddenQueue.length) {\r\n            var totalWidth = 0;\r\n            var $rootElement = that.component.$element();\r\n            var rootElementWidth = $rootElement.width() - that._getCommandColumnsWidth();\r\n            var getVisibleContentColumns = function() {\r\n                var _this = this;\r\n                return visibleColumns.filter(function(item) {\r\n                    return !item.command && 0 === _this._hiddenColumns.filter(function(i) {\r\n                        return i.index === item.index\r\n                    }).length\r\n                })\r\n            }.bind(this);\r\n            var visibleContentColumns = getVisibleContentColumns();\r\n            var contentColumnsCount = visibleContentColumns.length;\r\n            var i;\r\n            var hasHiddenColumns;\r\n            var needHideColumn;\r\n            do {\r\n                needHideColumn = false;\r\n                totalWidth = 0;\r\n                var percentWidths = that._calculatePercentWidths(resultWidths, visibleColumns);\r\n                var columnsCanFit = percentWidths < 100 && 0 !== percentWidths;\r\n                for (i = 0; i < visibleColumns.length; i++) {\r\n                    var visibleColumn = visibleColumns[i];\r\n                    var columnWidth = that._getNotTruncatedColumnWidth(visibleColumn, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    var columnId = getColumnId(that, visibleColumn);\r\n                    var widthOption = that._columnsController.columnOption(columnId, \"width\");\r\n                    var minWidth = that._columnsController.columnOption(columnId, \"minWidth\");\r\n                    var columnBestFitWidth = that._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n                    if (resultWidths[i] === HIDDEN_COLUMNS_WIDTH) {\r\n                        hasHiddenColumns = true;\r\n                        continue\r\n                    }\r\n                    if (!columnWidth && !visibleColumn.command && !visibleColumn.fixed) {\r\n                        needHideColumn = true;\r\n                        break\r\n                    }\r\n                    if (!widthOption || \"auto\" === widthOption) {\r\n                        columnWidth = Math.max(columnBestFitWidth || 0, minWidth || 0)\r\n                    }\r\n                    if (visibleColumn.command !== ADAPTIVE_COLUMN_NAME || hasHiddenColumns) {\r\n                        totalWidth += columnWidth\r\n                    }\r\n                }\r\n                needHideColumn = needHideColumn || totalWidth > $rootElement.width();\r\n                if (needHideColumn) {\r\n                    var column = hiddenQueue.pop();\r\n                    var visibleIndex = that._columnsController.getVisibleIndex(column.index);\r\n                    rootElementWidth += that._calculateColumnWidth(column, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    that._hideVisibleColumn({\r\n                        visibleIndex: visibleIndex\r\n                    });\r\n                    resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n                    this._hiddenColumns.push(column);\r\n                    visibleContentColumns = getVisibleContentColumns()\r\n                }\r\n            } while (needHideColumn && visibleContentColumns.length > 1 && hiddenQueue.length);\r\n            if (contentColumnsCount === visibleContentColumns.length) {\r\n                that._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n            }\r\n        } else {\r\n            that._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n        }\r\n    },\r\n    getItemContentByColumnIndex: function(visibleColumnIndex) {\r\n        var $itemContent;\r\n        for (var i = 0; i < this._$itemContents.length; i++) {\r\n            $itemContent = this._$itemContents.eq(i);\r\n            var item = $itemContent.data(\"dx-form-item\");\r\n            if (item && item.column && this._columnsController.getVisibleIndex(item.column.index) === visibleColumnIndex) {\r\n                return $itemContent\r\n            }\r\n        }\r\n    },\r\n    toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n        if (!(this.isFormEditMode() && this._editingController.isEditing())) {\r\n            this.getController(\"data\").toggleExpandAdaptiveDetailRow(key, alwaysExpanded)\r\n        }\r\n    },\r\n    createFormByHiddenColumns: function(container, options) {\r\n        var that = this;\r\n        var $container = (0, _renderer.default)(container);\r\n        var userFormOptions = {\r\n            items: that._getFormItemsByHiddenColumns(that._hiddenColumns),\r\n            formID: \"dx-\" + new _guid.default\r\n        };\r\n        var defaultFormOptions = (0, _themes.isMaterial)() ? {\r\n            colCount: 2\r\n        } : {};\r\n        this.executeAction(\"onAdaptiveDetailRowPreparing\", {\r\n            formOptions: userFormOptions\r\n        });\r\n        that._$itemContents = null;\r\n        that._form = that._createComponent((0, _renderer.default)(\"<div>\").appendTo($container), _form.default, (0, _extend.extend)(defaultFormOptions, userFormOptions, {\r\n            customizeItem: function(item) {\r\n                var column = item.column || that._columnsController.columnOption(item.name || item.dataField);\r\n                if (column) {\r\n                    item.label = item.label || {};\r\n                    item.label.text = item.label.text || column.caption;\r\n                    item.column = column;\r\n                    item.template = that._getTemplate(item, options, that.updateForm.bind(that))\r\n                }\r\n                userFormOptions.customizeItem && userFormOptions.customizeItem.call(this, item)\r\n            },\r\n            onContentReady: function(e) {\r\n                userFormOptions.onContentReady && userFormOptions.onContentReady.call(this, e);\r\n                that._$itemContents = $container.find(\".\" + FORM_ITEM_CONTENT_CLASS)\r\n            }\r\n        }))\r\n    },\r\n    hasAdaptiveDetailRowExpanded: function() {\r\n        return (0, _type.isDefined)(this._dataController.adaptiveExpandedKey())\r\n    },\r\n    updateForm: function(hiddenColumns) {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            if (this._form && (0, _type.isDefined)(this._form._contentReadyAction)) {\r\n                if (hiddenColumns && hiddenColumns.length) {\r\n                    this._form.option(\"items\", this._getFormItemsByHiddenColumns(hiddenColumns))\r\n                } else {\r\n                    this._form.repaint()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateHidingQueue: function(columns) {\r\n        var that = this;\r\n        var hideableColumns = columns.filter(function(column) {\r\n            return column.visible && !column.type && !column.fixed && !((0, _type.isDefined)(column.groupIndex) && column.groupIndex >= 0)\r\n        });\r\n        var columnsHasHidingPriority;\r\n        var i;\r\n        that._hidingColumnsQueue = [];\r\n        if (that.option(\"allowColumnResizing\") && \"widget\" === that.option(\"columnResizingMode\")) {\r\n            return that._hidingColumnsQueue\r\n        }\r\n        for (i = 0; i < hideableColumns.length; i++) {\r\n            if ((0, _type.isDefined)(hideableColumns[i].hidingPriority) && hideableColumns[i].hidingPriority >= 0) {\r\n                columnsHasHidingPriority = true;\r\n                that._hidingColumnsQueue[hideableColumns[i].hidingPriority] = hideableColumns[i]\r\n            }\r\n        }\r\n        if (columnsHasHidingPriority) {\r\n            that._hidingColumnsQueue.reverse()\r\n        } else {\r\n            if (that.option(\"columnHidingEnabled\")) {\r\n                for (i = 0; i < hideableColumns.length; i++) {\r\n                    var visibleIndex = that._columnsController.getVisibleIndex(hideableColumns[i].index);\r\n                    that._hidingColumnsQueue[visibleIndex] = hideableColumns[i]\r\n                }\r\n            }\r\n        }\r\n        that._hidingColumnsQueue = that._hidingColumnsQueue.filter(Object);\r\n        return that._hidingColumnsQueue\r\n    },\r\n    getHiddenColumns: function() {\r\n        return this._hiddenColumns\r\n    },\r\n    hasHiddenColumns: function() {\r\n        return this._hiddenColumns.length > 0\r\n    },\r\n    getHidingColumnsQueue: function() {\r\n        return this._hidingColumnsQueue\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController.addCommandColumn({\r\n            type: ADAPTIVE_COLUMN_NAME,\r\n            command: ADAPTIVE_COLUMN_NAME,\r\n            visible: true,\r\n            adaptiveHidden: true,\r\n            cssClass: ADAPTIVE_COLUMN_NAME_CLASS,\r\n            alignment: \"center\",\r\n            width: \"auto\",\r\n            cellTemplate: adaptiveCellTemplate,\r\n            fixedPosition: \"right\"\r\n        });\r\n        that._columnsController.columnsChanged.add(function() {\r\n            var isAdaptiveVisible = !!that.updateHidingQueue(that._columnsController.getColumns()).length;\r\n            that._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !isAdaptiveVisible, true)\r\n        });\r\n        that._editingController = that.getController(\"editing\");\r\n        that._hidingColumnsQueue = [];\r\n        that._hiddenColumns = [];\r\n        that.createAction(\"onAdaptiveDetailRowPreparing\");\r\n        that.callBase()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"columnHidingEnabled\" === args.name) {\r\n            this._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !args.value)\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"isAdaptiveDetailRowExpanded\", \"expandAdaptiveDetailRow\", \"collapseAdaptiveDetailRow\"]\r\n    },\r\n    isAdaptiveDetailRowExpanded: function(key) {\r\n        return this._dataController.adaptiveExpandedKey() && (0, _common.equalByValue)(this._dataController.adaptiveExpandedKey(), key)\r\n    },\r\n    expandAdaptiveDetailRow: function(key) {\r\n        if (!this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow(key)\r\n        }\r\n    },\r\n    collapseAdaptiveDetailRow: function() {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow()\r\n        }\r\n    },\r\n    updateCommandAdaptiveAriaLabel: function(key, label) {\r\n        var rowIndex = this._dataController.getRowIndexByKey(key);\r\n        if (rowIndex === -1) {\r\n            return\r\n        }\r\n        var $row = (0, _renderer.default)(this.component.getRowElement(rowIndex));\r\n        this.setCommandAdaptiveAriaLabel($row, label)\r\n    },\r\n    setCommandAdaptiveAriaLabel: function($row, labelName) {\r\n        var $adaptiveCommand = $row.find(\".dx-command-adaptive\");\r\n        $adaptiveCommand.attr(\"aria-label\", _message.default.format(labelName))\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnHidingEnabled: false,\r\n            onAdaptiveDetailRowPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        adaptiveColumns: AdaptiveColumnsController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.rowType === ADAPTIVE_ROW_TYPE && \"detail\" === column.command) {\r\n                        return function(container, options) {\r\n                            that._adaptiveColumnsController.createFormByHiddenColumns((0, _renderer.default)(container), options)\r\n                        }\r\n                    }\r\n                    return that.callBase(options)\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase(row);\r\n                    if (row && row.rowType === ADAPTIVE_ROW_TYPE && row.key === this._dataController.adaptiveExpandedKey()) {\r\n                        $row.addClass(ADAPTIVE_DETAIL_ROW_CLASS)\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase($row, options);\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    var hidingColumnsQueueLength = adaptiveColumnsController.getHidingColumnsQueue().length;\r\n                    var hiddenColumnsLength = adaptiveColumnsController.getHiddenColumns().length;\r\n                    if (hidingColumnsQueueLength && !hiddenColumnsLength) {\r\n                        getDataCellElements($row).last().addClass(LAST_DATA_CELL_CLASS)\r\n                    }\r\n                    if (\"data\" === options.row.rowType) {\r\n                        adaptiveColumnsController.setCommandAdaptiveAriaLabel($row, EXPAND_ARIA_NAME)\r\n                    }\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $itemContent = $element.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    if ($itemContent.length && $itemContent.closest(this.component.$element()).length) {\r\n                        var formItem = $itemContent.length ? $itemContent.first().data(\"dx-form-item\") : null;\r\n                        return formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index)\r\n                    } else {\r\n                        return this.callBase($element)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (options.row.rowType !== ADAPTIVE_ROW_TYPE && options.column.visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        $cell.addClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                    }\r\n                },\r\n                _getCellElement: function(rowIndex, columnIdentifier) {\r\n                    var item = this._dataController.items()[rowIndex];\r\n                    if (item && item.rowType === ADAPTIVE_ROW_TYPE) {\r\n                        return this._adaptiveColumnsController.getItemContentByColumnIndex(columnIdentifier)\r\n                    } else {\r\n                        return this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    if (options.row && \"detailAdaptive\" === options.row.rowType) {\r\n                        var view = this.component.getView(\"columnHeadersView\");\r\n                        var formItem = (0, _renderer.default)(options.targetElement).closest(\".dx-field-item-label\").next().data(\"dx-form-item\");\r\n                        options.column = formItem ? formItem.column : options.column;\r\n                        return view.getContextMenuItems && view.getContextMenuItems(options)\r\n                    }\r\n                    return this.callBase && this.callBase(options)\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isClickable = this.callBase ? this.callBase($target) : false;\r\n                    return isClickable || !!$target.closest(\".\" + ADAPTIVE_COLUMN_NAME_CLASS).length\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            \"export\": {\r\n                _updateColumnWidth: function(column, width) {\r\n                    this.callBase(column, column.visibleWidth === HIDDEN_COLUMNS_WIDTH ? column.bestFitWidth : width)\r\n                }\r\n            },\r\n            columnsResizer: {\r\n                _pointCreated: function(point, cellsLength, columns) {\r\n                    var result = this.callBase(point, cellsLength, columns);\r\n                    var currentColumn = columns[point.columnIndex] || {};\r\n                    var nextColumnIndex = this._getNextColumnIndex(point.columnIndex);\r\n                    var nextColumn = columns[nextColumnIndex] || {};\r\n                    var hasHiddenColumnsOnly = nextColumnIndex !== point.columnIndex + 1 && nextColumn.command;\r\n                    var hasAdaptiveHiddenWidth = currentColumn.visibleWidth === HIDDEN_COLUMNS_WIDTH || hasHiddenColumnsOnly;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                },\r\n                _getNextColumnIndex: function(currentColumnIndex) {\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    var index = this.callBase(currentColumnIndex);\r\n                    while (visibleColumns[index] && visibleColumns[index].visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        index++\r\n                    }\r\n                    return index\r\n                }\r\n            },\r\n            draggingHeader: {\r\n                _pointCreated: function(point, columns, location, sourceColumn) {\r\n                    var result = this.callBase(point, columns, location, sourceColumn);\r\n                    var column = columns[point.columnIndex - 1] || {};\r\n                    var hasAdaptiveHiddenWidth = column.visibleWidth === HIDDEN_COLUMNS_WIDTH;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                }\r\n            },\r\n            editing: {\r\n                _isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _getFormEditItemTemplate: function(cellOptions, column) {\r\n                    if (this.getEditMode() !== EDIT_MODE_ROW && \"detailAdaptive\" === cellOptions.rowType) {\r\n                        cellOptions.columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                        return this.getColumnTemplate(cellOptions)\r\n                    }\r\n                    return this.callBase(cellOptions, column)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    var $itemContents = $targetElement.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n                    var formItem = $itemContents.length ? $itemContents.first().data(\"dx-form-item\") : null;\r\n                    var columnIndex = formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index);\r\n                    if (!this.isEditCell(rowIndex, columnIndex)) {\r\n                        this.callBase($targetElement)\r\n                    }\r\n                },\r\n                _beforeUpdateItems: function(rowIndices, rowIndex) {\r\n                    if (!this._adaptiveController.isFormEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        var items = this._dataController.items();\r\n                        var item = items[rowIndex];\r\n                        var oldExpandRowIndex = _uiGrid_core2.default.getIndexByKey(this._dataController.adaptiveExpandedKey(), items);\r\n                        this._isForceRowAdaptiveExpand = !this._adaptiveController.hasAdaptiveDetailRowExpanded();\r\n                        if (oldExpandRowIndex >= 0) {\r\n                            rowIndices.push(oldExpandRowIndex + 1)\r\n                        }\r\n                        rowIndices.push(rowIndex + 1);\r\n                        this._dataController.adaptiveExpandedKey(item.key)\r\n                    }\r\n                },\r\n                _afterInsertRow: function(options) {\r\n                    this.callBase(options);\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._adaptiveController.toggleExpandAdaptiveDetailRow(options.key, this.isRowEditMode());\r\n                        this._isForceRowAdaptiveExpand = true\r\n                    }\r\n                },\r\n                _collapseAdaptiveDetailRow: function() {\r\n                    if (this._isRowEditMode() && this._isForceRowAdaptiveExpand) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow();\r\n                        this._isForceRowAdaptiveExpand = false\r\n                    }\r\n                },\r\n                _cancelEditAdaptiveDetailRow: function() {\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._collapseAdaptiveDetailRow()\r\n                    }\r\n                },\r\n                _afterSaveEditData: function() {\r\n                    var _this2 = this;\r\n                    this.callBase.apply(this, arguments);\r\n                    var deferred = new _deferred.Deferred;\r\n                    if (this._isRowEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        (0, _deferred.when)(this.getController(\"validating\").validate(true)).done(function(isValid) {\r\n                            if (isValid) {\r\n                                _this2._cancelEditAdaptiveDetailRow()\r\n                            }\r\n                            deferred.resolve()\r\n                        })\r\n                    } else {\r\n                        deferred.resolve()\r\n                    }\r\n                    return deferred.promise()\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.callBase();\r\n                    this._cancelEditAdaptiveDetailRow()\r\n                },\r\n                _getRowIndicesForCascadeUpdating: function(row) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.isAdaptiveDetailRowExpanded(row.key)) {\r\n                        rowIndices.push(row.rowType === ADAPTIVE_ROW_TYPE ? row.rowIndex - 1 : row.rowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _beforeCloseEditCellInBatchMode: function(rowIndices) {\r\n                    var expandedKey = this._dataController._adaptiveExpandedKey;\r\n                    if (expandedKey) {\r\n                        var rowIndex = _uiGrid_core2.default.getIndexByKey(expandedKey, this._dataController.items());\r\n                        if (rowIndex > -1) {\r\n                            rowIndices.unshift(rowIndex)\r\n                        }\r\n                    }\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    if (this._adaptiveController.isFormEditMode()) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && this._adaptiveController.isAdaptiveDetailRowExpanded(rowKey)) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            },\r\n            resizing: {\r\n                _needBestFit: function() {\r\n                    return this.callBase() || !!this._adaptiveColumnsController.getHidingColumnsQueue().length\r\n                },\r\n                _updateScrollableForIE: function() {\r\n                    var that = this;\r\n                    if (_browser.default.msie && parseInt(_browser.default.version) <= 11) {\r\n                        this._updateScrollableTimeoutID = setTimeout(function() {\r\n                            that.getView(\"rowsView\")._updateScrollable()\r\n                        })\r\n                    }\r\n                },\r\n                _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n                    var adaptiveController = this._adaptiveColumnsController;\r\n                    var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n                    var oldHiddenColumns = adaptiveController.getHiddenColumns();\r\n                    var hidingColumnsQueue = adaptiveController.updateHidingQueue(this._columnsController.getColumns());\r\n                    adaptiveController.hideRedundantColumns(resultWidths, visibleColumns, hidingColumnsQueue);\r\n                    var hiddenColumns = adaptiveController.getHiddenColumns();\r\n                    if (adaptiveController.hasAdaptiveDetailRowExpanded()) {\r\n                        if (oldHiddenColumns.length !== hiddenColumns.length) {\r\n                            adaptiveController.updateForm(hiddenColumns)\r\n                        }\r\n                    }!hiddenColumns.length && adaptiveController.collapseAdaptiveDetailRow();\r\n                    if (columnAutoWidth && hidingColumnsQueue.length && !hiddenColumns.length) {\r\n                        this._updateScrollableForIE()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    isBestFit && this._adaptiveColumnsController._showHiddenColumns();\r\n                    this.callBase(isBestFit)\r\n                },\r\n                _needStretch: function() {\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    return this.callBase.apply(this, arguments) || adaptiveColumnsController.getHidingColumnsQueue().length || adaptiveColumnsController.hasHiddenColumns()\r\n                },\r\n                init: function() {\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    this.callBase()\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._updateScrollableTimeoutID)\r\n                }\r\n            },\r\n            data: {\r\n                _processItems: function(items, change) {\r\n                    var that = this;\r\n                    var changeType = change.changeType;\r\n                    items = that.callBase.apply(that, arguments);\r\n                    if (\"loadingAll\" === changeType || !(0, _type.isDefined)(that._adaptiveExpandedKey)) {\r\n                        return items\r\n                    }\r\n                    var expandRowIndex = _uiGrid_core2.default.getIndexByKey(that._adaptiveExpandedKey, items);\r\n                    if (expandRowIndex >= 0) {\r\n                        var item = items[expandRowIndex];\r\n                        items.splice(expandRowIndex + 1, 0, {\r\n                            visible: true,\r\n                            rowType: ADAPTIVE_ROW_TYPE,\r\n                            key: item.key,\r\n                            data: item.data,\r\n                            node: item.node,\r\n                            modifiedValues: item.modifiedValues,\r\n                            isNewRow: item.isNewRow,\r\n                            values: item.values\r\n                        })\r\n                    } else {\r\n                        if (\"refresh\" === changeType) {\r\n                            that._adaptiveExpandedKey = void 0\r\n                        }\r\n                    }\r\n                    return items\r\n                },\r\n                _getRowIndicesForExpand: function(key) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this.getController(\"adaptiveColumns\").isAdaptiveDetailRowExpanded(key)) {\r\n                        var lastRowIndex = rowIndices[rowIndices.length - 1];\r\n                        rowIndices.push(lastRowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                adaptiveExpandedKey: function(value) {\r\n                    if ((0, _type.isDefined)(value)) {\r\n                        this._adaptiveExpandedKey = value\r\n                    } else {\r\n                        return this._adaptiveExpandedKey\r\n                    }\r\n                },\r\n                toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n                    var that = this;\r\n                    var oldExpandLoadedRowIndex = _uiGrid_core2.default.getIndexByKey(that._adaptiveExpandedKey, that._items);\r\n                    var newExpandLoadedRowIndex = _uiGrid_core2.default.getIndexByKey(key, that._items);\r\n                    if (oldExpandLoadedRowIndex >= 0 && oldExpandLoadedRowIndex === newExpandLoadedRowIndex && !alwaysExpanded) {\r\n                        key = void 0;\r\n                        newExpandLoadedRowIndex = -1\r\n                    }\r\n                    var oldKey = that._adaptiveExpandedKey;\r\n                    that._adaptiveExpandedKey = key;\r\n                    if (oldExpandLoadedRowIndex >= 0) {\r\n                        oldExpandLoadedRowIndex++\r\n                    }\r\n                    if (newExpandLoadedRowIndex >= 0) {\r\n                        newExpandLoadedRowIndex++\r\n                    }\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    that.updateItems({\r\n                        allowInvisibleRowIndices: true,\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldExpandLoadedRowIndex - rowIndexDelta, newExpandLoadedRowIndex - rowIndexDelta]\r\n                    });\r\n                    var adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(key, COLLAPSE_ARIA_NAME);\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(oldKey, EXPAND_ARIA_NAME)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveExpandedKey = void 0\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _getFocusCellSelector: function() {\r\n                    return this.callBase() + \", .dx-adaptive-detail-row .dx-field-item > .dx-field-item-content\"\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    return this.callBase() + \", .dx-field-item-content .\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)\r\n                }\r\n            },\r\n            columns: {\r\n                _isColumnVisible: function(column) {\r\n                    return this.callBase(column) && !column.adaptiveHidden\r\n                }\r\n            },\r\n            keyboardNavigation: {\r\n                _isCellValid: function($cell) {\r\n                    return this.callBase.apply(this, arguments) && !$cell.hasClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                },\r\n                _processNextCellInMasterDetail: function($nextCell) {\r\n                    this.callBase($nextCell);\r\n                    var isCellOrBatchMode = this._editingController.isCellOrBatchEditMode();\r\n                    if (!this._isInsideEditForm($nextCell) && $nextCell && isCellOrBatchMode) {\r\n                        var focusHandler = function focusHandler() {\r\n                            _events_engine.default.off($nextCell, \"focus\", focusHandler);\r\n                            _events_engine.default.trigger($nextCell, \"dxclick\")\r\n                        };\r\n                        _events_engine.default.on($nextCell, \"focus\", focusHandler)\r\n                    }\r\n                },\r\n                _handleTabKeyOnMasterDetailCell: function(eventTarget, direction) {\r\n                    var result = this.callBase(eventTarget, direction);\r\n                    var $currentCell = this._getFocusedCell();\r\n                    var $row = $currentCell && $currentCell.parent();\r\n                    if (!result && $row && $row.length) {\r\n                        var $dataCells = getDataCellElements($row);\r\n                        var $targetCell = \"next\" === direction ? $dataCells.last() : $dataCells.first();\r\n                        var rowIndex = $row.get(0).rowIndex;\r\n                        var adaptiveController = this._adaptiveController;\r\n                        var key = this._dataController.getKeyByRowIndex(\"next\" === direction ? rowIndex : rowIndex - 1);\r\n                        var isCellElementsEquals = $currentCell && $targetCell && $currentCell.get(0) === $targetCell.get(0);\r\n                        return adaptiveController.isAdaptiveDetailRowExpanded(key) && isCellElementsEquals\r\n                    }\r\n                    return result\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.column_chooser.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = require(\"./ui.grid_core.columns_view\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _themes = require(\"../themes\");\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\nvar _tree_view = _interopRequireDefault(require(\"../tree_view\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _popup = _interopRequireDefault(require(\"../popup\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COLUMN_CHOOSER_CLASS = \"column-chooser\";\r\nvar COLUMN_CHOOSER_BUTTON_CLASS = \"column-chooser-button\";\r\nvar NOTOUCH_ACTION_CLASS = \"notouch-action\";\r\nvar COLUMN_CHOOSER_LIST_CLASS = \"column-chooser-list\";\r\nvar COLUMN_CHOOSER_PLAIN_CLASS = \"column-chooser-plain\";\r\nvar COLUMN_CHOOSER_DRAG_CLASS = \"column-chooser-mode-drag\";\r\nvar COLUMN_CHOOSER_SELECT_CLASS = \"column-chooser-mode-select\";\r\nvar COLUMN_CHOOSER_ICON_NAME = \"column-chooser\";\r\nvar COLUMN_CHOOSER_ITEM_CLASS = \"dx-column-chooser-item\";\r\nvar TREEVIEW_NODE_SELECTOR = \".dx-treeview-node\";\r\nvar CHECKBOX_SELECTOR = \".dx-checkbox\";\r\nvar CLICK_TIMEOUT = 300;\r\nvar processItems = function(that, chooserColumns) {\r\n    var items = [];\r\n    var isSelectMode = \"select\" === that.option(\"columnChooser.mode\");\r\n    if (chooserColumns.length) {\r\n        (0, _iterator.each)(chooserColumns, function(index, column) {\r\n            var item = {\r\n                text: column.caption,\r\n                cssClass: column.cssClass,\r\n                allowHiding: column.allowHiding,\r\n                expanded: true,\r\n                id: column.index,\r\n                disabled: false,\r\n                disableCheckBox: false === column.allowHiding,\r\n                parentId: (0, _type.isDefined)(column.ownerBand) ? column.ownerBand : null\r\n            };\r\n            if (isSelectMode) {\r\n                item.selected = column.visible\r\n            }\r\n            items.push(item)\r\n        })\r\n    }\r\n    return items\r\n};\r\nvar ColumnChooserController = _uiGrid_core.default.ViewController.inherit({\r\n    renderShowColumnChooserButton: function($element) {\r\n        var that = this;\r\n        var columnChooserButtonClass = that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS);\r\n        var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n        var $showColumnChooserButton = $element.find(\".\" + columnChooserButtonClass);\r\n        var $columnChooserButton;\r\n        if (columnChooserEnabled) {\r\n            if (!$showColumnChooserButton.length) {\r\n                $columnChooserButton = (0, _renderer.default)(\"<div>\").addClass(columnChooserButtonClass).appendTo($element);\r\n                that._createComponent($columnChooserButton, _button.default, {\r\n                    icon: COLUMN_CHOOSER_ICON_NAME,\r\n                    onClick: function() {\r\n                        that.getView(\"columnChooserView\").showColumnChooser()\r\n                    },\r\n                    hint: that.option(\"columnChooser.title\"),\r\n                    integrationOptions: {}\r\n                })\r\n            } else {\r\n                $showColumnChooserButton.show()\r\n            }\r\n        } else {\r\n            $showColumnChooserButton.hide()\r\n        }\r\n    },\r\n    getPosition: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return {\r\n            my: \"right bottom\",\r\n            at: \"right bottom\",\r\n            of: rowsView && rowsView.element(),\r\n            collision: \"fit\",\r\n            offset: \"-2 -2\",\r\n            boundaryOffset: \"2 2\"\r\n        }\r\n    }\r\n});\r\nvar ColumnChooserView = _uiGrid_core2.ColumnsView.inherit({\r\n    _resizeCore: _common.noop,\r\n    _isWinDevice: function() {\r\n        return !!_devices.default.real().win\r\n    },\r\n    _updateList: function(change) {\r\n        var items;\r\n        var $popupContent = this._popupContainer.$content();\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var columnChooserList = this._columnChooserList;\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        if (isSelectMode && columnChooserList && change && \"selection\" === change.changeType) {\r\n            items = processItems(this, chooserColumns);\r\n            for (var i = 0; i < items.length; i++) {\r\n                var selected = items[i].selected;\r\n                var id = items[i].id;\r\n                if (id === change.columnIndex) {\r\n                    if (selected) {\r\n                        columnChooserList.selectItem(id, selected)\r\n                    } else {\r\n                        columnChooserList.unselectItem(id, selected)\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (!isSelectMode || !columnChooserList || \"full\" === change) {\r\n                this._popupContainer.$wrapper().toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_DRAG_CLASS), !isSelectMode).toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_SELECT_CLASS), isSelectMode);\r\n                items = processItems(this, chooserColumns);\r\n                this._renderTreeView($popupContent, items)\r\n            }\r\n        }\r\n    },\r\n    _initializePopupContainer: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(that.addWidgetPrefix(COLUMN_CHOOSER_CLASS));\r\n        var columnChooserOptions = that.option(\"columnChooser\");\r\n        var themeName = (0, _themes.current)();\r\n        var isGenericTheme = (0, _themes.isGeneric)(themeName);\r\n        var isMaterial = (0, _themes.isMaterial)(themeName);\r\n        var dxPopupOptions = {\r\n            visible: false,\r\n            shading: false,\r\n            showCloseButton: false,\r\n            dragEnabled: true,\r\n            resizeEnabled: true,\r\n            toolbarItems: [{\r\n                text: columnChooserOptions.title,\r\n                toolbar: \"top\",\r\n                location: isGenericTheme || isMaterial ? \"before\" : \"center\"\r\n            }],\r\n            position: that.getController(\"columnChooser\").getPosition(),\r\n            width: columnChooserOptions.width,\r\n            height: columnChooserOptions.height,\r\n            rtlEnabled: that.option(\"rtlEnabled\"),\r\n            onHidden: function() {\r\n                if (that._isWinDevice()) {\r\n                    (0, _renderer.default)(\"body\").removeClass(that.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n                }\r\n            },\r\n            container: columnChooserOptions.container\r\n        };\r\n        if (isGenericTheme || isMaterial) {\r\n            (0, _extend.extend)(dxPopupOptions, {\r\n                showCloseButton: true\r\n            })\r\n        } else {\r\n            dxPopupOptions.toolbarItems[dxPopupOptions.toolbarItems.length] = {\r\n                shortcut: \"cancel\"\r\n            }\r\n        }\r\n        if (!(0, _type.isDefined)(this._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, _popup.default, dxPopupOptions);\r\n            that._popupContainer.on(\"optionChanged\", function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.renderCompleted.fire()\r\n                }\r\n            })\r\n        } else {\r\n            this._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _renderCore: function(change) {\r\n        if (this._popupContainer) {\r\n            this._updateList(change)\r\n        }\r\n    },\r\n    _renderTreeView: function($container, items) {\r\n        var that = this;\r\n        var columnChooser = this.option(\"columnChooser\");\r\n        var isSelectMode = \"select\" === columnChooser.mode;\r\n        var treeViewConfig = {\r\n            items: items,\r\n            dataStructure: \"plain\",\r\n            activeStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            itemTemplate: \"item\",\r\n            showCheckBoxesMode: \"none\",\r\n            rootValue: null,\r\n            searchEnabled: columnChooser.allowSearch,\r\n            searchTimeout: columnChooser.searchTimeout,\r\n            onItemRendered: function(e) {\r\n                if (e.itemData.disableCheckBox) {\r\n                    var $treeViewNode = (0, _renderer.default)(e.itemElement).closest(TREEVIEW_NODE_SELECTOR);\r\n                    var $checkBox;\r\n                    if ($treeViewNode.length) {\r\n                        $checkBox = $treeViewNode.find(CHECKBOX_SELECTOR);\r\n                        if ($checkBox.length) {\r\n                            var checkBoxInstance = $checkBox.data(\"dxCheckBox\");\r\n                            checkBoxInstance && checkBoxInstance.option(\"disabled\", true)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var scrollableInstance = $container.find(\".dx-scrollable\").data(\"dxScrollable\");\r\n        var scrollTop = scrollableInstance && scrollableInstance.scrollTop();\r\n        if (isSelectMode && !this._columnsController.isBandColumnsUsed()) {\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_PLAIN_CLASS))\r\n        }\r\n        treeViewConfig.onContentReady = function(e) {\r\n            (0, _common.deferUpdate)(function() {\r\n                if (scrollTop) {\r\n                    var scrollable = (0, _renderer.default)(e.element).find(\".dx-scrollable\").data(\"dxScrollable\");\r\n                    scrollable && scrollable.scrollTo({\r\n                        y: scrollTop\r\n                    })\r\n                }\r\n                that.renderCompleted.fire()\r\n            })\r\n        };\r\n        if (this._isWinDevice()) {\r\n            treeViewConfig.useNativeScrolling = false\r\n        }(0, _extend.extend)(treeViewConfig, isSelectMode ? this._prepareSelectModeConfig() : this._prepareDragModeConfig());\r\n        if (this._columnChooserList) {\r\n            if (!treeViewConfig.searchEnabled) {\r\n                treeViewConfig.searchValue = \"\"\r\n            }\r\n            this._columnChooserList.option(treeViewConfig)\r\n        } else {\r\n            this._columnChooserList = this._createComponent($container, _tree_view.default, treeViewConfig);\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_LIST_CLASS))\r\n        }\r\n    },\r\n    _prepareDragModeConfig: function() {\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return {\r\n            noDataText: columnChooserOptions.emptyPanelText,\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            itemTemplate: function(data, index, item) {\r\n                (0, _renderer.default)(item).text(data.text).parent().addClass(data.cssClass).addClass(COLUMN_CHOOSER_ITEM_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _prepareSelectModeConfig: function() {\r\n        var that = this;\r\n        var selectionChangedHandler = function(e) {\r\n            var visibleColumns = that._columnsController.getVisibleColumns().filter(function(item) {\r\n                return !item.command\r\n            });\r\n            var isLastColumnUnselected = 1 === visibleColumns.length && !e.itemData.selected;\r\n            if (isLastColumnUnselected) {\r\n                e.component.selectItem(e.itemElement)\r\n            } else {\r\n                setTimeout(function() {\r\n                    that._columnsController.columnOption(e.itemData.id, \"visible\", e.itemData.selected)\r\n                }, CLICK_TIMEOUT)\r\n            }\r\n        };\r\n        return {\r\n            selectNodesRecursive: false,\r\n            showCheckBoxesMode: \"normal\",\r\n            onItemSelectionChanged: selectionChangedHandler\r\n        }\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var changeTypes = e.changeTypes;\r\n        var optionNames = e.optionNames;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        this.callBase(e);\r\n        if (isSelectMode) {\r\n            var needPartialRender = optionNames.visible && 1 === optionNames.length && void 0 !== e.columnIndex;\r\n            var needFullRender = optionNames.showInColumnChooser || optionNames.caption || optionNames.visible || changeTypes.columns && optionNames.all;\r\n            if (needPartialRender) {\r\n                this.render(null, {\r\n                    changeType: \"selection\",\r\n                    columnIndex: e.columnIndex\r\n                })\r\n            } else {\r\n                if (needFullRender) {\r\n                    this.render(null, \"full\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"columnChooser\":\r\n                this._initializePopupContainer();\r\n                this.render(null, \"full\");\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getColumnElements: function() {\r\n        var result = [];\r\n        var $node;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        var $content = this._popupContainer && this._popupContainer.$content();\r\n        var $nodes = $content && $content.find(\".dx-treeview-node\");\r\n        if ($nodes) {\r\n            chooserColumns.forEach(function(column) {\r\n                $node = $nodes.filter(\"[data-item-id = '\" + column.index + \"']\");\r\n                var item = $node.length ? $node.children(\".\" + COLUMN_CHOOSER_ITEM_CLASS).get(0) : null;\r\n                result.push(item)\r\n            })\r\n        }\r\n        return (0, _renderer.default)(result)\r\n    },\r\n    getName: function() {\r\n        return \"columnChooser\"\r\n    },\r\n    getColumns: function() {\r\n        return this._columnsController.getChooserColumns()\r\n    },\r\n    allowDragging: function(column, sourceLocation) {\r\n        var columnVisible = column && column.allowHiding && (\"columnChooser\" !== sourceLocation || !column.visible && this._columnsController.isParentColumnVisible(column.index));\r\n        return this.isColumnChooserVisible() && columnVisible\r\n    },\r\n    getBoundingRect: function() {\r\n        var that = this;\r\n        var container = that._popupContainer && that._popupContainer.$overlayContent();\r\n        if (container && container.is(\":visible\")) {\r\n            var offset = container.offset();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                right: offset.left + container.outerWidth(),\r\n                bottom: offset.top + container.outerHeight()\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    showColumnChooser: function() {\r\n        if (!this._popupContainer) {\r\n            this._initializePopupContainer();\r\n            this.render()\r\n        }\r\n        this._popupContainer.show();\r\n        if (this._isWinDevice()) {\r\n            (0, _renderer.default)(\"body\").addClass(this.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n        }\r\n    },\r\n    hideColumnChooser: function() {\r\n        if (this._popupContainer) {\r\n            this._popupContainer.hide()\r\n        }\r\n    },\r\n    isColumnChooserVisible: function() {\r\n        var popupContainer = this._popupContainer;\r\n        return popupContainer && popupContainer.option(\"visible\")\r\n    },\r\n    publicMethods: function() {\r\n        return [\"showColumnChooser\", \"hideColumnChooser\"]\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnChooser: {\r\n                enabled: false,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                mode: \"dragAndDrop\",\r\n                width: 250,\r\n                height: 260,\r\n                title: _message.default.format(\"dxDataGrid-columnChooserTitle\"),\r\n                emptyPanelText: _message.default.format(\"dxDataGrid-columnChooserEmptyText\"),\r\n                container: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        columnChooser: ColumnChooserController\r\n    },\r\n    views: {\r\n        columnChooserView: ColumnChooserView\r\n    },\r\n    extenders: {\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    return this._appendColumnChooserItem(items)\r\n                },\r\n                _appendColumnChooserItem: function(items) {\r\n                    var that = this;\r\n                    var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n                    if (columnChooserEnabled) {\r\n                        var onClickHandler = function() {\r\n                            that.component.getView(\"columnChooserView\").showColumnChooser()\r\n                        };\r\n                        var onInitialized = function(e) {\r\n                            (0, _renderer.default)(e.element).addClass(that._getToolbarButtonClass(that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS)))\r\n                        };\r\n                        var hintText = that.option(\"columnChooser.title\");\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: COLUMN_CHOOSER_ICON_NAME,\r\n                                onClick: onClickHandler,\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: onInitialized\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            location: \"after\",\r\n                            name: \"columnChooserButton\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 40\r\n                        };\r\n                        items.push(toolbarItem)\r\n                    }\r\n                    return items\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"columnChooser\":\r\n                            this._invalidate();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var that = this;\r\n                    var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n                    return that.callBase() || columnChooserEnabled\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            columns: {\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnChooserMode = this.option(\"columnChooser.mode\");\r\n                    var isMoveColumnDisallowed = \"select\" === columnChooserMode && \"columnChooser\" === targetLocation;\r\n                    return isMoveColumnDisallowed ? false : this.callBase(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _wheel = require(\"../../events/core/wheel\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.utils\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _ui = _interopRequireDefault(require(\"../scroll_view/ui.scrollable\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CONTENT_CLASS = \"content\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\r\nvar LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\r\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\r\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar getTransparentColumnIndex = function(fixedColumns) {\r\n    var transparentColumnIndex = -1;\r\n    (0, _iterator.each)(fixedColumns, function(index, column) {\r\n        if (column.command === COMMAND_TRANSPARENT) {\r\n            transparentColumnIndex = index;\r\n            return false\r\n        }\r\n    });\r\n    return transparentColumnIndex\r\n};\r\nvar normalizeColumnWidths = function(fixedColumns, widths, fixedWidths) {\r\n    var fixedColumnIndex = 0;\r\n    if (fixedColumns && widths && fixedWidths) {\r\n        for (var i = 0; i < fixedColumns.length; i++) {\r\n            if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\r\n                fixedColumnIndex += fixedColumns[i].colspan\r\n            } else {\r\n                if (widths[fixedColumnIndex] < fixedWidths[i]) {\r\n                    widths[fixedColumnIndex] = fixedWidths[i]\r\n                }\r\n                fixedColumnIndex++\r\n            }\r\n        }\r\n    }\r\n    return widths\r\n};\r\nvar baseFixedColumns = {\r\n    init: function() {\r\n        this.callBase();\r\n        this._isFixedTableRendering = false;\r\n        this._isFixedColumns = false\r\n    },\r\n    _createCol: function(column) {\r\n        return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)))\r\n    },\r\n    _correctColumnIndicesForFixedColumns: function(fixedColumns, change) {\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\r\n        var columnIndices = change && change.columnIndices;\r\n        if (columnIndices) {\r\n            change.columnIndices = columnIndices.map(function(columnIndices) {\r\n                if (columnIndices) {\r\n                    return columnIndices.map(function(columnIndex) {\r\n                        if (columnIndex < transparentColumnIndex) {\r\n                            return columnIndex\r\n                        } else {\r\n                            if (columnIndex >= transparentColumnIndex + transparentColspan) {\r\n                                return columnIndex - transparentColspan + 1\r\n                            }\r\n                        }\r\n                        return -1\r\n                    }).filter(function(columnIndex) {\r\n                        return columnIndex >= 0\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        var that = this;\r\n        var $fixedTable;\r\n        var fixedColumns = that.getFixedColumns();\r\n        that._isFixedColumns = !!fixedColumns.length;\r\n        var $table = that.callBase(options);\r\n        if (that._isFixedColumns) {\r\n            that._isFixedTableRendering = true;\r\n            var change = options && options.change;\r\n            var columnIndices = change && change.columnIndices;\r\n            that._correctColumnIndicesForFixedColumns(fixedColumns, change);\r\n            $fixedTable = that._createTable(fixedColumns);\r\n            that._renderRows($fixedTable, (0, _extend.extend)({}, options, {\r\n                columns: fixedColumns\r\n            }));\r\n            that._updateContent($fixedTable, change);\r\n            if (columnIndices) {\r\n                change.columnIndices = columnIndices\r\n            }\r\n            that._isFixedTableRendering = false\r\n        } else {\r\n            that._fixedTableElement && that._fixedTableElement.parent().remove();\r\n            that._fixedTableElement = null\r\n        }\r\n        return $table\r\n    },\r\n    _renderRow: function($table, options) {\r\n        var fixedCorrection;\r\n        var cells = options.row.cells;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering && cells && cells.length) {\r\n            fixedCorrection = 0;\r\n            var fixedCells = options.row.cells || [];\r\n            cells = cells.slice();\r\n            options.row.cells = cells;\r\n            for (var i = 0; i < fixedCells.length; i++) {\r\n                if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\r\n                    fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\r\n                    continue\r\n                }\r\n                cells[i + fixedCorrection] = fixedCells[i]\r\n            }\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnCommand = column && column.command;\r\n        var rowType = options.rowType;\r\n        var $cell = that.callBase.apply(that, arguments);\r\n        var fixedColumns;\r\n        var prevFixedColumn;\r\n        var transparentColumnIndex;\r\n        if (that._isFixedTableRendering || \"filter\" === rowType) {\r\n            fixedColumns = that.getFixedColumns();\r\n            transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n            prevFixedColumn = fixedColumns[transparentColumnIndex - 1]\r\n        }\r\n        if (that._isFixedTableRendering) {\r\n            if (columnCommand === COMMAND_TRANSPARENT) {\r\n                $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\r\n                if (\"freeSpace\" !== rowType) {\r\n                    _uiGrid_core.default.setEmptyText($cell)\r\n                }\r\n            }\r\n        } else {\r\n            if (\"filter\" === rowType) {\r\n                $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex)\r\n            }\r\n        }\r\n        var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\r\n        if (_browser.default.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle) {\r\n            $cell.addClass(FIXED_COL_CLASS)\r\n        }\r\n        return $cell\r\n    },\r\n    _wrapTableInScrollContainer: function() {\r\n        var $scrollContainer = this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS))\r\n        }\r\n        return $scrollContainer\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var that = this;\r\n        var isEmptyCell;\r\n        var column = options.column;\r\n        var isFixedTableRendering = that._isFixedTableRendering;\r\n        var isGroupCell = \"group\" === options.rowType && (0, _type.isDefined)(column.groupIndex);\r\n        if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\r\n            $cell.css(\"pointerEvents\", \"none\")\r\n        }\r\n        if (!isFixedTableRendering && that._isFixedColumns) {\r\n            isEmptyCell = column.fixed || column.command && false !== column.fixed;\r\n            if (isGroupCell) {\r\n                isEmptyCell = false;\r\n                if (options.row.summaryCells && options.row.summaryCells.length) {\r\n                    var columns = that._columnsController.getVisibleColumns();\r\n                    var alignByFixedColumnCellCount = that._getAlignByColumnCellCount ? that._getAlignByColumnCellCount(column.colspan, {\r\n                        columns: columns,\r\n                        row: options.row,\r\n                        isFixed: true\r\n                    }) : 0;\r\n                    if (alignByFixedColumnCellCount > 0) {\r\n                        var transparentColumnIndex = getTransparentColumnIndex(that._columnsController.getFixedColumns());\r\n                        isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyCell) {\r\n                if (that.option(\"legacyRendering\") || column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\r\n                    $cell.html(\"&nbsp;\").addClass(column.cssClass);\r\n                    return\r\n                } else {\r\n                    $cell.addClass(\"dx-hidden-cell\")\r\n                }\r\n            }\r\n        }\r\n        if (column.command !== COMMAND_TRANSPARENT) {\r\n            that.callBase($cell, options)\r\n        }\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var _this = this;\r\n        var cellElements = this.callBase.apply(this, arguments);\r\n        var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\r\n        var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\r\n        if (this._fixedTableElement && cellElements) {\r\n            var fixedColumns = this.getFixedColumns(headerRowIndex);\r\n            var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\r\n            (0, _iterator.each)(fixedCellElements, function(columnIndex, cell) {\r\n                if (isGroupRow) {\r\n                    if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\r\n                        cellElements[columnIndex] = cell\r\n                    }\r\n                } else {\r\n                    var fixedColumn = fixedColumns[columnIndex];\r\n                    if (fixedColumn) {\r\n                        if (fixedColumn.command === COMMAND_TRANSPARENT) {\r\n                            if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n                                cellElements[columnIndex] = cell || cellElements[columnIndex]\r\n                            }\r\n                        } else {\r\n                            var fixedColumnIndex = _this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\r\n                            cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex]\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return cellElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var that = this;\r\n        var fixedWidths;\r\n        var result = that.callBase();\r\n        var fixedColumns = that.getFixedColumns();\r\n        if (that._fixedTableElement && result.length) {\r\n            fixedWidths = that.callBase(that._fixedTableElement)\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    },\r\n    getTableElement: function() {\r\n        var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\r\n        return tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS)\r\n        } else {\r\n            this.callBase(tableElement)\r\n        }\r\n    },\r\n    getColumns: function(rowIndex, $tableElement) {\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex, $tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        if ($fixedTable && $fixedTable.find($row).length) {\r\n            return this._getRowElements($fixedTable).index($row)\r\n        }\r\n        return this.callBase($row)\r\n    },\r\n    getTableElements: function() {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            result = (0, _renderer.default)([result.get(0), this._fixedTableElement.get(0)])\r\n        }\r\n        return result\r\n    },\r\n    getFixedColumns: function(rowIndex) {\r\n        return this._columnsController.getFixedColumns(rowIndex)\r\n    },\r\n    getFixedColumnsOffset: function() {\r\n        var offset = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n        var $transparentColumn;\r\n        if (this._fixedTableElement) {\r\n            $transparentColumn = this.getTransparentColumnElement();\r\n            var positionTransparentColumn = $transparentColumn.position();\r\n            offset = {\r\n                left: positionTransparentColumn.left,\r\n                right: this.element().outerWidth(true) - ($transparentColumn.outerWidth(true) + positionTransparentColumn.left)\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    getTransparentColumnElement: function() {\r\n        return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first()\r\n    },\r\n    getFixedTableElement: function() {\r\n        return this._fixedTableElement\r\n    },\r\n    isFixedColumns: function() {\r\n        return this._isFixedColumns\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase();\r\n        this.synchronizeRows()\r\n    },\r\n    setColumnWidths: function(options) {\r\n        var columns;\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var widths = options.widths;\r\n        var isWidthsSynchronized = widths && widths.length && (0, _type.isDefined)(visibleColumns[0].visibleWidth);\r\n        var optionNames = options.optionNames;\r\n        var isColumnWidthChanged = optionNames && optionNames.width;\r\n        var useVisibleColumns = false;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            if (this.option(\"legacyRendering\")) {\r\n                useVisibleColumns = widths && widths.length && !this.isScrollbarVisible(true)\r\n            } else {\r\n                var hasAutoWidth = widths && widths.some(function(width) {\r\n                    return \"auto\" === width\r\n                });\r\n                useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true))\r\n            }\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n            this.callBase((0, _extend.extend)({}, options, {\r\n                $tableElement: this._fixedTableElement,\r\n                columns: columns,\r\n                fixed: true\r\n            }))\r\n        }\r\n        if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\r\n            this.synchronizeRows()\r\n        }\r\n    },\r\n    _createColGroup: function(columns) {\r\n        if (!this.option(\"legacyRendering\") && this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var useVisibleColumns = visibleColumns.filter(function(column) {\r\n                return !column.width\r\n            }).length;\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n        }\r\n        return this.callBase(columns)\r\n    },\r\n    _getClientHeight: function(element) {\r\n        var boundingClientRectElement = element.getBoundingClientRect && (0, _position.getBoundingRect)(element);\r\n        return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight\r\n    },\r\n    synchronizeRows: function() {\r\n        var that = this;\r\n        var rowHeights = [];\r\n        var fixedRowHeights = [];\r\n        var rowIndex;\r\n        var $rowElements;\r\n        var $fixedRowElements;\r\n        var $contentElement;\r\n        if (that._isFixedColumns && that._tableElement && that._fixedTableElement) {\r\n            var heightTable = that._getClientHeight(that._tableElement.get(0));\r\n            var heightFixedTable = that._getClientHeight(that._fixedTableElement.get(0));\r\n            $rowElements = that._getRowElements(that._tableElement);\r\n            $fixedRowElements = that._getRowElements(that._fixedTableElement);\r\n            $contentElement = that._findContentElement();\r\n            if (heightTable !== heightFixedTable) {\r\n                $contentElement && $contentElement.css(\"height\", heightTable);\r\n                $rowElements.css(\"height\", \"\");\r\n                $fixedRowElements.css(\"height\", \"\");\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    rowHeights.push(that._getClientHeight($rowElements.get(rowIndex)));\r\n                    fixedRowHeights.push(that._getClientHeight($fixedRowElements.get(rowIndex)))\r\n                }\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    var rowHeight = rowHeights[rowIndex];\r\n                    var fixedRowHeight = fixedRowHeights[rowIndex];\r\n                    if (rowHeight > fixedRowHeight) {\r\n                        $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight)\r\n                    } else {\r\n                        if (rowHeight < fixedRowHeight) {\r\n                            $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight)\r\n                        }\r\n                    }\r\n                }\r\n                $contentElement && $contentElement.css(\"height\", \"\")\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(width) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this.callBase(width);\r\n        this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n};\r\nvar ColumnHeadersViewFixedColumnsExtender = (0, _extend.extend)({}, baseFixedColumns, {\r\n    _getRowVisibleColumns: function(rowIndex) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex)\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnFixingOptions = that.option(\"columnFixing\");\r\n        var items = that.callBase(options);\r\n        if (options.row && \"header\" === options.row.rowType) {\r\n            if (column && column.allowFixing) {\r\n                var onItemClick = function(params) {\r\n                    switch (params.itemData.value) {\r\n                        case \"none\":\r\n                            that._columnsController.columnOption(column.index, \"fixed\", false);\r\n                            break;\r\n                        case \"left\":\r\n                            that._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"left\"\r\n                            });\r\n                            break;\r\n                        case \"right\":\r\n                            that._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"right\"\r\n                            })\r\n                    }\r\n                };\r\n                items = items || [];\r\n                items.push({\r\n                    text: columnFixingOptions.texts.fix,\r\n                    beginGroup: true,\r\n                    items: [{\r\n                        text: columnFixingOptions.texts.leftPosition,\r\n                        value: \"left\",\r\n                        disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\r\n                        onItemClick: onItemClick\r\n                    }, {\r\n                        text: columnFixingOptions.texts.rightPosition,\r\n                        value: \"right\",\r\n                        disabled: column.fixed && \"right\" === column.fixedPosition,\r\n                        onItemClick: onItemClick\r\n                    }]\r\n                }, {\r\n                    text: columnFixingOptions.texts.unfix,\r\n                    value: \"none\",\r\n                    disabled: !column.fixed,\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    getFixedColumnElements: function(rowIndex) {\r\n        var that = this;\r\n        if ((0, _type.isDefined)(rowIndex)) {\r\n            return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children()\r\n        }\r\n        var columnElements = that.getColumnElements();\r\n        var $transparentColumnElement = that.getTransparentColumnElement();\r\n        if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(that.getFixedColumns());\r\n            columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0))\r\n        }\r\n        return columnElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var that = this;\r\n        var fixedWidths;\r\n        var result = that.callBase();\r\n        var $fixedColumnElements = that.getFixedColumnElements();\r\n        var fixedColumns = that.getFixedColumns();\r\n        if (that._fixedTableElement) {\r\n            if ($fixedColumnElements && $fixedColumnElements.length) {\r\n                fixedWidths = that._getWidths($fixedColumnElements)\r\n            } else {\r\n                fixedWidths = that.callBase(that._fixedTableElement)\r\n            }\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    }\r\n});\r\nvar RowsViewFixedColumnsExtender = (0, _extend.extend)({}, baseFixedColumns, {\r\n    _detachHoverEvents: function() {\r\n        this._fixedTableElement && _events_engine.default.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\r\n        this._tableElement && _events_engine.default.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\")\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var attachHoverEvent = function($table) {\r\n            _events_engine.default.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction(function(args) {\r\n                var event = args.event;\r\n                var rowIndex = that.getRowIndex((0, _renderer.default)(event.target).closest(\".dx-row\"));\r\n                var isHover = \"mouseover\" === event.type;\r\n                if (rowIndex >= 0) {\r\n                    that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\r\n                    that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover)\r\n                }\r\n            }))\r\n        };\r\n        if (that._fixedTableElement && that._tableElement) {\r\n            attachHoverEvent(that._fixedTableElement);\r\n            attachHoverEvent(that._tableElement)\r\n        }\r\n    },\r\n    _findContentElement: function() {\r\n        var that = this;\r\n        var $content;\r\n        var scrollTop;\r\n        var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\r\n        var element = that.element();\r\n        var scrollDelay = _browser.default.mozilla ? 60 : 0;\r\n        if (element && that._isFixedTableRendering) {\r\n            $content = element.children(\".\" + contentClass);\r\n            var scrollable = that.getScrollable();\r\n            if (!$content.length && scrollable) {\r\n                $content = (0, _renderer.default)(\"<div>\").addClass(contentClass);\r\n                _events_engine.default.on($content, \"scroll\", function(e) {\r\n                    clearTimeout(that._fixedScrollTimeout);\r\n                    that._fixedScrollTimeout = setTimeout(function() {\r\n                        scrollTop = (0, _renderer.default)(e.target).scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop\r\n                        })\r\n                    }, scrollDelay)\r\n                });\r\n                _events_engine.default.on($content, _wheel.name, function(e) {\r\n                    var $nearestScrollable = (0, _renderer.default)(e.target).closest(\".dx-scrollable\");\r\n                    var shouldScroll = false;\r\n                    if (scrollable && scrollable.$element().is($nearestScrollable)) {\r\n                        shouldScroll = true\r\n                    } else {\r\n                        var nearestScrollableInstance = $nearestScrollable.length && _ui.default.getInstance($nearestScrollable.get(0));\r\n                        var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\r\n                        shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar\r\n                    }\r\n                    if (shouldScroll) {\r\n                        scrollTop = scrollable.scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop - e.delta\r\n                        });\r\n                        if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\r\n                            return false\r\n                        }\r\n                    }\r\n                });\r\n                $content.appendTo(element)\r\n            }\r\n            return $content\r\n        }\r\n        return that.callBase()\r\n    },\r\n    _updateScrollable: function() {\r\n        this.callBase();\r\n        var scrollable = this.getScrollable();\r\n        var scrollTop = scrollable && scrollable.scrollOffset().top;\r\n        this._updateFixedTablePosition(scrollTop)\r\n    },\r\n    _renderContent: function(contentElement, tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement)\r\n        }\r\n        return this.callBase(contentElement, tableElement)\r\n    },\r\n    _getGroupCellOptions: function(options) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.callBase((0, _extend.extend)({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _renderGroupedCells: function($row, options) {\r\n        return this.callBase($row, (0, _extend.extend)({}, options, {\r\n            columns: this._columnsController.getVisibleColumns()\r\n        }))\r\n    },\r\n    _renderGroupSummaryCells: function($row, options) {\r\n        if (this._isFixedTableRendering) {\r\n            this.callBase($row, (0, _extend.extend)({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        } else {\r\n            this.callBase($row, options)\r\n        }\r\n    },\r\n    _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        var column = options.columns[columnIndex];\r\n        if (options.isFixed) {\r\n            return column.fixed && (result || \"right\" === column.fixedPosition)\r\n        }\r\n        return result && (!this._isFixedColumns || !column.fixed)\r\n    },\r\n    _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n        var alignByFixedColumnCellCount;\r\n        if (this._isFixedTableRendering) {\r\n            options.isFixed = true;\r\n            alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n            options.isFixed = false;\r\n            var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\r\n            options = (0, _extend.extend)({}, options, {\r\n                columns: this.getFixedColumns()\r\n            });\r\n            var transparentColumnIndex = getTransparentColumnIndex(options.columns);\r\n            if (startColumnIndex < transparentColumnIndex) {\r\n                alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\r\n                groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0\r\n            } else {\r\n                if (alignByColumnCellCount > 0) {\r\n                    $groupCell.css(\"visibility\", \"hidden\")\r\n                }\r\n            }\r\n            alignByColumnCellCount = alignByFixedColumnCellCount\r\n        }\r\n        this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n    },\r\n    _getSummaryCellIndex: function(columnIndex, columns) {\r\n        if (this._isFixedTableRendering) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(columns);\r\n            if (columnIndex > transparentColumnIndex) {\r\n                columnIndex += columns[transparentColumnIndex].colspan - 1\r\n            }\r\n            return columnIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _renderCore: function(change) {\r\n        this._detachHoverEvents();\r\n        this.callBase(change);\r\n        var isFixedColumns = this._isFixedColumns;\r\n        this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\r\n        if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\r\n            this._attachHoverEvents()\r\n        }\r\n    },\r\n    setRowsOpacity: function(columnIndex, value) {\r\n        this.callBase(columnIndex, value);\r\n        var $rows = this._getRowElements(this._fixedTableElement);\r\n        this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value)\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        that.callBase(args);\r\n        if (\"hoverStateEnabled\" === args.name && that._isFixedColumns) {\r\n            args.value ? this._attachHoverEvents() : this._detachHoverEvents()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        var cellIndex = 0;\r\n        if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\r\n            var columns = this.getFixedColumns();\r\n            (0, _iterator.each)(columns, function(index, column) {\r\n                if (index === $cell[0].cellIndex) {\r\n                    return false\r\n                }\r\n                if (column.colspan) {\r\n                    cellIndex += column.colspan;\r\n                    return\r\n                }\r\n                cellIndex++\r\n            });\r\n            return cellIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _updateFixedTablePosition: function(scrollTop, needFocus) {\r\n        if (this._fixedTableElement && this._tableElement) {\r\n            var $focusedElement;\r\n            var editorFactory = this.getController(\"editorFactory\");\r\n            this._fixedTableElement.parent().scrollTop(scrollTop);\r\n            if (needFocus && editorFactory) {\r\n                $focusedElement = editorFactory.focus();\r\n                $focusedElement && editorFactory.focus($focusedElement)\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(vWidth, hWidth) {\r\n        var that = this;\r\n        var styles = {\r\n            marginBottom: 0\r\n        };\r\n        var $fixedContent = that.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ($fixedContent.length && that._fixedTableElement) {\r\n            $fixedContent.css(styles);\r\n            that._fixedTableElement.css(styles);\r\n            styles[that.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\r\n            styles.marginBottom = hWidth;\r\n            var useNativeScrolling = that._scrollable && that._scrollable.option(\"useNative\");\r\n            (useNativeScrolling ? $fixedContent : that._fixedTableElement).css(styles)\r\n        }\r\n    },\r\n    _getElasticScrollTop: function(e) {\r\n        var elasticScrollTop = 0;\r\n        var scrollbarWidth = this.getScrollbarWidth(true);\r\n        if (e.scrollOffset.top < 0) {\r\n            elasticScrollTop = -e.scrollOffset.top\r\n        } else {\r\n            if (e.reachedBottom) {\r\n                var scrollableContent = this._findContentElement();\r\n                var scrollableContainer = e.component._container();\r\n                var maxScrollTop = Math.max(scrollableContent.height() + scrollbarWidth - scrollableContainer.height(), 0);\r\n                elasticScrollTop = maxScrollTop - e.scrollOffset.top\r\n            }\r\n        }\r\n        return elasticScrollTop\r\n    },\r\n    _applyElasticScrolling: function(e) {\r\n        if (this._fixedTableElement) {\r\n            var elasticScrollTop = this._getElasticScrollTop(e);\r\n            if (0 !== Math.ceil(elasticScrollTop)) {\r\n                (0, _translator.move)(this._fixedTableElement, {\r\n                    top: elasticScrollTop\r\n                })\r\n            } else {\r\n                this._fixedTableElement.css(\"transform\", \"\")\r\n            }\r\n        }\r\n    },\r\n    _handleScroll: function(e) {\r\n        this._updateFixedTablePosition(e.scrollOffset.top, true);\r\n        this._applyElasticScrolling(e);\r\n        this.callBase(e)\r\n    },\r\n    _updateContentPosition: function(isRender) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!isRender) {\r\n            this._updateFixedTablePosition(this._scrollTop)\r\n        }\r\n    },\r\n    _afterRowPrepared: function(e) {\r\n        if (this._isFixedTableRendering) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _scrollToElement: function($element) {\r\n        this.callBase($element, this.getFixedColumnsOffset())\r\n    },\r\n    dispose: function() {\r\n        this.callBase.apply(this, arguments);\r\n        clearTimeout(this._fixedScrollTimeout)\r\n    }\r\n});\r\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnFixing: {\r\n                enabled: false,\r\n                texts: {\r\n                    fix: _message.default.format(\"dxDataGrid-columnFixingFix\"),\r\n                    unfix: _message.default.format(\"dxDataGrid-columnFixingUnfix\"),\r\n                    leftPosition: _message.default.format(\"dxDataGrid-columnFixingLeftPosition\"),\r\n                    rightPosition: _message.default.format(\"dxDataGrid-columnFixingRightPosition\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\r\n            rowsView: RowsViewFixedColumnsExtender,\r\n            footerView: FooterViewFixedColumnsExtender\r\n        },\r\n        controllers: function() {\r\n            var normalizeColumnIndicesByPoints = function(columns, fixedColumns, pointsByColumns) {\r\n                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                var correctIndex = columns.length - fixedColumns.length;\r\n                (0, _iterator.each)(pointsByColumns, function(_, point) {\r\n                    if (point.index > transparentColumnIndex) {\r\n                        point.columnIndex += correctIndex;\r\n                        point.index += correctIndex\r\n                    }\r\n                });\r\n                return pointsByColumns\r\n            };\r\n            return {\r\n                draggingHeader: {\r\n                    _generatePointsByColumns: function(options) {\r\n                        var visibleColumns = options.columns;\r\n                        var targetDraggingPanel = options.targetDraggingPanel;\r\n                        if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\r\n                            if (options.sourceColumn.fixed) {\r\n                                if (!options.rowIndex) {\r\n                                    options.columnElements = targetDraggingPanel.getFixedColumnElements(0)\r\n                                }\r\n                                options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\r\n                                var pointsByColumns = this.callBase(options);\r\n                                normalizeColumnIndicesByPoints(visibleColumns, options.columns, pointsByColumns);\r\n                                return pointsByColumns\r\n                            }\r\n                        }\r\n                        return this.callBase(options)\r\n                    },\r\n                    _pointCreated: function(point, columns, location, sourceColumn) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        var targetColumn = columns[point.columnIndex];\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = (0, _position.getBoundingRect)($transparentColumn.get(0));\r\n                            if (sourceColumn && sourceColumn.fixed) {\r\n                                return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left\r\n                            } else {\r\n                                if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\r\n                                    return true\r\n                                }\r\n                                return point.x < boundingRect.left || point.x > boundingRect.right\r\n                            }\r\n                        }\r\n                        return result\r\n                    }\r\n                },\r\n                columnsResizer: {\r\n                    _generatePointsByColumns: function() {\r\n                        var that = this;\r\n                        var columnsController = that._columnsController;\r\n                        var columns = columnsController && that._columnsController.getVisibleColumns();\r\n                        var fixedColumns = columnsController && that._columnsController.getFixedColumns();\r\n                        var cells = that._columnHeadersView.getFixedColumnElements();\r\n                        var pointsByFixedColumns = [];\r\n                        that.callBase();\r\n                        if (cells && cells.length > 0) {\r\n                            pointsByFixedColumns = _uiGrid_core.default.getPointsByColumns(cells, function(point) {\r\n                                return that._pointCreated(point, cells.length, fixedColumns)\r\n                            });\r\n                            that._pointsByFixedColumns = normalizeColumnIndicesByPoints(columns, fixedColumns, pointsByFixedColumns)\r\n                        }\r\n                    },\r\n                    _pointCreated: function(point, cellsLength, columns) {\r\n                        var isWidgetResizingMode = \"widget\" === this.option(\"columnResizingMode\");\r\n                        if (point.index > 0 && point.index < cellsLength) {\r\n                            var currentColumn = columns[point.columnIndex - 1] || {};\r\n                            var nextColumn = columns[point.columnIndex] || {};\r\n                            if (currentColumn.fixed || nextColumn.fixed) {\r\n                                point.columnIndex -= 1;\r\n                                return !((currentColumn.allowResizing || currentColumn.command === COMMAND_TRANSPARENT) && (isWidgetResizingMode || nextColumn.allowResizing || nextColumn.command === COMMAND_TRANSPARENT))\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if ($transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = (0, _position.getBoundingRect)($transparentColumn.get(0));\r\n                            if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\r\n                                return this.callBase(this._pointsByFixedColumns, currentX, deltaX)\r\n                            }\r\n                        }\r\n                        return this.callBase(pointsByColumns, currentX, deltaX)\r\n                    }\r\n                }\r\n            }\r\n        }()\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.column_headers.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiGrid_core = require(\"./ui.grid_core.columns_view\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiGrid_core2 = require(\"./ui.grid_core.accessibility\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_CLASS = \"headers\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar ROW_CLASS_SELECTOR = \".dx-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar CONTEXT_MENU_SORT_ASC_ICON = \"context-menu-sort-asc\";\r\nvar CONTEXT_MENU_SORT_DESC_ICON = \"context-menu-sort-desc\";\r\nvar CONTEXT_MENU_SORT_NONE_ICON = \"context-menu-sort-none\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar VISIBILITY_HIDDEN_CLASS = \"dx-visibility-hidden\";\r\nvar TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX = \"dx-text-content-alignment-\";\r\nvar SORT_INDICATOR_CLASS = \"dx-sort-indicator\";\r\nvar SORT_INDEX_INDICATOR_CLASS = \"dx-sort-index-indicator\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar HEADER_FILTER_INDICATOR_CLASS = \"dx-header-filter-indicator\";\r\nvar MULTI_ROW_HEADER_CLASS = \"dx-header-multi-row\";\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showColumnHeaders: true,\r\n            cellHintEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        columnHeadersView: _uiGrid_core.ColumnsView.inherit(function() {\r\n            var createCellContent = function(that, $cell, options) {\r\n                var $cellContent = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                that.setAria(\"role\", \"presentation\", $cellContent);\r\n                addCssClassesToCellContent(that, $cell, options.column, $cellContent);\r\n                var showColumnLines = that.option(\"showColumnLines\");\r\n                var contentAlignment = that.getController(\"columns\").getHeaderContentAlignment(options.column.alignment);\r\n                return $cellContent[showColumnLines || \"right\" === contentAlignment ? \"appendTo\" : \"prependTo\"]($cell)\r\n            };\r\n\r\n            function addCssClassesToCellContent(that, $cell, column, $cellContent) {\r\n                var $indicatorElements = that._getIndicatorElements($cell, true);\r\n                var $visibleIndicatorElements = that._getIndicatorElements($cell);\r\n                var indicatorCount = $indicatorElements && $indicatorElements.length;\r\n                var columnAlignment = that._getColumnAlignment(column.alignment);\r\n                var sortIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sort\"));\r\n                var sortIndexIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sortIndex\"));\r\n                var $sortIndicator = $visibleIndicatorElements.filter(sortIndicatorClassName);\r\n                var $sortIndexIndicator = $visibleIndicatorElements.children().filter(sortIndexIndicatorClassName);\r\n                $cellContent = $cellContent || $cell.children(\".\" + that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                $cellContent.toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + columnAlignment, indicatorCount > 0).toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + (\"left\" === columnAlignment ? \"right\" : \"left\"), indicatorCount > 0 && \"center\" === column.alignment).toggleClass(SORT_INDICATOR_CLASS, !!$sortIndicator.length).toggleClass(SORT_INDEX_INDICATOR_CLASS, !!$sortIndexIndicator.length).toggleClass(HEADER_FILTER_INDICATOR_CLASS, !!$visibleIndicatorElements.filter(\".\" + that._getIndicatorClassName(\"headerFilter\")).length)\r\n            }\r\n            return {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    _events_engine.default.on($table, \"mousedown selectstart\", this.createAction(function(e) {\r\n                        var event = e.event;\r\n                        if (event.shiftKey) {\r\n                            event.preventDefault()\r\n                        }\r\n                    }));\r\n                    return $table\r\n                },\r\n                _isLegacyKeyboardNavigation: function() {\r\n                    return this.option(\"useLegacyKeyboardNavigation\")\r\n                },\r\n                _getDefaultTemplate: function(column) {\r\n                    var that = this;\r\n                    return function($container, options) {\r\n                        var $content = column.command ? $container : createCellContent(that, $container, options);\r\n                        var caption = \"expand\" !== column.command && column.caption;\r\n                        if (caption) {\r\n                            $content.text(caption)\r\n                        } else {\r\n                            if (column.command) {\r\n                                $container.html(\"&nbsp;\")\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _getHeaderTemplate: function(column) {\r\n                    return column.headerCellTemplate || {\r\n                        allowRenderToDetachedContainer: true,\r\n                        render: this._getDefaultTemplate(column)\r\n                    }\r\n                },\r\n                _processTemplate: function(template, options) {\r\n                    var that = this;\r\n                    var resultTemplate;\r\n                    var column = options.column;\r\n                    var renderingTemplate = that.callBase(template);\r\n                    if (\"header\" === options.rowType && renderingTemplate && column.headerCellTemplate && !column.command) {\r\n                        resultTemplate = {\r\n                            render: function(options) {\r\n                                var $content = createCellContent(that, options.container, options.model);\r\n                                renderingTemplate.render((0, _extend.extend)({}, options, {\r\n                                    container: $content\r\n                                }))\r\n                            }\r\n                        }\r\n                    } else {\r\n                        resultTemplate = renderingTemplate\r\n                    }\r\n                    return resultTemplate\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    if (\"refresh\" !== e.changeType) {\r\n                        return\r\n                    }\r\n                    if (this._isGroupingChanged || this._requireReady) {\r\n                        this._isGroupingChanged = false;\r\n                        this.render()\r\n                    }\r\n                },\r\n                _renderCell: function($row, options) {\r\n                    var $cell = this.callBase($row, options);\r\n                    if (\"header\" === options.row.rowType) {\r\n                        $cell.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            if (options.column && !options.column.type) {\r\n                                $cell.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                            }\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _setCellAriaAttributes: function($cell, cellOptions) {\r\n                    this.callBase($cell, cellOptions);\r\n                    if (\"header\" === cellOptions.rowType) {\r\n                        this.setAria(\"role\", \"columnheader\", $cell);\r\n                        if (cellOptions.column && !cellOptions.column.command && !cellOptions.column.isBand) {\r\n                            $cell.attr(\"id\", cellOptions.column.headerId);\r\n                            this.setAria(\"label\", _message.default.format(\"dxDataGrid-ariaColumn\") + \" \" + cellOptions.column.caption, $cell)\r\n                        }\r\n                    }\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase(row).toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    if (\"header\" === row.rowType) {\r\n                        $row.addClass(HEADER_ROW_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            (0, _uiGrid_core2.registerKeyboardAction)(\"columnHeaders\", this, $row, \"td\", this._handleActionKeyDown.bind(this))\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _handleActionKeyDown: function(args) {\r\n                    var event = args.event;\r\n                    var $target = (0, _renderer.default)(event.target);\r\n                    this._lastActionElement = event.target;\r\n                    if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n                        var headerFilterController = this.getController(\"headerFilter\");\r\n                        var $column = $target.closest(\"td\");\r\n                        var columnIndex = this.getColumnIndexByElement($column);\r\n                        if (columnIndex >= 0) {\r\n                            headerFilterController.showHeaderFilterMenu(columnIndex, false)\r\n                        }\r\n                    } else {\r\n                        var $row = $target.closest(ROW_CLASS_SELECTOR);\r\n                        this._processHeaderAction(event, $row)\r\n                    }\r\n                    event.preventDefault()\r\n                },\r\n                _renderCore: function() {\r\n                    var that = this;\r\n                    var $container = that.element();\r\n                    if (that._tableElement && !that._dataController.isLoaded() && !that._hasRowElements) {\r\n                        return\r\n                    }\r\n                    $container.addClass(that.addWidgetPrefix(HEADERS_CLASS)).toggleClass(that.addWidgetPrefix(NOWRAP_CLASS), !that.option(\"wordWrapEnabled\")).empty();\r\n                    that.setAria(\"role\", \"presentation\", $container);\r\n                    that._updateContent(that._renderTable());\r\n                    if (that.getRowCount() > 1) {\r\n                        $container.addClass(MULTI_ROW_HEADER_CLASS)\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                },\r\n                _renderRows: function() {\r\n                    var that = this;\r\n                    if (that._dataController.isLoaded() || that._hasRowElements) {\r\n                        that.callBase.apply(that, arguments);\r\n                        that._hasRowElements = true\r\n                    }\r\n                },\r\n                _getRowVisibleColumns: function(rowIndex) {\r\n                    return this._columnsController.getVisibleColumns(rowIndex)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    options.columns = this._getRowVisibleColumns(options.row.rowIndex);\r\n                    this.callBase($table, options)\r\n                },\r\n                _createCell: function(options) {\r\n                    var column = options.column;\r\n                    var $cellElement = this.callBase.apply(this, arguments);\r\n                    column.rowspan > 1 && \"header\" === options.rowType && $cellElement.attr(\"rowSpan\", column.rowspan);\r\n                    return $cellElement\r\n                },\r\n                _getRows: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    if (this.option(\"showColumnHeaders\")) {\r\n                        for (var i = 0; i < rowCount; i++) {\r\n                            result.push({\r\n                                rowType: \"header\",\r\n                                rowIndex: i\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (\"header\" === options.rowType) {\r\n                        return this._getHeaderTemplate(options.column)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    if (changeTypes.grouping || changeTypes.groupExpanding) {\r\n                        if (changeTypes.grouping) {\r\n                            this._isGroupingChanged = true\r\n                        }\r\n                        return\r\n                    }\r\n                    this.callBase(e);\r\n                    if (optionNames.width || optionNames.visible) {\r\n                        this.resizeCompleted.fire()\r\n                    }\r\n                },\r\n                _isElementVisible: function(elementOptions) {\r\n                    return elementOptions && elementOptions.visible\r\n                },\r\n                _alignCaptionByCenter: function($cell) {\r\n                    var $indicatorsContainer = this._getIndicatorContainer($cell, true);\r\n                    if ($indicatorsContainer && $indicatorsContainer.length) {\r\n                        $indicatorsContainer.filter(\".\" + VISIBILITY_HIDDEN_CLASS).remove();\r\n                        $indicatorsContainer = this._getIndicatorContainer($cell);\r\n                        $indicatorsContainer.clone().addClass(VISIBILITY_HIDDEN_CLASS).css(\"float\", \"\").insertBefore($cell.children(\".\" + this.addWidgetPrefix(CELL_CONTENT_CLASS)))\r\n                    }\r\n                },\r\n                _updateCell: function($cell, options) {\r\n                    if (\"header\" === options.rowType && \"center\" === options.column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _updateIndicator: function($cell, column, indicatorName) {\r\n                    var $indicatorElement = this.callBase.apply(this, arguments);\r\n                    if (\"center\" === column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    addCssClassesToCellContent(this, $cell, column);\r\n                    return $indicatorElement\r\n                },\r\n                _getIndicatorContainer: function($cell, returnAll) {\r\n                    var $indicatorsContainer = this.callBase($cell);\r\n                    return returnAll ? $indicatorsContainer : $indicatorsContainer.filter(\":not(.\" + VISIBILITY_HIDDEN_CLASS + \")\")\r\n                },\r\n                _isSortableElement: function() {\r\n                    return true\r\n                },\r\n                getHeadersRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var $headerRows = $tableElement && $tableElement.find(\".\" + HEADER_ROW_CLASS);\r\n                    return $headerRows && $headerRows.toArray().reduce(function(sum, headerRow) {\r\n                        return sum + (0, _renderer.default)(headerRow).height()\r\n                    }, 0) || 0\r\n                },\r\n                getHeaderElement: function(index) {\r\n                    var columnElements = this.getColumnElements();\r\n                    return columnElements && columnElements.eq(index)\r\n                },\r\n                getColumnElements: function(index, bandColumnIndex) {\r\n                    var that = this;\r\n                    var $cellElement;\r\n                    var columnsController = that._columnsController;\r\n                    var rowCount = that.getRowCount();\r\n                    if (that.option(\"showColumnHeaders\")) {\r\n                        if (rowCount > 1 && (!(0, _type.isDefined)(index) || (0, _type.isDefined)(bandColumnIndex))) {\r\n                            var result = [];\r\n                            var visibleColumns = (0, _type.isDefined)(bandColumnIndex) ? columnsController.getChildrenByBandColumn(bandColumnIndex, true) : columnsController.getVisibleColumns();\r\n                            (0, _iterator.each)(visibleColumns, function(_, column) {\r\n                                var rowIndex = (0, _type.isDefined)(index) ? index : columnsController.getRowIndex(column.index);\r\n                                $cellElement = that._getCellElement(rowIndex, columnsController.getVisibleIndex(column.index, rowIndex));\r\n                                $cellElement && result.push($cellElement.get(0))\r\n                            });\r\n                            return (0, _renderer.default)(result)\r\n                        } else {\r\n                            if (!index || index < rowCount) {\r\n                                return that.getCellElements(index || 0)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                getColumnIndexByElement: function($cell) {\r\n                    var cellIndex = this.getCellIndex($cell);\r\n                    var $row = $cell.closest(\".dx-row\");\r\n                    var rowIndex = $row[0].rowIndex;\r\n                    var column = this.getColumns(rowIndex)[cellIndex];\r\n                    return column ? column.index : -1\r\n                },\r\n                getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n                    var column = this.getColumns()[columnIndex];\r\n                    return column ? this._columnsController.getVisibleIndex(column.index, rowIndex) : -1\r\n                },\r\n                getColumnWidths: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        return this._getWidths($columnElements)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                allowDragging: function(column, sourceLocation, draggingPanels) {\r\n                    var i;\r\n                    var draggableColumnCount = 0;\r\n                    var rowIndex = column && this._columnsController.getRowIndex(column.index);\r\n                    var columns = this.getColumns(0 === rowIndex ? 0 : null);\r\n                    var canHideColumn = (null === column || void 0 === column ? void 0 : column.allowHiding) && columns.length > 1;\r\n                    var allowDrag = function(column) {\r\n                        return column.allowReordering || column.allowGrouping || column.allowHiding\r\n                    };\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        if (allowDrag(columns[i])) {\r\n                            draggableColumnCount++\r\n                        }\r\n                    }\r\n                    if (draggableColumnCount <= 1 && !canHideColumn) {\r\n                        return false\r\n                    } else {\r\n                        if (!draggingPanels) {\r\n                            return (this.option(\"allowColumnReordering\") || this._columnsController.isColumnOptionUsed(\"allowReordering\")) && column && column.allowReordering\r\n                        }\r\n                    }\r\n                    for (i = 0; i < draggingPanels.length; i++) {\r\n                        var draggingPanel = draggingPanels[i];\r\n                        if (draggingPanel && draggingPanel.allowDragging(column, sourceLocation)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                getBoundingRect: function() {\r\n                    var that = this;\r\n                    var $columnElements = that.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        var offset = that.getTableElement().offset();\r\n                        return {\r\n                            top: offset.top\r\n                        }\r\n                    }\r\n                    return null\r\n                },\r\n                getName: function() {\r\n                    return \"headers\"\r\n                },\r\n                getColumnCount: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    return $columnElements ? $columnElements.length : 0\r\n                },\r\n                isVisible: function() {\r\n                    return this.option(\"showColumnHeaders\")\r\n                },\r\n                optionChanged: function(args) {\r\n                    var that = this;\r\n                    switch (args.name) {\r\n                        case \"showColumnHeaders\":\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                            that._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            that.callBase(args)\r\n                    }\r\n                },\r\n                getHeight: function() {\r\n                    return this.getElementHeight()\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n                        var sortingOptions = that.option(\"sorting\");\r\n                        if (sortingOptions && \"none\" !== sortingOptions.mode && column && column.allowSorting) {\r\n                            var onItemClick = function(params) {\r\n                                setTimeout(function() {\r\n                                    that._columnsController.changeSortOrder(column.index, params.itemData.value)\r\n                                })\r\n                            };\r\n                            return [{\r\n                                text: sortingOptions.ascendingText,\r\n                                value: \"asc\",\r\n                                disabled: \"asc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_ASC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.descendingText,\r\n                                value: \"desc\",\r\n                                disabled: \"desc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_DESC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.clearText,\r\n                                value: \"none\",\r\n                                disabled: !column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_NONE_ICON,\r\n                                onItemClick: onItemClick\r\n                            }]\r\n                        }\r\n                    }\r\n                },\r\n                getRowCount: function() {\r\n                    return this._columnsController && this._columnsController.getRowCount()\r\n                },\r\n                setRowsOpacity: function(columnIndex, value, rowIndex) {\r\n                    var that = this;\r\n                    var i;\r\n                    var columnElements;\r\n                    var rowCount = that.getRowCount();\r\n                    var columns = that._columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    var setColumnOpacity = function(index, column) {\r\n                        if (column.ownerBand === columnID) {\r\n                            columnElements.eq(index).css({\r\n                                opacity: value\r\n                            });\r\n                            if (column.isBand) {\r\n                                that.setRowsOpacity(column.index, value, i + 1)\r\n                            }\r\n                        }\r\n                    };\r\n                    if ((0, _type.isDefined)(columnID)) {\r\n                        rowIndex = rowIndex || 0;\r\n                        for (i = rowIndex; i < rowCount; i++) {\r\n                            columnElements = that.getCellElements(i);\r\n                            (0, _iterator.each)(that.getColumns(i), setColumnOpacity)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.column_state_mixin.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _position = require(\"../../core/utils/position\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COLUMN_INDICATORS_CLASS = \"dx-column-indicators\";\r\nvar GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nvar _default = {\r\n    _applyColumnState: function(options) {\r\n        var _that$component;\r\n        var that = this;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var columnAlignment = that._getColumnAlignment(options.column.alignment, rtlEnabled);\r\n        var parameters = (0, _extend.extend)(true, {\r\n            columnAlignment: columnAlignment\r\n        }, options);\r\n        var isGroupPanelItem = parameters.rootElement.hasClass(GROUP_PANEL_ITEM_CLASS);\r\n        var $indicatorsContainer = that._createIndicatorContainer(parameters, isGroupPanelItem);\r\n        var $span = (0, _renderer.default)(\"<span>\").addClass(that._getIndicatorClassName(options.name));\r\n        var columnsController = null === (_that$component = that.component) || void 0 === _that$component ? void 0 : _that$component.getController(\"columns\");\r\n        var indicatorAlignment = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getHeaderContentAlignment(columnAlignment)) || columnAlignment;\r\n        parameters.container = $indicatorsContainer;\r\n        parameters.indicator = $span;\r\n        that._renderIndicator(parameters);\r\n        $indicatorsContainer[(isGroupPanelItem || !options.showColumnLines) && \"left\" === indicatorAlignment ? \"appendTo\" : \"prependTo\"](options.rootElement);\r\n        return $span\r\n    },\r\n    _getIndicatorClassName: _common.noop,\r\n    _getColumnAlignment: function(alignment, rtlEnabled) {\r\n        rtlEnabled = rtlEnabled || this.option(\"rtlEnabled\");\r\n        return alignment && \"center\" !== alignment ? alignment : (0, _position.getDefaultAlignment)(rtlEnabled)\r\n    },\r\n    _createIndicatorContainer: function(options, ignoreIndicatorAlignment) {\r\n        var $indicatorsContainer = this._getIndicatorContainer(options.rootElement);\r\n        var indicatorAlignment = \"left\" === options.columnAlignment ? \"right\" : \"left\";\r\n        if (!$indicatorsContainer.length) {\r\n            $indicatorsContainer = (0, _renderer.default)(\"<div>\").addClass(COLUMN_INDICATORS_CLASS)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $indicatorsContainer);\r\n        return $indicatorsContainer.css(\"float\", options.showColumnLines && !ignoreIndicatorAlignment ? indicatorAlignment : null)\r\n    },\r\n    _getIndicatorContainer: function($cell) {\r\n        return $cell && $cell.find(\".\" + COLUMN_INDICATORS_CLASS)\r\n    },\r\n    _getIndicatorElements: function($cell) {\r\n        var $indicatorContainer = this._getIndicatorContainer($cell);\r\n        return $indicatorContainer && $indicatorContainer.children()\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        $container && $indicator && $container.append($indicator)\r\n    },\r\n    _updateIndicators: function(indicatorName) {\r\n        var that = this;\r\n        var columns = that.getColumns();\r\n        var $cells = that.getColumnElements();\r\n        var $cell;\r\n        if (!$cells || columns.length !== $cells.length) {\r\n            return\r\n        }\r\n        for (var i = 0; i < columns.length; i++) {\r\n            $cell = $cells.eq(i);\r\n            that._updateIndicator($cell, columns[i], indicatorName);\r\n            var rowOptions = $cell.parent().data(\"options\");\r\n            if (rowOptions && rowOptions.cells) {\r\n                rowOptions.cells[$cell.index()].column = columns[i]\r\n            }\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (!column.command) {\r\n            return this._applyColumnState({\r\n                name: indicatorName,\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.columns_controller.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _variable_wrapper = _interopRequireDefault(require(\"../../core/utils/variable_wrapper\"));\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _config = _interopRequireDefault(require(\"../../core/config\"));\r\nvar _object = require(\"../../core/utils/object\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _inflector = require(\"../../core/utils/inflector\");\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _number = _interopRequireDefault(require(\"../../localization/number\"));\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _abstract_store = _interopRequireDefault(require(\"../../data/abstract_store\"));\r\nvar _data_source = require(\"../../data/data_source/data_source\");\r\nvar _utils = require(\"../../data/data_source/utils\");\r\nvar _filtering = _interopRequireDefault(require(\"../shared/filtering\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n    var keys = Object.keys(object);\r\n    if (Object.getOwnPropertySymbols) {\r\n        var symbols = Object.getOwnPropertySymbols(object);\r\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\r\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable\r\n        })), keys.push.apply(keys, symbols)\r\n    }\r\n    return keys\r\n}\r\n\r\nfunction _objectSpread(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = null != arguments[i] ? arguments[i] : {};\r\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\r\n            _defineProperty(target, key, source[key])\r\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\r\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\r\n        })\r\n    }\r\n    return target\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar USER_STATE_FIELD_NAMES_15_1 = [\"filterValues\", \"filterType\", \"fixed\", \"fixedPosition\"];\r\nvar USER_STATE_FIELD_NAMES = [\"visibleIndex\", \"dataField\", \"name\", \"dataType\", \"width\", \"visible\", \"sortOrder\", \"lastSortOrder\", \"sortIndex\", \"groupIndex\", \"filterValue\", \"selectedFilterOperation\", \"added\"].concat(USER_STATE_FIELD_NAMES_15_1);\r\nvar IGNORE_COLUMN_OPTION_NAMES = {\r\n    visibleWidth: true,\r\n    bestFitWidth: true,\r\n    bufferedFilterValue: true\r\n};\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\nvar GROUP_COMMAND_COLUMN_NAME = \"groupExpand\";\r\nvar regExp = /columns\\[(\\d+)\\]\\.?/gi;\r\nvar globalColumnId = 1;\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            commonColumnSettings: {\r\n                allowFiltering: true,\r\n                allowHiding: true,\r\n                allowSorting: true,\r\n                allowEditing: true,\r\n                encodeHtml: true,\r\n                trueText: _message.default.format(\"dxDataGrid-trueText\"),\r\n                falseText: _message.default.format(\"dxDataGrid-falseText\")\r\n            },\r\n            allowColumnReordering: false,\r\n            allowColumnResizing: false,\r\n            columnResizingMode: \"nextColumn\",\r\n            columnMinWidth: void 0,\r\n            columnWidth: void 0,\r\n            adaptColumnWidthByRatio: true,\r\n            columns: void 0,\r\n            regenerateColumnsByVisibleItems: false,\r\n            customizeColumns: null,\r\n            dateSerializationFormat: void 0\r\n        }\r\n    },\r\n    controllers: {\r\n        columns: _uiGrid_core.default.Controller.inherit(function() {\r\n            var DEFAULT_COLUMN_OPTIONS = {\r\n                visible: true,\r\n                showInColumnChooser: true\r\n            };\r\n            var DATATYPE_OPERATIONS = {\r\n                number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\"],\r\n                date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"]\r\n            };\r\n            var COLUMN_INDEX_OPTIONS = {\r\n                visibleIndex: true,\r\n                groupIndex: true,\r\n                grouped: true,\r\n                sortIndex: true,\r\n                sortOrder: true\r\n            };\r\n            var GROUP_LOCATION = \"group\";\r\n            var COLUMN_CHOOSER_LOCATION = \"columnChooser\";\r\n            var setFilterOperationsAsDefaultValues = function(column) {\r\n                column.filterOperations = column.defaultFilterOperations\r\n            };\r\n            var createColumn = function(that, columnOptions, userStateColumnOptions, bandColumn) {\r\n                var commonColumnOptions = {};\r\n                if (columnOptions) {\r\n                    if ((0, _type.isString)(columnOptions)) {\r\n                        columnOptions = {\r\n                            dataField: columnOptions\r\n                        }\r\n                    }\r\n                    that.setName(columnOptions);\r\n                    var result = {};\r\n                    if (columnOptions.command) {\r\n                        result = (0, _object.deepExtendArraySafe)(commonColumnOptions, columnOptions)\r\n                    } else {\r\n                        commonColumnOptions = that.getCommonSettings(columnOptions);\r\n                        if (userStateColumnOptions && userStateColumnOptions.name && userStateColumnOptions.dataField) {\r\n                            columnOptions = (0, _extend.extend)({}, columnOptions, {\r\n                                dataField: userStateColumnOptions.dataField\r\n                            })\r\n                        }\r\n                        var calculatedColumnOptions = that._createCalculatedColumnOptions(columnOptions, bandColumn);\r\n                        if (!columnOptions.type) {\r\n                            result = {\r\n                                headerId: \"dx-col-\".concat(globalColumnId++)\r\n                            }\r\n                        }\r\n                        result = (0, _object.deepExtendArraySafe)(result, DEFAULT_COLUMN_OPTIONS);\r\n                        (0, _object.deepExtendArraySafe)(result, commonColumnOptions);\r\n                        (0, _object.deepExtendArraySafe)(result, calculatedColumnOptions);\r\n                        (0, _object.deepExtendArraySafe)(result, columnOptions);\r\n                        (0, _object.deepExtendArraySafe)(result, {\r\n                            selector: null\r\n                        })\r\n                    }\r\n                    if (columnOptions.filterOperations === columnOptions.defaultFilterOperations) {\r\n                        setFilterOperationsAsDefaultValues(result)\r\n                    }\r\n                    return result\r\n                }\r\n            };\r\n            var createColumnsFromOptions = function createColumnsFromOptions(that, columnsOptions, bandColumn) {\r\n                var result = [];\r\n                if (columnsOptions) {\r\n                    (0, _iterator.each)(columnsOptions, function(index, columnOptions) {\r\n                        var userStateColumnOptions = that._columnsUserState && checkUserStateColumn(columnOptions, that._columnsUserState[index]) && that._columnsUserState[index];\r\n                        var column = createColumn(that, columnOptions, userStateColumnOptions, bandColumn);\r\n                        if (column) {\r\n                            if (bandColumn) {\r\n                                column.ownerBand = bandColumn\r\n                            }\r\n                            result.push(column);\r\n                            if (column.columns) {\r\n                                result = result.concat(createColumnsFromOptions(that, column.columns, column));\r\n                                delete column.columns;\r\n                                column.hasColumns = true\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                return result\r\n            };\r\n            var getParentBandColumns = function(columnIndex, columnParentByIndex) {\r\n                var result = [];\r\n                var parent = columnParentByIndex[columnIndex];\r\n                while (parent) {\r\n                    result.unshift(parent);\r\n                    columnIndex = parent.index;\r\n                    parent = columnParentByIndex[columnIndex]\r\n                }\r\n                return result\r\n            };\r\n            var _getChildrenByBandColumn = function(columnIndex, columnChildrenByIndex, recursive) {\r\n                var result = [];\r\n                var children = columnChildrenByIndex[columnIndex];\r\n                if (children) {\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        var column = children[i];\r\n                        if (!(0, _type.isDefined)(column.groupIndex) || column.showWhenGrouped) {\r\n                            result.push(column);\r\n                            if (recursive && column.isBand) {\r\n                                result = result.concat(_getChildrenByBandColumn(column.index, columnChildrenByIndex, recursive))\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            };\r\n            var getColumnByIndexes = function(that, columnIndexes) {\r\n                var result;\r\n                var columns;\r\n                var bandColumnsCache = that.getBandColumnsCache();\r\n                var callbackFilter = function(column) {\r\n                    var ownerBand = result ? result.index : void 0;\r\n                    return column.ownerBand === ownerBand\r\n                };\r\n                if (bandColumnsCache.isPlain) {\r\n                    result = that._columns[columnIndexes[0]]\r\n                } else {\r\n                    columns = that._columns.filter(callbackFilter);\r\n                    for (var i = 0; i < columnIndexes.length; i++) {\r\n                        result = columns[columnIndexes[i]];\r\n                        if (result) {\r\n                            columns = that._columns.filter(callbackFilter)\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            };\r\n            var getColumnFullPath = function(that, column) {\r\n                var result = [];\r\n                var columns;\r\n                var bandColumnsCache = that.getBandColumnsCache();\r\n                var callbackFilter = function(item) {\r\n                    return item.ownerBand === column.ownerBand\r\n                };\r\n                if (bandColumnsCache.isPlain) {\r\n                    var columnIndex = that._columns.indexOf(column);\r\n                    if (columnIndex >= 0) {\r\n                        result = [\"columns[\".concat(columnIndex, \"]\")]\r\n                    }\r\n                } else {\r\n                    columns = that._columns.filter(callbackFilter);\r\n                    while (columns.length && columns.indexOf(column) !== -1) {\r\n                        result.unshift(\"columns[\".concat(columns.indexOf(column), \"]\"));\r\n                        column = bandColumnsCache.columnParentByIndex[column.index];\r\n                        columns = column ? that._columns.filter(callbackFilter) : []\r\n                    }\r\n                }\r\n                return result.join(\".\")\r\n            };\r\n            var calculateColspan = function calculateColspan(that, columnID) {\r\n                var colspan = 0;\r\n                var columns = that.getChildrenByBandColumn(columnID, true);\r\n                (0, _iterator.each)(columns, function(_, column) {\r\n                    if (column.isBand) {\r\n                        column.colspan = column.colspan || calculateColspan(that, column.index);\r\n                        colspan += column.colspan || 1\r\n                    } else {\r\n                        colspan += 1\r\n                    }\r\n                });\r\n                return colspan\r\n            };\r\n            var processBandColumns = function(that, columns, bandColumnsCache) {\r\n                var rowspan;\r\n                for (var i = 0; i < columns.length; i++) {\r\n                    var column = columns[i];\r\n                    if (column.visible || column.command) {\r\n                        if (column.isBand) {\r\n                            column.colspan = column.colspan || calculateColspan(that, column.index)\r\n                        }\r\n                        if (!column.isBand || !column.colspan) {\r\n                            rowspan = that.getRowCount();\r\n                            if (!column.command && (!(0, _type.isDefined)(column.groupIndex) || column.showWhenGrouped)) {\r\n                                rowspan -= getParentBandColumns(column.index, bandColumnsCache.columnParentByIndex).length\r\n                            }\r\n                            if (rowspan > 1) {\r\n                                column.rowspan = rowspan\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            var getValueDataType = function(value) {\r\n                var dataType = (0, _type.type)(value);\r\n                if (\"string\" !== dataType && \"boolean\" !== dataType && \"number\" !== dataType && \"date\" !== dataType && \"object\" !== dataType) {\r\n                    dataType = void 0\r\n                }\r\n                return dataType\r\n            };\r\n            var getSerializationFormat = function(dataType, value) {\r\n                switch (dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        return _date_serialization.default.getDateSerializationFormat(value);\r\n                    case \"number\":\r\n                        if ((0, _type.isString)(value)) {\r\n                            return \"string\"\r\n                        }\r\n                        if ((0, _type.isNumeric)(value)) {\r\n                            return null\r\n                        }\r\n                }\r\n            };\r\n            var updateSerializers = function(options, dataType) {\r\n                if (!options.deserializeValue) {\r\n                    if (_uiGrid_core2.default.isDateType(dataType)) {\r\n                        options.deserializeValue = function(value) {\r\n                            return _date_serialization.default.deserializeDate(value)\r\n                        };\r\n                        options.serializeValue = function(value) {\r\n                            return (0, _type.isString)(value) ? value : _date_serialization.default.serializeDate(value, this.serializationFormat)\r\n                        }\r\n                    }\r\n                    if (\"number\" === dataType) {\r\n                        options.deserializeValue = function(value) {\r\n                            var parsedValue = parseFloat(value);\r\n                            return isNaN(parsedValue) ? value : parsedValue\r\n                        };\r\n                        options.serializeValue = function(value, target) {\r\n                            if (\"filter\" === target) {\r\n                                return value\r\n                            }\r\n                            return (0, _type.isDefined)(value) && \"string\" === this.serializationFormat ? value.toString() : value\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            var getAlignmentByDataType = function(dataType, isRTL) {\r\n                switch (dataType) {\r\n                    case \"number\":\r\n                        return \"right\";\r\n                    case \"boolean\":\r\n                        return \"center\";\r\n                    default:\r\n                        return (0, _position.getDefaultAlignment)(isRTL)\r\n                }\r\n            };\r\n            var customizeTextForBooleanDataType = function(e) {\r\n                if (true === e.value) {\r\n                    return this.trueText || \"true\"\r\n                } else {\r\n                    if (false === e.value) {\r\n                        return this.falseText || \"false\"\r\n                    } else {\r\n                        return e.valueText || \"\"\r\n                    }\r\n                }\r\n            };\r\n            var getCustomizeTextByDataType = function(dataType) {\r\n                if (\"boolean\" === dataType) {\r\n                    return customizeTextForBooleanDataType\r\n                }\r\n            };\r\n            var createColumnsFromDataSource = function(that, dataSource) {\r\n                var firstItems = that._getFirstItems(dataSource);\r\n                var fieldName;\r\n                var processedFields = {};\r\n                var result = [];\r\n                for (var i = 0; i < firstItems.length; i++) {\r\n                    if (firstItems[i]) {\r\n                        for (fieldName in firstItems[i]) {\r\n                            if (!(0, _type.isFunction)(firstItems[i][fieldName]) || _variable_wrapper.default.isWrapped(firstItems[i][fieldName])) {\r\n                                processedFields[fieldName] = true\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (fieldName in processedFields) {\r\n                    if (0 !== fieldName.indexOf(\"__\")) {\r\n                        var column = createColumn(that, fieldName);\r\n                        result.push(column)\r\n                    }\r\n                }\r\n                return result\r\n            };\r\n            var updateColumnIndexes = function(that) {\r\n                (0, _iterator.each)(that._columns, function(index, column) {\r\n                    column.index = index\r\n                });\r\n                (0, _iterator.each)(that._columns, function(index, column) {\r\n                    if ((0, _type.isObject)(column.ownerBand)) {\r\n                        column.ownerBand = column.ownerBand.index\r\n                    }\r\n                });\r\n                (0, _iterator.each)(that._commandColumns, function(index, column) {\r\n                    column.index = -(index + 1)\r\n                })\r\n            };\r\n            var updateColumnGroupIndexes = function(that, currentColumn) {\r\n                (0, _array.normalizeIndexes)(that._columns, \"groupIndex\", currentColumn, function(column) {\r\n                    var grouped = column.grouped;\r\n                    delete column.grouped;\r\n                    return grouped\r\n                })\r\n            };\r\n            var updateColumnSortIndexes = function(that, currentColumn) {\r\n                (0, _iterator.each)(that._columns, function(index, column) {\r\n                    if ((0, _type.isDefined)(column.sortIndex) && !isSortOrderValid(column.sortOrder)) {\r\n                        delete column.sortIndex\r\n                    }\r\n                });\r\n                (0, _array.normalizeIndexes)(that._columns, \"sortIndex\", currentColumn, function(column) {\r\n                    return !(0, _type.isDefined)(column.groupIndex) && isSortOrderValid(column.sortOrder)\r\n                })\r\n            };\r\n            var updateColumnVisibleIndexes = function(that, currentColumn) {\r\n                var key;\r\n                var column;\r\n                var bandColumns = {};\r\n                var result = [];\r\n                var bandColumnsCache = that.getBandColumnsCache();\r\n                var columns = that._columns.filter(function(column) {\r\n                    return !column.command\r\n                });\r\n                for (var i = 0; i < columns.length; i++) {\r\n                    column = columns[i];\r\n                    var parentBandColumns = getParentBandColumns(i, bandColumnsCache.columnParentByIndex);\r\n                    if (parentBandColumns.length) {\r\n                        var bandColumnIndex = parentBandColumns[parentBandColumns.length - 1].index;\r\n                        bandColumns[bandColumnIndex] = bandColumns[bandColumnIndex] || [];\r\n                        bandColumns[bandColumnIndex].push(column)\r\n                    } else {\r\n                        result.push(column)\r\n                    }\r\n                }\r\n                for (key in bandColumns) {\r\n                    (0, _array.normalizeIndexes)(bandColumns[key], \"visibleIndex\", currentColumn)\r\n                }(0, _array.normalizeIndexes)(result, \"visibleIndex\", currentColumn)\r\n            };\r\n            var getColumnIndexByVisibleIndex = function(that, visibleIndex, location) {\r\n                var rowIndex = (0, _type.isObject)(visibleIndex) ? visibleIndex.rowIndex : null;\r\n                var columns = location === GROUP_LOCATION ? that.getGroupColumns() : location === COLUMN_CHOOSER_LOCATION ? that.getChooserColumns() : that.getVisibleColumns(rowIndex);\r\n                var column;\r\n                visibleIndex = (0, _type.isObject)(visibleIndex) ? visibleIndex.columnIndex : visibleIndex;\r\n                column = columns[visibleIndex];\r\n                if (column && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                    column = that._columns.filter(function(col) {\r\n                        return column.type === col.type\r\n                    })[0] || column\r\n                }\r\n                return column && (0, _type.isDefined)(column.index) ? column.index : -1\r\n            };\r\n            var moveColumnToGroup = function(that, column, groupIndex) {\r\n                var groupColumns = that.getGroupColumns();\r\n                var i;\r\n                if (groupIndex >= 0) {\r\n                    for (i = 0; i < groupColumns.length; i++) {\r\n                        if (groupColumns[i].groupIndex >= groupIndex) {\r\n                            groupColumns[i].groupIndex++\r\n                        }\r\n                    }\r\n                } else {\r\n                    groupIndex = 0;\r\n                    for (i = 0; i < groupColumns.length; i++) {\r\n                        groupIndex = Math.max(groupIndex, groupColumns[i].groupIndex + 1)\r\n                    }\r\n                }\r\n                return groupIndex\r\n            };\r\n\r\n            function checkUserStateColumn(column, userStateColumn) {\r\n                return column && userStateColumn && (userStateColumn.name === column.name || !column.name) && (userStateColumn.dataField === column.dataField || column.name)\r\n            }\r\n            var applyUserState = function(that) {\r\n                var columnsUserState = that._columnsUserState;\r\n                var ignoreColumnOptionNames = that._ignoreColumnOptionNames || [];\r\n                var columns = that._columns;\r\n                var columnCountById = {};\r\n                var resultColumns = [];\r\n                var allColumnsHaveState = true;\r\n                var userStateColumnIndexes = [];\r\n                var column;\r\n                var userStateColumnIndex;\r\n                var i;\r\n\r\n                function applyFieldsState(column, userStateColumn) {\r\n                    if (!userStateColumn) {\r\n                        return\r\n                    }\r\n                    for (var index = 0; index < USER_STATE_FIELD_NAMES.length; index++) {\r\n                        var fieldName = USER_STATE_FIELD_NAMES[index];\r\n                        if ((0, _array.inArray)(fieldName, ignoreColumnOptionNames) >= 0) {\r\n                            continue\r\n                        }\r\n                        if (\"dataType\" === fieldName) {\r\n                            column[fieldName] = column[fieldName] || userStateColumn[fieldName]\r\n                        } else {\r\n                            if ((0, _array.inArray)(fieldName, USER_STATE_FIELD_NAMES_15_1) >= 0) {\r\n                                if (fieldName in userStateColumn) {\r\n                                    column[fieldName] = userStateColumn[fieldName]\r\n                                }\r\n                            } else {\r\n                                if (\"selectedFilterOperation\" === fieldName && userStateColumn[fieldName]) {\r\n                                    column.defaultSelectedFilterOperation = column[fieldName] || null\r\n                                }\r\n                                column[fieldName] = userStateColumn[fieldName]\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function findUserStateColumn(columnsUserState, column) {\r\n                    var id = column.name || column.dataField;\r\n                    var count = columnCountById[id] || 0;\r\n                    for (var j = 0; j < columnsUserState.length; j++) {\r\n                        if (checkUserStateColumn(column, columnsUserState[j])) {\r\n                            if (count) {\r\n                                count--\r\n                            } else {\r\n                                columnCountById[id] = columnCountById[id] || 0;\r\n                                columnCountById[id]++;\r\n                                return j\r\n                            }\r\n                        }\r\n                    }\r\n                    return -1\r\n                }\r\n                if (columnsUserState) {\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        userStateColumnIndex = findUserStateColumn(columnsUserState, columns[i]);\r\n                        allColumnsHaveState = allColumnsHaveState && userStateColumnIndex >= 0;\r\n                        userStateColumnIndexes.push(userStateColumnIndex)\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        userStateColumnIndex = userStateColumnIndexes[i];\r\n                        if (that._hasUserState || allColumnsHaveState) {\r\n                            applyFieldsState(column, columnsUserState[userStateColumnIndex])\r\n                        }\r\n                        if (userStateColumnIndex >= 0 && (0, _type.isDefined)(columnsUserState[userStateColumnIndex].initialIndex)) {\r\n                            resultColumns[userStateColumnIndex] = column\r\n                        } else {\r\n                            resultColumns.push(column)\r\n                        }\r\n                    }\r\n                    var hasAddedBands = false;\r\n                    for (i = 0; i < columnsUserState.length; i++) {\r\n                        var columnUserState = columnsUserState[i];\r\n                        if (columnUserState.added && findUserStateColumn(columns, columnUserState) < 0) {\r\n                            column = createColumn(that, columnUserState.added);\r\n                            applyFieldsState(column, columnUserState);\r\n                            resultColumns.push(column);\r\n                            if (columnUserState.added.columns) {\r\n                                hasAddedBands = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (hasAddedBands) {\r\n                        updateColumnIndexes(that);\r\n                        resultColumns = createColumnsFromOptions(that, resultColumns)\r\n                    }\r\n                    assignColumns(that, resultColumns)\r\n                }\r\n            };\r\n            var updateIndexes = function(that, column) {\r\n                updateColumnIndexes(that);\r\n                updateColumnGroupIndexes(that, column);\r\n                updateColumnSortIndexes(that, column);\r\n                resetBandColumnsCache(that);\r\n                updateColumnVisibleIndexes(that, column)\r\n            };\r\n            var resetColumnsCache = function(that) {\r\n                that.resetColumnsCache()\r\n            };\r\n\r\n            function assignColumns(that, columns) {\r\n                that._columns = columns;\r\n                resetColumnsCache(that);\r\n                that.updateColumnDataTypes()\r\n            }\r\n            var updateColumnChanges = function(that, changeType, optionName, columnIndex) {\r\n                var columnChanges = that._columnChanges || {\r\n                    optionNames: {\r\n                        length: 0\r\n                    },\r\n                    changeTypes: {\r\n                        length: 0\r\n                    },\r\n                    columnIndex: columnIndex\r\n                };\r\n                optionName = optionName || \"all\";\r\n                optionName = optionName.split(\".\")[0];\r\n                var changeTypes = columnChanges.changeTypes;\r\n                if (changeType && !changeTypes[changeType]) {\r\n                    changeTypes[changeType] = true;\r\n                    changeTypes.length++\r\n                }\r\n                var optionNames = columnChanges.optionNames;\r\n                if (optionName && !optionNames[optionName]) {\r\n                    optionNames[optionName] = true;\r\n                    optionNames.length++\r\n                }\r\n                if (void 0 === columnIndex || columnIndex !== columnChanges.columnIndex) {\r\n                    delete columnChanges.columnIndex\r\n                }\r\n                that._columnChanges = columnChanges;\r\n                resetColumnsCache(that)\r\n            };\r\n            var fireColumnsChanged = function(that) {\r\n                var onColumnsChanging = that.option(\"onColumnsChanging\");\r\n                var columnChanges = that._columnChanges;\r\n                var reinitOptionNames = [\"dataField\", \"lookup\", \"dataType\", \"columns\"];\r\n                var needReinit = function(options) {\r\n                    return options && reinitOptionNames.some(function(name) {\r\n                        return options[name]\r\n                    })\r\n                };\r\n                if (that.isInitialized() && !that._updateLockCount && columnChanges) {\r\n                    if (onColumnsChanging) {\r\n                        that._updateLockCount++;\r\n                        onColumnsChanging((0, _extend.extend)({\r\n                            component: that.component\r\n                        }, columnChanges));\r\n                        that._updateLockCount--\r\n                    }\r\n                    that._columnChanges = void 0;\r\n                    if (needReinit(columnChanges.optionNames)) {\r\n                        that.reinit()\r\n                    } else {\r\n                        that.columnsChanged.fire(columnChanges)\r\n                    }\r\n                }\r\n            };\r\n            var updateSortOrderWhenGrouping = function(that, column, groupIndex, prevGroupIndex) {\r\n                var columnWasGrouped = prevGroupIndex >= 0;\r\n                if (groupIndex >= 0) {\r\n                    if (!columnWasGrouped) {\r\n                        column.lastSortOrder = column.sortOrder\r\n                    }\r\n                } else {\r\n                    var sortMode = that.option(\"sorting.mode\");\r\n                    var sortOrder = column.lastSortOrder;\r\n                    if (\"single\" === sortMode) {\r\n                        var sortedByAnotherColumn = that._columns.some(function(col) {\r\n                            return col !== column && (0, _type.isDefined)(col.sortIndex)\r\n                        });\r\n                        if (sortedByAnotherColumn) {\r\n                            sortOrder = void 0\r\n                        }\r\n                    }\r\n                    column.sortOrder = sortOrder\r\n                }\r\n            };\r\n            var fireOptionChanged = function(that, options) {\r\n                var value = options.value;\r\n                var optionName = options.optionName;\r\n                var prevValue = options.prevValue;\r\n                var fullOptionName = options.fullOptionName;\r\n                var fullOptionPath = \"\".concat(fullOptionName, \".\").concat(optionName);\r\n                if (!IGNORE_COLUMN_OPTION_NAMES[optionName] && that._skipProcessingColumnsChange !== fullOptionPath) {\r\n                    that._skipProcessingColumnsChange = fullOptionPath;\r\n                    that.component._notifyOptionChanged(fullOptionPath, value, prevValue);\r\n                    that._skipProcessingColumnsChange = false\r\n                }\r\n            };\r\n            var columnOptionCore = function(that, column, optionName, value, notFireEvent) {\r\n                var optionGetter = (0, _data.compileGetter)(optionName);\r\n                var columnIndex = column.index;\r\n                var columns;\r\n                var changeType;\r\n                var initialColumn;\r\n                if (3 === arguments.length) {\r\n                    return optionGetter(column, {\r\n                        functionsAsIs: true\r\n                    })\r\n                }\r\n                var prevValue = optionGetter(column, {\r\n                    functionsAsIs: true\r\n                });\r\n                if (prevValue !== value) {\r\n                    if (\"groupIndex\" === optionName || \"calculateGroupValue\" === optionName) {\r\n                        changeType = \"grouping\";\r\n                        updateSortOrderWhenGrouping(that, column, value, prevValue)\r\n                    } else {\r\n                        if (\"sortIndex\" === optionName || \"sortOrder\" === optionName || \"calculateSortValue\" === optionName) {\r\n                            changeType = \"sorting\"\r\n                        } else {\r\n                            changeType = \"columns\"\r\n                        }\r\n                    }\r\n                    var optionSetter = (0, _data.compileSetter)(optionName);\r\n                    optionSetter(column, value, {\r\n                        functionsAsIs: true\r\n                    });\r\n                    var fullOptionName = getColumnFullPath(that, column);\r\n                    if (COLUMN_INDEX_OPTIONS[optionName]) {\r\n                        updateIndexes(that, column);\r\n                        value = optionGetter(column)\r\n                    }\r\n                    if (\"name\" === optionName || \"allowEditing\" === optionName) {\r\n                        that._checkColumns()\r\n                    }\r\n                    fullOptionName && fireOptionChanged(that, {\r\n                        fullOptionName: fullOptionName,\r\n                        optionName: optionName,\r\n                        value: value,\r\n                        prevValue: prevValue\r\n                    });\r\n                    if (!(0, _type.isDefined)(prevValue) && !(0, _type.isDefined)(value) && 0 !== optionName.indexOf(\"buffer\")) {\r\n                        notFireEvent = true\r\n                    }\r\n                    if (!notFireEvent) {\r\n                        if ((0, _array.inArray)(optionName, USER_STATE_FIELD_NAMES) < 0 && \"visibleWidth\" !== optionName) {\r\n                            columns = that.option(\"columns\");\r\n                            initialColumn = that.getColumnByPath(fullOptionName, columns);\r\n                            if ((0, _type.isString)(initialColumn)) {\r\n                                initialColumn = columns[columnIndex] = {\r\n                                    dataField: initialColumn\r\n                                }\r\n                            }\r\n                            if (initialColumn && checkUserStateColumn(initialColumn, column)) {\r\n                                optionSetter(initialColumn, value, {\r\n                                    functionsAsIs: true\r\n                                })\r\n                            }\r\n                        }\r\n                        updateColumnChanges(that, changeType, optionName, columnIndex)\r\n                    } else {\r\n                        resetColumnsCache(that)\r\n                    }\r\n                }\r\n            };\r\n\r\n            function isSortOrderValid(sortOrder) {\r\n                return \"asc\" === sortOrder || \"desc\" === sortOrder\r\n            }\r\n            var addExpandColumn = function(that) {\r\n                var options = that._getExpandColumnOptions();\r\n                that.addCommandColumn(options)\r\n            };\r\n            var defaultSetCellValue = function(data, value) {\r\n                var path = this.dataField.split(\".\");\r\n                var dotCount = path.length - 1;\r\n                if (this.serializeValue) {\r\n                    value = this.serializeValue(value)\r\n                }\r\n                for (var i = 0; i < dotCount; i++) {\r\n                    var name = path[i];\r\n                    data = data[name] = data[name] || {}\r\n                }\r\n                data[path[dotCount]] = value\r\n            };\r\n            var getDataColumns = function getDataColumns(columns, rowIndex, bandColumnID) {\r\n                var result = [];\r\n                rowIndex = rowIndex || 0;\r\n                columns[rowIndex] && (0, _iterator.each)(columns[rowIndex], function(_, column) {\r\n                    if (column.ownerBand === bandColumnID || column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                        if (!column.isBand || !column.colspan) {\r\n                            if (!column.command || rowIndex < 1) {\r\n                                result.push(column)\r\n                            }\r\n                        } else {\r\n                            result.push.apply(result, getDataColumns(columns, rowIndex + 1, column.index))\r\n                        }\r\n                    }\r\n                });\r\n                return result\r\n            };\r\n            var _getRowCount = function(that) {\r\n                var rowCount = 1;\r\n                var bandColumnsCache = that.getBandColumnsCache();\r\n                var columnParentByIndex = bandColumnsCache.columnParentByIndex;\r\n                that._columns.forEach(function(column) {\r\n                    var parents = getParentBandColumns(column.index, columnParentByIndex);\r\n                    var invisibleParents = parents.filter(function(column) {\r\n                        return !column.visible\r\n                    });\r\n                    if (column.visible && !invisibleParents.length) {\r\n                        rowCount = Math.max(rowCount, parents.length + 1)\r\n                    }\r\n                });\r\n                return rowCount\r\n            };\r\n            var isCustomCommandColumn = function(that, commandColumn) {\r\n                return !!that._columns.filter(function(column) {\r\n                    return column.type === commandColumn.type\r\n                }).length\r\n            };\r\n            var getFixedPosition = function(that, column) {\r\n                var rtlEnabled = that.option(\"rtlEnabled\");\r\n                if (column.command && !isCustomCommandColumn(that, column) || !column.fixedPosition) {\r\n                    return rtlEnabled ? \"right\" : \"left\"\r\n                }\r\n                return column.fixedPosition\r\n            };\r\n            var processExpandColumns = function(columns, expandColumns, type, columnIndex) {\r\n                var customColumnIndex;\r\n                var rowCount = this.getRowCount();\r\n                var rowspan = columns[columnIndex] && columns[columnIndex].rowspan;\r\n                var expandColumnsByType = expandColumns.filter(function(column) {\r\n                    return column.type === type\r\n                });\r\n                columns.forEach(function(column, index) {\r\n                    if (column.type === type) {\r\n                        customColumnIndex = index;\r\n                        rowspan = columns[index + 1] ? columns[index + 1].rowspan : rowCount\r\n                    }\r\n                });\r\n                if (rowspan > 1) {\r\n                    expandColumnsByType = (0, _iterator.map)(expandColumnsByType, function(expandColumn) {\r\n                        return (0, _extend.extend)({}, expandColumn, {\r\n                            rowspan: rowspan\r\n                        })\r\n                    })\r\n                }\r\n                expandColumnsByType.unshift.apply(expandColumnsByType, (0, _type.isDefined)(customColumnIndex) ? [customColumnIndex, 1] : [columnIndex, 0]);\r\n                columns.splice.apply(columns, expandColumnsByType);\r\n                return rowspan || 1\r\n            };\r\n            var digitsCount = function(number) {\r\n                var i;\r\n                for (i = 0; number > 1; i++) {\r\n                    number /= 10\r\n                }\r\n                return i\r\n            };\r\n            var numberToString = function(number, digitsCount) {\r\n                var str = number ? number.toString() : \"0\";\r\n                while (str.length < digitsCount) {\r\n                    str = \"0\" + str\r\n                }\r\n                return str\r\n            };\r\n            var mergeColumns = function(that, columns, commandColumns, needToExtend) {\r\n                var column;\r\n                var commandColumnIndex;\r\n                var result = columns.slice().map(function(column) {\r\n                    return (0, _extend.extend)({}, column)\r\n                });\r\n                var isColumnFixing = that._isColumnFixing();\r\n                var defaultCommandColumns = commandColumns.slice().map(function(column) {\r\n                    return (0, _extend.extend)({\r\n                        fixed: isColumnFixing\r\n                    }, column)\r\n                });\r\n                var getCommandColumnIndex = function(column) {\r\n                    return commandColumns.reduce(function(result, commandColumn, index) {\r\n                        var columnType = needToExtend && column.type === GROUP_COMMAND_COLUMN_NAME ? \"expand\" : column.type;\r\n                        return commandColumn.type === columnType || commandColumn.command === column.command ? index : result\r\n                    }, -1)\r\n                };\r\n                var callbackFilter = function(commandColumn) {\r\n                    return commandColumn.command !== commandColumns[commandColumnIndex].command\r\n                };\r\n                for (var i = 0; i < columns.length; i++) {\r\n                    column = columns[i];\r\n                    commandColumnIndex = column && (column.type || column.command) ? getCommandColumnIndex(column) : -1;\r\n                    if (commandColumnIndex >= 0) {\r\n                        if (needToExtend) {\r\n                            result[i] = (0, _extend.extend)({\r\n                                fixed: isColumnFixing\r\n                            }, commandColumns[commandColumnIndex], column);\r\n                            if (column.type !== GROUP_COMMAND_COLUMN_NAME) {\r\n                                defaultCommandColumns = defaultCommandColumns.filter(callbackFilter)\r\n                            }\r\n                        } else {\r\n                            var columnOptions = {\r\n                                visibleIndex: column.visibleIndex,\r\n                                index: column.index,\r\n                                headerId: column.headerId,\r\n                                allowFixing: 0 === column.groupIndex,\r\n                                allowReordering: 0 === column.groupIndex,\r\n                                groupIndex: column.groupIndex\r\n                            };\r\n                            result[i] = (0, _extend.extend)({}, column, commandColumns[commandColumnIndex], column.type === GROUP_COMMAND_COLUMN_NAME && columnOptions)\r\n                        }\r\n                    }\r\n                }\r\n                if (columns.length && needToExtend && defaultCommandColumns.length) {\r\n                    result = result.concat(defaultCommandColumns)\r\n                }\r\n                return result\r\n            };\r\n            var isColumnFixed = function(that, column) {\r\n                return (0, _type.isDefined)(column.fixed) || !column.type ? column.fixed : that._isColumnFixing()\r\n            };\r\n            var convertOwnerBandToColumnReference = function(columns) {\r\n                columns.forEach(function(column) {\r\n                    if ((0, _type.isDefined)(column.ownerBand)) {\r\n                        column.ownerBand = columns[column.ownerBand]\r\n                    }\r\n                })\r\n            };\r\n            var resetBandColumnsCache = function(that) {\r\n                that._bandColumnsCache = void 0\r\n            };\r\n            var findColumn = function(columns, identifier) {\r\n                var identifierOptionName = (0, _type.isString)(identifier) && identifier.substr(0, identifier.indexOf(\":\"));\r\n                var column;\r\n                if (void 0 === identifier) {\r\n                    return\r\n                }\r\n                if (identifierOptionName) {\r\n                    identifier = identifier.substr(identifierOptionName.length + 1)\r\n                }\r\n                if (identifierOptionName) {\r\n                    column = columns.filter(function(column) {\r\n                        return \"\" + column[identifierOptionName] === identifier\r\n                    })[0]\r\n                } else {\r\n                    [\"index\", \"name\", \"dataField\", \"caption\"].some(function(optionName) {\r\n                        column = columns.filter(function(column) {\r\n                            return column[optionName] === identifier\r\n                        })[0];\r\n                        return !!column\r\n                    })\r\n                }\r\n                return column\r\n            };\r\n            return {\r\n                _getExpandColumnOptions: function() {\r\n                    return {\r\n                        type: \"expand\",\r\n                        command: \"expand\",\r\n                        width: \"auto\",\r\n                        cssClass: COMMAND_EXPAND_CLASS,\r\n                        allowEditing: false,\r\n                        allowGrouping: false,\r\n                        allowSorting: false,\r\n                        allowResizing: false,\r\n                        allowReordering: false,\r\n                        allowHiding: false\r\n                    }\r\n                },\r\n                _getFirstItems: function(dataSource) {\r\n                    var groupsCount;\r\n                    var items = [];\r\n                    var getFirstItemsCore = function getFirstItemsCore(items, groupsCount) {\r\n                        if (!items || !groupsCount) {\r\n                            return items\r\n                        }\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            var childItems = getFirstItemsCore(items[i].items || items[i].collapsedItems, groupsCount - 1);\r\n                            if (childItems && childItems.length) {\r\n                                return childItems\r\n                            }\r\n                        }\r\n                    };\r\n                    if (dataSource && dataSource.items().length > 0) {\r\n                        groupsCount = _uiGrid_core2.default.normalizeSortingInfo(dataSource.group()).length;\r\n                        items = getFirstItemsCore(dataSource.items(), groupsCount) || []\r\n                    }\r\n                    return items\r\n                },\r\n                _endUpdateCore: function() {\r\n                    !this._skipProcessingColumnsChange && fireColumnsChanged(this)\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    var columns = that.option(\"columns\");\r\n                    that._commandColumns = that._commandColumns || [];\r\n                    that._columns = that._columns || [];\r\n                    that._isColumnsFromOptions = !!columns;\r\n                    if (that._isColumnsFromOptions) {\r\n                        assignColumns(that, columns ? createColumnsFromOptions(that, columns) : []);\r\n                        applyUserState(that)\r\n                    } else {\r\n                        assignColumns(that, that._columnsUserState ? createColumnsFromOptions(that, that._columnsUserState) : that._columns)\r\n                    }\r\n                    addExpandColumn(that);\r\n                    if (that._dataSourceApplied) {\r\n                        that.applyDataSource(that._dataSource, true)\r\n                    } else {\r\n                        updateIndexes(that)\r\n                    }\r\n                    that._checkColumns()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"columnsChanged\"]\r\n                },\r\n                getColumnByPath: function(path, columns) {\r\n                    var that = this;\r\n                    var column;\r\n                    var columnIndexes = [];\r\n                    path.replace(regExp, function(_, columnIndex) {\r\n                        columnIndexes.push(parseInt(columnIndex));\r\n                        return \"\"\r\n                    });\r\n                    if (columnIndexes.length) {\r\n                        if (columns) {\r\n                            column = columnIndexes.reduce(function(column, index) {\r\n                                return column && column.columns && column.columns[index]\r\n                            }, {\r\n                                columns: columns\r\n                            })\r\n                        } else {\r\n                            column = getColumnByIndexes(that, columnIndexes)\r\n                        }\r\n                    }\r\n                    return column\r\n                },\r\n                optionChanged: function(args) {\r\n                    var needUpdateRequireResize;\r\n                    switch (args.name) {\r\n                        case \"adaptColumnWidthByRatio\":\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"dataSource\":\r\n                            if (args.value !== args.previousValue && !this.option(\"columns\") && (!Array.isArray(args.value) || !Array.isArray(args.previousValue))) {\r\n                                this._columns = []\r\n                            }\r\n                            break;\r\n                        case \"columns\":\r\n                            needUpdateRequireResize = this._skipProcessingColumnsChange;\r\n                            args.handled = true;\r\n                            if (!this._skipProcessingColumnsChange) {\r\n                                if (args.name === args.fullName) {\r\n                                    this._columnsUserState = null;\r\n                                    this._ignoreColumnOptionNames = null;\r\n                                    this.init()\r\n                                } else {\r\n                                    this._columnOptionChanged(args);\r\n                                    needUpdateRequireResize = true\r\n                                }\r\n                            }\r\n                            if (needUpdateRequireResize) {\r\n                                this._updateRequireResize(args)\r\n                            }\r\n                            break;\r\n                        case \"commonColumnSettings\":\r\n                        case \"columnAutoWidth\":\r\n                        case \"allowColumnResizing\":\r\n                        case \"allowColumnReordering\":\r\n                        case \"columnFixing\":\r\n                        case \"grouping\":\r\n                        case \"groupPanel\":\r\n                        case \"regenerateColumnsByVisibleItems\":\r\n                        case \"customizeColumns\":\r\n                        case \"editing\":\r\n                        case \"columnHidingEnabled\":\r\n                        case \"dateSerializationFormat\":\r\n                        case \"columnResizingMode\":\r\n                        case \"columnMinWidth\":\r\n                        case \"columnWidth\":\r\n                            var _args$fullName, _args$fullName2, _args$fullName3, _args$fullName4, _args$fullName5;\r\n                            args.handled = true;\r\n                            var ignoreColumnOptionNames = \"columnWidth\" === args.fullName && [\"width\"];\r\n                            var isEditingPopup = 0 === (null === (_args$fullName = args.fullName) || void 0 === _args$fullName ? void 0 : _args$fullName.indexOf(\"editing.popup\"));\r\n                            var isEditingForm = 0 === (null === (_args$fullName2 = args.fullName) || void 0 === _args$fullName2 ? void 0 : _args$fullName2.indexOf(\"editing.form\"));\r\n                            var isEditRowKey = 0 === (null === (_args$fullName3 = args.fullName) || void 0 === _args$fullName3 ? void 0 : _args$fullName3.indexOf(\"editing.editRowKey\"));\r\n                            var isEditColumnName = 0 === (null === (_args$fullName4 = args.fullName) || void 0 === _args$fullName4 ? void 0 : _args$fullName4.indexOf(\"editing.editColumnName\"));\r\n                            var isChanges = 0 === (null === (_args$fullName5 = args.fullName) || void 0 === _args$fullName5 ? void 0 : _args$fullName5.indexOf(\"editing.changes\"));\r\n                            var needReinit = !isEditingPopup && !isEditingForm && !isEditRowKey && !isChanges && !isEditColumnName;\r\n                            if (needReinit) {\r\n                                this.reinit(ignoreColumnOptionNames)\r\n                            }\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this.reinit();\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(args) {\r\n                    var columnOptionValue = {};\r\n                    var column = this.getColumnByPath(args.fullName);\r\n                    var columnOptionName = args.fullName.replace(regExp, \"\");\r\n                    if (column) {\r\n                        if (columnOptionName) {\r\n                            columnOptionValue[columnOptionName] = args.value\r\n                        } else {\r\n                            columnOptionValue = args.value\r\n                        }\r\n                        this._skipProcessingColumnsChange = args.fullName;\r\n                        this.columnOption(column.index, columnOptionValue);\r\n                        this._skipProcessingColumnsChange = false\r\n                    }\r\n                },\r\n                _updateRequireResize: function(args) {\r\n                    var component = this.component;\r\n                    if (\"width\" === args.fullName.replace(regExp, \"\") && component._updateLockCount) {\r\n                        component._requireResize = true\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"addColumn\", \"deleteColumn\", \"columnOption\", \"columnCount\", \"clearSorting\", \"clearGrouping\", \"getVisibleColumns\", \"getVisibleColumnIndex\"]\r\n                },\r\n                applyDataSource: function(dataSource, forceApplying) {\r\n                    var that = this;\r\n                    var isDataSourceLoaded = dataSource && dataSource.isLoaded();\r\n                    that._dataSource = dataSource;\r\n                    if (!that._dataSourceApplied || 0 === that._dataSourceColumnsCount || forceApplying || that.option(\"regenerateColumnsByVisibleItems\")) {\r\n                        if (isDataSourceLoaded) {\r\n                            if (!that._isColumnsFromOptions) {\r\n                                var columnsFromDataSource = createColumnsFromDataSource(that, dataSource);\r\n                                if (columnsFromDataSource.length) {\r\n                                    assignColumns(that, columnsFromDataSource);\r\n                                    that._dataSourceColumnsCount = that._columns.length;\r\n                                    applyUserState(that)\r\n                                }\r\n                            }\r\n                            return that.updateColumns(dataSource, forceApplying)\r\n                        } else {\r\n                            that._dataSourceApplied = false\r\n                        }\r\n                    } else {\r\n                        if (isDataSourceLoaded && !that.isAllDataTypesDefined(true) && that.updateColumnDataTypes(dataSource)) {\r\n                            updateColumnChanges(that, \"columns\");\r\n                            fireColumnsChanged(that);\r\n                            return (new _deferred.Deferred).reject().promise()\r\n                        }\r\n                    }\r\n                },\r\n                reset: function() {\r\n                    this._dataSourceApplied = false;\r\n                    this._dataSourceColumnsCount = void 0;\r\n                    this.reinit()\r\n                },\r\n                resetColumnsCache: function() {\r\n                    var that = this;\r\n                    that._visibleColumns = void 0;\r\n                    that._fixedColumns = void 0;\r\n                    that._rowCount = void 0;\r\n                    resetBandColumnsCache(that)\r\n                },\r\n                reinit: function(ignoreColumnOptionNames) {\r\n                    this._columnsUserState = this.getUserState();\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames || null;\r\n                    this.init();\r\n                    if (ignoreColumnOptionNames) {\r\n                        this._ignoreColumnOptionNames = null\r\n                    }\r\n                },\r\n                isInitialized: function() {\r\n                    return !!this._columns.length || !!this.option(\"columns\")\r\n                },\r\n                isDataSourceApplied: function() {\r\n                    return this._dataSourceApplied\r\n                },\r\n                getCommonSettings: function(column) {\r\n                    var commonColumnSettings = (!column || !column.type) && this.option(\"commonColumnSettings\") || {};\r\n                    var groupingOptions = this.option(\"grouping\") || {};\r\n                    var groupPanelOptions = this.option(\"groupPanel\") || {};\r\n                    return (0, _extend.extend)({\r\n                        allowFixing: this.option(\"columnFixing.enabled\"),\r\n                        allowResizing: this.option(\"allowColumnResizing\") || void 0,\r\n                        allowReordering: this.option(\"allowColumnReordering\"),\r\n                        minWidth: this.option(\"columnMinWidth\"),\r\n                        width: this.option(\"columnWidth\"),\r\n                        autoExpandGroup: groupingOptions.autoExpandAll,\r\n                        allowCollapsing: groupingOptions.allowCollapsing,\r\n                        allowGrouping: groupPanelOptions.allowColumnDragging && groupPanelOptions.visible || groupingOptions.contextMenuEnabled\r\n                    }, commonColumnSettings)\r\n                },\r\n                isColumnOptionUsed: function(optionName) {\r\n                    for (var i = 0; i < this._columns.length; i++) {\r\n                        if (this._columns[i][optionName]) {\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                isAllDataTypesDefined: function(checkSerializers) {\r\n                    var columns = this._columns;\r\n                    if (!columns.length) {\r\n                        return false\r\n                    }\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (!columns[i].dataField && columns[i].calculateCellValue === columns[i].defaultCalculateCellValue) {\r\n                            continue\r\n                        }\r\n                        if (!columns[i].dataType || checkSerializers && columns[i].deserializeValue && void 0 === columns[i].serializationFormat) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                getColumns: function() {\r\n                    return this._columns\r\n                },\r\n                isBandColumnsUsed: function() {\r\n                    return this.getColumns().some(function(column) {\r\n                        return column.isBand\r\n                    })\r\n                },\r\n                getGroupColumns: function() {\r\n                    var result = [];\r\n                    (0, _iterator.each)(this._columns, function() {\r\n                        var column = this;\r\n                        if ((0, _type.isDefined)(column.groupIndex)) {\r\n                            result[column.groupIndex] = column\r\n                        }\r\n                    });\r\n                    return result\r\n                },\r\n                getVisibleColumns: function(rowIndex) {\r\n                    this._visibleColumns = this._visibleColumns || this._getVisibleColumnsCore();\r\n                    rowIndex = (0, _type.isDefined)(rowIndex) ? rowIndex : this._visibleColumns.length - 1;\r\n                    return this._visibleColumns[rowIndex] || []\r\n                },\r\n                getFixedColumns: function(rowIndex) {\r\n                    this._fixedColumns = this._fixedColumns || this._getFixedColumnsCore();\r\n                    rowIndex = (0, _type.isDefined)(rowIndex) ? rowIndex : this._fixedColumns.length - 1;\r\n                    return this._fixedColumns[rowIndex] || []\r\n                },\r\n                getFilteringColumns: function() {\r\n                    return this.getColumns().filter(function(item) {\r\n                        return (item.dataField || item.name) && (item.allowFiltering || item.allowHeaderFiltering)\r\n                    }).map(function(item) {\r\n                        var field = (0, _extend.extend)(true, {}, item);\r\n                        if (!(0, _type.isDefined)(field.dataField)) {\r\n                            field.dataField = field.name\r\n                        }\r\n                        field.filterOperations = item.filterOperations !== item.defaultFilterOperations ? field.filterOperations : null;\r\n                        return field\r\n                    })\r\n                },\r\n                getColumnIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                _getFixedColumnsCore: function() {\r\n                    var that = this;\r\n                    var result = [];\r\n                    var rowCount = that.getRowCount();\r\n                    var isColumnFixing = that._isColumnFixing();\r\n                    var transparentColumn = {\r\n                        command: \"transparent\"\r\n                    };\r\n                    var transparentColspan = 0;\r\n                    var notFixedColumnCount;\r\n                    var transparentColumnIndex;\r\n                    var lastFixedPosition;\r\n                    if (isColumnFixing) {\r\n                        for (var i = 0; i <= rowCount; i++) {\r\n                            notFixedColumnCount = 0;\r\n                            lastFixedPosition = null;\r\n                            transparentColumnIndex = null;\r\n                            var visibleColumns = that.getVisibleColumns(i, true);\r\n                            for (var j = 0; j < visibleColumns.length; j++) {\r\n                                var prevColumn = visibleColumns[j - 1];\r\n                                var column = visibleColumns[j];\r\n                                if (!column.fixed) {\r\n                                    if (0 === i) {\r\n                                        if (column.isBand && column.colspan) {\r\n                                            transparentColspan += column.colspan\r\n                                        } else {\r\n                                            transparentColspan++\r\n                                        }\r\n                                    }\r\n                                    notFixedColumnCount++;\r\n                                    if (!(0, _type.isDefined)(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else {\r\n                                    if (prevColumn && prevColumn.fixed && getFixedPosition(that, prevColumn) !== getFixedPosition(that, column)) {\r\n                                        if (!(0, _type.isDefined)(transparentColumnIndex)) {\r\n                                            transparentColumnIndex = j\r\n                                        }\r\n                                    } else {\r\n                                        lastFixedPosition = column.fixedPosition\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (0 === i && (0 === notFixedColumnCount || notFixedColumnCount >= visibleColumns.length)) {\r\n                                return []\r\n                            }\r\n                            if (!(0, _type.isDefined)(transparentColumnIndex)) {\r\n                                transparentColumnIndex = \"right\" === lastFixedPosition ? 0 : visibleColumns.length\r\n                            }\r\n                            result[i] = visibleColumns.slice(0);\r\n                            if (!transparentColumn.colspan) {\r\n                                transparentColumn.colspan = transparentColspan\r\n                            }\r\n                            result[i].splice(transparentColumnIndex, notFixedColumnCount, transparentColumn)\r\n                        }\r\n                    }\r\n                    return result.map(function(columns) {\r\n                        return columns.map(function(column) {\r\n                            var newColumn = _objectSpread({}, column);\r\n                            if (newColumn.headerId) {\r\n                                newColumn.headerId += \"-fixed\"\r\n                            }\r\n                            return newColumn\r\n                        })\r\n                    })\r\n                },\r\n                _isColumnFixing: function() {\r\n                    var isColumnFixing = this.option(\"columnFixing.enabled\");\r\n                    !isColumnFixing && (0, _iterator.each)(this._columns, function(_, column) {\r\n                        if (column.fixed) {\r\n                            isColumnFixing = true;\r\n                            return false\r\n                        }\r\n                    });\r\n                    return isColumnFixing\r\n                },\r\n                _getExpandColumnsCore: function() {\r\n                    return this.getGroupColumns()\r\n                },\r\n                getExpandColumns: function() {\r\n                    var expandColumns = this._getExpandColumnsCore();\r\n                    var expandColumn;\r\n                    var firstGroupColumn = expandColumns.filter(function(column) {\r\n                        return 0 === column.groupIndex\r\n                    })[0];\r\n                    var isFixedFirstGroupColumn = firstGroupColumn && firstGroupColumn.fixed;\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    if (expandColumns.length) {\r\n                        expandColumn = this.columnOption(\"command:expand\")\r\n                    }\r\n                    expandColumns = (0, _iterator.map)(expandColumns, function(column) {\r\n                        return (0, _extend.extend)({}, column, {\r\n                            visibleWidth: null,\r\n                            minWidth: null,\r\n                            cellTemplate: !(0, _type.isDefined)(column.groupIndex) ? column.cellTemplate : null,\r\n                            headerCellTemplate: null,\r\n                            fixed: !(0, _type.isDefined)(column.groupIndex) || !isFixedFirstGroupColumn ? isColumnFixing : true\r\n                        }, expandColumn, {\r\n                            index: column.index,\r\n                            type: column.type || GROUP_COMMAND_COLUMN_NAME\r\n                        })\r\n                    });\r\n                    return expandColumns\r\n                },\r\n                getBandColumnsCache: function() {\r\n                    if (!this._bandColumnsCache) {\r\n                        var columns = this._columns;\r\n                        var columnChildrenByIndex = {};\r\n                        var columnParentByIndex = {};\r\n                        var isPlain = true;\r\n                        columns.forEach(function(column) {\r\n                            var ownerBand = column.ownerBand;\r\n                            var parentIndex = (0, _type.isObject)(ownerBand) ? ownerBand.index : ownerBand;\r\n                            var parent = columns[parentIndex];\r\n                            if (column.hasColumns) {\r\n                                isPlain = false\r\n                            }\r\n                            if (column.colspan) {\r\n                                column.colspan = void 0\r\n                            }\r\n                            if (column.rowspan) {\r\n                                column.rowspan = void 0\r\n                            }\r\n                            if (parent) {\r\n                                columnParentByIndex[column.index] = parent\r\n                            } else {\r\n                                parentIndex = -1\r\n                            }\r\n                            columnChildrenByIndex[parentIndex] = columnChildrenByIndex[parentIndex] || [];\r\n                            columnChildrenByIndex[parentIndex].push(column)\r\n                        });\r\n                        this._bandColumnsCache = {\r\n                            isPlain: isPlain,\r\n                            columnChildrenByIndex: columnChildrenByIndex,\r\n                            columnParentByIndex: columnParentByIndex\r\n                        }\r\n                    }\r\n                    return this._bandColumnsCache\r\n                },\r\n                _isColumnVisible: function(column) {\r\n                    return column.visible && this.isParentColumnVisible(column.index)\r\n                },\r\n                _getVisibleColumnsCore: function() {\r\n                    var that = this;\r\n                    var i;\r\n                    var result = [];\r\n                    var rowspanGroupColumns = 0;\r\n                    var rowspanExpandColumns = 0;\r\n                    var rowCount = that.getRowCount();\r\n                    var positiveIndexedColumns = [];\r\n                    var negativeIndexedColumns = [];\r\n                    var notGroupedColumnsCount = 0;\r\n                    var isFixedToEnd;\r\n                    var rtlEnabled = that.option(\"rtlEnabled\");\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var expandColumns = mergeColumns(that, that.getExpandColumns(), that._columns);\r\n                    var columns = mergeColumns(that, that._columns, that._commandColumns, true);\r\n                    var columnDigitsCount = digitsCount(columns.length);\r\n                    processBandColumns(that, columns, bandColumnsCache);\r\n                    for (i = 0; i < rowCount; i++) {\r\n                        result[i] = [];\r\n                        negativeIndexedColumns[i] = [{}];\r\n                        positiveIndexedColumns[i] = [{}, {}, {}]\r\n                    }(0, _iterator.each)(columns, function() {\r\n                        var column = this;\r\n                        var visibleIndex = column.visibleIndex;\r\n                        var indexedColumns;\r\n                        var parentBandColumns = getParentBandColumns(column.index, bandColumnsCache.columnParentByIndex);\r\n                        var visible = that._isColumnVisible(column);\r\n                        if (visible && (!(0, _type.isDefined)(column.groupIndex) || column.showWhenGrouped)) {\r\n                            var rowIndex = parentBandColumns.length;\r\n                            if (visibleIndex < 0) {\r\n                                visibleIndex = -visibleIndex;\r\n                                indexedColumns = negativeIndexedColumns[rowIndex]\r\n                            } else {\r\n                                column.fixed = parentBandColumns.length ? parentBandColumns[0].fixed : column.fixed;\r\n                                column.fixedPosition = parentBandColumns.length ? parentBandColumns[0].fixedPosition : column.fixedPosition;\r\n                                if (column.fixed) {\r\n                                    isFixedToEnd = \"right\" === column.fixedPosition;\r\n                                    if (rtlEnabled && (!column.command || isCustomCommandColumn(that, column))) {\r\n                                        isFixedToEnd = !isFixedToEnd\r\n                                    }\r\n                                    if (isFixedToEnd) {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][2]\r\n                                    } else {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][0]\r\n                                    }\r\n                                } else {\r\n                                    indexedColumns = positiveIndexedColumns[rowIndex][1]\r\n                                }\r\n                            }\r\n                            if (parentBandColumns.length) {\r\n                                visibleIndex = numberToString(visibleIndex, columnDigitsCount);\r\n                                for (i = parentBandColumns.length - 1; i >= 0; i--) {\r\n                                    visibleIndex = numberToString(parentBandColumns[i].visibleIndex, columnDigitsCount) + visibleIndex\r\n                                }\r\n                            }\r\n                            indexedColumns[visibleIndex] = indexedColumns[visibleIndex] || [];\r\n                            indexedColumns[visibleIndex].push(column);\r\n                            notGroupedColumnsCount++\r\n                        }\r\n                    });\r\n                    (0, _iterator.each)(result, function(rowIndex) {\r\n                        (0, _object.orderEach)(negativeIndexedColumns[rowIndex], function(_, columns) {\r\n                            result[rowIndex].unshift.apply(result[rowIndex], columns)\r\n                        });\r\n                        var firstPositiveIndexColumn = result[rowIndex].length;\r\n                        (0, _iterator.each)(positiveIndexedColumns[rowIndex], function(index, columnsByFixing) {\r\n                            (0, _object.orderEach)(columnsByFixing, function(_, columnsByVisibleIndex) {\r\n                                result[rowIndex].push.apply(result[rowIndex], columnsByVisibleIndex)\r\n                            })\r\n                        });\r\n                        if (rowspanExpandColumns < rowIndex + 1) {\r\n                            rowspanExpandColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, \"detailExpand\", firstPositiveIndexColumn)\r\n                        }\r\n                        if (rowspanGroupColumns < rowIndex + 1) {\r\n                            rowspanGroupColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, GROUP_COMMAND_COLUMN_NAME, firstPositiveIndexColumn)\r\n                        }\r\n                    });\r\n                    result.push(getDataColumns(result));\r\n                    if (!notGroupedColumnsCount && that._columns.length) {\r\n                        result[rowCount].push({\r\n                            command: \"empty\"\r\n                        })\r\n                    }\r\n                    return result\r\n                },\r\n                getInvisibleColumns: function(columns, bandColumnIndex) {\r\n                    var that = this;\r\n                    var result = [];\r\n                    var hiddenColumnsByBand;\r\n                    columns = columns || that._columns;\r\n                    (0, _iterator.each)(columns, function(_, column) {\r\n                        if (column.ownerBand !== bandColumnIndex) {\r\n                            return\r\n                        }\r\n                        if (column.isBand) {\r\n                            if (!column.visible) {\r\n                                hiddenColumnsByBand = that.getChildrenByBandColumn(column.index)\r\n                            } else {\r\n                                hiddenColumnsByBand = that.getInvisibleColumns(that.getChildrenByBandColumn(column.index), column.index)\r\n                            }\r\n                            if (hiddenColumnsByBand.length) {\r\n                                result.push(column);\r\n                                result = result.concat(hiddenColumnsByBand)\r\n                            }\r\n                            return\r\n                        }\r\n                        if (!column.visible) {\r\n                            result.push(column)\r\n                        }\r\n                    });\r\n                    return result\r\n                },\r\n                getChooserColumns: function(getAllColumns) {\r\n                    var columns = getAllColumns ? this.getColumns() : this.getInvisibleColumns();\r\n                    return (0, _common.grep)(columns, function(column) {\r\n                        return column.showInColumnChooser\r\n                    })\r\n                },\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var that = this;\r\n                    var columnIndex = getColumnIndexByVisibleIndex(that, fromVisibleIndex, sourceLocation);\r\n                    var sourceColumn = that._columns[columnIndex];\r\n                    if (sourceColumn && (sourceColumn.allowReordering || sourceColumn.allowGrouping || sourceColumn.allowHiding)) {\r\n                        if (sourceLocation === targetLocation) {\r\n                            if (sourceLocation === COLUMN_CHOOSER_LOCATION) {\r\n                                return false\r\n                            }\r\n                            fromVisibleIndex = (0, _type.isObject)(fromVisibleIndex) ? fromVisibleIndex.columnIndex : fromVisibleIndex;\r\n                            toVisibleIndex = (0, _type.isObject)(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                            return fromVisibleIndex !== toVisibleIndex && fromVisibleIndex + 1 !== toVisibleIndex\r\n                        } else {\r\n                            if (sourceLocation === GROUP_LOCATION && targetLocation !== COLUMN_CHOOSER_LOCATION || targetLocation === GROUP_LOCATION) {\r\n                                return sourceColumn && sourceColumn.allowGrouping\r\n                            } else {\r\n                                if (sourceLocation === COLUMN_CHOOSER_LOCATION || targetLocation === COLUMN_CHOOSER_LOCATION) {\r\n                                    return sourceColumn && sourceColumn.allowHiding\r\n                                }\r\n                            }\r\n                        }\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                moveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var that = this;\r\n                    var options = {};\r\n                    var prevGroupIndex;\r\n                    var fromIndex = getColumnIndexByVisibleIndex(that, fromVisibleIndex, sourceLocation);\r\n                    var toIndex = getColumnIndexByVisibleIndex(that, toVisibleIndex, targetLocation);\r\n                    var targetGroupIndex;\r\n                    if (fromIndex >= 0) {\r\n                        var column = that._columns[fromIndex];\r\n                        toVisibleIndex = (0, _type.isObject)(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                        targetGroupIndex = toIndex >= 0 ? that._columns[toIndex].groupIndex : -1;\r\n                        if ((0, _type.isDefined)(column.groupIndex) && sourceLocation === GROUP_LOCATION) {\r\n                            if (targetGroupIndex > column.groupIndex) {\r\n                                targetGroupIndex--\r\n                            }\r\n                            if (targetLocation !== GROUP_LOCATION) {\r\n                                options.groupIndex = void 0\r\n                            } else {\r\n                                prevGroupIndex = column.groupIndex;\r\n                                delete column.groupIndex;\r\n                                updateColumnGroupIndexes(that)\r\n                            }\r\n                        }\r\n                        if (targetLocation === GROUP_LOCATION) {\r\n                            options.groupIndex = moveColumnToGroup(that, column, targetGroupIndex);\r\n                            column.groupIndex = prevGroupIndex\r\n                        } else {\r\n                            if (toVisibleIndex >= 0) {\r\n                                var targetColumn = that._columns[toIndex];\r\n                                if (!targetColumn || column.ownerBand !== targetColumn.ownerBand) {\r\n                                    options.visibleIndex = MAX_SAFE_INTEGER\r\n                                } else {\r\n                                    if (isColumnFixed(that, column) ^ isColumnFixed(that, targetColumn)) {\r\n                                        options.visibleIndex = MAX_SAFE_INTEGER\r\n                                    } else {\r\n                                        options.visibleIndex = targetColumn.visibleIndex\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        var isVisible = targetLocation !== COLUMN_CHOOSER_LOCATION;\r\n                        if (column.visible !== isVisible) {\r\n                            options.visible = isVisible\r\n                        }\r\n                        that.columnOption(column.index, options)\r\n                    }\r\n                },\r\n                changeSortOrder: function(columnIndex, sortOrder) {\r\n                    var that = this;\r\n                    var options = {};\r\n                    var sortingOptions = that.option(\"sorting\");\r\n                    var sortingMode = sortingOptions && sortingOptions.mode;\r\n                    var needResetSorting = \"single\" === sortingMode || !sortOrder;\r\n                    var allowSorting = \"single\" === sortingMode || \"multiple\" === sortingMode;\r\n                    var column = that._columns[columnIndex];\r\n                    var nextSortOrder = function(column) {\r\n                        if (\"ctrl\" === sortOrder) {\r\n                            if (!(\"sortOrder\" in column && \"sortIndex\" in column)) {\r\n                                return false\r\n                            }\r\n                            options.sortOrder = void 0;\r\n                            options.sortIndex = void 0\r\n                        } else {\r\n                            if ((0, _type.isDefined)(column.groupIndex) || (0, _type.isDefined)(column.sortIndex)) {\r\n                                options.sortOrder = \"desc\" === column.sortOrder ? \"asc\" : \"desc\"\r\n                            } else {\r\n                                options.sortOrder = \"asc\"\r\n                            }\r\n                        }\r\n                        return true\r\n                    };\r\n                    if (allowSorting && column && column.allowSorting) {\r\n                        if (needResetSorting && !(0, _type.isDefined)(column.groupIndex)) {\r\n                            (0, _iterator.each)(that._columns, function(index) {\r\n                                if (index !== columnIndex && this.sortOrder) {\r\n                                    if (!(0, _type.isDefined)(this.groupIndex)) {\r\n                                        delete this.sortOrder\r\n                                    }\r\n                                    delete this.sortIndex\r\n                                }\r\n                            })\r\n                        }\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            if (column.sortOrder !== sortOrder) {\r\n                                options.sortOrder = sortOrder\r\n                            }\r\n                        } else {\r\n                            if (\"none\" === sortOrder) {\r\n                                if (column.sortOrder) {\r\n                                    options.sortIndex = void 0;\r\n                                    options.sortOrder = void 0\r\n                                }\r\n                            } else {\r\n                                nextSortOrder(column)\r\n                            }\r\n                        }\r\n                    }\r\n                    that.columnOption(column.index, options)\r\n                },\r\n                getSortDataSourceParameters: function(useLocalSelector) {\r\n                    var that = this;\r\n                    var sortColumns = [];\r\n                    var sort = [];\r\n                    (0, _iterator.each)(that._columns, function() {\r\n                        if ((this.dataField || this.selector || this.calculateCellValue) && (0, _type.isDefined)(this.sortIndex) && !(0, _type.isDefined)(this.groupIndex)) {\r\n                            sortColumns[this.sortIndex] = this\r\n                        }\r\n                    });\r\n                    (0, _iterator.each)(sortColumns, function() {\r\n                        var sortOrder = this && this.sortOrder;\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            var sortItem = {\r\n                                selector: this.calculateSortValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue,\r\n                                desc: \"desc\" === this.sortOrder\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                sortItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            sort.push(sortItem)\r\n                        }\r\n                    });\r\n                    return sort.length > 0 ? sort : null\r\n                },\r\n                getGroupDataSourceParameters: function(useLocalSelector) {\r\n                    var group = [];\r\n                    (0, _iterator.each)(this.getGroupColumns(), function() {\r\n                        var selector = this.calculateGroupValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue;\r\n                        if (selector) {\r\n                            var groupItem = {\r\n                                selector: selector,\r\n                                desc: \"desc\" === this.sortOrder,\r\n                                isExpanded: !!this.autoExpandGroup\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                groupItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            group.push(groupItem)\r\n                        }\r\n                    });\r\n                    return group.length > 0 ? group : null\r\n                },\r\n                refresh: function(updateNewLookupsOnly) {\r\n                    var deferreds = [];\r\n                    (0, _iterator.each)(this._columns, function() {\r\n                        var lookup = this.lookup;\r\n                        if (lookup && !this.calculateDisplayValue) {\r\n                            if (updateNewLookupsOnly && lookup.valueMap) {\r\n                                return\r\n                            }\r\n                            if (lookup.update) {\r\n                                deferreds.push(lookup.update())\r\n                            }\r\n                        }\r\n                    });\r\n                    return _deferred.when.apply(_renderer.default, deferreds).done(resetColumnsCache.bind(null, this))\r\n                },\r\n                _updateColumnOptions: function(column, columnIndex) {\r\n                    column.selector = column.selector || function(data) {\r\n                        return column.calculateCellValue(data)\r\n                    };\r\n                    (0, _iterator.each)([\"calculateSortValue\", \"calculateGroupValue\", \"calculateDisplayValue\"], function(_, calculateCallbackName) {\r\n                        var calculateCallback = column[calculateCallbackName];\r\n                        if ((0, _type.isFunction)(calculateCallback)) {\r\n                            if (!calculateCallback.originalCallback) {\r\n                                var context = {\r\n                                    column: column\r\n                                };\r\n                                column[calculateCallbackName] = function(data) {\r\n                                    return calculateCallback.call(context.column, data)\r\n                                };\r\n                                column[calculateCallbackName].originalCallback = calculateCallback;\r\n                                column[calculateCallbackName].columnIndex = columnIndex;\r\n                                column[calculateCallbackName].context = context\r\n                            } else {\r\n                                column[calculateCallbackName].context.column = column\r\n                            }\r\n                        }\r\n                    });\r\n                    if ((0, _type.isString)(column.calculateDisplayValue)) {\r\n                        column.displayField = column.calculateDisplayValue;\r\n                        column.calculateDisplayValue = (0, _data.compileGetter)(column.displayField)\r\n                    }\r\n                    if (column.calculateDisplayValue) {\r\n                        column.displayValueMap = column.displayValueMap || {}\r\n                    }\r\n                    updateSerializers(column, column.dataType);\r\n                    var lookup = column.lookup;\r\n                    if (lookup) {\r\n                        updateSerializers(lookup, lookup.dataType)\r\n                    }\r\n                    var dataType = lookup ? lookup.dataType : column.dataType;\r\n                    if (dataType) {\r\n                        column.alignment = column.alignment || getAlignmentByDataType(dataType, this.option(\"rtlEnabled\"));\r\n                        column.format = column.format || _uiGrid_core2.default.getFormatByDataType(dataType);\r\n                        column.customizeText = column.customizeText || getCustomizeTextByDataType(dataType);\r\n                        column.defaultFilterOperations = column.defaultFilterOperations || !lookup && DATATYPE_OPERATIONS[dataType] || [];\r\n                        if (!(0, _type.isDefined)(column.filterOperations)) {\r\n                            setFilterOperationsAsDefaultValues(column)\r\n                        }\r\n                        column.defaultFilterOperation = column.filterOperations && column.filterOperations[0] || \"=\";\r\n                        column.showEditorAlways = (0, _type.isDefined)(column.showEditorAlways) ? column.showEditorAlways : \"boolean\" === dataType && !column.cellTemplate\r\n                    }\r\n                },\r\n                updateColumnDataTypes: function(dataSource) {\r\n                    var that = this;\r\n                    var dateSerializationFormat = that.option(\"dateSerializationFormat\");\r\n                    var firstItems = that._getFirstItems(dataSource);\r\n                    var isColumnDataTypesUpdated = false;\r\n                    (0, _iterator.each)(that._columns, function(index, column) {\r\n                        var i;\r\n                        var value;\r\n                        var dataType;\r\n                        var lookupDataType;\r\n                        var valueDataType;\r\n                        var lookup = column.lookup;\r\n                        if (_uiGrid_core2.default.isDateType(column.dataType) && void 0 === column.serializationFormat) {\r\n                            column.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (lookup && _uiGrid_core2.default.isDateType(lookup.dataType) && void 0 === column.serializationFormat) {\r\n                            lookup.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (column.calculateCellValue && firstItems.length) {\r\n                            if (!column.dataType || lookup && !lookup.dataType) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i]);\r\n                                    if (!column.dataType) {\r\n                                        valueDataType = getValueDataType(value);\r\n                                        dataType = dataType || valueDataType;\r\n                                        if (dataType && valueDataType && dataType !== valueDataType) {\r\n                                            dataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                    if (lookup && !lookup.dataType) {\r\n                                        valueDataType = getValueDataType(_uiGrid_core2.default.getDisplayValue(column, value, firstItems[i]));\r\n                                        lookupDataType = lookupDataType || valueDataType;\r\n                                        if (lookupDataType && valueDataType && lookupDataType !== valueDataType) {\r\n                                            lookupDataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (dataType || lookupDataType) {\r\n                                    if (dataType) {\r\n                                        column.dataType = dataType\r\n                                    }\r\n                                    if (lookup && lookupDataType) {\r\n                                        lookup.dataType = lookupDataType\r\n                                    }\r\n                                    isColumnDataTypesUpdated = true\r\n                                }\r\n                            }\r\n                            if (void 0 === column.serializationFormat || lookup && void 0 === lookup.serializationFormat) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i], true);\r\n                                    if (void 0 === column.serializationFormat) {\r\n                                        column.serializationFormat = getSerializationFormat(column.dataType, value)\r\n                                    }\r\n                                    if (lookup && void 0 === lookup.serializationFormat) {\r\n                                        lookup.serializationFormat = getSerializationFormat(lookup.dataType, lookup.calculateCellValue(value, true))\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        that._updateColumnOptions(column, index)\r\n                    });\r\n                    return isColumnDataTypesUpdated\r\n                },\r\n                _customizeColumns: function(columns) {\r\n                    var that = this;\r\n                    var customizeColumns = that.option(\"customizeColumns\");\r\n                    if (customizeColumns) {\r\n                        var hasOwnerBand = columns.some(function(column) {\r\n                            return (0, _type.isObject)(column.ownerBand)\r\n                        });\r\n                        if (hasOwnerBand) {\r\n                            updateIndexes(that)\r\n                        }\r\n                        customizeColumns(columns);\r\n                        assignColumns(that, createColumnsFromOptions(that, columns))\r\n                    }\r\n                },\r\n                updateColumns: function(dataSource, forceApplying) {\r\n                    var _this = this;\r\n                    if (!forceApplying) {\r\n                        this.updateSortingGrouping(dataSource)\r\n                    }\r\n                    if (!dataSource || dataSource.isLoaded()) {\r\n                        var sortParameters = dataSource ? dataSource.sort() || [] : this.getSortDataSourceParameters();\r\n                        var groupParameters = dataSource ? dataSource.group() || [] : this.getGroupDataSourceParameters();\r\n                        var filterParameters = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().filter;\r\n                        this._customizeColumns(this._columns);\r\n                        updateIndexes(this);\r\n                        var columns = this._columns;\r\n                        return (0, _deferred.when)(this.refresh(true)).always(function() {\r\n                            if (_this._columns !== columns) {\r\n                                return\r\n                            }\r\n                            _this._updateChanges(dataSource, {\r\n                                sorting: sortParameters,\r\n                                grouping: groupParameters,\r\n                                filtering: filterParameters\r\n                            });\r\n                            fireColumnsChanged(_this)\r\n                        })\r\n                    }\r\n                },\r\n                _updateChanges: function(dataSource, parameters) {\r\n                    if (dataSource) {\r\n                        this.updateColumnDataTypes(dataSource);\r\n                        this._dataSourceApplied = true\r\n                    }\r\n                    if (!_uiGrid_core2.default.equalSortParameters(parameters.sorting, this.getSortDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"sorting\")\r\n                    }\r\n                    if (!_uiGrid_core2.default.equalSortParameters(parameters.grouping, this.getGroupDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"grouping\")\r\n                    }\r\n                    var dataController = this.getController(\"data\");\r\n                    if (dataController && !_uiGrid_core2.default.equalFilterParameters(parameters.filtering, dataController.getCombinedFilter())) {\r\n                        updateColumnChanges(this, \"filtering\")\r\n                    }\r\n                    updateColumnChanges(this, \"columns\")\r\n                },\r\n                updateSortingGrouping: function(dataSource, fromDataSource) {\r\n                    var that = this;\r\n                    var sortParameters;\r\n                    var isColumnsChanged;\r\n                    var updateSortGroupParameterIndexes = function(columns, sortParameters, indexParameterName) {\r\n                        (0, _iterator.each)(columns, function(index, column) {\r\n                            delete column[indexParameterName];\r\n                            if (sortParameters) {\r\n                                for (var i = 0; i < sortParameters.length; i++) {\r\n                                    var selector = sortParameters[i].selector;\r\n                                    var isExpanded = sortParameters[i].isExpanded;\r\n                                    if (selector === column.dataField || selector === column.name || selector === column.selector || selector === column.calculateCellValue || selector === column.calculateGroupValue || selector === column.calculateDisplayValue) {\r\n                                        column.sortOrder = column.sortOrder || (sortParameters[i].desc ? \"desc\" : \"asc\");\r\n                                        if (void 0 !== isExpanded) {\r\n                                            column.autoExpandGroup = isExpanded\r\n                                        }\r\n                                        column[indexParameterName] = i;\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    };\r\n                    if (dataSource) {\r\n                        sortParameters = _uiGrid_core2.default.normalizeSortingInfo(dataSource.sort());\r\n                        var groupParameters = _uiGrid_core2.default.normalizeSortingInfo(dataSource.group());\r\n                        var columnsGroupParameters = that.getGroupDataSourceParameters();\r\n                        var columnsSortParameters = that.getSortDataSourceParameters();\r\n                        var groupingChanged = !_uiGrid_core2.default.equalSortParameters(groupParameters, columnsGroupParameters, true);\r\n                        var groupExpandingChanged = !groupingChanged && !_uiGrid_core2.default.equalSortParameters(groupParameters, columnsGroupParameters);\r\n                        if (!that._columns.length) {\r\n                            (0, _iterator.each)(groupParameters, function(index, group) {\r\n                                that._columns.push(group.selector)\r\n                            });\r\n                            (0, _iterator.each)(sortParameters, function(index, sort) {\r\n                                that._columns.push(sort.selector)\r\n                            });\r\n                            assignColumns(that, createColumnsFromOptions(that, that._columns))\r\n                        }\r\n                        if ((fromDataSource || !columnsGroupParameters && !that._hasUserState) && (groupingChanged || groupExpandingChanged)) {\r\n                            updateSortGroupParameterIndexes(that._columns, groupParameters, \"groupIndex\");\r\n                            if (fromDataSource) {\r\n                                groupingChanged && updateColumnChanges(that, \"grouping\");\r\n                                groupExpandingChanged && updateColumnChanges(that, \"groupExpanding\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if ((fromDataSource || !columnsSortParameters && !that._hasUserState) && !_uiGrid_core2.default.equalSortParameters(sortParameters, columnsSortParameters)) {\r\n                            updateSortGroupParameterIndexes(that._columns, sortParameters, \"sortIndex\");\r\n                            if (fromDataSource) {\r\n                                updateColumnChanges(that, \"sorting\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if (isColumnsChanged) {\r\n                            fireColumnsChanged(that)\r\n                        }\r\n                    }\r\n                },\r\n                updateFilter: function(filter, remoteFiltering, columnIndex, filterValue) {\r\n                    var that = this;\r\n                    if (!Array.isArray(filter)) {\r\n                        return filter\r\n                    }\r\n                    filter = (0, _extend.extend)([], filter);\r\n                    columnIndex = void 0 !== filter.columnIndex ? filter.columnIndex : columnIndex;\r\n                    filterValue = void 0 !== filter.filterValue ? filter.filterValue : filterValue;\r\n                    if ((0, _type.isString)(filter[0]) && \"!\" !== filter[0]) {\r\n                        var column = that.columnOption(filter[0]);\r\n                        if (remoteFiltering) {\r\n                            if ((0, _config.default)().forceIsoDateParsing && column && column.serializeValue && filter.length > 1) {\r\n                                filter[filter.length - 1] = column.serializeValue(filter[filter.length - 1], \"filter\")\r\n                            }\r\n                        } else {\r\n                            if (column && column.selector) {\r\n                                filter[0] = column.selector;\r\n                                filter[0].columnIndex = column.index\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if ((0, _type.isFunction)(filter[0])) {\r\n                            filter[0].columnIndex = columnIndex;\r\n                            filter[0].filterValue = filterValue\r\n                        }\r\n                    }\r\n                    for (var i = 0; i < filter.length; i++) {\r\n                        filter[i] = that.updateFilter(filter[i], remoteFiltering, columnIndex, filterValue)\r\n                    }\r\n                    return filter\r\n                },\r\n                columnCount: function() {\r\n                    return this._columns ? this._columns.length : 0\r\n                },\r\n                columnOption: function(identifier, option, value, notFireEvent) {\r\n                    var that = this;\r\n                    var columns = that._columns.concat(that._commandColumns);\r\n                    var column = findColumn(columns, identifier);\r\n                    if (column) {\r\n                        if (1 === arguments.length) {\r\n                            return (0, _extend.extend)({}, column)\r\n                        }\r\n                        if ((0, _type.isString)(option)) {\r\n                            if (2 === arguments.length) {\r\n                                return columnOptionCore(that, column, option)\r\n                            } else {\r\n                                columnOptionCore(that, column, option, value, notFireEvent)\r\n                            }\r\n                        } else {\r\n                            if ((0, _type.isObject)(option)) {\r\n                                (0, _iterator.each)(option, function(optionName, value) {\r\n                                    columnOptionCore(that, column, optionName, value, notFireEvent)\r\n                                })\r\n                            }\r\n                        }\r\n                        fireColumnsChanged(that)\r\n                    }\r\n                },\r\n                clearSorting: function() {\r\n                    var that = this;\r\n                    var columnCount = this.columnCount();\r\n                    that.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        that.columnOption(i, \"sortOrder\", void 0)\r\n                    }\r\n                    that.endUpdate()\r\n                },\r\n                clearGrouping: function() {\r\n                    var that = this;\r\n                    var columnCount = this.columnCount();\r\n                    that.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        that.columnOption(i, \"groupIndex\", void 0)\r\n                    }\r\n                    that.endUpdate()\r\n                },\r\n                getVisibleIndex: function(index, rowIndex) {\r\n                    var columns = this.getVisibleColumns(rowIndex);\r\n                    for (var i = columns.length - 1; i >= 0; i--) {\r\n                        if (columns[i].index === index) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return -1\r\n                },\r\n                getVisibleIndexByColumn: function(column, rowIndex) {\r\n                    var visibleColumns = this.getVisibleColumns(rowIndex);\r\n                    var visibleColumn = visibleColumns.filter(function(col) {\r\n                        return col.index === column.index && col.command === column.command\r\n                    })[0];\r\n                    return visibleColumns.indexOf(visibleColumn)\r\n                },\r\n                getVisibleColumnIndex: function(id, rowIndex) {\r\n                    var index = this.columnOption(id, \"index\");\r\n                    return this.getVisibleIndex(index, rowIndex)\r\n                },\r\n                addColumn: function(options) {\r\n                    var that = this;\r\n                    var column = createColumn(that, options);\r\n                    var index = that._columns.length;\r\n                    that._columns.push(column);\r\n                    if (column.isBand) {\r\n                        that._columns = createColumnsFromOptions(that, that._columns);\r\n                        column = that._columns[index]\r\n                    }\r\n                    column.added = options;\r\n                    updateIndexes(that, column);\r\n                    that.updateColumns(that._dataSource);\r\n                    that._checkColumns()\r\n                },\r\n                deleteColumn: function(id) {\r\n                    var that = this;\r\n                    var column = that.columnOption(id);\r\n                    if (column && column.index >= 0) {\r\n                        convertOwnerBandToColumnReference(that._columns);\r\n                        that._columns.splice(column.index, 1);\r\n                        if (column.isBand) {\r\n                            var childIndexes = that.getChildrenByBandColumn(column.index).map(function(column) {\r\n                                return column.index\r\n                            });\r\n                            that._columns = that._columns.filter(function(column) {\r\n                                return childIndexes.indexOf(column.index) < 0\r\n                            })\r\n                        }\r\n                        updateIndexes(that);\r\n                        that.updateColumns(that._dataSource)\r\n                    }\r\n                },\r\n                addCommandColumn: function(options) {\r\n                    var commandColumn = this._commandColumns.filter(function(column) {\r\n                        return column.command === options.command\r\n                    })[0];\r\n                    if (!commandColumn) {\r\n                        commandColumn = options;\r\n                        this._commandColumns.push(commandColumn)\r\n                    }\r\n                },\r\n                getUserState: function() {\r\n                    var columns = this._columns;\r\n                    var result = [];\r\n                    var i;\r\n\r\n                    function handleStateField(index, value) {\r\n                        if (void 0 !== columns[i][value]) {\r\n                            result[i][value] = columns[i][value]\r\n                        }\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        result[i] = {};\r\n                        (0, _iterator.each)(USER_STATE_FIELD_NAMES, handleStateField)\r\n                    }\r\n                    return result\r\n                },\r\n                setName: function(column) {\r\n                    column.name = column.name || column.dataField || column.type\r\n                },\r\n                setUserState: function(state) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var ignoreColumnOptionNames = that.option(\"stateStoring.ignoreColumnOptionNames\");\r\n                    null === state || void 0 === state ? void 0 : state.forEach(this.setName);\r\n                    if (!ignoreColumnOptionNames) {\r\n                        ignoreColumnOptionNames = [];\r\n                        var commonColumnSettings = that.getCommonSettings();\r\n                        if (!that.option(\"columnChooser.enabled\")) {\r\n                            ignoreColumnOptionNames.push(\"visible\")\r\n                        }\r\n                        if (\"none\" === that.option(\"sorting.mode\")) {\r\n                            ignoreColumnOptionNames.push(\"sortIndex\", \"sortOrder\")\r\n                        }\r\n                        if (!commonColumnSettings.allowGrouping) {\r\n                            ignoreColumnOptionNames.push(\"groupIndex\")\r\n                        }\r\n                        if (!commonColumnSettings.allowFixing) {\r\n                            ignoreColumnOptionNames.push(\"fixed\", \"fixedPosition\")\r\n                        }\r\n                        if (!commonColumnSettings.allowResizing) {\r\n                            ignoreColumnOptionNames.push(\"width\", \"visibleWidth\")\r\n                        }\r\n                        var isFilterPanelHidden = !that.option(\"filterPanel.visible\");\r\n                        if (!that.option(\"filterRow.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValue\", \"selectedFilterOperation\")\r\n                        }\r\n                        if (!that.option(\"headerFilter.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValues\", \"filterType\")\r\n                        }\r\n                    }\r\n                    that._columnsUserState = state;\r\n                    that._ignoreColumnOptionNames = ignoreColumnOptionNames;\r\n                    that._hasUserState = !!state;\r\n                    updateColumnChanges(that, \"filtering\");\r\n                    that.init();\r\n                    if (dataSource) {\r\n                        dataSource.sort(that.getSortDataSourceParameters());\r\n                        dataSource.group(that.getGroupDataSourceParameters())\r\n                    }\r\n                },\r\n                _checkColumns: function() {\r\n                    var usedNames = {};\r\n                    var hasEditableColumnWithoutName = false;\r\n                    var duplicatedNames = [];\r\n                    this._columns.forEach(function(column) {\r\n                        var _column$columns;\r\n                        var name = column.name;\r\n                        var isBand = null === (_column$columns = column.columns) || void 0 === _column$columns ? void 0 : _column$columns.length;\r\n                        var isEditable = column.allowEditing && (column.dataField || column.setCellValue) && !isBand;\r\n                        if (name) {\r\n                            if (usedNames[name]) {\r\n                                duplicatedNames.push('\"'.concat(name, '\"'))\r\n                            }\r\n                            usedNames[name] = true\r\n                        } else {\r\n                            if (isEditable) {\r\n                                hasEditableColumnWithoutName = true\r\n                            }\r\n                        }\r\n                    });\r\n                    if (duplicatedNames.length) {\r\n                        _ui.default.log(\"E1059\", duplicatedNames.join(\", \"))\r\n                    }\r\n                    if (hasEditableColumnWithoutName) {\r\n                        _ui.default.log(\"E1060\")\r\n                    }\r\n                },\r\n                _createCalculatedColumnOptions: function(columnOptions, bandColumn) {\r\n                    var calculatedColumnOptions = {};\r\n                    var dataField = columnOptions.dataField;\r\n                    if (Array.isArray(columnOptions.columns) && columnOptions.columns.length || columnOptions.isBand) {\r\n                        calculatedColumnOptions.isBand = true;\r\n                        dataField = null\r\n                    }\r\n                    if (dataField) {\r\n                        if ((0, _type.isString)(dataField)) {\r\n                            var getter = (0, _data.compileGetter)(dataField);\r\n                            calculatedColumnOptions = {\r\n                                caption: (0, _inflector.captionize)(dataField),\r\n                                calculateCellValue: function(data, skipDeserialization) {\r\n                                    var value = getter(data);\r\n                                    return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                                },\r\n                                setCellValue: defaultSetCellValue,\r\n                                parseValue: function(text) {\r\n                                    var column = this;\r\n                                    var result;\r\n                                    var parsedValue;\r\n                                    if (\"number\" === column.dataType) {\r\n                                        if ((0, _type.isString)(text) && column.format) {\r\n                                            parsedValue = _number.default.parse(text);\r\n                                            if ((0, _type.isNumeric)(parsedValue)) {\r\n                                                result = parsedValue\r\n                                            }\r\n                                        } else {\r\n                                            if ((0, _type.isDefined)(text) && (0, _type.isNumeric)(text)) {\r\n                                                result = Number(text)\r\n                                            }\r\n                                        }\r\n                                    } else {\r\n                                        if (\"boolean\" === column.dataType) {\r\n                                            if (text === column.trueText) {\r\n                                                result = true\r\n                                            } else {\r\n                                                if (text === column.falseText) {\r\n                                                    result = false\r\n                                                }\r\n                                            }\r\n                                        } else {\r\n                                            if (_uiGrid_core2.default.isDateType(column.dataType)) {\r\n                                                parsedValue = _date.default.parse(text, column.format);\r\n                                                if (parsedValue) {\r\n                                                    result = parsedValue\r\n                                                }\r\n                                            } else {\r\n                                                result = text\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    return result\r\n                                }\r\n                            }\r\n                        }\r\n                        calculatedColumnOptions.allowFiltering = true\r\n                    } else {\r\n                        calculatedColumnOptions.allowFiltering = !!columnOptions.calculateFilterExpression\r\n                    }\r\n                    calculatedColumnOptions.calculateFilterExpression = function() {\r\n                        return _filtering.default.defaultCalculateFilterExpression.apply(this, arguments)\r\n                    };\r\n                    calculatedColumnOptions.createFilterExpression = function(filterValue) {\r\n                        var result;\r\n                        if (this.calculateFilterExpression) {\r\n                            result = this.calculateFilterExpression.apply(this, arguments)\r\n                        }\r\n                        if ((0, _type.isFunction)(result)) {\r\n                            result = [result, \"=\", true]\r\n                        }\r\n                        if (result) {\r\n                            result.columnIndex = this.index;\r\n                            result.filterValue = filterValue\r\n                        }\r\n                        return result\r\n                    };\r\n                    if (!dataField || !(0, _type.isString)(dataField)) {\r\n                        (0, _extend.extend)(true, calculatedColumnOptions, {\r\n                            allowSorting: false,\r\n                            allowGrouping: false,\r\n                            calculateCellValue: function() {\r\n                                return null\r\n                            }\r\n                        })\r\n                    }\r\n                    if (bandColumn) {\r\n                        calculatedColumnOptions.allowFixing = false\r\n                    }\r\n                    if (columnOptions.dataType) {\r\n                        calculatedColumnOptions.userDataType = columnOptions.dataType\r\n                    }\r\n                    if (columnOptions.selectedFilterOperation && !(\"defaultSelectedFilterOperation\" in calculatedColumnOptions)) {\r\n                        calculatedColumnOptions.defaultSelectedFilterOperation = columnOptions.selectedFilterOperation\r\n                    }\r\n                    if (columnOptions.lookup) {\r\n                        calculatedColumnOptions.lookup = {\r\n                            calculateCellValue: function(value, skipDeserialization) {\r\n                                if (this.valueExpr) {\r\n                                    value = this.valueMap && this.valueMap[value]\r\n                                }\r\n                                return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value;\r\n                            },\r\n                            updateValueMap: function() {\r\n                                this.valueMap = {};\r\n                                if (this.items) {\r\n                                    var calculateValue = (0, _data.compileGetter)(this.valueExpr);\r\n                                    var calculateDisplayValue = (0, _data.compileGetter)(this.displayExpr);\r\n                                    for (var i = 0; i < this.items.length; i++) {\r\n                                        var item = this.items[i];\r\n                                        var displayValue = calculateDisplayValue(item);\r\n                                        this.valueMap[calculateValue(item)] = displayValue;\r\n                                        this.dataType = this.dataType || getValueDataType(displayValue)\r\n                                    }\r\n                                }\r\n                            },\r\n                            update: function() {\r\n                                var that = this;\r\n                                var dataSource = that.dataSource;\r\n                                if (dataSource) {\r\n                                    if ((0, _type.isFunction)(dataSource) && !_variable_wrapper.default.isWrapped(dataSource)) {\r\n                                        dataSource = dataSource({})\r\n                                    }\r\n                                    if ((0, _type.isPlainObject)(dataSource) || dataSource instanceof _abstract_store.default || Array.isArray(dataSource)) {\r\n                                        if (that.valueExpr) {\r\n                                            var dataSourceOptions = (0, _utils.normalizeDataSourceOptions)(dataSource);\r\n                                            dataSourceOptions.paginate = false;\r\n                                            dataSource = new _data_source.DataSource(dataSourceOptions);\r\n                                            return dataSource.load().done(function(data) {\r\n                                                that.items = data;\r\n                                                that.updateValueMap && that.updateValueMap()\r\n                                            })\r\n                                        }\r\n                                    } else {\r\n                                        _ui.default.log(\"E1016\")\r\n                                    }\r\n                                } else {\r\n                                    that.updateValueMap && that.updateValueMap()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    calculatedColumnOptions.resizedCallbacks = (0, _callbacks.default)();\r\n                    if (columnOptions.resized) {\r\n                        calculatedColumnOptions.resizedCallbacks.add(columnOptions.resized.bind(columnOptions))\r\n                    }(0, _iterator.each)(calculatedColumnOptions, function(optionName) {\r\n                        if ((0, _type.isFunction)(calculatedColumnOptions[optionName]) && 0 !== optionName.indexOf(\"default\")) {\r\n                            var defaultOptionName = \"default\" + optionName.charAt(0).toUpperCase() + optionName.substr(1);\r\n                            calculatedColumnOptions[defaultOptionName] = calculatedColumnOptions[optionName]\r\n                        }\r\n                    });\r\n                    return calculatedColumnOptions\r\n                },\r\n                getRowCount: function() {\r\n                    this._rowCount = this._rowCount || _getRowCount(this);\r\n                    return this._rowCount\r\n                },\r\n                getRowIndex: function(columnIndex, alwaysGetRowIndex) {\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    return column && (alwaysGetRowIndex || column.visible && !(column.command || (0, _type.isDefined)(column.groupIndex))) ? getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex).length : 0\r\n                },\r\n                getChildrenByBandColumn: function(bandColumnIndex, onlyVisibleDirectChildren) {\r\n                    var that = this;\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var result = _getChildrenByBandColumn(bandColumnIndex, bandColumnsCache.columnChildrenByIndex, !onlyVisibleDirectChildren);\r\n                    if (onlyVisibleDirectChildren) {\r\n                        return result.filter(function(column) {\r\n                            return column.visible && !column.command\r\n                        }).sort(function(column1, column2) {\r\n                            return column1.visibleIndex - column2.visibleIndex\r\n                        })\r\n                    }\r\n                    return result\r\n                },\r\n                isParentBandColumn: function(columnIndex, bandColumnIndex) {\r\n                    var result = false;\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var parentBandColumns = column && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    if (parentBandColumns) {\r\n                        (0, _iterator.each)(parentBandColumns, function(_, bandColumn) {\r\n                            if (bandColumn.index === bandColumnIndex) {\r\n                                result = true;\r\n                                return false\r\n                            }\r\n                        })\r\n                    }\r\n                    return result\r\n                },\r\n                isParentColumnVisible: function(columnIndex) {\r\n                    var result = true;\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var bandColumns = columnIndex >= 0 && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    bandColumns && (0, _iterator.each)(bandColumns, function(_, bandColumn) {\r\n                        result = result && bandColumn.visible;\r\n                        return result\r\n                    });\r\n                    return result\r\n                },\r\n                getColumnId: function(column) {\r\n                    if (column.command && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                        if (isCustomCommandColumn(this, column)) {\r\n                            return \"type:\" + column.type\r\n                        }\r\n                        return \"command:\" + column.command\r\n                    }\r\n                    return column.index\r\n                },\r\n                getCustomizeTextByDataType: getCustomizeTextByDataType,\r\n                getHeaderContentAlignment: function(columnAlignment) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        return \"left\" === columnAlignment ? \"right\" : \"left\"\r\n                    }\r\n                    return columnAlignment\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _drag = require(\"../../events/drag\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _swatch_container = _interopRequireDefault(require(\"../widget/swatch_container\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = _uiGrid_core.default.View.inherit({\r\n    _renderCore: function() {\r\n        this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide()\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                $element.height(position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        this.element().height(value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = _uiGrid_core.default.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide()\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if ((0, _type.isDefined)(value)) {\r\n                $element.height(value)\r\n            } else {\r\n                return $element.height()\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if ((0, _type.isDefined)(value)) {\r\n                $element.width(value)\r\n            } else {\r\n                return $element.width()\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                $element.height(position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var that = this;\r\n        var $element = this.element();\r\n        if ($element && !that._isShown) {\r\n            if (that._isTransparent) {\r\n                $element.removeClass(that.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = (0, _type.isDefined)(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add(function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        })\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var that = this;\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(that.element())\r\n        }\r\n        that.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var that = this;\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            _fx.default.stop($element, true);\r\n            _fx.default.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !that._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        that.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = _uiGrid_core.default.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var that = this;\r\n        var result;\r\n        (0, _iterator.each)(that._dragOptions.draggingPanels, function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if ((0, _type.isDefined)(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add(function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        })\r\n    },\r\n    dragHeader: function(options) {\r\n        var that = this;\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        that._isDragging = true;\r\n        that._dragOptions = options;\r\n        that._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: that._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = _dom_adapter.default.getDocument();\r\n        that._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        that._controller.drag(that._dropOptions);\r\n        that.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || columnElement.height()),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || columnElement.width()),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        that.element().appendTo(_swatch_container.default.getSwatchContainer(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = (0, _index.eventData)(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var that = this;\r\n        var targetDraggingPanel = that._getDraggingPanelByPos(eventData);\r\n        var controller = that._controller;\r\n        var params = that._dropOptions;\r\n        var dragOptions = that._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = that.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns((0, _extend.extend)({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && (0, _renderer.default)(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = that._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                that._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        _dom_adapter.default.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = _uiGrid_core.default.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var _that$_draggingHeader;\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = (0, _index.eventData)(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + that._$parentContainer.width())) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    var cell = $cell[0];\r\n                    if (cell) {\r\n                        var outerWidth = cell.getBoundingClientRect().width;\r\n                        that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        e.preventDefault()\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (!isDragging) {\r\n                if (that._isHeadersRowArea(eventData.y)) {\r\n                    if (that._previousParentOffset) {\r\n                        if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                            that.pointsByColumns(null)\r\n                        }\r\n                    }\r\n                    that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n                    that._previousParentOffset = parentOffset;\r\n                    that._isReadyResizing = false;\r\n                    if (that._targetPoint) {\r\n                        that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                        that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        that._isReadyResizing = true;\r\n                        e.preventDefault()\r\n                    } else {\r\n                        that._columnsSeparatorView.changeCursor();\r\n                        that._columnsSeparatorView.moveByX(null)\r\n                    }\r\n                } else {\r\n                    that.pointsByColumns(null);\r\n                    that._isReadyResizing = false;\r\n                    that._columnsSeparatorView.changeCursor();\r\n                    that._columnsSeparatorView.moveByX(null)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var that = this;\r\n        var currentColumnIndex = that._targetPoint.columnIndex;\r\n        var nextColumnIndex = that._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = that._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = that._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        that._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? (0, _position.getBoundingRect)(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? (0, _position.getBoundingRect)(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = (0, _index.eventData)(e);\r\n        if ((0, _index.isTouchEvent)(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = scrollable.$content().width() - scrollable._container().width() - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = _uiGrid_core2.default.getPointsByColumns(cells, function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            })\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && _events_engine.default.off(_dom_adapter.default.getDocument(), (0, _index.addNamespace)(_pointer.default.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && _events_engine.default.off(this._$parentContainer, (0, _index.addNamespace)(_pointer.default.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            _events_engine.default.off(this._columnsSeparatorView.element(), (0, _index.addNamespace)(_pointer.default.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            _events_engine.default.off(_dom_adapter.default.getDocument(), (0, _index.addNamespace)(_pointer.default.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        _events_engine.default.on(_dom_adapter.default.getDocument(), (0, _index.addNamespace)(_pointer.default.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        _events_engine.default.on(this._$parentContainer, (0, _index.addNamespace)(_pointer.default.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        _events_engine.default.on(this._columnsSeparatorView.element(), (0, _index.addNamespace)(_pointer.default.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        _events_engine.default.on(_dom_adapter.default.getDocument(), (0, _index.addNamespace)(_pointer.default.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate = false;\r\n        var nextCellWidth;\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var minWidth;\r\n        var nextColumn;\r\n        var cellWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n\r\n        function isPercentWidth(width) {\r\n            return (0, _type.isString)(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    column && columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    column && columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    column && columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    column && columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n\r\n        function correctContentWidth(contentWidth, visibleColumns) {\r\n            var allColumnsHaveWidth = visibleColumns.every(function(column) {\r\n                return column.width\r\n            });\r\n            if (allColumnsHaveWidth) {\r\n                var totalPercent = visibleColumns.reduce(function(sum, column) {\r\n                    if (isPercentWidth(column.width)) {\r\n                        sum += parseFloat(column.width)\r\n                    }\r\n                    return sum\r\n                }, 0);\r\n                if (totalPercent > 100) {\r\n                    contentWidth = contentWidth / totalPercent * 100\r\n                }\r\n            }\r\n            return contentWidth\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        cellWidth = resizingInfo.currentColumnWidth + deltaX;\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n        needUpdate = cellWidth >= minWidth;\r\n        if (isNextColumnMode) {\r\n            nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\r\n            nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n            minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n            needUpdate = needUpdate && nextCellWidth >= minWidth\r\n        }\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = correctContentWidth(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce(function(totalWidth, width) {\r\n                    return totalWidth + width\r\n                }, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = _uiGrid_core2.default.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = scrollable.$content().width() - scrollable._container().width() - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        });\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        });\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        })\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = _uiGrid_core.default.ViewController.inherit({\r\n    update: function(top) {\r\n        var that = this;\r\n        var params = {};\r\n        var $element = that._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = (0, _type.isDefined)(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = that._columnHeadersView ? that._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = that._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = that._rowsView ? that._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = that.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        that.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add(function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        })\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = (0, _callbacks.default)()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = _uiGrid_core.default.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return _uiGrid_core2.default.getPointsByColumns(options.columnElements, function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }, options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        (0, _iterator.each)(draggingPanels, function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = (0, _renderer.default)(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        _events_engine.default.on($columnElement, (0, _index.addNamespace)(_drag.start, MODULE_NAMESPACE), that.createAction(function(args) {\r\n                            var e = args.event;\r\n                            var eventData = (0, _index.eventData)(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - (0, _renderer.default)(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - (0, _renderer.default)(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        }));\r\n                        _events_engine.default.on($columnElement, (0, _index.addNamespace)(_drag.move, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        _events_engine.default.on($columnElement, (0, _index.addNamespace)(_drag.end, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        (0, _iterator.each)(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        (0, _iterator.each)(draggingPanels, function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                (0, _iterator.each)(columnElements, function(index, columnElement) {\r\n                    var $columnElement = (0, _renderer.default)(columnElement);\r\n                    _events_engine.default.off($columnElement, (0, _index.addNamespace)(_drag.start, MODULE_NAMESPACE));\r\n                    _events_engine.default.off($columnElement, (0,\r\n                        _index.addNamespace)(_drag.move, MODULE_NAMESPACE));\r\n                    _events_engine.default.off($columnElement, (0, _index.addNamespace)(_drag.end, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = (0, _type.isObject)(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        var showSeparator = function() {\r\n            if (that._animationColumnIndex !== targetColumnIndex) {\r\n                that.hideSeparators();\r\n                separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                that._animationColumnIndex = targetColumnIndex;\r\n                separator.show(targetLocation)\r\n            }\r\n        };\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    showSeparator()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nexports.ColumnsView = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _element_data = require(\"../../core/element_data\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _double_click = require(\"../../events/double_click\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _style = require(\"../../core/utils/style\");\r\nvar _element = require(\"../../core/element\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar iteratorUtils = _interopRequireWildcard(require(\"../../core/utils/iterator\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _uiGrid_core3 = _interopRequireDefault(require(\"./ui.grid_core.column_state_mixin\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cacheBabelInterop = new WeakMap;\r\n    var cacheNodeInterop = new WeakMap;\r\n    return (_getRequireWildcardCache = function(nodeInterop) {\r\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop\r\n    })(nodeInterop)\r\n}\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) {\r\n    if (!nodeInterop && obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache(nodeInterop);\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (\"default\" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar TABLE_CLASS = \"table\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar appendElementTemplate = {\r\n    render: function(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nvar subscribeToRowEvents = function(that, $table) {\r\n    var touchTarget;\r\n    var touchCurrentTarget;\r\n    var timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout(function() {\r\n            touchTarget = touchCurrentTarget = null\r\n        }, timeout)\r\n    }\r\n    _events_engine.default.on($table, \"touchstart touchend\", \".dx-row\", function(e) {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    });\r\n    _events_engine.default.on($table, [_click.name, _double_click.name, _pointer.default.down].join(\" \"), \".dx-row\", {\r\n        useNative: that._isNativeClick()\r\n    }, that.createAction(function(e) {\r\n        var event = e.event;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!(0, _renderer.default)(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = (0, _element.getPublicElement)((0, _renderer.default)(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === _pointer.default.down) {\r\n                    that._rowPointerDown(e)\r\n                } else {\r\n                    if (event.type === _click.name) {\r\n                        that._rowClick(e)\r\n                    } else {\r\n                        that._rowDblClick(e)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }))\r\n};\r\nvar getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return (0, _type.isNumeric)(width) ? width + \"px\" : width\r\n};\r\nvar setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nvar copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    var oldAttributes = element.attributes;\r\n    var newAttributes = newElement.attributes;\r\n    var i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        var name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nvar ColumnsView = _uiGrid_core.default.View.inherit(_uiGrid_core3.default).inherit({\r\n    _createScrollableOptions: function() {\r\n        var that = this;\r\n        var scrollingOptions = that.option(\"scrolling\");\r\n        var useNativeScrolling = that.option(\"scrolling.useNative\");\r\n        var options = (0, _extend.extend)({\r\n            pushBackValue: 0\r\n        }, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    },\r\n    _updateCell: function($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var column = options.column;\r\n        var alignment = column.alignment || (0, _position.getDefaultAlignment)(this.option(\"rtlEnabled\"));\r\n        var cell = _dom_adapter.default.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        var $cell = (0, _renderer.default)(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else {\r\n            if (!column.isBand && \"auto\" !== column.visibleWidth && !this.option(\"legacyRendering\") && this.option(\"columnAutoWidth\")) {\r\n                if (column.width || column.minWidth) {\r\n                    cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n                }\r\n                if (column.width) {\r\n                    setCellWidth(cell, column, getWidthStyle(column.width))\r\n                }\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _createRow: function(rowObject) {\r\n        var $element = (0, _renderer.default)(\"<tr>\").addClass(ROW_CLASS);\r\n        this.setAria(\"role\", \"row\", $element);\r\n        return $element\r\n    },\r\n    _isAltRow: function(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    },\r\n    _createTable: function(columns, isAppend) {\r\n        var that = this;\r\n        var $table = (0, _renderer.default)(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\r\n        if (columns && !isAppend) {\r\n            $table.append(that._createColGroup(columns));\r\n            if (_browser.default.safari) {\r\n                $table.append((0, _renderer.default)(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            that.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            that.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", (0, _renderer.default)(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (_browser.default.mozilla) {\r\n            _events_engine.default.on($table, \"mousedown\", \"td\", function(e) {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            })\r\n        }\r\n        if (that.option(\"cellHintEnabled\")) {\r\n            _events_engine.default.on($table, \"mousemove\", \".dx-row > td\", this.createAction(function(args) {\r\n                var e = args.event;\r\n                var $element = (0, _renderer.default)(e.target);\r\n                var $cell = (0, _renderer.default)(e.currentTarget);\r\n                var $row = $cell.parent();\r\n                var isDataRow = $row.hasClass(\"dx-data-row\");\r\n                var isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\r\n                var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                var visibleColumns = that._columnsController.getVisibleColumns();\r\n                var rowOptions = $row.data(\"options\");\r\n                var columnIndex = $cell.index();\r\n                var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                var msieCorrection = _browser.default.msie ? 1 : 0;\r\n                if (!isMasterDetailRow && !isFilterRow && (!isDataRow || isDataRow && column && !column.cellTemplate) && (!isHeaderRow || isHeaderRow && column && !column.headerCellTemplate) && (!isGroupRow || isGroupRow && column && (void 0 === column.groupIndex || !column.groupCellTemplate))) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    var difference = $element[0].scrollWidth - $element[0].clientWidth - msieCorrection;\r\n                    if (difference > 0 && !(0, _type.isDefined)($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            }))\r\n        }\r\n        var getOptions = function(event) {\r\n            var $cell = (0, _renderer.default)(event.currentTarget);\r\n            var $fieldItemContent = (0, _renderer.default)(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\r\n            var $row = $cell.parent();\r\n            var rowOptions = $row.data(\"options\");\r\n            var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            var resultOptions = (0, _extend.extend)({}, options, {\r\n                cellElement: (0, _element.getPublicElement)($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            resultOptions.rowIndex = that.getRowIndex($row);\r\n            if ($fieldItemContent.length) {\r\n                var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        _events_engine.default.on($table, \"mouseover\", \".dx-row > td\", function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        });\r\n        _events_engine.default.on($table, \"mouseout\", \".dx-row > td\", function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        });\r\n        _events_engine.default.on($table, _click.name, \".dx-row > td\", function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellClick\", options)\r\n        });\r\n        _events_engine.default.on($table, _double_click.name, \".dx-row > td\", function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellDblClick\", options)\r\n        });\r\n        subscribeToRowEvents(that, $table);\r\n        return $table\r\n    },\r\n    _isNativeClick: _common.noop,\r\n    _rowPointerDown: _common.noop,\r\n    _rowClick: _common.noop,\r\n    _rowDblClick: _common.noop,\r\n    _createColGroup: function(columns) {\r\n        var colgroupElement = (0, _renderer.default)(\"<colgroup>\");\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var colspan = columns[i].colspan || 1;\r\n            for (var j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    },\r\n    _createCol: function(column) {\r\n        var width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = HIDDEN_COLUMNS_WIDTH\r\n        }\r\n        var col = (0, _renderer.default)(\"<col>\");\r\n        (0, _style.setWidth)(col, width);\r\n        return col\r\n    },\r\n    renderDelayedTemplates: function() {\r\n        var delayedTemplates = this._delayedTemplates;\r\n        var syncTemplates = delayedTemplates.filter(function(template) {\r\n            return !template.async\r\n        });\r\n        var asyncTemplates = delayedTemplates.filter(function(template) {\r\n            return template.async\r\n        });\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    },\r\n    _renderDelayedTemplatesCoreAsync: function(templates) {\r\n        var that = this;\r\n        if (templates.length) {\r\n            (0, _window.getWindow)().setTimeout(function() {\r\n                that._renderDelayedTemplatesCore(templates, true)\r\n            })\r\n        }\r\n    },\r\n    _renderDelayedTemplatesCore: function(templates, isAsync) {\r\n        var date = new Date;\r\n        while (templates.length) {\r\n            var templateParameters = templates.shift();\r\n            var options = templateParameters.options;\r\n            var doc = _dom_adapter.default.getDocument();\r\n            if (!isAsync || (0, _renderer.default)(options.container).closest(doc).length) {\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    },\r\n    _processTemplate: function(template) {\r\n        var that = this;\r\n        var renderingTemplate;\r\n        if (template && template.render && !(0, _type.isRenderer)(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render: function(options) {\r\n                    template.render(options.container, options.model);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            if ((0, _type.isFunction)(template)) {\r\n                renderingTemplate = {\r\n                    render: function(options) {\r\n                        var renderedTemplate = template((0, _element.getPublicElement)(options.container), options.model);\r\n                        if (renderedTemplate && (renderedTemplate.nodeType || (0, _type.isRenderer)(renderedTemplate))) {\r\n                            options.container.append(renderedTemplate)\r\n                        }\r\n                        options.deferred && options.deferred.resolve()\r\n                    }\r\n                }\r\n            } else {\r\n                var templateID = (0, _type.isString)(template) ? template : (0, _renderer.default)(template).attr(\"id\");\r\n                if (!templateID) {\r\n                    renderingTemplate = that.getTemplate(template)\r\n                } else {\r\n                    if (!that._templatesCache[templateID]) {\r\n                        that._templatesCache[templateID] = that.getTemplate(template)\r\n                    }\r\n                    renderingTemplate = that._templatesCache[templateID]\r\n                }\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    },\r\n    renderTemplate: function(container, template, options, allowRenderToDetachedContainer) {\r\n        var that = this;\r\n        var renderingTemplate = that._processTemplate(template, options);\r\n        var column = options.column;\r\n        var isDataRow = \"data\" === options.rowType;\r\n        var templateDeferred = new _deferred.Deferred;\r\n        var templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: function() {\r\n                templateDeferred.resolve()\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = that.component;\r\n            var async = column && (column.renderAsync && isDataRow || that.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                that._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise()\r\n    },\r\n    _getBodies: function(tableElement) {\r\n        return (0, _renderer.default)(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    },\r\n    _wrapRowIfNeed: function($table, $row) {\r\n        var $tBodies = this.option(\"rowTemplate\") && this._getBodies(this._tableElement || $table);\r\n        if ($tBodies && $tBodies.filter(\".\" + ROW_CLASS).length) {\r\n            var $tbody = (0, _renderer.default)(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    },\r\n    _appendRow: function($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    _renderCore: function(e) {\r\n        var $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        var changeType = options.change && options.change.changeType;\r\n        var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    },\r\n    _renderRows: function($table, options) {\r\n        var that = this;\r\n        var rows = that._getRows(options.change);\r\n        var columnIndices = options.change && options.change.columnIndices || [];\r\n        var changeTypes = options.change && options.change.changeTypes || [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            that._renderRow($table, (0, _extend.extend)({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    },\r\n    _renderRow: function($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        var $row = this._createRow(options.row);\r\n        var $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        var rowOptions = (0, _extend.extend)({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    },\r\n    _needRenderCell: function(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    },\r\n    _renderCells: function($row, options) {\r\n        var that = this;\r\n        var columnIndex = 0;\r\n        var row = options.row;\r\n        var columns = options.columns;\r\n        for (var i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                that._renderCell($row, (0, _extend.extend)({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    _updateCells: function($rowElement, $newRowElement, columnIndices) {\r\n        var $cells = $rowElement.children();\r\n        var $newCells = $newRowElement.children();\r\n        var highlightChanges = this.option(\"highlightChanges\");\r\n        var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\r\n        columnIndices.forEach(function(columnIndex, index) {\r\n            var $cell = $cells.eq(columnIndex);\r\n            var $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        });\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    },\r\n    _setCellAriaAttributes: function($cell, cellOptions) {\r\n        if (\"freeSpace\" !== cellOptions.rowType) {\r\n            this.setAria(\"selected\", false, $cell);\r\n            this.setAria(\"role\", \"gridcell\", $cell);\r\n            var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n            var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\r\n            this.setAria(\"colindex\", ariaColIndex, $cell)\r\n        }\r\n    },\r\n    _renderCell: function($row, options) {\r\n        var cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                options.row.cells[cellOptions.columnIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        var $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions);\r\n        this._renderCellContent($cell, cellOptions);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var _this = this;\r\n        var template = this._getCellTemplate(options);\r\n        (0, _deferred.when)(!template || this.renderTemplate($cell, template, options)).done(function() {\r\n            _this._updateCell($cell, options)\r\n        })\r\n    },\r\n    _getCellTemplate: function() {},\r\n    _getRows: function() {\r\n        return []\r\n    },\r\n    _getCellOptions: function(options) {\r\n        var cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    },\r\n    _addWatchMethod: function(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        var watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateFunc) {\r\n            var oldValue = getter(source.data);\r\n            var watcher = function(row) {\r\n                var newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateFunc(newValue, row)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            var stopWatch = function() {\r\n                var index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            };\r\n            return stopWatch\r\n        };\r\n        source.update = source.update || function(row, keepRow) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row && !keepRow) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach(function(watcher) {\r\n                watcher(row)\r\n            })\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    },\r\n    _cellPrepared: function(cell, options) {\r\n        options.cellElement = (0, _element.getPublicElement)((0, _renderer.default)(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    },\r\n    _rowPrepared: function($row, options) {\r\n        (0, _element_data.data)($row.get(0), \"options\", options);\r\n        options.rowElement = (0, _element.getPublicElement)($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (_uiGrid_core2.default.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var widths = iteratorUtils.map(visibleColumns, function(column) {\r\n                var width = column.visibleWidth || column.width;\r\n                return (0, _type.isDefined)(width) ? width : \"auto\"\r\n            });\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    },\r\n    getTableElements: function() {\r\n        return this._tableElement || (0, _renderer.default)()\r\n    },\r\n    getTableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        this._tableElement = tableElement\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true\r\n        }\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._scrollLeft = -1;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._delayedTemplates = [];\r\n        that._templatesCache = {};\r\n        that.createAction(\"onCellClick\");\r\n        that.createAction(\"onRowClick\");\r\n        that.createAction(\"onCellDblClick\");\r\n        that.createAction(\"onRowDblClick\");\r\n        that.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        that.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        that.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: function(e) {\r\n                that._afterRowPrepared(e)\r\n            }\r\n        });\r\n        that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\r\n        that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that))\r\n    },\r\n    _afterRowPrepared: _common.noop,\r\n    _handleDataChanged: function() {},\r\n    callbackNames: function() {\r\n        return [\"scrollChanged\"]\r\n    },\r\n    _updateScrollLeftPosition: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    scrollTo: function(pos) {\r\n        var $element = this.element();\r\n        var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ((0, _type.isDefined)(pos) && (0, _type.isDefined)(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    },\r\n    _wrapTableInScrollContainer: function($table) {\r\n        var _this2 = this;\r\n        var $scrollContainer = (0, _renderer.default)(\"<div>\");\r\n        _events_engine.default.on($scrollContainer, \"scroll\", function() {\r\n            var scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== _this2._scrollLeft) {\r\n                _this2.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, _this2.name)\r\n            }\r\n        });\r\n        $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    },\r\n    _updateContent: function($newTableElement) {\r\n        this.setTableElement($newTableElement);\r\n        this._wrapTableInScrollContainer($newTableElement)\r\n    },\r\n    _findContentElement: _common.noop,\r\n    _getWidths: function($cellElements) {\r\n        var result = [];\r\n        var legacyRendering = this.option(\"legacyRendering\");\r\n        var width;\r\n        if ($cellElements) {\r\n            iteratorUtils.each($cellElements, function(index, item) {\r\n                width = item.offsetWidth;\r\n                if (item.getBoundingClientRect) {\r\n                    var clientRect = (0, _position.getBoundingRect)(item);\r\n                    if (clientRect.width > width - 1) {\r\n                        width = legacyRendering ? Math.ceil(clientRect.width) : clientRect.width\r\n                    }\r\n                }\r\n                result.push(width)\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    getColumnWidths: function($tableElement) {\r\n        var that = this;\r\n        var result = [];\r\n        var $rows;\r\n        var $cells;\r\n        (this.option(\"forceApplyBindings\") || _common.noop)();\r\n        $tableElement = $tableElement || that.getTableElement();\r\n        if ($tableElement) {\r\n            $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                var $row = $rows.eq(i);\r\n                var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && isRowVisible) {\r\n                    $cells = $row.children(\"td\");\r\n                    break\r\n                }\r\n            }\r\n            result = that._getWidths($cells)\r\n        }\r\n        return result\r\n    },\r\n    getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    },\r\n    setColumnWidths: function(_ref) {\r\n        var widths = _ref.widths,\r\n            $tableElement = _ref.$tableElement,\r\n            columns = _ref.columns,\r\n            fixed = _ref.fixed;\r\n        var $cols;\r\n        var width;\r\n        var minWidth;\r\n        var columnIndex;\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        var legacyRendering = this.option(\"legacyRendering\");\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement && $tableElement.length && widths) {\r\n            columnIndex = 0;\r\n            $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n            (0, _style.setWidth)($cols, \"auto\");\r\n            columns = columns || this.getColumns(null, $tableElement);\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (!legacyRendering && columnAutoWidth && !fixed) {\r\n                    width = columns[i].width;\r\n                    if (width && !columns[i].command) {\r\n                        width = columns[i].visibleWidth || width;\r\n                        width = getWidthStyle(width);\r\n                        minWidth = getWidthStyle(columns[i].minWidth || width);\r\n                        var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + GROUP_ROW_CLASS).not(\".\" + DETAIL_ROW_CLASS);\r\n                        for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                            var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\r\n                            var cell = $rows[rowIndex].cells[visibleIndex];\r\n                            if (cell) {\r\n                                setCellWidth(cell, columns[i], width);\r\n                                cell.style.minWidth = minWidth\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (columns[i].colspan) {\r\n                    columnIndex += columns[i].colspan;\r\n                    continue\r\n                }\r\n                width = widths[columnIndex];\r\n                if (\"adaptiveHidden\" === width) {\r\n                    width = HIDDEN_COLUMNS_WIDTH\r\n                }\r\n                if (\"number\" === typeof width) {\r\n                    width = width.toFixed(3) + \"px\"\r\n                }(0, _style.setWidth)($cols.eq(columnIndex), (0, _type.isDefined)(width) ? width : \"auto\");\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    getCellElements: function(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    },\r\n    _getCellElement: function(rowIndex, columnIdentifier) {\r\n        var that = this;\r\n        var $cell;\r\n        var $cells = that.getCellElements(rowIndex);\r\n        var columnVisibleIndex = that._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if ($cells.length && columnVisibleIndex >= 0) {\r\n            $cell = $cells.eq(columnVisibleIndex)\r\n        }\r\n        if ($cell && $cell.length) {\r\n            return $cell\r\n        }\r\n    },\r\n    _getRowElement: function(rowIndex) {\r\n        var that = this;\r\n        var $rowElement = (0, _renderer.default)();\r\n        var $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, function(_, tableElement) {\r\n            $rowElement = $rowElement.add(that._getRowElements((0, _renderer.default)(tableElement)).eq(rowIndex))\r\n        });\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n    },\r\n    getCellElement: function(rowIndex, columnIdentifier) {\r\n        return (0, _element.getPublicElement)(this._getCellElement(rowIndex, columnIdentifier))\r\n    },\r\n    getRowElement: function(rowIndex) {\r\n        var $rows = this._getRowElement(rowIndex);\r\n        var elements = [];\r\n        if ($rows && !(0, _element.getPublicElement)($rows).get) {\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    },\r\n    _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n        if ((0, _type.isString)(columnIdentifier)) {\r\n            var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    },\r\n    getColumnElements: function() {},\r\n    getColumns: function(rowIndex) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    },\r\n    getCell: function(cellPosition, rows) {\r\n        var $rows = rows || this._getRowElements();\r\n        var $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = this.getCellElements(cellPosition.rowIndex);\r\n            if ($cells && $cells.length > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    },\r\n    getRowsCount: function() {\r\n        var tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    _getRowElementsCore: function(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            var tBodies = this.option(\"rowTemplate\") && tableElement.find(\"> tbody.\" + ROW_CLASS);\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS)\r\n        }\r\n        return (0, _renderer.default)()\r\n    },\r\n    _getRowElements: function(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        return this._getRowElements().index($row)\r\n    },\r\n    getBoundingRect: function() {},\r\n    getName: function() {},\r\n    setScrollerSpacing: function(width) {\r\n        var that = this;\r\n        var $element = that.element();\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    },\r\n    isScrollbarVisible: function(isHorizontal) {\r\n        var $element = this.element();\r\n        var $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? $tableElement.outerWidth() - $element.width() > 0 : $tableElement.outerHeight() - $element.height() > 0\r\n        }\r\n        return false\r\n    }\r\n});\r\nexports.ColumnsView = ColumnsView;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.context_menu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _element = require(\"../../core/element\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _context_menu = _interopRequireDefault(require(\"../context_menu\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CONTEXT_MENU = \"dx-context-menu\";\r\nvar viewName = {\r\n    columnHeadersView: \"header\",\r\n    rowsView: \"content\",\r\n    footerView: \"footer\",\r\n    headerPanel: \"headerPanel\"\r\n};\r\nvar VIEW_NAMES = [\"columnHeadersView\", \"rowsView\", \"footerView\", \"headerPanel\"];\r\nvar ContextMenuController = _uiGrid_core.default.ViewController.inherit({\r\n    init: function() {\r\n        this.createAction(\"onContextMenuPreparing\")\r\n    },\r\n    getContextMenuItems: function(dxEvent) {\r\n        if (!dxEvent) {\r\n            return false\r\n        }\r\n        var that = this;\r\n        var $targetElement = (0, _renderer.default)(dxEvent.target);\r\n        var $element;\r\n        var $targetRowElement;\r\n        var $targetCellElement;\r\n        var menuItems;\r\n        (0, _iterator.each)(VIEW_NAMES, function() {\r\n            var view = that.getView(this);\r\n            $element = view && view.element();\r\n            if ($element && ($element.is($targetElement) || $element.find($targetElement).length)) {\r\n                $targetCellElement = $targetElement.closest(\".dx-row > td, .dx-row > tr\");\r\n                $targetRowElement = $targetCellElement.parent();\r\n                var rowIndex = view.getRowIndex($targetRowElement);\r\n                var columnIndex = $targetCellElement[0] && $targetCellElement[0].cellIndex;\r\n                var rowOptions = $targetRowElement.data(\"options\");\r\n                var options = {\r\n                    event: dxEvent,\r\n                    targetElement: (0, _element.getPublicElement)($targetElement),\r\n                    target: viewName[this],\r\n                    rowIndex: rowIndex,\r\n                    row: view._getRows()[rowIndex],\r\n                    columnIndex: columnIndex,\r\n                    column: rowOptions && rowOptions.cells[columnIndex].column\r\n                };\r\n                options.items = view.getContextMenuItems && view.getContextMenuItems(options);\r\n                that.executeAction(\"onContextMenuPreparing\", options);\r\n                that._contextMenuPrepared(options);\r\n                menuItems = options.items;\r\n                if (menuItems) {\r\n                    return false\r\n                }\r\n            }\r\n        });\r\n        return menuItems\r\n    },\r\n    _contextMenuPrepared: _common.noop\r\n});\r\nvar ContextMenuView = _uiGrid_core.default.View.inherit({\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(CONTEXT_MENU);\r\n        this.setAria(\"role\", \"presentation\", $element);\r\n        this._createComponent($element, _context_menu.default, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                var contextMenuInstance = actionArgs.component;\r\n                var items = that.getController(\"contextMenu\").getContextMenuItems(event);\r\n                if (items) {\r\n                    contextMenuInstance.option(\"items\", items);\r\n                    event.stopPropagation()\r\n                } else {\r\n                    actionArgs.cancel = true\r\n                }\r\n            },\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: that.getWidgetContainerClass(),\r\n            target: that.component.$element()\r\n        })\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            onContextMenuPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        contextMenu: ContextMenuController\r\n    },\r\n    views: {\r\n        contextMenuView: ContextMenuView\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.data_controller.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\r\nvar _custom_store = _interopRequireDefault(require(\"../../data/custom_store\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _data_helper = _interopRequireDefault(require(\"../../data_helper\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _array_compare = require(\"../../core/utils/array_compare\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            loadingTimeout: 0,\r\n            dataSource: null,\r\n            cacheEnabled: true,\r\n            repaintChangesOnly: false,\r\n            highlightChanges: false,\r\n            onDataErrorOccurred: null,\r\n            remoteOperations: \"auto\",\r\n            paging: {\r\n                enabled: true,\r\n                pageSize: void 0,\r\n                pageIndex: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        data: _uiGrid_core.default.Controller.inherit({}).include(_data_helper.default).inherit(function() {\r\n            var changePaging = function(that, optionName, value) {\r\n                var dataSource = that._dataSource;\r\n                if (dataSource) {\r\n                    if (void 0 !== value) {\r\n                        if (dataSource[optionName]() !== value) {\r\n                            if (\"pageSize\" === optionName) {\r\n                                dataSource.pageIndex(0)\r\n                            }\r\n                            dataSource[optionName](value);\r\n                            that._skipProcessingPagingChange = true;\r\n                            that.option(\"paging.\" + optionName, value);\r\n                            that._skipProcessingPagingChange = false;\r\n                            return dataSource[\"pageIndex\" === optionName ? \"load\" : \"reload\"]().done(that.pageChanged.fire.bind(that.pageChanged))\r\n                        }\r\n                        return (0, _deferred.Deferred)().resolve().promise()\r\n                    }\r\n                    return dataSource[optionName]()\r\n                }\r\n                return 0\r\n            };\r\n            var members = {\r\n                init: function() {\r\n                    var _this = this;\r\n                    var that = this;\r\n                    that._items = [];\r\n                    that._columnsController = that.getController(\"columns\");\r\n                    that._currentOperationTypes = null;\r\n                    that._dataChangedHandler = function(e) {\r\n                        that._currentOperationTypes = _this._dataSource.operationTypes();\r\n                        that._handleDataChanged(e);\r\n                        that._currentOperationTypes = null\r\n                    };\r\n                    that._columnsChangedHandler = that._handleColumnsChanged.bind(that);\r\n                    that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n                    that._loadErrorHandler = that._handleLoadError.bind(that);\r\n                    that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n                    that._changingHandler = that._handleChanging.bind(that);\r\n                    that._columnsController.columnsChanged.add(that._columnsChangedHandler);\r\n                    that._isLoading = false;\r\n                    that._isCustomLoading = false;\r\n                    that._repaintChangesOnly = void 0;\r\n                    that._changes = [];\r\n                    that.createAction(\"onDataErrorOccurred\");\r\n                    that.dataErrorOccurred.add(function(error) {\r\n                        return that.executeAction(\"onDataErrorOccurred\", {\r\n                            error: error\r\n                        })\r\n                    });\r\n                    that._refreshDataSource()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"changed\", \"loadingChanged\", \"dataErrorOccurred\", \"pageChanged\", \"dataSourceChanged\"]\r\n                },\r\n                callbackFlags: function(name) {\r\n                    if (\"dataErrorOccurred\" === name) {\r\n                        return {\r\n                            stopOnFalse: true\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"beginCustomLoading\", \"endCustomLoading\", \"refresh\", \"filter\", \"clearFilter\", \"getCombinedFilter\", \"keyOf\", \"byKey\", \"getDataByKeys\", \"pageIndex\", \"pageSize\", \"pageCount\", \"totalCount\", \"_disposeDataSource\", \"getKeyByRowIndex\", \"getRowIndexByKey\", \"getDataSource\", \"getVisibleRows\", \"repaintRows\"]\r\n                },\r\n                reset: function() {\r\n                    this._columnsController.reset();\r\n                    this._items = [];\r\n                    this._refreshDataSource()\r\n                },\r\n                optionChanged: function(args) {\r\n                    var that = this;\r\n                    var dataSource;\r\n\r\n                    function handled() {\r\n                        args.handled = true\r\n                    }\r\n                    if (\"dataSource\" === args.name && args.name === args.fullName && (args.value === args.previousValue || that.option(\"columns\") && Array.isArray(args.value) && Array.isArray(args.previousValue))) {\r\n                        if (args.value !== args.previousValue) {\r\n                            var store = that.store();\r\n                            if (store) {\r\n                                store._array = args.value\r\n                            }\r\n                        }\r\n                        handled();\r\n                        that.refresh(that.option(\"repaintChangesOnly\"));\r\n                        return\r\n                    }\r\n                    switch (args.name) {\r\n                        case \"cacheEnabled\":\r\n                        case \"repaintChangesOnly\":\r\n                        case \"highlightChanges\":\r\n                        case \"loadingTimeout\":\r\n                            handled();\r\n                            break;\r\n                        case \"remoteOperations\":\r\n                        case \"keyExpr\":\r\n                        case \"dataSource\":\r\n                        case \"scrolling\":\r\n                            handled();\r\n                            that.reset();\r\n                            break;\r\n                        case \"paging\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && that._setPagingOptions(dataSource)) {\r\n                                dataSource.load().done(that.pageChanged.fire.bind(that.pageChanged))\r\n                            }\r\n                            handled();\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            that.reset();\r\n                            break;\r\n                        case \"columns\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && dataSource.isLoading() && args.name === args.fullName) {\r\n                                this._useSortingGroupingFromColumns = true;\r\n                                dataSource.load()\r\n                            }\r\n                            break;\r\n                        default:\r\n                            that.callBase(args)\r\n                    }\r\n                },\r\n                isReady: function() {\r\n                    return !this._isLoading\r\n                },\r\n                getDataSource: function() {\r\n                    return this._dataSource && this._dataSource._dataSource\r\n                },\r\n                getCombinedFilter: function(returnDataField) {\r\n                    return this.combinedFilter(void 0, returnDataField)\r\n                },\r\n                combinedFilter: function(filter, returnDataField) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var columnsController = that._columnsController;\r\n                    if (dataSource) {\r\n                        if (void 0 === filter) {\r\n                            filter = dataSource.filter()\r\n                        }\r\n                        var additionalFilter = that._calculateAdditionalFilter();\r\n                        if (additionalFilter) {\r\n                            if (columnsController.isDataSourceApplied() || columnsController.isAllDataTypesDefined()) {\r\n                                filter = _uiGrid_core2.default.combineFilters([additionalFilter, filter])\r\n                            }\r\n                        }\r\n                        filter = columnsController.updateFilter(filter, returnDataField || dataSource.remoteOperations().filtering)\r\n                    }\r\n                    return filter\r\n                },\r\n                waitReady: function() {\r\n                    if (this._updateLockCount) {\r\n                        this._readyDeferred = new _deferred.Deferred;\r\n                        return this._readyDeferred\r\n                    }\r\n                    return (0, _deferred.when)()\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    if (changes.length) {\r\n                        this._changes = [];\r\n                        var repaintChangesOnly = changes.every(function(change) {\r\n                            return change.repaintChangesOnly\r\n                        });\r\n                        this.updateItems(1 === changes.length ? changes[0] : {\r\n                            repaintChangesOnly: repaintChangesOnly\r\n                        })\r\n                    }\r\n                    if (this._readyDeferred) {\r\n                        this._readyDeferred.resolve();\r\n                        this._readyDeferred = null\r\n                    }\r\n                },\r\n                _handleCustomizeStoreLoadOptions: function(e) {\r\n                    var columnsController = this._columnsController;\r\n                    var dataSource = this._dataSource;\r\n                    var storeLoadOptions = e.storeLoadOptions;\r\n                    if (e.isCustomLoading && !storeLoadOptions.isLoadingAll) {\r\n                        return\r\n                    }\r\n                    storeLoadOptions.filter = this.combinedFilter(storeLoadOptions.filter);\r\n                    if (!columnsController.isDataSourceApplied()) {\r\n                        columnsController.updateColumnDataTypes(dataSource)\r\n                    }\r\n                    this._columnsUpdating = true;\r\n                    columnsController.updateSortingGrouping(dataSource, !this._useSortingGroupingFromColumns);\r\n                    this._columnsUpdating = false;\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters();\r\n                    storeLoadOptions.group = columnsController.getGroupDataSourceParameters();\r\n                    dataSource.sort(storeLoadOptions.sort);\r\n                    dataSource.group(storeLoadOptions.group);\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().sorting);\r\n                    e.group = columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().grouping)\r\n                },\r\n                _handleColumnsChanged: function(e) {\r\n                    var that = this;\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    var filterValue;\r\n                    var filterValues;\r\n                    var filterApplied;\r\n                    var updateItemsHandler = function updateItemsHandler() {\r\n                        that._columnsController.columnsChanged.remove(updateItemsHandler);\r\n                        that.updateItems()\r\n                    };\r\n                    if (changeTypes.sorting || changeTypes.grouping) {\r\n                        if (that._dataSource && !that._columnsUpdating) {\r\n                            that._dataSource.group(that._columnsController.getGroupDataSourceParameters());\r\n                            that._dataSource.sort(that._columnsController.getSortDataSourceParameters());\r\n                            that.reload()\r\n                        }\r\n                    } else {\r\n                        if (changeTypes.columns) {\r\n                            if (optionNames.filterValues || optionNames.filterValue || optionNames.selectedFilterOperation) {\r\n                                filterValue = that._columnsController.columnOption(e.columnIndex, \"filterValue\");\r\n                                filterValues = that._columnsController.columnOption(e.columnIndex, \"filterValues\");\r\n                                if (Array.isArray(filterValues) || void 0 === e.columnIndex || (0, _type.isDefined)(filterValue) || !optionNames.selectedFilterOperation || optionNames.filterValue) {\r\n                                    that._applyFilter();\r\n                                    filterApplied = true\r\n                                }\r\n                            }\r\n                            if (!that._needApplyFilter && !_uiGrid_core2.default.checkChanges(optionNames, [\"width\", \"visibleWidth\", \"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"filterValues\", \"filterType\"])) {\r\n                                that._columnsController.columnsChanged.add(updateItemsHandler)\r\n                            }\r\n                            if ((0, _type.isDefined)(optionNames.visible)) {\r\n                                var column = that._columnsController.columnOption(e.columnIndex);\r\n                                if (column && ((0, _type.isDefined)(column.filterValue) || (0, _type.isDefined)(column.filterValues))) {\r\n                                    that._applyFilter();\r\n                                    filterApplied = true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!filterApplied && changeTypes.filtering) {\r\n                        that.reload()\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var columnsController = that._columnsController;\r\n                    var isAsyncDataSourceApplying = false;\r\n                    this._useSortingGroupingFromColumns = false;\r\n                    if (dataSource && !that._isDataSourceApplying) {\r\n                        that._isDataSourceApplying = true;\r\n                        (0, _deferred.when)(that._columnsController.applyDataSource(dataSource)).done(function() {\r\n                            if (that._isLoading) {\r\n                                that._handleLoadingChanged(false)\r\n                            }\r\n                            if (isAsyncDataSourceApplying && e && e.isDelayed) {\r\n                                e.isDelayed = false\r\n                            }\r\n                            that._isDataSourceApplying = false;\r\n                            var hasAdditionalFilter = function() {\r\n                                var additionalFilter = that._calculateAdditionalFilter();\r\n                                return additionalFilter && additionalFilter.length\r\n                            };\r\n                            var needApplyFilter = that._needApplyFilter;\r\n                            that._needApplyFilter = false;\r\n                            if (needApplyFilter && !that._isAllDataTypesDefined && hasAdditionalFilter()) {\r\n                                _ui.default.log(\"W1005\", that.component.NAME);\r\n                                that._applyFilter()\r\n                            } else {\r\n                                that.updateItems(e, true)\r\n                            }\r\n                        }).fail(function() {\r\n                            that._isDataSourceApplying = false\r\n                        });\r\n                        if (that._isDataSourceApplying) {\r\n                            isAsyncDataSourceApplying = true;\r\n                            that._handleLoadingChanged(true)\r\n                        }\r\n                        that._needApplyFilter = !that._columnsController.isDataSourceApplied();\r\n                        that._isAllDataTypesDefined = columnsController.isAllDataTypesDefined()\r\n                    }\r\n                },\r\n                _handleLoadingChanged: function(isLoading) {\r\n                    this._isLoading = isLoading;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                _handleLoadError: function(e) {\r\n                    this.dataErrorOccurred.fire(e)\r\n                },\r\n                fireError: function() {\r\n                    this.dataErrorOccurred.fire(_ui.default.Error.apply(_ui.default, arguments))\r\n                },\r\n                _setPagingOptions: function(dataSource) {\r\n                    var pageIndex = this.option(\"paging.pageIndex\");\r\n                    var pageSize = this.option(\"paging.pageSize\");\r\n                    var pagingEnabled = this.option(\"paging.enabled\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var appendMode = \"infinite\" === scrollingMode;\r\n                    var virtualMode = \"virtual\" === scrollingMode;\r\n                    var paginate = pagingEnabled || virtualMode || appendMode;\r\n                    var isChanged = false;\r\n                    dataSource.requireTotalCount(!appendMode);\r\n                    if (void 0 !== pagingEnabled && dataSource.paginate() !== paginate) {\r\n                        dataSource.paginate(paginate);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageSize && dataSource.pageSize() !== pageSize) {\r\n                        dataSource.pageSize(pageSize);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageIndex && dataSource.pageIndex() !== pageIndex) {\r\n                        dataSource.pageIndex(pageIndex);\r\n                        isChanged = true\r\n                    }\r\n                    return isChanged\r\n                },\r\n                _getSpecificDataSourceOption: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    if (Array.isArray(dataSource)) {\r\n                        return {\r\n                            store: {\r\n                                type: \"array\",\r\n                                data: dataSource,\r\n                                key: this.option(\"keyExpr\")\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataSource\r\n                },\r\n                _initDataSource: function() {\r\n                    var that = this;\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    var oldDataSource = this._dataSource;\r\n                    that.callBase();\r\n                    dataSource = that._dataSource;\r\n                    that._useSortingGroupingFromColumns = true;\r\n                    if (dataSource) {\r\n                        that._setPagingOptions(dataSource);\r\n                        that.setDataSource(dataSource)\r\n                    } else {\r\n                        if (oldDataSource) {\r\n                            that.updateItems()\r\n                        }\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var result = new _deferred.Deferred;\r\n                    (0, _deferred.when)(this._columnsController.refresh(true)).always(function() {\r\n                        if (dataSource) {\r\n                            dataSource.load().done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    });\r\n                    return result.promise()\r\n                },\r\n                _beforeProcessItems: function(items) {\r\n                    return items.slice(0)\r\n                },\r\n                getRowIndexDelta: function() {\r\n                    return 0\r\n                },\r\n                _processItems: function(items, change) {\r\n                    var that = this;\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var changeType = change.changeType;\r\n                    var visibleColumns = that._columnsController.getVisibleColumns(null, \"loadingAll\" === changeType);\r\n                    var visibleItems = that._items;\r\n                    var lastVisibleItem = \"append\" === changeType && visibleItems.length > 0 ? visibleItems[visibleItems.length - 1] : null;\r\n                    var dataIndex = (0, _type.isDefined)(null === lastVisibleItem || void 0 === lastVisibleItem ? void 0 : lastVisibleItem.dataIndex) ? lastVisibleItem.dataIndex + 1 : 0;\r\n                    var options = {\r\n                        visibleColumns: visibleColumns,\r\n                        dataIndex: dataIndex\r\n                    };\r\n                    var result = [];\r\n                    (0, _iterator.each)(items, function(index, item) {\r\n                        if ((0, _type.isDefined)(item)) {\r\n                            options.rowIndex = index - rowIndexDelta;\r\n                            item = that._processItem(item, options);\r\n                            result.push(item)\r\n                        }\r\n                    });\r\n                    return result\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this._generateDataItem(item, options);\r\n                    item = this._processDataItem(item, options);\r\n                    item.dataIndex = options.dataIndex++;\r\n                    return item\r\n                },\r\n                _generateDataItem: function(data) {\r\n                    return {\r\n                        rowType: \"data\",\r\n                        data: data,\r\n                        key: this.keyOf(data)\r\n                    }\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    dataItem.values = this.generateDataValues(dataItem.data, options.visibleColumns);\r\n                    return dataItem\r\n                },\r\n                generateDataValues: function(data, columns, isModified) {\r\n                    var values = [];\r\n                    var value;\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        var column = columns[i];\r\n                        value = isModified ? void 0 : null;\r\n                        if (!column.command) {\r\n                            if (column.calculateCellValue) {\r\n                                value = column.calculateCellValue(data)\r\n                            } else {\r\n                                if (column.dataField) {\r\n                                    value = data[column.dataField]\r\n                                }\r\n                            }\r\n                        }\r\n                        values.push(value)\r\n                    }\r\n                    return values\r\n                },\r\n                _applyChange: function(change) {\r\n                    var that = this;\r\n                    if (\"update\" === change.changeType) {\r\n                        that._applyChangeUpdate(change)\r\n                    } else {\r\n                        if (that.items().length && change.repaintChangesOnly && \"refresh\" === change.changeType) {\r\n                            that._applyChangesOnly(change)\r\n                        } else {\r\n                            if (\"refresh\" === change.changeType) {\r\n                                that._applyChangeFull(change)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _applyChangeFull: function(change) {\r\n                    this._items = change.items.slice(0)\r\n                },\r\n                _getRowIndices: function(change) {\r\n                    var rowIndices = change.rowIndices.slice(0);\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    rowIndices.sort(function(a, b) {\r\n                        return a - b\r\n                    });\r\n                    for (var i = 0; i < rowIndices.length; i++) {\r\n                        var correctedRowIndex = rowIndices[i];\r\n                        if (change.allowInvisibleRowIndices) {\r\n                            correctedRowIndex += rowIndexDelta\r\n                        }\r\n                        if (correctedRowIndex < 0) {\r\n                            rowIndices.splice(i, 1);\r\n                            i--\r\n                        }\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    var that = this;\r\n                    var items = change.items;\r\n                    var rowIndices = that._getRowIndices(change);\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var repaintChangesOnly = that.option(\"repaintChangesOnly\");\r\n                    var prevIndex = -1;\r\n                    var rowIndexCorrection = 0;\r\n                    var changeType;\r\n                    change.items = [];\r\n                    change.rowIndices = [];\r\n                    change.columnIndices = [];\r\n                    change.changeTypes = [];\r\n                    var equalItems = function(item1, item2, strict) {\r\n                        var result = item1 && item2 && (0, _common.equalByValue)(item1.key, item2.key);\r\n                        if (result && strict) {\r\n                            result = item1.rowType === item2.rowType && (\"detail\" !== item2.rowType || item1.isEditing === item2.isEditing)\r\n                        }\r\n                        return result\r\n                    };\r\n                    (0, _iterator.each)(rowIndices, function(index, rowIndex) {\r\n                        var columnIndices;\r\n                        rowIndex += rowIndexCorrection + rowIndexDelta;\r\n                        if (prevIndex === rowIndex) {\r\n                            return\r\n                        }\r\n                        prevIndex = rowIndex;\r\n                        var oldItem = that._items[rowIndex];\r\n                        var oldNextItem = that._items[rowIndex + 1];\r\n                        var newItem = items[rowIndex];\r\n                        var newNextItem = items[rowIndex + 1];\r\n                        var strict = equalItems(oldItem, oldNextItem) || equalItems(newItem, newNextItem);\r\n                        if (newItem) {\r\n                            newItem.rowIndex = rowIndex;\r\n                            change.items.push(newItem)\r\n                        }\r\n                        if (oldItem && newItem && equalItems(oldItem, newItem, strict)) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem;\r\n                            if (oldItem.visible !== newItem.visible) {\r\n                                change.items.splice(-1, 1, {\r\n                                    visible: newItem.visible\r\n                                })\r\n                            } else {\r\n                                if (repaintChangesOnly && !change.isFullUpdate) {\r\n                                    columnIndices = that._partialUpdateRow(oldItem, newItem, rowIndex - rowIndexDelta)\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (newItem && !oldItem || newNextItem && equalItems(oldItem, newNextItem, strict)) {\r\n                                changeType = \"insert\";\r\n                                that._items.splice(rowIndex, 0, newItem);\r\n                                rowIndexCorrection++\r\n                            } else {\r\n                                if (oldItem && !newItem || oldNextItem && equalItems(newItem, oldNextItem, strict)) {\r\n                                    changeType = \"remove\";\r\n                                    that._items.splice(rowIndex, 1);\r\n                                    rowIndexCorrection--;\r\n                                    prevIndex = -1\r\n                                } else {\r\n                                    if (newItem) {\r\n                                        changeType = \"update\";\r\n                                        that._items[rowIndex] = newItem\r\n                                    } else {\r\n                                        return\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        change.rowIndices.push(rowIndex - rowIndexDelta);\r\n                        change.changeTypes.push(changeType);\r\n                        change.columnIndices.push(columnIndices)\r\n                    })\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    if (JSON.stringify(oldRow.values[columnIndex]) !== JSON.stringify(newRow.values[columnIndex])) {\r\n                        return true\r\n                    }\r\n\r\n                    function isCellModified(row, columnIndex) {\r\n                        return row.modifiedValues ? void 0 !== row.modifiedValues[columnIndex] : false\r\n                    }\r\n                    if (isCellModified(oldRow, columnIndex) !== isCellModified(newRow, columnIndex)) {\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    if (oldItem.rowType === newItem.rowType && \"group\" !== newItem.rowType && \"groupFooter\" !== newItem.rowType) {\r\n                        var columnIndices = [];\r\n                        if (\"detail\" !== newItem.rowType) {\r\n                            for (var columnIndex = 0; columnIndex < oldItem.values.length; columnIndex++) {\r\n                                if (this._isCellChanged(oldItem, newItem, visibleRowIndex, columnIndex, isLiveUpdate)) {\r\n                                    columnIndices.push(columnIndex)\r\n                                }\r\n                            }\r\n                        }\r\n                        return columnIndices\r\n                    }\r\n                },\r\n                _partialUpdateRow: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var changedColumnIndices = this._getChangedColumnIndices(oldItem, newItem, visibleRowIndex, isLiveUpdate);\r\n                    if (changedColumnIndices) {\r\n                        oldItem.cells && oldItem.cells.forEach(function(cell, columnIndex) {\r\n                            var isCellChanged = changedColumnIndices.indexOf(columnIndex) >= 0;\r\n                            if (!isCellChanged && cell && cell.update) {\r\n                                cell.update(newItem)\r\n                            }\r\n                        });\r\n                        newItem.update = oldItem.update;\r\n                        newItem.watch = oldItem.watch;\r\n                        newItem.cells = oldItem.cells;\r\n                        if (isLiveUpdate) {\r\n                            newItem.oldValues = oldItem.values\r\n                        }\r\n                        oldItem.update && oldItem.update(newItem)\r\n                    }\r\n                    return changedColumnIndices\r\n                },\r\n                _isItemEquals: function(item1, item2) {\r\n                    if (JSON.stringify(item1.values) !== JSON.stringify(item2.values)) {\r\n                        return false\r\n                    }\r\n                    var compareFields = [\"modified\", \"isNewRow\", \"removed\", \"isEditing\"];\r\n                    if (compareFields.some(function(field) {\r\n                            return item1[field] !== item2[field]\r\n                        })) {\r\n                        return false\r\n                    }\r\n                    if (\"group\" === item1.rowType || \"groupFooter\" === item1.rowType) {\r\n                        var _item1$data, _item2$data, _item1$data2, _item2$data2;\r\n                        var expandedMatch = item1.isExpanded === item2.isExpanded;\r\n                        var summaryCellsMatch = JSON.stringify(item1.summaryCells) === JSON.stringify(item2.summaryCells);\r\n                        var continuationMatch = (null === (_item1$data = item1.data) || void 0 === _item1$data ? void 0 : _item1$data.isContinuation) === (null === (_item2$data = item2.data) || void 0 === _item2$data ? void 0 : _item2$data.isContinuation) && (null === (_item1$data2 = item1.data) || void 0 === _item1$data2 ? void 0 : _item1$data2.isContinuationOnNextPage) === (null === (_item2$data2 = item2.data) || void 0 === _item2$data2 ? void 0 : _item2$data2.isContinuationOnNextPage);\r\n                        if (!expandedMatch || !summaryCellsMatch || !continuationMatch) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    var _this2 = this;\r\n                    var rowIndices = [];\r\n                    var columnIndices = [];\r\n                    var changeTypes = [];\r\n                    var items = [];\r\n                    var newIndexByKey = {};\r\n\r\n                    function getRowKey(row) {\r\n                        if (row) {\r\n                            return row.rowType + \",\" + JSON.stringify(row.key)\r\n                        }\r\n                    }\r\n                    var isItemEquals = function(item1, item2) {\r\n                        if (!_this2._isItemEquals(item1, item2)) {\r\n                            return false\r\n                        }\r\n                        if (item1.cells) {\r\n                            item1.update && item1.update(item2);\r\n                            item1.cells.forEach(function(cell) {\r\n                                if (cell && cell.update) {\r\n                                    cell.update(item2, true)\r\n                                }\r\n                            })\r\n                        }\r\n                        return true\r\n                    };\r\n                    var oldItems = this._items.slice();\r\n                    change.items.forEach(function(item, index) {\r\n                        var key = getRowKey(item);\r\n                        newIndexByKey[key] = index;\r\n                        item.rowIndex = index\r\n                    });\r\n                    var result = (0, _array_compare.findChanges)(oldItems, change.items, getRowKey, isItemEquals);\r\n                    if (!result) {\r\n                        this._applyChangeFull(change);\r\n                        return\r\n                    }\r\n                    result.forEach(function(change) {\r\n                        switch (change.type) {\r\n                            case \"update\":\r\n                                var index = change.index;\r\n                                var newItem = change.data;\r\n                                var oldItem = change.oldItem;\r\n                                var changedColumnIndices = _this2._partialUpdateRow(oldItem, newItem, index, true);\r\n                                rowIndices.push(index);\r\n                                changeTypes.push(\"update\");\r\n                                items.push(newItem);\r\n                                _this2._items[index] = newItem;\r\n                                columnIndices.push(changedColumnIndices);\r\n                                break;\r\n                            case \"insert\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"insert\");\r\n                                items.push(change.data);\r\n                                columnIndices.push(void 0);\r\n                                _this2._items.splice(change.index, 0, change.data);\r\n                                break;\r\n                            case \"remove\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"remove\");\r\n                                _this2._items.splice(change.index, 1);\r\n                                items.push(change.oldItem);\r\n                                columnIndices.push(void 0)\r\n                        }\r\n                    });\r\n                    change.repaintChangesOnly = true;\r\n                    change.changeType = \"update\";\r\n                    change.rowIndices = rowIndices;\r\n                    change.columnIndices = columnIndices;\r\n                    change.changeTypes = changeTypes;\r\n                    change.items = items;\r\n                    if (oldItems.length) {\r\n                        change.isLiveUpdate = true\r\n                    }\r\n                    this._correctRowIndices(function(rowIndex) {\r\n                        var oldItem = oldItems[rowIndex];\r\n                        var key = getRowKey(oldItem);\r\n                        var newRowIndex = newIndexByKey[key];\r\n                        return newRowIndex >= 0 ? newRowIndex - rowIndex : 0\r\n                    })\r\n                },\r\n                _correctRowIndices: _common.noop,\r\n                _updateItemsCore: function(change) {\r\n                    var that = this;\r\n                    var items;\r\n                    var dataSource = that._dataSource;\r\n                    var changeType = change.changeType || \"refresh\";\r\n                    change.changeType = changeType;\r\n                    if (dataSource) {\r\n                        items = change.items || dataSource.items();\r\n                        items = that._beforeProcessItems(items);\r\n                        items = that._processItems(items, change);\r\n                        change.items = items;\r\n                        var oldItems = that._items.length === items.length && that._items;\r\n                        that._applyChange(change);\r\n                        var rowIndexDelta = that.getRowIndexDelta();\r\n                        (0, _iterator.each)(that._items, function(index, item) {\r\n                            item.rowIndex = index - rowIndexDelta;\r\n                            if (oldItems) {\r\n                                item.cells = oldItems[index].cells || []\r\n                            }\r\n                        })\r\n                    } else {\r\n                        that._items = []\r\n                    }\r\n                },\r\n                _handleChanging: function(e) {\r\n                    var that = this;\r\n                    var rows = that.getVisibleRows();\r\n                    var dataSource = that.dataSource();\r\n                    if (dataSource) {\r\n                        e.changes.forEach(function(change) {\r\n                            if (\"insert\" === change.type && change.index >= 0) {\r\n                                var dataIndex = 0;\r\n                                for (var i = 0; i < change.index; i++) {\r\n                                    var row = rows[i];\r\n                                    if (row && (\"data\" === row.rowType || \"group\" === row.rowType)) {\r\n                                        dataIndex++\r\n                                    }\r\n                                }\r\n                                change.index = dataIndex\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                updateItems: function(change, isDataChanged) {\r\n                    change = change || {};\r\n                    var that = this;\r\n                    if (void 0 !== that._repaintChangesOnly) {\r\n                        change.repaintChangesOnly = that._repaintChangesOnly\r\n                    } else {\r\n                        if (change.changes) {\r\n                            change.repaintChangesOnly = that.option(\"repaintChangesOnly\")\r\n                        } else {\r\n                            if (isDataChanged) {\r\n                                var operationTypes = that.dataSource().operationTypes();\r\n                                change.repaintChangesOnly = operationTypes && !operationTypes.grouping && !operationTypes.filtering && that.option(\"repaintChangesOnly\");\r\n                                change.isDataChanged = true;\r\n                                if (operationTypes && (operationTypes.reload || operationTypes.paging || operationTypes.groupExpanding)) {\r\n                                    change.needUpdateDimensions = true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (that._updateLockCount) {\r\n                        that._changes.push(change);\r\n                        return\r\n                    }\r\n                    that._updateItemsCore(change);\r\n                    if (change.cancel) {\r\n                        return\r\n                    }\r\n                    that._fireChanged(change)\r\n                },\r\n                loadingOperationTypes: function() {\r\n                    var dataSource = this.dataSource();\r\n                    return dataSource && dataSource.loadingOperationTypes() || {}\r\n                },\r\n                _fireChanged: function(change) {\r\n                    var _this3 = this;\r\n                    if (this._currentOperationTypes) {\r\n                        change.operationTypes = this._currentOperationTypes;\r\n                        this._currentOperationTypes = null\r\n                    }(0, _common.deferRender)(function() {\r\n                        _this3.changed.fire(change)\r\n                    })\r\n                },\r\n                isLoading: function() {\r\n                    return this._isLoading || this._isCustomLoading\r\n                },\r\n                _fireLoadingChanged: function() {\r\n                    this.loadingChanged.fire(this.isLoading(), this._loadingText)\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    return null\r\n                },\r\n                _applyFilter: function() {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    if (dataSource) {\r\n                        dataSource.pageIndex(0);\r\n                        return that.reload().done(that.pageChanged.fire.bind(that.pageChanged))\r\n                    }\r\n                },\r\n                filter: function filter(filterExpr) {\r\n                    var dataSource = this._dataSource;\r\n                    var filter = dataSource && dataSource.filter();\r\n                    if (0 === arguments.length) {\r\n                        return filter\r\n                    }\r\n                    filterExpr = arguments.length > 1 ? Array.prototype.slice.call(arguments, 0) : filterExpr;\r\n                    if (_uiGrid_core2.default.equalFilterParameters(filter, filterExpr)) {\r\n                        return\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource.filter(filterExpr)\r\n                    }\r\n                    this._applyFilter()\r\n                },\r\n                clearFilter: function(filterName) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var clearColumnOption = function(optionName) {\r\n                        var columnCount = columnsController.columnCount();\r\n                        for (var index = 0; index < columnCount; index++) {\r\n                            columnsController.columnOption(index, optionName, void 0)\r\n                        }\r\n                    };\r\n                    that.component.beginUpdate();\r\n                    if (arguments.length > 0) {\r\n                        switch (filterName) {\r\n                            case \"dataSource\":\r\n                                that.filter(null);\r\n                                break;\r\n                            case \"search\":\r\n                                that.searchByText(\"\");\r\n                                break;\r\n                            case \"header\":\r\n                                clearColumnOption(\"filterValues\");\r\n                                break;\r\n                            case \"row\":\r\n                                clearColumnOption(\"filterValue\")\r\n                        }\r\n                    } else {\r\n                        that.filter(null);\r\n                        that.searchByText(\"\");\r\n                        clearColumnOption(\"filterValue\");\r\n                        clearColumnOption(\"bufferedFilterValue\");\r\n                        clearColumnOption(\"filterValues\")\r\n                    }\r\n                    that.component.endUpdate()\r\n                },\r\n                _fireDataSourceChanged: function() {\r\n                    var that = this;\r\n                    var changedHandler = function changedHandler() {\r\n                        that.changed.remove(changedHandler);\r\n                        that.dataSourceChanged.fire()\r\n                    };\r\n                    that.changed.add(changedHandler)\r\n                },\r\n                _getDataSourceAdapter: _common.noop,\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var dataSourceAdapterProvider = this._getDataSourceAdapter();\r\n                    var dataSourceAdapter = dataSourceAdapterProvider.create(this.component);\r\n                    dataSourceAdapter.init(dataSource, remoteOperations);\r\n                    return dataSourceAdapter\r\n                },\r\n                isLocalStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof _array_store.default\r\n                },\r\n                isCustomStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof _custom_store.default\r\n                },\r\n                _createDataSourceAdapter: function(dataSource) {\r\n                    var remoteOperations = this.option(\"remoteOperations\");\r\n                    var store = dataSource.store();\r\n                    var enabledRemoteOperations = {\r\n                        filtering: true,\r\n                        sorting: true,\r\n                        paging: true,\r\n                        grouping: true,\r\n                        summary: true\r\n                    };\r\n                    if (remoteOperations && remoteOperations.groupPaging) {\r\n                        remoteOperations = (0, _extend.extend)({}, enabledRemoteOperations, remoteOperations)\r\n                    }\r\n                    if (\"auto\" === remoteOperations) {\r\n                        remoteOperations = this.isLocalStore(store) || this.isCustomStore(store) ? {} : {\r\n                            filtering: true,\r\n                            sorting: true,\r\n                            paging: true\r\n                        }\r\n                    }\r\n                    if (true === remoteOperations) {\r\n                        remoteOperations = enabledRemoteOperations\r\n                    }\r\n                    return this._createDataSourceAdapterCore(dataSource, remoteOperations)\r\n                },\r\n                setDataSource: function(dataSource) {\r\n                    var that = this;\r\n                    var oldDataSource = that._dataSource;\r\n                    if (!dataSource && oldDataSource) {\r\n                        oldDataSource.cancelAll();\r\n                        oldDataSource.changed.remove(that._dataChangedHandler);\r\n                        oldDataSource.loadingChanged.remove(that._loadingChangedHandler);\r\n                        oldDataSource.loadError.remove(that._loadErrorHandler);\r\n                        oldDataSource.customizeStoreLoadOptions.remove(that._customizeStoreLoadOptionsHandler);\r\n                        oldDataSource.changing.remove(that._changingHandler);\r\n                        oldDataSource.dispose(that._isSharedDataSource)\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource = that._createDataSourceAdapter(dataSource)\r\n                    }\r\n                    that._dataSource = dataSource;\r\n                    if (dataSource) {\r\n                        that._fireDataSourceChanged();\r\n                        that._isLoading = !dataSource.isLoaded();\r\n                        that._needApplyFilter = true;\r\n                        that._isAllDataTypesDefined = that._columnsController.isAllDataTypesDefined();\r\n                        dataSource.changed.add(that._dataChangedHandler);\r\n                        dataSource.loadingChanged.add(that._loadingChangedHandler);\r\n                        dataSource.loadError.add(that._loadErrorHandler);\r\n                        dataSource.customizeStoreLoadOptions.add(that._customizeStoreLoadOptionsHandler);\r\n                        dataSource.changing.add(that._changingHandler)\r\n                    }\r\n                },\r\n                items: function() {\r\n                    return this._items\r\n                },\r\n                isEmpty: function() {\r\n                    return !this.items().length\r\n                },\r\n                pageCount: function() {\r\n                    return this._dataSource ? this._dataSource.pageCount() : 1\r\n                },\r\n                dataSource: function() {\r\n                    return this._dataSource\r\n                },\r\n                store: function() {\r\n                    var dataSource = this._dataSource;\r\n                    return dataSource && dataSource.store()\r\n                },\r\n                loadAll: function(data) {\r\n                    var that = this;\r\n                    var d = new _deferred.Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (dataSource) {\r\n                        if (data) {\r\n                            var options = {\r\n                                data: data,\r\n                                isCustomLoading: true,\r\n                                storeLoadOptions: {\r\n                                    isLoadingAll: true\r\n                                },\r\n                                loadOptions: {\r\n                                    filter: that.getCombinedFilter(),\r\n                                    group: dataSource.group(),\r\n                                    sort: dataSource.sort()\r\n                                }\r\n                            };\r\n                            dataSource._handleDataLoaded(options);\r\n                            (0, _deferred.when)(options.data).done(function(data) {\r\n                                data = that._beforeProcessItems(data);\r\n                                d.resolve(that._processItems(data, {\r\n                                    changeType: \"loadingAll\"\r\n                                }), options.extra && options.extra.summary)\r\n                            }).fail(d.reject)\r\n                        } else {\r\n                            if (!dataSource.isLoading()) {\r\n                                var loadOptions = (0, _extend.extend)({}, dataSource.loadOptions(), {\r\n                                    isLoadingAll: true,\r\n                                    requireTotalCount: false\r\n                                });\r\n                                dataSource.load(loadOptions).done(function(items, extra) {\r\n                                    items = that._beforeProcessItems(items);\r\n                                    items = that._processItems(items, {\r\n                                        changeType: \"loadingAll\"\r\n                                    });\r\n                                    d.resolve(items, extra && extra.summary)\r\n                                }).fail(d.reject)\r\n                            } else {\r\n                                d.reject()\r\n                            }\r\n                        }\r\n                    } else {\r\n                        d.resolve([])\r\n                    }\r\n                    return d\r\n                },\r\n                getKeyByRowIndex: function(rowIndex, byLoaded) {\r\n                    var item = this.items(byLoaded)[rowIndex];\r\n                    if (item) {\r\n                        return item.key\r\n                    }\r\n                },\r\n                getRowIndexByKey: function(key, byLoaded) {\r\n                    return _uiGrid_core2.default.getIndexByKey(key, this.items(byLoaded))\r\n                },\r\n                keyOf: function(data) {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.keyOf(data)\r\n                    }\r\n                },\r\n                byKey: function(key) {\r\n                    var store = this.store();\r\n                    var rowIndex = this.getRowIndexByKey(key);\r\n                    var result;\r\n                    if (!store) {\r\n                        return\r\n                    }\r\n                    if (rowIndex >= 0) {\r\n                        result = (new _deferred.Deferred).resolve(this.items()[rowIndex].data)\r\n                    }\r\n                    return result || store.byKey(key)\r\n                },\r\n                key: function() {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.key()\r\n                    }\r\n                },\r\n                getRowIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                getDataByKeys: function(rowKeys) {\r\n                    var that = this;\r\n                    var result = new _deferred.Deferred;\r\n                    var deferreds = [];\r\n                    var data = [];\r\n                    (0, _iterator.each)(rowKeys, function(index, key) {\r\n                        deferreds.push(that.byKey(key).done(function(keyData) {\r\n                            data[index] = keyData\r\n                        }))\r\n                    });\r\n                    _deferred.when.apply(_renderer.default, deferreds).always(function() {\r\n                        result.resolve(data)\r\n                    });\r\n                    return result\r\n                },\r\n                pageIndex: function(value) {\r\n                    return changePaging(this, \"pageIndex\", value)\r\n                },\r\n                pageSize: function(value) {\r\n                    return changePaging(this, \"pageSize\", value)\r\n                },\r\n                beginCustomLoading: function(messageText) {\r\n                    this._isCustomLoading = true;\r\n                    this._loadingText = messageText || \"\";\r\n                    this._fireLoadingChanged()\r\n                },\r\n                endCustomLoading: function() {\r\n                    this._isCustomLoading = false;\r\n                    this._loadingText = void 0;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                refresh: function(options) {\r\n                    if (true === options) {\r\n                        options = {\r\n                            reload: true,\r\n                            changesOnly: true\r\n                        }\r\n                    } else {\r\n                        if (!options) {\r\n                            options = {\r\n                                lookup: true,\r\n                                selection: true,\r\n                                reload: true\r\n                            }\r\n                        }\r\n                    }\r\n                    var that = this;\r\n                    var dataSource = that.getDataSource();\r\n                    var changesOnly = options.changesOnly;\r\n                    var d = new _deferred.Deferred;\r\n                    var customizeLoadResult = function() {\r\n                        that._repaintChangesOnly = !!changesOnly\r\n                    };\r\n                    (0, _deferred.when)(!options.lookup || that._columnsController.refresh()).always(function() {\r\n                        if (options.load || options.reload) {\r\n                            dataSource && dataSource.on(\"customizeLoadResult\", customizeLoadResult);\r\n                            (0, _deferred.when)(that.reload(options.reload, changesOnly)).always(function() {\r\n                                dataSource && dataSource.off(\"customizeLoadResult\", customizeLoadResult);\r\n                                that._repaintChangesOnly = void 0\r\n                            }).done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            that.updateItems({\r\n                                repaintChangesOnly: options.changesOnly\r\n                            });\r\n                            d.resolve()\r\n                        }\r\n                    });\r\n                    return d.promise()\r\n                },\r\n                getVisibleRows: function() {\r\n                    return this.items()\r\n                },\r\n                _disposeDataSource: function() {\r\n                    this.setDataSource(null)\r\n                },\r\n                dispose: function() {\r\n                    this._disposeDataSource();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function(rowIndexes, changesOnly) {\r\n                    rowIndexes = Array.isArray(rowIndexes) ? rowIndexes : [rowIndexes];\r\n                    if (rowIndexes.length > 1 || (0, _type.isDefined)(rowIndexes[0])) {\r\n                        this.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: rowIndexes,\r\n                            isFullUpdate: !changesOnly\r\n                        })\r\n                    }\r\n                },\r\n                skipProcessingPagingChange: function(fullName) {\r\n                    return this._skipProcessingPagingChange && (\"paging.pageIndex\" === fullName || \"paging.pageSize\" === fullName)\r\n                },\r\n                getUserState: function() {\r\n                    return {\r\n                        searchText: this.option(\"searchPanel.text\"),\r\n                        pageIndex: this.pageIndex(),\r\n                        pageSize: this.pageSize()\r\n                    }\r\n                },\r\n                getCachedStoreData: function() {\r\n                    return this._dataSource && this._dataSource.getCachedStoreData()\r\n                }\r\n            };\r\n            _uiGrid_core2.default.proxyMethod(members, \"load\");\r\n            _uiGrid_core2.default.proxyMethod(members, \"reload\");\r\n            _uiGrid_core2.default.proxyMethod(members, \"push\");\r\n            _uiGrid_core2.default.proxyMethod(members, \"itemsCount\", 0);\r\n            _uiGrid_core2.default.proxyMethod(members, \"totalItemsCount\", 0);\r\n            _uiGrid_core2.default.proxyMethod(members, \"hasKnownLastPage\", true);\r\n            _uiGrid_core2.default.proxyMethod(members, \"isLoaded\", true);\r\n            _uiGrid_core2.default.proxyMethod(members, \"totalCount\", 0);\r\n            return members\r\n        }())\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _uiData_grid = _interopRequireDefault(require(\"../data_grid/ui.data_grid.core\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\r\nvar _array_utils = require(\"../../data/array_utils\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _uiData_grid.default.Controller.inherit(function() {\r\n    function cloneItems(items, groupCount) {\r\n        if (items) {\r\n            items = items.slice(0);\r\n            if (groupCount) {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    items[i] = (0, _extend.extend)({\r\n                        key: items[i].key\r\n                    }, items[i]);\r\n                    items[i].items = cloneItems(items[i].items, groupCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\r\n        var operationTypes = {\r\n            reload: true,\r\n            fullReload: true\r\n        };\r\n        if (lastLoadOptions) {\r\n            operationTypes = {\r\n                sorting: !_uiData_grid.default.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\r\n                grouping: !_uiData_grid.default.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\r\n                groupExpanding: !_uiData_grid.default.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\r\n                filtering: !_uiData_grid.default.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\r\n                pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\r\n                skip: loadOptions.skip !== lastLoadOptions.skip,\r\n                take: loadOptions.take !== lastLoadOptions.take,\r\n                fullReload: isFullReload\r\n            };\r\n            operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\r\n            operationTypes.paging = operationTypes.pageIndex || operationTypes.take\r\n        }\r\n        return operationTypes\r\n    }\r\n\r\n    function executeTask(action, timeout) {\r\n        if ((0, _type.isDefined)(timeout)) {\r\n            (0, _common.executeAsync)(action, timeout)\r\n        } else {\r\n            action()\r\n        }\r\n    }\r\n\r\n    function createEmptyPagesData() {\r\n        return {\r\n            pages: {}\r\n        }\r\n    }\r\n\r\n    function getPageDataFromCache(options) {\r\n        return options.cachedPagesData.pages[options.pageIndex]\r\n    }\r\n\r\n    function setPageDataToCache(options, data) {\r\n        var pageIndex = options.pageIndex;\r\n        if (void 0 !== pageIndex) {\r\n            options.cachedPagesData.pages[pageIndex] = data\r\n        }\r\n    }\r\n    return {\r\n        init: function(dataSource, remoteOperations) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that._remoteOperations = remoteOperations || {};\r\n            that._isLastPage = !dataSource.isLastPage();\r\n            that._hasLastPage = false;\r\n            that._currentTotalCount = 0;\r\n            that._cachedPagesData = createEmptyPagesData();\r\n            that._lastOperationTypes = {};\r\n            that._eventsStrategy = dataSource._eventsStrategy;\r\n            that._skipCorrection = 0;\r\n            that._isLoadingAll = false;\r\n            that.changed = (0, _callbacks.default)();\r\n            that.loadingChanged = (0, _callbacks.default)();\r\n            that.loadError = (0, _callbacks.default)();\r\n            that.customizeStoreLoadOptions = (0, _callbacks.default)();\r\n            that.changing = (0, _callbacks.default)();\r\n            that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n            that._dataLoadingHandler = that._handleDataLoading.bind(that);\r\n            that._dataLoadedHandler = that._handleDataLoaded.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._loadErrorHandler = that._handleLoadError.bind(that);\r\n            that._pushHandler = that._handlePush.bind(that);\r\n            that._changingHandler = that._handleChanging.bind(that);\r\n            dataSource.on(\"changed\", that._dataChangedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._dataLoadingHandler);\r\n            dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"loadError\", that._loadErrorHandler);\r\n            dataSource.on(\"changing\", that._changingHandler);\r\n            dataSource.store().on(\"push\", that._pushHandler);\r\n            (0, _iterator.each)(dataSource, function(memberName, member) {\r\n                if (!that[memberName] && (0, _type.isFunction)(member)) {\r\n                    that[memberName] = function() {\r\n                        return this._dataSource[memberName].apply(this._dataSource, arguments)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        remoteOperations: function() {\r\n            return this._remoteOperations\r\n        },\r\n        dispose: function(isSharedDataSource) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var store = dataSource.store();\r\n            dataSource.off(\"changed\", that._dataChangedHandler);\r\n            dataSource.off(\"customizeStoreLoadOptions\", that._dataLoadingHandler);\r\n            dataSource.off(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.off(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.off(\"loadError\", that._loadErrorHandler);\r\n            dataSource.off(\"changing\", that._changingHandler);\r\n            store && store.off(\"push\", that._pushHandler);\r\n            if (!isSharedDataSource) {\r\n                dataSource.dispose()\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            if (operationTypes.reload) {\r\n                that.resetCurrentTotalCount();\r\n                that._isLastPage = !dataSource.paginate();\r\n                that._hasLastPage = that._isLastPage\r\n            }\r\n        },\r\n        resetCurrentTotalCount: function() {\r\n            this._currentTotalCount = 0;\r\n            this._skipCorrection = 0\r\n        },\r\n        resetCache: function() {\r\n            this._cachedStoreData = void 0;\r\n            this._cachedPagingData = void 0\r\n        },\r\n        resetPagesCache: function() {\r\n            this._cachedPagesData = createEmptyPagesData()\r\n        },\r\n        _needClearStoreDataCache: function() {\r\n            var remoteOperations = this.remoteOperations();\r\n            var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\r\n            var isLocalOperations = Object.keys(remoteOperations).every(function(operationName) {\r\n                return !operationTypes[operationName] || !remoteOperations[operationName]\r\n            });\r\n            return !isLocalOperations\r\n        },\r\n        push: function(changes, fromStore) {\r\n            var store = this.store();\r\n            if (this._needClearStoreDataCache()) {\r\n                this._cachedStoreData = void 0\r\n            }\r\n            this._cachedPagingData = void 0;\r\n            this.resetPagesCache(true);\r\n            if (this._cachedStoreData) {\r\n                (0, _array_utils.applyBatch)({\r\n                    keyInfo: store,\r\n                    data: this._cachedStoreData,\r\n                    changes: changes\r\n                })\r\n            }\r\n            if (!fromStore) {\r\n                this._applyBatch(changes)\r\n            }\r\n        },\r\n        getDataIndexGetter: function() {\r\n            var _this = this;\r\n            if (!this._dataIndexGetter) {\r\n                var indexByKey;\r\n                var storeData;\r\n                var store = this.store();\r\n                this._dataIndexGetter = function(data) {\r\n                    var isCacheUpdated = storeData && storeData !== _this._cachedStoreData;\r\n                    if (!indexByKey || isCacheUpdated) {\r\n                        storeData = _this._cachedStoreData || [];\r\n                        indexByKey = {};\r\n                        for (var i = 0; i < storeData.length; i++) {\r\n                            indexByKey[(0, _common.getKeyHash)(store.keyOf(storeData[i]))] = i\r\n                        }\r\n                    }\r\n                    return indexByKey[(0, _common.getKeyHash)(store.keyOf(data))]\r\n                }\r\n            }\r\n            return this._dataIndexGetter\r\n        },\r\n        _getKeyInfo: function() {\r\n            return this.store()\r\n        },\r\n        _applyBatch: function(changes) {\r\n            var _this2 = this;\r\n            var keyInfo = this._getKeyInfo();\r\n            var dataSource = this._dataSource;\r\n            var groupCount = _uiData_grid.default.normalizeSortingInfo(this.group()).length;\r\n            var totalCount = this.totalCount();\r\n            var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\r\n            changes = changes.filter(function(change) {\r\n                return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index\r\n            });\r\n            var getItemCount = function() {\r\n                return groupCount ? _this2.itemsCount() : _this2._items.length\r\n            };\r\n            var oldItemCount = getItemCount();\r\n            (0, _array_utils.applyBatch)({\r\n                keyInfo: keyInfo,\r\n                data: this._items,\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            (0, _array_utils.applyBatch)({\r\n                keyInfo: keyInfo,\r\n                data: dataSource.items(),\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\r\n                this._skipCorrection += getItemCount() - oldItemCount\r\n            }\r\n            changes.splice(0, changes.length)\r\n        },\r\n        _handlePush: function(changes) {\r\n            this.push(changes, true)\r\n        },\r\n        _handleChanging: function(e) {\r\n            this.changing.fire(e);\r\n            this._applyBatch(e.changes)\r\n        },\r\n        _needCleanCacheByOperation: function(operationType, remoteOperations) {\r\n            var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\r\n            var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\r\n            var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\r\n            return currentOperationTypes.some(function(operationType) {\r\n                return remoteOperations[operationType]\r\n            })\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var that = this;\r\n            var cachedStoreData = that._cachedStoreData;\r\n            var cachedPagingData = that._cachedPagingData;\r\n            var cachedPagesData = that._cachedPagesData;\r\n            if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\r\n                options.remoteOperations = {\r\n                    filtering: options.remoteOperations.filtering\r\n                }\r\n            }\r\n            if (operationTypes.fullReload) {\r\n                cachedStoreData = void 0;\r\n                cachedPagingData = void 0;\r\n                cachedPagesData = createEmptyPagesData()\r\n            } else {\r\n                if (operationTypes.reload) {\r\n                    cachedPagingData = void 0;\r\n                    cachedPagesData = createEmptyPagesData()\r\n                } else {\r\n                    if (operationTypes.take || operationTypes.groupExpanding) {\r\n                        cachedPagesData = createEmptyPagesData()\r\n                    }\r\n                }(0, _iterator.each)(operationTypes, function(operationType, value) {\r\n                    if (value && that._needCleanCacheByOperation(operationType, options.remoteOperations)) {\r\n                        cachedStoreData = void 0;\r\n                        cachedPagingData = void 0\r\n                    }\r\n                })\r\n            }\r\n            if (cachedPagingData) {\r\n                options.remoteOperations.paging = false\r\n            }\r\n            options.cachedStoreData = cachedStoreData;\r\n            options.cachedPagingData = cachedPagingData;\r\n            options.cachedPagesData = cachedPagesData;\r\n            if (!options.isCustomLoading) {\r\n                that._cachedStoreData = cachedStoreData;\r\n                that._cachedPagingData = cachedPagingData;\r\n                that._cachedPagesData = cachedPagesData\r\n            }\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var lastLoadOptions = that._lastLoadOptions;\r\n            that.customizeStoreLoadOptions.fire(options);\r\n            options.delay = this.option(\"loadingTimeout\");\r\n            options.originalStoreLoadOptions = options.storeLoadOptions;\r\n            options.remoteOperations = (0, _extend.extend)({}, this.remoteOperations());\r\n            var isFullReload = !that.isLoaded() && !that._isRefreshing;\r\n            if (that.option(\"integrationOptions.renderedOnServer\") && !that.isLoaded()) {\r\n                options.delay = void 0\r\n            }\r\n            var loadOptions = (0, _extend.extend)({\r\n                pageIndex: that.pageIndex()\r\n            }, options.storeLoadOptions);\r\n            var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\r\n            that._customizeRemoteOperations(options, operationTypes);\r\n            if (!options.isCustomLoading) {\r\n                var isRefreshing = that._isRefreshing;\r\n                options.pageIndex = dataSource.pageIndex();\r\n                options.lastLoadOptions = loadOptions;\r\n                options.operationTypes = operationTypes;\r\n                that._loadingOperationTypes = operationTypes;\r\n                that._isRefreshing = true;\r\n                (0, _deferred.when)(isRefreshing || that._isRefreshed || that.refresh(options, operationTypes)).done(function() {\r\n                    if (that._lastOperationId === options.operationId) {\r\n                        that._isRefreshed = true;\r\n                        that.load().always(function() {\r\n                            that._isRefreshed = false\r\n                        })\r\n                    }\r\n                }).fail(function() {\r\n                    dataSource.cancel(options.operationId)\r\n                }).always(function() {\r\n                    that._isRefreshing = false\r\n                });\r\n                dataSource.cancel(that._lastOperationId);\r\n                that._lastOperationId = options.operationId;\r\n                if (that._isRefreshing) {\r\n                    dataSource.cancel(that._lastOperationId)\r\n                }\r\n            }\r\n            this._handleDataLoadingCore(options)\r\n        },\r\n        _handleDataLoadingCore: function(options) {\r\n            var remoteOperations = options.remoteOperations;\r\n            options.loadOptions = {};\r\n            var cachedExtra = options.cachedPagesData.extra;\r\n            var localLoadOptionNames = {\r\n                filter: !remoteOperations.filtering,\r\n                sort: !remoteOperations.sorting,\r\n                group: !remoteOperations.grouping,\r\n                summary: !remoteOperations.summary,\r\n                skip: !remoteOperations.paging,\r\n                take: !remoteOperations.paging,\r\n                requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\r\n            };\r\n            (0, _iterator.each)(options.storeLoadOptions, function(optionName, optionValue) {\r\n                if (localLoadOptionNames[optionName]) {\r\n                    options.loadOptions[optionName] = optionValue;\r\n                    delete options.storeLoadOptions[optionName]\r\n                }\r\n            });\r\n            if (cachedExtra) {\r\n                options.extra = cachedExtra\r\n            }\r\n            options.data = getPageDataFromCache(options) || options.cachedStoreData\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var _this3 = this;\r\n            var loadOptions = options.loadOptions;\r\n            var localPaging = options.remoteOperations && !options.remoteOperations.paging;\r\n            var cachedPagesData = options.cachedPagesData;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\r\n            var needPageCache = needCache && !options.isCustomLoading && cachedPagesData && (!localPaging || storeLoadOptions.group) && !this.option(\"legacyRendering\");\r\n            var needPagingCache = needCache && localPaging;\r\n            var needStoreCache = needPagingCache && !options.isCustomLoading;\r\n            if (!loadOptions) {\r\n                this._dataSource.cancel(options.operationId);\r\n                return\r\n            }\r\n            if (options.lastLoadOptions) {\r\n                this._lastLoadOptions = options.lastLoadOptions;\r\n                Object.keys(options.operationTypes).forEach(function(operationType) {\r\n                    _this3._lastOperationTypes[operationType] = _this3._lastOperationTypes[operationType] || options.operationTypes[operationType]\r\n                })\r\n            }\r\n            if (localPaging) {\r\n                options.skip = loadOptions.skip;\r\n                options.take = loadOptions.take;\r\n                delete loadOptions.skip;\r\n                delete loadOptions.take\r\n            }\r\n            if (loadOptions.group) {\r\n                loadOptions.group = options.group || loadOptions.group\r\n            }\r\n            var groupCount = _uiData_grid.default.normalizeSortingInfo(storeLoadOptions.group || loadOptions.group).length;\r\n            if (!needPageCache || !getPageDataFromCache(options)) {\r\n                if (needPagingCache && options.cachedPagingData) {\r\n                    options.data = cloneItems(options.cachedPagingData, groupCount)\r\n                } else {\r\n                    if (needStoreCache) {\r\n                        if (!this._cachedStoreData) {\r\n                            this._cachedStoreData = cloneItems(options.data, _uiData_grid.default.normalizeSortingInfo(storeLoadOptions.group).length)\r\n                        } else {\r\n                            if (options.mergeStoreLoadData) {\r\n                                options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data)\r\n                            }\r\n                        }\r\n                    }\r\n                    new _array_store.default(options.data).load(loadOptions).done(function(data) {\r\n                        options.data = data;\r\n                        if (needStoreCache) {\r\n                            _this3._cachedPagingData = cloneItems(options.data, groupCount)\r\n                        }\r\n                    }).fail(function(error) {\r\n                        options.data = (new _deferred.Deferred).reject(error)\r\n                    })\r\n                }\r\n                if (loadOptions.requireTotalCount && localPaging) {\r\n                    options.extra = (0, _type.isPlainObject)(options.extra) ? options.extra : {};\r\n                    options.extra.totalCount = options.data.length\r\n                }\r\n                if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\r\n                    options.extra.totalCount = -1\r\n                }\r\n                this._handleDataLoadedCore(options);\r\n                if (needPageCache) {\r\n                    cachedPagesData.extra = cachedPagesData.extra || (0, _extend.extend)({}, options.extra);\r\n                    (0, _deferred.when)(options.data).done(function(data) {\r\n                        setPageDataToCache(options, cloneItems(data, groupCount))\r\n                    })\r\n                }\r\n            }\r\n            options.storeLoadOptions = options.originalStoreLoadOptions\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\r\n                if (void 0 !== options.skip) {\r\n                    options.data = options.data.slice(options.skip)\r\n                }\r\n                if (void 0 !== options.take) {\r\n                    options.data = options.data.slice(0, options.take)\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleLoadError: function(error) {\r\n            this.loadError.fire(error);\r\n            this.changed.fire({\r\n                changeType: \"loadError\",\r\n                error: error\r\n            })\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var that = this;\r\n            var currentTotalCount;\r\n            var dataSource = that._dataSource;\r\n            var isLoading = false;\r\n            var itemsCount = that.itemsCount();\r\n            that._isLastPage = !itemsCount || !that.pageSize() || itemsCount < that.pageSize();\r\n            if (that._isLastPage) {\r\n                that._hasLastPage = true\r\n            }\r\n            if (dataSource.totalCount() >= 0) {\r\n                if (dataSource.pageIndex() >= that.pageCount()) {\r\n                    dataSource.pageIndex(that.pageCount() - 1);\r\n                    that.pageIndex(dataSource.pageIndex());\r\n                    that.resetPagesCache();\r\n                    dataSource.load();\r\n                    isLoading = true\r\n                }\r\n            } else {\r\n                if (!args || (0, _type.isDefined)(args.changeType)) {\r\n                    currentTotalCount = dataSource.pageIndex() * that.pageSize() + itemsCount;\r\n                    that._currentTotalCount = Math.max(that._currentTotalCount, currentTotalCount);\r\n                    if (0 === itemsCount && dataSource.pageIndex() >= that.pageCount()) {\r\n                        dataSource.pageIndex(that.pageCount() - 1);\r\n                        if (\"infinite\" !== that.option(\"scrolling.mode\")) {\r\n                            dataSource.load();\r\n                            isLoading = true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!isLoading) {\r\n                that._operationTypes = that._lastOperationTypes;\r\n                that._lastOperationTypes = {};\r\n                that.component._optionCache = {};\r\n                that.changed.fire(args);\r\n                that.component._optionCache = void 0\r\n            }\r\n        },\r\n        _scheduleCustomLoadCallbacks: function(deferred) {\r\n            var that = this;\r\n            that._isCustomLoading = true;\r\n            deferred.always(function() {\r\n                that._isCustomLoading = false\r\n            })\r\n        },\r\n        loadingOperationTypes: function() {\r\n            return this._loadingOperationTypes\r\n        },\r\n        operationTypes: function() {\r\n            return this._operationTypes\r\n        },\r\n        lastLoadOptions: function() {\r\n            return this._lastLoadOptions || {}\r\n        },\r\n        isLastPage: function() {\r\n            return this._isLastPage\r\n        },\r\n        totalCount: function() {\r\n            return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._skipCorrection)\r\n        },\r\n        itemsCount: function() {\r\n            return this._dataSource.items().length\r\n        },\r\n        totalItemsCount: function() {\r\n            return this.totalCount()\r\n        },\r\n        pageSize: function() {\r\n            var dataSource = this._dataSource;\r\n            if (!arguments.length && !dataSource.paginate()) {\r\n                return 0\r\n            }\r\n            return dataSource.pageSize.apply(dataSource, arguments)\r\n        },\r\n        pageCount: function() {\r\n            var that = this;\r\n            var count = that.totalItemsCount() - that._skipCorrection;\r\n            var pageSize = that.pageSize();\r\n            if (pageSize && count > 0) {\r\n                return Math.max(1, Math.ceil(count / pageSize))\r\n            }\r\n            return 1\r\n        },\r\n        hasKnownLastPage: function() {\r\n            return this._hasLastPage || this._dataSource.totalCount() >= 0\r\n        },\r\n        loadFromStore: function(loadOptions, store) {\r\n            var dataSource = this._dataSource;\r\n            var d = new _deferred.Deferred;\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            store = store || dataSource.store();\r\n            store.load(loadOptions).done(function(data, extra) {\r\n                if (data && !Array.isArray(data) && Array.isArray(data.data)) {\r\n                    extra = data;\r\n                    data = data.data\r\n                }\r\n                d.resolve(data, extra)\r\n            }).fail(d.reject);\r\n            return d\r\n        },\r\n        isCustomLoading: function() {\r\n            return !!this._isCustomLoading\r\n        },\r\n        load: function(options) {\r\n            var _this4 = this;\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new _deferred.Deferred;\r\n            if (options) {\r\n                var store = dataSource.store();\r\n                var dataSourceLoadOptions = dataSource.loadOptions();\r\n                var loadResult = {\r\n                    storeLoadOptions: options,\r\n                    isCustomLoading: true\r\n                };\r\n                (0, _iterator.each)(store._customLoadOptions() || [], function(_, optionName) {\r\n                    if (!(optionName in loadResult.storeLoadOptions)) {\r\n                        loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName]\r\n                    }\r\n                });\r\n                this._isLoadingAll = options.isLoadingAll;\r\n                that._scheduleCustomLoadCallbacks(d);\r\n                dataSource._scheduleLoadCallbacks(d);\r\n                that._handleDataLoading(loadResult);\r\n                executeTask(function() {\r\n                    if (!dataSource.store()) {\r\n                        return d.reject(\"canceled\")\r\n                    }(0, _deferred.when)(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done(function(data, extra) {\r\n                        loadResult.data = data;\r\n                        loadResult.extra = extra || {};\r\n                        that._handleDataLoaded(loadResult);\r\n                        if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\r\n                            loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions)\r\n                        }(0, _deferred.when)(loadResult.data, loadResult.extra.totalCount).done(function(data, totalCount) {\r\n                            loadResult.extra.totalCount = totalCount;\r\n                            d.resolve(data, loadResult.extra)\r\n                        }).fail(d.reject)\r\n                    }).fail(d.reject)\r\n                }, that.option(\"loadingTimeout\"));\r\n                return d.fail(function() {\r\n                    that._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n                }).always(function() {\r\n                    _this4._isLoadingAll = false\r\n                }).promise()\r\n            } else {\r\n                return dataSource.load()\r\n            }\r\n        },\r\n        reload: function(full) {\r\n            return full ? this._dataSource.reload() : this._dataSource.load()\r\n        },\r\n        getCachedStoreData: function() {\r\n            return this._cachedStoreData\r\n        }\r\n    }\r\n}());\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.editing.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _array_utils = require(\"../../data/array_utils\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _dialog = require(\"../dialog\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\nvar _popup = _interopRequireDefault(require(\"../popup\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _form = _interopRequireDefault(require(\"../form\"));\r\nvar _hold = _interopRequireDefault(require(\"../../events/hold\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar iconUtils = _interopRequireWildcard(require(\"../../core/utils/icon\"));\r\nvar _ui = _interopRequireDefault(require(\"../scroll_view/ui.scrollable\"));\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cacheBabelInterop = new WeakMap;\r\n    var cacheNodeInterop = new WeakMap;\r\n    return (_getRequireWildcardCache = function(nodeInterop) {\r\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop\r\n    })(nodeInterop)\r\n}\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) {\r\n    if (!nodeInterop && obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache(nodeInterop);\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (\"default\" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n    var keys = Object.keys(object);\r\n    if (Object.getOwnPropertySymbols) {\r\n        var symbols = Object.getOwnPropertySymbols(object);\r\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\r\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable\r\n        })), keys.push.apply(keys, symbols)\r\n    }\r\n    return keys\r\n}\r\n\r\nfunction _objectSpread(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = null != arguments[i] ? arguments[i] : {};\r\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\r\n            _defineProperty(target, key, source[key])\r\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\r\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\r\n        })\r\n    }\r\n    return target\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar READONLY_CLASS = \"readonly\";\r\nvar EDIT_POPUP_CLASS = \"edit-popup\";\r\nvar FORM_BUTTONS_CONTAINER_CLASS = \"form-buttons-container\";\r\nvar ADD_ROW_BUTTON_CLASS = \"addrow-button\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar LINK_CLASS = \"dx-link\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_SELECTED = \"dx-selection\";\r\nvar EDIT_ROW = \"dx-edit-row\";\r\nvar EDIT_BUTTON_CLASS = \"dx-edit-button\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_EDIT_WITH_ICONS_CLASS = COMMAND_EDIT_CLASS + \"-with-icons\";\r\nvar SCROLLABLE_CONTAINER_CLASS = \"dx-scrollable-container\";\r\nvar BUTTON_CLASS = \"dx-button\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar ROW_REMOVED = \"dx-row-removed\";\r\nvar ROW_INSERTED = \"dx-row-inserted\";\r\nvar ROW_MODIFIED = \"dx-row-modified\";\r\nvar CELL_MODIFIED = \"dx-cell-modified\";\r\nvar EDITING_NAMESPACE = \"dxDataGridEditing\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar FOCUSABLE_ELEMENT_SELECTOR = \"[tabindex], \" + EDITORS_INPUT_SELECTOR;\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar DATA_EDIT_DATA_INSERT_TYPE = \"insert\";\r\nvar DATA_EDIT_DATA_UPDATE_TYPE = \"update\";\r\nvar DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nvar DEFAULT_START_EDIT_ACTION = \"click\";\r\nvar EDIT_MODES = [EDIT_MODE_BATCH, EDIT_MODE_ROW, EDIT_MODE_CELL, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nvar ROW_BASED_MODES = [EDIT_MODE_ROW, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nvar CELL_BASED_MODES = [EDIT_MODE_BATCH, EDIT_MODE_CELL];\r\nvar FORM_BASED_MODES = [EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nvar MODES_WITH_DELAYED_FOCUS = [EDIT_MODE_ROW, EDIT_MODE_FORM];\r\nvar TARGET_COMPONENT_NAME = \"targetComponent\";\r\nvar EDIT_LINK_CLASS = {\r\n    save: \"dx-link-save\",\r\n    cancel: \"dx-link-cancel\",\r\n    edit: \"dx-link-edit\",\r\n    undelete: \"dx-link-undelete\",\r\n    \"delete\": \"dx-link-delete\",\r\n    add: \"dx-link-add\"\r\n};\r\nvar EDIT_ICON_CLASS = {\r\n    save: \"save\",\r\n    cancel: \"revert\",\r\n    edit: \"edit\",\r\n    undelete: \"revert\",\r\n    \"delete\": \"trash\",\r\n    add: \"add\"\r\n};\r\nvar METHOD_NAMES = {\r\n    edit: \"editRow\",\r\n    \"delete\": \"deleteRow\",\r\n    undelete: \"undeleteRow\",\r\n    save: \"saveEditData\",\r\n    cancel: \"cancelEditData\",\r\n    add: \"addRowByRowIndex\"\r\n};\r\nvar ACTION_OPTION_NAMES = {\r\n    add: \"allowAdding\",\r\n    edit: \"allowUpdating\",\r\n    \"delete\": \"allowDeleting\"\r\n};\r\nvar BUTTON_NAMES = [\"edit\", \"save\", \"cancel\", \"delete\", \"undelete\"];\r\nvar EDITING_POPUP_OPTION_NAME = \"editing.popup\";\r\nvar EDITING_CHANGES_OPTION_NAME = \"editing.changes\";\r\nvar EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nvar EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nvar createFailureHandler = function(deferred) {\r\n    return function(arg) {\r\n        var error = arg instanceof Error ? arg : new Error(arg && String(arg) || \"Unknown error\");\r\n        deferred.reject(error)\r\n    }\r\n};\r\nvar _getEditMode = function(that) {\r\n    var editMode = that.option(\"editing.mode\");\r\n    if (EDIT_MODES.indexOf(editMode) !== -1) {\r\n        return editMode\r\n    }\r\n    return EDIT_MODE_ROW\r\n};\r\nvar _isRowEditMode = function(that) {\r\n    var editMode = _getEditMode(that);\r\n    return ROW_BASED_MODES.indexOf(editMode) !== -1\r\n};\r\nvar isEditingCell = function(isEditRow, cellOptions) {\r\n    return cellOptions.isEditing || isEditRow && cellOptions.column.allowEditing\r\n};\r\nvar isEditingOrShowEditorAlwaysDataCell = function(isEditRow, cellOptions) {\r\n    var isCommandCell = !!cellOptions.column.command;\r\n    var isEditing = isEditingCell(isEditRow, cellOptions);\r\n    var isEditorCell = !isCommandCell && (isEditing || cellOptions.column.showEditorAlways);\r\n    return \"data\" === cellOptions.rowType && isEditorCell\r\n};\r\nvar EditingController = _uiGrid_core.default.ViewController.inherit(function() {\r\n    var getDefaultEditorTemplate = function(that) {\r\n        return function(container, options) {\r\n            var $editor = (0, _renderer.default)(\"<div>\").appendTo(container);\r\n            that.getController(\"editorFactory\").createEditor($editor, (0, _extend.extend)({}, options.column, {\r\n                value: options.value,\r\n                setValue: options.setValue,\r\n                row: options.row,\r\n                parentType: \"dataRow\",\r\n                width: null,\r\n                readOnly: !options.setValue,\r\n                isOnForm: options.isOnForm,\r\n                id: options.id\r\n            }))\r\n        }\r\n    };\r\n    var getEditingTexts = function(options) {\r\n        var editingTexts = options.component.option(\"editing.texts\") || {};\r\n        return {\r\n            save: editingTexts.saveRowChanges,\r\n            cancel: editingTexts.cancelRowChanges,\r\n            edit: editingTexts.editRow,\r\n            undelete: editingTexts.undeleteRow,\r\n            \"delete\": editingTexts.deleteRow,\r\n            add: editingTexts.addRowToNode\r\n        }\r\n    };\r\n    var getButtonIndex = function(buttons, name) {\r\n        var result = -1;\r\n        buttons.some(function(button, index) {\r\n            if (getButtonName(button) === name) {\r\n                result = index;\r\n                return true\r\n            }\r\n        });\r\n        return result\r\n    };\r\n\r\n    function getButtonName(button) {\r\n        return (0, _type.isObject)(button) ? button.name : button\r\n    }\r\n    var getEditorType = function(item) {\r\n        var column = item.column;\r\n        return item.isCustomEditorType ? item.editorType : column.formItem && column.formItem.editorType\r\n    };\r\n    var forEachFormItems = function forEachFormItems(items, callBack) {\r\n        items.forEach(function(item) {\r\n            if (item.items || item.tabs) {\r\n                forEachFormItems(item.items || item.tabs, callBack)\r\n            } else {\r\n                callBack(item)\r\n            }\r\n        })\r\n    };\r\n    return {\r\n        init: function() {\r\n            var that = this;\r\n            that._columnsController = that.getController(\"columns\");\r\n            that._dataController = that.getController(\"data\");\r\n            that._rowsView = that.getView(\"rowsView\");\r\n            that._editForm = null;\r\n            that._updateEditFormDeferred = null;\r\n            that._lastOperation = null;\r\n            if (that._deferreds) {\r\n                that._deferreds.forEach(function(d) {\r\n                    return d.reject(\"cancel\")\r\n                })\r\n            }\r\n            that._deferreds = [];\r\n            if (!that._dataChangedHandler) {\r\n                that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n                that._dataController.changed.add(that._dataChangedHandler)\r\n            }\r\n            if (!that._saveEditorHandler) {\r\n                that.createAction(\"onInitNewRow\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onRowInserting\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onRowInserted\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onEditingStart\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onRowUpdating\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onRowUpdated\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onRowRemoving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onRowRemoved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onSaved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onSaving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onEditCanceling\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                that.createAction(\"onEditCanceled\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                var $pointerDownTarget;\r\n                var isResizing;\r\n                that._pointerUpEditorHandler = function() {\r\n                    var _that$getController;\r\n                    isResizing = null === (_that$getController = that.getController(\"columnsResizer\")) || void 0 === _that$getController ? void 0 : _that$getController.isResizing()\r\n                };\r\n                that._pointerDownEditorHandler = function(e) {\r\n                    return $pointerDownTarget = (0, _renderer.default)(e.target)\r\n                };\r\n                that._saveEditorHandler = that.createAction(function(e) {\r\n                    var event = e.event;\r\n                    var $target = (0, _renderer.default)(event.target);\r\n                    var targetComponent = event[TARGET_COMPONENT_NAME];\r\n                    if ($pointerDownTarget && $pointerDownTarget.is(\"input\") && !$pointerDownTarget.is($target)) {\r\n                        return\r\n                    }\r\n\r\n                    function checkEditorPopup($element) {\r\n                        return $element && !!$element.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length\r\n                    }\r\n                    if (!_isRowEditMode(that) && !that._editCellInProgress) {\r\n                        var isEditorPopup = checkEditorPopup($target) || checkEditorPopup(null === targetComponent || void 0 === targetComponent ? void 0 : targetComponent.$element());\r\n                        var isDomElement = !!$target.closest((0, _window.getWindow)().document).length;\r\n                        var isAnotherComponent = targetComponent && !targetComponent._disposed && targetComponent !== that.component;\r\n                        var isAddRowButton = !!$target.closest(\".\".concat(that.addWidgetPrefix(ADD_ROW_BUTTON_CLASS))).length;\r\n                        var isFocusOverlay = $target.hasClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n                        var isCellEditMode = _getEditMode(that) === EDIT_MODE_CELL;\r\n                        if (!isResizing && !isEditorPopup && !isFocusOverlay && !(isAddRowButton && isCellEditMode && that.isEditing()) && (isDomElement || isAnotherComponent)) {\r\n                            that._closeEditItem.bind(that)($target)\r\n                        }\r\n                    }\r\n                });\r\n                _events_engine.default.on(_dom_adapter.default.getDocument(), _pointer.default.up, that._pointerUpEditorHandler);\r\n                _events_engine.default.on(_dom_adapter.default.getDocument(), _pointer.default.down, that._pointerDownEditorHandler);\r\n                _events_engine.default.on(_dom_adapter.default.getDocument(), _click.name, that._saveEditorHandler)\r\n            }\r\n            that._updateEditColumn();\r\n            that._updateEditButtons();\r\n            if (!this._internalState) {\r\n                this._internalState = []\r\n            }\r\n            this.component._optionsByReference[EDITING_EDITROWKEY_OPTION_NAME] = true;\r\n            this.component._optionsByReference[EDITING_CHANGES_OPTION_NAME] = true\r\n        },\r\n        getChanges: function() {\r\n            return this.option(EDITING_CHANGES_OPTION_NAME)\r\n        },\r\n        resetChanges: function() {\r\n            var changes = this.getChanges();\r\n            var needReset = null === changes || void 0 === changes ? void 0 : changes.length;\r\n            if (needReset) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, [])\r\n            }\r\n        },\r\n        _getInternalData: function(key) {\r\n            return this._internalState.filter(function(item) {\r\n                return (0, _common.equalByValue)(item.key, key)\r\n            })[0]\r\n        },\r\n        _addInternalData: function(params) {\r\n            var internalData = this._getInternalData(params.key);\r\n            if (internalData) {\r\n                return (0, _extend.extend)(internalData, params)\r\n            }\r\n            this._internalState.push(params);\r\n            return params\r\n        },\r\n        _getOldData: function(key) {\r\n            var _this$_getInternalDat;\r\n            return null === (_this$_getInternalDat = this._getInternalData(key)) || void 0 === _this$_getInternalDat ? void 0 : _this$_getInternalDat.oldData\r\n        },\r\n        getUpdatedData: function(data) {\r\n            var key = this._dataController.keyOf(data);\r\n            var changes = this.getChanges();\r\n            var editIndex = _uiGrid_core2.default.getIndexByKey(key, changes);\r\n            if (changes[editIndex]) {\r\n                return (0, _array_utils.createObjectWithChanges)(data, changes[editIndex].data)\r\n            }\r\n            return data\r\n        },\r\n        getInsertedData: function() {\r\n            return this.getChanges().filter(function(change) {\r\n                return change.data && change.type === DATA_EDIT_DATA_INSERT_TYPE\r\n            }).map(function(change) {\r\n                return change.data\r\n            })\r\n        },\r\n        getRemovedData: function() {\r\n            var _this = this;\r\n            return this.getChanges().filter(function(change) {\r\n                return _this._getOldData(change.key) && change.type === DATA_EDIT_DATA_REMOVE_TYPE\r\n            }).map(function(change) {\r\n                return _this._getOldData(change.key)\r\n            })\r\n        },\r\n        _fireDataErrorOccurred: function(arg) {\r\n            if (\"cancel\" === arg) {\r\n                return\r\n            }\r\n            var $popupContent = this.getPopupContent();\r\n            this._dataController.dataErrorOccurred.fire(arg, $popupContent)\r\n        },\r\n        _needToCloseEditableCell: function($targetElement) {\r\n            var $element = this.component.$element();\r\n            var result = this.isEditing();\r\n            var isCurrentComponentElement = !$element || !!$targetElement.closest($element).length;\r\n            if (isCurrentComponentElement) {\r\n                var isDataRow = $targetElement.closest(\".\" + DATA_ROW_CLASS).length;\r\n                if (isDataRow) {\r\n                    var rowsView = this.getView(\"rowsView\");\r\n                    var $targetCell = $targetElement.closest(\".\" + ROW_CLASS + \"> td\");\r\n                    var rowIndex = rowsView.getRowIndex($targetCell.parent());\r\n                    var columnIndex = rowsView.getCellElements(rowIndex).index($targetCell);\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    var allowEditing = visibleColumns[columnIndex] && visibleColumns[columnIndex].allowEditing;\r\n                    result = result && !allowEditing && !this.isEditCell(rowIndex, columnIndex)\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _closeEditItem: function($targetElement) {\r\n            if (this._needToCloseEditableCell($targetElement)) {\r\n                this.closeEditCell()\r\n            }\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var editForm = this._editForm;\r\n            if (\"refresh\" === args.changeType && _getEditMode(this) === EDIT_MODE_POPUP && editForm && editForm.option(\"visible\")) {\r\n                this._repaintEditPopup()\r\n            }\r\n        },\r\n        _isDefaultButtonVisible: function(button, options) {\r\n            var result = true;\r\n            var isRowMode = _isRowEditMode(this);\r\n            var isBatchMode = _getEditMode(this) === EDIT_MODE_BATCH;\r\n            var isEditRow = options.row && options.row.rowIndex === this._getVisibleEditRowIndex() && isRowMode;\r\n            switch (button.name) {\r\n                case \"edit\":\r\n                    result = !isEditRow && this.allowUpdating(options) && isRowMode;\r\n                    break;\r\n                case \"save\":\r\n                case \"cancel\":\r\n                    result = isEditRow;\r\n                    break;\r\n                case \"delete\":\r\n                    result = !isEditRow && this.allowDeleting(options) && (!isBatchMode || !options.row.removed);\r\n                    break;\r\n                case \"undelete\":\r\n                    result = isBatchMode && this.allowDeleting(options) && options.row.removed\r\n            }\r\n            return result\r\n        },\r\n        _isButtonVisible: function(button, options) {\r\n            var visible = button.visible;\r\n            if (!(0, _type.isDefined)(visible)) {\r\n                return this._isDefaultButtonVisible(button, options)\r\n            }\r\n            return (0, _type.isFunction)(visible) ? visible.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : visible\r\n        },\r\n        _getButtonConfig: function(button, options) {\r\n            var _this2 = this;\r\n            var config = (0, _type.isObject)(button) ? button : {};\r\n            var buttonName = getButtonName(button);\r\n            var editingTexts = getEditingTexts(options);\r\n            var methodName = METHOD_NAMES[buttonName];\r\n            var editingOptions = this.option(\"editing\");\r\n            var actionName = ACTION_OPTION_NAMES[buttonName];\r\n            var allowAction = actionName ? editingOptions[actionName] : true;\r\n            return (0, _extend.extend)({\r\n                name: buttonName,\r\n                text: editingTexts[buttonName],\r\n                cssClass: EDIT_LINK_CLASS[buttonName],\r\n                onClick: function(e) {\r\n                    var event = e.event;\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    setTimeout(function() {\r\n                        options.row && allowAction && _this2[methodName] && _this2[methodName](options.row.rowIndex)\r\n                    })\r\n                }\r\n            }, config)\r\n        },\r\n        _getEditingButtons: function(options) {\r\n            var _this3 = this;\r\n            var buttonIndex;\r\n            var haveCustomButtons = !!options.column.buttons;\r\n            var buttons = (options.column.buttons || []).slice();\r\n            if (haveCustomButtons) {\r\n                buttonIndex = getButtonIndex(buttons, \"edit\");\r\n                if (buttonIndex >= 0) {\r\n                    if (getButtonIndex(buttons, \"save\") < 0) {\r\n                        buttons.splice(buttonIndex + 1, 0, \"save\")\r\n                    }\r\n                    if (getButtonIndex(buttons, \"cancel\") < 0) {\r\n                        buttons.splice(getButtonIndex(buttons, \"save\") + 1, 0, \"cancel\")\r\n                    }\r\n                }\r\n                buttonIndex = getButtonIndex(buttons, \"delete\");\r\n                if (buttonIndex >= 0 && getButtonIndex(buttons, \"undelete\") < 0) {\r\n                    buttons.splice(buttonIndex + 1, 0, \"undelete\")\r\n                }\r\n            } else {\r\n                buttons = BUTTON_NAMES.slice()\r\n            }\r\n            return buttons.map(function(button) {\r\n                return _this3._getButtonConfig(button, options)\r\n            })\r\n        },\r\n        _renderEditingButtons: function($container, buttons, options) {\r\n            var _this4 = this;\r\n            buttons.forEach(function(button) {\r\n                if (_this4._isButtonVisible(button, options)) {\r\n                    _this4._createButton($container, button, options)\r\n                }\r\n            })\r\n        },\r\n        _getEditCommandCellTemplate: function() {\r\n            var _this5 = this;\r\n            return function(container, options) {\r\n                var $container = (0, _renderer.default)(container);\r\n                if (\"data\" === options.rowType) {\r\n                    var buttons = _this5._getEditingButtons(options);\r\n                    _this5._renderEditingButtons($container, buttons, options);\r\n                    options.watch && options.watch(function() {\r\n                        return buttons.map(function(button) {\r\n                            return _this5._isButtonVisible(button, options)\r\n                        })\r\n                    }, function() {\r\n                        $container.empty();\r\n                        _this5._renderEditingButtons($container, buttons, options)\r\n                    })\r\n                } else {\r\n                    _uiGrid_core2.default.setEmptyText($container)\r\n                }\r\n            }\r\n        },\r\n        isRowEditMode: function() {\r\n            return _isRowEditMode(this)\r\n        },\r\n        isFormEditMode: function() {\r\n            var editMode = _getEditMode(this);\r\n            return FORM_BASED_MODES.indexOf(editMode) !== -1\r\n        },\r\n        isCellOrBatchEditMode: function() {\r\n            var editMode = this.getEditMode();\r\n            return CELL_BASED_MODES.indexOf(editMode) !== -1\r\n        },\r\n        getEditMode: function() {\r\n            return _getEditMode(this)\r\n        },\r\n        getFirstEditableColumnIndex: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var firstFormItem = this._firstFormItem;\r\n            var columnIndex;\r\n            if (_getEditMode(this) === EDIT_MODE_FORM && firstFormItem) {\r\n                var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                var editRowIndex = this._dataController.getRowIndexByKey(editRowKey);\r\n                var $editFormElements = this._rowsView.getCellElements(editRowIndex);\r\n                columnIndex = this._rowsView._getEditFormEditorVisibleIndex($editFormElements, firstFormItem.column)\r\n            } else {\r\n                var visibleColumns = columnsController.getVisibleColumns();\r\n                (0, _iterator.each)(visibleColumns, function(index, column) {\r\n                    if (column.allowEditing) {\r\n                        columnIndex = index;\r\n                        return false\r\n                    }\r\n                })\r\n            }\r\n            return columnIndex\r\n        },\r\n        getFirstEditableCellInRow: function(rowIndex) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            return rowsView && rowsView._getCellElement(rowIndex ? rowIndex : 0, this.getFirstEditableColumnIndex())\r\n        },\r\n        getFocusedCellInRow: function(rowIndex) {\r\n            return this.getFirstEditableCellInRow(rowIndex)\r\n        },\r\n        getIndexByKey: function(key, items) {\r\n            return _uiGrid_core2.default.getIndexByKey(key, items)\r\n        },\r\n        hasChanges: function(rowIndex) {\r\n            var changes = this.getChanges();\r\n            var result = false;\r\n            for (var i = 0; i < (null === changes || void 0 === changes ? void 0 : changes.length); i++) {\r\n                if (changes[i].type && (!(0, _type.isDefined)(rowIndex) || this._dataController.getRowIndexByKey(changes[i].key) === rowIndex)) {\r\n                    result = true;\r\n                    break\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        dispose: function() {\r\n            this.callBase();\r\n            clearTimeout(this._inputFocusTimeoutID);\r\n            _events_engine.default.off(_dom_adapter.default.getDocument(), _pointer.default.up, this._pointerUpEditorHandler);\r\n            _events_engine.default.off(_dom_adapter.default.getDocument(), _pointer.default.down, this._pointerDownEditorHandler);\r\n            _events_engine.default.off(_dom_adapter.default.getDocument(), _click.name, this._saveEditorHandler)\r\n        },\r\n        optionChanged: function(args) {\r\n            if (\"editing\" === args.name) {\r\n                var fullName = args.fullName;\r\n                var editPopup = this._editPopup;\r\n                if (fullName && 0 === fullName.indexOf(EDITING_POPUP_OPTION_NAME)) {\r\n                    if (editPopup) {\r\n                        var popupOptionName = fullName.slice(EDITING_POPUP_OPTION_NAME.length + 1);\r\n                        if (popupOptionName) {\r\n                            editPopup.option(popupOptionName, args.value)\r\n                        } else {\r\n                            editPopup.option(args.value)\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (editPopup && editPopup.option(\"visible\") && 0 === fullName.indexOf(\"editing.form\")) {\r\n                        this._repaintEditPopup()\r\n                    } else {\r\n                        if (fullName === EDITING_EDITROWKEY_OPTION_NAME) {\r\n                            this._handleEditRowKeyChange(args)\r\n                        } else {\r\n                            if (fullName === EDITING_EDITCOLUMNNAME_OPTION_NAME) {\r\n                                this._handleEditColumnNameChange(args)\r\n                            } else {\r\n                                if (fullName === EDITING_CHANGES_OPTION_NAME) {\r\n                                    this._handleChangesChange(args)\r\n                                } else {\r\n                                    this.init();\r\n                                    this.resetChanges();\r\n                                    this._resetEditColumnName();\r\n                                    this._resetEditRowKey()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                args.handled = true\r\n            } else {\r\n                this.callBase(args)\r\n            }\r\n        },\r\n        _handleEditRowKeyChange: function(args) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(args.value);\r\n            var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n            var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n            var columnIndex = this._getVisibleEditColumnIndex();\r\n            if (!this.isCellOrBatchEditMode()) {\r\n                if ((0, _type.isDefined)(args.value)) {\r\n                    if (args.value !== args.previousValue) {\r\n                        this._editRowFromOptionChanged(rowIndex, oldRowIndex)\r\n                    }\r\n                } else {\r\n                    this.cancelEditData()\r\n                }\r\n            } else {\r\n                if ((0, _type.isDefined)(args.value) && args.value !== args.previousValue) {\r\n                    this._editCellFromOptionChanged(columnIndex, columnIndex, oldRowIndex)\r\n                }\r\n            }\r\n        },\r\n        _handleEditColumnNameChange: function(args) {\r\n            var oldRowIndex = this._getVisibleEditRowIndex(args.previousValue);\r\n            if (this.isCellOrBatchEditMode() && oldRowIndex !== -1 && (0, _type.isDefined)(args.value) && args.value !== args.previousValue) {\r\n                var columnIndex = this._columnsController.getVisibleColumnIndex(args.value);\r\n                var oldColumnIndex = this._columnsController.getVisibleColumnIndex(args.previousValue);\r\n                this._editCellFromOptionChanged(columnIndex, oldColumnIndex, oldRowIndex)\r\n            }\r\n        },\r\n        _handleChangesChange: function(args) {\r\n            var dataController = this._dataController;\r\n            if (!args.value.length && !args.previousValue.length) {\r\n                return\r\n            }\r\n            dataController.updateItems({\r\n                repaintChangesOnly: true\r\n            })\r\n        },\r\n        _editCellFromOptionChanged: function(columnIndex, oldColumnIndex, oldRowIndex) {\r\n            var _this6 = this;\r\n            var columns = this._columnsController.getVisibleColumns();\r\n            if (columnIndex > -1) {\r\n                (0, _common.deferRender)(function() {\r\n                    _this6._repaintEditCell(columns[columnIndex], columns[oldColumnIndex], oldRowIndex)\r\n                })\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"addRow\", \"deleteRow\", \"undeleteRow\", \"editRow\", \"editCell\", \"closeEditCell\", \"saveEditData\", \"cancelEditData\", \"hasEditData\"]\r\n        },\r\n        refresh: function(isPageChanged) {\r\n            var editMode = _getEditMode(this);\r\n            var needResetIndexes = editMode === EDIT_MODE_BATCH || isPageChanged && \"virtual\" !== this.option(\"scrolling.mode\");\r\n            if (!(0, _type.isDefined)(this._pageIndex)) {\r\n                return\r\n            }\r\n            if (!this.isCellOrBatchEditMode()) {\r\n                this.resetChanges();\r\n                this.init();\r\n                if ((0, _type.isDefined)(this.option(EDITING_EDITROWKEY_OPTION_NAME))) {\r\n                    this._resetEditRowKey()\r\n                }\r\n            } else {\r\n                if (needResetIndexes) {\r\n                    this._resetEditColumnName();\r\n                    this._resetEditRowKey()\r\n                }\r\n            }\r\n        },\r\n        isEditing: function() {\r\n            var isEditRowKeyDefined = (0, _type.isDefined)(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n            var isEditColumnNameDefined = (0, _type.isDefined)(this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME));\r\n            if (this.isCellOrBatchEditMode()) {\r\n                return isEditRowKeyDefined && isEditColumnNameDefined\r\n            }\r\n            return isEditRowKeyDefined\r\n        },\r\n        isEditRow: function(rowIndex) {\r\n            var editMode = _getEditMode(this);\r\n            return ROW_BASED_MODES.indexOf(editMode) !== -1 && this._isEditRowByIndex(rowIndex)\r\n        },\r\n        _setEditRowKey: function(value, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            } else {\r\n                this.option(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            }\r\n        },\r\n        _setEditRowKeyByIndex: function(rowIndex, silent) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            if (void 0 === key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            this._setEditRowKey(key, silent)\r\n        },\r\n        getEditRowIndex: function() {\r\n            return this._getVisibleEditRowIndex()\r\n        },\r\n        getEditFormRowIndex: function() {\r\n            var editMode = _getEditMode(this);\r\n            return editMode === EDIT_MODE_FORM || editMode === EDIT_MODE_POPUP ? this._getVisibleEditRowIndex() : -1\r\n        },\r\n        _isEditRowByIndex: function(rowIndex) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var isKeyEqual = (0, _type.isDefined)(key) && (0, _common.equalByValue)(this.option(EDITING_EDITROWKEY_OPTION_NAME), key);\r\n            if (isKeyEqual) {\r\n                return this._getVisibleEditRowIndex() === rowIndex\r\n            }\r\n            return isKeyEqual\r\n        },\r\n        isEditCell: function(visibleRowIndex, columnIndex) {\r\n            return this._isEditRowByIndex(visibleRowIndex) && this._getVisibleEditColumnIndex() === columnIndex\r\n        },\r\n        getPopupContent: function() {\r\n            var editMode = _getEditMode(this);\r\n            var popupVisible = this._editPopup && this._editPopup.option(\"visible\");\r\n            if (editMode === EDIT_MODE_POPUP && popupVisible) {\r\n                return this._$popupContent\r\n            }\r\n        },\r\n        getEditForm: function() {\r\n            return this._editForm\r\n        },\r\n        _needInsertItem: function(change, changeType) {\r\n            var that = this;\r\n            var dataSource = that._dataController.dataSource();\r\n            var scrollingMode = that.option(\"scrolling.mode\");\r\n            var pageIndex = dataSource.pageIndex();\r\n            var beginPageIndex = dataSource.beginPageIndex ? dataSource.beginPageIndex() : pageIndex;\r\n            var endPageIndex = dataSource.endPageIndex ? dataSource.endPageIndex() : pageIndex;\r\n            if (\"standard\" !== scrollingMode) {\r\n                switch (changeType) {\r\n                    case \"append\":\r\n                        return change.key.pageIndex === endPageIndex;\r\n                    case \"prepend\":\r\n                        return change.key.pageIndex === beginPageIndex;\r\n                    case \"refresh\":\r\n                        change.key.rowIndex = 0;\r\n                        change.key.dataRowIndex = 0;\r\n                        change.key.pageIndex = 0;\r\n                        break;\r\n                    default:\r\n                        return change.key.pageIndex >= beginPageIndex && change.key.pageIndex <= endPageIndex\r\n                }\r\n            }\r\n            return change.key.pageIndex === pageIndex\r\n        },\r\n        _generateNewItem: function(key) {\r\n            var item = {\r\n                key: key\r\n            };\r\n            if (key && key[INSERT_INDEX]) {\r\n                item[INSERT_INDEX] = key[INSERT_INDEX]\r\n            }\r\n            return item\r\n        },\r\n        _getLoadedRowIndexByInsertKey: function(items, change, key) {\r\n            var dataController = this._dataController;\r\n            var loadedRowIndexOffset = dataController.getRowIndexOffset(true);\r\n            var loadedRowIndex = key.dataRowIndex - loadedRowIndexOffset;\r\n            if (\"append\" === change.changeType) {\r\n                loadedRowIndex -= dataController.items(true).length;\r\n                if (change.removeCount) {\r\n                    loadedRowIndex += change.removeCount\r\n                }\r\n            }\r\n            for (var i = 0; i < loadedRowIndex; i++) {\r\n                if (items[i] && items[i][INSERT_INDEX]) {\r\n                    loadedRowIndex++\r\n                }\r\n            }\r\n            return loadedRowIndex\r\n        },\r\n        processItems: function(items, e) {\r\n            var _this7 = this;\r\n            var changeType = e.changeType;\r\n            this.update(changeType);\r\n            var changes = this.getChanges();\r\n            changes.forEach(function(change) {\r\n                var key = change.key;\r\n                if ((0, _type.isDefined)(key) && change.type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                    var loadedRowIndex = _this7._getLoadedRowIndexByInsertKey(items, e, key);\r\n                    var item = _this7._generateNewItem(key);\r\n                    if (loadedRowIndex >= 0 && _this7._needInsertItem(change, changeType, items, item)) {\r\n                        items.splice(key.dataRowIndex ? loadedRowIndex : 0, 0, item)\r\n                    }\r\n                }\r\n            });\r\n            return items\r\n        },\r\n        processDataItem: function(item, options, generateDataValues) {\r\n            var columns = options.visibleColumns;\r\n            var key = item.data[INSERT_INDEX] ? item.data.key : item.key;\r\n            var changes = this.getChanges();\r\n            var editIndex = _uiGrid_core2.default.getIndexByKey(key, changes);\r\n            item.isEditing = false;\r\n            if (editIndex >= 0) {\r\n                var editMode = _getEditMode(this);\r\n                var _changes$editIndex = changes[editIndex],\r\n                    data = _changes$editIndex.data,\r\n                    type = _changes$editIndex.type;\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        if (editMode === EDIT_MODE_POPUP) {\r\n                            item.visible = false\r\n                        }\r\n                        item.isNewRow = true;\r\n                        item.key = key;\r\n                        item.data = data;\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        item.modified = true;\r\n                        item.oldData = item.data;\r\n                        item.data = (0, _array_utils.createObjectWithChanges)(item.data, data);\r\n                        item.modifiedValues = generateDataValues(data, columns, true);\r\n                        break;\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        if (editMode === EDIT_MODE_BATCH) {\r\n                            item.data = (0, _array_utils.createObjectWithChanges)(item.data, data)\r\n                        }\r\n                        item.removed = true\r\n                }\r\n            }\r\n        },\r\n        _initNewRow: function(options) {\r\n            var _this8 = this;\r\n            this.executeAction(\"onInitNewRow\", options);\r\n            if (options.promise) {\r\n                var deferred = new _deferred.Deferred;\r\n                (0, _deferred.when)((0, _deferred.fromPromise)(options.promise)).done(deferred.resolve).fail(createFailureHandler(deferred)).fail(function(arg) {\r\n                    return _this8._fireDataErrorOccurred(arg)\r\n                });\r\n                return deferred\r\n            }\r\n        },\r\n        _getInsertKey: function(parentKey) {\r\n            var that = this;\r\n            var dataController = that._dataController;\r\n            var rows = dataController.items();\r\n            var editMode = _getEditMode(that);\r\n            var insertKey = {\r\n                parentKey: parentKey,\r\n                pageIndex: dataController.pageIndex(),\r\n                rowIndex: that._getInsertRowIndex(parentKey)\r\n            };\r\n            var row = rows[insertKey.rowIndex];\r\n            if (row && (!row.isEditing && \"detail\" === row.rowType || \"detailAdaptive\" === row.rowType)) {\r\n                insertKey.rowIndex++\r\n            }\r\n            insertKey.dataRowIndex = dataController.getRowIndexOffset() + rows.filter(function(row, index) {\r\n                return index < insertKey.rowIndex && (\"data\" === row.rowType && !row.isNewRow || \"group\" === row.rowType)\r\n            }).length;\r\n            if (editMode !== EDIT_MODE_BATCH) {\r\n                this._setEditRowKey(insertKey, true)\r\n            }\r\n            insertKey[INSERT_INDEX] = that._getInsertIndex();\r\n            return insertKey\r\n        },\r\n        _getInsertRowIndex: function(parentKey) {\r\n            var that = this;\r\n            var rowsView = that.getView(\"rowsView\");\r\n            var parentRowIndex = that._dataController.getRowIndexByKey(parentKey);\r\n            if (parentRowIndex >= 0) {\r\n                return parentRowIndex + 1\r\n            }\r\n            if (rowsView) {\r\n                return rowsView.getTopVisibleItemIndex(true)\r\n            }\r\n            return 0\r\n        },\r\n        _getInsertIndex: function() {\r\n            var maxInsertIndex = 0;\r\n            this.getChanges().forEach(function(editItem) {\r\n                if (editItem.type === DATA_EDIT_DATA_INSERT_TYPE && editItem.key[INSERT_INDEX] > maxInsertIndex) {\r\n                    maxInsertIndex = editItem.key[INSERT_INDEX]\r\n                }\r\n            });\r\n            return maxInsertIndex + 1\r\n        },\r\n        addRow: function(parentKey) {\r\n            var that = this;\r\n            var dataController = that._dataController;\r\n            var store = dataController.store();\r\n            var key = store && store.key();\r\n            var param = {\r\n                data: {}\r\n            };\r\n            var editMode = _getEditMode(that);\r\n            var oldEditRowIndex = that._getVisibleEditRowIndex();\r\n            var deferred = new _deferred.Deferred;\r\n            if (!store) {\r\n                dataController.fireError(\"E1052\", this.component.NAME);\r\n                return deferred.reject()\r\n            }\r\n            if (editMode === EDIT_MODE_CELL && that.hasChanges()) {\r\n                that.saveEditData().done(function() {\r\n                    if (!that.hasChanges()) {\r\n                        that.addRow(parentKey).done(deferred.resolve).fail(deferred.reject)\r\n                    } else {\r\n                        deferred.reject(\"cancel\")\r\n                    }\r\n                });\r\n                return deferred.promise()\r\n            }\r\n            that.refresh();\r\n            if (!that._allowRowAdding()) {\r\n                return deferred.reject(\"cancel\")\r\n            }\r\n            if (!key) {\r\n                param.data.__KEY__ = String(new _guid.default)\r\n            }(0, _deferred.when)(that._initNewRow(param, parentKey)).done(function() {\r\n                if (that._allowRowAdding()) {\r\n                    that._addRowCore(param.data, parentKey, oldEditRowIndex);\r\n                    deferred.resolve()\r\n                } else {\r\n                    deferred.reject(\"cancel\")\r\n                }\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _allowRowAdding: function() {\r\n            var that = this;\r\n            var editMode = _getEditMode(that);\r\n            var insertIndex = that._getInsertIndex();\r\n            if (editMode !== EDIT_MODE_BATCH && insertIndex > 1) {\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _addRowCore: function(data, parentKey, initialOldEditRowIndex) {\r\n            var that = this;\r\n            var oldEditRowIndex = that._getVisibleEditRowIndex();\r\n            var insertKey = that._getInsertKey(parentKey);\r\n            var editMode = _getEditMode(that);\r\n            that._addChange({\r\n                key: insertKey,\r\n                data: data,\r\n                type: DATA_EDIT_DATA_INSERT_TYPE\r\n            });\r\n            that._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: [initialOldEditRowIndex, oldEditRowIndex, insertKey.rowIndex]\r\n            });\r\n            if (editMode === EDIT_MODE_POPUP) {\r\n                that._showEditPopup(insertKey.rowIndex)\r\n            } else {\r\n                that._focusFirstEditableCellInRow(insertKey.rowIndex);\r\n            }\r\n            that._afterInsertRow({\r\n                key: insertKey,\r\n                data: data\r\n            })\r\n        },\r\n        _focusFirstEditableCellInRow: function(rowIndex) {\r\n            var that = this;\r\n            var $firstCell = that.getFirstEditableCellInRow(rowIndex);\r\n            that._editCellInProgress = true;\r\n            that._delayedInputFocus($firstCell, function() {\r\n                that._editCellInProgress = false;\r\n                var editRowIndex = rowIndex >= 0 ? rowIndex : 0;\r\n                var columnIndex = that.getFirstEditableColumnIndex();\r\n                columnIndex >= 0 && that.editCell(editRowIndex, columnIndex)\r\n            })\r\n        },\r\n        _isEditingStart: function(options) {\r\n            this.executeAction(\"onEditingStart\", options);\r\n            return options.cancel\r\n        },\r\n        _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n            var that = this;\r\n            if (_getEditMode(that) === EDIT_MODE_CELL && !item.isNewRow && that.hasChanges()) {\r\n                var d = new _deferred.Deferred;\r\n                that.saveEditData().always(function() {\r\n                    d.resolve(that.hasChanges())\r\n                });\r\n                return d\r\n            }\r\n        },\r\n        _beforeUpdateItems: function() {},\r\n        _getVisibleEditColumnIndex: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            if (!(0, _type.isDefined)(editColumnName)) {\r\n                return -1\r\n            }\r\n            return this._columnsController.getVisibleColumnIndex(editColumnName)\r\n        },\r\n        _setEditColumnNameByIndex: function(index, silent) {\r\n            var _visibleColumns$index;\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            this._setEditColumnName(null === (_visibleColumns$index = visibleColumns[index]) || void 0 === _visibleColumns$index ? void 0 : _visibleColumns$index.name, silent)\r\n        },\r\n        _setEditColumnName: function(name, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            } else {\r\n                this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            }\r\n        },\r\n        _resetEditColumnName: function() {\r\n            this._setEditColumnName(null, true)\r\n        },\r\n        _getEditColumn: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            return this._getColumnByName(editColumnName)\r\n        },\r\n        _getColumnByName: function(name) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var editColumn;\r\n            (0, _type.isDefined)(name) && visibleColumns.some(function(column) {\r\n                if (column.name === name) {\r\n                    editColumn = column;\r\n                    return true\r\n                }\r\n            });\r\n            return editColumn\r\n        },\r\n        _getVisibleEditRowIndex: function(columnName) {\r\n            var dataController = this._dataController;\r\n            var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n            var rowIndex = dataController.getRowIndexByKey(editRowKey);\r\n            if (rowIndex === -1) {\r\n                return rowIndex\r\n            }\r\n            return rowIndex + this._getEditRowIndexCorrection(columnName)\r\n        },\r\n        _getEditRowIndexCorrection: function(columnName) {\r\n            var editColumn = columnName ? this._getColumnByName(columnName) : this._getEditColumn();\r\n            var isColumnHidden = \"adaptiveHidden\" === (null === editColumn || void 0 === editColumn ? void 0 : editColumn.visibleWidth);\r\n            return isColumnHidden ? 1 : 0\r\n        },\r\n        _resetEditRowKey: function() {\r\n            this._setEditRowKey(null, true)\r\n        },\r\n        _resetEditIndices: function() {\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey()\r\n        },\r\n        editRow: function(rowIndex) {\r\n            var _item$oldData;\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            var item = items[rowIndex];\r\n            var params = {\r\n                data: item && item.data,\r\n                cancel: false\r\n            };\r\n            var oldRowIndex = this._getVisibleEditRowIndex();\r\n            if (!item) {\r\n                return\r\n            }\r\n            if (rowIndex === oldRowIndex) {\r\n                return true\r\n            }\r\n            if (void 0 === item.key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            if (!item.isNewRow) {\r\n                params.key = item.key\r\n            }\r\n            if (this._isEditingStart(params)) {\r\n                return\r\n            }\r\n            this.resetChanges();\r\n            this.init();\r\n            this._resetEditColumnName();\r\n            this._pageIndex = dataController.pageIndex();\r\n            this._addInternalData({\r\n                key: item.key,\r\n                oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n            });\r\n            this._setEditRowKey(item.key)\r\n        },\r\n        _editRowFromOptionChanged: function(rowIndex, oldRowIndex) {\r\n            var rowIndices = [oldRowIndex, rowIndex];\r\n            var editMode = _getEditMode(this);\r\n            this._beforeUpdateItems(rowIndices, rowIndex, oldRowIndex);\r\n            if (editMode === EDIT_MODE_POPUP) {\r\n                this._showEditPopup(rowIndex)\r\n            } else {\r\n                this._needFocusEditor = true;\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: rowIndices\r\n                })\r\n            }\r\n        },\r\n        _focusEditorIfNeed: function() {\r\n            var _this9 = this;\r\n            var editMode = _getEditMode(this);\r\n            if (this._needFocusEditor) {\r\n                if (MODES_WITH_DELAYED_FOCUS.indexOf(editMode) !== -1) {\r\n                    var $editingCell = this.getFocusedCellInRow(this._getVisibleEditRowIndex());\r\n                    this._delayedInputFocus($editingCell, function() {\r\n                        $editingCell && _this9.component.focus($editingCell)\r\n                    })\r\n                } else {\r\n                    if (CELL_BASED_MODES.indexOf(editMode) !== -1) {\r\n                        var _this$_rowsView;\r\n                        var editColumnIndex = this._getVisibleEditColumnIndex();\r\n                        var $cell = null === (_this$_rowsView = this._rowsView) || void 0 === _this$_rowsView ? void 0 : _this$_rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n                        if ($cell && !$cell.find(\":focus\").length) {\r\n                            this._focusEditingCell(function() {\r\n                                _this9._editCellInProgress = false\r\n                            }, $cell, true)\r\n                        } else {\r\n                            this._editCellInProgress = false\r\n                        }\r\n                    }\r\n                }\r\n                this._needFocusEditor = false\r\n            }\r\n        },\r\n        _showEditPopup: function(rowIndex, repaintForm) {\r\n            var that = this;\r\n            var isMobileDevice = \"desktop\" !== _devices.default.current().deviceType;\r\n            var popupOptions = (0, _extend.extend)({\r\n                showTitle: false,\r\n                fullScreen: isMobileDevice,\r\n                toolbarItems: [{\r\n                    toolbar: \"bottom\",\r\n                    location: \"after\",\r\n                    widget: \"dxButton\",\r\n                    options: that._getSaveButtonConfig()\r\n                }, {\r\n                    toolbar: \"bottom\",\r\n                    location: \"after\",\r\n                    widget: \"dxButton\",\r\n                    options: that._getCancelButtonConfig()\r\n                }],\r\n                contentTemplate: that._getPopupEditFormTemplate(rowIndex)\r\n            }, that.option(EDITING_POPUP_OPTION_NAME));\r\n            if (!that._editPopup) {\r\n                var $popupContainer = (0, _renderer.default)(\"<div>\").appendTo(that.component.$element()).addClass(that.addWidgetPrefix(EDIT_POPUP_CLASS));\r\n                that._editPopup = that._createComponent($popupContainer, _popup.default, {});\r\n                that._editPopup.on(\"hiding\", that._getEditPopupHiddenHandler());\r\n                that._editPopup.on(\"shown\", function(e) {\r\n                    _events_engine.default.trigger(e.component.$content().find(FOCUSABLE_ELEMENT_SELECTOR).not(\".\" + SCROLLABLE_CONTAINER_CLASS).first(), \"focus\");\r\n                    if (repaintForm) {\r\n                        that._editForm && that._editForm.repaint()\r\n                    }\r\n                })\r\n            }\r\n            that._editPopup.option(popupOptions);\r\n            that._editPopup.show()\r\n        },\r\n        _repaintEditPopup: function() {\r\n            var rowIndex = this._getVisibleEditRowIndex();\r\n            if (this._editPopup && this._editPopup.option(\"visible\") && rowIndex >= 0) {\r\n                var defaultAnimation = this._editPopup.option(\"animation\");\r\n                this._editPopup.option(\"animation\", null);\r\n                this._showEditPopup(rowIndex, true);\r\n                this._editPopup.option(\"animation\", defaultAnimation)\r\n            }\r\n        },\r\n        _getEditPopupHiddenHandler: function() {\r\n            var that = this;\r\n            return function(e) {\r\n                if (that.isEditing()) {\r\n                    that.cancelEditData()\r\n                }\r\n            }\r\n        },\r\n        _getPopupEditFormTemplate: function(rowIndex) {\r\n            var that = this;\r\n            var row = that.component.getVisibleRows()[rowIndex];\r\n            var templateOptions = {\r\n                row: row,\r\n                rowType: row.rowType,\r\n                key: row.key\r\n            };\r\n            return function(container) {\r\n                var formTemplate = that.getEditFormTemplate();\r\n                var scrollable = that._createComponent((0, _renderer.default)(\"<div>\").appendTo(container), _ui.default);\r\n                that._$popupContent = scrollable.$content();\r\n                formTemplate(that._$popupContent, templateOptions, true)\r\n            }\r\n        },\r\n        _getSaveButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.saveRowChanges\"),\r\n                onClick: this.saveEditData.bind(this)\r\n            }\r\n        },\r\n        _getCancelButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.cancelRowChanges\"),\r\n                onClick: this.cancelEditData.bind(this)\r\n            }\r\n        },\r\n        _removeInternalData: function(key) {\r\n            var internalData = this._getInternalData(key);\r\n            var index = this._internalState.indexOf(internalData);\r\n            if (index > -1) {\r\n                this._internalState.splice(index, 1)\r\n            }\r\n        },\r\n        _removeChange: function(index) {\r\n            if (index >= 0) {\r\n                var changes = _toConsumableArray(this.getChanges());\r\n                var key = changes[index].key;\r\n                this._removeInternalData(key);\r\n                changes.splice(index, 1);\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n                if ((0, _common.equalByValue)(this.option(EDITING_EDITROWKEY_OPTION_NAME), key)) {\r\n                    this._resetEditIndices()\r\n                }\r\n            }\r\n        },\r\n        executeOperation: function(deferred, func) {\r\n            var _this10 = this;\r\n            this._lastOperation && this._lastOperation.reject();\r\n            this._lastOperation = deferred;\r\n            this.waitForDeferredOperations().done(function() {\r\n                if (\"rejected\" === deferred.state()) {\r\n                    return\r\n                }\r\n                func();\r\n                _this10._lastOperation = null\r\n            }).fail(function() {\r\n                deferred.reject();\r\n                _this10._lastOperation = null\r\n            })\r\n        },\r\n        waitForDeferredOperations: function() {\r\n            return _deferred.when.apply(void 0, _toConsumableArray(this._deferreds))\r\n        },\r\n        editCell: function(rowIndex, columnIndex) {\r\n            return this._editCell({\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            })\r\n        },\r\n        _editCell: function(options) {\r\n            var _this11 = this;\r\n            var d = new _deferred.Deferred;\r\n            var coreResult;\r\n            this.executeOperation(d, function() {\r\n                coreResult = _this11._editCellCore(options);\r\n                (0, _deferred.when)(coreResult).done(d.resolve).fail(d.reject)\r\n            });\r\n            return void 0 !== coreResult ? coreResult : d.promise()\r\n        },\r\n        _getNormalizedEditCellOptions: function(_ref) {\r\n            var oldColumnIndex = _ref.oldColumnIndex,\r\n                oldRowIndex = _ref.oldRowIndex,\r\n                columnIndex = _ref.columnIndex,\r\n                rowIndex = _ref.rowIndex;\r\n            var columnsController = this._columnsController;\r\n            var visibleColumns = columnsController.getVisibleColumns();\r\n            var items = this._dataController.items();\r\n            var item = items[rowIndex];\r\n            var oldColumn;\r\n            if ((0, _type.isDefined)(oldColumnIndex)) {\r\n                oldColumn = visibleColumns[oldColumnIndex]\r\n            } else {\r\n                oldColumn = this._getEditColumn()\r\n            }\r\n            if (!(0, _type.isDefined)(oldRowIndex)) {\r\n                oldRowIndex = this._getVisibleEditRowIndex()\r\n            }\r\n            if ((0, _type.isString)(columnIndex)) {\r\n                columnIndex = columnsController.columnOption(columnIndex, \"index\");\r\n                columnIndex = columnsController.getVisibleIndex(columnIndex)\r\n            }\r\n            var column = visibleColumns[columnIndex];\r\n            return {\r\n                oldColumn: oldColumn,\r\n                columnIndex: columnIndex,\r\n                oldRowIndex: oldRowIndex,\r\n                rowIndex: rowIndex,\r\n                column: column,\r\n                item: item\r\n            }\r\n        },\r\n        _editCellCore: function(options) {\r\n            var _this12 = this;\r\n            var dataController = this._dataController;\r\n            var isEditByOptionChanged = (0, _type.isDefined)(options.oldColumnIndex) || (0, _type.isDefined)(options.oldRowIndex);\r\n            var _this$_getNormalizedE = this._getNormalizedEditCellOptions(options),\r\n                columnIndex = _this$_getNormalizedE.columnIndex,\r\n                rowIndex = _this$_getNormalizedE.rowIndex,\r\n                column = _this$_getNormalizedE.column,\r\n                item = _this$_getNormalizedE.item;\r\n            var params = {\r\n                data: null === item || void 0 === item ? void 0 : item.data,\r\n                cancel: false,\r\n                column: column\r\n            };\r\n            if (void 0 === item.key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            if (column && item && (\"data\" === item.rowType || \"detailAdaptive\" === item.rowType) && !item.removed && !_isRowEditMode(this)) {\r\n                if (!isEditByOptionChanged && this.isEditCell(rowIndex, columnIndex)) {\r\n                    return true\r\n                }\r\n                var editRowIndex = rowIndex + dataController.getRowIndexOffset();\r\n                return (0, _deferred.when)(this._beforeEditCell(rowIndex, columnIndex, item)).done(function(cancel) {\r\n                    if (cancel) {\r\n                        return\r\n                    }\r\n                    if (!_this12._prepareEditCell(params, item, columnIndex, editRowIndex)) {\r\n                        _this12._processCanceledEditingCell()\r\n                    }\r\n                })\r\n            }\r\n            return false\r\n        },\r\n        _processCanceledEditingCell: function() {},\r\n        _prepareEditCell: function(params, item, editColumnIndex, editRowIndex) {\r\n            if (!item.isNewRow) {\r\n                params.key = item.key\r\n            }\r\n            if (this._isEditingStart(params)) {\r\n                return false\r\n            }\r\n            this._pageIndex = this._dataController.pageIndex();\r\n            this._setEditRowKey(item.key);\r\n            this._setEditColumnNameByIndex(editColumnIndex);\r\n            if (!params.column.showEditorAlways) {\r\n                var _item$oldData2;\r\n                this._addInternalData({\r\n                    key: item.key,\r\n                    oldData: null !== (_item$oldData2 = item.oldData) && void 0 !== _item$oldData2 ? _item$oldData2 : item.data\r\n                })\r\n            }\r\n            return true\r\n        },\r\n        _repaintEditCell: function(column, oldColumn, oldEditRowIndex) {\r\n            this._needFocusEditor = true;\r\n            if (!column || !column.showEditorAlways || oldColumn && !oldColumn.showEditorAlways) {\r\n                this._editCellInProgress = true;\r\n                this.getController(\"editorFactory\").loseFocus();\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, this._getVisibleEditRowIndex()]\r\n                })\r\n            } else {\r\n                if (column !== oldColumn) {\r\n                    this._dataController.updateItems({\r\n                        changeType: \"update\",\r\n                        rowIndices: []\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _delayedInputFocus: function($cell, beforeFocusCallback, callBeforeFocusCallbackAlways) {\r\n            var that = this;\r\n\r\n            function inputFocus() {\r\n                if (beforeFocusCallback) {\r\n                    beforeFocusCallback()\r\n                }\r\n                if ($cell) {\r\n                    var $focusableElement = $cell.find(FOCUSABLE_ELEMENT_SELECTOR).first();\r\n                    _uiGrid_core2.default.focusAndSelectElement(that, $focusableElement)\r\n                }\r\n                that._beforeFocusCallback = null\r\n            }\r\n            if (_devices.default.real().ios || _devices.default.real().android) {\r\n                inputFocus()\r\n            } else {\r\n                if (that._beforeFocusCallback) {\r\n                    that._beforeFocusCallback()\r\n                }\r\n                clearTimeout(that._inputFocusTimeoutID);\r\n                if (callBeforeFocusCallbackAlways) {\r\n                    that._beforeFocusCallback = beforeFocusCallback\r\n                }\r\n                that._inputFocusTimeoutID = setTimeout(inputFocus)\r\n            }\r\n        },\r\n        _focusEditingCell: function(beforeFocusCallback, $editCell, callBeforeFocusCallbackAlways) {\r\n            var that = this;\r\n            var rowsView = that.getView(\"rowsView\");\r\n            var editColumnIndex = this._getVisibleEditColumnIndex();\r\n            $editCell = $editCell || rowsView && rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n            if ($editCell) {\r\n                this._delayedInputFocus($editCell, beforeFocusCallback, callBeforeFocusCallbackAlways)\r\n            }\r\n        },\r\n        deleteRow: function(rowIndex) {\r\n            var _this13 = this;\r\n            if (\"cell\" === this.option(\"editing.mode\") && this.isEditing()) {\r\n                var isNewRow = this._dataController.items()[rowIndex].isNewRow;\r\n                var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                this.closeEditCell(null, isNewRow).always(function() {\r\n                    rowIndex = _this13._dataController.getRowIndexByKey(rowKey);\r\n                    _this13._checkAndDeleteRow(rowIndex)\r\n                })\r\n            } else {\r\n                this._checkAndDeleteRow(rowIndex)\r\n            }\r\n        },\r\n        _checkAndDeleteRow: function(rowIndex) {\r\n            var that = this;\r\n            var editingOptions = that.option(\"editing\");\r\n            var editingTexts = editingOptions && editingOptions.texts;\r\n            var isBatchMode = editingOptions && editingOptions.mode === EDIT_MODE_BATCH;\r\n            var confirmDelete = editingOptions && editingOptions.confirmDelete;\r\n            var confirmDeleteMessage = editingTexts && editingTexts.confirmDeleteMessage;\r\n            var item = that._dataController.items()[rowIndex];\r\n            var allowDeleting = isBatchMode || !that.isEditing() || item.isNewRow;\r\n            if (item && allowDeleting) {\r\n                if (isBatchMode || !confirmDelete || !confirmDeleteMessage) {\r\n                    that._deleteRowCore(rowIndex)\r\n                } else {\r\n                    var confirmDeleteTitle = editingTexts && editingTexts.confirmDeleteTitle;\r\n                    var showDialogTitle = (0, _type.isDefined)(confirmDeleteTitle) && confirmDeleteTitle.length > 0;\r\n                    (0, _dialog.confirm)(confirmDeleteMessage, confirmDeleteTitle, showDialogTitle).done(function(confirmResult) {\r\n                        if (confirmResult) {\r\n                            that._deleteRowCore(rowIndex)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _deleteRowCore: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var key = item && item.key;\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var isBatchMode = this.option(\"editing.mode\") === EDIT_MODE_BATCH;\r\n            this.refresh();\r\n            var changes = this.getChanges();\r\n            var editIndex = _uiGrid_core2.default.getIndexByKey(key, changes);\r\n            if (editIndex >= 0) {\r\n                if (changes[editIndex].type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                    this._removeChange(editIndex)\r\n                } else {\r\n                    this._addChange({\r\n                        key: key,\r\n                        type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                    })\r\n                }\r\n            } else {\r\n                this._addChange({\r\n                    key: key,\r\n                    oldData: item.data,\r\n                    type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                })\r\n            }\r\n            if (isBatchMode) {\r\n                dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, rowIndex]\r\n                });\r\n                return (new _deferred.Deferred).resolve()\r\n            }\r\n            return this.saveEditData()\r\n        },\r\n        undeleteRow: function(rowIndex) {\r\n            var that = this;\r\n            var dataController = that._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var oldEditRowIndex = that._getVisibleEditRowIndex();\r\n            var key = item && item.key;\r\n            var changes = this.getChanges();\r\n            if (item) {\r\n                var editIndex = _uiGrid_core2.default.getIndexByKey(key, changes);\r\n                if (editIndex >= 0) {\r\n                    var data = changes[editIndex].data;\r\n                    if ((0, _type.isEmptyObject)(data)) {\r\n                        that._removeChange(editIndex)\r\n                    } else {\r\n                        that._addChange({\r\n                            key: key,\r\n                            type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                        })\r\n                    }\r\n                    dataController.updateItems({\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldEditRowIndex, rowIndex]\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _fireOnSaving: function() {\r\n            var _this14 = this;\r\n            var onSavingParams = {\r\n                cancel: false,\r\n                promise: null,\r\n                changes: _toConsumableArray(this.getChanges())\r\n            };\r\n            this.executeAction(\"onSaving\", onSavingParams);\r\n            var d = new _deferred.Deferred;\r\n            (0, _deferred.when)((0, _deferred.fromPromise)(onSavingParams.promise)).done(function() {\r\n                d.resolve(onSavingParams)\r\n            }).fail(function(arg) {\r\n                createFailureHandler(d);\r\n                _this14._fireDataErrorOccurred(arg);\r\n                d.resolve({\r\n                    cancel: true\r\n                })\r\n            });\r\n            return d\r\n        },\r\n        _executeEditingAction: function(actionName, params, func) {\r\n            if (this.component._disposed) {\r\n                return null\r\n            }\r\n            var deferred = new _deferred.Deferred;\r\n            this.executeAction(actionName, params);\r\n            (0, _deferred.when)((0, _deferred.fromPromise)(params.cancel)).done(function(cancel) {\r\n                if (cancel) {\r\n                    setTimeout(function() {\r\n                        deferred.resolve(\"cancel\")\r\n                    })\r\n                } else {\r\n                    func(params).done(deferred.resolve).fail(createFailureHandler(deferred))\r\n                }\r\n            }).fail(createFailureHandler(deferred));\r\n            return deferred\r\n        },\r\n        _processChanges: function(deferreds, results, dataChanges, changes) {\r\n            var _this15 = this;\r\n            var store = this._dataController.store();\r\n            (0, _iterator.each)(changes, function(index, change) {\r\n                var oldData = _this15._getOldData(change.key);\r\n                var data = change.data,\r\n                    type = change.type;\r\n                var changeCopy = _objectSpread({}, change);\r\n                var deferred;\r\n                var params;\r\n                if (_this15._beforeSaveEditData(change, index)) {\r\n                    return\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        params = {\r\n                            data: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = _this15._executeEditingAction(\"onRowRemoving\", params, function() {\r\n                            return store.remove(change.key).done(function(key) {\r\n                                dataChanges.push({\r\n                                    type: \"remove\",\r\n                                    key: key\r\n                                })\r\n                            })\r\n                        });\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        params = {\r\n                            data: data,\r\n                            cancel: false\r\n                        };\r\n                        deferred = _this15._executeEditingAction(\"onRowInserting\", params, function() {\r\n                            return store.insert(params.data).done(function(data, key) {\r\n                                if ((0, _type.isDefined)(key)) {\r\n                                    changeCopy.key = key\r\n                                }\r\n                                if (data && (0, _type.isObject)(data) && data !== params.data) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"insert\",\r\n                                    data: data,\r\n                                    index: 0\r\n                                })\r\n                            })\r\n                        });\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        params = {\r\n                            newData: data,\r\n                            oldData: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = _this15._executeEditingAction(\"onRowUpdating\", params, function() {\r\n                            return store.update(change.key, params.newData).done(function(data, key) {\r\n                                if (data && (0, _type.isObject)(data) && data !== params.newData) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"update\",\r\n                                    key: key,\r\n                                    data: data\r\n                                })\r\n                            })\r\n                        })\r\n                }\r\n                changes[index] = changeCopy;\r\n                if (deferred) {\r\n                    var doneDeferred = new _deferred.Deferred;\r\n                    deferred.always(function(data) {\r\n                        results.push({\r\n                            key: change.key,\r\n                            result: data\r\n                        })\r\n                    }).always(doneDeferred.resolve);\r\n                    deferreds.push(doneDeferred.promise())\r\n                }\r\n            })\r\n        },\r\n        _processSaveEditDataResult: function(results) {\r\n            var that = this;\r\n            var hasSavedData = false;\r\n            var editMode = _getEditMode(that);\r\n            var changes = _toConsumableArray(this.getChanges());\r\n            var changesLength = changes.length;\r\n            for (var i = 0; i < results.length; i++) {\r\n                var arg = results[i].result;\r\n                var cancel = \"cancel\" === arg;\r\n                var editIndex = _uiGrid_core2.default.getIndexByKey(results[i].key, changes);\r\n                var change = changes[editIndex];\r\n                var isError = arg && arg instanceof Error;\r\n                if (isError) {\r\n                    if (change) {\r\n                        this._addInternalData({\r\n                            key: change.key,\r\n                            error: arg\r\n                        })\r\n                    }\r\n                    that._fireDataErrorOccurred(arg);\r\n                    if (editMode !== EDIT_MODE_BATCH) {\r\n                        if ((null === change || void 0 === change ? void 0 : change.type) === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                            if (editIndex >= 0) {\r\n                                changes.splice(editIndex, 1)\r\n                            }\r\n                        }\r\n                        break\r\n                    }\r\n                } else {\r\n                    if (!cancel || !change || editMode !== EDIT_MODE_BATCH && change.type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                        if (editIndex >= 0) {\r\n                            changes.splice(editIndex, 1)\r\n                        }\r\n                        hasSavedData = !cancel\r\n                    }\r\n                }\r\n            }\r\n            if (changes.length < changesLength) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes)\r\n            }\r\n            return hasSavedData\r\n        },\r\n        _fireSaveEditDataEvents: function(changes) {\r\n            var that = this;\r\n            (0, _iterator.each)(changes, function(_, _ref2) {\r\n                var data = _ref2.data,\r\n                    key = _ref2.key,\r\n                    type = _ref2.type;\r\n                var internalData = that._addInternalData({\r\n                    key: key\r\n                });\r\n                var params = {\r\n                    key: key,\r\n                    data: data\r\n                };\r\n                if (internalData.error) {\r\n                    params.error = internalData.error\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        that.executeAction(\"onRowRemoved\", (0, _extend.extend)({}, params, {\r\n                            data: internalData.oldData\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        that.executeAction(\"onRowInserted\", params);\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        that.executeAction(\"onRowUpdated\", params)\r\n                }\r\n            });\r\n            this.executeAction(\"onSaved\", {\r\n                changes: changes\r\n            })\r\n        },\r\n        saveEditData: function() {\r\n            var _this16 = this;\r\n            var deferred = new _deferred.Deferred;\r\n            this.waitForDeferredOperations().done(function() {\r\n                if (_this16.isSaving()) {\r\n                    _this16._resolveAfterSave(deferred);\r\n                    return\r\n                }(0, _deferred.when)(_this16._beforeSaveEditData()).done(function(cancel) {\r\n                    if (cancel) {\r\n                        _this16._resolveAfterSave(deferred, {\r\n                            cancel: cancel\r\n                        });\r\n                        return\r\n                    }\r\n                    _this16._saving = true;\r\n                    _this16._saveEditDataInner().always(function() {\r\n                        _this16._saving = false\r\n                    }).done(deferred.resolve).fail(deferred.reject)\r\n                }).fail(deferred.reject)\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _resolveAfterSave: function(deferred) {\r\n            var _ref3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\r\n                cancel = _ref3.cancel,\r\n                error = _ref3.error;\r\n            (0, _deferred.when)(this._afterSaveEditData(cancel)).done(function() {\r\n                deferred.resolve(error)\r\n            }).fail(deferred.reject)\r\n        },\r\n        _saveEditDataInner: function() {\r\n            var _this17 = this;\r\n            var results = [];\r\n            var deferreds = [];\r\n            var dataChanges = [];\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController.dataSource();\r\n            var result = new _deferred.Deferred;\r\n            (0, _deferred.when)(this._fireOnSaving()).done(function(_ref4) {\r\n                var cancel = _ref4.cancel,\r\n                    changes = _ref4.changes;\r\n                if (cancel) {\r\n                    return result.resolve().promise()\r\n                }\r\n                _this17._processChanges(deferreds, results, dataChanges, changes);\r\n                if (deferreds.length) {\r\n                    null === dataSource || void 0 === dataSource ? void 0 : dataSource.beginLoading();\r\n                    _deferred.when.apply(void 0, deferreds).done(function() {\r\n                        if (_this17._processSaveEditDataResult(results)) {\r\n                            _this17._endSaving(dataChanges, changes, result)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(function(error) {\r\n                        null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                        result.resolve(error)\r\n                    });\r\n                    return result.always(function() {\r\n                        _this17._focusEditingCell()\r\n                    }).promise()\r\n                }\r\n                _this17._cancelSaving(result)\r\n            }).fail(result.reject);\r\n            return result.promise()\r\n        },\r\n        _resetModifiedClassCells: function(changes) {\r\n            var _this18 = this;\r\n            var editMode = _getEditMode(this);\r\n            if (editMode === EDIT_MODE_BATCH) {\r\n                var columnsCount = this._columnsController.getVisibleColumns().length;\r\n                changes.forEach(function(_ref5) {\r\n                    var key = _ref5.key;\r\n                    var rowIndex = _this18._dataController.getRowIndexByKey(key);\r\n                    if (rowIndex !== -1) {\r\n                        for (var columnIndex = 0; columnIndex < columnsCount; columnIndex++) {\r\n                            _this18._rowsView._getCellElement(rowIndex, columnIndex).removeClass(CELL_MODIFIED)\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _endSaving: function(dataChanges, changes, deferred) {\r\n            var _changes$;\r\n            var editMode = _getEditMode(this);\r\n            var dataSource = this._dataController.dataSource();\r\n            if (editMode !== EDIT_MODE_CELL) {\r\n                this._resetModifiedClassCells(changes);\r\n                this._resetEditIndices()\r\n            } else {\r\n                if (\"update\" !== (null === (_changes$ = changes[0]) || void 0 === _changes$ ? void 0 : _changes$.type)) {\r\n                    this._resetEditIndices()\r\n                }\r\n            }\r\n            if (editMode === EDIT_MODE_POPUP && this._editPopup) {\r\n                this._editPopup.hide()\r\n            }\r\n            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n            this._refreshDataAfterSave(dataChanges, changes, deferred)\r\n        },\r\n        _cancelSaving: function(result) {\r\n            var editMode = _getEditMode(this);\r\n            var dataController = this._dataController;\r\n            if (_isRowEditMode(this)) {\r\n                if (!this.hasChanges()) {\r\n                    this._cancelEditDataCore()\r\n                }\r\n            } else {\r\n                if (this.isCellOrBatchEditMode()) {\r\n                    if (editMode !== EDIT_MODE_CELL) {\r\n                        this._resetEditIndices()\r\n                    }\r\n                    dataController.updateItems()\r\n                } else {\r\n                    this._focusEditingCell()\r\n                }\r\n            }\r\n            this.executeAction(\"onSaved\", {\r\n                changes: []\r\n            });\r\n            this._resolveAfterSave(result)\r\n        },\r\n        _refreshDataAfterSave: function(dataChanges, changes, deferred) {\r\n            var _this19 = this;\r\n            var dataController = this._dataController;\r\n            var refreshMode = this.option(\"editing.refreshMode\");\r\n            var isFullRefresh = \"reshape\" !== refreshMode && \"repaint\" !== refreshMode;\r\n            if (!isFullRefresh) {\r\n                dataController.push(dataChanges)\r\n            }(0, _deferred.when)(dataController.refresh({\r\n                selection: isFullRefresh,\r\n                reload: isFullRefresh,\r\n                load: \"reshape\" === refreshMode,\r\n                changesOnly: this.option(\"repaintChangesOnly\")\r\n            })).always(function() {\r\n                _this19._fireSaveEditDataEvents(changes)\r\n            }).done(function() {\r\n                _this19._resolveAfterSave(deferred)\r\n            }).fail(function(error) {\r\n                _this19._resolveAfterSave(deferred, {\r\n                    error: error\r\n                })\r\n            })\r\n        },\r\n        isSaving: function() {\r\n            return this._saving\r\n        },\r\n        _updateEditColumn: function() {\r\n            var that = this;\r\n            var isEditColumnVisible = that._isEditColumnVisible();\r\n            var useIcons = that.option(\"editing.useIcons\");\r\n            var cssClass = COMMAND_EDIT_CLASS + (useIcons ? \" \" + COMMAND_EDIT_WITH_ICONS_CLASS : \"\");\r\n            that._columnsController.addCommandColumn({\r\n                type: \"buttons\",\r\n                command: \"edit\",\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass,\r\n                width: \"auto\",\r\n                alignment: \"center\",\r\n                cellTemplate: that._getEditCommandCellTemplate(),\r\n                fixedPosition: \"right\"\r\n            });\r\n            that._columnsController.columnOption(\"command:edit\", {\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass\r\n            })\r\n        },\r\n        _isEditColumnVisible: function() {\r\n            var that = this;\r\n            var editingOptions = that.option(\"editing\");\r\n            if (editingOptions) {\r\n                var editMode = _getEditMode(that);\r\n                var isVisibleWithCurrentEditMode = false;\r\n                switch (editMode) {\r\n                    case EDIT_MODE_ROW:\r\n                        isVisibleWithCurrentEditMode = editingOptions.allowUpdating || editingOptions.allowAdding;\r\n                        break;\r\n                    case EDIT_MODE_FORM:\r\n                    case EDIT_MODE_POPUP:\r\n                        isVisibleWithCurrentEditMode = editingOptions.allowUpdating\r\n                }\r\n                return editingOptions.allowDeleting || isVisibleWithCurrentEditMode\r\n            }\r\n        },\r\n        _updateEditButtons: function() {\r\n            var that = this;\r\n            var headerPanel = that.getView(\"headerPanel\");\r\n            var hasChanges = that.hasChanges();\r\n            if (headerPanel) {\r\n                headerPanel.setToolbarItemDisabled(\"saveButton\", !hasChanges);\r\n                headerPanel.setToolbarItemDisabled(\"revertButton\", !hasChanges)\r\n            }\r\n        },\r\n        _applyModified: function($element) {\r\n            $element && $element.addClass(CELL_MODIFIED)\r\n        },\r\n        _beforeCloseEditCellInBatchMode: function() {},\r\n        cancelEditData: function() {\r\n            var changes = this.getChanges();\r\n            var params = {\r\n                cancel: false,\r\n                changes: changes\r\n            };\r\n            this.executeAction(\"onEditCanceling\", params);\r\n            if (!params.cancel) {\r\n                this._cancelEditDataCore();\r\n                this.executeAction(\"onEditCanceled\", {\r\n                    changes: changes\r\n                })\r\n            }\r\n        },\r\n        _cancelEditDataCore: function() {\r\n            var editMode = _getEditMode(this);\r\n            var rowIndex = this._getVisibleEditRowIndex();\r\n            var dataController = this._dataController;\r\n            this._beforeCancelEditData();\r\n            this.init();\r\n            this.resetChanges();\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey();\r\n            if (ROW_BASED_MODES.indexOf(editMode) !== -1 && rowIndex >= 0) {\r\n                dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [rowIndex, rowIndex + 1]\r\n                })\r\n            } else {\r\n                dataController.updateItems({\r\n                    repaintChangesOnly: this.option(\"repaintChangesOnly\")\r\n                })\r\n            }\r\n            if (editMode === EDIT_MODE_POPUP) {\r\n                this._hideEditPopup()\r\n            }\r\n        },\r\n        _hideEditPopup: function() {\r\n            this._editPopup && this._editPopup.option(\"visible\", false)\r\n        },\r\n        hasEditData: function() {\r\n            return this.hasChanges()\r\n        },\r\n        closeEditCell: function(isError, withoutSaveEditData) {\r\n            var _this20 = this;\r\n            var that = this;\r\n            var result = (0, _deferred.when)();\r\n            var oldEditRowIndex = that._getVisibleEditRowIndex();\r\n            if (!_isRowEditMode(that)) {\r\n                var deferred = new _deferred.Deferred;\r\n                result = new _deferred.Deferred;\r\n                this.executeOperation(deferred, function() {\r\n                    _this20._closeEditCellCore(isError, oldEditRowIndex, withoutSaveEditData).always(result.resolve)\r\n                })\r\n            }\r\n            return result.promise()\r\n        },\r\n        _closeEditCellCore: function(isError, oldEditRowIndex, withoutSaveEditData) {\r\n            var _this21 = this;\r\n            var editMode = _getEditMode(this);\r\n            var dataController = this._dataController;\r\n            var deferred = new _deferred.Deferred;\r\n            var promise = deferred.promise();\r\n            if (editMode === EDIT_MODE_CELL && this.hasChanges()) {\r\n                if (!withoutSaveEditData) {\r\n                    this.saveEditData().done(function(error) {\r\n                        if (!_this21.hasChanges()) {\r\n                            _this21.closeEditCell(!!error).always(deferred.resolve);\r\n                            return\r\n                        }\r\n                        deferred.resolve()\r\n                    });\r\n                    return promise\r\n                }\r\n            } else {\r\n                this._resetEditRowKey();\r\n                this._resetEditColumnName();\r\n                if (oldEditRowIndex >= 0) {\r\n                    var rowIndices = [oldEditRowIndex];\r\n                    this._beforeCloseEditCellInBatchMode(rowIndices);\r\n                    if (!isError) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: rowIndices\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            deferred.resolve();\r\n            return promise\r\n        },\r\n        update: function(changeType) {\r\n            var that = this;\r\n            var dataController = that._dataController;\r\n            if (dataController && that._pageIndex !== dataController.pageIndex()) {\r\n                if (\"refresh\" === changeType) {\r\n                    that.refresh(true)\r\n                }\r\n                that._pageIndex = dataController.pageIndex()\r\n            }\r\n            that._updateEditButtons()\r\n        },\r\n        _getRowIndicesForCascadeUpdating: function(row, skipCurrentRow) {\r\n            return skipCurrentRow ? [] : [row.rowIndex]\r\n        },\r\n        addDeferred: function(deferred) {\r\n            var _this22 = this;\r\n            if (this._deferreds.indexOf(deferred) < 0) {\r\n                this._deferreds.push(deferred);\r\n                deferred.always(function() {\r\n                    var index = _this22._deferreds.indexOf(deferred);\r\n                    if (index >= 0) {\r\n                        _this22._deferreds.splice(index, 1)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _prepareChange: function(options, value, text) {\r\n            var _options$row;\r\n            var that = this;\r\n            var newData = {};\r\n            var oldData = null === (_options$row = options.row) || void 0 === _options$row ? void 0 : _options$row.data;\r\n            var rowKey = options.key;\r\n            var $cellElement = (0, _renderer.default)(options.cellElement);\r\n            var editMode = _getEditMode(that);\r\n            var deferred = new _deferred.Deferred;\r\n            if (void 0 !== rowKey) {\r\n                if (editMode === EDIT_MODE_BATCH) {\r\n                    that._applyModified($cellElement, options)\r\n                }\r\n                options.value = value;\r\n                var setCellValueResult = (0, _deferred.fromPromise)(options.column.setCellValue(newData, value, (0, _extend.extend)(true, {}, oldData), text));\r\n                setCellValueResult.done(function() {\r\n                    deferred.resolve({\r\n                        data: newData,\r\n                        key: rowKey,\r\n                        oldData: oldData,\r\n                        type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                    })\r\n                }).fail(createFailureHandler(deferred)).fail(function(arg) {\r\n                    return that._fireDataErrorOccurred(arg)\r\n                });\r\n                if ((0, _type.isDefined)(text) && options.column.displayValueMap) {\r\n                    options.column.displayValueMap[value] = text\r\n                }\r\n                that._updateRowValues(options);\r\n                that.addDeferred(deferred)\r\n            }\r\n            return deferred\r\n        },\r\n        _updateRowValues: function(options) {\r\n            if (options.values) {\r\n                var dataController = this._dataController;\r\n                var rowIndex = dataController.getRowIndexByKey(options.key);\r\n                var row = dataController.getVisibleRows()[rowIndex];\r\n                if (row) {\r\n                    options.values = row.values\r\n                }\r\n                options.values[options.columnIndex] = options.value\r\n            }\r\n        },\r\n        updateFieldValue: function(options, value, text, forceUpdateRow) {\r\n            var _this23 = this;\r\n            var rowKey = options.key;\r\n            var deferred = new _deferred.Deferred;\r\n            if (void 0 === rowKey) {\r\n                this._dataController.fireError(\"E1043\")\r\n            }\r\n            if (options.column.setCellValue) {\r\n                this._prepareChange(options, value, text).done(function(params) {\r\n                    (0, _deferred.when)(_this23._applyChange(options, params, forceUpdateRow)).always(function() {\r\n                        deferred.resolve()\r\n                    })\r\n                })\r\n            } else {\r\n                deferred.resolve()\r\n            }\r\n            return deferred.promise()\r\n        },\r\n        _focusPreviousEditingCellIfNeed: function(options) {\r\n            var that = this;\r\n            if (that.hasEditData() && !that.isEditCell(options.rowIndex, options.columnIndex)) {\r\n                that._focusEditingCell();\r\n                that._updateEditRow(options.row, true);\r\n                return true\r\n            }\r\n        },\r\n        _needUpdateRow: function(column) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            if (!column) {\r\n                column = this._getEditColumn()\r\n            }\r\n            var isCustomSetCellValue = column && column.setCellValue !== column.defaultSetCellValue;\r\n            var isCustomCalculateCellValue = visibleColumns.some(function(visibleColumn) {\r\n                return visibleColumn.calculateCellValue !== visibleColumn.defaultCalculateCellValue\r\n            });\r\n            return isCustomSetCellValue || isCustomCalculateCellValue\r\n        },\r\n        _applyChange: function(options, params, forceUpdateRow) {\r\n            var that = this;\r\n            var editMode = _getEditMode(that);\r\n            var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n            var showEditorAlways = options.column.showEditorAlways;\r\n            var isUpdateInCellMode = editMode === EDIT_MODE_CELL && options.row && !options.row.isNewRow;\r\n            var focusPreviousEditingCell = showEditorAlways && !forceUpdateRow && isUpdateInCellMode && that.hasEditData() && !that.isEditCell(options.rowIndex, options.columnIndex);\r\n            if (focusPreviousEditingCell) {\r\n                that._focusEditingCell();\r\n                that._updateEditRow(options.row, true, isCustomSetCellValue);\r\n                return\r\n            }\r\n            that._addChange(params, options.row);\r\n            that._updateEditButtons();\r\n            if (showEditorAlways && !forceUpdateRow) {\r\n                if (isUpdateInCellMode) {\r\n                    that._setEditRowKey(options.row.key, true);\r\n                    that._setEditColumnNameByIndex(options.columnIndex, true);\r\n                    return that.saveEditData()\r\n                } else {\r\n                    if (editMode === EDIT_MODE_BATCH) {\r\n                        forceUpdateRow = that._needUpdateRow(options.column)\r\n                    }\r\n                }\r\n            }\r\n            var row = options.row;\r\n            if (row) {\r\n                if (forceUpdateRow || isCustomSetCellValue) {\r\n                    that._updateEditRow(row, forceUpdateRow, isCustomSetCellValue)\r\n                } else {\r\n                    if (row.update) {\r\n                        row.update()\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n            var that = this;\r\n            var editForm = that._editForm;\r\n            var editMode = _getEditMode(that);\r\n            if (editMode === EDIT_MODE_POPUP) {\r\n                if (that.option(\"repaintChangesOnly\")) {\r\n                    row.update && row.update(row)\r\n                } else {\r\n                    if (editForm) {\r\n                        that._updateEditFormDeferred = (new _deferred.Deferred).done(function() {\r\n                            return editForm.repaint()\r\n                        });\r\n                        if (!that._updateLockCount) {\r\n                            that._updateEditFormDeferred.resolve()\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                that._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: that._getRowIndicesForCascadeUpdating(row, skipCurrentRow)\r\n                })\r\n            }\r\n        },\r\n        _endUpdateCore: function() {\r\n            this._updateEditFormDeferred && this._updateEditFormDeferred.resolve()\r\n        },\r\n        _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            var that = this;\r\n            if (forceUpdateRow || !_isRowEditMode(that)) {\r\n                that._updateEditRowCore(row, !forceUpdateRow, isCustomSetCellValue);\r\n                if (!forceUpdateRow) {\r\n                    that._focusEditingCell()\r\n                }\r\n            } else {\r\n                var deferred = new _deferred.Deferred;\r\n                that.addDeferred(deferred);\r\n                setTimeout(function() {\r\n                    var $focusedElement = (0, _renderer.default)(_dom_adapter.default.getActiveElement());\r\n                    var columnIndex = that._rowsView.getCellIndex($focusedElement, row.rowIndex);\r\n                    var focusedElement = $focusedElement.get(0);\r\n                    var selectionRange = _uiGrid_core2.default.getSelectionRange(focusedElement);\r\n                    that._updateEditRowCore(row, false, isCustomSetCellValue);\r\n                    if (columnIndex >= 0) {\r\n                        var $focusedItem = that._rowsView._getCellElement(row.rowIndex, columnIndex);\r\n                        that._delayedInputFocus($focusedItem, function() {\r\n                            setTimeout(function() {\r\n                                focusedElement = _dom_adapter.default.getActiveElement();\r\n                                if (selectionRange.selectionStart >= 0) {\r\n                                    _uiGrid_core2.default.setSelectionRange(focusedElement, selectionRange)\r\n                                }\r\n                            })\r\n                        })\r\n                    }\r\n                    deferred.resolve()\r\n                })\r\n            }\r\n        },\r\n        _addChange: function(options, row) {\r\n            var changes = _toConsumableArray(this.getChanges());\r\n            var index = _uiGrid_core2.default.getIndexByKey(options.key, changes);\r\n            if (index < 0) {\r\n                index = changes.length;\r\n                this._addInternalData({\r\n                    key: options.key,\r\n                    oldData: options.oldData\r\n                });\r\n                delete options.oldData;\r\n                changes.push(options)\r\n            }\r\n            var change = _objectSpread({}, changes[index]);\r\n            if (change) {\r\n                if (options.data) {\r\n                    change.data = (0, _array_utils.createObjectWithChanges)(change.data, options.data)\r\n                }\r\n                if ((!change.type || !options.data) && options.type) {\r\n                    change.type = options.type\r\n                }\r\n                if (row) {\r\n                    row.oldData = this._getOldData(row.key);\r\n                    row.data = (0, _array_utils.createObjectWithChanges)(row.data, options.data)\r\n                }\r\n            }\r\n            changes[index] = change;\r\n            this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n            return index\r\n        },\r\n        _getFormEditItemTemplate: function(cellOptions, column) {\r\n            return column.editCellTemplate || getDefaultEditorTemplate(this)\r\n        },\r\n        renderFormEditTemplate: function(detailCellOptions, item, form, container, isReadOnly) {\r\n            var that = this;\r\n            var $container = (0, _renderer.default)(container);\r\n            var column = item.column;\r\n            var editorType = getEditorType(item);\r\n            var rowData = null === detailCellOptions || void 0 === detailCellOptions ? void 0 : detailCellOptions.row.data;\r\n            var cellOptions = (0, _extend.extend)({}, detailCellOptions, {\r\n                data: rowData,\r\n                cellElement: null,\r\n                isOnForm: true,\r\n                item: item,\r\n                column: (0, _extend.extend)({}, column, {\r\n                    editorType: editorType,\r\n                    editorOptions: item.editorOptions\r\n                }),\r\n                id: form.getItemID(item.name || item.dataField),\r\n                columnIndex: column.index,\r\n                setValue: !isReadOnly && column.allowEditing && function(value) {\r\n                    that.updateFieldValue(cellOptions, value)\r\n                }\r\n            });\r\n            cellOptions.value = column.calculateCellValue(rowData);\r\n            var template = that._getFormEditItemTemplate.bind(that)(cellOptions, column);\r\n            that._rowsView.renderTemplate($container, template, cellOptions, !!$container.closest((0, _window.getWindow)().document).length).done(function() {\r\n                that._rowsView._updateCell($container, cellOptions)\r\n            });\r\n            return cellOptions\r\n        },\r\n        getFormEditorTemplate: function(cellOptions, item) {\r\n            var that = this;\r\n            var column = this.component.columnOption(item.dataField);\r\n            return function(options, container) {\r\n                var $container = (0, _renderer.default)(container);\r\n                cellOptions.row.watch && cellOptions.row.watch(function() {\r\n                    return column.selector(cellOptions.row.data)\r\n                }, function() {\r\n                    var _validator;\r\n                    var $editorElement = $container.find(\".dx-widget\").first();\r\n                    var validator = $editorElement.data(\"dxValidator\");\r\n                    var validatorOptions = null === (_validator = validator) || void 0 === _validator ? void 0 : _validator.option();\r\n                    $container.contents().remove();\r\n                    cellOptions = that.renderFormEditTemplate.bind(that)(cellOptions, item, options.component, $container);\r\n                    $editorElement = $container.find(\".dx-widget\").first();\r\n                    validator = $editorElement.data(\"dxValidator\");\r\n                    if (validatorOptions && !validator) {\r\n                        $editorElement.dxValidator({\r\n                            validationRules: validatorOptions.validationRules,\r\n                            validationGroup: validatorOptions.validationGroup,\r\n                            dataGetter: validatorOptions.dataGetter\r\n                        })\r\n                    }\r\n                });\r\n                cellOptions = that.renderFormEditTemplate.bind(that)(cellOptions, item, options.component, $container)\r\n            }\r\n        },\r\n        getEditFormOptions: function(detailOptions) {\r\n            var userCustomizeItem = this.option(\"editing.form.customizeItem\");\r\n            var editFormItemClass = this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS);\r\n            var items = this.option(\"editing.form.items\");\r\n            var isCustomEditorType = {};\r\n            var that = this;\r\n            if (!items) {\r\n                var columns = this.getController(\"columns\").getColumns();\r\n                items = [];\r\n                (0, _iterator.each)(columns, function(_, column) {\r\n                    if (!column.isBand && !column.type) {\r\n                        items.push({\r\n                            column: column,\r\n                            name: column.name,\r\n                            dataField: column.dataField\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                forEachFormItems(items, function(item) {\r\n                    var itemId = (null === item || void 0 === item ? void 0 : item.name) || (null === item || void 0 === item ? void 0 : item.dataField);\r\n                    if (itemId) {\r\n                        isCustomEditorType[itemId] = !!item.editorType\r\n                    }\r\n                })\r\n            }\r\n            return {\r\n                items: items,\r\n                formID: \"dx-\" + new _guid.default,\r\n                customizeItem: function(item) {\r\n                    var column;\r\n                    var itemId = item.name || item.dataField;\r\n                    if (item.column || itemId) {\r\n                        column = item.column || that._columnsController.columnOption(item.name ? \"name:\" + item.name : \"dataField:\" + item.dataField)\r\n                    }\r\n                    if (column) {\r\n                        item.label = item.label || {};\r\n                        item.label.text = item.label.text || column.caption;\r\n                        item.template = item.template || that.getFormEditorTemplate(detailOptions, item);\r\n                        item.column = column;\r\n                        item.isCustomEditorType = isCustomEditorType[itemId];\r\n                        if (column.formItem) {\r\n                            (0, _extend.extend)(item, column.formItem)\r\n                        }\r\n                        if (void 0 === item.isRequired && column.validationRules) {\r\n                            item.isRequired = column.validationRules.some(function(rule) {\r\n                                return \"required\" === rule.type\r\n                            });\r\n                            item.validationRules = []\r\n                        }\r\n                        var itemVisible = (0, _type.isDefined)(item.visible) ? item.visible : true;\r\n                        if (!that._firstFormItem && itemVisible) {\r\n                            that._firstFormItem = item\r\n                        }\r\n                    }\r\n                    userCustomizeItem && userCustomizeItem.call(this, item);\r\n                    item.cssClass = (0, _type.isString)(item.cssClass) ? item.cssClass + \" \" + editFormItemClass : editFormItemClass\r\n                }\r\n            }\r\n        },\r\n        getEditFormTemplate: function() {\r\n            var that = this;\r\n            return function($container, detailOptions, renderFormOnly) {\r\n                var editFormOptions = that.option(\"editing.form\");\r\n                var baseEditFormOptions = that.getEditFormOptions(detailOptions);\r\n                that._firstFormItem = void 0;\r\n                that._editForm = that._createComponent((0, _renderer.default)(\"<div>\").appendTo($container), _form.default, (0, _extend.extend)({}, editFormOptions, baseEditFormOptions));\r\n                if (!renderFormOnly) {\r\n                    var $buttonsContainer = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(FORM_BUTTONS_CONTAINER_CLASS)).appendTo($container);\r\n                    that._createComponent((0, _renderer.default)(\"<div>\").appendTo($buttonsContainer), _button.default, that._getSaveButtonConfig());\r\n                    that._createComponent((0, _renderer.default)(\"<div>\").appendTo($buttonsContainer), _button.default, that._getCancelButtonConfig())\r\n                }\r\n                that._editForm.on(\"contentReady\", function() {\r\n                    that._editPopup && that._editPopup.repaint()\r\n                })\r\n            }\r\n        },\r\n        getColumnTemplate: function(options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            var rowIndex = options.row && options.row.rowIndex;\r\n            var template;\r\n            var isRowMode = _isRowEditMode(that);\r\n            var isRowEditing = that.isEditRow(rowIndex);\r\n            var isCellEditing = that.isEditCell(rowIndex, options.columnIndex);\r\n            var editingStartOptions;\r\n            if ((column.showEditorAlways || column.setCellValue && (isRowEditing && column.allowEditing || isCellEditing)) && (\"data\" === options.rowType || \"detailAdaptive\" === options.rowType) && !column.command) {\r\n                var allowUpdating = that.allowUpdating(options);\r\n                if (((allowUpdating || isRowEditing) && column.allowEditing || isCellEditing) && (isRowMode && isRowEditing || !isRowMode)) {\r\n                    if (column.showEditorAlways && !isRowMode) {\r\n                        editingStartOptions = {\r\n                            cancel: false,\r\n                            key: options.row.isNewRow ? void 0 : options.row.key,\r\n                            data: options.row.data,\r\n                            column: column\r\n                        };\r\n                        that._isEditingStart(editingStartOptions)\r\n                    }\r\n                    if (!editingStartOptions || !editingStartOptions.cancel) {\r\n                        options.setValue = function(value, text) {\r\n                            that.updateFieldValue(options, value, text)\r\n                        }\r\n                    }\r\n                }\r\n                template = column.editCellTemplate || getDefaultEditorTemplate(that)\r\n            } else {\r\n                if (\"detail\" === column.command && \"detail\" === options.rowType && isRowEditing) {\r\n                    template = that.getEditFormTemplate(options)\r\n                }\r\n            }\r\n            return template\r\n        },\r\n        _createButton: function($container, button, options) {\r\n            var that = this;\r\n            var icon = EDIT_ICON_CLASS[button.name];\r\n            var useIcons = that.option(\"editing.useIcons\");\r\n            var $button = (0, _renderer.default)(\"<a>\").attr(\"href\", \"#\").addClass(LINK_CLASS).addClass(button.cssClass);\r\n            if (button.template) {\r\n                that._rowsView.renderTemplate($container, button.template, options, true)\r\n            } else {\r\n                if (useIcons && icon || button.icon) {\r\n                    icon = button.icon || icon;\r\n                    var iconType = iconUtils.getImageSourceType(icon);\r\n                    if (\"image\" === iconType || \"svg\" === iconType) {\r\n                        $button = iconUtils.getImageContainer(icon).addClass(button.cssClass)\r\n                    } else {\r\n                        $button.addClass(\"dx-icon\" + (\"dxIcon\" === iconType ? \"-\" : \" \") + icon).attr(\"title\", button.text)\r\n                    }\r\n                    $button.addClass(\"dx-link-icon\");\r\n                    $container.addClass(COMMAND_EDIT_WITH_ICONS_CLASS);\r\n                    var localizationName = this.getButtonLocalizationNames()[button.name];\r\n                    localizationName && $button.attr(\"aria-label\", _message.default.format(localizationName))\r\n                } else {\r\n                    $button.text(button.text)\r\n                }\r\n                if ((0, _type.isDefined)(button.hint)) {\r\n                    $button.attr(\"title\", button.hint)\r\n                }\r\n                _events_engine.default.on($button, (0, _index.addNamespace)(\"click\", EDITING_NAMESPACE), that.createAction(function(e) {\r\n                    button.onClick.call(button, (0, _extend.extend)({}, e, {\r\n                        row: options.row,\r\n                        column: options.column\r\n                    }));\r\n                    e.event.preventDefault();\r\n                    e.event.stopPropagation()\r\n                }));\r\n                $container.append($button, \"&nbsp;\")\r\n            }\r\n        },\r\n        getButtonLocalizationNames: function() {\r\n            return {\r\n                edit: \"dxDataGrid-editingEditRow\",\r\n                save: \"dxDataGrid-editingSaveRowChanges\",\r\n                \"delete\": \"dxDataGrid-editingDeleteRow\",\r\n                undelete: \"dxDataGrid-editingUndeleteRow\",\r\n                cancel: \"dxDataGrid-editingCancelRowChanges\"\r\n            }\r\n        },\r\n        prepareEditButtons: function(headerPanel) {\r\n            var that = this;\r\n            var editingOptions = that.option(\"editing\") || {};\r\n            var editingTexts = that.option(\"editing.texts\") || {};\r\n            var titleButtonTextByClassNames = {\r\n                revert: editingTexts.cancelAllChanges,\r\n                save: editingTexts.saveAllChanges,\r\n                addRow: editingTexts.addRow\r\n            };\r\n            var classNameButtonByNames = {\r\n                revert: \"cancel\",\r\n                save: \"save\",\r\n                addRow: \"addrow\"\r\n            };\r\n            var buttonItems = [];\r\n            var prepareButtonItem = function(name, methodName, sortIndex) {\r\n                var className = classNameButtonByNames[name];\r\n                var onInitialized = function(e) {\r\n                    (0, _renderer.default)(e.element).addClass(headerPanel._getToolbarButtonClass(EDIT_BUTTON_CLASS + \" \" + that.addWidgetPrefix(className) + \"-button\"))\r\n                };\r\n                var hintText = titleButtonTextByClassNames[name];\r\n                var isButtonDisabled = (\"save\" === className || \"cancel\" === className) && !that.hasChanges();\r\n                return {\r\n                    widget: \"dxButton\",\r\n                    options: {\r\n                        onInitialized: onInitialized,\r\n                        icon: \"edit-button-\" + className,\r\n                        disabled: isButtonDisabled,\r\n                        onClick: function() {\r\n                            setTimeout(function() {\r\n                                that[methodName]()\r\n                            })\r\n                        },\r\n                        text: hintText,\r\n                        hint: hintText\r\n                    },\r\n                    showText: \"inMenu\",\r\n                    name: name + \"Button\",\r\n                    location: \"after\",\r\n                    locateInMenu: \"auto\",\r\n                    sortIndex: sortIndex\r\n                }\r\n            };\r\n            if (editingOptions.allowAdding) {\r\n                buttonItems.push(prepareButtonItem(\"addRow\", \"addRow\", 20))\r\n            }\r\n            if ((editingOptions.allowUpdating || editingOptions.allowAdding || editingOptions.allowDeleting) && _getEditMode(that) === EDIT_MODE_BATCH) {\r\n                buttonItems.push(prepareButtonItem(\"save\", \"saveEditData\", 21));\r\n                buttonItems.push(prepareButtonItem(\"revert\", \"cancelEditData\", 22))\r\n            }\r\n            return buttonItems\r\n        },\r\n        highlightDataCell: function($cell, parameters) {\r\n            var cellModified = this.isCellModified(parameters);\r\n            cellModified && parameters.column.setCellValue && $cell.addClass(CELL_MODIFIED)\r\n        },\r\n        _afterInsertRow: function() {},\r\n        _beforeSaveEditData: function(change) {\r\n            if (change && !(0, _type.isDefined)(change.key) && (0, _type.isDefined)(change.type)) {\r\n                return true\r\n            }\r\n        },\r\n        _afterSaveEditData: function() {},\r\n        _beforeCancelEditData: function() {},\r\n        _allowEditAction: function(actionName, options) {\r\n            var allowEditAction = this.option(\"editing.\" + actionName);\r\n            if ((0, _type.isFunction)(allowEditAction)) {\r\n                allowEditAction = allowEditAction({\r\n                    component: this.component,\r\n                    row: options.row\r\n                })\r\n            }\r\n            return allowEditAction\r\n        },\r\n        allowUpdating: function(options, eventName) {\r\n            var startEditAction = this.option(\"editing.startEditAction\") || DEFAULT_START_EDIT_ACTION;\r\n            var needCallback = arguments.length > 1 ? startEditAction === eventName || \"down\" === eventName : true;\r\n            return needCallback && this._allowEditAction(\"allowUpdating\", options)\r\n        },\r\n        allowDeleting: function(options) {\r\n            return this._allowEditAction(\"allowDeleting\", options)\r\n        },\r\n        isCellModified: function(parameters) {\r\n            var columnIndex = parameters.columnIndex;\r\n            var modifiedValues = parameters.row && (parameters.row.isNewRow ? parameters.row.values : parameters.row.modifiedValues);\r\n            return !!modifiedValues && void 0 !== modifiedValues[columnIndex]\r\n        },\r\n        isNewRowInEditMode: function() {\r\n            var visibleEditRowIndex = this._getVisibleEditRowIndex();\r\n            var rows = this._dataController.items();\r\n            return visibleEditRowIndex >= 0 ? rows[visibleEditRowIndex].isNewRow : false\r\n        }\r\n    }\r\n}());\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                mode: \"row\",\r\n                refreshMode: \"full\",\r\n                allowAdding: false,\r\n                allowUpdating: false,\r\n                allowDeleting: false,\r\n                useIcons: false,\r\n                selectTextOnEditStart: false,\r\n                confirmDelete: true,\r\n                texts: {\r\n                    editRow: _message.default.format(\"dxDataGrid-editingEditRow\"),\r\n                    saveAllChanges: _message.default.format(\"dxDataGrid-editingSaveAllChanges\"),\r\n                    saveRowChanges: _message.default.format(\"dxDataGrid-editingSaveRowChanges\"),\r\n                    cancelAllChanges: _message.default.format(\"dxDataGrid-editingCancelAllChanges\"),\r\n                    cancelRowChanges: _message.default.format(\"dxDataGrid-editingCancelRowChanges\"),\r\n                    addRow: _message.default.format(\"dxDataGrid-editingAddRow\"),\r\n                    deleteRow: _message.default.format(\"dxDataGrid-editingDeleteRow\"),\r\n                    undeleteRow: _message.default.format(\"dxDataGrid-editingUndeleteRow\"),\r\n                    confirmDeleteMessage: _message.default.format(\"dxDataGrid-editingConfirmDeleteMessage\"),\r\n                    confirmDeleteTitle: \"\"\r\n                },\r\n                form: {\r\n                    colCount: 2\r\n                },\r\n                popup: {},\r\n                startEditAction: \"click\",\r\n                editRowKey: null,\r\n                editColumnName: null,\r\n                changes: []\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        editing: EditingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this.callBase()\r\n                },\r\n                reload: function(full, repaintChangesOnly) {\r\n                    !repaintChangesOnly && this._editingController.refresh();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function() {\r\n                    if (this.getController(\"editing\").isSaving()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(items) {\r\n                    var editingController = this._editingController;\r\n                    var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                    var editRowIndex = _uiGrid_core2.default.getIndexByKey(editRowKey, items);\r\n                    var editItem = items[editRowIndex];\r\n                    if (editItem) {\r\n                        editItem.isEditing = true;\r\n                        if (editingController.getEditMode() === EDIT_MODE_FORM) {\r\n                            editItem.rowType = \"detail\"\r\n                        }\r\n                    }\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateEditRow(this.items())\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _processItems: function(items, change) {\r\n                    items = this._editingController.processItems(items, change);\r\n                    return this.callBase(items, change)\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    this._editingController.processDataItem(dataItem, options, this.generateDataValues);\r\n                    return this.callBase(dataItem, options)\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this.callBase(item, options);\r\n                    if (item.isNewRow) {\r\n                        options.dataIndex--;\r\n                        delete item.dataIndex\r\n                    }\r\n                    return item\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    var isRowEditMode = editingController.isRowEditMode();\r\n                    if (oldItem.isNewRow !== newItem.isNewRow || oldItem.removed !== newItem.removed || isRowEditMode && oldItem.isEditing !== newItem.isEditing) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    var cell = oldRow.cells && oldRow.cells[columnIndex];\r\n                    var isEditing = editingController && editingController.isEditCell(visibleRowIndex, columnIndex);\r\n                    if (isLiveUpdate && isEditing) {\r\n                        return false\r\n                    }\r\n                    if (cell && cell.column && !cell.column.showEditorAlways && cell.isEditing !== isEditing) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\")\r\n                },\r\n                getCellElements: function(rowIndex) {\r\n                    var $cellElements = this.callBase(rowIndex);\r\n                    var editingController = this._editingController;\r\n                    var editForm = editingController.getEditForm();\r\n                    var editFormRowIndex = editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && $cellElements && editForm) {\r\n                        return editForm.$element().find(\".\" + this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS) + \", .\" + BUTTON_CLASS)\r\n                    }\r\n                    return $cellElements\r\n                },\r\n                getCellIndex: function($cell, rowIndex) {\r\n                    if (!$cell.is(\"td\") && rowIndex >= 0) {\r\n                        var $cellElements = this.getCellElements(rowIndex);\r\n                        var cellIndex = -1;\r\n                        (0, _iterator.each)($cellElements, function(index, cellElement) {\r\n                            if ((0, _renderer.default)(cellElement).find($cell).length) {\r\n                                cellIndex = index\r\n                            }\r\n                        });\r\n                        return cellIndex\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n                    var editFormRowIndex = this._editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && (0, _type.isString)(columnIdentifier)) {\r\n                        var column = this._columnsController.columnOption(columnIdentifier);\r\n                        return this._getEditFormEditorVisibleIndex($cells, column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _getEditFormEditorVisibleIndex: function($cells, column) {\r\n                    var visibleIndex = -1;\r\n                    (0, _iterator.each)($cells, function(index, cellElement) {\r\n                        var item = (0, _renderer.default)(cellElement).find(\".dx-field-item-content\").data(\"dx-form-item\");\r\n                        if (item && item.column && column && item.column.index === column.index) {\r\n                            visibleIndex = index;\r\n                            return false\r\n                        }\r\n                    });\r\n                    return visibleIndex\r\n                },\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"cellValue\"])\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var template = that._editingController.getColumnTemplate(options);\r\n                    return template || that.callBase(options)\r\n                },\r\n                _isNativeClick: function() {\r\n                    return (_devices.default.real().ios || _devices.default.real().android) && this.option(\"editing.allowUpdating\")\r\n                },\r\n                _createTable: function() {\r\n                    var that = this;\r\n                    var $table = that.callBase.apply(that, arguments);\r\n                    if (!_isRowEditMode(that) && that.option(\"editing.allowUpdating\")) {\r\n                        _events_engine.default.on($table, (0, _index.addNamespace)(_hold.default.name, \"dxDataGridRowsView\"), \"td:not(.\" + EDITOR_CELL_CLASS + \")\", that.createAction(function() {\r\n                            var editingController = that._editingController;\r\n                            if (editingController.isEditing()) {\r\n                                editingController.closeEditCell()\r\n                            }\r\n                        }))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase(row);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isEditRow = editingController.isEditRow(row.rowIndex);\r\n                        var isRowRemoved = !!row.removed;\r\n                        var isRowInserted = !!row.isNewRow;\r\n                        var isRowModified = !!row.modified;\r\n                        if (_getEditMode(this) === EDIT_MODE_BATCH) {\r\n                            isRowRemoved && $row.addClass(ROW_REMOVED)\r\n                        } else {\r\n                            isEditRow && $row.addClass(EDIT_ROW)\r\n                        }\r\n                        isRowInserted && $row.addClass(ROW_INSERTED);\r\n                        isRowModified && $row.addClass(ROW_MODIFIED);\r\n                        if (isEditRow || isRowInserted || isRowRemoved) {\r\n                            $row.removeClass(ROW_SELECTED)\r\n                        }\r\n                        if (isEditRow && \"detail\" === row.rowType) {\r\n                            $row.addClass(this.addWidgetPrefix(EDIT_FORM_CLASS))\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _getColumnIndexByElement: function($element) {\r\n                    var $tableElement = $element.closest(\"table\");\r\n                    var $tableElements = this.getTableElements();\r\n                    while ($tableElement.length && !$tableElements.filter($tableElement).length) {\r\n                        $element = $tableElement.closest(\"td\");\r\n                        $tableElement = $element.closest(\"table\")\r\n                    }\r\n                    return this._getColumnIndexByElementCore($element)\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $targetElement = $element.closest(\".\" + ROW_CLASS + \"> td:not(.dx-master-detail-cell)\");\r\n                    return this.getCellIndex($targetElement)\r\n                },\r\n                _editCellByClick: function(e, eventName) {\r\n                    var that = this;\r\n                    var editingController = that._editingController;\r\n                    var $targetElement = (0, _renderer.default)(e.event.target);\r\n                    var columnIndex = that._getColumnIndexByElement($targetElement);\r\n                    var row = that._dataController.items()[e.rowIndex];\r\n                    var allowUpdating = editingController.allowUpdating({\r\n                        row: row\r\n                    }, eventName) || row && row.isNewRow;\r\n                    var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n                    var isEditedCell = editingController.isEditCell(e.rowIndex, columnIndex);\r\n                    var allowEditing = allowUpdating && column && (column.allowEditing || isEditedCell);\r\n                    var startEditAction = this.option(\"editing.startEditAction\") || \"click\";\r\n                    if (\"down\" === eventName) {\r\n                        if ((_devices.default.real().ios || _devices.default.real().android) && !isEditedCell) {\r\n                            (0, _dom.resetActiveElement)()\r\n                        }\r\n                        return column && column.showEditorAlways && allowEditing && editingController.editCell(e.rowIndex, columnIndex)\r\n                    }\r\n                    if (\"click\" === eventName && \"dblClick\" === startEditAction && !isEditedCell) {\r\n                        editingController.closeEditCell()\r\n                    }\r\n                    if (allowEditing && eventName === startEditAction) {\r\n                        return editingController.editCell(e.rowIndex, columnIndex) || editingController.isEditRow(e.rowIndex)\r\n                    }\r\n                },\r\n                _rowPointerDown: function(e) {\r\n                    var _this24 = this;\r\n                    this._pointerDownTimeout = setTimeout(function() {\r\n                        _this24._editCellByClick(e, \"down\")\r\n                    })\r\n                },\r\n                _rowClick: function(e) {\r\n                    var isEditForm = (0, _renderer.default)(e.rowElement).hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS));\r\n                    e.event[TARGET_COMPONENT_NAME] = this.component;\r\n                    if (!this._editCellByClick(e, \"click\") && !isEditForm) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    if (!this._editCellByClick(e, \"dblClick\")) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    var editingController = this._editingController;\r\n                    var isCommandCell = !!parameters.column.command;\r\n                    var isEditableCell = parameters.setValue;\r\n                    var isEditRow = editingController.isEditRow(parameters.rowIndex);\r\n                    var isEditing = isEditingCell(isEditRow, parameters);\r\n                    if (isEditingOrShowEditorAlwaysDataCell(isEditRow, parameters)) {\r\n                        var alignment = parameters.column.alignment;\r\n                        $cell.toggleClass(this.addWidgetPrefix(READONLY_CLASS), !isEditableCell).toggleClass(CELL_FOCUS_DISABLED_CLASS, !isEditableCell);\r\n                        if (alignment) {\r\n                            $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", alignment)\r\n                        }\r\n                    }\r\n                    if (isEditing) {\r\n                        this._editCellPrepared($cell)\r\n                    }\r\n                    if (parameters.column && !isCommandCell) {\r\n                        editingController.highlightDataCell($cell, parameters)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editCellPrepared: function($cell) {},\r\n                _formItemPrepared: function() {},\r\n                _isFormItem: function(parameters) {\r\n                    var isDetailRow = \"detail\" === parameters.rowType || \"detailAdaptive\" === parameters.rowType;\r\n                    var isPopupEditing = \"data\" === parameters.rowType && \"popup\" === _getEditMode(this);\r\n                    return (isDetailRow || isPopupEditing) && parameters.item\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    if (this._isFormItem(parameters)) {\r\n                        this._formItemPrepared(parameters, $cell)\r\n                    } else {\r\n                        this.callBase($cell, parameters)\r\n                    }\r\n                },\r\n                _update: function(change) {\r\n                    this.callBase(change);\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        this.getTableElements().children(\"tbody\").children(\".\" + EDIT_ROW).removeClass(ROW_SELECTED)\r\n                    }\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var cellOptions = this.callBase(options);\r\n                    cellOptions.isEditing = this._editingController.isEditCell(cellOptions.rowIndex, cellOptions.columnIndex);\r\n                    return cellOptions\r\n                },\r\n                _createCell: function(options) {\r\n                    var $cell = this.callBase(options);\r\n                    var isEditRow = this._editingController.isEditRow(options.rowIndex);\r\n                    isEditingOrShowEditorAlwaysDataCell(isEditRow, options) && $cell.addClass(EDITOR_CELL_CLASS);\r\n                    return $cell\r\n                },\r\n                _renderCellContent: function($cell, options) {\r\n                    if (\"data\" === options.rowType && _getEditMode(this) === EDIT_MODE_POPUP && false === options.row.visible) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                cellValue: function(rowIndex, columnIdentifier, value, text) {\r\n                    var cellOptions = this.getCellOptions(rowIndex, columnIdentifier);\r\n                    if (cellOptions) {\r\n                        if (void 0 === value) {\r\n                            return cellOptions.value\r\n                        } else {\r\n                            this._editingController.updateFieldValue(cellOptions, value, text, true)\r\n                        }\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._pointerDownTimeout)\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._editingController._focusEditorIfNeed()\r\n                }\r\n            },\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var editButtonItems = this.getController(\"editing\").prepareEditButtons(this);\r\n                    return editButtonItems.concat(items)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    switch (args.name) {\r\n                        case \"editing\":\r\n                            var excludedOptions = [EDITING_POPUP_OPTION_NAME, EDITING_CHANGES_OPTION_NAME, EDITING_EDITCOLUMNNAME_OPTION_NAME, EDITING_EDITROWKEY_OPTION_NAME];\r\n                            var shouldInvalidate = fullName && !excludedOptions.some(function(optionName) {\r\n                                return optionName === fullName\r\n                            });\r\n                            shouldInvalidate && this._invalidate();\r\n                            this.callBase(args);\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var that = this;\r\n                    var editingOptions = that.getController(\"editing\").option(\"editing\");\r\n                    return that.callBase() || editingOptions && (editingOptions.allowAdding || (editingOptions.allowUpdating || editingOptions.allowDeleting) && editingOptions.mode === EDIT_MODE_BATCH)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.editor_factory.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _position = _interopRequireDefault(require(\"../../animation/position\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _position2 = require(\"../../core/utils/position\");\r\nvar _ui = _interopRequireDefault(require(\"../shared/ui.editor_factory_mixin\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FOCUSED_ELEMENT_CLASS = \"dx-focused\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar MODULE_NAMESPACE = \"dxDataGridEditorFactory\";\r\nvar UPDATE_FOCUS_EVENTS = (0, _index.addNamespace)([_pointer.default.down, \"focusin\", _click.name].join(\" \"), MODULE_NAMESPACE);\r\nvar DX_HIDDEN = \"dx-hidden\";\r\nvar EditorFactory = _uiGrid_core.default.ViewController.inherit({\r\n    _getFocusedElement: function($dataGridElement) {\r\n        var rowSelector = this.option(\"focusedRowEnabled\") ? \"tr[tabindex]:focus\" : \"tr[tabindex]:not(.dx-data-row):focus\";\r\n        var focusedElementSelector = \"td[tabindex]:focus, \".concat(rowSelector, \", input:focus, textarea:focus, .dx-lookup-field:focus, .dx-checkbox:focus, .dx-switch:focus, .dx-dropdownbutton .dx-buttongroup:focus\");\r\n        return $dataGridElement.find(focusedElementSelector)\r\n    },\r\n    _getFocusCellSelector: function() {\r\n        return \".dx-row > td\"\r\n    },\r\n    _updateFocusCore: function() {\r\n        var $focus = this._$focusedElement;\r\n        var $dataGridElement = this.component && this.component.$element();\r\n        var $focusCell;\r\n        var hideBorders;\r\n        if ($dataGridElement) {\r\n            $focus = this._getFocusedElement($dataGridElement);\r\n            if ($focus.length) {\r\n                if (!$focus.hasClass(CELL_FOCUS_DISABLED_CLASS) && !$focus.hasClass(ROW_CLASS)) {\r\n                    $focusCell = $focus.closest(this._getFocusCellSelector() + \", .\" + CELL_FOCUS_DISABLED_CLASS);\r\n                    hideBorders = $focusCell.get(0) !== $focus.get(0) && $focusCell.hasClass(EDITOR_INLINE_BLOCK);\r\n                    $focus = $focusCell\r\n                }\r\n                if ($focus.length && !$focus.hasClass(CELL_FOCUS_DISABLED_CLASS)) {\r\n                    this.focus($focus, hideBorders);\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.loseFocus()\r\n    },\r\n    _updateFocus: function(e) {\r\n        var that = this;\r\n        var isFocusOverlay = e && e.event && (0, _renderer.default)(e.event.target).hasClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n        that._isFocusOverlay = that._isFocusOverlay || isFocusOverlay;\r\n        clearTimeout(that._updateFocusTimeoutID);\r\n        that._updateFocusTimeoutID = setTimeout(function() {\r\n            delete that._updateFocusTimeoutID;\r\n            if (!that._isFocusOverlay) {\r\n                that._updateFocusCore()\r\n            }\r\n            that._isFocusOverlay = false\r\n        })\r\n    },\r\n    _updateFocusOverlaySize: function($element, position) {\r\n        $element.hide();\r\n        var location = _position.default.calculate($element, (0, _extend.extend)({\r\n            collision: \"fit\"\r\n        }, position));\r\n        if (location.h.oversize > 0) {\r\n            $element.outerWidth($element.outerWidth() - location.h.oversize)\r\n        }\r\n        if (location.v.oversize > 0) {\r\n            $element.outerHeight($element.outerHeight() - location.v.oversize)\r\n        }\r\n        $element.show()\r\n    },\r\n    callbackNames: function() {\r\n        return [\"focused\"]\r\n    },\r\n    focus: function($element, hideBorder) {\r\n        var that = this;\r\n        if (void 0 === $element) {\r\n            return that._$focusedElement\r\n        } else {\r\n            if ($element) {\r\n                if (!$element.is(that._$focusedElement)) {\r\n                    that._$focusedElement && that._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS)\r\n                }\r\n                that._$focusedElement = $element;\r\n                clearTimeout(that._focusTimeoutID);\r\n                that._focusTimeoutID = setTimeout(function() {\r\n                    delete that._focusTimeoutID;\r\n                    that.renderFocusOverlay($element, hideBorder);\r\n                    $element.addClass(FOCUSED_ELEMENT_CLASS);\r\n                    that.focused.fire($element)\r\n                })\r\n            }\r\n        }\r\n    },\r\n    refocus: function() {\r\n        var $focus = this.focus();\r\n        this.focus($focus)\r\n    },\r\n    renderFocusOverlay: function($element, hideBorder) {\r\n        var that = this;\r\n        if (!_uiGrid_core2.default.isElementInCurrentGrid(this, $element)) {\r\n            return\r\n        }\r\n        if (!that._$focusOverlay) {\r\n            that._$focusOverlay = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS))\r\n        }\r\n        if (hideBorder) {\r\n            that._$focusOverlay.addClass(DX_HIDDEN)\r\n        } else {\r\n            if ($element.length) {\r\n                var align = _browser.default.msie ? \"left bottom\" : _browser.default.mozilla ? \"right bottom\" : \"left top\";\r\n                var $content = $element.closest(\".\" + that.addWidgetPrefix(CONTENT_CLASS));\r\n                var elemCoord = (0, _position2.getBoundingRect)($element.get(0));\r\n                that._$focusOverlay.removeClass(DX_HIDDEN).appendTo($content).outerWidth(elemCoord.right - elemCoord.left + 1).outerHeight(elemCoord.bottom - elemCoord.top + 1);\r\n                var focusOverlayPosition = {\r\n                    precise: true,\r\n                    my: align,\r\n                    at: align,\r\n                    of: $element,\r\n                    boundary: $content.length && $content\r\n                };\r\n                that._updateFocusOverlaySize(that._$focusOverlay, focusOverlayPosition);\r\n                _position.default.setup(that._$focusOverlay, focusOverlayPosition);\r\n                that._$focusOverlay.css(\"visibility\", \"visible\")\r\n            }\r\n        }\r\n    },\r\n    resize: function() {\r\n        var $focusedElement = this._$focusedElement;\r\n        if ($focusedElement) {\r\n            this.focus($focusedElement)\r\n        }\r\n    },\r\n    loseFocus: function() {\r\n        this._$focusedElement && this._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS);\r\n        this._$focusedElement = null;\r\n        this._$focusOverlay && this._$focusOverlay.addClass(DX_HIDDEN)\r\n    },\r\n    init: function() {\r\n        this.createAction(\"onEditorPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this.createAction(\"onEditorPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this._updateFocusHandler = this._updateFocusHandler || this.createAction(this._updateFocus.bind(this));\r\n        _events_engine.default.on(_dom_adapter.default.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler);\r\n        this._attachContainerEventHandlers()\r\n    },\r\n    _attachContainerEventHandlers: function() {\r\n        var that = this;\r\n        var $container = that.component && that.component.$element();\r\n        if ($container) {\r\n            _events_engine.default.on($container, (0, _index.addNamespace)(\"keydown\", MODULE_NAMESPACE), function(e) {\r\n                if (\"tab\" === (0, _index.normalizeKeyName)(e)) {\r\n                    that._updateFocusHandler(e)\r\n                }\r\n            })\r\n        }\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._focusTimeoutID);\r\n        clearTimeout(this._updateFocusTimeoutID);\r\n        _events_engine.default.off(_dom_adapter.default.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler)\r\n    }\r\n}).include(_ui.default);\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    controllers: {\r\n        editorFactory: EditorFactory\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.error_handling.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar ERROR_MESSAGE_CLASS = \"dx-error-message\";\r\nvar ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nvar ACTION_CLASS = \"action\";\r\nvar ErrorHandlingController = _uiGrid_core.default.ViewController.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._rowsView = that.getView(\"rowsView\")\r\n    },\r\n    _createErrorRow: function(error, $tableElements) {\r\n        var that = this;\r\n        var $errorRow;\r\n        var $closeButton;\r\n        var $errorMessage = this._renderErrorMessage(error);\r\n        if ($tableElements) {\r\n            $errorRow = (0, _renderer.default)(\"<tr>\").addClass(ERROR_ROW_CLASS);\r\n            $closeButton = (0, _renderer.default)(\"<div>\").addClass(ERROR_CLOSEBUTTON_CLASS).addClass(that.addWidgetPrefix(ACTION_CLASS));\r\n            _events_engine.default.on($closeButton, _click.name, that.createAction(function(args) {\r\n                var e = args.event;\r\n                var $errorRow;\r\n                var errorRowIndex = (0, _renderer.default)(e.currentTarget).closest(\".\" + ERROR_ROW_CLASS).index();\r\n                e.stopPropagation();\r\n                (0, _iterator.each)($tableElements, function(_, tableElement) {\r\n                    $errorRow = (0, _renderer.default)(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\r\n                    that.removeErrorRow($errorRow)\r\n                });\r\n                that.getController(\"resizing\") && that.getController(\"resizing\").fireContentReadyAction()\r\n            }));\r\n            (0, _renderer.default)(\"<td>\").attr({\r\n                colSpan: that.getController(\"columns\").getVisibleColumns().length,\r\n                role: \"presentation\"\r\n            }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\r\n            return $errorRow\r\n        }\r\n        return $errorMessage\r\n    },\r\n    _renderErrorMessage: function(error) {\r\n        var message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\r\n        var $message = (0, _renderer.default)(\"<div>\").addClass(ERROR_MESSAGE_CLASS).text(message);\r\n        if (error.url) {\r\n            (0, _renderer.default)(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message)\r\n        }\r\n        return $message\r\n    },\r\n    renderErrorRow: function(error, rowIndex, $popupContent) {\r\n        var that = this;\r\n        var $errorMessageElement;\r\n        var $firstErrorRow;\r\n        if ($popupContent) {\r\n            $popupContent.find(\".\" + ERROR_MESSAGE_CLASS).remove();\r\n            $errorMessageElement = that._createErrorRow(error);\r\n            $popupContent.prepend($errorMessageElement);\r\n            return $errorMessageElement\r\n        }\r\n        var viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\r\n        var $tableElements = $popupContent || viewElement.getTableElements();\r\n        (0, _iterator.each)($tableElements, function(_, tableElement) {\r\n            $errorMessageElement = that._createErrorRow(error, $tableElements);\r\n            $firstErrorRow = $firstErrorRow || $errorMessageElement;\r\n            if (rowIndex >= 0) {\r\n                var $row = viewElement._getRowElements((0, _renderer.default)(tableElement)).eq(rowIndex);\r\n                that.removeErrorRow($row.next());\r\n                $errorMessageElement.insertAfter($row)\r\n            } else {\r\n                var $tbody = (0, _renderer.default)(tableElement).children(\"tbody\");\r\n                var rowElements = $tbody.children(\"tr\");\r\n                if (that._columnHeadersView.isVisible()) {\r\n                    that.removeErrorRow(rowElements.last());\r\n                    (0, _renderer.default)(tableElement).append($errorMessageElement)\r\n                } else {\r\n                    that.removeErrorRow(rowElements.first());\r\n                    $tbody.first().prepend($errorMessageElement)\r\n                }\r\n            }\r\n        });\r\n        if (!$popupContent) {\r\n            var resizingController = that.getController(\"resizing\");\r\n            resizingController && resizingController.fireContentReadyAction()\r\n        }\r\n        return $firstErrorRow\r\n    },\r\n    removeErrorRow: function($row) {\r\n        if (!$row) {\r\n            var $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\r\n            $row = $columnHeaders && $columnHeaders.find(\".\" + ERROR_ROW_CLASS);\r\n            if (!$row || !$row.length) {\r\n                var $rowsViewElement = this._rowsView.element();\r\n                $row = $rowsViewElement && $rowsViewElement.find(\".\" + ERROR_ROW_CLASS)\r\n            }\r\n        }\r\n        $row && $row.hasClass(ERROR_ROW_CLASS) && $row.remove()\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        switch (args.name) {\r\n            case \"errorRowEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                that.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            errorRowEnabled: true\r\n        }\r\n    },\r\n    controllers: {\r\n        errorHandling: ErrorHandlingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var errorHandlingController = that.getController(\"errorHandling\");\r\n                    that.callBase();\r\n                    that.dataErrorOccurred.add(function(error, $popupContent) {\r\n                        if (that.option(\"errorRowEnabled\")) {\r\n                            errorHandlingController.renderErrorRow(error, void 0, $popupContent)\r\n                        }\r\n                    });\r\n                    that.changed.add(function(e) {\r\n                        if (e && \"loadError\" === e.changeType) {\r\n                            return\r\n                        }\r\n                        var errorHandlingController = that.getController(\"errorHandling\");\r\n                        var editingController = that.getController(\"editing\");\r\n                        if (editingController && !editingController.hasChanges()) {\r\n                            errorHandlingController && errorHandlingController.removeErrorRow()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_builder.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _filter_builder = _interopRequireDefault(require(\"./../filter_builder\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _scroll_view = _interopRequireDefault(require(\"./../scroll_view\"));\r\nvar _popup = _interopRequireDefault(require(\"./../popup\"));\r\nvar _accessibility = require(\"../shared/accessibility\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FilterBuilderView = _uiGrid_core.default.View.inherit({\r\n    _renderCore: function() {\r\n        this._updatePopupOptions()\r\n    },\r\n    _updatePopupOptions: function() {\r\n        if (this.option(\"filterBuilderPopup.visible\")) {\r\n            this._initPopup()\r\n        } else {\r\n            if (this._filterBuilderPopup) {\r\n                this._filterBuilderPopup.hide()\r\n            }\r\n        }\r\n    },\r\n    _disposePopup: function() {\r\n        if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.dispose();\r\n            this._filterBuilderPopup = void 0\r\n        }\r\n        if (this._filterBuilder) {\r\n            this._filterBuilder.dispose();\r\n            this._filterBuilder = void 0\r\n        }\r\n    },\r\n    _initPopup: function() {\r\n        var that = this;\r\n        that._disposePopup();\r\n        that._filterBuilderPopup = that._createComponent(that.element(), _popup.default, (0, _extend.extend)({\r\n            title: _message.default.format(\"dxDataGrid-filterBuilderPopupTitle\"),\r\n            contentTemplate: function($contentElement) {\r\n                return that._getPopupContentTemplate($contentElement)\r\n            },\r\n            onOptionChanged: function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.option(\"filterBuilderPopup.visible\", args.value)\r\n                }\r\n            },\r\n            toolbarItems: that._getPopupToolbarItems()\r\n        }, that.option(\"filterBuilderPopup\"), {\r\n            onHidden: function(e) {\r\n                (0, _accessibility.restoreFocus)(that);\r\n                that._disposePopup()\r\n            }\r\n        }))\r\n    },\r\n    _getPopupContentTemplate: function(contentElement) {\r\n        var $contentElement = (0, _renderer.default)(contentElement);\r\n        var $filterBuilderContainer = (0, _renderer.default)(\"<div>\").appendTo((0, _renderer.default)(contentElement));\r\n        this._filterBuilder = this._createComponent($filterBuilderContainer, _filter_builder.default, (0, _extend.extend)({\r\n            value: this.option(\"filterValue\"),\r\n            fields: this.getController(\"columns\").getFilteringColumns()\r\n        }, this.option(\"filterBuilder\"), {\r\n            customOperations: this.getController(\"filterSync\").getCustomFilterOperations()\r\n        }));\r\n        this._createComponent($contentElement, _scroll_view.default, {\r\n            direction: \"both\"\r\n        })\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        var that = this;\r\n        return [{\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: _message.default.format(\"OK\"),\r\n                onClick: function(e) {\r\n                    var filter = that._filterBuilder.option(\"value\");\r\n                    that.option(\"filterValue\", filter);\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }, {\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: _message.default.format(\"Cancel\"),\r\n                onClick: function(e) {\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }]\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterBuilder\":\r\n            case \"filterBuilderPopup\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterBuilder: {\r\n                groupOperationDescriptions: {\r\n                    and: _message.default.format(\"dxFilterBuilder-and\"),\r\n                    or: _message.default.format(\"dxFilterBuilder-or\"),\r\n                    notAnd: _message.default.format(\"dxFilterBuilder-notAnd\"),\r\n                    notOr: _message.default.format(\"dxFilterBuilder-notOr\")\r\n                },\r\n                filterOperationDescriptions: {\r\n                    between: _message.default.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                    equal: _message.default.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                    notEqual: _message.default.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                    lessThan: _message.default.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                    lessThanOrEqual: _message.default.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                    greaterThan: _message.default.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                    greaterThanOrEqual: _message.default.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                    startsWith: _message.default.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                    contains: _message.default.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                    notContains: _message.default.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                    endsWith: _message.default.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                    isBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                }\r\n            },\r\n            filterBuilderPopup: {}\r\n        }\r\n    },\r\n    views: {\r\n        filterBuilderView: FilterBuilderView\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_custom_operations.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.anyOf = anyOf;\r\nexports.noneOf = noneOf;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _data_source = require(\"../../data/data_source/data_source\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _utils = require(\"../filter_builder/utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction baseOperation(grid) {\r\n    var calculateFilterExpression = function(filterValue, field, fields) {\r\n        var result = [];\r\n        var lastIndex = filterValue.length - 1;\r\n        filterValue && filterValue.forEach(function(value, index) {\r\n            if ((0, _utils.isCondition)(value) || (0, _utils.isGroup)(value)) {\r\n                var filterExpression = (0, _utils.getFilterExpression)(value, fields, [], \"headerFilter\");\r\n                result.push(filterExpression)\r\n            } else {\r\n                result.push((0, _utils.getFilterExpression)([field.dataField, \"=\", value], fields, [], \"headerFilter\"))\r\n            }\r\n            index !== lastIndex && result.push(\"or\")\r\n        });\r\n        if (1 === result.length) {\r\n            result = result[0]\r\n        }\r\n        return result\r\n    };\r\n    var getFullText = function(itemText, parentText) {\r\n        return parentText ? parentText + \"/\" + itemText : itemText\r\n    };\r\n    var getSelectedItemsTexts = function getSelectedItemsTexts(items, parentText) {\r\n        var result = [];\r\n        items.forEach(function(item) {\r\n            if (item.items) {\r\n                var selectedItemsTexts = getSelectedItemsTexts(item.items, getFullText(item.text, parentText));\r\n                result = result.concat(selectedItemsTexts)\r\n            }\r\n            item.selected && result.push(getFullText(item.text, parentText))\r\n        });\r\n        return result\r\n    };\r\n    var headerFilterController = grid && grid.getController(\"headerFilter\");\r\n    var customizeText = function(fieldInfo, options) {\r\n        options = options || {};\r\n        var value = fieldInfo.value;\r\n        var column = grid.columnOption(fieldInfo.field.dataField);\r\n        var headerFilter = column && column.headerFilter;\r\n        var lookup = column && column.lookup;\r\n        var values = options.values || [value];\r\n        if (headerFilter && headerFilter.dataSource || lookup && lookup.dataSource) {\r\n            var result = new _deferred.Deferred;\r\n            var itemsDeferred = options.items || new _deferred.Deferred;\r\n            if (!options.items) {\r\n                column = (0, _extend.extend)({}, column, {\r\n                    filterType: \"include\",\r\n                    filterValues: values\r\n                });\r\n                var dataSourceOptions = headerFilterController.getDataSource(column);\r\n                dataSourceOptions.paginate = false;\r\n                var dataSource = new _data_source.DataSource(dataSourceOptions);\r\n                var key = dataSource.store().key();\r\n                if (key) {\r\n                    var _options = options,\r\n                        _values = _options.values;\r\n                    if (_values && _values.length > 1) {\r\n                        var filter = _values.reduce(function(result, value) {\r\n                            if (result.length) {\r\n                                result.push(\"or\")\r\n                            }\r\n                            result.push([key, \"=\", value]);\r\n                            return result\r\n                        }, []);\r\n                        dataSource.filter(filter)\r\n                    } else {\r\n                        dataSource.filter([key, \"=\", fieldInfo.value])\r\n                    }\r\n                }\r\n                options.items = itemsDeferred;\r\n                dataSource.load().done(itemsDeferred.resolve)\r\n            }\r\n            itemsDeferred.done(function(items) {\r\n                var index = values.indexOf(fieldInfo.value);\r\n                result.resolve(getSelectedItemsTexts(items)[index])\r\n            });\r\n            return result\r\n        } else {\r\n            var text = headerFilterController.getHeaderItemText(value, column, 0, grid.option(\"headerFilter\"));\r\n            return text\r\n        }\r\n    };\r\n    return {\r\n        dataTypes: [\"string\", \"date\", \"datetime\", \"number\", \"boolean\", \"object\"],\r\n        calculateFilterExpression: calculateFilterExpression,\r\n        editorTemplate: function(conditionInfo, container) {\r\n            var div = (0, _renderer.default)(\"<div>\").addClass(\"dx-filterbuilder-item-value-text\").appendTo(container);\r\n            var column = (0, _extend.extend)(true, {}, grid.columnOption(conditionInfo.field.dataField));\r\n            (0, _utils.renderValueText)(div, conditionInfo.text && conditionInfo.text.split(\"|\"));\r\n            var setValue = function(value) {\r\n                conditionInfo.setValue(value)\r\n            };\r\n            column.filterType = \"include\";\r\n            column.filterValues = conditionInfo.value ? conditionInfo.value.slice() : [];\r\n            headerFilterController.showHeaderFilterMenuBase({\r\n                columnElement: div,\r\n                column: column,\r\n                apply: function() {\r\n                    setValue(this.filterValues);\r\n                    headerFilterController.hideHeaderFilterMenu();\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                onHidden: function() {\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                isFilterBuilder: true\r\n            });\r\n            return container\r\n        },\r\n        customizeText: customizeText\r\n    }\r\n}\r\n\r\nfunction anyOf(grid) {\r\n    return (0, _extend.extend)(baseOperation(grid), {\r\n        name: \"anyof\",\r\n        icon: \"selectall\",\r\n        caption: _message.default.format(\"dxFilterBuilder-filterOperationAnyOf\")\r\n    })\r\n}\r\n\r\nfunction noneOf(grid) {\r\n    var baseOp = baseOperation(grid);\r\n    return (0, _extend.extend)({}, baseOp, {\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var baseFilter = baseOp.calculateFilterExpression(filterValue, field, fields);\r\n            if (!baseFilter || 0 === baseFilter.length) {\r\n                return null\r\n            }\r\n            return \"!\" === baseFilter[0] ? baseFilter : [\"!\", baseFilter]\r\n        },\r\n        name: \"noneof\",\r\n        icon: \"unselectall\",\r\n        caption: _message.default.format(\"dxFilterBuilder-filterOperationNoneOf\")\r\n    })\r\n}\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_panel.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _check_box = _interopRequireDefault(require(\"../check_box\"));\r\nvar _utils = require(\"../filter_builder/utils\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _inflector = require(\"../../core/utils/inflector\");\r\nvar _uiGrid_core3 = require(\"./ui.grid_core.accessibility\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FILTER_PANEL_CLASS = \"filter-panel\";\r\nvar FILTER_PANEL_TEXT_CLASS = FILTER_PANEL_CLASS + \"-text\";\r\nvar FILTER_PANEL_CHECKBOX_CLASS = FILTER_PANEL_CLASS + \"-checkbox\";\r\nvar FILTER_PANEL_CLEAR_FILTER_CLASS = FILTER_PANEL_CLASS + \"-clear-filter\";\r\nvar FILTER_PANEL_LEFT_CONTAINER = FILTER_PANEL_CLASS + \"-left\";\r\nvar FILTER_PANEL_TARGET = \"filterPanel\";\r\nvar FilterPanelView = _uiGrid_core.default.View.inherit({\r\n    isVisible: function() {\r\n        return this.option(\"filterPanel.visible\") && this.getController(\"data\").dataSource()\r\n    },\r\n    init: function() {\r\n        var _this = this;\r\n        this.getController(\"data\").dataSourceChanged.add(function() {\r\n            return _this.render()\r\n        })\r\n    },\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var $element = that.element();\r\n        $element.empty().addClass(that.addWidgetPrefix(FILTER_PANEL_CLASS));\r\n        var $leftContainer = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_LEFT_CONTAINER)).appendTo($element);\r\n        if (that.option(\"filterValue\") || that._filterValueBuffer) {\r\n            $leftContainer.append(that._getCheckElement()).append(that._getFilterElement()).append(that._getTextElement());\r\n            $element.append(that._getRemoveButtonElement())\r\n        } else {\r\n            $leftContainer.append(that._getFilterElement()).append(that._getTextElement())\r\n        }\r\n    },\r\n    _getCheckElement: function() {\r\n        var that = this;\r\n        var $element = (0, _renderer.default)(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_CHECKBOX_CLASS));\r\n        that._createComponent($element, _check_box.default, {\r\n            value: that.option(\"filterPanel.filterEnabled\"),\r\n            onValueChanged: function(e) {\r\n                that.option(\"filterPanel.filterEnabled\", e.value)\r\n            }\r\n        });\r\n        $element.attr(\"title\", this.option(\"filterPanel.texts.filterEnabledHint\"));\r\n        return $element\r\n    },\r\n    _getFilterElement: function() {\r\n        var that = this;\r\n        var $element = (0, _renderer.default)(\"<div>\").addClass(\"dx-icon-filter\");\r\n        _events_engine.default.on($element, \"click\", function() {\r\n            return that._showFilterBuilder()\r\n        });\r\n        (0, _uiGrid_core3.registerKeyboardAction)(\"filterPanel\", that, $element, void 0, function() {\r\n            return that._showFilterBuilder()\r\n        });\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _getTextElement: function() {\r\n        var that = this;\r\n        var $textElement = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_TEXT_CLASS));\r\n        var filterText;\r\n        var filterValue = that.option(\"filterValue\");\r\n        if (filterValue) {\r\n            (0, _deferred.when)(that.getFilterText(filterValue, that.getController(\"filterSync\").getCustomFilterOperations())).done(function(filterText) {\r\n                var customizeText = that.option(\"filterPanel.customizeText\");\r\n                if (customizeText) {\r\n                    var customText = customizeText({\r\n                        component: that.component,\r\n                        filterValue: filterValue,\r\n                        text: filterText\r\n                    });\r\n                    if (\"string\" === typeof customText) {\r\n                        filterText = customText\r\n                    }\r\n                }\r\n                $textElement.text(filterText)\r\n            })\r\n        } else {\r\n            filterText = that.option(\"filterPanel.texts.createFilter\");\r\n            $textElement.text(filterText)\r\n        }\r\n        _events_engine.default.on($textElement, \"click\", function() {\r\n            return that._showFilterBuilder()\r\n        });\r\n        (0, _uiGrid_core3.registerKeyboardAction)(\"filterPanel\", that, $textElement, void 0, function() {\r\n            return that._showFilterBuilder()\r\n        });\r\n        that._addTabIndexToElement($textElement);\r\n        return $textElement\r\n    },\r\n    _showFilterBuilder: function() {\r\n        this.option(\"filterBuilderPopup.visible\", true)\r\n    },\r\n    _getRemoveButtonElement: function() {\r\n        var that = this;\r\n        var clearFilterValue = function() {\r\n            return that.option(\"filterValue\", null)\r\n        };\r\n        var $element = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_CLEAR_FILTER_CLASS)).text(that.option(\"filterPanel.texts.clearFilter\"));\r\n        _events_engine.default.on($element, \"click\", clearFilterValue);\r\n        (0, _uiGrid_core3.registerKeyboardAction)(\"filterPanel\", this, $element, void 0, clearFilterValue);\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _addTabIndexToElement: function($element) {\r\n        if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n            var tabindex = this.option(\"tabindex\") || 0;\r\n            $element.attr(\"tabindex\", tabindex)\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._invalidate();\r\n                this.option(\"filterPanel.filterEnabled\", true);\r\n                args.handled = true;\r\n                break;\r\n            case \"filterPanel\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getConditionText: function(fieldText, operationText, valueText) {\r\n        var result = \"[\".concat(fieldText, \"] \").concat(operationText);\r\n        if ((0, _type.isDefined)(valueText)) {\r\n            result += valueText\r\n        }\r\n        return result\r\n    },\r\n    _getValueMaskedText: function(value) {\r\n        return Array.isArray(value) ? \"('\".concat(value.join(\"', '\"), \"')\") : \" '\".concat(value, \"'\")\r\n    },\r\n    _getValueText: function(field, customOperation, value) {\r\n        var _this2 = this;\r\n        var deferred = new _deferred.Deferred;\r\n        var hasCustomOperation = customOperation && customOperation.customizeText;\r\n        if ((0, _type.isDefined)(value) || hasCustomOperation) {\r\n            if (!hasCustomOperation && field.lookup) {\r\n                (0, _utils.getCurrentLookupValueText)(field, value, function(data) {\r\n                    deferred.resolve(_this2._getValueMaskedText(data))\r\n                })\r\n            } else {\r\n                var displayValue = Array.isArray(value) ? value : _uiGrid_core2.default.getDisplayValue(field, value);\r\n                (0, _deferred.when)((0, _utils.getCurrentValueText)(field, displayValue, customOperation, FILTER_PANEL_TARGET)).done(function(data) {\r\n                    deferred.resolve(_this2._getValueMaskedText(data))\r\n                })\r\n            }\r\n        } else {\r\n            deferred.resolve(\"\")\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    getConditionText: function(filterValue, options) {\r\n        var that = this;\r\n        var operation = filterValue[1];\r\n        var deferred = new _deferred.Deferred;\r\n        var customOperation = (0, _utils.getCustomOperation)(options.customOperations, operation);\r\n        var operationText;\r\n        var field = (0, _utils.getField)(filterValue[0], options.columns);\r\n        var fieldText = field.caption || \"\";\r\n        var value = filterValue[2];\r\n        if (customOperation) {\r\n            operationText = customOperation.caption || (0, _inflector.captionize)(customOperation.name)\r\n        } else {\r\n            if (null === value) {\r\n                operationText = (0, _utils.getCaptionByOperation)(\"=\" === operation ? \"isblank\" : \"isnotblank\", options.filterOperationDescriptions)\r\n            } else {\r\n                operationText = (0, _utils.getCaptionByOperation)(operation, options.filterOperationDescriptions)\r\n            }\r\n        }\r\n        this._getValueText(field, customOperation, value).done(function(valueText) {\r\n            deferred.resolve(that._getConditionText(fieldText, operationText, valueText))\r\n        });\r\n        return deferred\r\n    },\r\n    getGroupText: function(filterValue, options, isInnerGroup) {\r\n        var that = this;\r\n        var result = new _deferred.Deferred;\r\n        var textParts = [];\r\n        var groupValue = (0, _utils.getGroupValue)(filterValue);\r\n        filterValue.forEach(function(item) {\r\n            if ((0, _utils.isCondition)(item)) {\r\n                textParts.push(that.getConditionText(item, options))\r\n            } else {\r\n                if ((0, _utils.isGroup)(item)) {\r\n                    textParts.push(that.getGroupText(item, options, true))\r\n                }\r\n            }\r\n        });\r\n        _deferred.when.apply(this, textParts).done(function() {\r\n            var text;\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            if (\"!\" === groupValue[0]) {\r\n                var groupText = options.groupOperationDescriptions[\"not\" + groupValue.substring(1, 2).toUpperCase() + groupValue.substring(2)].split(\" \");\r\n                text = \"\".concat(groupText[0], \" \").concat(args[0])\r\n            } else {\r\n                text = args.join(\" \".concat(options.groupOperationDescriptions[groupValue], \" \"))\r\n            }\r\n            if (isInnerGroup) {\r\n                text = \"(\".concat(text, \")\")\r\n            }\r\n            result.resolve(text)\r\n        });\r\n        return result\r\n    },\r\n    getFilterText: function(filterValue, customOperations) {\r\n        var that = this;\r\n        var options = {\r\n            customOperations: customOperations,\r\n            columns: that.getController(\"columns\").getFilteringColumns(),\r\n            filterOperationDescriptions: that.option(\"filterBuilder.filterOperationDescriptions\"),\r\n            groupOperationDescriptions: that.option(\"filterBuilder.groupOperationDescriptions\")\r\n        };\r\n        return (0, _utils.isCondition)(filterValue) ? that.getConditionText(filterValue, options) : that.getGroupText(filterValue, options)\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterPanel: {\r\n                visible: false,\r\n                filterEnabled: true,\r\n                texts: {\r\n                    createFilter: _message.default.format(\"dxDataGrid-filterPanelCreateFilter\"),\r\n                    clearFilter: _message.default.format(\"dxDataGrid-filterPanelClearFilter\"),\r\n                    filterEnabledHint: _message.default.format(\"dxDataGrid-filterPanelFilterEnabledHint\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        filterPanelView: FilterPanelView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"filterPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _overlay = _interopRequireDefault(require(\"../overlay\"));\r\nvar _menu = _interopRequireDefault(require(\"../menu\"));\r\nvar _accessibility = require(\"../shared/accessibility\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"filter-operation-equals\",\r\n    \"<>\": \"filter-operation-not-equals\",\r\n    \"<\": \"filter-operation-less\",\r\n    \"<=\": \"filter-operation-less-equal\",\r\n    \">\": \"filter-operation-greater\",\r\n    \">=\": \"filter-operation-greater-equal\",\r\n    \"default\": \"filter-operation-default\",\r\n    notcontains: \"filter-operation-not-contains\",\r\n    contains: \"filter-operation-contains\",\r\n    startswith: \"filter-operation-starts-with\",\r\n    endswith: \"filter-operation-ends-with\",\r\n    between: \"filter-operation-between\"\r\n};\r\nvar OPERATION_DESCRIPTORS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    between: \"between\"\r\n};\r\nvar FILTERING_TIMEOUT = 700;\r\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\r\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\r\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\r\nvar MENU_CLASS = \"dx-menu\";\r\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\r\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar FILTER_MENU = \"dx-filter-menu\";\r\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\r\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\r\nvar FOCUSED_CLASS = \"dx-focused\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\r\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\r\n\r\nfunction isOnClickApplyFilterMode(that) {\r\n    return \"onClick\" === that.option(\"filterRow.applyFilter\")\r\n}\r\nvar ColumnHeadersViewFilterRowExtender = function() {\r\n    var getEditorInstance = function($editorContainer) {\r\n        var $editor = $editorContainer && $editorContainer.children();\r\n        var componentNames = $editor && $editor.data(\"dxComponents\");\r\n        var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\r\n        if (editor instanceof _editor.default) {\r\n            return editor\r\n        }\r\n    };\r\n    var getRangeTextByFilterValue = function(that, column) {\r\n        var result = \"\";\r\n        var rangeEnd = \"\";\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var formatOptions = _uiGrid_core2.default.getFormatOptionsByColumn(column, \"filterRow\");\r\n        if (Array.isArray(filterValue)) {\r\n            result = _uiGrid_core2.default.formatValue(filterValue[0], formatOptions);\r\n            rangeEnd = _uiGrid_core2.default.formatValue(filterValue[1], formatOptions);\r\n            if (\"\" !== rangeEnd) {\r\n                result += \" - \" + rangeEnd\r\n            }\r\n        } else {\r\n            if ((0, _type.isDefined)(filterValue)) {\r\n                result = _uiGrid_core2.default.formatValue(filterValue, formatOptions)\r\n            }\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getColumnFilterValue(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue\r\n        }\r\n    }\r\n    var getColumnSelectedFilterOperation = function(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation\r\n        }\r\n    };\r\n    var isValidFilterValue = function(filterValue, column) {\r\n        if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\r\n            return false\r\n        }\r\n        return void 0 !== filterValue\r\n    };\r\n    var getFilterValue = function(that, columnIndex, $editorContainer) {\r\n        var column = that._columnsController.columnOption(columnIndex);\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\r\n        var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\r\n        if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            if (isRangeStart) {\r\n                return filterValue[0]\r\n            } else {\r\n                return filterValue[1]\r\n            }\r\n        }\r\n        return !isFilterRange && isValidFilterValue(filterValue, column) ? filterValue : null\r\n    };\r\n    var normalizeFilterValue = function(that, filterValue, column, $editorContainer) {\r\n        if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            var columnFilterValue = getColumnFilterValue(that, column);\r\n            if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0]\r\n            } else {\r\n                return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue]\r\n            }\r\n        }\r\n        return filterValue\r\n    };\r\n    var updateFilterValue = function(that, options) {\r\n        var value = \"\" === options.value ? null : options.value;\r\n        var $editorContainer = options.container;\r\n        var column = that._columnsController.columnOption(options.column.index);\r\n        var filterValue = getFilterValue(that, column.index, $editorContainer);\r\n        if (!(0, _type.isDefined)(filterValue) && !(0, _type.isDefined)(value)) {\r\n            return\r\n        }\r\n        that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\r\n        var columnOptionName = isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\";\r\n        var normalizedValue = normalizeFilterValue(that, value, column, $editorContainer);\r\n        var isBetween = \"between\" === getColumnSelectedFilterOperation(that, column);\r\n        var notFireEvent = options.notFireEvent || isBetween && Array.isArray(normalizedValue) && normalizedValue.indexOf(void 0) >= 0;\r\n        that._columnsController.columnOption(column.index, columnOptionName, normalizedValue, notFireEvent)\r\n    };\r\n    return {\r\n        _updateEditorValue: function(column, $editorContainer) {\r\n            var that = this;\r\n            var editor = getEditorInstance($editorContainer);\r\n            editor && editor.option(\"value\", getFilterValue(that, column.index, $editorContainer))\r\n        },\r\n        _columnOptionChanged: function(e) {\r\n            var that = this;\r\n            var optionNames = e.optionNames;\r\n            var $cell;\r\n            var $editorContainer;\r\n            var $editorRangeElements;\r\n            var $menu;\r\n            if (_uiGrid_core2.default.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\r\n                var visibleIndex = that._columnsController.getVisibleIndex(e.columnIndex);\r\n                var column = that._columnsController.columnOption(e.columnIndex);\r\n                $cell = that._getCellElement(that.element().find(\".\" + that.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || (0, _renderer.default)();\r\n                $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                if (optionNames.filterValue || optionNames.bufferedFilterValue) {\r\n                    that._updateEditorValue(column, $editorContainer);\r\n                    var overlayInstance = $cell.find(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\r\n                    if (overlayInstance) {\r\n                        $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\r\n                        that._updateEditorValue(column, $editorRangeElements.first());\r\n                        that._updateEditorValue(column, $editorRangeElements.last())\r\n                    }\r\n                    if (!overlayInstance || !overlayInstance.option(\"visible\")) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n                    }\r\n                }\r\n                if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\r\n                    if (visibleIndex >= 0 && column) {\r\n                        $menu = $cell.find(\".\" + MENU_CLASS);\r\n                        if ($menu.length) {\r\n                            that._updateFilterOperationChooser($menu, column, $editorContainer);\r\n                            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                                that._renderFilterRangeContent($cell, column)\r\n                            } else {\r\n                                if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\r\n                                    that._renderEditor($editorContainer, that._getEditorOptions($editorContainer, column));\r\n                                    that._hideFilterRange()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return\r\n            }\r\n            that.callBase(e)\r\n        },\r\n        _renderCore: function() {\r\n            this._filterRangeOverlayInstance = null;\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _resizeCore: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint()\r\n        },\r\n        isFilterRowVisible: function() {\r\n            return this._isElementVisible(this.option(\"filterRow\"))\r\n        },\r\n        isVisible: function() {\r\n            return this.callBase() || this.isFilterRowVisible()\r\n        },\r\n        init: function() {\r\n            this.callBase();\r\n            this._applyFilterViewController = this.getController(\"applyFilter\")\r\n        },\r\n        _initFilterRangeOverlay: function($cell, column) {\r\n            var that = this;\r\n            var sharedData = {};\r\n            var $editorContainer = $cell.find(\".dx-editor-container\");\r\n            var $overlay = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\r\n            return that._createComponent($overlay, _overlay.default, {\r\n                height: \"auto\",\r\n                shading: false,\r\n                showTitle: false,\r\n                focusStateEnabled: false,\r\n                closeOnTargetScroll: false,\r\n                closeOnOutsideClick: true,\r\n                animation: false,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"top\",\r\n                    of: $editorContainer.length && $editorContainer || $cell,\r\n                    offset: \"0 -1\"\r\n                },\r\n                contentTemplate: function(contentElement) {\r\n                    var editorOptions;\r\n                    var $editor = (0, _renderer.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    _events_engine.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function(e) {\r\n                        var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\r\n                        if (\"tab\" === (0, _index.normalizeKeyName)(e) && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            if (!$prevElement.length) {\r\n                                $prevElement = $cell.prev().find(\"[tabindex]\").last()\r\n                            }\r\n                            _events_engine.default.trigger($prevElement, \"focus\")\r\n                        }\r\n                    });\r\n                    $editor = (0, _renderer.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    _events_engine.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function(e) {\r\n                        if (\"tab\" === (0, _index.normalizeKeyName)(e) && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            _events_engine.default.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\")\r\n                        }\r\n                    });\r\n                    return (0, _renderer.default)(contentElement).addClass(that.getWidgetContainerClass())\r\n                },\r\n                onShown: function(e) {\r\n                    var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                    _events_engine.default.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n                },\r\n                onHidden: function() {\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\r\n                    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\r\n                        that.component.updateDimensions()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _updateFilterRangeOverlay: function(options) {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.option(options)\r\n        },\r\n        _showFilterRange: function($cell, column) {\r\n            var that = this;\r\n            var $overlay = $cell.children(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\r\n            var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\r\n            if (!overlayInstance && column) {\r\n                overlayInstance = that._initFilterRangeOverlay($cell, column)\r\n            }\r\n            if (!overlayInstance.option(\"visible\")) {\r\n                that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.hide();\r\n                that._filterRangeOverlayInstance = overlayInstance;\r\n                that._updateFilterRangeOverlay({\r\n                    width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                });\r\n                that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.show()\r\n            }\r\n        },\r\n        _hideFilterRange: function() {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.hide()\r\n        },\r\n        getFilterRangeOverlayInstance: function() {\r\n            return this._filterRangeOverlayInstance\r\n        },\r\n        _createRow: function(row) {\r\n            var _this = this;\r\n            var $row = this.callBase(row);\r\n            if (\"filter\" === row.rowType) {\r\n                $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    _events_engine.default.on($row, \"keydown\", function(event) {\r\n                        return (0, _accessibility.selectView)(\"filterRow\", _this, event)\r\n                    })\r\n                }\r\n            }\r\n            return $row\r\n        },\r\n        _getRows: function() {\r\n            var result = this.callBase();\r\n            if (this.isFilterRowVisible()) {\r\n                result.push({\r\n                    rowType: \"filter\"\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderFilterCell: function(cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            var $cell = (0, _renderer.default)(cell);\r\n            if (that.component.option(\"showColumnHeaders\")) {\r\n                that.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n            that.setAria(\"label\", _message.default.format(\"dxDataGrid-ariaFilterCell\"), $cell);\r\n            $cell.addClass(EDITOR_CELL_CLASS);\r\n            var $container = (0, _renderer.default)(\"<div>\").appendTo($cell);\r\n            var $editorContainer = (0, _renderer.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                that._renderFilterRangeContent($cell, column)\r\n            } else {\r\n                var editorOptions = that._getEditorOptions($editorContainer, column);\r\n                that._renderEditor($editorContainer, editorOptions)\r\n            }\r\n            var alignment = column.alignment;\r\n            if (alignment && \"center\" !== alignment) {\r\n                $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment)\r\n            }\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                that._renderFilterOperationChooser($container, column, $editorContainer)\r\n            }\r\n        },\r\n        _renderCellContent: function($cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            if (\"filter\" === options.rowType) {\r\n                if (column.command) {\r\n                    $cell.html(\"&nbsp;\")\r\n                } else {\r\n                    if (column.allowFiltering) {\r\n                        that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(function() {\r\n                            that._updateCell($cell, options)\r\n                        });\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            that.callBase($cell, options)\r\n        },\r\n        _getEditorOptions: function($editorContainer, column) {\r\n            var that = this;\r\n            var accessibilityOptions = {\r\n                editorOptions: {\r\n                    inputAttr: that._getFilterInputAccessibilityAttributes(column)\r\n                }\r\n            };\r\n            var result = (0, _extend.extend)(accessibilityOptions, column, {\r\n                value: getFilterValue(that, column.index, $editorContainer),\r\n                parentType: \"filterRow\",\r\n                showAllText: that.option(\"filterRow.showAllText\"),\r\n                updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\r\n                width: null,\r\n                setValue: function(value, notFireEvent) {\r\n                    updateFilterValue(that, {\r\n                        column: column,\r\n                        value: value,\r\n                        container: $editorContainer,\r\n                        notFireEvent: notFireEvent\r\n                    })\r\n                }\r\n            });\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    result.placeholder = that.option(\"filterRow.betweenStartText\")\r\n                } else {\r\n                    result.placeholder = that.option(\"filterRow.betweenEndText\")\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _getFilterInputAccessibilityAttributes: function(column) {\r\n            var columnAriaLabel = _message.default.format(\"dxDataGrid-ariaFilterCell\");\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                return {\r\n                    \"aria-label\": columnAriaLabel,\r\n                    \"aria-describedby\": column.headerId\r\n                }\r\n            }\r\n            return {\r\n                \"aria-label\": columnAriaLabel\r\n            }\r\n        },\r\n        _renderEditor: function($editorContainer, options) {\r\n            $editorContainer.empty();\r\n            return this.getController(\"editorFactory\").createEditor((0, _renderer.default)(\"<div>\").appendTo($editorContainer), options)\r\n        },\r\n        _renderFilterRangeContent: function($cell, column) {\r\n            var that = this;\r\n            var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n            $editorContainer.empty();\r\n            var $filterRangeContent = (0, _renderer.default)(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\r\n            _events_engine.default.on($filterRangeContent, \"focusin\", function() {\r\n                that._showFilterRange($cell, column)\r\n            });\r\n            $filterRangeContent.appendTo($editorContainer);\r\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n        },\r\n        _updateFilterRangeContent: function($cell, value) {\r\n            var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\r\n            if ($filterRangeContent.length) {\r\n                if (\"\" === value) {\r\n                    $filterRangeContent.html(\"&nbsp;\")\r\n                } else {\r\n                    $filterRangeContent.text(value)\r\n                }\r\n            }\r\n        },\r\n        _updateFilterOperationChooser: function($menu, column, $editorContainer) {\r\n            var that = this;\r\n            var isCellWasFocused;\r\n            var restoreFocus = function() {\r\n                var menu = _menu.default.getInstance($menu);\r\n                menu && menu.option(\"focusedElement\", null);\r\n                isCellWasFocused && that._focusEditor($editorContainer)\r\n            };\r\n            that._createComponent($menu, _menu.default, {\r\n                integrationOptions: {},\r\n                activeStateEnabled: false,\r\n                selectionMode: \"single\",\r\n                cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\r\n                showFirstSubmenuMode: \"onHover\",\r\n                hideSubmenuOnMouseLeave: true,\r\n                items: [{\r\n                    disabled: column.filterOperations && column.filterOperations.length ? false : true,\r\n                    icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\r\n                    selectable: false,\r\n                    items: that._getFilterOperationMenuItems(column)\r\n                }],\r\n                onItemClick: function(properties) {\r\n                    var selectedFilterOperation = properties.itemData.name;\r\n                    var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\r\n                    var notFocusEditor = false;\r\n                    var isOnClickMode = isOnClickApplyFilterMode(that);\r\n                    var options = {};\r\n                    if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\r\n                        return\r\n                    }\r\n                    if (selectedFilterOperation) {\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\r\n                        if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\r\n                            notFocusEditor = \"between\" === selectedFilterOperation;\r\n                            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null\r\n                        }\r\n                    } else {\r\n                        options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null\r\n                    }\r\n                    that._columnsController.columnOption(column.index, options);\r\n                    that._applyFilterViewController.setHighLight($editorContainer, true);\r\n                    if (!selectedFilterOperation) {\r\n                        var editor = getEditorInstance($editorContainer);\r\n                        if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\r\n                            editor.reset();\r\n                            editor.option(\"isValid\", true)\r\n                        }\r\n                    }\r\n                    if (!notFocusEditor) {\r\n                        that._focusEditor($editorContainer)\r\n                    } else {\r\n                        that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column)\r\n                    }\r\n                },\r\n                onSubmenuShown: function() {\r\n                    isCellWasFocused = that._isEditorFocused($editorContainer);\r\n                    that.getController(\"editorFactory\").loseFocus()\r\n                },\r\n                onSubmenuHiding: function() {\r\n                    _events_engine.default.trigger($menu, \"blur\");\r\n                    restoreFocus()\r\n                },\r\n                onContentReady: function(e) {\r\n                    _events_engine.default.on($menu, \"blur\", function() {\r\n                        var menu = e.component;\r\n                        menu._hideSubmenu(menu._visibleSubmenu);\r\n                        restoreFocus()\r\n                    })\r\n                },\r\n                rtlEnabled: that.option(\"rtlEnabled\")\r\n            })\r\n        },\r\n        _isEditorFocused: function($container) {\r\n            return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length\r\n        },\r\n        _focusEditor: function($container) {\r\n            this.getController(\"editorFactory\").focus($container);\r\n            _events_engine.default.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n        },\r\n        _renderFilterOperationChooser: function($container, column, $editorContainer) {\r\n            var that = this;\r\n            var $menu;\r\n            if (that.option(\"filterRow.showOperationChooser\")) {\r\n                $container.addClass(EDITOR_WITH_MENU_CLASS);\r\n                $menu = (0, _renderer.default)(\"<div>\").prependTo($container);\r\n                that._updateFilterOperationChooser($menu, column, $editorContainer)\r\n            }\r\n        },\r\n        _getFilterOperationMenuItems: function(column) {\r\n            var that = this;\r\n            var result = [{}];\r\n            var filterRowOptions = that.option(\"filterRow\");\r\n            var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                var availableFilterOperations = column.filterOperations.filter(function(value) {\r\n                    return (0, _type.isDefined)(OPERATION_DESCRIPTORS[value])\r\n                });\r\n                result = (0, _iterator.map)(availableFilterOperations, function(value) {\r\n                    var descriptionName = OPERATION_DESCRIPTORS[value];\r\n                    return {\r\n                        name: value,\r\n                        selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\r\n                        text: operationDescriptions[descriptionName],\r\n                        icon: OPERATION_ICONS[value]\r\n                    }\r\n                });\r\n                result.push({\r\n                    name: null,\r\n                    text: filterRowOptions && filterRowOptions.resetOperationText,\r\n                    icon: OPERATION_ICONS.default\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        optionChanged: function(args) {\r\n            var that = this;\r\n            switch (args.name) {\r\n                case \"filterRow\":\r\n                case \"showColumnLines\":\r\n                    this._invalidate(true, true);\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    that.callBase(args)\r\n            }\r\n        }\r\n    }\r\n}();\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        (0, _iterator.each)(columns, function() {\r\n            if (this.allowFiltering && this.calculateFilterExpression && (0, _type.isDefined)(this.filterValue)) {\r\n                var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\r\n                filters.push(filter)\r\n            }\r\n        });\r\n        return _uiGrid_core2.default.combineFilters(filters)\r\n    }\r\n};\r\nvar ApplyFilterViewController = _uiGrid_core.default.ViewController.inherit({\r\n    _getHeaderPanel: function() {\r\n        if (!this._headerPanel) {\r\n            this._headerPanel = this.getView(\"headerPanel\")\r\n        }\r\n        return this._headerPanel\r\n    },\r\n    setHighLight: function($element, value) {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\r\n            this._getHeaderPanel().enableApplyButton(value)\r\n        }\r\n    },\r\n    applyFilter: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var columns = columnsController.getColumns();\r\n        columnsController.beginUpdate();\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var column = columns[i];\r\n            if (void 0 !== column.bufferedFilterValue) {\r\n                columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\r\n                column.bufferedFilterValue = void 0\r\n            }\r\n            if (void 0 !== column.bufferedSelectedFilterOperation) {\r\n                columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\r\n                column.bufferedSelectedFilterOperation = void 0\r\n            }\r\n        }\r\n        columnsController.endUpdate();\r\n        this.removeHighLights()\r\n    },\r\n    removeHighLights: function() {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\r\n            this._getHeaderPanel().enableApplyButton(false)\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterRow: {\r\n                visible: false,\r\n                showOperationChooser: true,\r\n                showAllText: _message.default.format(\"dxDataGrid-filterRowShowAllText\"),\r\n                resetOperationText: _message.default.format(\"dxDataGrid-filterRowResetOperationText\"),\r\n                applyFilter: \"auto\",\r\n                applyFilterText: _message.default.format(\"dxDataGrid-applyFilterText\"),\r\n                operationDescriptions: {\r\n                    equal: _message.default.format(\"dxDataGrid-filterRowOperationEquals\"),\r\n                    notEqual: _message.default.format(\"dxDataGrid-filterRowOperationNotEquals\"),\r\n                    lessThan: _message.default.format(\"dxDataGrid-filterRowOperationLess\"),\r\n                    lessThanOrEqual: _message.default.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\r\n                    greaterThan: _message.default.format(\"dxDataGrid-filterRowOperationGreater\"),\r\n                    greaterThanOrEqual: _message.default.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\r\n                    startsWith: _message.default.format(\"dxDataGrid-filterRowOperationStartsWith\"),\r\n                    contains: _message.default.format(\"dxDataGrid-filterRowOperationContains\"),\r\n                    notContains: _message.default.format(\"dxDataGrid-filterRowOperationNotContains\"),\r\n                    endsWith: _message.default.format(\"dxDataGrid-filterRowOperationEndsWith\"),\r\n                    between: _message.default.format(\"dxDataGrid-filterRowOperationBetween\"),\r\n                    isBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                },\r\n                betweenStartText: _message.default.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\r\n                betweenEndText: _message.default.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        applyFilter: ApplyFilterViewController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender,\r\n            columnsResizer: {\r\n                _startResizing: function() {\r\n                    var that = this;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            var cellIndex = overlayInstance.$element().closest(\"td\").index();\r\n                            if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\r\n                                overlayInstance.$content().hide()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _endResizing: function() {\r\n                    var that = this;\r\n                    var $cell;\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            $cell = overlayInstance.$element().closest(\"td\");\r\n                            that._columnHeadersView._updateFilterRangeOverlay({\r\n                                width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                            });\r\n                            overlayInstance.$content().show()\r\n                        }\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterRowExtender,\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var filterItem = this._prepareFilterItem(items);\r\n                    return filterItem.concat(items)\r\n                },\r\n                _prepareFilterItem: function() {\r\n                    var that = this;\r\n                    var filterItem = [];\r\n                    if (that._isShowApplyFilterButton()) {\r\n                        var hintText = that.option(\"filterRow.applyFilterText\");\r\n                        var columns = that._columnsController.getColumns();\r\n                        var disabled = !columns.filter(function(column) {\r\n                            return void 0 !== column.bufferedFilterValue\r\n                        }).length;\r\n                        var onInitialized = function(e) {\r\n                            (0, _renderer.default)(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS))\r\n                        };\r\n                        var onClickHandler = function() {\r\n                            that._applyFilterViewController.applyFilter()\r\n                        };\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: \"apply-filter\",\r\n                                disabled: disabled,\r\n                                onClick: onClickHandler,\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: onInitialized\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            name: \"applyFilterButton\",\r\n                            location: \"after\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 10\r\n                        };\r\n                        filterItem.push(toolbarItem)\r\n                    }\r\n                    return filterItem\r\n                },\r\n                _isShowApplyFilterButton: function() {\r\n                    var filterRowOptions = this.option(\"filterRow\");\r\n                    return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._dataController = this.getController(\"data\");\r\n                    this._applyFilterViewController = this.getController(\"applyFilter\")\r\n                },\r\n                enableApplyButton: function(value) {\r\n                    this.setToolbarItemDisabled(\"applyFilterButton\", !value)\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isShowApplyFilterButton()\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"filterRow\" === args.name) {\r\n                        this._invalidate();\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_sync.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _utils = require(\"../filter_builder/utils\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _filtering = _interopRequireDefault(require(\"../shared/filtering\"));\r\nvar _uiGrid_core3 = require(\"./ui.grid_core.filter_custom_operations\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FILTER_ROW_OPERATIONS = [\"=\", \"<>\", \"<\", \"<=\", \">\", \">=\", \"notcontains\", \"contains\", \"startswith\", \"endswith\", \"between\"];\r\nvar FILTER_TYPES_INCLUDE = \"include\";\r\nvar FILTER_TYPES_EXCLUDE = \"exclude\";\r\n\r\nfunction getColumnIdentifier(column) {\r\n    return column.dataField || column.name\r\n}\r\n\r\nfunction checkForErrors(columns) {\r\n    columns.forEach(function(column) {\r\n        var identifier = getColumnIdentifier(column);\r\n        if (!(0, _type.isDefined)(identifier) && column.allowFiltering) {\r\n            throw new _ui.default.Error(\"E1049\", column.caption)\r\n        }\r\n    })\r\n}\r\nvar FilterSyncController = _uiGrid_core.default.Controller.inherit(function() {\r\n    var getEmptyFilterValues = function() {\r\n        return {\r\n            filterType: FILTER_TYPES_INCLUDE,\r\n            filterValues: void 0\r\n        }\r\n    };\r\n    var canSyncHeaderFilterWithFilterRow = function(column) {\r\n        return !_filtering.default.getGroupInterval(column) && !(column.headerFilter && column.headerFilter.dataSource)\r\n    };\r\n    var getHeaderFilterFromCondition = function(headerFilterCondition, column) {\r\n        if (!headerFilterCondition) {\r\n            return getEmptyFilterValues()\r\n        }\r\n        var filterType;\r\n        var selectedFilterOperation = headerFilterCondition[1];\r\n        var value = headerFilterCondition[2];\r\n        var hasArrayValue = Array.isArray(value);\r\n        if (!hasArrayValue) {\r\n            if (!canSyncHeaderFilterWithFilterRow(column)) {\r\n                return getEmptyFilterValues()\r\n            }\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"anyof\":\r\n            case \"=\":\r\n                filterType = FILTER_TYPES_INCLUDE;\r\n                break;\r\n            case \"noneof\":\r\n            case \"<>\":\r\n                filterType = FILTER_TYPES_EXCLUDE;\r\n                break;\r\n            default:\r\n                return getEmptyFilterValues()\r\n        }\r\n        return {\r\n            filterType: filterType,\r\n            filterValues: hasArrayValue ? value : [value]\r\n        }\r\n    };\r\n    var getConditionFromFilterRow = function(column) {\r\n        var value = column.filterValue;\r\n        if ((0, _type.isDefined)(value)) {\r\n            var operation = column.selectedFilterOperation || column.defaultFilterOperation || (0, _utils.getDefaultOperation)(column);\r\n            var filter = [getColumnIdentifier(column), operation, column.filterValue];\r\n            return filter\r\n        } else {\r\n            return null\r\n        }\r\n    };\r\n    var getConditionFromHeaderFilter = function(column) {\r\n        var selectedOperation;\r\n        var value;\r\n        var filterValues = column.filterValues;\r\n        if (!filterValues) {\r\n            return null\r\n        }\r\n        if (canSyncHeaderFilterWithFilterRow(column) && 1 === column.filterValues.length && !Array.isArray(filterValues[0])) {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"<>\" : selectedOperation = \"=\";\r\n            value = filterValues[0]\r\n        } else {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"noneof\" : selectedOperation = \"anyof\";\r\n            value = filterValues\r\n        }\r\n        return [getColumnIdentifier(column), selectedOperation, value]\r\n    };\r\n    var updateHeaderFilterCondition = function(columnsController, column, headerFilterCondition) {\r\n        var headerFilter = getHeaderFilterFromCondition(headerFilterCondition, column);\r\n        columnsController.columnOption(getColumnIdentifier(column), headerFilter)\r\n    };\r\n    var updateFilterRowCondition = function(columnsController, column, condition) {\r\n        var filterRowOptions;\r\n        var selectedFilterOperation = condition && condition[1];\r\n        var filterOperations = column.filterOperations || column.defaultFilterOperations;\r\n        if ((!filterOperations || filterOperations.indexOf(selectedFilterOperation) >= 0 || selectedFilterOperation === column.defaultFilterOperation) && FILTER_ROW_OPERATIONS.indexOf(selectedFilterOperation) >= 0) {\r\n            if (selectedFilterOperation === column.defaultFilterOperation && !(0, _type.isDefined)(column.selectedFilterOperation)) {\r\n                selectedFilterOperation = column.selectedFilterOperation\r\n            }\r\n            filterRowOptions = {\r\n                filterValue: condition[2],\r\n                selectedFilterOperation: selectedFilterOperation\r\n            }\r\n        } else {\r\n            filterRowOptions = {\r\n                filterValue: void 0,\r\n                selectedFilterOperation: void 0\r\n            }\r\n        }\r\n        columnsController.columnOption(getColumnIdentifier(column), filterRowOptions)\r\n    };\r\n    return {\r\n        syncFilterValue: function() {\r\n            var that = this;\r\n            var columnsController = that.getController(\"columns\");\r\n            var columns = columnsController.getFilteringColumns();\r\n            this._skipSyncColumnOptions = true;\r\n            columns.forEach(function(column) {\r\n                var filterConditions = (0, _utils.getMatchedConditions)(that.option(\"filterValue\"), getColumnIdentifier(column));\r\n                if (1 === filterConditions.length) {\r\n                    var filterCondition = filterConditions[0];\r\n                    updateHeaderFilterCondition(columnsController, column, filterCondition);\r\n                    updateFilterRowCondition(columnsController, column, filterCondition)\r\n                } else {\r\n                    (0, _type.isDefined)(column.filterValues) && updateHeaderFilterCondition(columnsController, column);\r\n                    (0, _type.isDefined)(column.filterValue) && updateFilterRowCondition(columnsController, column)\r\n                }\r\n            });\r\n            this._skipSyncColumnOptions = false\r\n        },\r\n        _initSync: function() {\r\n            var columns = this.getController(\"columns\").getColumns();\r\n            var dataController = this.getController(\"data\");\r\n            var pageIndex = dataController.pageIndex();\r\n            checkForErrors(columns);\r\n            if (!this.option(\"filterValue\")) {\r\n                var filteringColumns = this.getController(\"columns\").getFilteringColumns();\r\n                var filterValue = this.getFilterValueFromColumns(filteringColumns);\r\n                this.option(\"filterValue\", filterValue)\r\n            }\r\n            this.syncFilterValue();\r\n            dataController.pageIndex(pageIndex)\r\n        },\r\n        init: function() {\r\n            var _this = this;\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.isFilterSyncActive()) {\r\n                if (this.getController(\"columns\").isAllDataTypesDefined()) {\r\n                    this._initSync()\r\n                } else {\r\n                    dataController.dataSourceChanged.add(function() {\r\n                        return _this._initSync()\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _getSyncFilterRow: function(filterValue, column) {\r\n            var filter = getConditionFromFilterRow(column);\r\n            if ((0, _type.isDefined)(filter)) {\r\n                return (0, _utils.syncFilters)(filterValue, filter)\r\n            } else {\r\n                return (0, _utils.removeFieldConditionsFromFilter)(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        _getSyncHeaderFilter: function(filterValue, column) {\r\n            var filter = getConditionFromHeaderFilter(column);\r\n            if (filter) {\r\n                return (0, _utils.syncFilters)(filterValue, filter)\r\n            } else {\r\n                return (0, _utils.removeFieldConditionsFromFilter)(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        getFilterValueFromColumns: function(columns) {\r\n            if (!this.getController(\"data\").isFilterSyncActive()) {\r\n                return null\r\n            }\r\n            var filterValue = [\"and\"];\r\n            columns && columns.forEach(function(column) {\r\n                var headerFilter = getConditionFromHeaderFilter(column);\r\n                var filterRow = getConditionFromFilterRow(column);\r\n                headerFilter && (0, _utils.addItem)(headerFilter, filterValue);\r\n                filterRow && (0, _utils.addItem)(filterRow, filterValue)\r\n            });\r\n            return (0, _utils.getNormalizedFilter)(filterValue)\r\n        },\r\n        syncFilterRow: function(column, value) {\r\n            this.option(\"filterValue\", this._getSyncFilterRow(this.option(\"filterValue\"), column))\r\n        },\r\n        syncHeaderFilter: function(column) {\r\n            this.option(\"filterValue\", this._getSyncHeaderFilter(this.option(\"filterValue\"), column))\r\n        },\r\n        getCustomFilterOperations: function() {\r\n            var filterBuilderCustomOperations = this.option(\"filterBuilder.customOperations\") || [];\r\n            return [(0, _uiGrid_core3.anyOf)(this.component), (0, _uiGrid_core3.noneOf)(this.component)].concat(filterBuilderCustomOperations)\r\n        },\r\n        publicMethods: function() {\r\n            return [\"getCustomFilterOperations\"]\r\n        }\r\n    }\r\n}());\r\nvar DataControllerFilterSyncExtender = {\r\n    isFilterSyncActive: function() {\r\n        var filterSyncEnabledValue = this.option(\"filterSyncEnabled\");\r\n        return \"auto\" === filterSyncEnabledValue ? this.option(\"filterPanel.visible\") : filterSyncEnabledValue\r\n    },\r\n    skipCalculateColumnFilters: function() {\r\n        return (0, _type.isDefined)(this.option(\"filterValue\")) && this.isFilterSyncActive()\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        var that = this;\r\n        if (false === that.option(\"filterPanel.filterEnabled\")) {\r\n            return that.callBase()\r\n        }\r\n        var filters = [that.callBase()];\r\n        var columns = that.getController(\"columns\").getFilteringColumns();\r\n        var filterValue = that.option(\"filterValue\");\r\n        if (that.isFilterSyncActive()) {\r\n            var currentColumn = that.getController(\"headerFilter\").getCurrentColumn();\r\n            if (currentColumn && filterValue) {\r\n                filterValue = (0, _utils.removeFieldConditionsFromFilter)(filterValue, getColumnIdentifier(currentColumn))\r\n            }\r\n        }\r\n        var customOperations = that.getController(\"filterSync\").getCustomFilterOperations();\r\n        var calculatedFilterValue = (0, _utils.getFilterExpression)(filterValue, columns, customOperations, \"filterBuilder\");\r\n        if (calculatedFilterValue) {\r\n            filters.push(calculatedFilterValue)\r\n        }\r\n        return _uiGrid_core2.default.combineFilters(filters)\r\n    },\r\n    _parseColumnPropertyName: function(fullName) {\r\n        var matched = fullName.match(/.*\\.(.*)/);\r\n        return matched[1]\r\n    },\r\n    clearFilter: function(filterName) {\r\n        this.component.beginUpdate();\r\n        if (arguments.length > 0) {\r\n            if (\"filterValue\" === filterName) {\r\n                this.option(\"filterValue\", null)\r\n            }\r\n            this.callBase(filterName)\r\n        } else {\r\n            this.option(\"filterValue\", null);\r\n            this.callBase()\r\n        }\r\n        this.component.endUpdate()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._applyFilter();\r\n                this.isFilterSyncActive() && this.getController(\"filterSync\").syncFilterValue();\r\n                args.handled = true;\r\n                break;\r\n            case \"filterSyncEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            case \"columns\":\r\n                if (this.isFilterSyncActive()) {\r\n                    var column = this.getController(\"columns\").getColumnByPath(args.fullName);\r\n                    var filterSyncController = this.getController(\"filterSync\");\r\n                    if (column && !filterSyncController._skipSyncColumnOptions) {\r\n                        var propertyName = this._parseColumnPropertyName(args.fullName);\r\n                        filterSyncController._skipSyncColumnOptions = true;\r\n                        if (\"filterType\" === propertyName) {\r\n                            if (FILTER_TYPES_EXCLUDE === args.value || FILTER_TYPES_EXCLUDE === args.previousValue) {\r\n                                filterSyncController.syncHeaderFilter(column)\r\n                            }\r\n                        } else {\r\n                            if (\"filterValues\" === propertyName) {\r\n                                filterSyncController.syncHeaderFilter(column)\r\n                            } else {\r\n                                if ([\"filterValue\", \"selectedFilterOperation\"].indexOf(propertyName) > -1) {\r\n                                    filterSyncController.syncFilterRow(column, column.filterValue)\r\n                                }\r\n                            }\r\n                        }\r\n                        filterSyncController._skipSyncColumnOptions = false\r\n                    }\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar ColumnHeadersViewFilterSyncExtender = {\r\n    _isHeaderFilterEmpty: function(column) {\r\n        if (this.getController(\"data\").isFilterSyncActive()) {\r\n            return !(0, _utils.filterHasField)(this.option(\"filterValue\"), getColumnIdentifier(column))\r\n        }\r\n        return this.callBase(column)\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return !this.getController(\"data\").isFilterSyncActive()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"filterValue\" === args.name) {\r\n            this._updateHeaderFilterIndicators()\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterValue: null,\r\n            filterSyncEnabled: \"auto\"\r\n        }\r\n    },\r\n    controllers: {\r\n        filterSync: FilterSyncController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterSyncExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterSyncExtender\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.focus.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ROW_FOCUSED_CLASS = \"dx-row-focused\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row.\" + ROW_FOCUSED_CLASS;\r\nvar TABLE_POSTFIX_CLASS = \"table\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FocusController = _uiGrid_core.default.ViewController.inherit(function() {\r\n    return {\r\n        init: function() {\r\n            this._dataController = this.getController(\"data\");\r\n            this._keyboardController = this.getController(\"keyboardNavigation\");\r\n            this.component._optionsByReference.focusedRowKey = true\r\n        },\r\n        optionChanged: function(args) {\r\n            if (\"focusedRowIndex\" === args.name) {\r\n                var focusedRowKey = this.option(\"focusedRowKey\");\r\n                this._focusRowByIndex(args.value);\r\n                this._triggerFocusedRowChangedIfNeed(focusedRowKey, args.value);\r\n                args.handled = true\r\n            } else {\r\n                if (\"focusedRowKey\" === args.name) {\r\n                    var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n                    this._focusRowByKey(args.value);\r\n                    this._triggerFocusedRowChangedIfNeed(args.value, focusedRowIndex);\r\n                    args.handled = true\r\n                } else {\r\n                    if (\"focusedColumnIndex\" === args.name) {\r\n                        args.handled = true\r\n                    } else {\r\n                        if (\"focusedRowEnabled\" === args.name) {\r\n                            args.handled = true\r\n                        } else {\r\n                            if (\"autoNavigateToFocusedRow\" === args.name) {\r\n                                args.handled = true\r\n                            } else {\r\n                                this.callBase(args)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _triggerFocusedRowChangedIfNeed: function(focusedRowKey, focusedRowIndex) {\r\n            var focusedRowIndexByKey = this.getFocusedRowIndexByKey(focusedRowKey);\r\n            if (focusedRowIndex === focusedRowIndexByKey) {\r\n                var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n                if (rowIndex >= 0) {\r\n                    var $rowElement = (0, _renderer.default)(this.getView(\"rowsView\").getRowElement(rowIndex));\r\n                    this.getController(\"keyboardNavigation\")._fireFocusedRowChanged($rowElement, focusedRowIndex)\r\n                }\r\n            }\r\n        },\r\n        isAutoNavigateToFocusedRow: function() {\r\n            return \"infinite\" !== this.option(\"scrolling.mode\") && this.option(\"autoNavigateToFocusedRow\")\r\n        },\r\n        _focusRowByIndex: function(index, operationTypes) {\r\n            if (!this.option(\"focusedRowEnabled\")) {\r\n                return\r\n            }\r\n            index = void 0 !== index ? index : this.option(\"focusedRowIndex\");\r\n            if (index < 0) {\r\n                if (this.isAutoNavigateToFocusedRow()) {\r\n                    this._resetFocusedRow()\r\n                }\r\n            } else {\r\n                this._focusRowByIndexCore(index, operationTypes)\r\n            }\r\n        },\r\n        _focusRowByIndexCore: function(index, operationTypes) {\r\n            var _this = this;\r\n            var dataController = this.getController(\"data\");\r\n            var pageSize = dataController.pageSize();\r\n            var setKeyByIndex = function() {\r\n                if (_this._isValidFocusedRowIndex(index)) {\r\n                    var rowIndex = index - dataController.getRowIndexOffset(true);\r\n                    if (!operationTypes || operationTypes.paging && !operationTypes.filtering) {\r\n                        var lastItemIndex = dataController._getLastItemIndex();\r\n                        rowIndex = Math.min(rowIndex, lastItemIndex)\r\n                    }\r\n                    var focusedRowKey = dataController.getKeyByRowIndex(rowIndex, true);\r\n                    if ((0, _type.isDefined)(focusedRowKey) && !_this.isRowFocused(focusedRowKey)) {\r\n                        _this.option(\"focusedRowKey\", focusedRowKey)\r\n                    }\r\n                }\r\n            };\r\n            if (pageSize >= 0) {\r\n                if (!this._isLocalRowIndex(index)) {\r\n                    var pageIndex = Math.floor(index / dataController.pageSize());\r\n                    (0, _deferred.when)(dataController.pageIndex(pageIndex), dataController.waitReady()).done(function() {\r\n                        setKeyByIndex()\r\n                    })\r\n                } else {\r\n                    setKeyByIndex()\r\n                }\r\n            }\r\n        },\r\n        _isLocalRowIndex: function(index) {\r\n            var dataController = this.getController(\"data\");\r\n            var isVirtualScrolling = this.getController(\"keyboardNavigation\")._isVirtualScrolling();\r\n            if (isVirtualScrolling) {\r\n                var pageIndex = Math.floor(index / dataController.pageSize());\r\n                var virtualItems = dataController.virtualItemsCount();\r\n                var virtualItemsBegin = virtualItems ? virtualItems.begin : -1;\r\n                var visibleRowsCount = dataController.getVisibleRows().length + dataController.getRowIndexOffset();\r\n                var visiblePagesCount = Math.ceil(visibleRowsCount / dataController.pageSize());\r\n                return virtualItemsBegin <= index && visiblePagesCount > pageIndex\r\n            }\r\n            return true\r\n        },\r\n        _setFocusedRowKeyByIndex: function(index) {\r\n            var dataController = this.getController(\"data\");\r\n            if (this._isValidFocusedRowIndex(index)) {\r\n                var rowIndex = Math.min(index - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n                var focusedRowKey = dataController.getKeyByRowIndex(rowIndex);\r\n                if ((0, _type.isDefined)(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                    this.option(\"focusedRowKey\", focusedRowKey)\r\n                }\r\n            }\r\n        },\r\n        _focusRowByKey: function(key) {\r\n            if (!(0, _type.isDefined)(key)) {\r\n                this._resetFocusedRow()\r\n            } else {\r\n                this._navigateToRow(key, true)\r\n            }\r\n        },\r\n        _resetFocusedRow: function() {\r\n            var focusedRowKey = this.option(\"focusedRowKey\");\r\n            var isFocusedRowKeyDefined = (0, _type.isDefined)(focusedRowKey);\r\n            if (!isFocusedRowKeyDefined && this.option(\"focusedRowIndex\") < 0) {\r\n                return\r\n            }\r\n            var keyboardController = this.getController(\"keyboardNavigation\");\r\n            if (isFocusedRowKeyDefined) {\r\n                this.option(\"focusedRowKey\", void 0)\r\n            }\r\n            keyboardController.setFocusedRowIndex(-1);\r\n            this.option(\"focusedRowIndex\", -1);\r\n            this.getController(\"data\").updateItems({\r\n                changeType: \"updateFocusedRow\",\r\n                focusedRowKey: void 0\r\n            });\r\n            keyboardController._fireFocusedRowChanged(void 0, -1)\r\n        },\r\n        _isValidFocusedRowIndex: function(rowIndex) {\r\n            var dataController = this.getController(\"data\");\r\n            var row = dataController.getVisibleRows()[rowIndex];\r\n            return !row || \"data\" === row.rowType || \"group\" === row.rowType\r\n        },\r\n        publicMethods: function() {\r\n            return [\"navigateToRow\", \"isRowFocused\"]\r\n        },\r\n        navigateToRow: function(key) {\r\n            if (!this.isAutoNavigateToFocusedRow()) {\r\n                this.option(\"focusedRowIndex\", -1)\r\n            }\r\n            this._navigateToRow(key)\r\n        },\r\n        _navigateToRow: function(key, needFocusRow) {\r\n            var that = this;\r\n            var dataController = that.getController(\"data\");\r\n            var isAutoNavigate = that.isAutoNavigateToFocusedRow();\r\n            var d = new _deferred.Deferred;\r\n            if (void 0 === key || !dataController.dataSource()) {\r\n                return d.reject().promise()\r\n            }\r\n            var rowIndexByKey = that.getFocusedRowIndexByKey(key);\r\n            if (!isAutoNavigate && needFocusRow || rowIndexByKey >= 0) {\r\n                that._navigateTo(key, d, needFocusRow)\r\n            } else {\r\n                dataController.getPageIndexByKey(key).done(function(pageIndex) {\r\n                    if (pageIndex < 0) {\r\n                        d.resolve(-1);\r\n                        return\r\n                    }\r\n                    if (pageIndex === dataController.pageIndex()) {\r\n                        dataController.reload().done(function() {\r\n                            if (that.isRowFocused(key)) {\r\n                                d.resolve(that.getFocusedRowIndexByKey(key))\r\n                            } else {\r\n                                that._navigateTo(key, d, needFocusRow)\r\n                            }\r\n                        }).fail(d.reject)\r\n                    } else {\r\n                        dataController.pageIndex(pageIndex).done(function() {\r\n                            that._navigateTo(key, d, needFocusRow)\r\n                        }).fail(d.reject)\r\n                    }\r\n                }).fail(d.reject)\r\n            }\r\n            return d.promise()\r\n        },\r\n        _navigateTo: function(key, deferred, needFocusRow) {\r\n            var visibleRowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n            var isVirtualRowRenderingMode = \"virtual\" === this.option(\"scrolling.rowRenderingMode\");\r\n            var isAutoNavigate = this.isAutoNavigateToFocusedRow();\r\n            if (isAutoNavigate && isVirtualRowRenderingMode && visibleRowIndex < 0) {\r\n                this._navigateToVirtualRow(key, deferred, needFocusRow)\r\n            } else {\r\n                this._navigateToVisibleRow(key, deferred, needFocusRow)\r\n            }\r\n        },\r\n        _navigateToVisibleRow: function(key, deferred, needFocusRow) {\r\n            if (needFocusRow) {\r\n                this._triggerUpdateFocusedRow(key, deferred)\r\n            } else {\r\n                this.getView(\"rowsView\").scrollToRowElement(key)\r\n            }\r\n        },\r\n        _navigateToVirtualRow: function(key, deferred, needFocusRow) {\r\n            var that = this;\r\n            var dataController = this.getController(\"data\");\r\n            var rowsScrollController = dataController._rowsScrollController;\r\n            var rowIndex = _uiGrid_core2.default.getIndexByKey(key, dataController.items(true));\r\n            var scrollable = that.getView(\"rowsView\").getScrollable();\r\n            if (rowsScrollController && scrollable && rowIndex >= 0) {\r\n                var focusedRowIndex = rowIndex + dataController.getRowIndexOffset(true);\r\n                var offset = rowsScrollController.getItemOffset(focusedRowIndex);\r\n                if (needFocusRow) {\r\n                    var triggerUpdateFocusedRow = function triggerUpdateFocusedRow() {\r\n                        that.component.off(\"contentReady\", triggerUpdateFocusedRow);\r\n                        that._triggerUpdateFocusedRow(key, deferred)\r\n                    };\r\n                    that.component.on(\"contentReady\", triggerUpdateFocusedRow)\r\n                }\r\n                scrollable.scrollTo({\r\n                    y: offset\r\n                })\r\n            }\r\n        },\r\n        _triggerUpdateFocusedRow: function(key, deferred) {\r\n            var dataController = this.getController(\"data\");\r\n            var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n            if (this._isValidFocusedRowIndex(focusedRowIndex)) {\r\n                if (this.option(\"focusedRowEnabled\")) {\r\n                    dataController.updateItems({\r\n                        changeType: \"updateFocusedRow\",\r\n                        focusedRowKey: key\r\n                    })\r\n                } else {\r\n                    this.getView(\"rowsView\").scrollToRowElement(key)\r\n                }\r\n                this.getController(\"keyboardNavigation\").setFocusedRowIndex(focusedRowIndex);\r\n                deferred && deferred.resolve(focusedRowIndex)\r\n            } else {\r\n                deferred && deferred.resolve(-1)\r\n            }\r\n        },\r\n        getFocusedRowIndexByKey: function(key) {\r\n            var dataController = this.getController(\"data\");\r\n            var loadedRowIndex = dataController.getRowIndexByKey(key, true);\r\n            return loadedRowIndex >= 0 ? loadedRowIndex + dataController.getRowIndexOffset(true) : -1\r\n        },\r\n        _focusRowByKeyOrIndex: function() {\r\n            var _this2 = this;\r\n            var focusedRowKey = this.option(\"focusedRowKey\");\r\n            var currentFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n            var keyboardController = this.getController(\"keyboardNavigation\");\r\n            var dataController = this.getController(\"data\");\r\n            if ((0, _type.isDefined)(focusedRowKey)) {\r\n                var visibleRowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n                if (visibleRowIndex >= 0) {\r\n                    if (keyboardController._isVirtualScrolling()) {\r\n                        currentFocusedRowIndex = visibleRowIndex + dataController.getRowIndexOffset()\r\n                    }\r\n                    keyboardController.setFocusedRowIndex(currentFocusedRowIndex);\r\n                    this._triggerUpdateFocusedRow(focusedRowKey)\r\n                } else {\r\n                    this._navigateToRow(focusedRowKey, true).done(function(focusedRowIndex) {\r\n                        if (currentFocusedRowIndex >= 0 && focusedRowIndex < 0) {\r\n                            _this2._focusRowByIndex()\r\n                        } else {\r\n                            if (currentFocusedRowIndex < 0 && focusedRowIndex >= 0) {\r\n                                keyboardController.setFocusedRowIndex(focusedRowIndex)\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                if (currentFocusedRowIndex >= 0) {\r\n                    this.getController(\"focus\")._focusRowByIndex(currentFocusedRowIndex)\r\n                }\r\n            }\r\n        },\r\n        isRowFocused: function(key) {\r\n            var focusedRowKey = this.option(\"focusedRowKey\");\r\n            if ((0, _type.isDefined)(focusedRowKey)) {\r\n                return (0, _common.equalByValue)(key, this.option(\"focusedRowKey\"))\r\n            }\r\n        },\r\n        updateFocusedRow: function(change) {\r\n            var that = this;\r\n            var focusedRowIndex = that._dataController.getRowIndexByKey(change.focusedRowKey);\r\n            var rowsView = that.getView(\"rowsView\");\r\n            var $tableElement;\r\n            (0, _iterator.each)(rowsView.getTableElements(), function(index, element) {\r\n                var _change$items;\r\n                var isMainTable = 0 === index;\r\n                $tableElement = (0, _renderer.default)(element);\r\n                that._clearPreviousFocusedRow($tableElement, focusedRowIndex);\r\n                that._prepareFocusedRow({\r\n                    changedItem: null === change || void 0 === change ? void 0 : null === (_change$items = change.items) || void 0 === _change$items ? void 0 : _change$items[focusedRowIndex],\r\n                    $tableElement: $tableElement,\r\n                    focusedRowIndex: focusedRowIndex,\r\n                    isMainTable: isMainTable\r\n                })\r\n            })\r\n        },\r\n        _clearPreviousFocusedRow: function($tableElement, focusedRowIndex) {\r\n            var _this3 = this;\r\n            var isNotMasterDetailFocusedRow = function(_, focusedRow) {\r\n                var $focusedRowTable = (0, _renderer.default)(focusedRow).closest(\".\".concat(_this3.addWidgetPrefix(TABLE_POSTFIX_CLASS)));\r\n                return $tableElement.is($focusedRowTable)\r\n            };\r\n            var $prevRowFocusedElement = $tableElement.find(FOCUSED_ROW_SELECTOR).filter(isNotMasterDetailFocusedRow);\r\n            $prevRowFocusedElement.removeClass(ROW_FOCUSED_CLASS).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\");\r\n            $prevRowFocusedElement.children(\"td\").removeAttr(\"tabindex\");\r\n            if (0 !== focusedRowIndex) {\r\n                var $firstRow = (0, _renderer.default)(this.getView(\"rowsView\").getRowElement(0));\r\n                $firstRow.removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabIndex\")\r\n            }\r\n        },\r\n        _prepareFocusedRow: function(options) {\r\n            var $row;\r\n            var changedItem = options.changedItem;\r\n            if (changedItem && (\"data\" === changedItem.rowType || \"group\" === changedItem.rowType)) {\r\n                var focusedRowIndex = options.focusedRowIndex;\r\n                var $tableElement = options.$tableElement;\r\n                var isMainTable = options.isMainTable;\r\n                var tabIndex = this.option(\"tabindex\") || 0;\r\n                var rowsView = this.getView(\"rowsView\");\r\n                $row = (0, _renderer.default)(rowsView._getRowElements($tableElement).eq(focusedRowIndex));\r\n                $row.addClass(ROW_FOCUSED_CLASS).attr(\"tabindex\", tabIndex);\r\n                if (isMainTable) {\r\n                    rowsView.scrollToElementVertically($row)\r\n                }\r\n            }\r\n            return $row\r\n        }\r\n    }\r\n}());\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            focusedRowEnabled: false,\r\n            autoNavigateToFocusedRow: true,\r\n            focusedRowKey: void 0,\r\n            focusedRowIndex: -1,\r\n            focusedColumnIndex: -1\r\n        }\r\n    },\r\n    controllers: {\r\n        focus: FocusController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            keyboardNavigation: {\r\n                init: function() {\r\n                    var rowIndex = this.option(\"focusedRowIndex\");\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    this.createAction(\"onFocusedRowChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedRowChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.callBase();\r\n                    this.setRowFocusType();\r\n                    this._focusedCellPosition = {};\r\n                    if ((0, _type.isDefined)(rowIndex)) {\r\n                        this._focusedCellPosition.rowIndex = this.option(\"focusedRowIndex\")\r\n                    }\r\n                    if ((0, _type.isDefined)(columnIndex)) {\r\n                        this._focusedCellPosition.columnIndex = this.option(\"focusedColumnIndex\")\r\n                    }\r\n                },\r\n                setFocusedRowIndex: function(rowIndex) {\r\n                    var dataController = this.getController(\"data\");\r\n                    this.callBase(rowIndex);\r\n                    var visibleRowIndex = rowIndex - dataController.getRowIndexOffset();\r\n                    var visibleRow = dataController.getVisibleRows()[visibleRowIndex];\r\n                    if (!visibleRow || !visibleRow.isNewRow) {\r\n                        this.option(\"focusedRowIndex\", rowIndex)\r\n                    }\r\n                },\r\n                setFocusedColumnIndex: function(columnIndex) {\r\n                    this.callBase(columnIndex);\r\n                    this.option(\"focusedColumnIndex\", columnIndex)\r\n                },\r\n                _escapeKeyHandler: function(eventArgs, isEditing) {\r\n                    if (isEditing || !this.option(\"focusedRowEnabled\")) {\r\n                        this.callBase(eventArgs, isEditing);\r\n                        return\r\n                    }\r\n                    if (this.isCellFocusType()) {\r\n                        this.setRowFocusType();\r\n                        this._focus(this._getCellElementFromTarget(eventArgs.originalEvent.target), true)\r\n                    }\r\n                },\r\n                _updateFocusedCellPosition: function($cell, direction) {\r\n                    var prevRowIndex = this.option(\"focusedRowIndex\");\r\n                    var prevColumnIndex = this.option(\"focusedColumnIndex\");\r\n                    var position = this.callBase($cell, direction);\r\n                    if (position && position.columnIndex >= 0) {\r\n                        this._fireFocusedCellChanged($cell, prevColumnIndex, prevRowIndex)\r\n                    }\r\n                }\r\n            },\r\n            editorFactory: {\r\n                renderFocusOverlay: function($element, hideBorder) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var isRowElement = \"row\" === keyboardController._getElementType($element);\r\n                    var $cell;\r\n                    if (!focusedRowEnabled || !keyboardController.isRowFocusType() || editingController.isEditing()) {\r\n                        this.callBase($element, hideBorder)\r\n                    } else {\r\n                        if (focusedRowEnabled) {\r\n                            if (isRowElement && !$element.hasClass(ROW_FOCUSED_CLASS)) {\r\n                                $cell = keyboardController.getFirstValidCellInRow($element);\r\n                                keyboardController.focus($cell)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            columns: {\r\n                getSortDataSourceParameters: function(_, sortByKey) {\r\n                    var _this4 = this;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var dataSource = dataController._dataSource;\r\n                    var store = dataController.store();\r\n                    var key = store && store.key();\r\n                    var remoteOperations = dataSource && dataSource.remoteOperations() || {};\r\n                    var isLocalOperations = Object.keys(remoteOperations).every(function(operationName) {\r\n                        return !remoteOperations[operationName]\r\n                    });\r\n                    if (key && (this.option(\"focusedRowEnabled\") && false !== this.getController(\"focus\").isAutoNavigateToFocusedRow() || sortByKey)) {\r\n                        key = Array.isArray(key) ? key : [key];\r\n                        var notSortedKeys = key.filter(function(key) {\r\n                            return !_this4.columnOption(key, \"sortOrder\")\r\n                        });\r\n                        if (notSortedKeys.length) {\r\n                            result = result || [];\r\n                            if (isLocalOperations) {\r\n                                result.push({\r\n                                    selector: dataSource.getDataIndexGetter(),\r\n                                    desc: false\r\n                                })\r\n                            } else {\r\n                                notSortedKeys.forEach(function(notSortedKey) {\r\n                                    return result.push({\r\n                                        selector: notSortedKey,\r\n                                        desc: false\r\n                                    })\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            data: {\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateFocusedRow\" === change.changeType) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _fireChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (this.option(\"focusedRowEnabled\") && this._dataSource) {\r\n                        var isPartialUpdate = \"update\" === e.changeType && e.repaintChangesOnly;\r\n                        var isPartialUpdateWithDeleting = isPartialUpdate && e.changeTypes && e.changeTypes.indexOf(\"remove\") >= 0;\r\n                        if (\"refresh\" === e.changeType && e.items.length || isPartialUpdateWithDeleting) {\r\n                            this._updatePageIndexes();\r\n                            this.processUpdateFocusedRow(e)\r\n                        } else {\r\n                            if (\"append\" === e.changeType || \"prepend\" === e.changeType) {\r\n                                this._updatePageIndexes()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _updatePageIndexes: function() {\r\n                    var prevRenderingPageIndex = this._lastRenderingPageIndex || 0;\r\n                    var renderingPageIndex = this._rowsScrollController ? this._rowsScrollController.pageIndex() : 0;\r\n                    this._lastRenderingPageIndex = renderingPageIndex;\r\n                    this._isPagingByRendering = renderingPageIndex !== prevRenderingPageIndex\r\n                },\r\n                isPagingByRendering: function() {\r\n                    return this._isPagingByRendering\r\n                },\r\n                processUpdateFocusedRow: function(e) {\r\n                    var operationTypes = e.operationTypes || {};\r\n                    var focusController = this.getController(\"focus\");\r\n                    var reload = operationTypes.reload,\r\n                        fullReload = operationTypes.fullReload;\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isVirtualScrolling = keyboardController._isVirtualScrolling();\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var isAutoNavigate = focusController.isAutoNavigateToFocusedRow();\r\n                    if (reload && !fullReload && (0, _type.isDefined)(focusedRowKey)) {\r\n                        focusController._navigateToRow(focusedRowKey, true).done(function(focusedRowIndex) {\r\n                            if (focusedRowIndex < 0) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        })\r\n                    } else {\r\n                        if (operationTypes.paging && !isVirtualScrolling) {\r\n                            if (isAutoNavigate) {\r\n                                var rowIndexByKey = this.getRowIndexByKey(focusedRowKey);\r\n                                var isValidRowIndexByKey = rowIndexByKey >= 0;\r\n                                var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n                                var needFocusRowByIndex = focusedRowIndex >= 0 && (focusedRowIndex === rowIndexByKey || !isValidRowIndexByKey);\r\n                                if (needFocusRowByIndex) {\r\n                                    focusController._focusRowByIndex(void 0, operationTypes)\r\n                                }\r\n                            } else {\r\n                                if (this.getRowIndexByKey(focusedRowKey) < 0) {\r\n                                    this.option(\"focusedRowIndex\", -1)\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (operationTypes.fullReload) {\r\n                                focusController._focusRowByKeyOrIndex()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                getPageIndexByKey: function(key) {\r\n                    var that = this;\r\n                    var d = new _deferred.Deferred;\r\n                    that.getGlobalRowIndexByKey(key).done(function(globalIndex) {\r\n                        d.resolve(globalIndex >= 0 ? Math.floor(globalIndex / that.pageSize()) : -1)\r\n                    }).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                getGlobalRowIndexByKey: function(key) {\r\n                    if (this._dataSource.group()) {\r\n                        return this._calculateGlobalRowIndexByGroupedData(key)\r\n                    }\r\n                    return this._calculateGlobalRowIndexByFlatData(key)\r\n                },\r\n                _calculateGlobalRowIndexByFlatData: function(key, groupFilter, useGroup) {\r\n                    var that = this;\r\n                    var deferred = new _deferred.Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (Array.isArray(key)) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    var filter = that._generateFilterByKey(key);\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        skip: 0,\r\n                        take: 1\r\n                    }).done(function(data) {\r\n                        if (data.length > 0) {\r\n                            filter = that._generateOperationFilterByKey(key, data[0], useGroup);\r\n                            dataSource.load({\r\n                                filter: that._concatWithCombinedFilter(filter, groupFilter),\r\n                                skip: 0,\r\n                                take: 1,\r\n                                requireTotalCount: true\r\n                            }).done(function(_, extra) {\r\n                                deferred.resolve(extra.totalCount)\r\n                            })\r\n                        } else {\r\n                            deferred.resolve(-1)\r\n                        }\r\n                    });\r\n                    return deferred.promise()\r\n                },\r\n                _concatWithCombinedFilter: function(filter, groupFilter) {\r\n                    var combinedFilter = this.getCombinedFilter();\r\n                    return _uiGrid_core2.default.combineFilters([filter, combinedFilter, groupFilter])\r\n                },\r\n                _generateBooleanFilter: function(selector, value, sortInfo) {\r\n                    var result;\r\n                    if (false === value) {\r\n                        result = [selector, \"=\", sortInfo.desc ? true : null]\r\n                    } else {\r\n                        if (true === value ? !sortInfo.desc : sortInfo.desc) {\r\n                            result = [selector, \"<>\", value]\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _generateOperationFilterByKey: function(key, rowData, useGroup) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key, \"<\");\r\n                    var sort = that._columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().filtering, true);\r\n                    if (useGroup) {\r\n                        var group = that._columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().filtering);\r\n                        if (group) {\r\n                            sort = sort ? group.concat(sort) : group\r\n                        }\r\n                    }\r\n                    if (sort) {\r\n                        sort.slice().reverse().forEach(function(sortInfo) {\r\n                            var selector = sortInfo.selector;\r\n                            var getter;\r\n                            if (\"function\" === typeof selector) {\r\n                                getter = selector\r\n                            } else {\r\n                                getter = that._columnsController.columnOption(selector, \"selector\")\r\n                            }\r\n                            var value = getter ? getter(rowData) : rowData[selector];\r\n                            filter = [\r\n                                [selector, \"=\", value], \"and\", filter\r\n                            ];\r\n                            if (null === value || (0, _type.isBoolean)(value)) {\r\n                                var booleanFilter = that._generateBooleanFilter(selector, value, sortInfo);\r\n                                if (booleanFilter) {\r\n                                    filter = [booleanFilter, \"or\", filter]\r\n                                }\r\n                            } else {\r\n                                var filterOperation = sortInfo.desc ? \">\" : \"<\";\r\n                                var sortFilter = [selector, filterOperation, value];\r\n                                if (!sortInfo.desc) {\r\n                                    sortFilter = [sortFilter, \"or\", [selector, \"=\", null]]\r\n                                }\r\n                                filter = [sortFilter, \"or\", filter]\r\n                            }\r\n                        })\r\n                    }\r\n                    return filter\r\n                },\r\n                _generateFilterByKey: function(key, operation) {\r\n                    var dataSourceKey = this._dataSource.key();\r\n                    var filter = [];\r\n                    if (!operation) {\r\n                        operation = \"=\"\r\n                    }\r\n                    if (Array.isArray(dataSourceKey)) {\r\n                        for (var i = 0; i < dataSourceKey.length; ++i) {\r\n                            var keyPart = key[dataSourceKey[i]];\r\n                            if (keyPart) {\r\n                                if (filter.length > 0) {\r\n                                    filter.push(\"and\")\r\n                                }\r\n                                filter.push([dataSourceKey[i], operation, keyPart])\r\n                            }\r\n                        }\r\n                    } else {\r\n                        filter = [dataSourceKey, operation, key]\r\n                    }\r\n                    return filter\r\n                },\r\n                _getLastItemIndex: function() {\r\n                    return this.items(true).length - 1\r\n                }\r\n            },\r\n            editing: {\r\n                _deleteRowCore: function(rowIndex) {\r\n                    var _this5 = this;\r\n                    var deferred = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var rowKey = dataController.getKeyByRowIndex(rowIndex);\r\n                    deferred.done(function() {\r\n                        var rowIndex = dataController.getRowIndexByKey(rowKey);\r\n                        var visibleRows = dataController.getVisibleRows();\r\n                        if (rowIndex === -1 && !visibleRows.length) {\r\n                            _this5.getController(\"focus\")._resetFocusedRow()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase(row);\r\n                    if (this.option(\"focusedRowEnabled\") && row) {\r\n                        if (this.getController(\"focus\").isRowFocused(row.key)) {\r\n                            $row.addClass(ROW_FOCUSED_CLASS)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && this.option(\"dataSource\")) {\r\n                        var store = this._dataController.store();\r\n                        if (store && !store.key()) {\r\n                            this._dataController.fireError(\"E1042\", \"Row focusing\")\r\n                        }\r\n                    }\r\n                },\r\n                _update: function(change) {\r\n                    if (\"updateFocusedRow\" === change.changeType) {\r\n                        if (this.option(\"focusedRowEnabled\")) {\r\n                            this.getController(\"focus\").updateFocusedRow(change)\r\n                        }\r\n                    } else {\r\n                        this.callBase(change)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function($cellElements, preventScroll) {\r\n                    if (this.option(\"focusedRowEnabled\")) {\r\n                        this._setFocusedRowElementTabIndex(preventScroll)\r\n                    } else {\r\n                        this.callBase($cellElements)\r\n                    }\r\n                },\r\n                _setFocusedRowElementTabIndex: function(preventScroll) {\r\n                    var _this6 = this;\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var tabIndex = this.option(\"tabIndex\") || 0;\r\n                    var dataController = this._dataController;\r\n                    var columnsController = this._columnsController;\r\n                    var rowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    var $row = this._findRowElementForTabIndex();\r\n                    if (!(0, _type.isDefined)(this._scrollToFocusOnResize)) {\r\n                        this._scrollToFocusOnResize = function() {\r\n                            _this6.scrollToElementVertically(_this6._findRowElementForTabIndex());\r\n                            _this6.resizeCompleted.remove(_this6._scrollToFocusOnResize)\r\n                        }\r\n                    }\r\n                    $row.attr(\"tabIndex\", tabIndex);\r\n                    if (rowIndex >= 0 && !preventScroll) {\r\n                        if (columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        rowIndex += dataController.getRowIndexOffset();\r\n                        columnIndex += columnsController.getColumnIndexOffset();\r\n                        this.getController(\"keyboardNavigation\").setFocusedCellPosition(rowIndex, columnIndex);\r\n                        if (this.getController(\"focus\").isAutoNavigateToFocusedRow()) {\r\n                            var dataSource = dataController.dataSource();\r\n                            var operationTypes = dataSource && dataSource.operationTypes();\r\n                            if (operationTypes && !operationTypes.paging && !dataController.isPagingByRendering()) {\r\n                                this.resizeCompleted.remove(this._scrollToFocusOnResize);\r\n                                this.resizeCompleted.add(this._scrollToFocusOnResize)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _findRowElementForTabIndex: function() {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n                    return (0, _renderer.default)(this.getRowElement(rowIndex >= 0 ? rowIndex : 0))\r\n                },\r\n                scrollToRowElement: function(key) {\r\n                    var rowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n                    var $row = (0, _renderer.default)(this.getRow(rowIndex));\r\n                    this.scrollToElementVertically($row)\r\n                },\r\n                scrollToElementVertically: function($row) {\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable) {\r\n                        var position = scrollable.getScrollElementPosition($row, \"vertical\");\r\n                        scrollable.scrollTo({\r\n                            top: position\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.grid_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar accessibility = _interopRequireWildcard(require(\"../shared/accessibility\"));\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cacheBabelInterop = new WeakMap;\r\n    var cacheNodeInterop = new WeakMap;\r\n    return (_getRequireWildcardCache = function(nodeInterop) {\r\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop\r\n    })(nodeInterop)\r\n}\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) {\r\n    if (!nodeInterop && obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache(nodeInterop);\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (\"default\" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TABLE_CLASS = \"table\";\r\nvar BORDERS_CLASS = \"borders\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar IMPORTANT_MARGIN_CLASS = \"important-margin\";\r\nvar TEXT_CONTENT_CLASS = \"text-content\";\r\nvar HIDDEN_CLASS = \"dx-hidden\";\r\nvar GRIDBASE_CONTAINER_CLASS = \"dx-gridbase-container\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar VIEW_NAMES = [\"columnsSeparatorView\", \"blockSeparatorView\", \"trackerView\", \"headerPanel\", \"columnHeadersView\", \"rowsView\", \"footerView\", \"columnChooserView\", \"filterPanelView\", \"pagerView\", \"draggingHeaderView\", \"contextMenuView\", \"errorView\", \"headerFilterView\", \"filterBuilderView\"];\r\nvar isPercentWidth = function(width) {\r\n    return (0, _type.isString)(width) && \"%\" === width.slice(-1)\r\n};\r\nvar isPixelWidth = function(width) {\r\n    return (0, _type.isString)(width) && \"px\" === width.slice(-2)\r\n};\r\nvar mergeArraysByMaxValue = function(values1, values2) {\r\n    var result = [];\r\n    if (values1 && values2 && values1.length && values1.length === values2.length) {\r\n        for (var i = 0; i < values1.length; i++) {\r\n            result.push(values1[i] > values2[i] ? values1[i] : values2[i])\r\n        }\r\n    } else {\r\n        if (values1 && values1.length) {\r\n            result = values1\r\n        } else {\r\n            if (values2) {\r\n                result = values2\r\n            }\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar getContainerHeight = function($container) {\r\n    var clientHeight = $container.get(0).clientHeight;\r\n    var paddingTop = parseFloat($container.css(\"paddingTop\"));\r\n    var paddingBottom = parseFloat($container.css(\"paddingBottom\"));\r\n    return clientHeight - paddingTop - paddingBottom\r\n};\r\nvar calculateFreeWidth = function(that, widths) {\r\n    var contentWidth = that._rowsView.contentWidth();\r\n    var totalWidth = that._getTotalWidth(widths, contentWidth);\r\n    return contentWidth - totalWidth\r\n};\r\nvar calculateFreeWidthWithCurrentMinWidth = function(that, columnIndex, currentMinWidth, widths) {\r\n    return calculateFreeWidth(that, widths.map(function(width, index) {\r\n        return index === columnIndex ? currentMinWidth : width\r\n    }))\r\n};\r\nvar restoreFocus = function(focusedElement, selectionRange) {\r\n    accessibility.hiddenFocus(focusedElement);\r\n    _uiGrid_core2.default.setSelectionRange(focusedElement, selectionRange)\r\n};\r\nvar ResizingController = _uiGrid_core.default.ViewController.inherit({\r\n    _initPostRenderHandlers: function() {\r\n        var that = this;\r\n        var dataController = that._dataController;\r\n        if (!that._refreshSizesHandler) {\r\n            that._refreshSizesHandler = function(e) {\r\n                dataController.changed.remove(that._refreshSizesHandler);\r\n                var resizeDeferred;\r\n                var changeType = e && e.changeType;\r\n                var isDelayed = e && e.isDelayed;\r\n                var items = dataController.items();\r\n                if (!e || \"refresh\" === changeType || \"prepend\" === changeType || \"append\" === changeType) {\r\n                    if (!isDelayed) {\r\n                        resizeDeferred = that.resize()\r\n                    }\r\n                } else {\r\n                    if (\"update\" === changeType && e.changeTypes) {\r\n                        if ((items.length > 1 || \"insert\" !== e.changeTypes[0]) && !(0 === items.length && \"remove\" === e.changeTypes[0]) && !e.needUpdateDimensions) {\r\n                            (0, _common.deferUpdate)(function() {\r\n                                return (0, _common.deferRender)(function() {\r\n                                    return (0, _common.deferUpdate)(function() {\r\n                                        that._setScrollerSpacing(that._hasHeight);\r\n                                        that._rowsView.resize()\r\n                                    })\r\n                                })\r\n                            })\r\n                        } else {\r\n                            resizeDeferred = that.resize()\r\n                        }\r\n                    }\r\n                }\r\n                if (changeType && \"updateSelection\" !== changeType && \"updateFocusedRow\" !== changeType && !isDelayed) {\r\n                    (0, _deferred.when)(resizeDeferred).done(function() {\r\n                        that._setAriaRowColCount();\r\n                        that.fireContentReadyAction()\r\n                    })\r\n                }\r\n            };\r\n            that._dataController.changed.add(function() {\r\n                that._dataController.changed.add(that._refreshSizesHandler)\r\n            })\r\n        }\r\n    },\r\n    fireContentReadyAction: function() {\r\n        this.component._fireContentReadyAction()\r\n    },\r\n    _setAriaRowColCount: function() {\r\n        var component = this.component;\r\n        component.setAria({\r\n            rowCount: this._dataController.totalItemsCount(),\r\n            colCount: component.columnCount()\r\n        }, component.$element().children(\".\" + GRIDBASE_CONTAINER_CLASS))\r\n    },\r\n    _getBestFitWidths: function() {\r\n        var _this$_footerView;\r\n        var rowsView = this._rowsView;\r\n        var columnHeadersView = this._columnHeadersView;\r\n        if (!this.option(\"legacyRendering\")) {\r\n            var _widths;\r\n            var widths = rowsView.getColumnWidths();\r\n            if (!(null !== (_widths = widths) && void 0 !== _widths && _widths.length)) {\r\n                var _rowsView$getTableEle;\r\n                var headersTableElement = columnHeadersView.getTableElement();\r\n                columnHeadersView.setTableElement(null === (_rowsView$getTableEle = rowsView.getTableElement()) || void 0 === _rowsView$getTableEle ? void 0 : _rowsView$getTableEle.children(\".dx-header\"));\r\n                widths = columnHeadersView.getColumnWidths();\r\n                columnHeadersView.setTableElement(headersTableElement)\r\n            }\r\n            return widths\r\n        }\r\n        var rowsColumnWidths = rowsView.getColumnWidths();\r\n        var headerColumnWidths = null === columnHeadersView || void 0 === columnHeadersView ? void 0 : columnHeadersView.getColumnWidths();\r\n        var footerColumnWidths = null === (_this$_footerView = this._footerView) || void 0 === _this$_footerView ? void 0 : _this$_footerView.getColumnWidths();\r\n        var resultWidths = mergeArraysByMaxValue(rowsColumnWidths, headerColumnWidths);\r\n        resultWidths = mergeArraysByMaxValue(resultWidths, footerColumnWidths);\r\n        return resultWidths\r\n    },\r\n    _setVisibleWidths: function(visibleColumns, widths) {\r\n        var columnsController = this._columnsController;\r\n        columnsController.beginUpdate();\r\n        (0, _iterator.each)(visibleColumns, function(index, column) {\r\n            var columnId = columnsController.getColumnId(column);\r\n            columnsController.columnOption(columnId, \"visibleWidth\", widths[index])\r\n        });\r\n        columnsController.endUpdate()\r\n    },\r\n    _toggleBestFitModeForView: function(view, className, isBestFit) {\r\n        var _this = this;\r\n        if (!view || !view.isVisible()) {\r\n            return\r\n        }\r\n        var $rowsTables = this._rowsView.getTableElements();\r\n        var $viewTables = view.getTableElements();\r\n        (0, _iterator.each)($rowsTables, function(index, tableElement) {\r\n            var $tableBody;\r\n            var $rowsTable = (0, _renderer.default)(tableElement);\r\n            var $viewTable = $viewTables.eq(index);\r\n            if ($viewTable && $viewTable.length) {\r\n                if (isBestFit) {\r\n                    $tableBody = $viewTable.children(\"tbody\").appendTo($rowsTable)\r\n                } else {\r\n                    $tableBody = $rowsTable.children(\".\" + className).appendTo($viewTable)\r\n                }\r\n                $tableBody.toggleClass(className, isBestFit);\r\n                $tableBody.toggleClass(_this.addWidgetPrefix(\"best-fit\"), isBestFit)\r\n            }\r\n        })\r\n    },\r\n    _toggleBestFitMode: function(isBestFit) {\r\n        var $element = this.component.$element();\r\n        var that = this;\r\n        if (!that.option(\"legacyRendering\")) {\r\n            var $rowsTable = that._rowsView.getTableElement();\r\n            var $rowsFixedTable = that._rowsView.getTableElements().eq(1);\r\n            if (!$rowsTable) {\r\n                return\r\n            }\r\n            $rowsTable.css(\"tableLayout\", isBestFit ? \"auto\" : \"fixed\");\r\n            $rowsTable.children(\"colgroup\").css(\"display\", isBestFit ? \"none\" : \"\");\r\n            $rowsFixedTable.toggleClass(this.addWidgetPrefix(TABLE_FIXED_CLASS), !isBestFit);\r\n            that._toggleBestFitModeForView(that._columnHeadersView, \"dx-header\", isBestFit);\r\n            that._toggleBestFitModeForView(that._footerView, \"dx-footer\", isBestFit);\r\n            if (that._needStretch()) {\r\n                $rowsTable.get(0).style.width = isBestFit ? \"auto\" : \"\"\r\n            }\r\n            if (_browser.default.msie && 11 === parseInt(_browser.default.version)) {\r\n                $rowsTable.find(\".\" + this.addWidgetPrefix(TABLE_FIXED_CLASS)).each(function() {\r\n                    this.style.width = isBestFit ? \"10px\" : \"\"\r\n                })\r\n            }\r\n        } else {\r\n            $element.find(\".\" + this.addWidgetPrefix(TABLE_CLASS)).toggleClass(this.addWidgetPrefix(TABLE_FIXED_CLASS), !isBestFit);\r\n            $element.find(EDITORS_INPUT_SELECTOR).toggleClass(HIDDEN_CLASS, isBestFit);\r\n            $element.find(\".dx-group-cell\").toggleClass(HIDDEN_CLASS, isBestFit);\r\n            $element.find(\".dx-header-row .\" + this.addWidgetPrefix(TEXT_CONTENT_CLASS)).css(\"maxWidth\", \"\")\r\n        }\r\n    },\r\n    _synchronizeColumns: function() {\r\n        var that = this;\r\n        var columnsController = that._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnAutoWidth = that.option(\"columnAutoWidth\");\r\n        var legacyRendering = that.option(\"legacyRendering\");\r\n        var needBestFit = that._needBestFit();\r\n        var hasMinWidth = false;\r\n        var resetBestFitMode;\r\n        var isColumnWidthsCorrected = false;\r\n        var resultWidths = [];\r\n        var focusedElement;\r\n        var selectionRange;\r\n        var normalizeWidthsByExpandColumns = function() {\r\n            var expandColumnWidth;\r\n            (0, _iterator.each)(visibleColumns, function(index, column) {\r\n                if (\"groupExpand\" === column.type) {\r\n                    expandColumnWidth = resultWidths[index]\r\n                }\r\n            });\r\n            (0, _iterator.each)(visibleColumns, function(index, column) {\r\n                if (\"groupExpand\" === column.type && expandColumnWidth) {\r\n                    resultWidths[index] = expandColumnWidth\r\n                }\r\n            })\r\n        };\r\n        !needBestFit && (0, _iterator.each)(visibleColumns, function(index, column) {\r\n            if (\"auto\" === column.width || legacyRendering && column.fixed) {\r\n                needBestFit = true;\r\n                return false\r\n            }\r\n        });\r\n        (0, _iterator.each)(visibleColumns, function(index, column) {\r\n            if (column.minWidth) {\r\n                hasMinWidth = true;\r\n                return false\r\n            }\r\n        });\r\n        that._setVisibleWidths(visibleColumns, []);\r\n        if (needBestFit) {\r\n            focusedElement = _dom_adapter.default.getActiveElement();\r\n            selectionRange = _uiGrid_core2.default.getSelectionRange(focusedElement);\r\n            that._toggleBestFitMode(true);\r\n            resetBestFitMode = true\r\n        }\r\n        var $element = this.component.$element();\r\n        if ($element && $element[0] && this._maxWidth) {\r\n            delete this._maxWidth;\r\n            $element[0].style.maxWidth = \"\"\r\n        }(0, _common.deferUpdate)(function() {\r\n            if (needBestFit) {\r\n                resultWidths = that._getBestFitWidths();\r\n                (0, _iterator.each)(visibleColumns, function(index, column) {\r\n                    var columnId = columnsController.getColumnId(column);\r\n                    columnsController.columnOption(columnId, \"bestFitWidth\", resultWidths[index], true)\r\n                })\r\n            } else {\r\n                if (hasMinWidth) {\r\n                    resultWidths = that._getBestFitWidths()\r\n                }\r\n            }(0, _iterator.each)(visibleColumns, function(index) {\r\n                var width = this.width;\r\n                if (\"auto\" !== width) {\r\n                    if ((0, _type.isDefined)(width)) {\r\n                        resultWidths[index] = (0, _type.isNumeric)(width) || isPixelWidth(width) ? parseFloat(width) : width\r\n                    } else {\r\n                        if (!columnAutoWidth) {\r\n                            resultWidths[index] = void 0\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (resetBestFitMode) {\r\n                that._toggleBestFitMode(false);\r\n                resetBestFitMode = false;\r\n                if (focusedElement && focusedElement !== _dom_adapter.default.getActiveElement()) {\r\n                    var isFocusOutsideWindow = (0, _position.getBoundingRect)(focusedElement).bottom < 0;\r\n                    if (!isFocusOutsideWindow) {\r\n                        if (_browser.default.msie) {\r\n                            setTimeout(function() {\r\n                                restoreFocus(focusedElement, selectionRange)\r\n                            })\r\n                        } else {\r\n                            restoreFocus(focusedElement, selectionRange)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            isColumnWidthsCorrected = that._correctColumnWidths(resultWidths, visibleColumns);\r\n            if (columnAutoWidth) {\r\n                normalizeWidthsByExpandColumns();\r\n                if (that._needStretch()) {\r\n                    that._processStretch(resultWidths, visibleColumns)\r\n                }\r\n            }(0, _common.deferRender)(function() {\r\n                if (needBestFit || isColumnWidthsCorrected) {\r\n                    that._setVisibleWidths(visibleColumns, resultWidths)\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _needBestFit: function() {\r\n        return this.option(\"columnAutoWidth\")\r\n    },\r\n    _needStretch: function() {\r\n        return this.option(\"legacyRendering\") || this._columnsController.getVisibleColumns().some(function(c) {\r\n            return \"auto\" === c.width && !c.command\r\n        })\r\n    },\r\n    _getAverageColumnsWidth: function(resultWidths) {\r\n        var freeWidth = calculateFreeWidth(this, resultWidths);\r\n        var columnCountWithoutWidth = resultWidths.filter(function(width) {\r\n            return void 0 === width\r\n        }).length;\r\n        return freeWidth / columnCountWithoutWidth\r\n    },\r\n    _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n        var that = this;\r\n        var i;\r\n        var hasPercentWidth = false;\r\n        var hasAutoWidth = false;\r\n        var isColumnWidthsCorrected = false;\r\n        var $element = that.component.$element();\r\n        var hasWidth = that._hasWidth;\r\n        var _loop = function() {\r\n            var index = i;\r\n            var column = visibleColumns[index];\r\n            var isHiddenColumn = resultWidths[index] === HIDDEN_COLUMNS_WIDTH;\r\n            var width = resultWidths[index];\r\n            var minWidth = column.minWidth;\r\n            if (minWidth) {\r\n                if (void 0 === width) {\r\n                    var averageColumnsWidth = that._getAverageColumnsWidth(resultWidths);\r\n                    width = averageColumnsWidth\r\n                } else {\r\n                    if (isPercentWidth(width)) {\r\n                        var freeWidth = calculateFreeWidthWithCurrentMinWidth(that, index, minWidth, resultWidths);\r\n                        if (freeWidth < 0) {\r\n                            width = -1\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            var realColumnWidth = that._getRealColumnWidth(index, resultWidths.map(function(columnWidth, columnIndex) {\r\n                return index === columnIndex ? width : columnWidth\r\n            }));\r\n            if (minWidth && !isHiddenColumn && realColumnWidth < minWidth) {\r\n                resultWidths[index] = minWidth;\r\n                isColumnWidthsCorrected = true;\r\n                i = -1\r\n            }\r\n            if (!(0, _type.isDefined)(column.width)) {\r\n                hasAutoWidth = true\r\n            }\r\n            if (isPercentWidth(column.width)) {\r\n                hasPercentWidth = true\r\n            }\r\n        };\r\n        for (i = 0; i < visibleColumns.length; i++) {\r\n            _loop()\r\n        }\r\n        if (!hasAutoWidth && resultWidths.length) {\r\n            var $rowsViewElement = that._rowsView.element();\r\n            var contentWidth = that._rowsView.contentWidth();\r\n            var scrollbarWidth = that._rowsView.getScrollbarWidth();\r\n            var totalWidth = that._getTotalWidth(resultWidths, contentWidth);\r\n            if (totalWidth < contentWidth) {\r\n                var lastColumnIndex = _uiGrid_core2.default.getLastResizableColumnIndex(visibleColumns, resultWidths);\r\n                if (lastColumnIndex >= 0) {\r\n                    resultWidths[lastColumnIndex] = \"auto\";\r\n                    isColumnWidthsCorrected = true;\r\n                    if (false === hasWidth && !hasPercentWidth) {\r\n                        var borderWidth = that.option(\"showBorders\") ? Math.ceil($rowsViewElement.outerWidth() - $rowsViewElement.innerWidth()) : 0;\r\n                        that._maxWidth = totalWidth + scrollbarWidth + borderWidth;\r\n                        $element.css(\"maxWidth\", that._maxWidth)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return isColumnWidthsCorrected\r\n    },\r\n    _processStretch: function(resultSizes, visibleColumns) {\r\n        var groupSize = this._rowsView.contentWidth();\r\n        var tableSize = this._getTotalWidth(resultSizes, groupSize);\r\n        var unusedIndexes = {\r\n            length: 0\r\n        };\r\n        if (!resultSizes.length) {\r\n            return\r\n        }(0, _iterator.each)(visibleColumns, function(index) {\r\n            if (this.width || resultSizes[index] === HIDDEN_COLUMNS_WIDTH) {\r\n                unusedIndexes[index] = true;\r\n                unusedIndexes.length++\r\n            }\r\n        });\r\n        var diff = groupSize - tableSize;\r\n        var diffElement = Math.floor(diff / (resultSizes.length - unusedIndexes.length));\r\n        var onePixelElementsCount = diff - diffElement * (resultSizes.length - unusedIndexes.length);\r\n        if (diff >= 0) {\r\n            for (var i = 0; i < resultSizes.length; i++) {\r\n                if (unusedIndexes[i]) {\r\n                    continue\r\n                }\r\n                resultSizes[i] += diffElement;\r\n                if (onePixelElementsCount > 0) {\r\n                    if (onePixelElementsCount < 1) {\r\n                        resultSizes[i] += onePixelElementsCount;\r\n                        onePixelElementsCount = 0\r\n                    } else {\r\n                        resultSizes[i]++;\r\n                        onePixelElementsCount--\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getRealColumnWidth: function(columnIndex, columnWidths, groupWidth) {\r\n        var ratio = 1;\r\n        var width = columnWidths[columnIndex];\r\n        if (!isPercentWidth(width)) {\r\n            return parseFloat(width)\r\n        }\r\n        var percentTotalWidth = columnWidths.reduce(function(sum, width, index) {\r\n            if (!isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        var pixelTotalWidth = columnWidths.reduce(function(sum, width) {\r\n            if (!width || width === HIDDEN_COLUMNS_WIDTH || isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        groupWidth = groupWidth || this._rowsView.contentWidth();\r\n        var freeSpace = groupWidth - pixelTotalWidth;\r\n        var percentTotalWidthInPixel = percentTotalWidth * groupWidth / 100;\r\n        if (pixelTotalWidth > 0 && percentTotalWidthInPixel + pixelTotalWidth >= groupWidth) {\r\n            ratio = percentTotalWidthInPixel > freeSpace ? freeSpace / percentTotalWidthInPixel : 1\r\n        }\r\n        return parseFloat(width) * groupWidth * ratio / 100\r\n    },\r\n    _getTotalWidth: function(widths, groupWidth) {\r\n        var result = 0;\r\n        for (var i = 0; i < widths.length; i++) {\r\n            var width = widths[i];\r\n            if (width && width !== HIDDEN_COLUMNS_WIDTH) {\r\n                result += this._getRealColumnWidth(i, widths, groupWidth)\r\n            }\r\n        }\r\n        return Math.ceil(result)\r\n    },\r\n    updateSize: function($rootElement) {\r\n        var that = this;\r\n        var $groupElement;\r\n        var width;\r\n        var importantMarginClass = that.addWidgetPrefix(IMPORTANT_MARGIN_CLASS);\r\n        if (void 0 === that._hasHeight && $rootElement && $rootElement.is(\":visible\") && $rootElement.width()) {\r\n            $groupElement = $rootElement.children(\".\" + that.getWidgetContainerClass());\r\n            if ($groupElement.length) {\r\n                $groupElement.detach()\r\n            }\r\n            that._hasHeight = !!getContainerHeight($rootElement);\r\n            width = $rootElement.width();\r\n            $rootElement.addClass(importantMarginClass);\r\n            that._hasWidth = $rootElement.width() === width;\r\n            $rootElement.removeClass(importantMarginClass);\r\n            if ($groupElement.length) {\r\n                $groupElement.appendTo($rootElement)\r\n            }\r\n        }\r\n    },\r\n    publicMethods: function() {\r\n        return [\"resize\", \"updateDimensions\"]\r\n    },\r\n    resize: function() {\r\n        return !this.component._requireResize && this.updateDimensions()\r\n    },\r\n    updateDimensions: function(checkSize) {\r\n        var that = this;\r\n        that._initPostRenderHandlers();\r\n        if (!that._checkSize(checkSize)) {\r\n            return\r\n        }\r\n        var prevResult = that._resizeDeferred;\r\n        var result = that._resizeDeferred = new _deferred.Deferred;\r\n        (0, _deferred.when)(prevResult).always(function() {\r\n            (0, _common.deferRender)(function() {\r\n                if (that._dataController.isLoaded()) {\r\n                    that._synchronizeColumns()\r\n                }\r\n                that._resetGroupElementHeight();\r\n                (0, _common.deferUpdate)(function() {\r\n                    (0, _common.deferRender)(function() {\r\n                        (0, _common.deferUpdate)(function() {\r\n                            that._updateDimensionsCore()\r\n                        })\r\n                    })\r\n                })\r\n            }).done(result.resolve).fail(result.reject)\r\n        });\r\n        return result.promise()\r\n    },\r\n    _resetGroupElementHeight: function() {\r\n        var groupElement = this.component.$element().children().get(0);\r\n        var scrollable = this._rowsView.getScrollable();\r\n        if (groupElement && groupElement.style.height && (!scrollable || !scrollable.scrollTop())) {\r\n            groupElement.style.height = \"\"\r\n        }\r\n    },\r\n    _checkSize: function(checkSize) {\r\n        var $rootElement = this.component.$element();\r\n        if (checkSize && (this._lastWidth === $rootElement.width() && this._lastHeight === $rootElement.height() && this._devicePixelRatio === (0, _window.getWindow)().devicePixelRatio || !$rootElement.is(\":visible\"))) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _setScrollerSpacingCore: function(hasHeight) {\r\n        var that = this;\r\n        var vScrollbarWidth = hasHeight ? that._rowsView.getScrollbarWidth() : 0;\r\n        var hScrollbarWidth = that._rowsView.getScrollbarWidth(true);\r\n        (0, _common.deferRender)(function() {\r\n            that._columnHeadersView && that._columnHeadersView.setScrollerSpacing(vScrollbarWidth);\r\n            that._footerView && that._footerView.setScrollerSpacing(vScrollbarWidth);\r\n            that._rowsView.setScrollerSpacing(vScrollbarWidth, hScrollbarWidth)\r\n        })\r\n    },\r\n    _setScrollerSpacing: function(hasHeight) {\r\n        var _this2 = this;\r\n        if (true === this.option(\"scrolling.useNative\")) {\r\n            (0, _common.deferRender)(function() {\r\n                (0, _common.deferUpdate)(function() {\r\n                    _this2._setScrollerSpacingCore(hasHeight)\r\n                })\r\n            })\r\n        } else {\r\n            this._setScrollerSpacingCore(hasHeight)\r\n        }\r\n    },\r\n    _updateDimensionsCore: function() {\r\n        var that = this;\r\n        var dataController = that._dataController;\r\n        var rowsView = that._rowsView;\r\n        var $rootElement = that.component.$element();\r\n        var groupElement = $rootElement.children().get(0);\r\n        var rootElementHeight = $rootElement && ($rootElement.get(0).clientHeight || $rootElement.height());\r\n        var maxHeight = parseInt($rootElement.css(\"maxHeight\"));\r\n        var maxHeightHappened = maxHeight && rootElementHeight >= maxHeight;\r\n        var height = that.option(\"height\") || $rootElement.get(0).style.height;\r\n        var editorFactory = that.getController(\"editorFactory\");\r\n        var isMaxHeightApplied = maxHeightHappened && groupElement.scrollHeight === groupElement.offsetHeight;\r\n        var $testDiv;\r\n        that.updateSize($rootElement);\r\n        var hasHeight = that._hasHeight || maxHeightHappened;\r\n        if (height && that._hasHeight ^ \"auto\" !== height) {\r\n            $testDiv = (0, _renderer.default)(\"<div>\").height(height).appendTo($rootElement);\r\n            that._hasHeight = !!$testDiv.height();\r\n            $testDiv.remove()\r\n        }(0, _common.deferRender)(function() {\r\n            rowsView.height(null, hasHeight);\r\n            if (maxHeightHappened && !isMaxHeightApplied) {\r\n                (0, _renderer.default)(groupElement).css(\"height\", maxHeight)\r\n            }\r\n            if (!dataController.isLoaded()) {\r\n                rowsView.setLoading(dataController.isLoading());\r\n                return\r\n            }(0, _common.deferUpdate)(function() {\r\n                that._updateLastSizes($rootElement);\r\n                that._setScrollerSpacing(hasHeight);\r\n                (0, _iterator.each)(VIEW_NAMES, function(index, viewName) {\r\n                    var view = that.getView(viewName);\r\n                    if (view) {\r\n                        view.resize()\r\n                    }\r\n                });\r\n                editorFactory && editorFactory.resize()\r\n            })\r\n        })\r\n    },\r\n    _updateLastSizes: function($rootElement) {\r\n        this._lastWidth = $rootElement.width();\r\n        this._lastHeight = $rootElement.height();\r\n        this._devicePixelRatio = (0, _window.getWindow)().devicePixelRatio\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n            case \"height\":\r\n                this.component._renderDimensions();\r\n                this.resize();\r\n            case \"legacyRendering\":\r\n            case \"renderAsync\":\r\n                args.handled = true;\r\n                return;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._dataController = that.getController(\"data\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._footerView = that.getView(\"footerView\");\r\n        that._rowsView = that.getView(\"rowsView\")\r\n    }\r\n});\r\nvar SynchronizeScrollingController = _uiGrid_core.default.ViewController.inherit({\r\n    _scrollChangedHandler: function(views, pos, viewName) {\r\n        for (var j = 0; j < views.length; j++) {\r\n            if (views[j] && views[j].name !== viewName) {\r\n                views[j].scrollTo({\r\n                    left: pos.left,\r\n                    top: pos.top\r\n                })\r\n            }\r\n        }\r\n    },\r\n    init: function() {\r\n        var views = [this.getView(\"columnHeadersView\"), this.getView(\"footerView\"), this.getView(\"rowsView\")];\r\n        for (var i = 0; i < views.length; i++) {\r\n            var view = views[i];\r\n            if (view) {\r\n                view.scrollChanged.add(this._scrollChangedHandler.bind(this, views))\r\n            }\r\n        }\r\n    }\r\n});\r\nvar GridView = _uiGrid_core.default.View.inherit({\r\n    _endUpdateCore: function() {\r\n        if (this.component._requireResize) {\r\n            this.component._requireResize = false;\r\n            this._resizingController.resize()\r\n        }\r\n    },\r\n    _getWidgetAriaLabel: function() {\r\n        return \"dxDataGrid-ariaDataGrid\"\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._resizingController = that.getController(\"resizing\");\r\n        that._dataController = that.getController(\"data\")\r\n    },\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    element: function() {\r\n        return this._groupElement\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        if ((0, _type.isDefined)(that._groupElement) && \"showBorders\" === args.name) {\r\n            that._groupElement.toggleClass(that.addWidgetPrefix(BORDERS_CLASS), !!args.value);\r\n            args.handled = true\r\n        } else {\r\n            that.callBase(args)\r\n        }\r\n    },\r\n    _renderViews: function($groupElement) {\r\n        var that = this;\r\n        (0, _iterator.each)(VIEW_NAMES, function(index, viewName) {\r\n            var view = that.getView(viewName);\r\n            if (view) {\r\n                view.render($groupElement)\r\n            }\r\n        })\r\n    },\r\n    _getTableRoleName: function() {\r\n        return \"grid\"\r\n    },\r\n    render: function($rootElement) {\r\n        var that = this;\r\n        var isFirstRender = !that._groupElement;\r\n        var $groupElement = that._groupElement || (0, _renderer.default)(\"<div>\").addClass(that.getWidgetContainerClass());\r\n        $groupElement.addClass(GRIDBASE_CONTAINER_CLASS);\r\n        $groupElement.toggleClass(that.addWidgetPrefix(BORDERS_CLASS), !!that.option(\"showBorders\"));\r\n        that.setAria(\"role\", \"presentation\", $rootElement);\r\n        that.component.setAria({\r\n            role: this._getTableRoleName(),\r\n            label: _message.default.format(that._getWidgetAriaLabel())\r\n        }, $groupElement);\r\n        that._rootElement = $rootElement || that._rootElement;\r\n        if (isFirstRender) {\r\n            that._groupElement = $groupElement;\r\n            (0, _window.hasWindow)() && that.getController(\"resizing\").updateSize($rootElement);\r\n            $groupElement.appendTo($rootElement)\r\n        }\r\n        that._renderViews($groupElement)\r\n    },\r\n    update: function() {\r\n        var that = this;\r\n        var $rootElement = that._rootElement;\r\n        var $groupElement = that._groupElement;\r\n        var resizingController = that.getController(\"resizing\");\r\n        if ($rootElement && $groupElement) {\r\n            resizingController.resize();\r\n            if (that._dataController.isLoaded()) {\r\n                that._resizingController.fireContentReadyAction()\r\n            }\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showBorders: false,\r\n            renderAsync: false,\r\n            legacyRendering: false\r\n        }\r\n    },\r\n    controllers: {\r\n        resizing: ResizingController,\r\n        synchronizeScrolling: SynchronizeScrollingController\r\n    },\r\n    views: {\r\n        gridView: GridView\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _filtering = _interopRequireDefault(require(\"../shared/filtering\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _uiGrid_core3 = require(\"./ui.grid_core.header_filter_core\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _utils = require(\"../../data/data_source/utils\");\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _variable_wrapper = _interopRequireDefault(require(\"../../core/utils/variable_wrapper\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _accessibility = require(\"../shared/accessibility\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return _date.default.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return _date.default.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    }\r\n};\r\nvar HeaderFilterController = _uiGrid_core.default.ViewController.inherit(function() {\r\n    var getFormatOptions = function(value, column, currentLevel) {\r\n        var groupInterval = _filtering.default.getGroupInterval(column);\r\n        var result = _uiGrid_core2.default.getFormatOptionsByColumn(column, \"headerFilter\");\r\n        if (groupInterval) {\r\n            result.groupInterval = groupInterval[currentLevel];\r\n            if (_uiGrid_core2.default.isDateType(column.dataType)) {\r\n                result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]]\r\n            } else {\r\n                if (\"number\" === column.dataType) {\r\n                    result.getDisplayFormat = function() {\r\n                        var formatOptions = {\r\n                            format: column.format,\r\n                            target: \"headerFilter\"\r\n                        };\r\n                        var firstValueText = _uiGrid_core2.default.formatValue(value, formatOptions);\r\n                        var secondValue = value + groupInterval[currentLevel];\r\n                        var secondValueText = _uiGrid_core2.default.formatValue(secondValue, formatOptions);\r\n                        return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    return {\r\n        init: function() {\r\n            this._columnsController = this.getController(\"columns\");\r\n            this._dataController = this.getController(\"data\");\r\n            this._headerFilterView = this.getView(\"headerFilterView\")\r\n        },\r\n        _updateSelectedState: function(items, column) {\r\n            var i = items.length;\r\n            var isExclude = \"exclude\" === column.filterType;\r\n            while (i--) {\r\n                var item = items[i];\r\n                if (\"items\" in items[i]) {\r\n                    this._updateSelectedState(items[i].items, column)\r\n                }(0, _uiGrid_core3.updateHeaderFilterItemSelectionState)(item, _uiGrid_core2.default.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude)\r\n            }\r\n        },\r\n        _normalizeGroupItem: function(item, currentLevel, options) {\r\n            var value;\r\n            var displayValue;\r\n            var path = options.path;\r\n            var valueSelector = options.valueSelector;\r\n            var displaySelector = options.displaySelector;\r\n            var column = options.column;\r\n            if (valueSelector && displaySelector) {\r\n                value = valueSelector(item);\r\n                displayValue = displaySelector(item)\r\n            } else {\r\n                value = item.key;\r\n                displayValue = value\r\n            }\r\n            if (!(0, _type.isObject)(item)) {\r\n                item = {}\r\n            } else {\r\n                item = (0, _extend.extend)({}, item)\r\n            }\r\n            path.push(value);\r\n            if (1 === path.length) {\r\n                item.value = path[0]\r\n            } else {\r\n                item.value = path.join(\"/\")\r\n            }\r\n            item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\r\n            return item\r\n        },\r\n        getHeaderItemText: function(displayValue, column, currentLevel, headerFilterOptions) {\r\n            var text = _uiGrid_core2.default.formatValue(displayValue, getFormatOptions(displayValue, column, currentLevel));\r\n            if (!text) {\r\n                text = headerFilterOptions.texts.emptyValue\r\n            }\r\n            return text\r\n        },\r\n        _processGroupItems: function(groupItems, currentLevel, path, options) {\r\n            var that = this;\r\n            var displaySelector;\r\n            var valueSelector;\r\n            var column = options.column;\r\n            var lookup = column.lookup;\r\n            var level = options.level;\r\n            path = path || [];\r\n            currentLevel = currentLevel || 0;\r\n            if (lookup) {\r\n                displaySelector = (0, _data.compileGetter)(lookup.displayExpr);\r\n                valueSelector = (0, _data.compileGetter)(lookup.valueExpr)\r\n            }\r\n            for (var i = 0; i < groupItems.length; i++) {\r\n                groupItems[i] = that._normalizeGroupItem(groupItems[i], currentLevel, {\r\n                    column: options.column,\r\n                    headerFilterOptions: options.headerFilterOptions,\r\n                    displaySelector: displaySelector,\r\n                    valueSelector: valueSelector,\r\n                    path: path\r\n                });\r\n                if (\"items\" in groupItems[i]) {\r\n                    if (currentLevel === level || !(0, _type.isDefined)(groupItems[i].value)) {\r\n                        delete groupItems[i].items\r\n                    } else {\r\n                        that._processGroupItems(groupItems[i].items, currentLevel + 1, path, options)\r\n                    }\r\n                }\r\n                path.pop()\r\n            }\r\n        },\r\n        getDataSource: function(column) {\r\n            var that = this;\r\n            var dataSource = that._dataController.dataSource();\r\n            var group = _uiGrid_core2.default.getHeaderFilterGroupParameters(column, dataSource && dataSource.remoteOperations().grouping);\r\n            var headerFilterDataSource = column.headerFilter && column.headerFilter.dataSource;\r\n            var headerFilterOptions = that.option(\"headerFilter\");\r\n            var isLookup = false;\r\n            var options = {\r\n                component: that.component\r\n            };\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            if ((0, _type.isDefined)(headerFilterDataSource) && !(0, _type.isFunction)(headerFilterDataSource)) {\r\n                options.dataSource = (0, _utils.normalizeDataSourceOptions)(headerFilterDataSource)\r\n            } else {\r\n                if (column.lookup) {\r\n                    isLookup = true;\r\n                    var lookupDataSourceOptions;\r\n                    if (column.lookup.items) {\r\n                        lookupDataSourceOptions = column.lookup.items\r\n                    } else {\r\n                        lookupDataSourceOptions = column.lookup.dataSource;\r\n                        if ((0, _type.isFunction)(lookupDataSourceOptions) && !_variable_wrapper.default.isWrapped(lookupDataSourceOptions)) {\r\n                            lookupDataSourceOptions = lookupDataSourceOptions({})\r\n                        }\r\n                    }\r\n                    options.dataSource = (0, _utils.normalizeDataSourceOptions)(lookupDataSourceOptions)\r\n                } else {\r\n                    var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\r\n                    that._currentColumn = column;\r\n                    var filter = that._dataController.getCombinedFilter();\r\n                    that._currentColumn = null;\r\n                    options.dataSource = {\r\n                        filter: filter,\r\n                        group: group,\r\n                        useDefaultSearch: true,\r\n                        load: function(options) {\r\n                            var d = new _deferred.Deferred;\r\n                            options.dataField = column.dataField || column.name;\r\n                            dataSource.load(options).done(function(data) {\r\n                                that._processGroupItems(data, null, null, {\r\n                                    level: cutoffLevel,\r\n                                    column: column,\r\n                                    headerFilterOptions: headerFilterOptions\r\n                                });\r\n                                d.resolve(data)\r\n                            }).fail(d.reject);\r\n                            return d\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if ((0, _type.isFunction)(headerFilterDataSource)) {\r\n                headerFilterDataSource.call(column, options)\r\n            }\r\n            var origPostProcess = options.dataSource.postProcess;\r\n            options.dataSource.postProcess = function(data) {\r\n                var items = data;\r\n                if (isLookup) {\r\n                    if (0 === this.pageIndex() && !this.searchValue()) {\r\n                        items = items.slice(0);\r\n                        items.unshift(null)\r\n                    }\r\n                    that._processGroupItems(items, null, null, {\r\n                        level: 0,\r\n                        column: column,\r\n                        headerFilterOptions: headerFilterOptions\r\n                    })\r\n                }\r\n                items = origPostProcess && origPostProcess.call(this, items) || items;\r\n                that._updateSelectedState(items, column);\r\n                return items\r\n            };\r\n            return options.dataSource\r\n        },\r\n        getCurrentColumn: function() {\r\n            return this._currentColumn\r\n        },\r\n        showHeaderFilterMenu: function(columnIndex, isGroupPanel) {\r\n            var columnsController = this._columnsController;\r\n            var column = (0, _extend.extend)(true, {}, this._columnsController.getColumns()[columnIndex]);\r\n            if (column) {\r\n                var visibleIndex = columnsController.getVisibleIndex(columnIndex);\r\n                var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\r\n                var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\r\n                this.showHeaderFilterMenuBase({\r\n                    columnElement: $columnElement,\r\n                    column: column,\r\n                    applyFilter: true,\r\n                    apply: function() {\r\n                        columnsController.columnOption(columnIndex, {\r\n                            filterValues: this.filterValues,\r\n                            filterType: this.filterType\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        showHeaderFilterMenuBase: function(options) {\r\n            var _this = this;\r\n            var that = this;\r\n            var column = options.column;\r\n            if (column) {\r\n                var groupInterval = _filtering.default.getGroupInterval(column);\r\n                var dataSource = that._dataController.dataSource();\r\n                var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\r\n                (0, _extend.extend)(options, column, {\r\n                    type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\r\n                    remoteFiltering: remoteFiltering,\r\n                    onShowing: function(e) {\r\n                        var dxResizableInstance = e.component.$overlayContent().dxResizable(\"instance\");\r\n                        dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", function(e) {\r\n                            var columnsController = that.getController(\"columns\");\r\n                            var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\r\n                            headerFilterByColumn = headerFilterByColumn || {};\r\n                            headerFilterByColumn.width = e.width;\r\n                            headerFilterByColumn.height = e.height;\r\n                            columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true)\r\n                        })\r\n                    },\r\n                    onHidden: function() {\r\n                        return (0, _accessibility.restoreFocus)(_this)\r\n                    }\r\n                });\r\n                options.dataSource = that.getDataSource(options);\r\n                if (options.isFilterBuilder) {\r\n                    options.dataSource.filter = null;\r\n                    options.alignment = \"right\"\r\n                }\r\n                that._headerFilterView.showHeaderFilterMenu(options.columnElement, options)\r\n            }\r\n        },\r\n        hideHeaderFilterMenu: function() {\r\n            this._headerFilterView.hideHeaderFilterMenu()\r\n        }\r\n    }\r\n}());\r\nvar ColumnHeadersViewHeaderFilterExtender = (0, _extend.extend)({}, _uiGrid_core3.headerFilterMixin, {\r\n    _renderCellContent: function($cell, options) {\r\n        var that = this;\r\n        var $headerFilterIndicator;\r\n        var column = options.column;\r\n        if (!column.command && (0, _uiGrid_core3.allowHeaderFiltering)(column) && that.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: that.option(\"showColumnLines\")\r\n            });\r\n            $headerFilterIndicator && that._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\")\r\n        }\r\n        that.callBase($cell, options)\r\n    },\r\n    _subscribeToIndicatorEvent: function($indicator, column, indicatorName) {\r\n        var that = this;\r\n        if (\"headerFilter\" === indicatorName) {\r\n            _events_engine.default.on($indicator, _click.name, that.createAction(function(e) {\r\n                e.event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false)\r\n            }))\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        var $indicator = this.callBase($cell, column, indicatorName);\r\n        $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName)\r\n    },\r\n    _updateHeaderFilterIndicators: function() {\r\n        if (this.option(\"headerFilter.visible\")) {\r\n            this._updateIndicators(\"headerFilter\")\r\n        }\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return true\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (_uiGrid_core2.default.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\r\n            if (this._needUpdateFilterIndicators()) {\r\n                this._updateHeaderFilterIndicators()\r\n            }\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar HeaderPanelHeaderFilterExtender = (0, _extend.extend)({}, _uiGrid_core3.headerFilterMixin, {\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase.apply(that, arguments);\r\n        var $headerFilterIndicator;\r\n        if (!groupColumn.command && (0, _uiGrid_core3.allowHeaderFiltering)(groupColumn) && that.option(\"headerFilter.visible\")) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $item,\r\n                column: {\r\n                    alignment: (0, _position.getDefaultAlignment)(that.option(\"rtlEnabled\")),\r\n                    filterValues: groupColumn.filterValues,\r\n                    allowHeaderFiltering: true\r\n                },\r\n                showColumnLines: true\r\n            });\r\n            $headerFilterIndicator && _events_engine.default.on($headerFilterIndicator, _click.name, that.createAction(function(e) {\r\n                var event = e.event;\r\n                event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true)\r\n            }))\r\n        }\r\n        return $item\r\n    }\r\n});\r\n\r\nfunction invertFilterExpression(filter) {\r\n    return [\"!\", filter]\r\n}\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var that = this;\r\n        var filters = [that.callBase()];\r\n        var columns = that._columnsController.getVisibleColumns(null, true);\r\n        var headerFilterController = that.getController(\"headerFilter\");\r\n        var currentColumn = headerFilterController.getCurrentColumn();\r\n        (0, _iterator.each)(columns, function(_, column) {\r\n            var filter;\r\n            if (currentColumn && currentColumn.index === column.index) {\r\n                return\r\n            }\r\n            if ((0, _uiGrid_core3.allowHeaderFiltering)(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\r\n                var filterValues = [];\r\n                (0, _iterator.each)(column.filterValues, function(_, filterValue) {\r\n                    if (Array.isArray(filterValue)) {\r\n                        filter = filterValue\r\n                    } else {\r\n                        if (column.deserializeValue && !_uiGrid_core2.default.isDateType(column.dataType) && \"number\" !== column.dataType) {\r\n                            filterValue = column.deserializeValue(filterValue)\r\n                        }\r\n                        filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\")\r\n                    }\r\n                    if (filter) {\r\n                        filter.columnIndex = column.index\r\n                    }\r\n                    filterValues.push(filter)\r\n                });\r\n                filterValues = _uiGrid_core2.default.combineFilters(filterValues, \"or\");\r\n                filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues)\r\n            }\r\n        });\r\n        return _uiGrid_core2.default.combineFilters(filters)\r\n    }\r\n};\r\nvar _default = {\r\n    invertFilterExpression: invertFilterExpression,\r\n    defaultOptions: function() {\r\n        return {\r\n            headerFilter: {\r\n                visible: false,\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: _message.default.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: _message.default.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: _message.default.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        headerFilter: HeaderFilterController\r\n    },\r\n    views: {\r\n        headerFilterView: _uiGrid_core3.HeaderFilterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\r\n            headerPanel: HeaderPanelHeaderFilterExtender\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.header_filter_core.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.headerFilterMixin = exports.allowHeaderFiltering = exports.HeaderFilterView = void 0;\r\nexports.updateHeaderFilterItemSelectionState = updateHeaderFilterItemSelectionState;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _popup = _interopRequireDefault(require(\"../popup\"));\r\nvar _tree_view = _interopRequireDefault(require(\"../tree_view\"));\r\nvar _list = _interopRequireDefault(require(\"../list\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar HEADER_FILTER_CLASS = \"dx-header-filter\";\r\nvar HEADER_FILTER_MENU_CLASS = \"dx-header-filter-menu\";\r\nvar DEFAULT_SEARCH_EXPRESSION = \"text\";\r\n\r\nfunction resetChildrenItemSelection(items) {\r\n    items = items || [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        items[i].selected = false;\r\n        resetChildrenItemSelection(items[i].items)\r\n    }\r\n}\r\n\r\nfunction updateSelectAllState(e, filterValues) {\r\n    if (e.component.option(\"searchValue\")) {\r\n        return\r\n    }\r\n    var selectAllCheckBox = (0, _renderer.default)(e.element).find(\".dx-list-select-all-checkbox\").data(\"dxCheckBox\");\r\n    if (selectAllCheckBox && filterValues && filterValues.length) {\r\n        selectAllCheckBox.option(\"value\", void 0)\r\n    }\r\n}\r\n\r\nfunction isSearchEnabled(that, options) {\r\n    var headerFilter = options.headerFilter;\r\n    if (headerFilter && (0, _type.isDefined)(headerFilter.allowSearch)) {\r\n        return headerFilter.allowSearch\r\n    }\r\n    return that.option(\"headerFilter.allowSearch\")\r\n}\r\n\r\nfunction updateHeaderFilterItemSelectionState(item, filterValuesMatch, isExcludeFilter) {\r\n    if (filterValuesMatch ^ isExcludeFilter) {\r\n        item.selected = true;\r\n        if (isExcludeFilter && item.items) {\r\n            for (var j = 0; j < item.items.length; j++) {\r\n                if (!item.items[j].selected) {\r\n                    item.selected = void 0;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (isExcludeFilter || item.selected) {\r\n            item.selected = false;\r\n            resetChildrenItemSelection(item.items)\r\n        }\r\n    }\r\n}\r\nvar HeaderFilterView = _uiGrid_core.default.View.inherit({\r\n    getPopupContainer: function() {\r\n        return this._popupContainer\r\n    },\r\n    getListContainer: function() {\r\n        return this._listContainer\r\n    },\r\n    applyHeaderFilter: function(options) {\r\n        var that = this;\r\n        var list = that.getListContainer();\r\n        var searchValue = list.option(\"searchValue\");\r\n        var isSelectAll = !searchValue && !options.isFilterBuilder && list.$element().find(\".dx-checkbox\").eq(0).hasClass(\"dx-checkbox-checked\");\r\n        var filterValues = [];\r\n        var fillSelectedItemKeys = function fillSelectedItemKeys(filterValues, items, isExclude) {\r\n            (0, _iterator.each)(items, function(_, item) {\r\n                if (void 0 !== item.selected && !!item.selected ^ isExclude) {\r\n                    var node = list._getNode(item);\r\n                    var hasChildren = list._hasChildren(node);\r\n                    var hasChildrenWithSelection = hasChildren && item.items && item.items.some(function(item) {\r\n                        return item.selected\r\n                    });\r\n                    if (!searchValue || !hasChildrenWithSelection) {\r\n                        filterValues.push(item.value);\r\n                        return\r\n                    }\r\n                }\r\n                if (item.items && item.items.length) {\r\n                    fillSelectedItemKeys(filterValues, item.items, isExclude)\r\n                }\r\n            })\r\n        };\r\n        if (!isSelectAll) {\r\n            if (\"tree\" === options.type) {\r\n                if (options.filterType) {\r\n                    options.filterType = \"include\"\r\n                }\r\n                fillSelectedItemKeys(filterValues, list.option(\"items\"), false);\r\n                options.filterValues = filterValues\r\n            }\r\n        } else {\r\n            if (\"tree\" === options.type) {\r\n                options.filterType = \"exclude\"\r\n            }\r\n            if (Array.isArray(options.filterValues)) {\r\n                options.filterValues = []\r\n            }\r\n        }\r\n        if (options.filterValues && !options.filterValues.length) {\r\n            options.filterValues = null\r\n        }\r\n        options.apply();\r\n        that.hideHeaderFilterMenu()\r\n    },\r\n    showHeaderFilterMenu: function($columnElement, options) {\r\n        var that = this;\r\n        if (options) {\r\n            that._initializePopupContainer(options);\r\n            var popupContainer = that.getPopupContainer();\r\n            that.hideHeaderFilterMenu();\r\n            that.updatePopup($columnElement, options);\r\n            popupContainer.show()\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        var headerFilterMenu = this.getPopupContainer();\r\n        headerFilterMenu && headerFilterMenu.hide()\r\n    },\r\n    updatePopup: function($element, options) {\r\n        var that = this;\r\n        var showColumnLines = this.option(\"showColumnLines\");\r\n        var alignment = \"right\" === options.alignment ^ !showColumnLines ? \"left\" : \"right\";\r\n        if (that._popupContainer) {\r\n            that._cleanPopupContent();\r\n            that._popupContainer.option(\"position\", {\r\n                my: alignment + \" top\",\r\n                at: alignment + \" bottom\",\r\n                of: $element,\r\n                collision: \"flip fit\"\r\n            })\r\n        }\r\n    },\r\n    _getSearchExpr: function(options) {\r\n        var lookup = options.lookup;\r\n        var useDefaultSearchExpr = options.useDefaultSearchExpr;\r\n        var headerFilterDataSource = options.headerFilter && options.headerFilter.dataSource;\r\n        if (useDefaultSearchExpr || (0, _type.isDefined)(headerFilterDataSource) && !(0, _type.isFunction)(headerFilterDataSource)) {\r\n            return DEFAULT_SEARCH_EXPRESSION\r\n        }\r\n        if (lookup) {\r\n            return lookup.displayExpr || \"this\"\r\n        }\r\n        if (options.dataSource) {\r\n            var group = options.dataSource.group;\r\n            if (Array.isArray(group) && group.length > 0) {\r\n                return group[0].selector\r\n            } else {\r\n                if ((0, _type.isFunction)(group) && !options.remoteFiltering) {\r\n                    return group\r\n                }\r\n            }\r\n        }\r\n        return options.dataField || options.selector\r\n    },\r\n    _cleanPopupContent: function() {\r\n        this._popupContainer && this._popupContainer.$content().empty()\r\n    },\r\n    _initializePopupContainer: function(options) {\r\n        var that = this;\r\n        var $element = that.element();\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var width = options.headerFilter && options.headerFilter.width || headerFilterOptions && headerFilterOptions.width;\r\n        var height = options.headerFilter && options.headerFilter.height || headerFilterOptions && headerFilterOptions.height;\r\n        var dxPopupOptions = {\r\n            width: width,\r\n            height: height,\r\n            visible: false,\r\n            shading: false,\r\n            showTitle: false,\r\n            showCloseButton: false,\r\n            closeOnTargetScroll: false,\r\n            dragEnabled: false,\r\n            closeOnOutsideClick: true,\r\n            focusStateEnabled: false,\r\n            toolbarItems: [{\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.ok,\r\n                    onClick: function() {\r\n                        that.applyHeaderFilter(options)\r\n                    }\r\n                }\r\n            }, {\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.cancel,\r\n                    onClick: function() {\r\n                        that.hideHeaderFilterMenu()\r\n                    }\r\n                }\r\n            }],\r\n            resizeEnabled: true,\r\n            onShowing: function(e) {\r\n                e.component.$content().parent().addClass(\"dx-dropdowneditor-overlay\");\r\n                that._initializeListContainer(options);\r\n                options.onShowing && options.onShowing(e)\r\n            },\r\n            onShown: function() {\r\n                that.getListContainer().focus()\r\n            },\r\n            onHidden: options.onHidden,\r\n            onInitialized: function(e) {\r\n                var component = e.component;\r\n                component.option(\"animation\", component._getDefaultOptions().animation)\r\n            }\r\n        };\r\n        if (!(0, _type.isDefined)(that._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, _popup.default, dxPopupOptions)\r\n        } else {\r\n            that._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _initializeListContainer: function(options) {\r\n        var that = this;\r\n        var $content = that._popupContainer.$content();\r\n        var widgetOptions = {\r\n            searchEnabled: isSearchEnabled(that, options),\r\n            searchTimeout: that.option(\"headerFilter.searchTimeout\"),\r\n            searchMode: options.headerFilter && options.headerFilter.searchMode || \"\",\r\n            dataSource: options.dataSource,\r\n            onContentReady: function() {\r\n                that.renderCompleted.fire()\r\n            },\r\n            itemTemplate: function(data, _, element) {\r\n                var $element = (0, _renderer.default)(element);\r\n                if (options.encodeHtml) {\r\n                    return $element.text(data.text)\r\n                }\r\n                return $element.html(data.text)\r\n            }\r\n        };\r\n\r\n        function onOptionChanged(e) {\r\n            if (\"searchValue\" === e.fullName && !options.isFilterBuilder && false !== that.option(\"headerFilter.hideSelectAllOnSearch\")) {\r\n                if (\"tree\" === options.type) {\r\n                    e.component.option(\"showCheckBoxesMode\", e.value ? \"normal\" : \"selectAll\")\r\n                } else {\r\n                    e.component.option(\"selectionMode\", e.value ? \"multiple\" : \"all\")\r\n                }\r\n            }\r\n        }\r\n        if (\"tree\" === options.type) {\r\n            that._listContainer = that._createComponent((0, _renderer.default)(\"<div>\").appendTo($content), _tree_view.default, (0, _extend.extend)(widgetOptions, {\r\n                showCheckBoxesMode: options.isFilterBuilder ? \"normal\" : \"selectAll\",\r\n                onOptionChanged: onOptionChanged,\r\n                keyExpr: \"id\"\r\n            }))\r\n        } else {\r\n            that._listContainer = that._createComponent((0, _renderer.default)(\"<div>\").appendTo($content), _list.default, (0, _extend.extend)(widgetOptions, {\r\n                searchExpr: that._getSearchExpr(options),\r\n                pageLoadMode: \"scrollBottom\",\r\n                showSelectionControls: true,\r\n                selectionMode: options.isFilterBuilder ? \"multiple\" : \"all\",\r\n                onOptionChanged: onOptionChanged,\r\n                onSelectionChanged: function(e) {\r\n                    var items = e.component.option(\"items\");\r\n                    var selectedItems = e.component.option(\"selectedItems\");\r\n                    if (!e.component._selectedItemsUpdating && !e.component.option(\"searchValue\") && !options.isFilterBuilder) {\r\n                        var filterValues = options.filterValues || [];\r\n                        var isExclude = \"exclude\" === options.filterType;\r\n                        if (0 === selectedItems.length && items.length && (filterValues.length <= 1 || isExclude && filterValues.length === items.length - 1)) {\r\n                            options.filterType = \"include\";\r\n                            options.filterValues = []\r\n                        } else {\r\n                            if (selectedItems.length === items.length) {\r\n                                options.filterType = \"exclude\";\r\n                                options.filterValues = []\r\n                            }\r\n                        }\r\n                    }(0, _iterator.each)(items, function(index, item) {\r\n                        var selected = _uiGrid_core2.default.getIndexByKey(item, selectedItems, null) >= 0;\r\n                        var oldSelected = !!item.selected;\r\n                        if (oldSelected !== selected) {\r\n                            item.selected = selected;\r\n                            options.filterValues = options.filterValues || [];\r\n                            var filterValueIndex = _uiGrid_core2.default.getIndexByKey(item.value, options.filterValues, null);\r\n                            if (filterValueIndex >= 0) {\r\n                                options.filterValues.splice(filterValueIndex, 1)\r\n                            }\r\n                            if (selected ^ \"exclude\" === options.filterType) {\r\n                                options.filterValues.push(item.value)\r\n                            }\r\n                        }\r\n                    });\r\n                    updateSelectAllState(e, options.filterValues)\r\n                },\r\n                onContentReady: function(e) {\r\n                    var component = e.component;\r\n                    var items = component.option(\"items\");\r\n                    var selectedItems = [];\r\n                    (0, _iterator.each)(items, function() {\r\n                        if (this.selected) {\r\n                            selectedItems.push(this)\r\n                        }\r\n                    });\r\n                    component._selectedItemsUpdating = true;\r\n                    component.option(\"selectedItems\", selectedItems);\r\n                    component._selectedItemsUpdating = false;\r\n                    updateSelectAllState(e, options.filterValues)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(HEADER_FILTER_MENU_CLASS)\r\n    }\r\n});\r\nexports.HeaderFilterView = HeaderFilterView;\r\nvar allowHeaderFiltering = function(column) {\r\n    return (0, _type.isDefined)(column.allowHeaderFiltering) ? column.allowHeaderFiltering : column.allowFiltering\r\n};\r\nexports.allowHeaderFiltering = allowHeaderFiltering;\r\nvar headerFilterMixin = {\r\n    _applyColumnState: function(options) {\r\n        var $headerFilterIndicator;\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        if (\"headerFilter\" === options.name) {\r\n            rootElement.find(\".\" + HEADER_FILTER_CLASS).remove();\r\n            if (allowHeaderFiltering(column)) {\r\n                $headerFilterIndicator = this.callBase(options).toggleClass(\"dx-header-filter-empty\", this._isHeaderFilterEmpty(column));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    $headerFilterIndicator.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                }\r\n            }\r\n            return $headerFilterIndicator\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _isHeaderFilterEmpty: function(column) {\r\n        return !column.filterValues || !column.filterValues.length\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"headerFilter\" === name) {\r\n            return HEADER_FILTER_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"headerFilter\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if ($container.children().length && (!rtlEnabled && \"right\" === options.columnAlignment || rtlEnabled && \"left\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"headerFilter\" === args.name) {\r\n            var requireReady = \"columnHeadersView\" === this.name;\r\n            this._invalidate(requireReady, requireReady);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nexports.headerFilterMixin = headerFilterMixin;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.header_panel.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _toolbar = _interopRequireDefault(require(\"../toolbar\"));\r\nvar _uiGrid_core = require(\"./ui.grid_core.columns_view\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _visibility_change = require(\"../../events/visibility_change\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nrequire(\"../drop_down_menu\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar TOOLBAR_BUTTON_CLASS = \"toolbar-button\";\r\nvar TOOLBAR_ARIA_LABEL = \"-ariaToolbar\";\r\nvar HeaderPanel = _uiGrid_core.ColumnsView.inherit({\r\n    _getToolbarItems: function() {\r\n        return []\r\n    },\r\n    _getButtonContainer: function() {\r\n        return (0, _renderer.default)(\"<div>\").addClass(this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS))\r\n    },\r\n    _getToolbarButtonClass: function(specificClass) {\r\n        var secondClass = specificClass ? \" \" + specificClass : \"\";\r\n        return this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS) + secondClass\r\n    },\r\n    _getToolbarOptions: function() {\r\n        var options = {\r\n            toolbarOptions: {\r\n                items: this._getToolbarItems(),\r\n                onItemRendered: function(e) {\r\n                    var itemRenderedCallback = e.itemData.onItemRendered;\r\n                    if (itemRenderedCallback) {\r\n                        itemRenderedCallback(e)\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.executeAction(\"onToolbarPreparing\", options);\r\n        if (options.toolbarOptions && !(0, _type.isDefined)(options.toolbarOptions.visible)) {\r\n            var toolbarItems = options.toolbarOptions.items;\r\n            options.toolbarOptions.visible = !!(toolbarItems && toolbarItems.length)\r\n        }\r\n        return options.toolbarOptions\r\n    },\r\n    _renderCore: function() {\r\n        if (!this._toolbar) {\r\n            var $headerPanel = this.element();\r\n            $headerPanel.addClass(this.addWidgetPrefix(HEADER_PANEL_CLASS));\r\n            var label = _message.default.format(this.component.NAME + TOOLBAR_ARIA_LABEL);\r\n            var $toolbar = (0, _renderer.default)(\"<div>\").attr(\"aria-label\", label).appendTo($headerPanel);\r\n            this._toolbar = this._createComponent($toolbar, _toolbar.default, this._toolbarOptions)\r\n        } else {\r\n            this._toolbar.option(this._toolbarOptions)\r\n        }\r\n    },\r\n    _columnOptionChanged: _common.noop,\r\n    _handleDataChanged: function() {\r\n        if (this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onToolbarPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    render: function() {\r\n        this._toolbarOptions = this._getToolbarOptions();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    setToolbarItemDisabled: function(name, optionValue) {\r\n        var toolbarInstance = this._toolbar;\r\n        if (toolbarInstance) {\r\n            var items = toolbarInstance.option(\"items\") || [];\r\n            var itemIndex = items.indexOf(items.filter(function(item) {\r\n                return item.name === name\r\n            })[0]);\r\n            if (itemIndex >= 0) {\r\n                var itemOptionPrefix = \"items[\" + itemIndex + \"]\";\r\n                if (toolbarInstance.option(itemOptionPrefix + \".options\")) {\r\n                    toolbarInstance.option(itemOptionPrefix + \".options.disabled\", optionValue)\r\n                } else {\r\n                    toolbarInstance.option(itemOptionPrefix + \".disabled\", optionValue)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateToolbarDimensions: function() {\r\n        if (this._toolbar) {\r\n            (0, _visibility_change.triggerResizeEvent)(this.getHeaderPanel())\r\n        }\r\n    },\r\n    getHeaderPanel: function() {\r\n        return this.element()\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"onToolbarPreparing\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    isVisible: function() {\r\n        return this._toolbarOptions && this._toolbarOptions.visible\r\n    },\r\n    allowDragging: _common.noop\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    views: {\r\n        headerPanel: HeaderPanel\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            resizing: {\r\n                _updateDimensionsCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this.getView(\"headerPanel\").updateToolbarDimensions()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar accessibility = _interopRequireWildcard(require(\"../shared/accessibility\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _short = require(\"../../events/short\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cacheBabelInterop = new WeakMap;\r\n    var cacheNodeInterop = new WeakMap;\r\n    return (_getRequireWildcardCache = function(nodeInterop) {\r\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop\r\n    })(nodeInterop)\r\n}\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) {\r\n    if (!nodeInterop && obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache(nodeInterop);\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (\"default\" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar GROUP_FOOTER_CLASS = \"group-footer\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar FAST_EDITING_DELETE_KEY = \"delete\";\r\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex], .dx-checkbox\";\r\nvar NON_FOCUSABLE_ELEMENTS_SELECTOR = \"\".concat(INTERACTIVE_ELEMENTS_SELECTOR, \", .dx-dropdowneditor-icon\");\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar FOCUS_TYPE_ROW = \"row\";\r\nvar FOCUS_TYPE_CELL = \"cell\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\n\r\nfunction isGroupRow($row) {\r\n    return $row && $row.hasClass(GROUP_ROW_CLASS)\r\n}\r\n\r\nfunction isDetailRow($row) {\r\n    return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS)\r\n}\r\n\r\nfunction isDataRow($row) {\r\n    return $row && !isGroupRow($row) && !isDetailRow($row)\r\n}\r\n\r\nfunction isNotFocusedRow($row) {\r\n    return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS)\r\n}\r\n\r\nfunction isCellElement($element) {\r\n    return $element.length && \"TD\" === $element[0].tagName\r\n}\r\n\r\nfunction isEditorCell(that, $cell) {\r\n    return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS)\r\n}\r\n\r\nfunction isElementDefined($element) {\r\n    return (0, _type.isDefined)($element) && $element.length > 0\r\n}\r\n\r\nfunction isMobile() {\r\n    return \"desktop\" !== _devices.default.current().deviceType\r\n}\r\n\r\nfunction isCellInHeaderRow($cell) {\r\n    return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length\r\n}\r\n\r\nfunction isFixedColumnIndexOffsetRequired(that, column) {\r\n    var rtlEnabled = that.option(\"rtlEnabled\");\r\n    var result = false;\r\n    if (rtlEnabled) {\r\n        result = !(\"right\" === column.fixedPosition || (0, _type.isDefined)(column.command) && !(0, _type.isDefined)(column.fixedPosition))\r\n    } else {\r\n        result = !(!(0, _type.isDefined)(column.fixedPosition) || \"left\" === column.fixedPosition)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction shouldPreventScroll(that) {\r\n    var keyboardController = that.getController(\"keyboardNavigation\");\r\n    return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false\r\n}\r\nvar KeyboardNavigationController = _uiGrid_core.default.ViewController.inherit({\r\n    init: function() {\r\n        var _this = this;\r\n        this._dataController = this.getController(\"data\");\r\n        this._selectionController = this.getController(\"selection\");\r\n        this._editingController = this.getController(\"editing\");\r\n        this._headerPanel = this.getView(\"headerPanel\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._editorFactory = this.getController(\"editorFactory\");\r\n        if (this.isKeyboardEnabled()) {\r\n            accessibility.subscribeVisibilityChange();\r\n            this._updateFocusTimeout = null;\r\n            this._fastEditingStarted = false;\r\n            this._focusedCellPosition = {};\r\n            this._canceledCellPosition = null;\r\n            var elementFocused = function($element) {\r\n                _this.setupFocusedView();\r\n                if (_this._isNeedScroll) {\r\n                    if ($element.is(\":visible\") && _this._focusedView && _this._focusedView.getScrollable) {\r\n                        _this._focusedView._scrollToElement($element);\r\n                        _this._isNeedScroll = false\r\n                    }\r\n                }\r\n            };\r\n            this._editorFactory.focused.add(elementFocused);\r\n            this._initViewHandlers();\r\n            this._initDocumentHandlers();\r\n            this.createAction(\"onKeyDown\")\r\n        }\r\n    },\r\n    _initViewHandlers: function() {\r\n        var _this2 = this;\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowsViewFocusHandler = function(event) {\r\n            var $element = (0, _renderer.default)(event.target);\r\n            var isRelatedTargetInRowsView = (0, _renderer.default)(event.relatedTarget).closest(rowsView.element()).length;\r\n            var isCommandButton = $element.hasClass(\"dx-link\");\r\n            if (isCommandButton && !isRelatedTargetInRowsView && _this2._isEventInCurrentGrid(event)) {\r\n                var $focusedCell = _this2._getFocusedCell();\r\n                $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\r\n                if (!$element.closest($focusedCell).length) {\r\n                    event.preventDefault();\r\n                    _events_engine.default.trigger($focusedCell, \"focus\")\r\n                }\r\n            }\r\n        };\r\n        rowsView.renderCompleted.add(function(e) {\r\n            var $rowsView = rowsView.element();\r\n            var isFullUpdate = !e || \"refresh\" === e.changeType;\r\n            var isFocusedViewCorrect = _this2._focusedView && _this2._focusedView.name === rowsView.name;\r\n            var needUpdateFocus = false;\r\n            var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\r\n            var $focusedElement = (0, _renderer.default)(\":focus\");\r\n            var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length || _browser.default.msie && $focusedElement.is(\"body\");\r\n            _events_engine.default.off($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            _events_engine.default.on($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            _this2._initPointerEventHandler();\r\n            _this2._initKeyDownHandler();\r\n            _this2._setRowsViewAttributes();\r\n            if (isFocusedViewCorrect && isFocusedElementCorrect) {\r\n                needUpdateFocus = _this2._isNeedFocus ? !isAppend : _this2._isHiddenFocus && isFullUpdate;\r\n                needUpdateFocus && _this2._updateFocus(true)\r\n            }\r\n        })\r\n    },\r\n    _initDocumentHandlers: function() {\r\n        var _this3 = this;\r\n        var document = _dom_adapter.default.getDocument();\r\n        this._documentClickHandler = this.createAction(function(e) {\r\n            var $target = (0, _renderer.default)(e.event.target);\r\n            var isCurrentRowsViewClick = _this3._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(_this3.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\r\n            var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\r\n            var columnsResizerController = _this3.getController(\"columnsResizer\");\r\n            var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\r\n            if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\r\n                var targetInsideFocusedView = _this3._focusedView ? $target.parents().filter(_this3._focusedView.element()).length > 0 : false;\r\n                !targetInsideFocusedView && _this3._resetFocusedCell(true);\r\n                _this3._resetFocusedView()\r\n            }\r\n        });\r\n        _events_engine.default.on(document, (0, _index.addNamespace)(_pointer.default.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler)\r\n    },\r\n    _setRowsViewAttributes: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        var isGridEmpty = !this._dataController.getVisibleRows().length;\r\n        if (isGridEmpty) {\r\n            this._applyTabIndexToElement($rowsView)\r\n        }\r\n    },\r\n    _initPointerEventHandler: function() {\r\n        var pointerEventName = !isMobile() ? _pointer.default.down : _click.name;\r\n        var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\r\n        var $rowsView = this._getRowsViewElement();\r\n        if (!(0, _type.isDefined)(this._pointerEventAction)) {\r\n            this._pointerEventAction = this.createAction(this._pointerEventHandler)\r\n        }\r\n        _events_engine.default.off($rowsView, (0, _index.addNamespace)(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\r\n        _events_engine.default.on($rowsView, (0, _index.addNamespace)(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction)\r\n    },\r\n    _initKeyDownHandler: function() {\r\n        var _this4 = this;\r\n        var $rowsView = this._getRowsViewElement();\r\n        _short.keyboard.off(this._keyDownListener);\r\n        this._keyDownListener = _short.keyboard.on($rowsView, null, function(e) {\r\n            return _this4._keyDownHandler(e)\r\n        })\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._resetFocusedView();\r\n        _short.keyboard.off(this._keyDownListener);\r\n        _events_engine.default.off(_dom_adapter.default.getDocument(), (0, _index.addNamespace)(_pointer.default.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\r\n        clearTimeout(this._updateFocusTimeout);\r\n        accessibility.unsubscribeVisibilityChange()\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        switch (args.name) {\r\n            case \"keyboardNavigation\":\r\n            case \"useLegacyKeyboardNavigation\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                that.callBase(args)\r\n        }\r\n    },\r\n    isRowFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_ROW\r\n    },\r\n    isCellFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_CELL\r\n    },\r\n    setRowFocusType: function() {\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.focusType = FOCUS_TYPE_ROW\r\n        }\r\n    },\r\n    setCellFocusType: function() {\r\n        this.focusType = FOCUS_TYPE_CELL\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var isEditing = this._editingController.isEditing();\r\n        var needStopPropagation = true;\r\n        var originalEvent = e.originalEvent;\r\n        var isHandled = this._processOnKeyDown(e);\r\n        if (originalEvent.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        this._updateFocusedCellPositionByTarget(originalEvent.target);\r\n        if (!isHandled) {\r\n            switch (e.keyName) {\r\n                case \"leftArrow\":\r\n                case \"rightArrow\":\r\n                    this._leftRightKeysHandler(e, isEditing);\r\n                    break;\r\n                case \"upArrow\":\r\n                case \"downArrow\":\r\n                    if (e.ctrl) {\r\n                        accessibility.selectView(\"rowsView\", this, originalEvent)\r\n                    } else {\r\n                        this._upDownKeysHandler(e, isEditing)\r\n                    }\r\n                    break;\r\n                case \"pageUp\":\r\n                case \"pageDown\":\r\n                    this._pageUpDownKeyHandler(e);\r\n                    break;\r\n                case \"space\":\r\n                    this._spaceKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"A\":\r\n                    if (e.ctrl) {\r\n                        this._ctrlAKeyHandler(e, isEditing)\r\n                    } else {\r\n                        this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"tab\":\r\n                    this._tabKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"enter\":\r\n                    this._enterKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"escape\":\r\n                    this._escapeKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"F\":\r\n                    if (e.ctrl) {\r\n                        this._ctrlFKeyHandler(e)\r\n                    } else {\r\n                        this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"F2\":\r\n                    this._f2KeyHandler();\r\n                    break;\r\n                case \"del\":\r\n                case \"backspace\":\r\n                    if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\r\n                        this._beginFastEditing(originalEvent, true)\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (!this._beginFastEditing(originalEvent)) {\r\n                        this._isNeedFocus = false;\r\n                        this._isNeedScroll = false;\r\n                        needStopPropagation = false\r\n                    }\r\n            }\r\n            if (needStopPropagation) {\r\n                originalEvent.stopPropagation()\r\n            }\r\n        }\r\n    },\r\n    _processOnKeyDown: function(eventArgs) {\r\n        var originalEvent = eventArgs.originalEvent;\r\n        var args = {\r\n            handled: false,\r\n            event: originalEvent\r\n        };\r\n        this.executeAction(\"onKeyDown\", args);\r\n        eventArgs.ctrl = originalEvent.ctrlKey;\r\n        eventArgs.alt = originalEvent.altKey;\r\n        eventArgs.shift = originalEvent.shiftKey;\r\n        return !!args.handled\r\n    },\r\n    _closeEditCell: function() {\r\n        var _this5 = this;\r\n        setTimeout(function() {\r\n            _this5._editingController.closeEditCell()\r\n        })\r\n    },\r\n    _leftRightKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $event = eventArgs.originalEvent;\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\r\n        if (allowNavigate) {\r\n            this.setCellFocusType();\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(directionCode)\r\n            }\r\n            var $cell = this._getNextCell(directionCode);\r\n            if (isElementDefined($cell)) {\r\n                this._arrowKeysHandlerFocusCell($event, $cell, directionCode)\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _upDownKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this._focusedCellPosition.rowIndex;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\r\n        var $event = eventArgs.originalEvent;\r\n        var isUpArrow = \"upArrow\" === eventArgs.keyName;\r\n        var dataSource = this._dataController.dataSource();\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\r\n        if (allowNavigate) {\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (!this._navigateNextCell($event, eventArgs.keyName)) {\r\n                if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\r\n                    var rowHeight = $row.outerHeight();\r\n                    rowIndex = this._focusedCellPosition.rowIndex - 1;\r\n                    this._scrollBy(0, -rowHeight, rowIndex, $event)\r\n                }\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _pageUpDownKeyHandler: function(eventArgs) {\r\n        var pageIndex = this._dataController.pageIndex();\r\n        var pageCount = this._dataController.pageCount();\r\n        var pagingEnabled = this.option(\"paging.enabled\");\r\n        var isPageUp = \"pageUp\" === eventArgs.keyName;\r\n        var pageStep = isPageUp ? -1 : 1;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (pagingEnabled && !this._isVirtualScrolling()) {\r\n            if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\r\n                this._dataController.pageIndex(pageIndex + pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            if (scrollable && scrollable._container().height() < scrollable.$content().height()) {\r\n                this._scrollBy(0, scrollable._container().height() * pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _spaceKeyHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $target = (0, _renderer.default)(eventArgs.originalEvent && eventArgs.originalEvent.target);\r\n        if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\r\n            var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\r\n            var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\r\n            if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\r\n                this._selectionController.startSelectionWithCheckboxes()\r\n            }\r\n            if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._selectionController.changeItemSelection(rowIndex, {\r\n                    shift: eventArgs.shift,\r\n                    control: eventArgs.ctrl\r\n                });\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            this._beginFastEditing(eventArgs.originalEvent)\r\n        }\r\n    },\r\n    _ctrlAKeyHandler: function(eventArgs, isEditing) {\r\n        if (!isEditing && eventArgs.ctrl && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\r\n            this._selectionController.selectAll();\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _tabKeyHandler: function(eventArgs, isEditing) {\r\n        var editingOptions = this.option(\"editing\");\r\n        var direction = eventArgs.shift ? \"previous\" : \"next\";\r\n        var isCellPositionDefined = (0, _type.isDefined)(this._focusedCellPosition) && !(0, _type.isEmptyObject)(this._focusedCellPosition);\r\n        var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var focusedViewElement = this._focusedView && this._focusedView.element();\r\n        if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\r\n            return\r\n        }(0, _renderer.default)(focusedViewElement).addClass(FOCUS_STATE_CLASS);\r\n        if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\r\n            if ((0, _renderer.default)(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._resetFocusedCell()\r\n            }\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(direction)\r\n            }\r\n            if (isEditing) {\r\n                if (!this._editingCellTabHandler(eventArgs, direction)) {\r\n                    return\r\n                }\r\n            } else {\r\n                if (this._targetCellTabHandler(eventArgs, direction)) {\r\n                    isOriginalHandlerRequired = true\r\n                }\r\n            }\r\n        }\r\n        if (isOriginalHandlerRequired) {\r\n            this._editorFactory.loseFocus();\r\n            if (this._editingController.isEditing() && !this._isRowEditMode()) {\r\n                this._resetFocusedCell(true);\r\n                this._resetFocusedView();\r\n                this._closeEditCell()\r\n            }\r\n        } else {\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _getMaxHorizontalOffset: function() {\r\n        var scrollable = this.component.getScrollable();\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var offset = scrollable ? scrollable.scrollWidth() - (0, _renderer.default)(rowsView.element()).width() : 0;\r\n        return offset\r\n    },\r\n    _isColumnRendered: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var renderedVisibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = allVisibleColumns[columnIndex];\r\n        var result = false;\r\n        if (column) {\r\n            result = renderedVisibleColumns.indexOf(column) >= 0\r\n        }\r\n        return result\r\n    },\r\n    _isFixedColumn: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var column = allVisibleColumns[columnIndex];\r\n        return !!column && !!column.fixed\r\n    },\r\n    _isColumnVirtual: function(columnIndex) {\r\n        var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = visibleColumns[localColumnIndex];\r\n        return !!column && \"virtual\" === column.command\r\n    },\r\n    _processVirtualHorizontalPosition: function(direction) {\r\n        var scrollable = this.component.getScrollable();\r\n        var columnIndex = this.getColumnIndex();\r\n        var nextColumnIndex;\r\n        var horizontalScrollPosition = 0;\r\n        var needToScroll = false;\r\n        switch (direction) {\r\n            case \"next\":\r\n            case \"nextInRow\":\r\n                var columnsCount = this._getVisibleColumnCount();\r\n                nextColumnIndex = columnIndex + 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\r\n                if (\"next\" === direction) {\r\n                    needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n                break;\r\n            case \"previous\":\r\n            case \"previousInRow\":\r\n                nextColumnIndex = columnIndex - 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\r\n                if (\"previous\" === direction) {\r\n                    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n                    var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\r\n                    needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n        }\r\n        if (needToScroll) {\r\n            scrollable.scrollTo({\r\n                left: horizontalScrollPosition\r\n            })\r\n        } else {\r\n            if ((0, _type.isDefined)(nextColumnIndex) && (0, _type.isDefined)(direction) && this._isColumnVirtual(nextColumnIndex)) {\r\n                horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\r\n                0 !== horizontalScrollPosition && scrollable.scrollBy({\r\n                    left: horizontalScrollPosition,\r\n                    top: 0\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _getHorizontalScrollPositionOffset: function(direction) {\r\n        var positionOffset = 0;\r\n        var $currentCell = this._getCell(this._focusedCellPosition);\r\n        var currentCellWidth = $currentCell && $currentCell.outerWidth();\r\n        if (currentCellWidth > 0) {\r\n            var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\r\n            positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1\r\n        }\r\n        return positionOffset\r\n    },\r\n    _editingCellTabHandler: function(eventArgs, direction) {\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var isEditingAllowed;\r\n        var $event = eventArgs.originalEvent;\r\n        var elementType = this._getElementType(eventTarget);\r\n        if ($cell.is(COMMAND_CELL_SELECTOR)) {\r\n            return !this._targetCellTabHandler(eventArgs, direction)\r\n        }\r\n        this._updateFocusedCellPosition($cell);\r\n        var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n        $cell = nextCellInfo.$cell;\r\n        if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\r\n            return false\r\n        }\r\n        var columnsController = this._columnsController;\r\n        var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\r\n        var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n        var $row = $cell && $cell.parent();\r\n        var rowIndex = this._getRowIndex($row);\r\n        var row = this._dataController.items()[rowIndex];\r\n        var editingController = this._editingController;\r\n        if (column && column.allowEditing) {\r\n            var _isDataRow = !row || \"data\" === row.rowType;\r\n            isEditingAllowed = editingController.allowUpdating({\r\n                row: row\r\n            }) ? _isDataRow : row && row.isNewRow\r\n        }\r\n        if (!isEditingAllowed) {\r\n            this._closeEditCell()\r\n        }\r\n        if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\r\n            if (!this._isRowEditMode() && isEditingAllowed) {\r\n                this._editFocusedCell()\r\n            } else {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _targetCellTabHandler: function(eventArgs, direction) {\r\n        var $event = eventArgs.originalEvent;\r\n        var eventTarget = $event.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\r\n        var isOriginalHandlerRequired = false;\r\n        var elementType;\r\n        if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\r\n            isOriginalHandlerRequired = true\r\n        } else {\r\n            if (void 0 === this._focusedCellPosition.rowIndex && (0, _renderer.default)(eventTarget).hasClass(ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n            elementType = this._getElementType(eventTarget);\r\n            if (this.isRowFocusType()) {\r\n                this.setCellFocusType();\r\n                if (\"row\" === elementType && isDataRow((0, _renderer.default)(eventTarget))) {\r\n                    eventTarget = this.getFirstValidCellInRow((0, _renderer.default)(eventTarget));\r\n                    elementType = this._getElementType(eventTarget)\r\n                }\r\n            }\r\n            var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n            $cell = nextCellInfo.$cell;\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            $cell = this._checkNewLineTransition($event, $cell);\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            this._focusCell($cell, !nextCellInfo.isHighlighted);\r\n            if (!isEditorCell(this, $cell)) {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return isOriginalHandlerRequired\r\n    },\r\n    _getNextCellByTabKey: function($event, direction, elementType) {\r\n        var $cell = this._getNextCell(direction, elementType);\r\n        var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\r\n        if (!args || args.cancel) {\r\n            return {}\r\n        }\r\n        if (args.$newCellElement) {\r\n            $cell = args.$newCellElement\r\n        }\r\n        return {\r\n            $cell: $cell,\r\n            isHighlighted: args.isHighlighted\r\n        }\r\n    },\r\n    _checkNewLineTransition: function($event, $cell) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = $cell.parent();\r\n        if (rowIndex !== this._getRowIndex($row)) {\r\n            var cellPosition = this._getCellPosition($cell);\r\n            var args = this._fireFocusedRowChanging($event, $row);\r\n            if (args.cancel) {\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                this.setFocusedColumnIndex(cellPosition.columnIndex);\r\n                $cell = this._getFocusedCell()\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _enterKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getFocusedCell();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var item = this._dataController.items()[rowIndex];\r\n            if (void 0 !== key && item && item.data && !item.data.isContinuation) {\r\n                this._dataController.changeRowExpand(key)\r\n            }\r\n        } else {\r\n            this._processEnterKeyForDataCell(eventArgs, isEditing)\r\n        }\r\n    },\r\n    _processEnterKeyForDataCell: function(eventArgs, isEditing) {\r\n        var direction = this._getEnterKeyDirection(eventArgs);\r\n        var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\r\n        if (isEditing || !allowEditingOnEnterKey && direction) {\r\n            this._handleEnterKeyEditingCell(eventArgs.originalEvent);\r\n            if (\"next\" === direction || \"previous\" === direction) {\r\n                this._targetCellTabHandler(eventArgs, direction)\r\n            } else {\r\n                if (\"upArrow\" === direction || \"downArrow\" === direction) {\r\n                    this._navigateNextCell(eventArgs.originalEvent, direction)\r\n                }\r\n            }\r\n        } else {\r\n            if (allowEditingOnEnterKey) {\r\n                this._startEditing(eventArgs)\r\n            }\r\n        }\r\n    },\r\n    _getEnterKeyDirection: function(eventArgs) {\r\n        var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\r\n        var isShift = eventArgs.shift;\r\n        if (\"column\" === enterKeyDirection) {\r\n            return isShift ? \"upArrow\" : \"downArrow\"\r\n        }\r\n        if (\"row\" === enterKeyDirection) {\r\n            return isShift ? \"previous\" : \"next\"\r\n        }\r\n    },\r\n    _handleEnterKeyEditingCell: function(event) {\r\n        var target = event.target;\r\n        var $cell = this._getCellElementFromTarget(target);\r\n        var isRowEditMode = this._isRowEditMode();\r\n        this._updateFocusedCellPosition($cell);\r\n        if (isRowEditMode) {\r\n            this._focusEditFormCell($cell);\r\n            setTimeout(this._editingController.saveEditData.bind(this._editingController))\r\n        } else {\r\n            _events_engine.default.trigger((0, _renderer.default)(target), \"change\");\r\n            this._closeEditCell();\r\n            event.preventDefault()\r\n        }\r\n    },\r\n    _escapeKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\r\n        if (isEditing) {\r\n            this._updateFocusedCellPosition($cell);\r\n            if (!this._isRowEditMode()) {\r\n                if (\"cell\" === this._editingController.getEditMode()) {\r\n                    this._editingController.cancelEditData()\r\n                } else {\r\n                    this._closeEditCell()\r\n                }\r\n            } else {\r\n                this._focusEditFormCell($cell);\r\n                this._editingController.cancelEditData();\r\n                if (0 === this._dataController.items().length) {\r\n                    this._resetFocusedCell();\r\n                    this._editorFactory.loseFocus()\r\n                }\r\n            }\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _ctrlFKeyHandler: function(eventArgs) {\r\n        if (this.option(\"searchPanel.visible\")) {\r\n            var searchTextEditor = this._headerPanel.getSearchTextEditor();\r\n            if (searchTextEditor) {\r\n                searchTextEditor.focus();\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _f2KeyHandler: function() {\r\n        var isEditing = this._editingController.isEditing();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (!isEditing && isDataRow($row)) {\r\n            this._startEditing()\r\n        }\r\n    },\r\n    _navigateNextCell: function($event, keyCode) {\r\n        var $cell = this._getNextCell(keyCode);\r\n        var directionCode = this._getDirectionCodeByKey(keyCode);\r\n        var isCellValid = $cell && this._isCellValid($cell);\r\n        var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\r\n        return result\r\n    },\r\n    _arrowKeysHandlerFocusCell: function($event, $nextCell, direction) {\r\n        var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\r\n        var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\r\n        $nextCell = args.$newCellElement;\r\n        if (!args.cancel && this._isCellValid($nextCell)) {\r\n            this._focus($nextCell, !args.isHighlighted);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _beginFastEditing: function(originalEvent, isDeleting) {\r\n        if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\r\n            return false\r\n        }\r\n        if (isDeleting) {\r\n            this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY)\r\n        } else {\r\n            var key = originalEvent.key;\r\n            var keyCode = originalEvent.keyCode || originalEvent.which;\r\n            var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\r\n            if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\r\n                this._startEditing(originalEvent, fastEditingKey)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _pointerEventHandler: function(e) {\r\n        var event = e.event || e;\r\n        var $target = (0, _renderer.default)(event.currentTarget);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var focusedViewElement = rowsView && rowsView.element();\r\n        var $parent = $target.parent();\r\n        var isInteractiveElement = (0, _renderer.default)(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n        var isRevertButton = !!(0, _renderer.default)(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\r\n        var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\r\n        if (!this._isEventInCurrentGrid(event)) {\r\n            return\r\n        }\r\n        if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\r\n            $target = this._isInsideEditForm($target) ? (0, _renderer.default)(event.target) : $target;\r\n            this._focusView();\r\n            (0, _renderer.default)(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\r\n            if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($target);\r\n                this._applyTabIndexToElement(this._focusedView.element());\r\n                this._focusedView.focus()\r\n            } else {\r\n                if (!this._isMasterDetailCell($target)) {\r\n                    this._clickTargetCellHandler(event, $target)\r\n                } else {\r\n                    this._updateFocusedCellPosition($target)\r\n                }\r\n            }\r\n        } else {\r\n            if ($target.is(\"td\")) {\r\n                this._resetFocusedCell()\r\n            }\r\n        }\r\n    },\r\n    _clickTargetCellHandler: function(event, $cell) {\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        var isCellEditMode = this._isCellEditMode();\r\n        this.setCellFocusType();\r\n        var args = this._fireFocusChangingEvents(event, $cell, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel) {\r\n            if (args.resetFocusedRow) {\r\n                this.getController(\"focus\")._resetFocusedRow();\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                $cell = this._getFocusedCell()\r\n            }\r\n            if (!args.isHighlighted && !isCellEditMode) {\r\n                this.setRowFocusType()\r\n            }\r\n            this._updateFocusedCellPosition($cell);\r\n            if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\r\n                this._isNeedFocus = false;\r\n                this._isHiddenFocus = false\r\n            } else {\r\n                var $target = event && (0, _renderer.default)(event.target).closest(NON_FOCUSABLE_ELEMENTS_SELECTOR + \", td\");\r\n                var skipFocusEvent = $target && $target.not($cell).is(NON_FOCUSABLE_ELEMENTS_SELECTOR);\r\n                var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\r\n                var isDisabled = !isEditor && (!args.isHighlighted || skipFocusEvent);\r\n                this._focus($cell, isDisabled, skipFocusEvent)\r\n            }\r\n        } else {\r\n            this.setRowFocusType();\r\n            this.setFocusedRowIndex(args.prevRowIndex);\r\n            $cell = this._getFocusedCell();\r\n            if (this._editingController.isEditing() && isCellEditMode) {\r\n                this._closeEditCell()\r\n            }\r\n        }\r\n    },\r\n    _allowRowUpdating: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }, \"click\")\r\n    },\r\n    focus: function(element) {\r\n        var activeElementSelector;\r\n        var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var isHighlighted = isCellElement((0, _renderer.default)(element));\r\n        if (!element) {\r\n            activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\r\n            if (!focusedRowEnabled) {\r\n                activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\"\r\n            }\r\n            element = this.component.$element().find(activeElementSelector).first()\r\n        }\r\n        element && this._focusElement((0, _renderer.default)(element), isHighlighted)\r\n    },\r\n    getFocusedView: function() {\r\n        return this._focusedView\r\n    },\r\n    setupFocusedView: function() {\r\n        if (this.isKeyboardEnabled() && !(0, _type.isDefined)(this._focusedView)) {\r\n            this._focusView()\r\n        }\r\n    },\r\n    _focusElement: function($element, isHighlighted) {\r\n        var rowsViewElement = (0, _renderer.default)(this._getRowsViewElement());\r\n        var $focusedView = $element.closest(rowsViewElement);\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var args = {};\r\n        if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\r\n            return\r\n        }\r\n        this._focusView();\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        if (isCellElement($element) || isGroupRow($element)) {\r\n            this.setCellFocusType();\r\n            args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\r\n            $element = args.$newCellElement;\r\n            if (isRowFocusType && !args.isHighlighted) {\r\n                this.setRowFocusType()\r\n            }\r\n        }\r\n        if (!args.cancel) {\r\n            this._focus($element, !args.isHighlighted);\r\n            this._focusInteractiveElement($element)\r\n        }\r\n    },\r\n    _getFocusedViewByElement: function($element) {\r\n        var view = this.getFocusedView();\r\n        var $view = view && (0, _renderer.default)(view.element());\r\n        return $element && 0 !== $element.closest($view).length\r\n    },\r\n    _focusView: function() {\r\n        this._focusedView = this.getView(\"rowsView\")\r\n    },\r\n    _resetFocusedView: function() {\r\n        this.setRowFocusType();\r\n        this._focusedView = null\r\n    },\r\n    _focusInteractiveElement: function($cell, isLast) {\r\n        if (!$cell) {\r\n            return\r\n        }\r\n        var $focusedElement = this._getInteractiveElement($cell, isLast);\r\n        _uiGrid_core2.default.focusAndSelectElement(this, $focusedElement)\r\n    },\r\n    _focus: function($cell, disableFocus, skipFocusEvent) {\r\n        var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\r\n        if ($row && isNotFocusedRow($row)) {\r\n            return\r\n        }\r\n        var focusedView = this._focusedView;\r\n        var $focusViewElement = focusedView && focusedView.element();\r\n        var $focusElement;\r\n        this._isHiddenFocus = disableFocus;\r\n        var isRowFocus = isGroupRow($row) || this.isRowFocusType();\r\n        if (isRowFocus) {\r\n            $focusElement = $row;\r\n            if (focusedView) {\r\n                this.setFocusedRowIndex(this._getRowIndex($row))\r\n            }\r\n        } else {\r\n            if (isCellElement($cell)) {\r\n                $focusElement = $cell;\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n        }\r\n        if ($focusElement) {\r\n            if ($focusViewElement) {\r\n                $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\")\r\n            }\r\n            _events_engine.default.one($focusElement, \"blur\", function(e) {\r\n                if (e.relatedTarget) {\r\n                    $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            });\r\n            if (!skipFocusEvent) {\r\n                this._applyTabIndexToElement($focusElement);\r\n                _events_engine.default.trigger($focusElement, \"focus\")\r\n            }\r\n            if (disableFocus) {\r\n                $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                if (isRowFocus) {\r\n                    $cell.addClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            } else {\r\n                this._editorFactory.focus($focusElement)\r\n            }\r\n        }\r\n    },\r\n    _updateFocus: function(isRenderView) {\r\n        var _this6 = this;\r\n        this._updateFocusTimeout = setTimeout(function() {\r\n            var editingController = _this6._editingController;\r\n            var isCellEditMode = editingController.getEditMode() === EDIT_MODE_CELL;\r\n            var isBatchEditMode = editingController.getEditMode() === EDIT_MODE_BATCH;\r\n            if (isCellEditMode && editingController.hasChanges() || isBatchEditMode && editingController.isNewRowInEditMode()) {\r\n                editingController._focusEditingCell();\r\n                return\r\n            }\r\n            var $cell = _this6._getFocusedCell();\r\n            var isEditing = editingController.isEditing();\r\n            if ($cell && !(_this6._isMasterDetailCell($cell) && !_this6._isRowEditMode())) {\r\n                if (_this6._hasSkipRow($cell.parent())) {\r\n                    var direction = _this6._focusedCellPosition && _this6._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\r\n                    $cell = _this6._getNextCell(direction)\r\n                }\r\n                if (isElementDefined($cell)) {\r\n                    if (isRenderView && !isEditing && _this6._checkCellOverlapped($cell)) {\r\n                        return\r\n                    }\r\n                    if ($cell.is(\"td\") || $cell.hasClass(_this6.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\r\n                        var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\r\n                        var $focusedElementInsideCell = $cell.find(\":focus\");\r\n                        var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\r\n                        if ((isRenderView || !isCommandCell) && _this6._editorFactory.focus()) {\r\n                            if (isCommandCell && isFocusedElementDefined) {\r\n                                _uiGrid_core2.default.focusAndSelectElement(_this6, $focusedElementInsideCell);\r\n                                return\r\n                            }!isFocusedElementDefined && _this6._focus($cell)\r\n                        } else {\r\n                            if (!isFocusedElementDefined && (_this6._isNeedFocus || _this6._isHiddenFocus)) {\r\n                                _this6._focus($cell, _this6._isHiddenFocus)\r\n                            }\r\n                        }\r\n                        if (isEditing) {\r\n                            _this6._focusInteractiveElement.bind(_this6)($cell)\r\n                        }\r\n                    } else {\r\n                        _events_engine.default.trigger($cell, \"focus\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _checkCellOverlapped: function($cell) {\r\n        var cellOffset = $cell.offset();\r\n        var hasScrollable = this.component.getScrollable && this.component.getScrollable();\r\n        var isOverlapped = false;\r\n        if (hasScrollable) {\r\n            if (cellOffset.left < 0) {\r\n                isOverlapped = $cell.width() + cellOffset.left <= 0\r\n            } else {\r\n                if (cellOffset.top < 0) {\r\n                    isOverlapped = $cell.height() + cellOffset.top <= 0\r\n                }\r\n            }\r\n        }\r\n        return isOverlapped\r\n    },\r\n    _getFocusedCell: function() {\r\n        return (0, _renderer.default)(this._getCell(this._focusedCellPosition))\r\n    },\r\n    _updateFocusedCellPositionByTarget: function(target) {\r\n        var _this$_focusedCellPos;\r\n        var elementType = this._getElementType(target);\r\n        if (\"row\" === elementType && (0, _type.isDefined)(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\r\n            var $row = (0, _renderer.default)(target);\r\n            this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row))\r\n        } else {\r\n            this._updateFocusedCellPosition(this._getCellElementFromTarget(target))\r\n        }\r\n    },\r\n    _updateFocusedCellPosition: function($cell, direction) {\r\n        var position = this._getCellPosition($cell, direction);\r\n        if (position) {\r\n            if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\r\n                this.setFocusedCellPosition(position.rowIndex, position.columnIndex)\r\n            }\r\n        }\r\n        return position\r\n    },\r\n    _getFocusedColumnIndexOffset: function(columnIndex) {\r\n        var offset = 0;\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        if (column && column.fixed) {\r\n            offset = this._getFixedColumnIndexOffset(column)\r\n        } else {\r\n            if (columnIndex >= 0) {\r\n                offset = this._columnsController.getColumnIndexOffset()\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    _getFixedColumnIndexOffset: function(column) {\r\n        var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\r\n        return offset\r\n    },\r\n    _getCellPosition: function($cell, direction) {\r\n        var columnIndex;\r\n        var $row = isElementDefined($cell) && $cell.closest(\"tr\");\r\n        var rowsView = this.getView(\"rowsView\");\r\n        if (isElementDefined($row)) {\r\n            var rowIndex = this._getRowIndex($row);\r\n            columnIndex = rowsView.getCellIndex($cell, rowIndex);\r\n            columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\r\n            if (direction) {\r\n                columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\r\n                columnIndex = this._applyColumnIndexBoundaries(columnIndex)\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    },\r\n    _focusCell: function($cell, isDisabled) {\r\n        if (this._isCellValid($cell)) {\r\n            this._focus($cell, isDisabled);\r\n            return true\r\n        }\r\n    },\r\n    _focusEditFormCell: function($cell) {\r\n        if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n            this._editorFactory.focus($cell, true)\r\n        }\r\n    },\r\n    _resetFocusedCell: function(preventScroll) {\r\n        var _this$_focusedView;\r\n        var $cell = this._getFocusedCell();\r\n        isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\r\n        this._isNeedFocus = false;\r\n        this._isNeedScroll = false;\r\n        this._focusedCellPosition = {};\r\n        clearTimeout(this._updateFocusTimeout);\r\n        null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState(preventScroll)\r\n    },\r\n    restoreFocusableElement: function(rowIndex, $event) {\r\n        var that = this;\r\n        var args;\r\n        var $rowElement;\r\n        var isUpArrow = (0, _type.isDefined)(rowIndex);\r\n        var rowsView = that.getView(\"rowsView\");\r\n        var $rowsViewElement = rowsView.element();\r\n        var columnIndex = that._focusedCellPosition.columnIndex;\r\n        var rowIndexOffset = that._dataController.getRowIndexOffset();\r\n        rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\r\n        if (!isUpArrow) {\r\n            that._editorFactory.loseFocus();\r\n            that._applyTabIndexToElement($rowsViewElement);\r\n            _events_engine.default.trigger($rowsViewElement, \"focus\")\r\n        } else {\r\n            $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\r\n            args = that._fireFocusedRowChanging($event, $rowElement);\r\n            if (!args.cancel && args.rowIndexChanged) {\r\n                rowIndex = args.newRowIndex\r\n            }\r\n        }\r\n        if (!isUpArrow || !args.cancel) {\r\n            that.setFocusedCellPosition(rowIndex, columnIndex)\r\n        }\r\n        isUpArrow && that._updateFocus()\r\n    },\r\n    _getNewPositionByCode: function(cellPosition, elementType, code) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var visibleColumnsCount;\r\n        if (void 0 === cellPosition.rowIndex && \"next\" === code) {\r\n            return {\r\n                columnIndex: 0,\r\n                rowIndex: 0\r\n            }\r\n        }\r\n        switch (code) {\r\n            case \"nextInRow\":\r\n            case \"next\":\r\n                visibleColumnsCount = this._getVisibleColumnCount();\r\n                if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex++\r\n                } else {\r\n                    if (!this._isLastRow(rowIndex) && \"next\" === code) {\r\n                        columnIndex = 0;\r\n                        rowIndex++\r\n                    }\r\n                }\r\n                break;\r\n            case \"previousInRow\":\r\n            case \"previous\":\r\n                if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex--\r\n                } else {\r\n                    if (rowIndex > 0 && \"previous\" === code) {\r\n                        rowIndex--;\r\n                        visibleColumnsCount = this._getVisibleColumnCount();\r\n                        columnIndex = visibleColumnsCount - 1\r\n                    }\r\n                }\r\n                break;\r\n            case \"upArrow\":\r\n                rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\r\n                break;\r\n            case \"downArrow\":\r\n                rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex\r\n        }\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    setFocusedCellPosition: function(rowIndex, columnIndex) {\r\n        this.setFocusedRowIndex(rowIndex);\r\n        this.setFocusedColumnIndex(columnIndex)\r\n    },\r\n    setFocusedRowIndex: function(rowIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.rowIndex = rowIndex\r\n    },\r\n    setFocusedColumnIndex: function(columnIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.columnIndex = columnIndex\r\n    },\r\n    getRowIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1\r\n    },\r\n    getColumnIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1\r\n    },\r\n    getVisibleRowIndex: function() {\r\n        var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\r\n        if (!(0, _type.isDefined)(rowIndex)) {\r\n            return -1\r\n        }\r\n        return rowIndex - this._dataController.getRowIndexOffset()\r\n    },\r\n    getVisibleColumnIndex: function() {\r\n        var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\r\n        if (!(0, _type.isDefined)(columnIndex)) {\r\n            return -1\r\n        }\r\n        return columnIndex - this._columnsController.getColumnIndexOffset()\r\n    },\r\n    _applyColumnIndexBoundaries: function(columnIndex) {\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        if (columnIndex < 0) {\r\n            columnIndex = 0\r\n        } else {\r\n            if (columnIndex >= visibleColumnsCount) {\r\n                columnIndex = visibleColumnsCount - 1\r\n            }\r\n        }\r\n        return columnIndex\r\n    },\r\n    _isCellByPositionValid: function(cellPosition) {\r\n        var $cell = (0, _renderer.default)(this._getCell(cellPosition));\r\n        return this._isCellValid($cell)\r\n    },\r\n    _isLastRow: function(rowIndex) {\r\n        var dataController = this._dataController;\r\n        if (this._isVirtualRowRender()) {\r\n            return rowIndex >= dataController.getMaxRowIndex()\r\n        }\r\n        return rowIndex === dataController.items().length - 1\r\n    },\r\n    _isFirstValidCell: function(cellPosition) {\r\n        var isFirstValidCell = false;\r\n        if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\r\n            isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition)\r\n        }\r\n        return isFirstValidCell\r\n    },\r\n    _hasValidCellBeforePosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        while (columnIndex > 0 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: --columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _hasValidCellAfterPosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        var visibleColumnCount = this._getVisibleColumnCount();\r\n        while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: ++columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _isLastValidCell: function(cellPosition) {\r\n        var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var checkingPosition = {\r\n            columnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex\r\n        };\r\n        var visibleRows = this._dataController.getVisibleRows();\r\n        var row = visibleRows && visibleRows[rowIndex];\r\n        var isLastRow = this._isLastRow(rowIndex);\r\n        if (!isLastRow) {\r\n            return false\r\n        }\r\n        if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\r\n            return true\r\n        }\r\n        if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\r\n            return true\r\n        }\r\n        if (this._isCellByPositionValid(checkingPosition)) {\r\n            return false\r\n        }\r\n        return this._isLastValidCell(checkingPosition)\r\n    },\r\n    _isCellValid: function($cell, isClick) {\r\n        if (isElementDefined($cell)) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var $row = $cell.parent();\r\n            var columnsController = this._columnsController;\r\n            var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\r\n            var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n            var visibleColumnCount = this._getVisibleColumnCount();\r\n            var editingController = this._editingController;\r\n            var isMasterDetailRow = isDetailRow($row);\r\n            var isShowWhenGrouped = column && column.showWhenGrouped;\r\n            var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\r\n            var isValidGroupSpaceColumn = function() {\r\n                return !isMasterDetailRow && column && (!(0, _type.isDefined)(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1\r\n            };\r\n            if (this._isMasterDetailCell($cell)) {\r\n                return true\r\n            }\r\n            if (visibleColumnCount > columnIndex && isValidGroupSpaceColumn()) {\r\n                var rowItems = this._dataController.items();\r\n                var visibleRowIndex = rowsView.getRowIndex($row);\r\n                var row = rowItems[visibleRowIndex];\r\n                var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\r\n                var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\r\n                var isEditing = isRowEditingInCurrentRow || isCellEditing;\r\n                if (column.command) {\r\n                    if (this._isLegacyNavigation()) {\r\n                        return !isEditing && \"expand\" === column.command\r\n                    }\r\n                    if (isCellEditing) {\r\n                        return false\r\n                    }\r\n                    if (isRowEditingInCurrentRow) {\r\n                        return \"select\" !== column.command\r\n                    }\r\n                    return !isEditing\r\n                }\r\n                if (isCellEditing && row && \"data\" !== row.rowType) {\r\n                    return false\r\n                }\r\n                return !isEditing || column.allowEditing || isClick\r\n            }\r\n        }\r\n    },\r\n    getFirstValidCellInRow: function($row, columnIndex) {\r\n        var that = this;\r\n        var $cells = $row.find(\"> td\");\r\n        var $cell;\r\n        var $result;\r\n        columnIndex = columnIndex || 0;\r\n        for (var i = columnIndex; i < $cells.length; ++i) {\r\n            $cell = $cells.eq(i);\r\n            if (that._isCellValid($cell)) {\r\n                $result = $cell;\r\n                break\r\n            }\r\n        }\r\n        return $result\r\n    },\r\n    _getNextCell: function(keyCode, elementType, cellPosition) {\r\n        var focusedCellPosition = cellPosition || this._focusedCellPosition;\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var includeCommandCells = isRowFocusType || (0, _array.inArray)(keyCode, [\"next\", \"previous\"]) > -1;\r\n        var $cell;\r\n        var $row;\r\n        if (this._focusedView && focusedCellPosition) {\r\n            var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\r\n            $cell = (0, _renderer.default)(this._getCell(newFocusedCellPosition));\r\n            var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\r\n            if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\r\n                if (isRowFocusType) {\r\n                    $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex)\r\n                } else {\r\n                    $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition)\r\n                }\r\n            }\r\n            $row = isElementDefined($cell) && $cell.parent();\r\n            if (this._hasSkipRow($row)) {\r\n                var rowIndex = this._getRowIndex($row);\r\n                if (!this._isLastRow(rowIndex)) {\r\n                    $cell = this._getNextCell(keyCode, \"row\", {\r\n                        columnIndex: focusedCellPosition.columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return isElementDefined($cell) ? $cell : null\r\n        }\r\n        return null\r\n    },\r\n    _startEditing: function(eventArgs, fastEditingKey) {\r\n        var focusedCellPosition = this._focusedCellPosition;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleColumnIndex = this.getVisibleColumnIndex();\r\n        var row = this._dataController.items()[visibleRowIndex];\r\n        var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n        if (this._isAllowEditing(row, column)) {\r\n            if (this._isRowEditMode()) {\r\n                this._editingController.editRow(visibleRowIndex)\r\n            } else {\r\n                if (focusedCellPosition) {\r\n                    this._startEditCell(eventArgs, fastEditingKey)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _isAllowEditing: function(row, column) {\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }) && column && column.allowEditing\r\n    },\r\n    _editFocusedCell: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var colIndex = this.getVisibleColumnIndex();\r\n        return this._editingController.editCell(rowIndex, colIndex)\r\n    },\r\n    _startEditCell: function(eventArgs, fastEditingKey) {\r\n        var _this7 = this;\r\n        this._fastEditingStarted = (0, _type.isDefined)(fastEditingKey);\r\n        var editResult = this._editFocusedCell();\r\n        if (this._isFastEditingStarted()) {\r\n            if (true === editResult) {\r\n                this._editingCellHandler(eventArgs, fastEditingKey)\r\n            } else {\r\n                if (editResult && editResult.done) {\r\n                    var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\r\n                    editResult.done(function() {\r\n                        return _this7._editingCellHandler(eventArgs, editorValue)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _editingCellHandler: function(eventArgs, editorValue) {\r\n        var _$input$get$select, _$input$get;\r\n        var $input = this._getFocusedCell().find(INTERACTIVE_ELEMENTS_SELECTOR).eq(0);\r\n        var keyDownEvent = (0, _index.createEvent)(eventArgs, {\r\n            type: \"keydown\",\r\n            target: $input.get(0)\r\n        });\r\n        var keyPressEvent = (0, _index.createEvent)(eventArgs, {\r\n            type: \"keypress\",\r\n            target: $input.get(0)\r\n        });\r\n        var inputEvent = (0, _index.createEvent)(eventArgs, {\r\n            type: \"input\",\r\n            target: $input.get(0)\r\n        });\r\n        null === (_$input$get$select = (_$input$get = $input.get(0)).select) || void 0 === _$input$get$select ? void 0 : _$input$get$select.call(_$input$get);\r\n        _events_engine.default.trigger($input, keyDownEvent);\r\n        if (!keyDownEvent.isDefaultPrevented()) {\r\n            _events_engine.default.trigger($input, keyPressEvent);\r\n            if (!keyPressEvent.isDefaultPrevented()) {\r\n                var timeout = _browser.default.mozilla ? 25 : 0;\r\n                setTimeout(function() {\r\n                    $input.val(editorValue);\r\n                    if (_browser.default.msie) {\r\n                        _uiGrid_core2.default.setSelectionRange($input.get(0), {\r\n                            selectionStart: editorValue.length,\r\n                            selectionEnd: editorValue.length\r\n                        })\r\n                    }\r\n                    var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\r\n                    _events_engine.default.off($widgetContainer, \"focusout\");\r\n                    _events_engine.default.one($widgetContainer, \"focusout\", function() {\r\n                        _events_engine.default.trigger($input, \"change\")\r\n                    });\r\n                    _events_engine.default.trigger($input, inputEvent)\r\n                }, timeout)\r\n            }\r\n        }\r\n    },\r\n    _fireFocusChangingEvents: function($event, $cell, fireRowEvent, isHighlighted) {\r\n        var args = {};\r\n        var cellPosition = this._getCellPosition($cell) || {};\r\n        if (this.isCellFocusType()) {\r\n            args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\r\n            if (!args.cancel) {\r\n                cellPosition.columnIndex = args.newColumnIndex;\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                isHighlighted = args.isHighlighted;\r\n                $cell = (0, _renderer.default)(this._getCell(cellPosition))\r\n            }\r\n        }\r\n        if (!args.cancel && fireRowEvent && $cell) {\r\n            args = this._fireFocusedRowChanging($event, $cell.parent());\r\n            if (!args.cancel) {\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                args.isHighlighted = isHighlighted\r\n            }\r\n        }\r\n        args.$newCellElement = (0, _renderer.default)(this._getCell(cellPosition));\r\n        if (!args.$newCellElement.length) {\r\n            args.$newCellElement = $cell\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanging: function($event, $cellElement, isHighlighted) {\r\n        var that = this;\r\n        var prevCellIndex = that.option(\"focusedColumnIndex\");\r\n        var prevRowIndex = that.option(\"focusedRowIndex\");\r\n        var cellPosition = that._getCellPosition($cellElement);\r\n        var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\r\n        var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\r\n        var args = {\r\n            cellElement: $cellElement,\r\n            prevColumnIndex: prevCellIndex,\r\n            prevRowIndex: prevRowIndex,\r\n            newColumnIndex: columnIndex,\r\n            newRowIndex: rowIndex,\r\n            rows: that._dataController.getVisibleRows(),\r\n            columns: that._columnsController.getVisibleColumns(),\r\n            event: $event,\r\n            isHighlighted: isHighlighted || false,\r\n            cancel: false\r\n        };\r\n        this._canceledCellPosition = null;\r\n        that.executeAction(\"onFocusedCellChanging\", args);\r\n        if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\r\n            args.$newCellElement = (0, _renderer.default)(this._getCell({\r\n                columnIndex: args.newColumnIndex,\r\n                rowIndex: args.newRowIndex\r\n            }))\r\n        }\r\n        if (args.cancel) {\r\n            this._canceledCellPosition = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanged: function($cellElement, prevCellIndex, prevRowIndex) {\r\n        var that = this;\r\n        var dataController = that._dataController;\r\n        var columnIndex = that.getView(\"rowsView\").getCellIndex($cellElement);\r\n        var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\r\n        var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n        var isEditingCell = that._editingController.isEditCell(localRowIndex, columnIndex);\r\n        var row = dataController.items()[localRowIndex];\r\n        if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\r\n            that.executeAction(\"onFocusedCellChanged\", {\r\n                cellElement: $cellElement,\r\n                columnIndex: columnIndex,\r\n                rowIndex: rowIndex,\r\n                row: row,\r\n                column: that._columnsController.getVisibleColumns()[columnIndex]\r\n            })\r\n        }\r\n    },\r\n    _fireFocusedRowChanging: function(eventArgs, $newFocusedRow) {\r\n        var newRowIndex = this._getRowIndex($newFocusedRow);\r\n        var dataController = this._dataController;\r\n        var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var loadingOperationTypes = dataController.loadingOperationTypes();\r\n        var args = {\r\n            rowElement: $newFocusedRow,\r\n            prevRowIndex: prevFocusedRowIndex,\r\n            newRowIndex: newRowIndex,\r\n            event: eventArgs,\r\n            rows: dataController.getVisibleRows(),\r\n            cancel: false\r\n        };\r\n        if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\r\n            args.cancel = true;\r\n            return args\r\n        }\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.executeAction(\"onFocusedRowChanging\", args);\r\n            if (!args.cancel && args.newRowIndex !== newRowIndex) {\r\n                args.resetFocusedRow = args.newRowIndex < 0;\r\n                if (!args.resetFocusedRow) {\r\n                    this.setFocusedRowIndex(args.newRowIndex)\r\n                }\r\n                args.rowIndexChanged = true\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedRowChanged: function($rowElement) {\r\n        var row;\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var focusController = this.getController(\"focus\");\r\n        var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            if (focusedRowIndex >= 0) {\r\n                var dataController = this._dataController;\r\n                row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()]\r\n            }\r\n            this.executeAction(\"onFocusedRowChanged\", {\r\n                rowElement: $rowElement,\r\n                rowIndex: focusedRowIndex,\r\n                row: row\r\n            })\r\n        }\r\n    },\r\n    _isEventInCurrentGrid: function(event) {\r\n        return _uiGrid_core2.default.isElementInCurrentGrid(this, (0, _renderer.default)(event.target))\r\n    },\r\n    _isRowEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM\r\n    },\r\n    _isCellEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH\r\n    },\r\n    _isFastEditingAllowed: function() {\r\n        return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\")\r\n    },\r\n    _getInteractiveElement: function($cell, isLast) {\r\n        var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\r\n        return isLast ? $focusedElement.last() : $focusedElement.first()\r\n    },\r\n    _applyTabIndexToElement: function($element) {\r\n        var tabIndex = this.option(\"tabIndex\") || 0;\r\n        $element.attr(\"tabindex\", (0, _type.isDefined)(tabIndex) ? tabIndex : 0)\r\n    },\r\n    _getCell: function(cellPosition) {\r\n        if (this._focusedView && cellPosition) {\r\n            var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n            var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\r\n            var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\r\n            var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\r\n            var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\r\n            return this._focusedView.getCell({\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            })\r\n        }\r\n    },\r\n    _getRowIndex: function($row) {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowIndex = rowsView.getRowIndex($row);\r\n        if (rowIndex >= 0) {\r\n            rowIndex += this._dataController.getRowIndexOffset()\r\n        }\r\n        return rowIndex\r\n    },\r\n    _hasSkipRow: function($row) {\r\n        var row = $row && $row.get(0);\r\n        return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)))\r\n    },\r\n    _allowEditingOnEnterKey: function() {\r\n        return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\")\r\n    },\r\n    _isLegacyNavigation: function() {\r\n        return this.option(\"useLegacyKeyboardNavigation\")\r\n    },\r\n    _getDirectionCodeByKey: function(key) {\r\n        var directionCode;\r\n        switch (key) {\r\n            case \"upArrow\":\r\n                directionCode = \"prevRow\";\r\n                break;\r\n            case \"downArrow\":\r\n                directionCode = \"nextRow\";\r\n                break;\r\n            case \"leftArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\r\n                break;\r\n            case \"rightArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\"\r\n        }\r\n        return directionCode\r\n    },\r\n    _isVirtualScrolling: function() {\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n    },\r\n    _isVirtualRowRender: function() {\r\n        return this._isVirtualScrolling() || \"virtual\" === this.option(\"scrolling.rowRenderingMode\")\r\n    },\r\n    _isVirtualColumnRender: function() {\r\n        return \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n    },\r\n    _scrollBy: function(left, top, rowIndex, $event) {\r\n        var that = this;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (that._focusedCellPosition) {\r\n            var scrollHandler = function scrollHandler() {\r\n                scrollable.off(\"scroll\", scrollHandler);\r\n                setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event))\r\n            };\r\n            scrollable.on(\"scroll\", scrollHandler)\r\n        }\r\n        return scrollable.scrollBy({\r\n            left: left,\r\n            top: top\r\n        })\r\n    },\r\n    _isInsideEditForm: function(element) {\r\n        return (0, _renderer.default)(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0\r\n    },\r\n    _isMasterDetailCell: function(element) {\r\n        var $masterDetailCell = (0, _renderer.default)(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\r\n        var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\r\n        return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element())\r\n    },\r\n    _processNextCellInMasterDetail: function($nextCell) {\r\n        if (!this._isInsideEditForm($nextCell) && $nextCell) {\r\n            this._applyTabIndexToElement($nextCell)\r\n        }\r\n    },\r\n    _handleTabKeyOnMasterDetailCell: function(target, direction) {\r\n        if (this._isMasterDetailCell(target)) {\r\n            this._updateFocusedCellPosition((0, _renderer.default)(target), direction);\r\n            var $nextCell = this._getNextCell(direction, \"row\");\r\n            this._processNextCellInMasterDetail($nextCell);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _getElementType: function(target) {\r\n        return (0, _renderer.default)(target).is(\"tr\") ? \"row\" : \"cell\"\r\n    },\r\n    _isFastEditingStarted: function() {\r\n        return this._isFastEditingAllowed() && this._fastEditingStarted\r\n    },\r\n    _getVisibleColumnCount: function() {\r\n        return this._columnsController.getVisibleColumns(null, true).length\r\n    },\r\n    _isCellInRow: function(cellPosition, includeCommandCells) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1\r\n    },\r\n    _getCellElementFromTarget: function(target) {\r\n        var elementType = this._getElementType(target);\r\n        var $targetElement = (0, _renderer.default)(target);\r\n        var $cell;\r\n        if (\"cell\" === elementType) {\r\n            $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"))\r\n        } else {\r\n            $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first()\r\n        }\r\n        return $cell\r\n    },\r\n    _getRowsViewElement: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return rowsView && rowsView.element()\r\n    },\r\n    isKeyboardEnabled: function() {\r\n        return this.option(\"keyboardNavigation.enabled\")\r\n    },\r\n    _processCanceledEditCellPosition: function(rowIndex, columnIndex) {\r\n        if (this._canceledCellPosition) {\r\n            var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\r\n            this._canceledCellPosition = null;\r\n            return isCanceled\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            useLegacyKeyboardNavigation: false,\r\n            keyboardNavigation: {\r\n                enabled: true,\r\n                enterKeyAction: \"startEdit\",\r\n                enterKeyDirection: \"none\",\r\n                editOnKeyPress: false\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        keyboardNavigation: KeyboardNavigationController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _rowClick: function(e) {\r\n                    var editRowIndex = this.getController(\"editing\").getEditRowIndex();\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (editRowIndex === e.rowIndex) {\r\n                        keyboardController.setCellFocusType()\r\n                    }\r\n                    var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\r\n                    if (needTriggerPointerEventHandler) {\r\n                        this._triggerPointerDownEventHandler(e)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _triggerPointerDownEventHandler: function(e) {\r\n                    var originalEvent = e.event.originalEvent;\r\n                    if (originalEvent) {\r\n                        var keyboardController = this.getController(\"keyboardNavigation\");\r\n                        var $cell = (0, _renderer.default)(originalEvent.target);\r\n                        var columnIndex = this.getCellIndex($cell);\r\n                        var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\r\n                        var row = this.getController(\"data\").items()[e.rowIndex];\r\n                        if (keyboardController._isAllowEditing(row, column)) {\r\n                            var eventArgs = (0, _index.createEvent)(originalEvent, {\r\n                                currentTarget: originalEvent.target\r\n                            });\r\n                            keyboardController._pointerEventHandler(eventArgs)\r\n                        }\r\n                    }\r\n                },\r\n                renderFocusState: function(preventScroll) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $rowsViewElement = this.element();\r\n                    if ($rowsViewElement && !(0, _selectors.focused)($rowsViewElement)) {\r\n                        $rowsViewElement.attr(\"tabindex\", null)\r\n                    }\r\n                    var rowIndex = keyboardController.getVisibleRowIndex();\r\n                    if (!(0, _type.isDefined)(rowIndex) || rowIndex < 0) {\r\n                        rowIndex = 0\r\n                    }\r\n                    var cellElements = this.getCellElements(rowIndex);\r\n                    if (keyboardController.isKeyboardEnabled() && cellElements.length) {\r\n                        this.updateFocusElementTabIndex(cellElements, preventScroll)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function(cellElements) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $row = cellElements.eq(0).parent();\r\n                    if (isGroupRow($row)) {\r\n                        keyboardController._applyTabIndexToElement($row)\r\n                    } else {\r\n                        var columnIndex = keyboardController.getColumnIndex();\r\n                        if (!(0, _type.isDefined)(columnIndex) || columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        this._updateFocusedCellTabIndex(cellElements, columnIndex)\r\n                    }\r\n                },\r\n                _updateFocusedCellTabIndex: function(cellElements, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var cellElementsLength = cellElements ? cellElements.length : -1;\r\n                    var updateCellTabIndex = function($cell) {\r\n                        var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\r\n                        var isValidCell = keyboardController._isCellValid($cell);\r\n                        if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\r\n                            keyboardController._applyTabIndexToElement($cell);\r\n                            keyboardController.setCellFocusType();\r\n                            return true\r\n                        }\r\n                    };\r\n                    var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\r\n                    if ($cell.length) {\r\n                        updateCellTabIndex($cell)\r\n                    } else {\r\n                        if (cellElementsLength <= columnIndex) {\r\n                            columnIndex = cellElementsLength - 1\r\n                        }\r\n                        for (var i = columnIndex; i < cellElementsLength; ++i) {\r\n                            if (updateCellTabIndex((0, _renderer.default)(cellElements[i]))) {\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                renderDelayedTemplates: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _renderFocusByChange: function(change) {\r\n                    if (!change || !change.repaintChangesOnly) {\r\n                        var preventScroll = shouldPreventScroll(this);\r\n                        this.renderFocusState(preventScroll)\r\n                    }\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _editCellPrepared: function($cell) {\r\n                    var editorInstance = this._getEditorInstance($cell);\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\r\n                    if (editorInstance && isEditingNavigationMode) {\r\n                        this._handleEditingNavigationMode(editorInstance)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditingNavigationMode: function(editorInstance) {\r\n                    [\"downArrow\", \"upArrow\"].forEach(function(keyName) {\r\n                        var originalKeyHandler = editorInstance._supportedKeys()[keyName];\r\n                        editorInstance.registerKeyHandler(keyName, function(e) {\r\n                            var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\r\n                            if (isDropDownOpened) {\r\n                                return originalKeyHandler && originalKeyHandler.call(editorInstance, e)\r\n                            }\r\n                        })\r\n                    });\r\n                    editorInstance.registerKeyHandler(\"leftArrow\", _common.noop);\r\n                    editorInstance.registerKeyHandler(\"rightArrow\", _common.noop);\r\n                    var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\r\n                    if (isDateBoxWithMask) {\r\n                        editorInstance.registerKeyHandler(\"enter\", _common.noop)\r\n                    }\r\n                },\r\n                _getEditorInstance: function($cell) {\r\n                    var $editor = $cell.find(\".dx-texteditor\").eq(0);\r\n                    return _uiGrid_core2.default.getWidgetInstance($editor)\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editing: {\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\r\n                        return false\r\n                    }\r\n                    var isCellEditing = this.callBase(rowIndex, columnIndex);\r\n                    if (isCellEditing) {\r\n                        keyboardController.setupFocusedView()\r\n                    }\r\n                    return isCellEditing\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\r\n                    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n                    if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\r\n                        keyboardController._resetFocusedCell()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                addRow: function(parentKey) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    keyboardController.setupFocusedView();\r\n                    keyboardController.setCellFocusType();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getFocusedCellInRow: function(rowIndex) {\r\n                    var keyboardNavigationController = this.getController(\"keyboardNavigation\");\r\n                    var $cell = this.callBase(rowIndex);\r\n                    if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\r\n                        var $focusedCell = keyboardNavigationController._getFocusedCell();\r\n                        if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\r\n                            $cell = $focusedCell\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _processCanceledEditingCell: function() {\r\n                    var _this8 = this;\r\n                    this.closeEditCell().done(function() {\r\n                        var keyboardNavigation = _this8.getController(\"keyboardNavigation\");\r\n                        keyboardNavigation._updateFocus()\r\n                    })\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._keyboardNavigationController = this.getController(\"keyboardNavigation\")\r\n                },\r\n                closeEditCell: function() {\r\n                    var keyboardNavigation = this._keyboardNavigationController;\r\n                    keyboardNavigation._fastEditingStarted = false;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    keyboardNavigation._updateFocus();\r\n                    return result\r\n                },\r\n                _delayedInputFocus: function() {\r\n                    this._keyboardNavigationController._isNeedScroll = true;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditingStart: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    var cancel = this.callBase.apply(this, arguments);\r\n                    if (cancel && !keyboardNavigation._isNeedFocus) {\r\n                        var $cell = keyboardNavigation._getFocusedCell();\r\n                        keyboardNavigation._focus($cell, true)\r\n                    }\r\n                    return cancel\r\n                }\r\n            },\r\n            data: {\r\n                _correctRowIndices: function(getRowIndexCorrection) {\r\n                    var that = this;\r\n                    var keyboardNavigationController = that.getController(\"keyboardNavigation\");\r\n                    var editorFactory = that.getController(\"editorFactory\");\r\n                    var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\r\n                        var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\r\n                        if (focusedRowIndexCorrection) {\r\n                            focusedCellPosition.rowIndex += focusedRowIndexCorrection;\r\n                            editorFactory.refocus()\r\n                        }\r\n                    }\r\n                },\r\n                getMaxRowIndex: function() {\r\n                    var result = this.items().length - 1;\r\n                    var virtualItemsCount = this.virtualItemsCount();\r\n                    if (virtualItemsCount) {\r\n                        result += virtualItemsCount.begin + virtualItemsCount.end\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            adaptiveColumns: {\r\n                _showHiddenCellsInView: function(_ref) {\r\n                    var viewName = _ref.viewName,\r\n                        $cells = _ref.$cells,\r\n                        isCommandColumn = _ref.isCommandColumn;\r\n                    this.callBase.apply(this, arguments);\r\n                    viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each(function(_, cellElement) {\r\n                        var $cell = (0, _renderer.default)(cellElement);\r\n                        isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0)\r\n                    })\r\n                },\r\n                _hideVisibleCellInView: function(_ref2) {\r\n                    var viewName = _ref2.viewName,\r\n                        $cell = _ref2.$cell,\r\n                        isCommandColumn = _ref2.isCommandColumn;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\r\n                        $cell.removeAttr(\"tabindex\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.master_detail.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            masterDetail: {\r\n                enabled: false,\r\n                autoExpandAll: false,\r\n                template: null\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: {\r\n                _getExpandColumnsCore: function() {\r\n                    var expandColumns = this.callBase();\r\n                    if (this.option(\"masterDetail.enabled\")) {\r\n                        expandColumns.push({\r\n                            type: \"detailExpand\",\r\n                            cellTemplate: _uiGrid_core.default.getExpandCellTemplate()\r\n                        })\r\n                    }\r\n                    return expandColumns\r\n                }\r\n            },\r\n            data: function() {\r\n                var initMasterDetail = function(that) {\r\n                    that._expandedItems = [];\r\n                    that._isExpandAll = that.option(\"masterDetail.autoExpandAll\")\r\n                };\r\n                return {\r\n                    init: function() {\r\n                        var that = this;\r\n                        initMasterDetail(that);\r\n                        that.callBase()\r\n                    },\r\n                    expandAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = true;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    collapseAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = false;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    isRowExpanded: function(key) {\r\n                        var that = this;\r\n                        var expandIndex = _uiGrid_core.default.getIndexByKey(key, that._expandedItems);\r\n                        if (Array.isArray(key)) {\r\n                            return that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            return !!(that._isExpandAll ^ (expandIndex >= 0 && that._expandedItems[expandIndex].visible))\r\n                        }\r\n                    },\r\n                    _getRowIndicesForExpand: function(key) {\r\n                        var rowIndex = this.getRowIndexByKey(key);\r\n                        return [rowIndex, rowIndex + 1]\r\n                    },\r\n                    _changeRowExpandCore: function(key) {\r\n                        var that = this;\r\n                        var result;\r\n                        if (Array.isArray(key)) {\r\n                            result = that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            var expandIndex = _uiGrid_core.default.getIndexByKey(key, that._expandedItems);\r\n                            if (expandIndex >= 0) {\r\n                                var visible = that._expandedItems[expandIndex].visible;\r\n                                that._expandedItems[expandIndex].visible = !visible\r\n                            } else {\r\n                                that._expandedItems.push({\r\n                                    key: key,\r\n                                    visible: true\r\n                                })\r\n                            }\r\n                            that.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: that._getRowIndicesForExpand(key)\r\n                            });\r\n                            result = (new _deferred.Deferred).resolve()\r\n                        }\r\n                        return result\r\n                    },\r\n                    _processDataItem: function(data, options) {\r\n                        var that = this;\r\n                        var dataItem = that.callBase.apply(that, arguments);\r\n                        dataItem.isExpanded = that.isRowExpanded(dataItem.key);\r\n                        if (void 0 === options.detailColumnIndex) {\r\n                            options.detailColumnIndex = -1;\r\n                            (0, _iterator.each)(options.visibleColumns, function(index, column) {\r\n                                if (\"expand\" === column.command && !(0, _type.isDefined)(column.groupIndex)) {\r\n                                    options.detailColumnIndex = index;\r\n                                    return false\r\n                                }\r\n                            })\r\n                        }\r\n                        if (options.detailColumnIndex >= 0) {\r\n                            dataItem.values[options.detailColumnIndex] = dataItem.isExpanded\r\n                        }\r\n                        return dataItem\r\n                    },\r\n                    _processItems: function(items, change) {\r\n                        var that = this;\r\n                        var changeType = change.changeType;\r\n                        var result = [];\r\n                        items = that.callBase.apply(that, arguments);\r\n                        if (\"loadingAll\" === changeType) {\r\n                            return items\r\n                        }\r\n                        if (\"refresh\" === changeType) {\r\n                            that._expandedItems = (0, _common.grep)(that._expandedItems, function(item) {\r\n                                return item.visible\r\n                            })\r\n                        }(0, _iterator.each)(items, function(index, item) {\r\n                            result.push(item);\r\n                            var expandIndex = _uiGrid_core.default.getIndexByKey(item.key, that._expandedItems);\r\n                            if (\"data\" === item.rowType && (item.isExpanded || expandIndex >= 0) && !item.isNewRow) {\r\n                                result.push({\r\n                                    visible: item.isExpanded,\r\n                                    rowType: \"detail\",\r\n                                    key: item.key,\r\n                                    data: item.data,\r\n                                    values: []\r\n                                })\r\n                            }\r\n                        });\r\n                        return result\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        var that = this;\r\n                        var isEnabledChanged;\r\n                        var isAutoExpandAllChanged;\r\n                        if (\"masterDetail\" === args.name) {\r\n                            args.name = \"dataSource\";\r\n                            switch (args.fullName) {\r\n                                case \"masterDetail\":\r\n                                    var value = args.value || {};\r\n                                    var previousValue = args.previousValue || {};\r\n                                    isEnabledChanged = value.enabled !== previousValue.enabled;\r\n                                    isAutoExpandAllChanged = value.autoExpandAll !== previousValue.autoExpandAll;\r\n                                    break;\r\n                                case \"masterDetail.enabled\":\r\n                                    isEnabledChanged = true;\r\n                                    break;\r\n                                case \"masterDetail.autoExpandAll\":\r\n                                    isAutoExpandAllChanged = true\r\n                            }\r\n                            if (isEnabledChanged || isAutoExpandAllChanged) {\r\n                                initMasterDetail(that)\r\n                            }\r\n                        }\r\n                        that.callBase(args)\r\n                    }\r\n                }\r\n            }(),\r\n            resizing: {\r\n                fireContentReadyAction: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._updateParentDataGrids(this.component.$element())\r\n                },\r\n                _updateParentDataGrids: function($element) {\r\n                    var _this = this;\r\n                    var $masterDetailRow = $element.closest(\".\" + MASTER_DETAIL_ROW_CLASS);\r\n                    if ($masterDetailRow.length) {\r\n                        (0, _deferred.when)(this._updateMasterDataGrid($masterDetailRow, $element)).done(function() {\r\n                            _this._updateParentDataGrids($masterDetailRow.parent())\r\n                        })\r\n                    }\r\n                },\r\n                _updateMasterDataGrid: function($masterDetailRow, $detailElement) {\r\n                    var masterRowOptions = (0, _renderer.default)($masterDetailRow).data(\"options\");\r\n                    var masterDataGrid = (0, _renderer.default)($masterDetailRow).closest(\".\" + this.getWidgetContainerClass()).parent().data(\"dxDataGrid\");\r\n                    if (masterRowOptions && masterDataGrid) {\r\n                        if (masterDataGrid.getView(\"rowsView\").isFixedColumns()) {\r\n                            return this._updateFixedMasterDetailGrids(masterDataGrid, masterRowOptions.rowIndex, $detailElement)\r\n                        } else {\r\n                            if (true === masterDataGrid.option(\"scrolling.useNative\")) {\r\n                                return masterDataGrid.updateDimensions()\r\n                            }\r\n                            var scrollable = masterDataGrid.getScrollable();\r\n                            return null === scrollable || void 0 === scrollable ? void 0 : scrollable.update()\r\n                        }\r\n                    }\r\n                },\r\n                _updateFixedMasterDetailGrids: function(masterDataGrid, masterRowIndex, $detailElement) {\r\n                    var _this2 = this;\r\n                    var $rows = (0, _renderer.default)(masterDataGrid.getRowElement(masterRowIndex));\r\n                    var $tables = (0, _renderer.default)(masterDataGrid.getView(\"rowsView\").getTableElements());\r\n                    var rowsNotEqual = 2 === (null === $rows || void 0 === $rows ? void 0 : $rows.length) && $rows.eq(0).height() !== $rows.eq(1).height();\r\n                    var tablesNotEqual = 2 === (null === $tables || void 0 === $tables ? void 0 : $tables.length) && $tables.eq(0).height() !== $tables.eq(1).height();\r\n                    if (rowsNotEqual || tablesNotEqual) {\r\n                        var detailElementWidth = $detailElement.width();\r\n                        return masterDataGrid.updateDimensions().done(function() {\r\n                            var isDetailHorizontalScrollCanBeShown = _this2.option(\"columnAutoWidth\") && true === masterDataGrid.option(\"scrolling.useNative\");\r\n                            var isDetailGridWidthChanged = isDetailHorizontalScrollCanBeShown && detailElementWidth !== $detailElement.width();\r\n                            if (isDetailHorizontalScrollCanBeShown && isDetailGridWidthChanged) {\r\n                                _this2.updateDimensions()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"masterDetail.template\")) {\r\n                        var $rowsTable = this._rowsView.getTableElement();\r\n                        if ($rowsTable) {\r\n                            $rowsTable.find(\".dx-master-detail-cell\").css(\"maxWidth\", isBestFit ? 0 : \"\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: function() {\r\n                return {\r\n                    _getCellTemplate: function(options) {\r\n                        var that = this;\r\n                        var column = options.column;\r\n                        var editingController = that.getController(\"editing\");\r\n                        var isEditRow = editingController && editingController.isEditRow(options.rowIndex);\r\n                        var template;\r\n                        if (\"detail\" === column.command && !isEditRow) {\r\n                            template = that.option(\"masterDetail.template\") || {\r\n                                allowRenderToDetachedContainer: false,\r\n                                render: that._getDefaultTemplate(column)\r\n                            }\r\n                        } else {\r\n                            template = that.callBase.apply(that, arguments)\r\n                        }\r\n                        return template\r\n                    },\r\n                    _isDetailRow: function(row) {\r\n                        return row && row.rowType && 0 === row.rowType.indexOf(\"detail\")\r\n                    },\r\n                    _createRow: function(row) {\r\n                        var $row = this.callBase(row);\r\n                        if (row && this._isDetailRow(row)) {\r\n                            this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                            $row.addClass(MASTER_DETAIL_ROW_CLASS);\r\n                            if ((0, _type.isDefined)(row.visible)) {\r\n                                $row.toggle(row.visible)\r\n                            }\r\n                        }\r\n                        return $row\r\n                    },\r\n                    _renderCells: function($row, options) {\r\n                        var row = options.row;\r\n                        var $detailCell;\r\n                        var visibleColumns = this._columnsController.getVisibleColumns();\r\n                        if (row.rowType && this._isDetailRow(row)) {\r\n                            if (this._needRenderCell(0, options.columnIndices)) {\r\n                                $detailCell = this._renderCell($row, {\r\n                                    value: null,\r\n                                    row: row,\r\n                                    rowIndex: row.rowIndex,\r\n                                    column: {\r\n                                        command: \"detail\"\r\n                                    },\r\n                                    columnIndex: 0\r\n                                });\r\n                                $detailCell.addClass(CELL_FOCUS_DISABLED_CLASS).addClass(MASTER_DETAIL_CELL_CLASS).attr(\"colSpan\", visibleColumns.length)\r\n                            }\r\n                        } else {\r\n                            this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                }\r\n            }()\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.modules.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _window = require(\"../../core/utils/window\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar WIDGET_WITH_LEGACY_CONTAINER_NAME = \"dxDataGrid\";\r\nvar ModuleItem = _class.default.inherit({\r\n    _endUpdateCore: function() {},\r\n    ctor: function(component) {\r\n        var that = this;\r\n        that._updateLockCount = 0;\r\n        that.component = component;\r\n        that._actions = {};\r\n        that._actionConfigs = {};\r\n        (0, _iterator.each)(this.callbackNames() || [], function(index, name) {\r\n            var flags = that.callbackFlags(name) || {};\r\n            flags.unique = true, flags.syncStrategy = true;\r\n            that[this] = (0, _callbacks.default)(flags)\r\n        })\r\n    },\r\n    init: function() {},\r\n    callbackNames: function() {},\r\n    callbackFlags: function() {},\r\n    publicMethods: function() {},\r\n    beginUpdate: function() {\r\n        this._updateLockCount++\r\n    },\r\n    endUpdate: function() {\r\n        if (this._updateLockCount > 0) {\r\n            this._updateLockCount--;\r\n            if (!this._updateLockCount) {\r\n                this._endUpdateCore()\r\n            }\r\n        }\r\n    },\r\n    option: function(name) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (1 === arguments.length && optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = component.option(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return component.option.apply(component, arguments)\r\n    },\r\n    _silentOption: function(name, value) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (optionCache) {\r\n            optionCache[name] = value\r\n        }\r\n        return component._setOptionWithoutOptionChange(name, value)\r\n    },\r\n    localize: function(name) {\r\n        var optionCache = this.component._optionCache;\r\n        if (optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = _message.default.format(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return _message.default.format(name)\r\n    },\r\n    on: function() {\r\n        return this.component.on.apply(this.component, arguments)\r\n    },\r\n    off: function() {\r\n        return this.component.off.apply(this.component, arguments)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (args.name in this._actions) {\r\n            this.createAction(args.name, this._actionConfigs[args.name]);\r\n            args.handled = true\r\n        }\r\n    },\r\n    getAction: function(actionName) {\r\n        return this._actions[actionName]\r\n    },\r\n    setAria: function(name, value, $target) {\r\n        var target = $target.get(0);\r\n        var prefix = \"role\" !== name && \"id\" !== name ? \"aria-\" : \"\";\r\n        if (target.setAttribute) {\r\n            target.setAttribute(prefix + name, value)\r\n        } else {\r\n            $target.attr(prefix + name, value)\r\n        }\r\n    },\r\n    _createComponent: function() {\r\n        return this.component._createComponent.apply(this.component, arguments)\r\n    },\r\n    getController: function(name) {\r\n        return this.component._controllers[name]\r\n    },\r\n    createAction: function(actionName, config) {\r\n        if ((0, _type.isFunction)(actionName)) {\r\n            var action = this.component._createAction(actionName.bind(this), config);\r\n            return function(e) {\r\n                action({\r\n                    event: e\r\n                })\r\n            }\r\n        } else {\r\n            this._actions[actionName] = this.component._createActionByOption(actionName, config);\r\n            this._actionConfigs[actionName] = config\r\n        }\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    dispose: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(that.callbackNames() || [], function() {\r\n            that[this].empty()\r\n        })\r\n    },\r\n    addWidgetPrefix: function(className) {\r\n        var componentName = this.component.NAME;\r\n        return \"dx-\" + componentName.slice(2).toLowerCase() + (className ? \"-\" + className : \"\")\r\n    },\r\n    getWidgetContainerClass: function() {\r\n        var containerName = this.component.NAME === WIDGET_WITH_LEGACY_CONTAINER_NAME ? null : \"container\";\r\n        return this.addWidgetPrefix(containerName)\r\n    }\r\n});\r\nvar Controller = ModuleItem;\r\nvar ViewController = Controller.inherit({\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    getViews: function() {\r\n        return this.component._views\r\n    }\r\n});\r\nvar View = ModuleItem.inherit({\r\n    _isReady: function() {\r\n        return this.component.isReady()\r\n    },\r\n    _endUpdateCore: function() {\r\n        this.callBase();\r\n        if (!this._isReady() && this._requireReady) {\r\n            this._requireRender = false;\r\n            this.component._requireResize = false\r\n        }\r\n        if (this._requireRender) {\r\n            this._requireRender = false;\r\n            this.render(this._$parent)\r\n        }\r\n    },\r\n    _invalidate: function(requireResize, requireReady) {\r\n        this._requireRender = true;\r\n        this.component._requireResize = (0, _window.hasWindow)() && (this.component._requireResize || requireResize);\r\n        this._requireReady = this._requireReady || requireReady\r\n    },\r\n    _renderCore: function() {},\r\n    _resizeCore: function() {},\r\n    _afterRender: function() {},\r\n    _parentElement: function() {\r\n        return this._$parent\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.renderCompleted = (0, _callbacks.default)();\r\n        this.resizeCompleted = (0, _callbacks.default)()\r\n    },\r\n    element: function() {\r\n        return this._$element\r\n    },\r\n    getElementHeight: function() {\r\n        var $element = this.element();\r\n        if (!$element) {\r\n            return 0\r\n        }\r\n        var marginTop = parseFloat($element.css(\"marginTop\")) || 0;\r\n        var marginBottom = parseFloat($element.css(\"marginBottom\")) || 0;\r\n        var offsetHeight = $element.get(0).offsetHeight;\r\n        return offsetHeight + marginTop + marginBottom\r\n    },\r\n    isVisible: function() {\r\n        return true\r\n    },\r\n    getTemplate: function(name) {\r\n        return this.component._getTemplate(name)\r\n    },\r\n    render: function($parent, options) {\r\n        var $element = this._$element;\r\n        var isVisible = this.isVisible();\r\n        if (!$element && !$parent) {\r\n            return\r\n        }\r\n        this._requireReady = false;\r\n        if (!$element) {\r\n            $element = this._$element = (0, _renderer.default)(\"<div>\").appendTo($parent);\r\n            this._$parent = $parent\r\n        }\r\n        $element.toggleClass(\"dx-hidden\", !isVisible);\r\n        if (isVisible) {\r\n            this.component._optionCache = {};\r\n            this._renderCore(options);\r\n            this.component._optionCache = void 0;\r\n            this._afterRender($parent);\r\n            this.renderCompleted.fire(options)\r\n        }\r\n    },\r\n    resize: function() {\r\n        this.isResizing = true;\r\n        this._resizeCore();\r\n        this.resizeCompleted.fire();\r\n        this.isResizing = false\r\n    },\r\n    focus: function() {\r\n        _events_engine.default.trigger(this.element(), \"focus\")\r\n    }\r\n});\r\nvar MODULES_ORDER_MAX_INDEX = 1e6;\r\nvar processModules = function(that, componentClass) {\r\n    var modules = componentClass.modules;\r\n    var modulesOrder = componentClass.modulesOrder;\r\n    var controllerTypes = componentClass.controllerTypes || {};\r\n    var viewTypes = componentClass.viewTypes || {};\r\n    if (!componentClass.controllerTypes) {\r\n        if (modulesOrder) {\r\n            modules.sort(function(module1, module2) {\r\n                var orderIndex1 = (0, _array.inArray)(module1.name, modulesOrder);\r\n                var orderIndex2 = (0, _array.inArray)(module2.name, modulesOrder);\r\n                if (orderIndex1 < 0) {\r\n                    orderIndex1 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                if (orderIndex2 < 0) {\r\n                    orderIndex2 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                return orderIndex1 - orderIndex2\r\n            })\r\n        }(0, _iterator.each)(modules, function() {\r\n            var controllers = this.controllers;\r\n            var moduleName = this.name;\r\n            var views = this.views;\r\n            controllers && (0, _iterator.each)(controllers, function(name, type) {\r\n                if (controllerTypes[name]) {\r\n                    throw _ui.default.Error(\"E1001\", moduleName, name)\r\n                } else {\r\n                    if (!(type && type.subclassOf && type.subclassOf(Controller))) {\r\n                        type.subclassOf(Controller);\r\n                        throw _ui.default.Error(\"E1002\", moduleName, name)\r\n                    }\r\n                }\r\n                controllerTypes[name] = type\r\n            });\r\n            views && (0, _iterator.each)(views, function(name, type) {\r\n                if (viewTypes[name]) {\r\n                    throw _ui.default.Error(\"E1003\", moduleName, name)\r\n                } else {\r\n                    if (!(type && type.subclassOf && type.subclassOf(View))) {\r\n                        throw _ui.default.Error(\"E1004\", moduleName, name)\r\n                    }\r\n                }\r\n                viewTypes[name] = type\r\n            })\r\n        });\r\n        (0, _iterator.each)(modules, function() {\r\n            var extenders = this.extenders;\r\n            if (extenders) {\r\n                extenders.controllers && (0, _iterator.each)(extenders.controllers, function(name, extender) {\r\n                    if (controllerTypes[name]) {\r\n                        controllerTypes[name] = controllerTypes[name].inherit(extender)\r\n                    }\r\n                });\r\n                extenders.views && (0, _iterator.each)(extenders.views, function(name, extender) {\r\n                    if (viewTypes[name]) {\r\n                        viewTypes[name] = viewTypes[name].inherit(extender)\r\n                    }\r\n                })\r\n            }\r\n        });\r\n        componentClass.controllerTypes = controllerTypes;\r\n        componentClass.viewTypes = viewTypes\r\n    }\r\n    var registerPublicMethods = function(that, name, moduleItem) {\r\n        var publicMethods = moduleItem.publicMethods();\r\n        if (publicMethods) {\r\n            (0, _iterator.each)(publicMethods, function(index, methodName) {\r\n                if (moduleItem[methodName]) {\r\n                    if (!that[methodName]) {\r\n                        that[methodName] = function() {\r\n                            return moduleItem[methodName].apply(moduleItem, arguments)\r\n                        }\r\n                    } else {\r\n                        throw _ui.default.Error(\"E1005\", methodName)\r\n                    }\r\n                } else {\r\n                    throw _ui.default.Error(\"E1006\", name, methodName)\r\n                }\r\n            })\r\n        }\r\n    };\r\n    var createModuleItems = function(moduleTypes) {\r\n        var moduleItems = {};\r\n        (0, _iterator.each)(moduleTypes, function(name, moduleType) {\r\n            var moduleItem = new moduleType(that);\r\n            moduleItem.name = name;\r\n            registerPublicMethods(that, name, moduleItem);\r\n            moduleItems[name] = moduleItem\r\n        });\r\n        return moduleItems\r\n    };\r\n    that._controllers = createModuleItems(controllerTypes);\r\n    that._views = createModuleItems(viewTypes)\r\n};\r\nvar callModuleItemsMethod = function(that, methodName, args) {\r\n    args = args || [];\r\n    if (that._controllers) {\r\n        (0, _iterator.each)(that._controllers, function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        })\r\n    }\r\n    if (that._views) {\r\n        (0, _iterator.each)(that._views, function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        })\r\n    }\r\n};\r\nvar _default = {\r\n    modules: [],\r\n    View: View,\r\n    ViewController: ViewController,\r\n    Controller: Controller,\r\n    registerModule: function(name, module) {\r\n        var modules = this.modules;\r\n        for (var i = 0; i < modules.length; i++) {\r\n            if (modules[i].name === name) {\r\n                return\r\n            }\r\n        }\r\n        module.name = name;\r\n        modules.push(module);\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    registerModulesOrder: function(moduleNames) {\r\n        this.modulesOrder = moduleNames\r\n    },\r\n    unregisterModule: function(name) {\r\n        this.modules = (0, _common.grep)(this.modules, function(module) {\r\n            return module.name !== name\r\n        });\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    processModules: processModules,\r\n    callModuleItemsMethod: callModuleItemsMethod\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _pager = _interopRequireDefault(require(\"../pager\"));\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _window = require(\"../../core/utils/window\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar PAGER_CLASS = \"pager\";\r\nvar MAX_PAGES_COUNT = 10;\r\nvar getPageIndex = function(dataController) {\r\n    return 1 + (parseInt(dataController.pageIndex()) || 0)\r\n};\r\nvar PagerView = _uiGrid_core.default.View.inherit({\r\n    init: function() {\r\n        var _this = this;\r\n        var dataController = this.getController(\"data\");\r\n        dataController.changed.add(function(e) {\r\n            if (e && e.repaintChangesOnly) {\r\n                var pager = _this._getPager();\r\n                if (pager) {\r\n                    pager.option({\r\n                        pageIndex: getPageIndex(dataController),\r\n                        pageSize: dataController.pageSize(),\r\n                        pageCount: dataController.pageCount(),\r\n                        totalCount: dataController.totalCount(),\r\n                        hasKnownLastPage: dataController.hasKnownLastPage()\r\n                    })\r\n                } else {\r\n                    _this.render()\r\n                }\r\n            } else {\r\n                if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType) {\r\n                    _this.render()\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getPager: function() {\r\n        var $element = this.element();\r\n        return $element && $element.data(\"dxPager\")\r\n    },\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(that.addWidgetPrefix(PAGER_CLASS));\r\n        var pagerOptions = that.option(\"pager\") || {};\r\n        var dataController = that.getController(\"data\");\r\n        var keyboardController = that.getController(\"keyboardNavigation\");\r\n        var options = {\r\n            maxPagesCount: MAX_PAGES_COUNT,\r\n            pageIndex: getPageIndex(dataController),\r\n            pageCount: dataController.pageCount(),\r\n            pageSize: dataController.pageSize(),\r\n            showPageSizes: pagerOptions.showPageSizeSelector,\r\n            showInfo: pagerOptions.showInfo,\r\n            displayMode: pagerOptions.displayMode,\r\n            pagesNavigatorVisible: pagerOptions.visible,\r\n            showNavigationButtons: pagerOptions.showNavigationButtons,\r\n            pageSizes: that.getPageSizes(),\r\n            totalCount: dataController.totalCount(),\r\n            hasKnownLastPage: dataController.hasKnownLastPage(),\r\n            pageIndexChanged: function(pageIndex) {\r\n                if (dataController.pageIndex() !== pageIndex - 1) {\r\n                    setTimeout(function() {\r\n                        dataController.pageIndex(pageIndex - 1)\r\n                    })\r\n                }\r\n            },\r\n            pageSizeChanged: function(pageSize) {\r\n                setTimeout(function() {\r\n                    dataController.pageSize(pageSize)\r\n                })\r\n            },\r\n            onKeyDown: function(e) {\r\n                return keyboardController && keyboardController.executeAction(\"onKeyDown\", e)\r\n            },\r\n            useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\r\n            useKeyboard: this.option(\"keyboardNavigation.enabled\")\r\n        };\r\n        if ((0, _type.isDefined)(pagerOptions.infoText)) {\r\n            options.infoText = pagerOptions.infoText\r\n        }\r\n        that._createComponent($element, _pager.default, options)\r\n    },\r\n    getPageSizes: function() {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        var pagerOptions = that.option(\"pager\");\r\n        var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\r\n        var pageSize = dataController.pageSize();\r\n        if (!(0, _type.isDefined)(that._pageSizes) || (0, _array.inArray)(pageSize, that._pageSizes) === -1) {\r\n            that._pageSizes = [];\r\n            if (pagerOptions) {\r\n                if (Array.isArray(allowedPageSizes)) {\r\n                    that._pageSizes = allowedPageSizes\r\n                } else {\r\n                    if (allowedPageSizes && pageSize > 1) {\r\n                        that._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return that._pageSizes\r\n    },\r\n    isVisible: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var pagerVisible = pagerOptions && pagerOptions.visible;\r\n        var scrolling = this.option(\"scrolling\");\r\n        if (\"auto\" === pagerVisible) {\r\n            if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\r\n                pagerVisible = false\r\n            } else {\r\n                pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage()\r\n            }\r\n        }\r\n        return pagerVisible\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        var name = args.name;\r\n        var isPager = \"pager\" === name;\r\n        var isPaging = \"paging\" === name;\r\n        var isDataSource = \"dataSource\" === name;\r\n        var isScrolling = \"scrolling\" === name;\r\n        var dataController = this.getController(\"data\");\r\n        if (isPager || isPaging || isScrolling || isDataSource) {\r\n            args.handled = true;\r\n            if (dataController.skipProcessingPagingChange(args.fullName)) {\r\n                return\r\n            }\r\n            if (isPager || isPaging) {\r\n                this._pageSizes = null\r\n            }\r\n            if (!isDataSource) {\r\n                this._invalidate();\r\n                if ((0, _window.hasWindow)() && isPager && this.component) {\r\n                    this.component.resize()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            pager: {\r\n                visible: \"auto\",\r\n                showPageSizeSelector: false,\r\n                allowedPageSizes: \"auto\"\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        pagerView: PagerView\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _sortable = _interopRequireDefault(require(\"../sortable\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar HANDLE_ICON_CLASS = \"drag-icon\";\r\nvar ROWS_VIEW = \"rowsview\";\r\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\r\nvar RowDraggingExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateHandleColumn()\r\n    },\r\n    _allowReordering: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group))\r\n    },\r\n    _updateHandleColumn: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var columnsController = this._columnsController;\r\n        var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\r\n        columnsController && columnsController.addCommandColumn({\r\n            type: \"drag\",\r\n            command: \"drag\",\r\n            visibleIndex: -2,\r\n            alignment: \"center\",\r\n            cssClass: COMMAND_HANDLE_CLASS,\r\n            width: \"auto\",\r\n            cellTemplate: this._getHandleTemplate(),\r\n            visible: isHandleColumnVisible\r\n        });\r\n        columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible)\r\n    },\r\n    _renderContent: function() {\r\n        var _this = this;\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var $content = this.callBase.apply(this, arguments);\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var sortableName = \"_sortable\";\r\n        var sortableFixedName = \"_sortableFixed\";\r\n        var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\r\n        var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\r\n        var togglePointerEventsStyle = function(toggle) {\r\n            var _this$sortableFixedNa;\r\n            null === (_this$sortableFixedNa = _this[sortableFixedName]) || void 0 === _this$sortableFixedNa ? void 0 : _this$sortableFixedNa.$element().css(\"pointerEvents\", toggle ? \"auto\" : \"\")\r\n        };\r\n        if ((allowReordering || this[currentSortableName]) && $content.length) {\r\n            this[currentSortableName] = this._createComponent($content, _sortable.default, (0, _extend.extend)({\r\n                component: this.component,\r\n                contentTemplate: null,\r\n                filter: \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\",\r\n                dragTemplate: this._getDraggableRowTemplate(),\r\n                handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\r\n                dropFeedbackMode: \"indicate\"\r\n            }, rowDragging, {\r\n                onDragStart: function(e) {\r\n                    var _rowDragging$onDragSt;\r\n                    var row = e.component.getVisibleRows()[e.fromIndex];\r\n                    e.itemData = row && row.data;\r\n                    var isDataRow = row && \"data\" === row.rowType;\r\n                    e.cancel = !allowReordering || !isDataRow;\r\n                    null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e)\r\n                },\r\n                onDragEnter: function() {\r\n                    togglePointerEventsStyle(true)\r\n                },\r\n                onDragLeave: function() {\r\n                    togglePointerEventsStyle(false)\r\n                },\r\n                onDragEnd: function(e) {\r\n                    var _rowDragging$onDragEn;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onDragEn = rowDragging.onDragEnd) || void 0 === _rowDragging$onDragEn ? void 0 : _rowDragging$onDragEn.call(rowDragging, e)\r\n                },\r\n                onAdd: function(e) {\r\n                    var _rowDragging$onAdd;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onAdd = rowDragging.onAdd) || void 0 === _rowDragging$onAdd ? void 0 : _rowDragging$onAdd.call(rowDragging, e)\r\n                },\r\n                dropFeedbackMode: _browser.default.msie ? \"indicate\" : rowDragging.dropFeedbackMode,\r\n                onOptionChanged: function(e) {\r\n                    var hasFixedSortable = _this[sortableFixedName];\r\n                    if (hasFixedSortable) {\r\n                        if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\r\n                            _this[anotherSortableName].option(e.name, e.value)\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            $content.toggleClass(\"dx-scrollable-container\", isFixedTableRendering);\r\n            $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, allowReordering && !rowDragging.showDragIcons)\r\n        }\r\n        return $content\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var offset = this._dataController.getRowIndexOffset();\r\n        [this._sortable, this._sortableFixed].forEach(function(sortable) {\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.option(\"offset\", offset);\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.update()\r\n        })\r\n    },\r\n    _getDraggableGridOptions: function(options) {\r\n        var gridOptions = this.option();\r\n        var columns = this.getColumns();\r\n        var $rowElement = (0, _renderer.default)(this.getRowElement(options.rowIndex));\r\n        return {\r\n            dataSource: [{\r\n                id: 1,\r\n                parentId: 0\r\n            }],\r\n            showBorders: true,\r\n            showColumnHeaders: false,\r\n            scrolling: {\r\n                useNative: false,\r\n                showScrollbar: false\r\n            },\r\n            pager: {\r\n                visible: false\r\n            },\r\n            loadingTimeout: void 0,\r\n            columnFixing: gridOptions.columnFixing,\r\n            columnAutoWidth: gridOptions.columnAutoWidth,\r\n            showColumnLines: gridOptions.showColumnLines,\r\n            columns: columns.map(function(column) {\r\n                return {\r\n                    width: column.width || column.visibleWidth,\r\n                    fixed: column.fixed,\r\n                    fixedPosition: column.fixedPosition\r\n                }\r\n            }),\r\n            onRowPrepared: function(e) {\r\n                var rowsView = e.component.getView(\"rowsView\");\r\n                (0, _renderer.default)(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone())\r\n            }\r\n        }\r\n    },\r\n    _getDraggableRowTemplate: function() {\r\n        var _this2 = this;\r\n        return function(options) {\r\n            var $rootElement = _this2.component.$element();\r\n            var $dataGridContainer = (0, _renderer.default)(\"<div>\").width($rootElement.width());\r\n            var items = _this2._dataController.items();\r\n            var row = items && items[options.fromIndex];\r\n            var gridOptions = _this2._getDraggableGridOptions(row);\r\n            _this2._createComponent($dataGridContainer, _this2.component.NAME, gridOptions);\r\n            $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(_this2.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\r\n            return $dataGridContainer\r\n        }\r\n    },\r\n    _getHandleTemplate: function() {\r\n        var _this3 = this;\r\n        return function(container, options) {\r\n            if (\"data\" === options.rowType) {\r\n                (0, _renderer.default)(container).addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                return (0, _renderer.default)(\"<span>\").addClass(_this3.addWidgetPrefix(HANDLE_ICON_CLASS))\r\n            } else {\r\n                _uiGrid_core.default.setEmptyText((0, _renderer.default)(container))\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"rowDragging\" === args.name) {\r\n            this._updateHandleColumn();\r\n            this._invalidate(true, true);\r\n            args.handled = true\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n};\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            rowDragging: {\r\n                showDragIcons: true,\r\n                dropFeedbackMode: \"indicate\",\r\n                allowReordering: false,\r\n                allowDropInsideItem: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: RowDraggingExtender\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.rows.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _style = require(\"../../core/utils/style\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _string = require(\"../../core/utils/string\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _uiGrid_core2 = require(\"./ui.grid_core.columns_view\");\r\nvar _ui = _interopRequireDefault(require(\"../scroll_view/ui.scrollable\"));\r\nvar _remove_event = _interopRequireDefault(require(\"../../core/remove_event\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar FREE_SPACE_CLASS = \"dx-freespace-row\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar ROW_ALTERNATION_CLASS = \"dx-row-alt\";\r\nvar LAST_ROW_BORDER = \"dx-last-row-border\";\r\nvar EMPTY_CLASS = \"dx-empty\";\r\nvar ROW_INSERTED_ANIMATION_CLASS = \"row-inserted-animation\";\r\nvar LOADPANEL_HIDE_TIMEOUT = 200;\r\n\r\nfunction getMaxHorizontalScrollOffset(scrollable) {\r\n    return scrollable ? scrollable.scrollWidth() - scrollable.clientWidth() : 0\r\n}\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            hoverStateEnabled: false,\r\n            scrolling: {\r\n                useNative: \"auto\"\r\n            },\r\n            loadPanel: {\r\n                enabled: \"auto\",\r\n                text: _message.default.format(\"Loading\"),\r\n                width: 200,\r\n                height: 90,\r\n                showIndicator: true,\r\n                indicatorSrc: \"\",\r\n                showPane: true\r\n            },\r\n            rowTemplate: null,\r\n            columnAutoWidth: false,\r\n            noDataText: _message.default.format(\"dxDataGrid-noDataText\"),\r\n            wordWrapEnabled: false,\r\n            showColumnLines: true,\r\n            showRowLines: false,\r\n            rowAlternationEnabled: false,\r\n            activeStateEnabled: false,\r\n            twoWayBindingEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        rowsView: _uiGrid_core2.ColumnsView.inherit(function() {\r\n            var defaultCellTemplate = function($container, options) {\r\n                var isDataTextEmpty = (0, _string.isEmpty)(options.text) && \"data\" === options.rowType;\r\n                var text = options.text;\r\n                var container = $container.get(0);\r\n                if (isDataTextEmpty) {\r\n                    _uiGrid_core.default.setEmptyText($container)\r\n                } else {\r\n                    if (options.column.encodeHtml) {\r\n                        container.textContent = text\r\n                    } else {\r\n                        container.innerHTML = text\r\n                    }\r\n                }\r\n            };\r\n            var getScrollableBottomPadding = function(that) {\r\n                var scrollable = that.getScrollable();\r\n                return scrollable ? Math.ceil(parseFloat(scrollable.$content().css(\"paddingBottom\"))) : 0\r\n            };\r\n            return {\r\n                _getDefaultTemplate: function(column) {\r\n                    switch (column.command) {\r\n                        case \"empty\":\r\n                            return function(container) {\r\n                                container.html(\"&nbsp;\")\r\n                            };\r\n                        default:\r\n                            return defaultCellTemplate\r\n                    }\r\n                },\r\n                _getDefaultGroupTemplate: function(column) {\r\n                    var that = this;\r\n                    var summaryTexts = that.option(\"summary.texts\");\r\n                    return function($container, options) {\r\n                        var data = options.data;\r\n                        var text = options.column.caption + \": \" + options.text;\r\n                        var container = $container.get(0);\r\n                        if (options.summaryItems && options.summaryItems.length) {\r\n                            text += \" \" + _uiGrid_core.default.getGroupRowSummaryText(options.summaryItems, summaryTexts)\r\n                        }\r\n                        if (data) {\r\n                            if (options.groupContinuedMessage && options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \". \" + options.groupContinuesMessage + \")\"\r\n                            } else {\r\n                                if (options.groupContinuesMessage) {\r\n                                    text += \" (\" + options.groupContinuesMessage + \")\"\r\n                                } else {\r\n                                    if (options.groupContinuedMessage) {\r\n                                        text += \" (\" + options.groupContinuedMessage + \")\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        $container.addClass(GROUP_CELL_CLASS);\r\n                        if (column.encodeHtml) {\r\n                            container.textContent = text\r\n                        } else {\r\n                            container.innerHTML = text\r\n                        }\r\n                    }\r\n                },\r\n                _update: function() {},\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    var template;\r\n                    if (\"group\" === options.rowType && (0, _type.isDefined)(column.groupIndex) && !column.showWhenGrouped && !column.command) {\r\n                        template = column.groupCellTemplate || {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: that._getDefaultGroupTemplate(column)\r\n                        }\r\n                    } else {\r\n                        if ((\"data\" === options.rowType || column.command) && column.cellTemplate) {\r\n                            template = column.cellTemplate\r\n                        } else {\r\n                            template = {\r\n                                allowRenderToDetachedContainer: true,\r\n                                render: that._getDefaultTemplate(column)\r\n                            }\r\n                        }\r\n                    }\r\n                    return template\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase(row);\r\n                    if (row) {\r\n                        var isGroup = \"group\" === row.rowType;\r\n                        var isDataRow = \"data\" === row.rowType;\r\n                        isDataRow && $row.addClass(DATA_ROW_CLASS);\r\n                        isDataRow && this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        this.option(\"showColumnLines\") && $row.addClass(COLUMN_LINES_CLASS);\r\n                        if (false === row.visible) {\r\n                            $row.hide()\r\n                        }\r\n                        if (isGroup) {\r\n                            $row.addClass(GROUP_ROW_CLASS);\r\n                            var isRowExpanded = row.isExpanded;\r\n                            this.setAria(\"role\", \"row\", $row);\r\n                            this.setAria(\"expanded\", (0, _type.isDefined)(isRowExpanded) && isRowExpanded.toString(), $row)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowPrepared: function($row, rowOptions, row) {\r\n                    var _this = this;\r\n                    if (\"data\" === rowOptions.rowType) {\r\n                        if (this.option(\"rowAlternationEnabled\")) {\r\n                            this._isAltRow(row) && $row.addClass(ROW_ALTERNATION_CLASS);\r\n                            rowOptions.watch && rowOptions.watch(function() {\r\n                                return _this._isAltRow(row)\r\n                            }, function(value) {\r\n                                $row.toggleClass(ROW_ALTERNATION_CLASS, value)\r\n                            })\r\n                        }\r\n                        this._setAriaRowIndex(rowOptions, $row);\r\n                        rowOptions.watch && rowOptions.watch(function() {\r\n                            return rowOptions.rowIndex\r\n                        }, function() {\r\n                            return _this._setAriaRowIndex(rowOptions, $row)\r\n                        })\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _setAriaRowIndex: function(row, $row) {\r\n                    var component = this.component;\r\n                    var isPagerMode = \"standard\" === component.option(\"scrolling.mode\") && \"virtual\" !== component.option(\"scrolling.rowRenderingMode\");\r\n                    var rowIndex = row.rowIndex + 1;\r\n                    if (isPagerMode) {\r\n                        rowIndex = component.pageIndex() * component.pageSize() + rowIndex\r\n                    } else {\r\n                        rowIndex += this._dataController.getRowIndexOffset()\r\n                    }\r\n                    this.setAria(\"rowindex\", rowIndex, $row)\r\n                },\r\n                _afterRowPrepared: function(e) {\r\n                    var _this2 = this;\r\n                    var arg = e.args[0];\r\n                    var dataController = this._dataController;\r\n                    var row = dataController.getVisibleRows()[arg.rowIndex];\r\n                    var watch = this.option(\"integrationOptions.watchMethod\");\r\n                    if (!arg.data || \"data\" !== arg.rowType || arg.isNewRow || !this.option(\"twoWayBindingEnabled\") || !watch || !row) {\r\n                        return\r\n                    }\r\n                    var dispose = watch(function() {\r\n                        return dataController.generateDataValues(arg.data, arg.columns)\r\n                    }, function() {\r\n                        dataController.repaintRows([row.rowIndex], _this2.option(\"repaintChangesOnly\"))\r\n                    }, {\r\n                        deep: true,\r\n                        skipImmediate: true\r\n                    });\r\n                    _events_engine.default.on(arg.rowElement, _remove_event.default, dispose)\r\n                },\r\n                _renderScrollable: function(force) {\r\n                    var that = this;\r\n                    var $element = that.element();\r\n                    if (!$element.children().length) {\r\n                        $element.append(\"<div>\")\r\n                    }\r\n                    if (force || !that._loadPanel) {\r\n                        that._renderLoadPanel($element, $element.parent(), that._dataController.isLocalStore())\r\n                    }\r\n                    if ((force || !that.getScrollable()) && that._dataController.isLoaded()) {\r\n                        var columns = that.getColumns();\r\n                        var allColumnsHasWidth = true;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            if (!columns[i].width && !columns[i].minWidth) {\r\n                                allColumnsHasWidth = false;\r\n                                break\r\n                            }\r\n                        }\r\n                        if (that.option(\"columnAutoWidth\") || that._hasHeight || allColumnsHasWidth || that._columnsController._isColumnFixing()) {\r\n                            that._renderScrollableCore($element)\r\n                        }\r\n                    }\r\n                },\r\n                _handleScroll: function(e) {\r\n                    var that = this;\r\n                    var rtlEnabled = that.option(\"rtlEnabled\");\r\n                    that._isScrollByEvent = !!e.event;\r\n                    that._scrollTop = e.scrollOffset.top;\r\n                    that._scrollLeft = e.scrollOffset.left;\r\n                    if (rtlEnabled) {\r\n                        this._scrollRight = getMaxHorizontalScrollOffset(e.component) - this._scrollLeft\r\n                    }\r\n                    that.scrollChanged.fire(e.scrollOffset, that.name)\r\n                },\r\n                _renderScrollableCore: function($element) {\r\n                    var that = this;\r\n                    var dxScrollableOptions = that._createScrollableOptions();\r\n                    var scrollHandler = that._handleScroll.bind(that);\r\n                    dxScrollableOptions.onScroll = scrollHandler;\r\n                    dxScrollableOptions.onStop = scrollHandler;\r\n                    that._scrollable = that._createComponent($element, _ui.default, dxScrollableOptions);\r\n                    that._scrollableContainer = that._scrollable && that._scrollable._$container\r\n                },\r\n                _renderLoadPanel: _uiGrid_core.default.renderLoadPanel,\r\n                _renderContent: function(contentElement, tableElement) {\r\n                    contentElement.empty().append(tableElement);\r\n                    return this._findContentElement()\r\n                },\r\n                _updateContent: function(newTableElement, change) {\r\n                    var that = this;\r\n                    var tableElement = that.getTableElement();\r\n                    var contentElement = that._findContentElement();\r\n                    var changeType = change && change.changeType;\r\n                    var executors = [];\r\n                    var highlightChanges = this.option(\"highlightChanges\");\r\n                    var rowInsertedClass = this.addWidgetPrefix(ROW_INSERTED_ANIMATION_CLASS);\r\n                    switch (changeType) {\r\n                        case \"update\":\r\n                            (0, _iterator.each)(change.rowIndices, function(index, rowIndex) {\r\n                                var $newRowElement = that._getRowElements(newTableElement).eq(index);\r\n                                var changeType = change.changeTypes && change.changeTypes[index];\r\n                                var item = change.items && change.items[index];\r\n                                executors.push(function() {\r\n                                    var $rowsElement = that._getRowElements();\r\n                                    var $rowElement = $rowsElement.eq(rowIndex);\r\n                                    switch (changeType) {\r\n                                        case \"update\":\r\n                                            if (item) {\r\n                                                var columnIndices = change.columnIndices && change.columnIndices[index];\r\n                                                if ((0, _type.isDefined)(item.visible) && item.visible !== $rowElement.is(\":visible\")) {\r\n                                                    $rowElement.toggle(item.visible)\r\n                                                } else {\r\n                                                    if (columnIndices) {\r\n                                                        that._updateCells($rowElement, $newRowElement, columnIndices)\r\n                                                    } else {\r\n                                                        $rowElement.replaceWith($newRowElement)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            break;\r\n                                        case \"insert\":\r\n                                            if (!$rowsElement.length) {\r\n                                                if (tableElement) {\r\n                                                    var target = $newRowElement.is(\"tbody\") ? tableElement : tableElement.children(\"tbody\");\r\n                                                    $newRowElement.prependTo(target)\r\n                                                }\r\n                                            } else {\r\n                                                if ($rowElement.length) {\r\n                                                    $newRowElement.insertBefore($rowElement)\r\n                                                } else {\r\n                                                    $newRowElement.insertAfter($rowsElement.last())\r\n                                                }\r\n                                            }\r\n                                            if (highlightChanges && change.isLiveUpdate) {\r\n                                                $newRowElement.addClass(rowInsertedClass)\r\n                                            }\r\n                                            break;\r\n                                        case \"remove\":\r\n                                            $rowElement.remove()\r\n                                    }\r\n                                })\r\n                            });\r\n                            (0, _iterator.each)(executors, function() {\r\n                                this()\r\n                            });\r\n                            newTableElement.remove();\r\n                            break;\r\n                        default:\r\n                            that.setTableElement(newTableElement);\r\n                            contentElement.addClass(that.addWidgetPrefix(CONTENT_CLASS));\r\n                            that._renderContent(contentElement, newTableElement)\r\n                    }\r\n                },\r\n                _createEmptyRow: function(className, isFixed, height) {\r\n                    var that = this;\r\n                    var $cell;\r\n                    var $row = that._createRow();\r\n                    var columns = isFixed ? this.getFixedColumns() : this.getColumns();\r\n                    $row.addClass(className).toggleClass(COLUMN_LINES_CLASS, that.option(\"showColumnLines\"));\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        $cell = that._createCell({\r\n                            column: columns[i],\r\n                            rowType: \"freeSpace\",\r\n                            columnIndex: i,\r\n                            columns: columns\r\n                        });\r\n                        (0, _type.isNumeric)(height) && $cell.css(\"height\", height);\r\n                        $row.append($cell)\r\n                    }\r\n                    that.setAria(\"role\", \"presentation\", $row);\r\n                    return $row\r\n                },\r\n                _appendEmptyRow: function($table, $emptyRow, location) {\r\n                    var $tBodies = this._getBodies($table);\r\n                    var isTableContainer = !$tBodies.length || $emptyRow.is(\"tbody\");\r\n                    var $container = isTableContainer ? $table : $tBodies;\r\n                    if (\"top\" === location) {\r\n                        $container.first().prepend($emptyRow);\r\n                        if (isTableContainer) {\r\n                            var $colgroup = $container.children(\"colgroup\");\r\n                            $container.prepend($colgroup)\r\n                        }\r\n                    } else {\r\n                        $container.last().append($emptyRow)\r\n                    }\r\n                },\r\n                _renderFreeSpaceRow: function($tableElement) {\r\n                    var $freeSpaceRowElement = this._createEmptyRow(FREE_SPACE_CLASS);\r\n                    $freeSpaceRowElement = this._wrapRowIfNeed($tableElement, $freeSpaceRowElement);\r\n                    this._appendEmptyRow($tableElement, $freeSpaceRowElement)\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    var that = this;\r\n                    var rows = that._getRows(options);\r\n                    var keyExpr = that._dataController.store() && that._dataController.store().key();\r\n                    keyExpr && rows.some(function(row) {\r\n                        if (\"data\" === row.rowType && void 0 === row.key) {\r\n                            that._dataController.fireError(\"E1046\", keyExpr);\r\n                            return true\r\n                        }\r\n                    })\r\n                },\r\n                _needUpdateRowHeight: function(itemsCount) {\r\n                    return itemsCount > 0 && !this._rowHeight\r\n                },\r\n                _getRowsHeight: function($tableElement) {\r\n                    var $rowElements = $tableElement.children(\"tbody\").children().not(\".dx-virtual-row\").not(\".\" + FREE_SPACE_CLASS);\r\n                    return $rowElements.toArray().reduce(function(sum, row) {\r\n                        return sum + (0, _position.getBoundingRect)(row).height\r\n                    }, 0)\r\n                },\r\n                _updateRowHeight: function() {\r\n                    var that = this;\r\n                    var $tableElement = that.getTableElement();\r\n                    var itemsCount = that._dataController.items().length;\r\n                    if ($tableElement && that._needUpdateRowHeight(itemsCount)) {\r\n                        var rowsHeight = that._getRowsHeight($tableElement);\r\n                        that._rowHeight = rowsHeight / itemsCount\r\n                    }\r\n                },\r\n                _findContentElement: function() {\r\n                    var $content = this.element();\r\n                    var scrollable = this.getScrollable();\r\n                    if ($content) {\r\n                        if (scrollable) {\r\n                            $content = scrollable.$content()\r\n                        }\r\n                        return $content.children().first()\r\n                    }\r\n                },\r\n                _getRowElements: function(tableElement) {\r\n                    var $rows = this.callBase(tableElement);\r\n                    return $rows && $rows.not(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getFreeSpaceRowElements: function($table) {\r\n                    var tableElements = $table || this.getTableElements();\r\n                    return tableElements && tableElements.children(\"tbody\").children(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getNoDataText: function() {\r\n                    return this.option(\"noDataText\")\r\n                },\r\n                _rowClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowClick\", (0, _extend.extend)({\r\n                        evaluate: function(expr) {\r\n                            var getter = (0, _data.compileGetter)(expr);\r\n                            return getter(item.data)\r\n                        }\r\n                    }, e, item))\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowDblClick\", (0, _extend.extend)({}, e, item))\r\n                },\r\n                _getColumnsCountBeforeGroups: function(columns) {\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (\"groupExpand\" === columns[i].type) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return 0\r\n                },\r\n                _getGroupCellOptions: function(options) {\r\n                    var columnsCountBeforeGroups = this._getColumnsCountBeforeGroups(options.columns);\r\n                    var columnIndex = (options.row.groupIndex || 0) + columnsCountBeforeGroups;\r\n                    return {\r\n                        columnIndex: columnIndex,\r\n                        colspan: options.columns.length - columnIndex - 1\r\n                    }\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    if (\"group\" === options.row.rowType) {\r\n                        this._renderGroupedCells($row, options)\r\n                    } else {\r\n                        if (options.row.values) {\r\n                            this.callBase($row, options)\r\n                        }\r\n                    }\r\n                },\r\n                _renderGroupedCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var expandColumn;\r\n                    var columns = options.columns;\r\n                    var rowIndex = row.rowIndex;\r\n                    var isExpanded;\r\n                    var groupCellOptions = this._getGroupCellOptions(options);\r\n                    for (var i = 0; i <= groupCellOptions.columnIndex; i++) {\r\n                        if (i === groupCellOptions.columnIndex && columns[i].allowCollapsing && \"infinite\" !== options.scrollingMode) {\r\n                            isExpanded = !!row.isExpanded;\r\n                            expandColumn = columns[i]\r\n                        } else {\r\n                            isExpanded = null;\r\n                            expandColumn = {\r\n                                command: \"expand\",\r\n                                cssClass: columns[i].cssClass\r\n                            }\r\n                        }\r\n                        this._renderCell($row, {\r\n                            value: isExpanded,\r\n                            row: row,\r\n                            rowIndex: rowIndex,\r\n                            column: expandColumn,\r\n                            columnIndex: i\r\n                        })\r\n                    }\r\n                    var groupColumnAlignment = (0, _position.getDefaultAlignment)(this.option(\"rtlEnabled\"));\r\n                    var groupColumn = (0, _extend.extend)({}, columns[groupCellOptions.columnIndex], {\r\n                        command: null,\r\n                        cssClass: null,\r\n                        width: null,\r\n                        showWhenGrouped: false,\r\n                        alignment: groupColumnAlignment\r\n                    });\r\n                    if (groupCellOptions.colspan > 1) {\r\n                        groupColumn.colspan = groupCellOptions.colspan\r\n                    }\r\n                    this._renderCell($row, {\r\n                        value: row.values[row.groupIndex],\r\n                        row: row,\r\n                        rowIndex: rowIndex,\r\n                        column: groupColumn,\r\n                        columnIndex: groupCellOptions.columnIndex\r\n                    })\r\n                },\r\n                _renderRows: function($table, options) {\r\n                    var that = this;\r\n                    var scrollingMode = that.option(\"scrolling.mode\");\r\n                    that.callBase($table, (0, _extend.extend)({\r\n                        scrollingMode: scrollingMode\r\n                    }, options));\r\n                    that._checkRowKeys(options.change);\r\n                    that._renderFreeSpaceRow($table);\r\n                    if (!that._hasHeight) {\r\n                        that.updateFreeSpaceRowHeight($table)\r\n                    }\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    var that = this;\r\n                    var row = options.row;\r\n                    var rowTemplate = that.option(\"rowTemplate\");\r\n                    if ((\"data\" === row.rowType || \"group\" === row.rowType) && !(0, _type.isDefined)(row.groupIndex) && rowTemplate) {\r\n                        that.renderTemplate($table, rowTemplate, (0, _extend.extend)({\r\n                            columns: options.columns\r\n                        }, row), true)\r\n                    } else {\r\n                        that.callBase($table, options)\r\n                    }\r\n                },\r\n                _renderTable: function(options) {\r\n                    var that = this;\r\n                    var $table = that.callBase(options);\r\n                    var resizeCompletedHandler = function resizeCompletedHandler() {\r\n                        var scrollableInstance = that.getScrollable();\r\n                        if (scrollableInstance && that.element().closest((0, _window.getWindow)().document).length) {\r\n                            that.resizeCompleted.remove(resizeCompletedHandler);\r\n                            scrollableInstance._visibilityChanged(true)\r\n                        }\r\n                    };\r\n                    if (!(0, _type.isDefined)(that.getTableElement())) {\r\n                        that.setTableElement($table);\r\n                        that._renderScrollable(true);\r\n                        that.resizeCompleted.add(resizeCompletedHandler)\r\n                    } else {\r\n                        that._renderScrollable()\r\n                    }\r\n                    return $table\r\n                },\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    if (this.option(\"rowTemplate\")) {\r\n                        $table.appendTo(this.component.$element())\r\n                    }\r\n                    return $table\r\n                },\r\n                _renderCore: function(change) {\r\n                    var that = this;\r\n                    var $element = that.element();\r\n                    $element.addClass(that.addWidgetPrefix(ROWS_VIEW_CLASS)).toggleClass(that.addWidgetPrefix(NOWRAP_CLASS), !that.option(\"wordWrapEnabled\"));\r\n                    $element.toggleClass(EMPTY_CLASS, 0 === that._dataController.items().length);\r\n                    that.setAria(\"role\", \"presentation\", $element);\r\n                    var $table = that._renderTable({\r\n                        change: change\r\n                    });\r\n                    that._updateContent($table, change);\r\n                    that.callBase(change);\r\n                    that._lastColumnWidths = null\r\n                },\r\n                _getRows: function(change) {\r\n                    return change && change.items || this._dataController.items()\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    var row = options.row;\r\n                    var data = row.data;\r\n                    var summaryCells = row && row.summaryCells;\r\n                    var value = options.value;\r\n                    var displayValue = _uiGrid_core.default.getDisplayValue(column, value, data, row.rowType);\r\n                    var parameters = this.callBase(options);\r\n                    parameters.value = value;\r\n                    parameters.oldValue = options.oldValue;\r\n                    parameters.displayValue = displayValue;\r\n                    parameters.row = row;\r\n                    parameters.key = row.key;\r\n                    parameters.data = data;\r\n                    parameters.rowType = row.rowType;\r\n                    parameters.values = row.values;\r\n                    parameters.text = !column.command ? _uiGrid_core.default.formatValue(displayValue, column) : \"\";\r\n                    parameters.rowIndex = row.rowIndex;\r\n                    parameters.summaryItems = summaryCells && summaryCells[options.columnIndex];\r\n                    parameters.resized = column.resizedCallbacks;\r\n                    if ((0, _type.isDefined)(column.groupIndex) && !column.command) {\r\n                        var groupingTextsOptions = that.option(\"grouping.texts\");\r\n                        var scrollingMode = that.option(\"scrolling.mode\");\r\n                        if (\"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                            parameters.groupContinuesMessage = data && data.isContinuationOnNextPage && groupingTextsOptions && groupingTextsOptions.groupContinuesMessage;\r\n                            parameters.groupContinuedMessage = data && data.isContinuation && groupingTextsOptions && groupingTextsOptions.groupContinuedMessage\r\n                        }\r\n                    }\r\n                    return parameters\r\n                },\r\n                _setRowsOpacityCore: function($rows, visibleColumns, columnIndex, value) {\r\n                    var columnsController = this._columnsController;\r\n                    var columns = columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    (0, _iterator.each)($rows, function(rowIndex, row) {\r\n                        if (!(0, _renderer.default)(row).hasClass(GROUP_ROW_CLASS)) {\r\n                            for (var i = 0; i < visibleColumns.length; i++) {\r\n                                if ((0, _type.isNumeric)(columnID) && columnsController.isParentBandColumn(visibleColumns[i].index, columnID) || visibleColumns[i].index === columnIndex) {\r\n                                    $rows.eq(rowIndex).children().eq(i).css({\r\n                                        opacity: value\r\n                                    });\r\n                                    if (!(0, _type.isNumeric)(columnID)) {\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                _getDevicePixelRatio: function() {\r\n                    return (0, _window.getWindow)().devicePixelRatio\r\n                },\r\n                renderNoDataText: _uiGrid_core.default.renderNoDataText,\r\n                getCellOptions: function(rowIndex, columnIdentifier) {\r\n                    var rowOptions = this._dataController.items()[rowIndex];\r\n                    var cellOptions;\r\n                    var column;\r\n                    if (rowOptions) {\r\n                        if ((0, _type.isString)(columnIdentifier)) {\r\n                            column = this._columnsController.columnOption(columnIdentifier)\r\n                        } else {\r\n                            column = this._columnsController.getVisibleColumns()[columnIdentifier]\r\n                        }\r\n                        if (column) {\r\n                            cellOptions = this._getCellOptions({\r\n                                value: column.calculateCellValue(rowOptions.data),\r\n                                rowIndex: rowOptions.rowIndex,\r\n                                row: rowOptions,\r\n                                column: column\r\n                            })\r\n                        }\r\n                    }\r\n                    return cellOptions\r\n                },\r\n                getRow: function(index) {\r\n                    if (index >= 0) {\r\n                        var rows = this._getRowElements();\r\n                        if (rows.length > index) {\r\n                            return (0, _renderer.default)(rows[index])\r\n                        }\r\n                    }\r\n                },\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var _this3 = this;\r\n                    var dataController = this._dataController;\r\n                    var itemCount = dataController.items(true).length;\r\n                    var contentElement = this._findContentElement();\r\n                    var freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                    if (freeSpaceRowElements && contentElement && dataController.totalCount() >= 0) {\r\n                        var isFreeSpaceRowVisible = false;\r\n                        if (itemCount > 0) {\r\n                            if (!this._hasHeight) {\r\n                                var freeSpaceRowCount = dataController.pageSize() - itemCount;\r\n                                var scrollingMode = this.option(\"scrolling.mode\");\r\n                                if (freeSpaceRowCount > 0 && dataController.pageCount() > 1 && \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                                    (0, _style.setHeight)(freeSpaceRowElements, freeSpaceRowCount * this._rowHeight);\r\n                                    isFreeSpaceRowVisible = true\r\n                                }\r\n                                if (!isFreeSpaceRowVisible && $table) {\r\n                                    (0, _style.setHeight)(freeSpaceRowElements, 0)\r\n                                } else {\r\n                                    freeSpaceRowElements.toggle(isFreeSpaceRowVisible)\r\n                                }\r\n                                this._updateLastRowBorder(isFreeSpaceRowVisible)\r\n                            } else {\r\n                                freeSpaceRowElements.hide();\r\n                                (0, _common.deferUpdate)(function() {\r\n                                    var scrollbarWidth = _this3.getScrollbarWidth(true);\r\n                                    var elementHeightWithoutScrollbar = _this3.element().height() - scrollbarWidth;\r\n                                    var contentHeight = contentElement.outerHeight();\r\n                                    var showFreeSpaceRow = elementHeightWithoutScrollbar - contentHeight > 0;\r\n                                    var rowsHeight = _this3._getRowsHeight(contentElement.children().first());\r\n                                    var $tableElement = $table || _this3.getTableElements();\r\n                                    var borderTopWidth = Math.ceil(parseFloat($tableElement.css(\"borderTopWidth\")));\r\n                                    var heightCorrection = _this3._getHeightCorrection();\r\n                                    var resultHeight = elementHeightWithoutScrollbar - rowsHeight - borderTopWidth - heightCorrection;\r\n                                    if (showFreeSpaceRow) {\r\n                                        (0, _common.deferRender)(function() {\r\n                                            freeSpaceRowElements.css(\"height\", resultHeight);\r\n                                            isFreeSpaceRowVisible = true;\r\n                                            freeSpaceRowElements.show()\r\n                                        })\r\n                                    }(0, _common.deferRender)(function() {\r\n                                        return _this3._updateLastRowBorder(isFreeSpaceRowVisible)\r\n                                    })\r\n                                })\r\n                            }\r\n                        } else {\r\n                            freeSpaceRowElements.css(\"height\", 0);\r\n                            freeSpaceRowElements.show();\r\n                            this._updateLastRowBorder(true)\r\n                        }\r\n                    }\r\n                },\r\n                _getHeightCorrection: function() {\r\n                    var isZoomedWebkit = _browser.default.webkit && this._getDevicePixelRatio() >= 2;\r\n                    var isChromeLatest = _browser.default.chrome && _browser.default.version >= 91;\r\n                    var hasExtraBorderTop = _browser.default.mozilla && _browser.default.version >= 70 && !this.option(\"showRowLines\");\r\n                    return isZoomedWebkit || hasExtraBorderTop || isChromeLatest ? 1 : 0\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var optionNames = e.optionNames;\r\n                    if (e.changeTypes.grouping) {\r\n                        return\r\n                    }\r\n                    if (optionNames.width || optionNames.visibleWidth) {\r\n                        this.callBase(e);\r\n                        this._fireColumnResizedCallbacks()\r\n                    }\r\n                },\r\n                getScrollable: function() {\r\n                    return this._scrollable\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    that._editorFactoryController = that.getController(\"editorFactory\");\r\n                    that._rowHeight = 0;\r\n                    that._scrollTop = 0;\r\n                    that._scrollLeft = -1;\r\n                    that._scrollRight = 0;\r\n                    that._hasHeight = false;\r\n                    dataController.loadingChanged.add(function(isLoading, messageText) {\r\n                        that.setLoading(isLoading, messageText)\r\n                    });\r\n                    dataController.dataSourceChanged.add(function() {\r\n                        if (that._scrollLeft >= 0) {\r\n                            that._handleScroll({\r\n                                component: that.getScrollable(),\r\n                                scrollOffset: {\r\n                                    top: that._scrollTop,\r\n                                    left: that._scrollLeft\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                },\r\n                _handleDataChanged: function(change) {\r\n                    var that = this;\r\n                    switch (change.changeType) {\r\n                        case \"refresh\":\r\n                        case \"prepend\":\r\n                        case \"append\":\r\n                        case \"update\":\r\n                            that.render(null, change);\r\n                            break;\r\n                        default:\r\n                            that._update(change)\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"isScrollbarVisible\", \"getTopVisibleRowData\", \"getScrollbarWidth\", \"getCellElement\", \"getRowElement\", \"getScrollable\"]\r\n                },\r\n                contentWidth: function() {\r\n                    return this.element().width() - this.getScrollbarWidth()\r\n                },\r\n                getScrollbarWidth: function(isHorizontal) {\r\n                    var scrollableContainer = this._scrollableContainer && this._scrollableContainer.get(0);\r\n                    var scrollbarWidth = 0;\r\n                    if (scrollableContainer) {\r\n                        if (!isHorizontal) {\r\n                            scrollbarWidth = scrollableContainer.clientWidth ? scrollableContainer.offsetWidth - scrollableContainer.clientWidth : 0\r\n                        } else {\r\n                            scrollbarWidth = scrollableContainer.clientHeight ? scrollableContainer.offsetHeight - scrollableContainer.clientHeight : 0;\r\n                            scrollbarWidth += getScrollableBottomPadding(this)\r\n                        }\r\n                    }\r\n                    return scrollbarWidth > 0 ? scrollbarWidth : 0\r\n                },\r\n                _fireColumnResizedCallbacks: function() {\r\n                    var that = this;\r\n                    var lastColumnWidths = that._lastColumnWidths || [];\r\n                    var columnWidths = [];\r\n                    var columns = that.getColumns();\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        columnWidths[i] = columns[i].visibleWidth;\r\n                        if (columns[i].resizedCallbacks && !(0, _type.isDefined)(columns[i].groupIndex) && lastColumnWidths[i] !== columnWidths[i]) {\r\n                            columns[i].resizedCallbacks.fire(columnWidths[i])\r\n                        }\r\n                    }\r\n                    that._lastColumnWidths = columnWidths\r\n                },\r\n                _updateLastRowBorder: function(isFreeSpaceRowVisible) {\r\n                    if (this.option(\"showBorders\") && this.option(\"showRowLines\") && !isFreeSpaceRowVisible) {\r\n                        this.element().addClass(LAST_ROW_BORDER)\r\n                    } else {\r\n                        this.element().removeClass(LAST_ROW_BORDER)\r\n                    }\r\n                },\r\n                _updateScrollable: function() {\r\n                    var dxScrollable = _ui.default.getInstance(this.element());\r\n                    if (dxScrollable) {\r\n                        dxScrollable.update();\r\n                        this._updateHorizontalScrollPosition()\r\n                    }\r\n                },\r\n                _updateHorizontalScrollPosition: function() {\r\n                    var scrollable = this.getScrollable();\r\n                    var scrollLeft = scrollable && scrollable.scrollOffset().left;\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        var maxHorizontalScrollOffset = getMaxHorizontalScrollOffset(scrollable);\r\n                        var scrollRight = maxHorizontalScrollOffset - scrollLeft;\r\n                        if (scrollRight !== this._scrollRight) {\r\n                            this._scrollLeft = maxHorizontalScrollOffset - this._scrollRight\r\n                        }\r\n                    }\r\n                    if (this._scrollLeft >= 0 && scrollLeft !== this._scrollLeft) {\r\n                        scrollable.scrollTo({\r\n                            x: this._scrollLeft\r\n                        })\r\n                    }\r\n                },\r\n                _resizeCore: function() {\r\n                    var that = this;\r\n                    that._fireColumnResizedCallbacks();\r\n                    that._updateRowHeight();\r\n                    (0, _common.deferRender)(function() {\r\n                        that._renderScrollable();\r\n                        that.renderNoDataText();\r\n                        that.updateFreeSpaceRowHeight();\r\n                        (0, _common.deferUpdate)(function() {\r\n                            that._updateScrollable()\r\n                        })\r\n                    })\r\n                },\r\n                scrollTo: function(location) {\r\n                    var $element = this.element();\r\n                    var dxScrollable = $element && _ui.default.getInstance($element);\r\n                    if (dxScrollable) {\r\n                        dxScrollable.scrollTo(location)\r\n                    }\r\n                },\r\n                height: function(_height, hasHeight) {\r\n                    var that = this;\r\n                    var $element = this.element();\r\n                    if (0 === arguments.length) {\r\n                        return $element ? $element.outerHeight(true) : 0\r\n                    }\r\n                    that._hasHeight = void 0 === hasHeight ? \"auto\" !== _height : hasHeight;\r\n                    if ((0, _type.isDefined)(_height) && $element) {\r\n                        (0, _style.setHeight)($element, _height)\r\n                    }\r\n                },\r\n                setLoading: function(isLoading, messageText) {\r\n                    var that = this;\r\n                    var loadPanel = that._loadPanel;\r\n                    var dataController = that._dataController;\r\n                    var loadPanelOptions = that.option(\"loadPanel\") || {};\r\n                    var animation = dataController.isLoaded() ? loadPanelOptions.animation : null;\r\n                    var $element = that.element();\r\n                    if (!(0, _window.hasWindow)()) {\r\n                        return\r\n                    }\r\n                    if (!loadPanel && void 0 !== messageText && dataController.isLocalStore() && \"auto\" === loadPanelOptions.enabled && $element) {\r\n                        that._renderLoadPanel($element, $element.parent());\r\n                        loadPanel = that._loadPanel\r\n                    }\r\n                    if (loadPanel) {\r\n                        var visibilityOptions = {\r\n                            message: messageText || loadPanelOptions.text,\r\n                            animation: animation,\r\n                            visible: isLoading\r\n                        };\r\n                        clearTimeout(that._hideLoadingTimeoutID);\r\n                        if (loadPanel.option(\"visible\") && !isLoading) {\r\n                            that._hideLoadingTimeoutID = setTimeout(function() {\r\n                                loadPanel.option(visibilityOptions)\r\n                            }, LOADPANEL_HIDE_TIMEOUT)\r\n                        } else {\r\n                            loadPanel.option(visibilityOptions)\r\n                        }\r\n                    }\r\n                },\r\n                setRowsOpacity: function(columnIndex, value) {\r\n                    var $rows = this._getRowElements().not(\".\" + GROUP_ROW_CLASS) || [];\r\n                    this._setRowsOpacityCore($rows, this.getColumns(), columnIndex, value)\r\n                },\r\n                _getCellElementsCore: function(rowIndex) {\r\n                    var $cells = this.callBase.apply(this, arguments);\r\n                    if ($cells) {\r\n                        var groupCellIndex = $cells.filter(\".\" + GROUP_CELL_CLASS).index();\r\n                        if (groupCellIndex >= 0 && $cells.length > groupCellIndex + 1) {\r\n                            return $cells.slice(0, groupCellIndex + 1)\r\n                        }\r\n                    }\r\n                    return $cells\r\n                },\r\n                getTopVisibleItemIndex: function(isFloor) {\r\n                    var that = this;\r\n                    var itemIndex = 0;\r\n                    var prevOffsetTop = 0;\r\n                    var offsetTop = 0;\r\n                    var scrollPosition = that._scrollTop;\r\n                    var $contentElement = that._findContentElement();\r\n                    var contentElementOffsetTop = $contentElement && $contentElement.offset().top;\r\n                    var items = that._dataController.items();\r\n                    var tableElement = that.getTableElement();\r\n                    if (items.length && tableElement) {\r\n                        var rowElements = that._getRowElements(tableElement).filter(\":visible\");\r\n                        for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\r\n                            prevOffsetTop = offsetTop;\r\n                            var rowElement = rowElements.eq(itemIndex);\r\n                            if (rowElement.length) {\r\n                                offsetTop = rowElement.offset().top - contentElementOffsetTop;\r\n                                if (offsetTop > scrollPosition) {\r\n                                    if (itemIndex) {\r\n                                        if (isFloor || 2 * scrollPosition < Math.round(offsetTop + prevOffsetTop)) {\r\n                                            itemIndex--\r\n                                        }\r\n                                    }\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        if (itemIndex && itemIndex === items.length) {\r\n                            itemIndex--\r\n                        }\r\n                    }\r\n                    return itemIndex\r\n                },\r\n                getTopVisibleRowData: function() {\r\n                    var itemIndex = this.getTopVisibleItemIndex();\r\n                    var items = this._dataController.items();\r\n                    if (items[itemIndex]) {\r\n                        return items[itemIndex].data\r\n                    }\r\n                },\r\n                _scrollToElement: function($element, offset) {\r\n                    var scrollable = this.getScrollable();\r\n                    scrollable && scrollable.scrollToElement($element, offset)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var that = this;\r\n                    that.callBase(args);\r\n                    switch (args.name) {\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                        case \"showRowLines\":\r\n                        case \"rowAlternationEnabled\":\r\n                        case \"rowTemplate\":\r\n                        case \"twoWayBindingEnabled\":\r\n                            that._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"scrolling\":\r\n                            that._rowHeight = null;\r\n                            that._tableElement = null;\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            that._rowHeight = null;\r\n                            that._tableElement = null;\r\n                            break;\r\n                        case \"loadPanel\":\r\n                            that._tableElement = null;\r\n                            that._invalidate(true, \"loadPanel.enabled\" !== args.fullName);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"noDataText\":\r\n                            that.renderNoDataText();\r\n                            args.handled = true\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._hideLoadingTimeoutID);\r\n                    this._scrollable && this._scrollable.dispose()\r\n                },\r\n                setScrollerSpacing: function() {}\r\n            }\r\n        }())\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.search.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SEARCH_PANEL_CLASS = \"search-panel\";\r\nvar SEARCH_TEXT_CLASS = \"search-text\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar FILTERING_TIMEOUT = 700;\r\n\r\nfunction allowSearch(column) {\r\n    return (0, _type.isDefined)(column.allowSearch) ? column.allowSearch : column.allowFiltering\r\n}\r\n\r\nfunction parseValue(column, text) {\r\n    var lookup = column.lookup;\r\n    if (!column.parseValue) {\r\n        return text\r\n    }\r\n    if (lookup) {\r\n        return column.parseValue.call(lookup, text)\r\n    }\r\n    return column.parseValue(text)\r\n}\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            searchPanel: {\r\n                visible: false,\r\n                width: 160,\r\n                placeholder: _message.default.format(\"dxDataGrid-searchPanelPlaceholder\"),\r\n                highlightSearchText: true,\r\n                highlightCaseSensitive: false,\r\n                text: \"\",\r\n                searchVisibleColumnsOnly: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: function() {\r\n                var calculateSearchFilter = function(that, text) {\r\n                    var i;\r\n                    var column;\r\n                    var columns = that._columnsController.getColumns();\r\n                    var searchVisibleColumnsOnly = that.option(\"searchPanel.searchVisibleColumnsOnly\");\r\n                    var lookup;\r\n                    var filters = [];\r\n                    if (!text) {\r\n                        return null\r\n                    }\r\n\r\n                    function onQueryDone(items) {\r\n                        var valueGetter = (0, _data.compileGetter)(lookup.valueExpr);\r\n                        for (var _i = 0; _i < items.length; _i++) {\r\n                            var value = valueGetter(items[_i]);\r\n                            filters.push(column.createFilterExpression(value, null, \"search\"))\r\n                        }\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        if (searchVisibleColumnsOnly && !column.visible) {\r\n                            continue\r\n                        }\r\n                        if (allowSearch(column) && column.calculateFilterExpression) {\r\n                            lookup = column.lookup;\r\n                            var filterValue = parseValue(column, text);\r\n                            if (lookup && lookup.items) {\r\n                                (0, _query.default)(lookup.items).filter(column.createFilterExpression.call({\r\n                                    dataField: lookup.displayExpr,\r\n                                    dataType: lookup.dataType,\r\n                                    calculateFilterExpression: column.calculateFilterExpression\r\n                                }, filterValue, null, \"search\")).enumerate().done(onQueryDone)\r\n                            } else {\r\n                                if (void 0 !== filterValue) {\r\n                                    filters.push(column.createFilterExpression(filterValue, null, \"search\"))\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return _uiGrid_core.default.combineFilters(filters, \"or\")\r\n                };\r\n                return {\r\n                    publicMethods: function() {\r\n                        return this.callBase().concat([\"searchByText\"])\r\n                    },\r\n                    _calculateAdditionalFilter: function() {\r\n                        var that = this;\r\n                        var filter = that.callBase();\r\n                        var searchFilter = calculateSearchFilter(that, that.option(\"searchPanel.text\"));\r\n                        return _uiGrid_core.default.combineFilters([filter, searchFilter])\r\n                    },\r\n                    searchByText: function(text) {\r\n                        this.option(\"searchPanel.text\", text)\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        var that = this;\r\n                        switch (args.fullName) {\r\n                            case \"searchPanel.text\":\r\n                            case \"searchPanel\":\r\n                                that._applyFilter();\r\n                                args.handled = true;\r\n                                break;\r\n                            default:\r\n                                that.callBase(args)\r\n                        }\r\n                    }\r\n                }\r\n            }()\r\n        },\r\n        views: {\r\n            headerPanel: function() {\r\n                var getSearchPanelOptions = function(that) {\r\n                    return that.option(\"searchPanel\")\r\n                };\r\n                return {\r\n                    _getToolbarItems: function() {\r\n                        var items = this.callBase();\r\n                        return this._prepareSearchItem(items)\r\n                    },\r\n                    _prepareSearchItem: function(items) {\r\n                        var that = this;\r\n                        var dataController = that.getController(\"data\");\r\n                        var searchPanelOptions = getSearchPanelOptions(that);\r\n                        if (searchPanelOptions && searchPanelOptions.visible) {\r\n                            var toolbarItem = {\r\n                                template: function(data, index, container) {\r\n                                    var $search = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(SEARCH_PANEL_CLASS)).appendTo(container);\r\n                                    that.getController(\"editorFactory\").createEditor($search, {\r\n                                        width: searchPanelOptions.width,\r\n                                        placeholder: searchPanelOptions.placeholder,\r\n                                        parentType: \"searchPanel\",\r\n                                        value: that.option(\"searchPanel.text\"),\r\n                                        updateValueTimeout: FILTERING_TIMEOUT,\r\n                                        setValue: function(value) {\r\n                                            dataController.searchByText(value)\r\n                                        },\r\n                                        editorOptions: {\r\n                                            inputAttr: {\r\n                                                \"aria-label\": _message.default.format(\"\".concat(that.component.NAME, \"-ariaSearchInGrid\"))\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    that.resize()\r\n                                },\r\n                                name: \"searchPanel\",\r\n                                location: \"after\",\r\n                                locateInMenu: \"never\",\r\n                                sortIndex: 40\r\n                            };\r\n                            items.push(toolbarItem)\r\n                        }\r\n                        return items\r\n                    },\r\n                    getSearchTextEditor: function() {\r\n                        var that = this;\r\n                        var $element = that.element();\r\n                        var $searchPanel = $element.find(\".\" + that.addWidgetPrefix(SEARCH_PANEL_CLASS)).filter(function() {\r\n                            return (0, _renderer.default)(this).closest(\".\" + that.addWidgetPrefix(HEADER_PANEL_CLASS)).is($element)\r\n                        });\r\n                        if ($searchPanel.length) {\r\n                            return $searchPanel.dxTextBox(\"instance\")\r\n                        }\r\n                        return null\r\n                    },\r\n                    isVisible: function() {\r\n                        var searchPanelOptions = getSearchPanelOptions(this);\r\n                        return this.callBase() || searchPanelOptions && searchPanelOptions.visible\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        if (\"searchPanel\" === args.name) {\r\n                            if (\"searchPanel.text\" === args.fullName) {\r\n                                var editor = this.getSearchTextEditor();\r\n                                if (editor) {\r\n                                    editor.option(\"value\", args.value)\r\n                                }\r\n                            } else {\r\n                                this._invalidate()\r\n                            }\r\n                            args.handled = true\r\n                        } else {\r\n                            this.callBase(args)\r\n                        }\r\n                    }\r\n                }\r\n            }(),\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._searchParams = []\r\n                },\r\n                _getFormattedSearchText: function(column, searchText) {\r\n                    var value = parseValue(column, searchText);\r\n                    var formatOptions = _uiGrid_core.default.getFormatOptionsByColumn(column, \"search\");\r\n                    return _uiGrid_core.default.formatValue(value, formatOptions)\r\n                },\r\n                _getStringNormalizer: function() {\r\n                    var isCaseSensitive = this.option(\"searchPanel.highlightCaseSensitive\");\r\n                    return function(str) {\r\n                        return isCaseSensitive ? str : str.toLowerCase()\r\n                    }\r\n                },\r\n                _findHighlightingTextNodes: function(column, cellElement, searchText) {\r\n                    var _$items;\r\n                    var that = this;\r\n                    var $parent = cellElement.parent();\r\n                    var $items;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var normalizedSearchText = stringNormalizer(searchText);\r\n                    var resultTextNodes = [];\r\n                    if (!$parent.length) {\r\n                        $parent = (0, _renderer.default)(\"<div>\").append(cellElement)\r\n                    } else {\r\n                        if (column) {\r\n                            if (column.groupIndex >= 0 && !column.showWhenGrouped) {\r\n                                $items = cellElement\r\n                            } else {\r\n                                var columnIndex = that._columnsController.getVisibleIndex(column.index);\r\n                                $items = $parent.children(\"td\").eq(columnIndex).find(\"*\")\r\n                            }\r\n                        }\r\n                    }\r\n                    $items = null !== (_$items = $items) && void 0 !== _$items && _$items.length ? $items : $parent.find(\"*\");\r\n                    $items.each(function(_, element) {\r\n                        var $contents = (0, _renderer.default)(element).contents();\r\n                        for (var i = 0; i < $contents.length; i++) {\r\n                            var node = $contents.get(i);\r\n                            if (3 === node.nodeType) {\r\n                                var normalizedText = stringNormalizer(node.textContent || node.nodeValue);\r\n                                if (normalizedText.indexOf(normalizedSearchText) > -1) {\r\n                                    resultTextNodes.push(node)\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    return resultTextNodes\r\n                },\r\n                _highlightSearchTextCore: function($textNode, searchText) {\r\n                    var that = this;\r\n                    var $searchTextSpan = (0, _renderer.default)(\"<span>\").addClass(that.addWidgetPrefix(SEARCH_TEXT_CLASS));\r\n                    var text = $textNode.text();\r\n                    var firstContentElement = $textNode[0];\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var index = stringNormalizer(text).indexOf(stringNormalizer(searchText));\r\n                    if (index >= 0) {\r\n                        if (firstContentElement.textContent) {\r\n                            firstContentElement.textContent = text.substr(0, index)\r\n                        } else {\r\n                            firstContentElement.nodeValue = text.substr(0, index)\r\n                        }\r\n                        $textNode.after($searchTextSpan.text(text.substr(index, searchText.length)));\r\n                        $textNode = (0, _renderer.default)(_dom_adapter.default.createTextNode(text.substr(index + searchText.length))).insertAfter($searchTextSpan);\r\n                        return that._highlightSearchTextCore($textNode, searchText)\r\n                    }\r\n                },\r\n                _highlightSearchText: function(cellElement, isEquals, column) {\r\n                    var that = this;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var searchText = that.option(\"searchPanel.text\");\r\n                    if (isEquals && column) {\r\n                        searchText = searchText && that._getFormattedSearchText(column, searchText)\r\n                    }\r\n                    if (searchText && that.option(\"searchPanel.highlightSearchText\")) {\r\n                        var textNodes = that._findHighlightingTextNodes(column, cellElement, searchText);\r\n                        textNodes.forEach(function(textNode) {\r\n                            if (isEquals) {\r\n                                if (stringNormalizer((0, _renderer.default)(textNode).text()) === stringNormalizer(searchText)) {\r\n                                    (0, _renderer.default)(textNode).replaceWith((0, _renderer.default)(\"<span>\").addClass(that.addWidgetPrefix(SEARCH_TEXT_CLASS)).text((0, _renderer.default)(textNode).text()))\r\n                                }\r\n                            } else {\r\n                                that._highlightSearchTextCore((0, _renderer.default)(textNode), searchText)\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"rowTemplate\")) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            clearTimeout(this._highlightTimer);\r\n                            this._highlightTimer = setTimeout(function() {\r\n                                this._highlightSearchText(this.getTableElement())\r\n                            }.bind(this))\r\n                        } else {\r\n                            this._highlightSearchText(this.getTableElement())\r\n                        }\r\n                    }\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    var column = parameters.column;\r\n                    var dataType = column.lookup && column.lookup.dataType || column.dataType;\r\n                    var isEquals = \"string\" !== dataType;\r\n                    if (allowSearch(column) && !parameters.isOnForm) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            if (!this._searchParams.length) {\r\n                                clearTimeout(this._highlightTimer);\r\n                                this._highlightTimer = setTimeout(function() {\r\n                                    this._searchParams.forEach(function(params) {\r\n                                        this._highlightSearchText.apply(this, params)\r\n                                    }.bind(this));\r\n                                    this._searchParams = []\r\n                                }.bind(this))\r\n                            }\r\n                            this._searchParams.push([$cell, isEquals, column])\r\n                        } else {\r\n                            this._highlightSearchText($cell, isEquals, column)\r\n                        }\r\n                    }\r\n                    this.callBase($cell, parameters)\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._highlightTimer);\r\n                    this.callBase()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.selection.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiData_grid = _interopRequireDefault(require(\"../data_grid/ui.data_grid.core\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _support = require(\"../../core/utils/support\");\r\nvar _click = require(\"../../events/click\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _hold = _interopRequireDefault(require(\"../../events/hold\"));\r\nvar _selection = _interopRequireDefault(require(\"../selection/selection\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar ROW_SELECTION_CLASS = \"dx-selection\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-select-checkbox\";\r\nvar CHECKBOXES_HIDDEN_CLASS = \"dx-select-checkboxes-hidden\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar SHOW_CHECKBOXES_MODE = \"selection.showCheckBoxesMode\";\r\nvar SELECTION_MODE = \"selection.mode\";\r\nvar processLongTap = function(that, dxEvent) {\r\n    var selectionController = that.getController(\"selection\");\r\n    var rowsView = that.getView(\"rowsView\");\r\n    var $row = (0, _renderer.default)(dxEvent.target).closest(\".\" + DATA_ROW_CLASS);\r\n    var rowIndex = rowsView.getRowIndex($row);\r\n    if (rowIndex < 0) {\r\n        return\r\n    }\r\n    if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n        if (selectionController.isSelectionWithCheckboxes()) {\r\n            selectionController.stopSelectionWithCheckboxes()\r\n        } else {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n    } else {\r\n        if (\"onClick\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n        if (\"always\" !== that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.changeItemSelection(rowIndex, {\r\n                control: true\r\n            })\r\n        }\r\n    }\r\n};\r\nvar SelectionController = _uiData_grid.default.Controller.inherit(function() {\r\n    var isSeveralRowsSelected = function(that, selectionFilter) {\r\n        var keyIndex = 0;\r\n        var store = that._dataController.store();\r\n        var key = store && store.key();\r\n        var isComplexKey = Array.isArray(key);\r\n        if (!selectionFilter.length) {\r\n            return false\r\n        }\r\n        if (isComplexKey && Array.isArray(selectionFilter[0]) && \"and\" === selectionFilter[1]) {\r\n            for (var i = 0; i < selectionFilter.length; i++) {\r\n                if (Array.isArray(selectionFilter[i])) {\r\n                    if (selectionFilter[i][0] !== key[keyIndex] || \"=\" !== selectionFilter[i][1]) {\r\n                        return true\r\n                    }\r\n                    keyIndex++\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        return key !== selectionFilter[0]\r\n    };\r\n    var selectionCellTemplate = function(container, options) {\r\n        var component = options.component;\r\n        var rowsView = component.getView(\"rowsView\");\r\n        if (component.option(\"renderAsync\") && !component.option(\"selection.deferred\")) {\r\n            options.value = component.isRowSelected(options.row.key)\r\n        }\r\n        rowsView.renderSelectCheckBoxContainer((0, _renderer.default)(container), options)\r\n    };\r\n    var selectionHeaderTemplate = function(container, options) {\r\n        var column = options.column;\r\n        var $cellElement = (0, _renderer.default)(container);\r\n        var columnHeadersView = options.component.getView(\"columnHeadersView\");\r\n        $cellElement.addClass(EDITOR_CELL_CLASS);\r\n        columnHeadersView._renderSelectAllCheckBox($cellElement, column);\r\n        columnHeadersView._attachSelectAllCheckBoxClickEvent($cellElement)\r\n    };\r\n    return {\r\n        init: function() {\r\n            this._dataController = this.getController(\"data\");\r\n            this._selectionMode = this.option(SELECTION_MODE);\r\n            this._isSelectionWithCheckboxes = false;\r\n            this._selection = this._createSelection();\r\n            this._updateSelectColumn();\r\n            this.createAction(\"onSelectionChanged\", {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            })\r\n        },\r\n        _getSelectionConfig: function() {\r\n            var that = this;\r\n            var dataController = that._dataController;\r\n            var selectionOptions = that.option(\"selection\") || {};\r\n            return {\r\n                selectedKeys: that.option(\"selectedRowKeys\"),\r\n                mode: that._selectionMode,\r\n                deferred: selectionOptions.deferred,\r\n                maxFilterLengthInRequest: selectionOptions.maxFilterLengthInRequest,\r\n                selectionFilter: that.option(\"selectionFilter\"),\r\n                ignoreDisabledItems: true,\r\n                key: function() {\r\n                    return dataController && dataController.key()\r\n                },\r\n                keyOf: function(item) {\r\n                    return dataController && dataController.keyOf(item)\r\n                },\r\n                dataFields: function() {\r\n                    return dataController.dataSource() && dataController.dataSource().select()\r\n                },\r\n                load: function(options) {\r\n                    return dataController.dataSource() && dataController.dataSource().load(options) || (new _deferred.Deferred).resolve([])\r\n                },\r\n                plainItems: function() {\r\n                    return dataController.items(true)\r\n                },\r\n                isItemSelected: function(item) {\r\n                    return item.selected\r\n                },\r\n                isSelectableItem: function(item) {\r\n                    return item && \"data\" === item.rowType && !item.isNewRow\r\n                },\r\n                getItemData: function(item) {\r\n                    return item && (item.oldData || item.data || item)\r\n                },\r\n                filter: function() {\r\n                    return dataController.getCombinedFilter(true)\r\n                },\r\n                totalCount: function() {\r\n                    return dataController.totalCount()\r\n                },\r\n                onSelectionChanged: that._updateSelectedItems.bind(this)\r\n            }\r\n        },\r\n        _updateSelectColumn: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var isSelectColumnVisible = this.isSelectColumnVisible();\r\n            columnsController.addCommandColumn({\r\n                type: \"selection\",\r\n                command: \"select\",\r\n                visible: isSelectColumnVisible,\r\n                visibleIndex: -1,\r\n                dataType: \"boolean\",\r\n                alignment: \"center\",\r\n                cssClass: COMMAND_SELECT_CLASS,\r\n                width: \"auto\",\r\n                cellTemplate: selectionCellTemplate,\r\n                headerCellTemplate: selectionHeaderTemplate\r\n            });\r\n            columnsController.columnOption(\"command:select\", \"visible\", isSelectColumnVisible)\r\n        },\r\n        _createSelection: function() {\r\n            var options = this._getSelectionConfig();\r\n            return new _selection.default(options)\r\n        },\r\n        _fireSelectionChanged: function(options) {\r\n            if (options) {\r\n                this.executeAction(\"onSelectionChanged\", options)\r\n            }\r\n            var argument = this.option(\"selection.deferred\") ? {\r\n                selectionFilter: this.option(\"selectionFilter\")\r\n            } : {\r\n                selectedRowKeys: this.option(\"selectedRowKeys\")\r\n            };\r\n            this.selectionChanged.fire(argument)\r\n        },\r\n        _updateCheckboxesState: function(options) {\r\n            var isDeferredMode = options.isDeferredMode;\r\n            var selectionFilter = options.selectionFilter;\r\n            var selectedItemKeys = options.selectedItemKeys;\r\n            var removedItemKeys = options.removedItemKeys;\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                if (isDeferredMode ? selectionFilter && isSeveralRowsSelected(this, selectionFilter) : selectedItemKeys.length > 1) {\r\n                    this.startSelectionWithCheckboxes()\r\n                } else {\r\n                    if (isDeferredMode ? selectionFilter && !selectionFilter.length : 0 === selectedItemKeys.length && removedItemKeys.length) {\r\n                        this.stopSelectionWithCheckboxes()\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _updateSelectedItems: function(args) {\r\n            var that = this;\r\n            var selectionChangedOptions;\r\n            var isDeferredMode = that.option(\"selection.deferred\");\r\n            var selectionFilter = that._selection.selectionFilter();\r\n            var dataController = that._dataController;\r\n            var items = dataController.items();\r\n            if (!items) {\r\n                return\r\n            }\r\n            var isSelectionWithCheckboxes = that.isSelectionWithCheckboxes();\r\n            var changedItemIndexes = that.getChangedItemIndexes(items);\r\n            that._updateCheckboxesState({\r\n                selectedItemKeys: args.selectedItemKeys,\r\n                removedItemKeys: args.removedItemKeys,\r\n                selectionFilter: selectionFilter,\r\n                isDeferredMode: isDeferredMode\r\n            });\r\n            if (changedItemIndexes.length || isSelectionWithCheckboxes !== that.isSelectionWithCheckboxes()) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateSelection\",\r\n                    itemIndexes: changedItemIndexes\r\n                })\r\n            }\r\n            if (isDeferredMode) {\r\n                that.option(\"selectionFilter\", selectionFilter);\r\n                selectionChangedOptions = {}\r\n            } else {\r\n                if (args.addedItemKeys.length || args.removedItemKeys.length) {\r\n                    that._selectedItemsInternalChange = true;\r\n                    that.option(\"selectedRowKeys\", args.selectedItemKeys.slice(0));\r\n                    that._selectedItemsInternalChange = false;\r\n                    selectionChangedOptions = {\r\n                        selectedRowsData: args.selectedItems.slice(0),\r\n                        selectedRowKeys: args.selectedItemKeys.slice(0),\r\n                        currentSelectedRowKeys: args.addedItemKeys.slice(0),\r\n                        currentDeselectedRowKeys: args.removedItemKeys.slice(0)\r\n                    }\r\n                }\r\n            }\r\n            that._fireSelectionChanged(selectionChangedOptions)\r\n        },\r\n        getChangedItemIndexes: function(items) {\r\n            var that = this;\r\n            var itemIndexes = [];\r\n            var isDeferredSelection = this.option(\"selection.deferred\");\r\n            for (var i = 0, length = items.length; i < length; i++) {\r\n                var row = items[i];\r\n                var isItemSelected = that.isRowSelected(isDeferredSelection ? row.data : row.key);\r\n                if (that._selection.isDataItem(row) && row.isSelected !== isItemSelected) {\r\n                    itemIndexes.push(i)\r\n                }\r\n            }\r\n            return itemIndexes\r\n        },\r\n        callbackNames: function() {\r\n            return [\"selectionChanged\"]\r\n        },\r\n        optionChanged: function(args) {\r\n            var _this = this;\r\n            this.callBase(args);\r\n            switch (args.name) {\r\n                case \"selection\":\r\n                    var oldSelectionMode = this._selectionMode;\r\n                    this.init();\r\n                    if (\"selection.showCheckBoxesMode\" !== args.fullName) {\r\n                        var selectionMode = this._selectionMode;\r\n                        var selectedRowKeys = this.option(\"selectedRowKeys\");\r\n                        if (oldSelectionMode !== selectionMode) {\r\n                            if (\"single\" === selectionMode) {\r\n                                if (selectedRowKeys.length > 1) {\r\n                                    selectedRowKeys = [selectedRowKeys[0]]\r\n                                }\r\n                            } else {\r\n                                if (\"multiple\" !== selectionMode) {\r\n                                    selectedRowKeys = []\r\n                                }\r\n                            }\r\n                        }\r\n                        this.selectRows(selectedRowKeys).always(function() {\r\n                            _this._fireSelectionChanged()\r\n                        })\r\n                    }\r\n                    this.getController(\"columns\").updateColumns();\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectionFilter\":\r\n                    this._selection.selectionFilter(args.value);\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectedRowKeys\":\r\n                    var value = args.value || [];\r\n                    if (Array.isArray(value) && !this._selectedItemsInternalChange && (this.component.getDataSource() || !value.length)) {\r\n                        this.selectRows(value)\r\n                    }\r\n                    args.handled = true\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"selectRows\", \"deselectRows\", \"selectRowsByIndexes\", \"getSelectedRowKeys\", \"getSelectedRowsData\", \"clearSelection\", \"selectAll\", \"deselectAll\", \"startSelectionWithCheckboxes\", \"stopSelectionWithCheckboxes\", \"isRowSelected\"]\r\n        },\r\n        isRowSelected: function(arg) {\r\n            return this._selection.isItemSelected(arg)\r\n        },\r\n        isSelectColumnVisible: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || \"onClick\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        _isOnePageSelectAll: function() {\r\n            return \"page\" === this.option(\"selection.selectAllMode\")\r\n        },\r\n        isSelectAll: function() {\r\n            return this._selection.getSelectAllState(this._isOnePageSelectAll())\r\n        },\r\n        selectAll: function() {\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                this.startSelectionWithCheckboxes()\r\n            }\r\n            return this._selection.selectAll(this._isOnePageSelectAll())\r\n        },\r\n        deselectAll: function() {\r\n            return this._selection.deselectAll(this._isOnePageSelectAll())\r\n        },\r\n        clearSelection: function() {\r\n            return this.selectedItemKeys([])\r\n        },\r\n        refresh: function() {\r\n            var selectedRowKeys = this.option(\"selectedRowKeys\") || [];\r\n            if (!this.option(\"selection.deferred\") && selectedRowKeys.length) {\r\n                return this.selectedItemKeys(selectedRowKeys)\r\n            }\r\n            return (new _deferred.Deferred).resolve().promise()\r\n        },\r\n        selectedItemKeys: function(value, preserve, isDeselect, isSelectAll) {\r\n            return this._selection.selectedItemKeys(value, preserve, isDeselect, isSelectAll)\r\n        },\r\n        getSelectedRowKeys: function() {\r\n            return this._selection.getSelectedItemKeys()\r\n        },\r\n        selectRows: function(keys, preserve) {\r\n            return this.selectedItemKeys(keys, preserve)\r\n        },\r\n        deselectRows: function(keys) {\r\n            return this.selectedItemKeys(keys, true, true)\r\n        },\r\n        selectRowsByIndexes: function(indexes) {\r\n            var items = this._dataController.items();\r\n            var keys = [];\r\n            if (!Array.isArray(indexes)) {\r\n                indexes = Array.prototype.slice.call(arguments, 0)\r\n            }(0, _iterator.each)(indexes, function() {\r\n                var item = items[this];\r\n                if (item && \"data\" === item.rowType) {\r\n                    keys.push(item.key)\r\n                }\r\n            });\r\n            return this.selectRows(keys)\r\n        },\r\n        getSelectedRowsData: function() {\r\n            return this._selection.getSelectedItems()\r\n        },\r\n        changeItemSelection: function(itemIndex, keys) {\r\n            keys = keys || {};\r\n            if (this.isSelectionWithCheckboxes()) {\r\n                keys.control = true\r\n            }\r\n            return this._selection.changeItemSelection(this._dataController.getRowIndexDelta() + itemIndex, keys)\r\n        },\r\n        focusedItemIndex: function(itemIndex) {\r\n            var that = this;\r\n            if ((0, _type.isDefined)(itemIndex)) {\r\n                that._selection._focusedItemIndex = itemIndex\r\n            } else {\r\n                return that._selection._focusedItemIndex\r\n            }\r\n        },\r\n        isSelectionWithCheckboxes: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        startSelectionWithCheckboxes: function() {\r\n            var that = this;\r\n            if (\"multiple\" === that.option(SELECTION_MODE) && !that.isSelectionWithCheckboxes()) {\r\n                that._isSelectionWithCheckboxes = true;\r\n                that._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n        stopSelectionWithCheckboxes: function() {\r\n            var that = this;\r\n            if (that._isSelectionWithCheckboxes) {\r\n                that._isSelectionWithCheckboxes = false;\r\n                that._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n    }\r\n}());\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            selection: {\r\n                mode: \"none\",\r\n                showCheckBoxesMode: \"onClick\",\r\n                allowSelectAll: true,\r\n                selectAllMode: \"allPages\",\r\n                maxFilterLengthInRequest: 1500,\r\n                deferred: false\r\n            },\r\n            selectionFilter: [],\r\n            selectedRowKeys: []\r\n        }\r\n    },\r\n    controllers: {\r\n        selection: SelectionController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isDeferredMode = this.option(\"selection.deferred\");\r\n                    this.callBase.apply(this, arguments);\r\n                    if (isDeferredMode) {\r\n                        selectionController._updateCheckboxesState({\r\n                            isDeferredMode: true,\r\n                            selectionFilter: this.option(\"selectionFilter\")\r\n                        })\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var that = this;\r\n                    return that.callBase().done(function() {\r\n                        that.getController(\"selection\").refresh()\r\n                    })\r\n                },\r\n                _processDataItem: function(item, options) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var hasSelectColumn = selectionController.isSelectColumnVisible();\r\n                    var isDeferredSelection = options.isDeferredSelection = void 0 === options.isDeferredSelection ? this.option(\"selection.deferred\") : options.isDeferredSelection;\r\n                    var dataItem = this.callBase.apply(this, arguments);\r\n                    dataItem.isSelected = selectionController.isRowSelected(isDeferredSelection ? dataItem.data : dataItem.key);\r\n                    if (hasSelectColumn && dataItem.values) {\r\n                        for (var i = 0; i < options.visibleColumns.length; i++) {\r\n                            if (\"select\" === options.visibleColumns[i].command) {\r\n                                dataItem.values[i] = dataItem.isSelected;\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataItem\r\n                },\r\n                refresh: function(options) {\r\n                    var that = this;\r\n                    var d = new _deferred.Deferred;\r\n                    this.callBase.apply(this, arguments).done(function() {\r\n                        if (!options || options.selection) {\r\n                            that.getController(\"selection\").refresh().done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            d.resolve()\r\n                        }\r\n                    }).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if ((!e || \"refresh\" === e.changeType) && !this._repaintChangesOnly) {\r\n                        this.getController(\"selection\").focusedItemIndex(-1)\r\n                    }\r\n                },\r\n                _applyChange: function(change) {\r\n                    var _this2 = this;\r\n                    if (change && \"updateSelection\" === change.changeType) {\r\n                        change.items.forEach(function(item, index) {\r\n                            var currentItem = _this2._items[index];\r\n                            if (currentItem) {\r\n                                currentItem.isSelected = item.isSelected;\r\n                                currentItem.values = item.values\r\n                            }\r\n                        });\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    var isUpdateSelection = changes.length > 1 && changes.every(function(change) {\r\n                        return \"updateSelection\" === change.changeType\r\n                    });\r\n                    if (isUpdateSelection) {\r\n                        var itemIndexes = changes.map(function(change) {\r\n                            return change.itemIndexes || []\r\n                        }).reduce(function(a, b) {\r\n                            return a.concat(b)\r\n                        });\r\n                        this._changes = [{\r\n                            changeType: \"updateSelection\",\r\n                            itemIndexes: itemIndexes\r\n                        }]\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                push: function(changes) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var removedKeys = changes.filter(function(change) {\r\n                        return \"remove\" === change.type\r\n                    }).map(function(change) {\r\n                        return change.key\r\n                    });\r\n                    removedKeys.length && this.getController(\"selection\").deselectRows(removedKeys)\r\n                }\r\n            },\r\n            contextMenu: {\r\n                _contextMenuPrepared: function(options) {\r\n                    var dxEvent = options.event;\r\n                    if (dxEvent.originalEvent && \"dxhold\" !== dxEvent.originalEvent.type || options.items && options.items.length > 0) {\r\n                        return\r\n                    }\r\n                    processLongTap(this, dxEvent)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: {\r\n                init: function() {\r\n                    var that = this;\r\n                    that.callBase();\r\n                    that.getController(\"selection\").selectionChanged.add(that._updateSelectAllValue.bind(that))\r\n                },\r\n                _updateSelectAllValue: function() {\r\n                    var that = this;\r\n                    var $element = that.element();\r\n                    var $editor = $element && $element.find(\".\" + SELECT_CHECKBOX_CLASS);\r\n                    if ($element && $editor.length && \"multiple\" === that.option(\"selection.mode\")) {\r\n                        var selectAllValue = that.getController(\"selection\").isSelectAll();\r\n                        var hasSelection = false !== selectAllValue;\r\n                        var isVisible = that.option(\"selection.allowSelectAll\") ? !that.getController(\"data\").isEmpty() : hasSelection;\r\n                        $editor.dxCheckBox(\"instance\").option({\r\n                            visible: isVisible,\r\n                            value: selectAllValue\r\n                        })\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (!e || \"refresh\" === e.changeType) {\r\n                        this._updateSelectAllValue()\r\n                    }\r\n                },\r\n                _renderSelectAllCheckBox: function($container, column) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var isEmptyData = that.getController(\"data\").isEmpty();\r\n                    var groupElement = (0, _renderer.default)(\"<div>\").appendTo($container).addClass(SELECT_CHECKBOX_CLASS);\r\n                    that.setAria(\"label\", _message.default.format(\"dxDataGrid-ariaSelectAll\"), $container);\r\n                    that.getController(\"editorFactory\").createEditor(groupElement, (0, _extend.extend)({}, column, {\r\n                        parentType: \"headerRow\",\r\n                        dataType: \"boolean\",\r\n                        value: selectionController.isSelectAll(),\r\n                        editorOptions: {\r\n                            visible: !isEmptyData && (that.option(\"selection.allowSelectAll\") || false !== selectionController.isSelectAll())\r\n                        },\r\n                        tabIndex: that.option(\"useLegacyKeyboardNavigation\") ? -1 : that.option(\"tabIndex\") || 0,\r\n                        setValue: function(value, e) {\r\n                            var allowSelectAll = that.option(\"selection.allowSelectAll\");\r\n                            e.component.option(\"visible\", allowSelectAll || false !== e.component.option(\"value\"));\r\n                            if (!e.event || selectionController.isSelectAll() === value) {\r\n                                return\r\n                            }\r\n                            if (e.value && !allowSelectAll) {\r\n                                e.component.option(\"value\", false)\r\n                            } else {\r\n                                e.value ? selectionController.selectAll() : selectionController.deselectAll()\r\n                            }\r\n                            e.event.preventDefault()\r\n                        }\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachSelectAllCheckBoxClickEvent: function($element) {\r\n                    _events_engine.default.on($element, _click.name, this.createAction(function(e) {\r\n                        var event = e.event;\r\n                        if (!(0, _renderer.default)(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                            _events_engine.default.trigger((0, _renderer.default)(event.currentTarget).children(\".\" + SELECT_CHECKBOX_CLASS), _click.name)\r\n                        }\r\n                        event.preventDefault()\r\n                    }))\r\n                }\r\n            },\r\n            rowsView: {\r\n                renderSelectCheckBoxContainer: function($container, options) {\r\n                    if (\"data\" === options.rowType && !options.row.isNewRow) {\r\n                        $container.addClass(EDITOR_CELL_CLASS);\r\n                        this._attachCheckBoxClickEvent($container);\r\n                        this.setAria(\"label\", _message.default.format(\"dxDataGrid-ariaSelectRow\"), $container);\r\n                        this._renderSelectCheckBox($container, options)\r\n                    } else {\r\n                        _uiGrid_core.default.setEmptyText($container)\r\n                    }\r\n                },\r\n                _renderSelectCheckBox: function(container, options) {\r\n                    var groupElement = (0, _renderer.default)(\"<div>\").addClass(SELECT_CHECKBOX_CLASS).appendTo(container);\r\n                    this.getController(\"editorFactory\").createEditor(groupElement, (0, _extend.extend)({}, options.column, {\r\n                        parentType: \"dataRow\",\r\n                        dataType: \"boolean\",\r\n                        lookup: null,\r\n                        value: options.value,\r\n                        setValue: function(value, e) {\r\n                            var _e$event;\r\n                            if (\"keydown\" === (null === e || void 0 === e ? void 0 : null === (_e$event = e.event) || void 0 === _e$event ? void 0 : _e$event.type)) {\r\n                                _events_engine.default.trigger(e.element, _click.name, e)\r\n                            }\r\n                        },\r\n                        row: options.row\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachCheckBoxClickEvent: function($element) {\r\n                    _events_engine.default.on($element, _click.name, this.createAction(function(e) {\r\n                        var selectionController = this.getController(\"selection\");\r\n                        var event = e.event;\r\n                        var rowIndex = this.getRowIndex((0, _renderer.default)(event.currentTarget).closest(\".\" + ROW_CLASS));\r\n                        if (rowIndex >= 0) {\r\n                            selectionController.startSelectionWithCheckboxes();\r\n                            selectionController.changeItemSelection(rowIndex, {\r\n                                shift: event.shiftKey\r\n                            });\r\n                            if ((0, _renderer.default)(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                                this.getController(\"data\").updateItems({\r\n                                    changeType: \"updateSelection\",\r\n                                    itemIndexes: [rowIndex]\r\n                                })\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _update: function(change) {\r\n                    var that = this;\r\n                    var tableElements = that.getTableElements();\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        if (tableElements.length > 0) {\r\n                            (0, _iterator.each)(tableElements, function(_, tableElement) {\r\n                                (0, _iterator.each)(change.itemIndexes || [], function(_, index) {\r\n                                    var $row;\r\n                                    if (change.items[index]) {\r\n                                        $row = that._getRowElements((0, _renderer.default)(tableElement)).eq(index);\r\n                                        if ($row.length) {\r\n                                            var isSelected = change.items[index].isSelected;\r\n                                            $row.toggleClass(ROW_SELECTION_CLASS, void 0 === isSelected ? false : isSelected).find(\".\" + SELECT_CHECKBOX_CLASS).dxCheckBox(\"option\", \"value\", isSelected);\r\n                                            that.setAria(\"selected\", isSelected, $row)\r\n                                        }\r\n                                    }\r\n                                })\r\n                            });\r\n                            that._updateCheckboxesClass()\r\n                        }\r\n                    } else {\r\n                        that.callBase(change)\r\n                    }\r\n                },\r\n                _createTable: function() {\r\n                    var that = this;\r\n                    var selectionMode = that.option(\"selection.mode\");\r\n                    var $table = that.callBase.apply(that, arguments);\r\n                    if (\"none\" !== selectionMode) {\r\n                        if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE) || !_support.touch) {\r\n                            _events_engine.default.on($table, (0, _index.addNamespace)(_hold.default.name, \"dxDataGridRowsView\"), \".\" + DATA_ROW_CLASS, that.createAction(function(e) {\r\n                                processLongTap(that.component, e.event);\r\n                                e.event.stopPropagation()\r\n                            }))\r\n                        }\r\n                        _events_engine.default.on($table, \"mousedown selectstart\", that.createAction(function(e) {\r\n                            var event = e.event;\r\n                            if (event.shiftKey) {\r\n                                event.preventDefault()\r\n                            }\r\n                        }))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase(row);\r\n                    if (row) {\r\n                        var isSelected = !!row.isSelected;\r\n                        if (isSelected) {\r\n                            $row.addClass(ROW_SELECTION_CLASS)\r\n                        }\r\n                        this.setAria(\"selected\", isSelected, $row)\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowClick: function(e) {\r\n                    var that = this;\r\n                    var dxEvent = e.event;\r\n                    var isSelectionDisabled = (0, _renderer.default)(dxEvent.target).closest(\".\" + SELECTION_DISABLED_CLASS).length;\r\n                    if (!that.isClickableElement((0, _renderer.default)(dxEvent.target))) {\r\n                        if (!isSelectionDisabled && (\"multiple\" !== that.option(SELECTION_MODE) || \"always\" !== that.option(SHOW_CHECKBOXES_MODE))) {\r\n                            if (that.getController(\"selection\").changeItemSelection(e.rowIndex, {\r\n                                    control: (0, _index.isCommandKeyPressed)(dxEvent),\r\n                                    shift: dxEvent.shiftKey\r\n                                })) {\r\n                                dxEvent.preventDefault();\r\n                                e.handled = true\r\n                            }\r\n                        }\r\n                        that.callBase(e)\r\n                    }\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isCommandSelect = $target.closest(\".\" + COMMAND_SELECT_CLASS).length;\r\n                    return !!isCommandSelect\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateCheckboxesClass()\r\n                },\r\n                _updateCheckboxesClass: function() {\r\n                    var tableElements = this.getTableElements();\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isCheckBoxesHidden = selectionController.isSelectColumnVisible() && !selectionController.isSelectionWithCheckboxes();\r\n                    (0, _iterator.each)(tableElements, function(_, tableElement) {\r\n                        (0, _renderer.default)(tableElement).toggleClass(CHECKBOXES_HIDDEN_CLASS, isCheckBoxesHidden)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.sorting.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.sorting_mixin\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _index = require(\"../../events/utils/index\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COLUMN_HEADERS_VIEW_NAMESPACE = \"dxDataGridColumnHeadersView\";\r\nvar ColumnHeadersViewSortingExtender = (0, _extend.extend)({}, _uiGrid_core.default, {\r\n    _createRow: function(row) {\r\n        var _this = this;\r\n        var $row = this.callBase(row);\r\n        if (\"header\" === row.rowType) {\r\n            _events_engine.default.on($row, (0, _index.addNamespace)(_click.name, COLUMN_HEADERS_VIEW_NAMESPACE), \"td\", this.createAction(function(e) {\r\n                _this._processHeaderAction(e.event, $row)\r\n            }))\r\n        }\r\n        return $row\r\n    },\r\n    _processHeaderAction: function(event, $row) {\r\n        if ((0, _renderer.default)(event.currentTarget).parent().get(0) !== $row.get(0)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var keyName = null;\r\n        var $cellElementFromEvent = (0, _renderer.default)(event.currentTarget);\r\n        var rowIndex = $cellElementFromEvent.parent().index();\r\n        var columnIndex = -1;\r\n        [].slice.call(that.getCellElements(rowIndex)).some(function($cellElement, index) {\r\n            if ($cellElement === $cellElementFromEvent.get(0)) {\r\n                columnIndex = index;\r\n                return true\r\n            }\r\n        });\r\n        var visibleColumns = that._columnsController.getVisibleColumns(rowIndex);\r\n        var column = visibleColumns[columnIndex];\r\n        var editingController = that.getController(\"editing\");\r\n        var editingMode = that.option(\"editing.mode\");\r\n        var isCellEditing = editingController && editingController.isEditing() && (\"batch\" === editingMode || \"cell\" === editingMode);\r\n        if (isCellEditing || !that._isSortableElement((0, _renderer.default)(event.target))) {\r\n            return\r\n        }\r\n        if (column && !(0, _type.isDefined)(column.groupIndex) && !column.command) {\r\n            if (event.shiftKey) {\r\n                keyName = \"shift\"\r\n            } else {\r\n                if (event.ctrlKey) {\r\n                    keyName = \"ctrl\"\r\n                }\r\n            }\r\n            setTimeout(function() {\r\n                that._columnsController.changeSortOrder(column.index, keyName)\r\n            })\r\n        }\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        if (!column.command && \"header\" === options.rowType) {\r\n            that._applyColumnState({\r\n                name: \"sort\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: that.option(\"showColumnLines\")\r\n            })\r\n        }\r\n        that.callBase($cell, options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var changeTypes = e.changeTypes;\r\n        if (1 === changeTypes.length && changeTypes.sorting) {\r\n            this._updateIndicators(\"sort\");\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                that._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                that.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar HeaderPanelSortingExtender = (0, _extend.extend)({}, _uiGrid_core.default, {\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase.apply(that, arguments);\r\n        _events_engine.default.on($item, (0, _index.addNamespace)(_click.name, \"dxDataGridHeaderPanel\"), that.createAction(function() {\r\n            that._processGroupItemAction(groupColumn.index)\r\n        }));\r\n        that._applyColumnState({\r\n            name: \"sort\",\r\n            rootElement: $item,\r\n            column: {\r\n                alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                allowSorting: groupColumn.allowSorting,\r\n                sortOrder: \"desc\" === groupColumn.sortOrder ? \"desc\" : \"asc\"\r\n            },\r\n            showColumnLines: true\r\n        });\r\n        return $item\r\n    },\r\n    _processGroupItemAction: function(groupColumnIndex) {\r\n        var _this2 = this;\r\n        setTimeout(function() {\r\n            return _this2.getController(\"columns\").changeSortOrder(groupColumnIndex)\r\n        })\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                that._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                that.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            sorting: {\r\n                mode: \"single\",\r\n                ascendingText: _message.default.format(\"dxDataGrid-sortingAscendingText\"),\r\n                descendingText: _message.default.format(\"dxDataGrid-sortingDescendingText\"),\r\n                clearText: _message.default.format(\"dxDataGrid-sortingClearText\"),\r\n                showSortIndexes: true\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewSortingExtender,\r\n            headerPanel: HeaderPanelSortingExtender\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.sorting_mixin.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SORT_CLASS = \"dx-sort\";\r\nvar SORT_NONE_CLASS = \"dx-sort-none\";\r\nvar SORTUP_CLASS = \"dx-sort-up\";\r\nvar SORTDOWN_CLASS = \"dx-sort-down\";\r\nvar SORT_INDEX_CLASS = \"dx-sort-index\";\r\nvar SORT_INDEX_ICON_CLASS = \"dx-sort-index-icon\";\r\nvar HEADERS_ACTION_CLASS = \"action\";\r\nvar _default = {\r\n    _applyColumnState: function(options) {\r\n        var that = this;\r\n        var ariaSortState;\r\n        var $sortIndicator;\r\n        var sortingMode = that.option(\"sorting.mode\");\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        var $indicatorsContainer = that._getIndicatorContainer(rootElement);\r\n        if (\"sort\" === options.name) {\r\n            rootElement.find(\".\" + SORT_CLASS).remove();\r\n            !$indicatorsContainer.children().length && $indicatorsContainer.remove();\r\n            var isSortingAllowed = \"none\" !== sortingMode && column.allowSorting;\r\n            if (!(0, _type.isDefined)(column.groupIndex) && (isSortingAllowed || (0, _type.isDefined)(column.sortOrder))) {\r\n                ariaSortState = \"asc\" === column.sortOrder ? \"ascending\" : \"descending\";\r\n                $sortIndicator = that.callBase(options).toggleClass(SORTUP_CLASS, \"asc\" === column.sortOrder).toggleClass(SORTDOWN_CLASS, \"desc\" === column.sortOrder);\r\n                var hasSeveralSortIndexes = that.getController && !!that.getController(\"columns\").columnOption(\"sortIndex:1\");\r\n                if (hasSeveralSortIndexes && that.option(\"sorting.showSortIndexes\") && column.sortIndex >= 0) {\r\n                    (0, _renderer.default)(\"<span>\").addClass(SORT_INDEX_ICON_CLASS).text(column.sortIndex + 1).appendTo($sortIndicator);\r\n                    $sortIndicator.addClass(SORT_INDEX_CLASS)\r\n                }\r\n                if (isSortingAllowed) {\r\n                    options.rootElement.addClass(that.addWidgetPrefix(HEADERS_ACTION_CLASS))\r\n                }\r\n            }\r\n            if (!(0, _type.isDefined)(column.sortOrder)) {\r\n                that.setAria(\"sort\", \"none\", rootElement)\r\n            } else {\r\n                that.setAria(\"sort\", ariaSortState, rootElement)\r\n            }\r\n            return $sortIndicator\r\n        } else {\r\n            return that.callBase(options)\r\n        }\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"sort\" === name) {\r\n            return SORT_CLASS\r\n        } else {\r\n            if (\"sortIndex\" === name) {\r\n                return SORT_INDEX_ICON_CLASS\r\n            }\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var column = options.column;\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"sort\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if (!(0, _type.isDefined)(column.sortOrder)) {\r\n                $indicator && $indicator.addClass(SORT_NONE_CLASS)\r\n            }\r\n            if ($container.children().length && (!rtlEnabled && \"left\" === options.columnAlignment || rtlEnabled && \"right\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (\"sort\" === indicatorName && (0, _type.isDefined)(column.groupIndex)) {\r\n            return\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _getIndicatorElements: function($cell, returnAll) {\r\n        var $indicatorElements = this.callBase($cell);\r\n        return returnAll ? $indicatorElements : $indicatorElements && $indicatorElements.not(\".\" + SORT_NONE_CLASS)\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.state_storing.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiGrid_core = require(\"./ui.grid_core.state_storing_core\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar getDataState = function(that) {\r\n    var pagerView = that.getView(\"pagerView\");\r\n    var dataController = that.getController(\"data\");\r\n    var state = {\r\n        allowedPageSizes: pagerView ? pagerView.getPageSizes() : void 0,\r\n        filterPanel: {\r\n            filterEnabled: that.option(\"filterPanel.filterEnabled\")\r\n        },\r\n        filterValue: that.option(\"filterValue\"),\r\n        focusedRowKey: that.option(\"focusedRowEnabled\") ? that.option(\"focusedRowKey\") : void 0\r\n    };\r\n    return (0, _extend.extend)(state, dataController.getUserState())\r\n};\r\nvar processLoadState = function(that) {\r\n    var columnsController = that.getController(\"columns\");\r\n    var selectionController = that.getController(\"selection\");\r\n    var exportController = that.getController(\"export\");\r\n    var dataController = that.getController(\"data\");\r\n    if (columnsController) {\r\n        columnsController.columnsChanged.add(function() {\r\n            that.updateState({\r\n                columns: columnsController.getUserState()\r\n            })\r\n        })\r\n    }\r\n    if (selectionController) {\r\n        selectionController.selectionChanged.add(function(e) {\r\n            that.updateState({\r\n                selectedRowKeys: e.selectedRowKeys,\r\n                selectionFilter: e.selectionFilter\r\n            })\r\n        })\r\n    }\r\n    if (dataController) {\r\n        that._initialPageSize = that.option(\"paging.pageSize\");\r\n        that._initialFilterValue = that.option(\"filterValue\");\r\n        dataController.changed.add(function() {\r\n            var state = getDataState(that);\r\n            that.updateState(state)\r\n        })\r\n    }\r\n    if (exportController) {\r\n        exportController.selectionOnlyChanged.add(function() {\r\n            that.updateState({\r\n                exportSelectionOnly: exportController.selectionOnly()\r\n            })\r\n        })\r\n    }\r\n};\r\nvar DEFAULT_FILTER_VALUE = null;\r\nvar getFilterValue = function(that, state) {\r\n    var filterSyncController = that.getController(\"filterSync\");\r\n    var columnsController = that.getController(\"columns\");\r\n    var hasFilterState = state.columns || void 0 !== state.filterValue;\r\n    if (filterSyncController) {\r\n        if (hasFilterState) {\r\n            return state.filterValue || filterSyncController.getFilterValueFromColumns(state.columns)\r\n        } else {\r\n            return that._initialFilterValue || filterSyncController.getFilterValueFromColumns(columnsController.getColumns())\r\n        }\r\n    }\r\n    return DEFAULT_FILTER_VALUE\r\n};\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            stateStoring: {\r\n                enabled: false,\r\n                storageKey: null,\r\n                type: \"localStorage\",\r\n                customLoad: null,\r\n                customSave: null,\r\n                savingTimeout: 2e3\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        stateStoring: _uiGrid_core.StateStoringController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    dataController.stateLoaded.add(function() {\r\n                        if (dataController.isLoaded() && !dataController.getDataSource()) {\r\n                            that.setLoading(false);\r\n                            that.renderNoDataText();\r\n                            var columnHeadersView = that.component.getView(\"columnHeadersView\");\r\n                            columnHeadersView && columnHeadersView.render();\r\n                            that.component._fireContentReadyAction()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            stateStoring: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    processLoadState(this)\r\n                },\r\n                isLoading: function() {\r\n                    return this.callBase() || this.getController(\"data\").isStateLoading()\r\n                },\r\n                state: function(_state) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (void 0 !== _state) {\r\n                        this.applyState((0, _extend.extend)({}, _state))\r\n                    }\r\n                    return result\r\n                },\r\n                updateState: function(state) {\r\n                    if (this.isEnabled()) {\r\n                        var oldState = this.state();\r\n                        var newState = (0, _extend.extend)({}, oldState, state);\r\n                        var oldStateHash = (0, _common.getKeyHash)(oldState);\r\n                        var newStateHash = (0, _common.getKeyHash)(newState);\r\n                        if (!(0, _common.equalByValue)(oldStateHash, newStateHash)) {\r\n                            (0, _extend.extend)(this._state, state);\r\n                            this.save()\r\n                        }\r\n                    } else {\r\n                        (0, _extend.extend)(this._state, state)\r\n                    }\r\n                },\r\n                applyState: function(state) {\r\n                    var that = this;\r\n                    var allowedPageSizes = state.allowedPageSizes;\r\n                    var searchText = state.searchText;\r\n                    var selectedRowKeys = state.selectedRowKeys;\r\n                    var selectionFilter = state.selectionFilter;\r\n                    var exportController = that.getController(\"export\");\r\n                    var columnsController = that.getController(\"columns\");\r\n                    var dataController = that.getController(\"data\");\r\n                    var scrollingMode = that.option(\"scrolling.mode\");\r\n                    var isVirtualScrollingMode = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var showPageSizeSelector = true === that.option(\"pager.visible\") && that.option(\"pager.showPageSizeSelector\");\r\n                    that.component.beginUpdate();\r\n                    if (columnsController) {\r\n                        columnsController.setUserState(state.columns)\r\n                    }\r\n                    if (exportController) {\r\n                        exportController.selectionOnly(state.exportSelectionOnly)\r\n                    }\r\n                    if (selectedRowKeys) {\r\n                        that.option(\"selectedRowKeys\", selectedRowKeys)\r\n                    }\r\n                    that.option(\"selectionFilter\", selectionFilter);\r\n                    if (allowedPageSizes && \"auto\" === that.option(\"pager.allowedPageSizes\")) {\r\n                        that.option(\"pager\").allowedPageSizes = allowedPageSizes\r\n                    }\r\n                    if (that.option(\"focusedRowEnabled\") && void 0 !== state.focusedRowKey) {\r\n                        that.option(\"focusedRowKey\", state.focusedRowKey)\r\n                    }\r\n                    that.component.endUpdate();\r\n                    searchText && that.option(\"searchPanel.text\", searchText);\r\n                    that.option(\"filterValue\", getFilterValue(that, state));\r\n                    that.option(\"filterPanel.filterEnabled\", state.filterPanel ? state.filterPanel.filterEnabled : true);\r\n                    that.option(\"paging.pageSize\", (!isVirtualScrollingMode || showPageSizeSelector) && (0, _type.isDefined)(state.pageSize) ? state.pageSize : that._initialPageSize);\r\n                    that.option(\"paging.pageIndex\", state.pageIndex || 0);\r\n                    dataController && dataController.reset()\r\n                }\r\n            },\r\n            columns: {\r\n                getVisibleColumns: function() {\r\n                    var visibleColumns = this.callBase.apply(this, arguments);\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return stateStoringController.isEnabled() && !stateStoringController.isLoaded() ? [] : visibleColumns\r\n                }\r\n            },\r\n            data: {\r\n                callbackNames: function() {\r\n                    return this.callBase().concat([\"stateLoaded\"])\r\n                },\r\n                _refreshDataSource: function() {\r\n                    var _this = this;\r\n                    var callBase = this.callBase;\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\r\n                        clearTimeout(this._restoreStateTimeoutID);\r\n                        var deferred = new _deferred.Deferred;\r\n                        this._restoreStateTimeoutID = setTimeout(function() {\r\n                            stateStoringController.load().always(function() {\r\n                                _this._restoreStateTimeoutID = null\r\n                            }).done(function() {\r\n                                callBase.call(_this);\r\n                                _this.stateLoaded.fire();\r\n                                deferred.resolve()\r\n                            }).fail(function(error) {\r\n                                _this.stateLoaded.fire();\r\n                                _this._handleLoadError(error || \"Unknown error\");\r\n                                deferred.reject()\r\n                            })\r\n                        });\r\n                        return deferred.promise()\r\n                    } else {\r\n                        if (!this.isStateLoading()) {\r\n                            callBase.call(this)\r\n                        }\r\n                    }\r\n                },\r\n                isLoading: function() {\r\n                    var that = this;\r\n                    var stateStoringController = that.getController(\"stateStoring\");\r\n                    return this.callBase() || stateStoringController.isLoading()\r\n                },\r\n                isStateLoading: function() {\r\n                    return (0, _type.isDefined)(this._restoreStateTimeoutID)\r\n                },\r\n                isLoaded: function() {\r\n                    return this.callBase() && !this.isStateLoading()\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._restoreStateTimeoutID);\r\n                    this.callBase()\r\n                }\r\n            },\r\n            selection: {\r\n                _fireSelectionChanged: function(options) {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    var isDeferredSelection = this.option(\"selection.deferred\");\r\n                    if (stateStoringController.isLoading() && isDeferredSelection) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.state_storing_core.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.StateStoringController = void 0;\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _storage = require(\"../../core/utils/storage\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\r\nvar parseDates = function parseDates(state) {\r\n    if (!state) {\r\n        return\r\n    }(0, _iterator.each)(state, function(key, value) {\r\n        if ((0, _type.isPlainObject)(value) || Array.isArray(value)) {\r\n            parseDates(value)\r\n        } else {\r\n            if (\"string\" === typeof value) {\r\n                var date = DATE_REGEX.exec(value);\r\n                if (date) {\r\n                    state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]))\r\n                }\r\n            }\r\n        }\r\n    })\r\n};\r\nvar StateStoringController = _uiGrid_core.default.ViewController.inherit(function() {\r\n    var getStorage = function(options) {\r\n        var storage = \"sessionStorage\" === options.type ? (0, _storage.sessionStorage)() : (0, _window.getWindow)().localStorage;\r\n        if (!storage) {\r\n            if (\"file:\" === (0, _window.getWindow)().location.protocol && _browser.default.msie) {\r\n                throw new Error(\"E1038\")\r\n            } else {\r\n                throw new Error(\"E1007\")\r\n            }\r\n        }\r\n        return storage\r\n    };\r\n    var getUniqueStorageKey = function(options) {\r\n        return (0, _type.isDefined)(options.storageKey) ? options.storageKey : \"storage\"\r\n    };\r\n    return {\r\n        _loadState: function() {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                return options.customLoad && options.customLoad()\r\n            }\r\n            try {\r\n                return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)))\r\n            } catch (e) {\r\n                _ui.default.log(e.message)\r\n            }\r\n        },\r\n        _saveState: function(state) {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                options.customSave && options.customSave(state);\r\n                return\r\n            }\r\n            try {\r\n                getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state))\r\n            } catch (e) {\r\n                _ui.default.log(e.message)\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"state\"]\r\n        },\r\n        isEnabled: function() {\r\n            return this.option(\"stateStoring.enabled\")\r\n        },\r\n        init: function() {\r\n            var that = this;\r\n            that._state = {};\r\n            that._isLoaded = false;\r\n            that._isLoading = false;\r\n            that._windowUnloadHandler = function() {\r\n                if (void 0 !== that._savingTimeoutID) {\r\n                    that._saveState(that.state())\r\n                }\r\n            };\r\n            _events_engine.default.on((0, _window.getWindow)(), \"unload\", that._windowUnloadHandler);\r\n            return that\r\n        },\r\n        isLoaded: function() {\r\n            return this._isLoaded\r\n        },\r\n        isLoading: function() {\r\n            return this._isLoading\r\n        },\r\n        load: function() {\r\n            var _this = this;\r\n            this._isLoading = true;\r\n            var loadResult = (0, _deferred.fromPromise)(this._loadState());\r\n            loadResult.always(function() {\r\n                _this._isLoaded = true;\r\n                _this._isLoading = false\r\n            }).done(function(state) {\r\n                _this.state(state)\r\n            });\r\n            return loadResult\r\n        },\r\n        state: function(_state) {\r\n            var that = this;\r\n            if (!arguments.length) {\r\n                return (0, _extend.extend)(true, {}, that._state)\r\n            } else {\r\n                that._state = (0, _extend.extend)({}, _state);\r\n                parseDates(that._state)\r\n            }\r\n        },\r\n        save: function() {\r\n            var that = this;\r\n            clearTimeout(that._savingTimeoutID);\r\n            that._savingTimeoutID = setTimeout(function() {\r\n                that._saveState(that.state());\r\n                that._savingTimeoutID = void 0\r\n            }, that.option(\"stateStoring.savingTimeout\"))\r\n        },\r\n        optionChanged: function(args) {\r\n            var that = this;\r\n            switch (args.name) {\r\n                case \"stateStoring\":\r\n                    if (that.isEnabled() && !that.isLoading()) {\r\n                        that.load()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    that.callBase(args)\r\n            }\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._savingTimeoutID);\r\n            _events_engine.default.off((0, _window.getWindow)(), \"unload\", this._windowUnloadHandler)\r\n        }\r\n    }\r\n}());\r\nexports.StateStoringController = StateStoringController;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.utils.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _filtering = _interopRequireDefault(require(\"../shared/filtering\"));\r\nvar _string = require(\"../../core/utils/string\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _load_panel = _interopRequireDefault(require(\"../load_panel\"));\r\nvar _utils = _interopRequireDefault(require(\"../../data/utils\"));\r\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DATAGRID_SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATAGRID_GROUP_OPENED_CLASS = \"dx-datagrid-group-opened\";\r\nvar DATAGRID_GROUP_CLOSED_CLASS = \"dx-datagrid-group-closed\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar NO_DATA_CLASS = \"nodata\";\r\nvar DATE_INTERVAL_SELECTORS = {\r\n    year: function(value) {\r\n        return value && value.getFullYear()\r\n    },\r\n    month: function(value) {\r\n        return value && value.getMonth() + 1\r\n    },\r\n    day: function(value) {\r\n        return value && value.getDate()\r\n    },\r\n    quarter: function(value) {\r\n        return value && Math.floor(value.getMonth() / 3) + 1\r\n    },\r\n    hour: function(value) {\r\n        return value && value.getHours()\r\n    },\r\n    minute: function(value) {\r\n        return value && value.getMinutes()\r\n    },\r\n    second: function(value) {\r\n        return value && value.getSeconds()\r\n    }\r\n};\r\nvar getIntervalSelector = function() {\r\n    var data = arguments[1];\r\n    var value = this.calculateCellValue(data);\r\n    if (!(0, _type.isDefined)(value)) {\r\n        return null\r\n    } else {\r\n        if (isDateType(this.dataType)) {\r\n            var nameIntervalSelector = arguments[0];\r\n            return DATE_INTERVAL_SELECTORS[nameIntervalSelector](value)\r\n        } else {\r\n            if (\"number\" === this.dataType) {\r\n                var groupInterval = arguments[0];\r\n                return Math.floor(Number(value) / groupInterval) * groupInterval\r\n            }\r\n        }\r\n    }\r\n};\r\nvar equalSelectors = function(selector1, selector2) {\r\n    if ((0, _type.isFunction)(selector1) && (0, _type.isFunction)(selector2)) {\r\n        if (selector1.originalCallback && selector2.originalCallback) {\r\n            return selector1.originalCallback === selector2.originalCallback && selector1.columnIndex === selector2.columnIndex\r\n        }\r\n    }\r\n    return selector1 === selector2\r\n};\r\n\r\nfunction isDateType(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n}\r\nvar setEmptyText = function($container) {\r\n    $container.get(0).textContent = \"\\xa0\"\r\n};\r\nvar normalizeSortingInfo = function(sort) {\r\n    sort = sort || [];\r\n    var result = _utils.default.normalizeSortingInfo(sort);\r\n    for (var i = 0; i < sort.length; i++) {\r\n        if (sort && sort[i] && void 0 !== sort[i].isExpanded) {\r\n            result[i].isExpanded = sort[i].isExpanded\r\n        }\r\n        if (sort && sort[i] && void 0 !== sort[i].groupInterval) {\r\n            result[i].groupInterval = sort[i].groupInterval\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar formatValue = function(value, options) {\r\n    var valueText = _format_helper.default.format(value, options.format) || value && value.toString() || \"\";\r\n    var formatObject = {\r\n        value: value,\r\n        valueText: options.getDisplayFormat ? options.getDisplayFormat(valueText) : valueText,\r\n        target: options.target || \"row\",\r\n        groupInterval: options.groupInterval\r\n    };\r\n    return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText\r\n};\r\nvar getSummaryText = function(summaryItem, summaryTexts) {\r\n    var displayFormat = summaryItem.displayFormat || summaryItem.columnCaption && summaryTexts[summaryItem.summaryType + \"OtherColumn\"] || summaryTexts[summaryItem.summaryType];\r\n    return formatValue(summaryItem.value, {\r\n        format: summaryItem.valueFormat,\r\n        getDisplayFormat: function(valueText) {\r\n            return displayFormat ? (0, _string.format)(displayFormat, valueText, summaryItem.columnCaption) : valueText\r\n        },\r\n        customizeText: summaryItem.customizeText\r\n    })\r\n};\r\nvar getWidgetInstance = function($element) {\r\n    var editorData = $element.data && $element.data();\r\n    var dxComponents = editorData && editorData.dxComponents;\r\n    var widgetName = dxComponents && dxComponents[0];\r\n    return widgetName && editorData[widgetName]\r\n};\r\nvar equalFilterParameters = function equalFilterParameters(filter1, filter2) {\r\n    if (Array.isArray(filter1) && Array.isArray(filter2)) {\r\n        if (filter1.length !== filter2.length) {\r\n            return false\r\n        } else {\r\n            for (var i = 0; i < filter1.length; i++) {\r\n                if (!equalFilterParameters(filter1[i], filter2[i])) {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    } else {\r\n        if ((0, _type.isFunction)(filter1) && filter1.columnIndex >= 0 && (0, _type.isFunction)(filter2) && filter2.columnIndex >= 0) {\r\n            return filter1.columnIndex === filter2.columnIndex && (0, _data.toComparable)(filter1.filterValue) === (0, _data.toComparable)(filter2.filterValue)\r\n        } else {\r\n            return (0, _data.toComparable)(filter1) == (0, _data.toComparable)(filter2)\r\n        }\r\n    }\r\n};\r\nvar _default = {\r\n    renderNoDataText: function($element) {\r\n        var that = this;\r\n        $element = $element || this.element();\r\n        if (!$element) {\r\n            return\r\n        }\r\n        var noDataClass = that.addWidgetPrefix(NO_DATA_CLASS);\r\n        var noDataElement = $element.find(\".\" + noDataClass).last();\r\n        var isVisible = this._dataController.isEmpty();\r\n        var isLoading = this._dataController.isLoading();\r\n        if (!noDataElement.length) {\r\n            noDataElement = (0, _renderer.default)(\"<span>\").addClass(noDataClass).appendTo($element)\r\n        }\r\n        if (isVisible && !isLoading) {\r\n            noDataElement.removeClass(\"dx-hidden\").text(that._getNoDataText())\r\n        } else {\r\n            noDataElement.addClass(\"dx-hidden\")\r\n        }\r\n    },\r\n    renderLoadPanel: function($element, $container, isLocalStore) {\r\n        var that = this;\r\n        var loadPanelOptions;\r\n        that._loadPanel && that._loadPanel.$element().remove();\r\n        loadPanelOptions = that.option(\"loadPanel\");\r\n        if (loadPanelOptions && (\"auto\" === loadPanelOptions.enabled ? !isLocalStore : loadPanelOptions.enabled)) {\r\n            loadPanelOptions = (0, _extend.extend)({\r\n                shading: false,\r\n                message: loadPanelOptions.text,\r\n                position: function() {\r\n                    var $window = (0, _renderer.default)((0, _window.getWindow)());\r\n                    if ($element.height() > $window.height()) {\r\n                        return {\r\n                            of: $window,\r\n                            boundary: $element,\r\n                            collision: \"fit\"\r\n                        }\r\n                    }\r\n                    return {\r\n                        of: $element\r\n                    }\r\n                },\r\n                container: $container\r\n            }, loadPanelOptions);\r\n            that._loadPanel = that._createComponent((0, _renderer.default)(\"<div>\").appendTo($container), _load_panel.default, loadPanelOptions)\r\n        } else {\r\n            that._loadPanel = null\r\n        }\r\n    },\r\n    getIndexByKey: function(key, items, keyName) {\r\n        var index = -1;\r\n        if (void 0 !== key && Array.isArray(items)) {\r\n            keyName = arguments.length <= 2 ? \"key\" : keyName;\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = (0, _type.isDefined)(keyName) ? items[i][keyName] : items[i];\r\n                if ((0, _common.equalByValue)(key, item)) {\r\n                    index = i;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    combineFilters: function(filters, operation) {\r\n        var resultFilter = [];\r\n        operation = operation || \"and\";\r\n        for (var i = 0; i < filters.length; i++) {\r\n            if (!filters[i]) {\r\n                continue\r\n            }\r\n            if (resultFilter.length) {\r\n                resultFilter.push(operation)\r\n            }\r\n            resultFilter.push(filters[i])\r\n        }\r\n        if (1 === resultFilter.length) {\r\n            resultFilter = resultFilter[0]\r\n        }\r\n        if (resultFilter.length) {\r\n            return resultFilter\r\n        }\r\n    },\r\n    checkChanges: function(changes, changeNames) {\r\n        var changesWithChangeNamesCount = 0;\r\n        for (var i = 0; i < changeNames.length; i++) {\r\n            if (changes[changeNames[i]]) {\r\n                changesWithChangeNamesCount++\r\n            }\r\n        }\r\n        return changes.length && changes.length === changesWithChangeNamesCount\r\n    },\r\n    equalFilterParameters: equalFilterParameters,\r\n    proxyMethod: function(instance, methodName, defaultResult) {\r\n        if (!instance[methodName]) {\r\n            instance[methodName] = function() {\r\n                var dataSource = this._dataSource;\r\n                return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult\r\n            }\r\n        }\r\n    },\r\n    formatValue: formatValue,\r\n    getFormatOptionsByColumn: function(column, target) {\r\n        return {\r\n            format: column.format,\r\n            getDisplayFormat: column.getDisplayFormat,\r\n            customizeText: column.customizeText,\r\n            target: target,\r\n            trueText: column.trueText,\r\n            falseText: column.falseText\r\n        }\r\n    },\r\n    getDisplayValue: function(column, value, data, rowType) {\r\n        if (column.displayValueMap && void 0 !== column.displayValueMap[value]) {\r\n            return column.displayValueMap[value]\r\n        } else {\r\n            if (column.calculateDisplayValue && data && \"group\" !== rowType) {\r\n                return column.calculateDisplayValue(data)\r\n            } else {\r\n                if (column.lookup && !(\"group\" === rowType && (column.calculateGroupValue || column.calculateDisplayValue))) {\r\n                    return column.lookup.calculateCellValue(value)\r\n                }\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    getGroupRowSummaryText: function(summaryItems, summaryTexts) {\r\n        var result = \"(\";\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            result += (i > 0 ? \", \" : \"\") + getSummaryText(summaryItem, summaryTexts)\r\n        }\r\n        return result += \")\"\r\n    },\r\n    getSummaryText: getSummaryText,\r\n    normalizeSortingInfo: normalizeSortingInfo,\r\n    getFormatByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"date\":\r\n                return \"shortDate\";\r\n            case \"datetime\":\r\n                return \"shortDateShortTime\"\r\n        }\r\n    },\r\n    getHeaderFilterGroupParameters: function(column, remoteGrouping) {\r\n        var result = [];\r\n        var dataField = column.dataField || column.name;\r\n        var groupInterval = _filtering.default.getGroupInterval(column);\r\n        if (groupInterval) {\r\n            (0, _iterator.each)(groupInterval, function(index, interval) {\r\n                result.push(remoteGrouping ? {\r\n                    selector: dataField,\r\n                    groupInterval: interval,\r\n                    isExpanded: index < groupInterval.length - 1\r\n                } : getIntervalSelector.bind(column, interval))\r\n            });\r\n            return result\r\n        }\r\n        if (remoteGrouping) {\r\n            result = [{\r\n                selector: dataField,\r\n                isExpanded: false\r\n            }]\r\n        } else {\r\n            result = function result(data) {\r\n                var result = column.calculateCellValue(data);\r\n                if (void 0 === result || \"\" === result) {\r\n                    result = null\r\n                }\r\n                return result\r\n            };\r\n            if (column.sortingMethod) {\r\n                result = [{\r\n                    selector: result,\r\n                    compare: column.sortingMethod.bind(column)\r\n                }]\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    equalSortParameters: function(sortParameters1, sortParameters2, ignoreIsExpanded) {\r\n        sortParameters1 = normalizeSortingInfo(sortParameters1);\r\n        sortParameters2 = normalizeSortingInfo(sortParameters2);\r\n        if (Array.isArray(sortParameters1) && Array.isArray(sortParameters2)) {\r\n            if (sortParameters1.length !== sortParameters2.length) {\r\n                return false\r\n            } else {\r\n                for (var i = 0; i < sortParameters1.length; i++) {\r\n                    if (!equalSelectors(sortParameters1[i].selector, sortParameters2[i].selector) || sortParameters1[i].desc !== sortParameters2[i].desc || sortParameters1[i].groupInterval !== sortParameters2[i].groupInterval || !ignoreIsExpanded && Boolean(sortParameters1[i].isExpanded) !== Boolean(sortParameters2[i].isExpanded)) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            return true\r\n        } else {\r\n            return (!sortParameters1 || !sortParameters1.length) === (!sortParameters2 || !sortParameters2.length)\r\n        }\r\n    },\r\n    getPointsByColumns: function(items, pointCreated, isVertical, startColumnIndex) {\r\n        var cellsLength = items.length;\r\n        var notCreatePoint = false;\r\n        var item;\r\n        var offset;\r\n        var columnIndex = startColumnIndex || 0;\r\n        var result = [];\r\n        var rtlEnabled;\r\n        for (var i = 0; i <= cellsLength; i++) {\r\n            if (i < cellsLength) {\r\n                item = items.eq(i);\r\n                offset = item.offset();\r\n                rtlEnabled = \"rtl\" === item.css(\"direction\")\r\n            }\r\n            var point = {\r\n                index: columnIndex,\r\n                x: offset ? offset.left + (!isVertical && rtlEnabled ^ i === cellsLength ? (0, _position.getBoundingRect)(item[0]).width : 0) : 0,\r\n                y: offset ? offset.top + (isVertical && i === cellsLength ? (0, _position.getBoundingRect)(item[0]).height : 0) : 0,\r\n                columnIndex: columnIndex\r\n            };\r\n            if (!isVertical && i > 0) {\r\n                var prevItemOffset = items.eq(i - 1).offset();\r\n                if (prevItemOffset.top < point.y) {\r\n                    point.y = prevItemOffset.top\r\n                }\r\n            }\r\n            if (pointCreated) {\r\n                notCreatePoint = pointCreated(point)\r\n            }\r\n            if (!notCreatePoint) {\r\n                result.push(point)\r\n            }\r\n            columnIndex++\r\n        }\r\n        return result\r\n    },\r\n    getExpandCellTemplate: function() {\r\n        return {\r\n            allowRenderToDetachedContainer: true,\r\n            render: function(container, options) {\r\n                var $container = (0, _renderer.default)(container);\r\n                if ((0, _type.isDefined)(options.value) && !(options.data && options.data.isContinuation) && !options.row.isNewRow) {\r\n                    var rowsView = options.component.getView(\"rowsView\");\r\n                    $container.addClass(DATAGRID_EXPAND_CLASS).addClass(DATAGRID_SELECTION_DISABLED_CLASS);\r\n                    (0, _renderer.default)(\"<div>\").addClass(options.value ? DATAGRID_GROUP_OPENED_CLASS : DATAGRID_GROUP_CLOSED_CLASS).appendTo($container);\r\n                    rowsView.setAria(\"label\", options.value ? rowsView.localize(\"dxDataGrid-ariaCollapse\") : rowsView.localize(\"dxDataGrid-ariaExpand\"), $container)\r\n                } else {\r\n                    setEmptyText($container)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setEmptyText: setEmptyText,\r\n    isDateType: isDateType,\r\n    getSelectionRange: function(focusedElement) {\r\n        try {\r\n            if (focusedElement) {\r\n                return {\r\n                    selectionStart: focusedElement.selectionStart,\r\n                    selectionEnd: focusedElement.selectionEnd\r\n                }\r\n            }\r\n        } catch (e) {}\r\n        return {}\r\n    },\r\n    setSelectionRange: function(focusedElement, selectionRange) {\r\n        try {\r\n            if (focusedElement && focusedElement.setSelectionRange) {\r\n                focusedElement.setSelectionRange(selectionRange.selectionStart, selectionRange.selectionEnd)\r\n            }\r\n        } catch (e) {}\r\n    },\r\n    focusAndSelectElement: function(component, $element) {\r\n        var isFocused = $element.is(\":focus\");\r\n        _events_engine.default.trigger($element, \"focus\");\r\n        var isSelectTextOnEditingStart = component.option(\"editing.selectTextOnEditStart\");\r\n        var element = $element.get(0);\r\n        if (!isFocused && isSelectTextOnEditingStart && $element.is(\".dx-texteditor-input\") && !$element.is(\"[readonly]\")) {\r\n            var editor = getWidgetInstance($element.closest(\".dx-texteditor\"));\r\n            (0, _deferred.when)(editor && editor._loadItemDeferred).done(function() {\r\n                element.select()\r\n            })\r\n        }\r\n    },\r\n    getWidgetInstance: getWidgetInstance,\r\n    getLastResizableColumnIndex: function(columns, resultWidths) {\r\n        var hasResizableColumns = columns.some(function(column) {\r\n            return column && !column.command && !column.fixed && false !== column.allowResizing\r\n        });\r\n        var lastColumnIndex;\r\n        for (lastColumnIndex = columns.length - 1; columns[lastColumnIndex]; lastColumnIndex--) {\r\n            var column = columns[lastColumnIndex];\r\n            var width = resultWidths && resultWidths[lastColumnIndex];\r\n            var allowResizing = !hasResizableColumns || false !== column.allowResizing;\r\n            if (!column.command && !column.fixed && \"adaptiveHidden\" !== width && allowResizing) {\r\n                break\r\n            }\r\n        }\r\n        return lastColumnIndex\r\n    },\r\n    isElementInCurrentGrid: function(controller, $element) {\r\n        if ($element && $element.length) {\r\n            var $grid = $element.closest(\".\" + controller.getWidgetContainerClass()).parent();\r\n            return $grid.is(controller.component.$element())\r\n        }\r\n        return false\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.validating.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _array_utils = require(\"../../data/array_utils\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _validation_engine = _interopRequireDefault(require(\"../validation_engine\"));\r\nvar _validator = _interopRequireDefault(require(\"../validator\"));\r\nvar _overlay = _interopRequireDefault(require(\"../overlay\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\r\nvar _string = require(\"../../core/utils/string\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\nvar INVALIDATE_CLASS = \"invalid\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar INVALID_MESSAGE_CLASS = \"dx-invalid-message\";\r\nvar WIDGET_INVALID_MESSAGE_CLASS = \"invalid-message\";\r\nvar INVALID_MESSAGE_ALWAYS_CLASS = \"dx-invalid-message-always\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar VALIDATOR_CLASS = \"validator\";\r\nvar PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar PADDING_BETWEEN_TOOLTIPS = 2;\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar FORM_BASED_MODES = [EDIT_MODE_POPUP, EDIT_MODE_FORM];\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar VALIDATION_STATUS = {\r\n    valid: \"valid\",\r\n    invalid: \"invalid\",\r\n    pending: \"pending\"\r\n};\r\nvar EDIT_DATA_INSERT_TYPE = \"insert\";\r\nvar EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nvar VALIDATION_CANCELLED = \"cancel\";\r\nvar validationResultIsValid = function(result) {\r\n    return (0, _type.isDefined)(result) && result !== VALIDATION_CANCELLED\r\n};\r\nvar cellValueShouldBeValidated = function(value, rowOptions) {\r\n    return void 0 !== value || void 0 === value && rowOptions && !rowOptions.isNewRow\r\n};\r\nvar ValidatingController = _uiGrid_core.default.Controller.inherit(function() {\r\n    return {\r\n        init: function() {\r\n            this._editingController = this.getController(\"editing\");\r\n            this.createAction(\"onRowValidating\");\r\n            if (!this._validationState) {\r\n                this._validationState = []\r\n            }\r\n        },\r\n        _rowIsValidated: function(change) {\r\n            var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n            return !!validationData && !!validationData.validated\r\n        },\r\n        _getValidationData: function(key, create) {\r\n            var validationData = this._validationState.filter(function(data) {\r\n                return (0, _common.equalByValue)(data.key, key)\r\n            })[0];\r\n            if (!validationData && create) {\r\n                validationData = {\r\n                    key: key,\r\n                    isValid: true\r\n                };\r\n                this._validationState.push(validationData)\r\n            }\r\n            return validationData\r\n        },\r\n        _getBrokenRules: function(validationData, validationResults) {\r\n            var brokenRules;\r\n            if (validationResults) {\r\n                brokenRules = validationResults.brokenRules || validationResults.brokenRule && [validationResults.brokenRule]\r\n            } else {\r\n                brokenRules = validationData.brokenRules || []\r\n            }\r\n            return brokenRules\r\n        },\r\n        _rowValidating: function(validationData, validationResults) {\r\n            var deferred = new _deferred.Deferred;\r\n            var change = this._editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n            var brokenRules = this._getBrokenRules(validationData, validationResults);\r\n            var isValid = validationResults ? validationResults.isValid : validationData.isValid;\r\n            var parameters = {\r\n                brokenRules: brokenRules,\r\n                isValid: isValid,\r\n                key: change.key,\r\n                newData: change.data,\r\n                oldData: this._editingController._getOldData(change.key),\r\n                promise: null,\r\n                errorText: this.getHiddenValidatorsErrorText(brokenRules)\r\n            };\r\n            this.executeAction(\"onRowValidating\", parameters);\r\n            (0, _deferred.when)((0, _deferred.fromPromise)(parameters.promise)).always(function() {\r\n                validationData.isValid = parameters.isValid;\r\n                validationData.errorText = parameters.errorText;\r\n                deferred.resolve(parameters)\r\n            });\r\n            return deferred.promise()\r\n        },\r\n        getHiddenValidatorsErrorText: function(brokenRules) {\r\n            var brokenRulesMessages = [];\r\n            (0, _iterator.each)(brokenRules, function(_, brokenRule) {\r\n                var column = brokenRule.column;\r\n                var isGroupExpandColumn = column && void 0 !== column.groupIndex && !column.showWhenGrouped;\r\n                var isVisibleColumn = column && column.visible;\r\n                if (!brokenRule.validator.$element().parent().length && (!isVisibleColumn || isGroupExpandColumn)) {\r\n                    brokenRulesMessages.push(brokenRule.message)\r\n                }\r\n            });\r\n            return brokenRulesMessages.join(\", \")\r\n        },\r\n        validate: function(isFull) {\r\n            var _this = this;\r\n            var isValid = true;\r\n            var editingController = this._editingController;\r\n            var deferred = new _deferred.Deferred;\r\n            var completeList = [];\r\n            var editMode = editingController.getEditMode();\r\n            isFull = isFull || editMode === EDIT_MODE_ROW;\r\n            if (this._isValidationInProgress) {\r\n                return deferred.resolve(false).promise()\r\n            }\r\n            this._isValidationInProgress = true;\r\n            if (isFull) {\r\n                editingController.addDeferred(deferred);\r\n                var changes = editingController.getChanges();\r\n                (0, _iterator.each)(changes, function(index, _ref) {\r\n                    var type = _ref.type,\r\n                        key = _ref.key;\r\n                    if (\"remove\" !== type) {\r\n                        var validationData = _this._getValidationData(key, true);\r\n                        var validationResult = _this.validateGroup(validationData);\r\n                        completeList.push(validationResult);\r\n                        validationResult.done(function(validationResult) {\r\n                            validationData.validated = true;\r\n                            isValid = isValid && validationResult.isValid\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                if (this._currentCellValidator) {\r\n                    var validationResult = this.validateGroup(this._currentCellValidator._findGroup());\r\n                    completeList.push(validationResult);\r\n                    validationResult.done(function(validationResult) {\r\n                        isValid = validationResult.isValid\r\n                    })\r\n                }\r\n            }\r\n            _deferred.when.apply(void 0, completeList).done(function() {\r\n                _this._isValidationInProgress = false;\r\n                deferred.resolve(isValid)\r\n            });\r\n            return deferred.promise()\r\n        },\r\n        validateGroup: function validateGroup(validationData) {\r\n            var _validationResult, _this2 = this;\r\n            var result = new _deferred.Deferred;\r\n            var validateGroup = validationData && _validation_engine.default.getGroupConfig(validationData);\r\n            var validationResult;\r\n            if (null !== validateGroup && void 0 !== validateGroup && validateGroup.validators.length) {\r\n                this.resetRowValidationResults(validationData);\r\n                validationResult = _validation_engine.default.validateGroup(validationData)\r\n            }(0, _deferred.when)((null === (_validationResult = validationResult) || void 0 === _validationResult ? void 0 : _validationResult.complete) || validationResult).done(function(validationResult) {\r\n                (0, _deferred.when)(_this2._rowValidating(validationData, validationResult)).done(result.resolve)\r\n            });\r\n            return result.promise()\r\n        },\r\n        isRowDataModified: function(change) {\r\n            return !(0, _type.isEmptyObject)(change.data)\r\n        },\r\n        updateValidationState: function(change) {\r\n            var editMode = this._editingController.getEditMode();\r\n            var key = change.key;\r\n            var validationData = this._getValidationData(key, true);\r\n            if (FORM_BASED_MODES.indexOf(editMode) === -1) {\r\n                if (change.type === EDIT_DATA_INSERT_TYPE && !this.isRowDataModified(change)) {\r\n                    validationData.isValid = true;\r\n                    return\r\n                }\r\n                this.setDisableApplyValidationResults(true);\r\n                var groupConfig = _validation_engine.default.getGroupConfig(validationData);\r\n                if (groupConfig) {\r\n                    var validationResult = _validation_engine.default.validateGroup(validationData);\r\n                    (0, _deferred.when)(validationResult.complete || validationResult).done(function(validationResult) {\r\n                        validationData.isValid = validationResult.isValid;\r\n                        validationData.brokenRules = validationResult.brokenRules\r\n                    })\r\n                } else {\r\n                    if (!validationData.brokenRules || !validationData.brokenRules.length) {\r\n                        validationData.isValid = true\r\n                    }\r\n                }\r\n                this.setDisableApplyValidationResults(false)\r\n            } else {\r\n                validationData.isValid = true\r\n            }\r\n        },\r\n        setValidator: function(validator) {\r\n            this._currentCellValidator = validator\r\n        },\r\n        renderCellPendingIndicator: function($container) {\r\n            var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n            if (!$indicator.length) {\r\n                var $indicatorContainer = $container;\r\n                $indicator = (0, _renderer.default)(\"<div>\").appendTo($indicatorContainer).addClass(PENDING_INDICATOR_CLASS);\r\n                this._createComponent($indicator, _load_indicator.default);\r\n                $container.addClass(VALIDATION_PENDING_CLASS)\r\n            }\r\n        },\r\n        disposeCellPendingIndicator: function($container) {\r\n            var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n            if ($indicator.length) {\r\n                var indicator = _load_indicator.default.getInstance($indicator);\r\n                if (indicator) {\r\n                    indicator.dispose();\r\n                    indicator.$element().remove()\r\n                }\r\n                $container.removeClass(VALIDATION_PENDING_CLASS)\r\n            }\r\n        },\r\n        validationStatusChanged: function(result) {\r\n            var validator = result.validator;\r\n            var validationGroup = validator.option(\"validationGroup\");\r\n            var column = validator.option(\"dataGetter\")().column;\r\n            this.updateCellValidationResult({\r\n                rowKey: validationGroup.key,\r\n                columnIndex: column.index,\r\n                validationResult: result\r\n            })\r\n        },\r\n        validatorInitialized: function(arg) {\r\n            arg.component.on(\"validating\", this.validationStatusChanged.bind(this));\r\n            arg.component.on(\"validated\", this.validationStatusChanged.bind(this))\r\n        },\r\n        validatorDisposing: function(arg) {\r\n            var validator = arg.component;\r\n            var validationGroup = validator.option(\"validationGroup\");\r\n            var column = validator.option(\"dataGetter\")().column;\r\n            var result = this.getCellValidationResult({\r\n                rowKey: null === validationGroup || void 0 === validationGroup ? void 0 : validationGroup.key,\r\n                columnIndex: column.index\r\n            });\r\n            if (validationResultIsValid(result) && result.status === VALIDATION_STATUS.pending) {\r\n                this.cancelCellValidationResult({\r\n                    change: validationGroup,\r\n                    columnIndex: column.index\r\n                })\r\n            }\r\n        },\r\n        applyValidationResult: function($container, result) {\r\n            var validator = result.validator;\r\n            var validationGroup = validator.option(\"validationGroup\");\r\n            var column = validator.option(\"dataGetter\")().column;\r\n            result.brokenRules && result.brokenRules.forEach(function(rule) {\r\n                rule.columnIndex = column.index;\r\n                rule.column = column\r\n            });\r\n            if ($container) {\r\n                var validationResult = this.getCellValidationResult({\r\n                    rowKey: validationGroup.key,\r\n                    columnIndex: column.index\r\n                });\r\n                var requestIsDisabled = validationResultIsValid(validationResult) && validationResult.disabledPendingId === result.id;\r\n                if (this._disableApplyValidationResults || requestIsDisabled) {\r\n                    return\r\n                }\r\n                if (result.status === VALIDATION_STATUS.invalid) {\r\n                    var $focus = $container.find(\":focus\");\r\n                    if (!(0, _selectors.focused)($focus)) {\r\n                        _events_engine.default.trigger($focus, \"focus\");\r\n                        _events_engine.default.trigger($focus, _pointer.default.down)\r\n                    }\r\n                }\r\n                var editor = !column.editCellTemplate && this.getController(\"editorFactory\").getEditorInstance($container);\r\n                if (result.status === VALIDATION_STATUS.pending) {\r\n                    if (editor) {\r\n                        editor.option(\"validationStatus\", VALIDATION_STATUS.pending)\r\n                    } else {\r\n                        this.renderCellPendingIndicator($container)\r\n                    }\r\n                } else {\r\n                    if (editor) {\r\n                        editor.option(\"validationStatus\", VALIDATION_STATUS.valid)\r\n                    } else {\r\n                        this.disposeCellPendingIndicator($container)\r\n                    }\r\n                }\r\n                $container.toggleClass(this.addWidgetPrefix(INVALIDATE_CLASS), result.status === VALIDATION_STATUS.invalid)\r\n            }\r\n        },\r\n        _syncInternalEditingData: function(parameters) {\r\n            var _parameters$row;\r\n            var editingController = this._editingController;\r\n            var change = editingController.getChangeByKey(parameters.key);\r\n            var oldDataFromState = editingController._getOldData(parameters.key);\r\n            var oldData = null === (_parameters$row = parameters.row) || void 0 === _parameters$row ? void 0 : _parameters$row.oldData;\r\n            if (change && oldData && !oldDataFromState) {\r\n                editingController._addInternalData({\r\n                    key: parameters.key,\r\n                    oldData: oldData\r\n                })\r\n            }\r\n        },\r\n        createValidator: function(parameters, $container) {\r\n            var _this3 = this;\r\n            var editingController = this._editingController;\r\n            var column = parameters.column;\r\n            var showEditorAlways = column.showEditorAlways;\r\n            if ((0, _type.isDefined)(column.command) || !column.validationRules || !Array.isArray(column.validationRules) || !column.validationRules.length) {\r\n                return\r\n            }\r\n            var editIndex = editingController.getIndexByKey(parameters.key, editingController.getChanges());\r\n            var needCreateValidator = editIndex > -1;\r\n            if (!needCreateValidator) {\r\n                if (!showEditorAlways) {\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var visibleColumns = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getVisibleColumns()) || [];\r\n                    showEditorAlways = visibleColumns.some(function(column) {\r\n                        return column.showEditorAlways\r\n                    })\r\n                }\r\n                var isEditRow = (0, _common.equalByValue)(this.option(\"editing.editRowKey\"), parameters.key);\r\n                var isCellOrBatchEditingAllowed = editingController.isCellOrBatchEditMode() && editingController.allowUpdating({\r\n                    row: parameters.row\r\n                });\r\n                needCreateValidator = isEditRow || isCellOrBatchEditingAllowed && showEditorAlways;\r\n                if (isCellOrBatchEditingAllowed && showEditorAlways) {\r\n                    var _parameters$row$oldDa, _parameters$row2;\r\n                    editingController._addInternalData({\r\n                        key: parameters.key,\r\n                        oldData: null !== (_parameters$row$oldDa = null === (_parameters$row2 = parameters.row) || void 0 === _parameters$row2 ? void 0 : _parameters$row2.oldData) && void 0 !== _parameters$row$oldDa ? _parameters$row$oldDa : parameters.data\r\n                    })\r\n                }\r\n            }\r\n            if (needCreateValidator) {\r\n                if ($container && !$container.length) {\r\n                    _ui.default.log(\"E1050\");\r\n                    return\r\n                }\r\n                this._syncInternalEditingData(parameters);\r\n                var validationData = this._getValidationData(parameters.key, true);\r\n                var getValue = function() {\r\n                    var change = editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n                    var value = column.calculateCellValue((null === change || void 0 === change ? void 0 : change.data) || {});\r\n                    return void 0 !== value ? value : parameters.value\r\n                };\r\n                var useDefaultValidator = $container && $container.hasClass(\"dx-widget\");\r\n                $container && $container.addClass(this.addWidgetPrefix(VALIDATOR_CLASS));\r\n                var validator = new _validator.default($container || (0, _renderer.default)(\"<div>\"), {\r\n                    name: column.caption,\r\n                    validationRules: (0, _extend.extend)(true, [], column.validationRules),\r\n                    validationGroup: validationData,\r\n                    adapter: useDefaultValidator ? null : {\r\n                        getValue: getValue,\r\n                        applyValidationResults: function(result) {\r\n                            _this3.applyValidationResult($container, result)\r\n                        }\r\n                    },\r\n                    dataGetter: function() {\r\n                        var key = null === validationData || void 0 === validationData ? void 0 : validationData.key;\r\n                        var change = editingController.getChangeByKey(key);\r\n                        var oldData = editingController._getOldData(key);\r\n                        return {\r\n                            data: (0, _array_utils.createObjectWithChanges)(oldData, null === change || void 0 === change ? void 0 : change.data),\r\n                            column: column\r\n                        }\r\n                    },\r\n                    onInitialized: this.validatorInitialized.bind(this),\r\n                    onDisposing: this.validatorDisposing.bind(this)\r\n                });\r\n                if (useDefaultValidator) {\r\n                    var adapter = validator.option(\"adapter\");\r\n                    if (adapter) {\r\n                        adapter.getValue = getValue;\r\n                        adapter.validationRequestsCallbacks = []\r\n                    }\r\n                }\r\n                return validator\r\n            }\r\n        },\r\n        setDisableApplyValidationResults: function(flag) {\r\n            this._disableApplyValidationResults = flag\r\n        },\r\n        getDisableApplyValidationResults: function() {\r\n            return this._disableApplyValidationResults\r\n        },\r\n        isCurrentValidatorProcessing: function(_ref2) {\r\n            var rowKey = _ref2.rowKey,\r\n                columnIndex = _ref2.columnIndex;\r\n            return this._currentCellValidator && (0, _common.equalByValue)(this._currentCellValidator.option(\"validationGroup\").key, rowKey) && this._currentCellValidator.option(\"dataGetter\")().column.index === columnIndex\r\n        },\r\n        validateCell: function(validator) {\r\n            var cellParams = {\r\n                rowKey: validator.option(\"validationGroup\").key,\r\n                columnIndex: validator.option(\"dataGetter\")().column.index\r\n            };\r\n            var validationResult = this.getCellValidationResult(cellParams);\r\n            var stateRestored = validationResultIsValid(validationResult);\r\n            if (!stateRestored) {\r\n                validationResult = validator.validate()\r\n            }\r\n            var deferred = new _deferred.Deferred;\r\n            var adapter = validator.option(\"adapter\");\r\n            if (stateRestored && validationResult.status === VALIDATION_STATUS.pending) {\r\n                this.updateCellValidationResult(cellParams);\r\n                adapter.applyValidationResults(validationResult)\r\n            }(0, _deferred.when)(validationResult.complete || validationResult).done(function(validationResult) {\r\n                stateRestored && adapter.applyValidationResults(validationResult);\r\n                deferred.resolve(validationResult)\r\n            });\r\n            return deferred.promise()\r\n        },\r\n        updateCellValidationResult: function(_ref3) {\r\n            var rowKey = _ref3.rowKey,\r\n                columnIndex = _ref3.columnIndex,\r\n                validationResult = _ref3.validationResult;\r\n            var validationData = this._getValidationData(rowKey);\r\n            if (!validationData) {\r\n                return\r\n            }\r\n            if (!validationData.validationResults) {\r\n                validationData.validationResults = {}\r\n            }\r\n            var result;\r\n            if (validationResult) {\r\n                result = (0, _extend.extend)({}, validationResult);\r\n                validationData.validationResults[columnIndex] = result;\r\n                if (validationResult.status === VALIDATION_STATUS.pending) {\r\n                    if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                        result.deferred = new _deferred.Deferred;\r\n                        result.complete.always(function() {\r\n                            result.deferred.resolve()\r\n                        });\r\n                        this._editingController.addDeferred(result.deferred)\r\n                    }\r\n                    if (this._disableApplyValidationResults) {\r\n                        result.disabledPendingId = validationResult.id;\r\n                        return\r\n                    }\r\n                }\r\n            } else {\r\n                result = validationData.validationResults[columnIndex]\r\n            }\r\n            if (result && result.disabledPendingId) {\r\n                delete result.disabledPendingId\r\n            }\r\n        },\r\n        getCellValidationResult: function(_ref4) {\r\n            var _validationData$valid;\r\n            var rowKey = _ref4.rowKey,\r\n                columnIndex = _ref4.columnIndex;\r\n            var validationData = this._getValidationData(rowKey, true);\r\n            return null === validationData || void 0 === validationData ? void 0 : null === (_validationData$valid = validationData.validationResults) || void 0 === _validationData$valid ? void 0 : _validationData$valid[columnIndex]\r\n        },\r\n        removeCellValidationResult: function(_ref5) {\r\n            var change = _ref5.change,\r\n                columnIndex = _ref5.columnIndex;\r\n            var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n            if (validationData && validationData.validationResults) {\r\n                this.cancelCellValidationResult({\r\n                    change: change,\r\n                    columnIndex: columnIndex\r\n                });\r\n                delete validationData.validationResults[columnIndex]\r\n            }\r\n        },\r\n        cancelCellValidationResult: function(_ref6) {\r\n            var change = _ref6.change,\r\n                columnIndex = _ref6.columnIndex;\r\n            var validationData = this._getValidationData(change.key);\r\n            if (change && validationData.validationResults) {\r\n                var result = validationData.validationResults[columnIndex];\r\n                if (result) {\r\n                    result.deferred && result.deferred.reject(VALIDATION_CANCELLED);\r\n                    validationData.validationResults[columnIndex] = VALIDATION_CANCELLED\r\n                }\r\n            }\r\n        },\r\n        resetRowValidationResults: function(validationData) {\r\n            if (validationData) {\r\n                validationData.validationResults && delete validationData.validationResults;\r\n                delete validationData.validated\r\n            }\r\n        },\r\n        isInvalidCell: function(_ref7) {\r\n            var rowKey = _ref7.rowKey,\r\n                columnIndex = _ref7.columnIndex;\r\n            var result = this.getCellValidationResult({\r\n                rowKey: rowKey,\r\n                columnIndex: columnIndex\r\n            });\r\n            return validationResultIsValid(result) && result.status === VALIDATION_STATUS.invalid\r\n        },\r\n        getCellValidator: function(_ref8) {\r\n            var rowKey = _ref8.rowKey,\r\n                columnIndex = _ref8.columnIndex;\r\n            var validationData = this._getValidationData(rowKey);\r\n            var groupConfig = validationData && _validation_engine.default.getGroupConfig(validationData);\r\n            var validators = groupConfig && groupConfig.validators;\r\n            return validators && validators.filter(function(v) {\r\n                var column = v.option(\"dataGetter\")().column;\r\n                return column ? column.index === columnIndex : false\r\n            })[0]\r\n        },\r\n        setCellValidationStatus: function(cellOptions) {\r\n            var validationResult = this.getCellValidationResult({\r\n                rowKey: cellOptions.key,\r\n                columnIndex: cellOptions.column.index\r\n            });\r\n            if ((0, _type.isDefined)(validationResult)) {\r\n                cellOptions.validationStatus = validationResult !== VALIDATION_CANCELLED ? validationResult.status : VALIDATION_CANCELLED\r\n            } else {\r\n                delete cellOptions.validationStatus\r\n            }\r\n        }\r\n    }\r\n}());\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                texts: {\r\n                    validationCancelChanges: _message.default.format(\"dxDataGrid-validationCancelChanges\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        validating: ValidatingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                _addChange: function(options, row) {\r\n                    var index = this.callBase(options, row);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (index >= 0 && options.type !== EDIT_DATA_REMOVE_TYPE) {\r\n                        var change = this.getChanges()[index];\r\n                        change && validatingController.updateValidationState(change)\r\n                    }\r\n                    return index\r\n                },\r\n                _handleChangesChange: function(args) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    args.value.forEach(function(change) {\r\n                        if (void 0 === validatingController._getValidationData(change.key)) {\r\n                            validatingController.updateValidationState(change)\r\n                        }\r\n                    })\r\n                },\r\n                _updateRowAndPageIndices: function() {\r\n                    var _this4 = this;\r\n                    var that = this;\r\n                    var startInsertIndex = that.getView(\"rowsView\").getTopVisibleItemIndex();\r\n                    var rowIndex = startInsertIndex;\r\n                    (0, _iterator.each)(that.getChanges(), function(_, _ref9) {\r\n                        var key = _ref9.key,\r\n                            type = _ref9.type;\r\n                        var validationData = _this4.getController(\"validating\")._getValidationData(key);\r\n                        if (validationData && !validationData.isValid && validationData.pageIndex !== that._pageIndex) {\r\n                            validationData.pageIndex = that._pageIndex;\r\n                            if (type === EDIT_DATA_INSERT_TYPE) {\r\n                                validationData.rowIndex = startInsertIndex\r\n                            } else {\r\n                                validationData.rowIndex = rowIndex\r\n                            }\r\n                            rowIndex++\r\n                        }\r\n                    })\r\n                },\r\n                getEditFormOptions: function(detailOptions) {\r\n                    var editFormOptions = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(detailOptions.key, true);\r\n                    return (0, _extend.extend)({}, editFormOptions, {\r\n                        validationGroup: validationData\r\n                    })\r\n                },\r\n                _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (isCustomSetCellValue && this._editForm && !row.isNewRow) {\r\n                        this._editForm.validate()\r\n                    }\r\n                },\r\n                _needInsertItem: function(_ref10) {\r\n                    var key = _ref10.key;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var validationData = this.getController(\"validating\")._getValidationData(key);\r\n                    if (result && !(null !== validationData && void 0 !== validationData && validationData.isValid)) {\r\n                        result = key.pageIndex === this._pageIndex\r\n                    }\r\n                    return result\r\n                },\r\n                _prepareEditCell: function(params) {\r\n                    var isNotCanceled = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (isNotCanceled && params.column.showEditorAlways) {\r\n                        validatingController.updateValidationState({\r\n                            key: params.key\r\n                        })\r\n                    }\r\n                    return isNotCanceled\r\n                },\r\n                processItems: function(items, changeType) {\r\n                    var that = this;\r\n                    var i;\r\n                    var changes = that.getChanges();\r\n                    var dataController = that.getController(\"data\");\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var getIndexByChange = function(change, items) {\r\n                        var index = -1;\r\n                        var isInsert = change.type === EDIT_DATA_INSERT_TYPE;\r\n                        var key = change.key;\r\n                        (0, _iterator.each)(items, function(i, item) {\r\n                            if ((0, _common.equalByValue)(key, isInsert ? item : dataController.keyOf(item))) {\r\n                                index = i;\r\n                                return false\r\n                            }\r\n                        });\r\n                        return index\r\n                    };\r\n                    items = that.callBase(items, changeType);\r\n                    var itemsCount = items.length;\r\n                    var addInValidItem = function(change, validationData) {\r\n                        var data = {\r\n                            key: change.key\r\n                        };\r\n                        var index = getIndexByChange(change, items);\r\n                        if (index >= 0) {\r\n                            return\r\n                        }\r\n                        validationData.rowIndex = validationData.rowIndex > itemsCount ? validationData.rowIndex % itemsCount : validationData.rowIndex;\r\n                        var rowIndex = validationData.rowIndex;\r\n                        data[INSERT_INDEX] = 1;\r\n                        items.splice(rowIndex, 0, data)\r\n                    };\r\n                    if (that.getEditMode() === EDIT_MODE_BATCH && \"prepend\" !== changeType && \"append\" !== changeType) {\r\n                        for (i = 0; i < changes.length; i++) {\r\n                            var key = changes[i].key;\r\n                            var validationData = validatingController._getValidationData(key);\r\n                            if (validationData && changes[i].type && validationData.pageIndex === that._pageIndex && key.pageIndex !== that._pageIndex) {\r\n                                addInValidItem(changes[i], validationData)\r\n                            }\r\n                        }\r\n                    }\r\n                    return items\r\n                },\r\n                processDataItem: function(item) {\r\n                    var isInserted = item.data[INSERT_INDEX];\r\n                    var key = isInserted ? item.data.key : item.key;\r\n                    var editMode = this.getEditMode();\r\n                    if (editMode === EDIT_MODE_BATCH && isInserted && key) {\r\n                        var changes = this.getChanges();\r\n                        var editIndex = _uiGrid_core2.default.getIndexByKey(key, changes);\r\n                        if (editIndex >= 0) {\r\n                            var change = changes[editIndex];\r\n                            if (change.type !== EDIT_DATA_INSERT_TYPE) {\r\n                                var oldData = this._getOldData(change.key);\r\n                                item.data = (0, _extend.extend)(true, {}, oldData, change.data);\r\n                                item.key = key\r\n                            }\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _createInvisibleColumnValidators: function(changes) {\r\n                    var _this5 = this;\r\n                    var that = this;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var columns = columnsController.getColumns();\r\n                    var invisibleColumns = columnsController.getInvisibleColumns().filter(function(column) {\r\n                        return !column.isBand\r\n                    });\r\n                    var groupColumns = columnsController.getGroupColumns().filter(function(column) {\r\n                        return !column.showWhenGrouped && invisibleColumns.indexOf(column) === -1\r\n                    });\r\n                    var invisibleColumnValidators = [];\r\n                    var isCellVisible = function(column, rowKey) {\r\n                        return _this5._dataController.getRowIndexByKey(rowKey) >= 0 && invisibleColumns.indexOf(column) < 0\r\n                    };\r\n                    invisibleColumns.push.apply(invisibleColumns, _toConsumableArray(groupColumns));\r\n                    if (FORM_BASED_MODES.indexOf(this.getEditMode()) === -1) {\r\n                        (0, _iterator.each)(columns, function(_, column) {\r\n                            changes.forEach(function(change) {\r\n                                var data;\r\n                                if (isCellVisible(column, change.key)) {\r\n                                    return\r\n                                }\r\n                                if (change.type === EDIT_DATA_INSERT_TYPE) {\r\n                                    data = change.data\r\n                                } else {\r\n                                    if (\"update\" === change.type) {\r\n                                        var oldData = that._getOldData(change.key);\r\n                                        data = (0, _array_utils.createObjectWithChanges)(oldData, change.data)\r\n                                    }\r\n                                }\r\n                                if (data) {\r\n                                    var validator = validatingController.createValidator({\r\n                                        column: column,\r\n                                        key: change.key,\r\n                                        value: column.calculateCellValue(data)\r\n                                    });\r\n                                    if (validator) {\r\n                                        invisibleColumnValidators.push(validator)\r\n                                    }\r\n                                }\r\n                            })\r\n                        })\r\n                    }\r\n                    return function() {\r\n                        invisibleColumnValidators.forEach(function(validator) {\r\n                            validator.dispose()\r\n                        })\r\n                    }\r\n                },\r\n                _beforeSaveEditData: function(change, editIndex) {\r\n                    var _this6 = this;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n                    if (change) {\r\n                        var isValid = \"remove\" === change.type || validationData.isValid;\r\n                        result = result || !isValid\r\n                    } else {\r\n                        var disposeValidators = this._createInvisibleColumnValidators(this.getChanges());\r\n                        result = new _deferred.Deferred;\r\n                        this.executeOperation(result, function() {\r\n                            validatingController.validate(true).done(function(isFullValid) {\r\n                                disposeValidators();\r\n                                _this6._updateRowAndPageIndices();\r\n                                switch (_this6.getEditMode()) {\r\n                                    case EDIT_MODE_CELL:\r\n                                        if (!isFullValid) {\r\n                                            _this6._focusEditingCell()\r\n                                        }\r\n                                        break;\r\n                                    case EDIT_MODE_BATCH:\r\n                                        if (!isFullValid) {\r\n                                            _this6._resetEditRowKey();\r\n                                            _this6._resetEditColumnName();\r\n                                            _this6.getController(\"data\").updateItems()\r\n                                        }\r\n                                }\r\n                                result.resolve(!isFullValid)\r\n                            })\r\n                        })\r\n                    }\r\n                    return result.promise ? result.promise() : result\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    var result = this.callBase(rowIndex, columnIndex, item);\r\n                    if (this.getEditMode() === EDIT_MODE_CELL) {\r\n                        var $cell = this._rowsView._getCellElement(rowIndex, columnIndex);\r\n                        var validator = $cell && $cell.data(\"dxValidator\");\r\n                        var rowOptions = $cell && $cell.closest(\".dx-row\").data(\"options\");\r\n                        var value = validator && validator.option(\"adapter\").getValue();\r\n                        if (validator && cellValueShouldBeValidated(value, rowOptions)) {\r\n                            var validatingController = this.getController(\"validating\");\r\n                            var deferred = new _deferred.Deferred;\r\n                            (0, _deferred.when)(validatingController.validateCell(validator), result).done(function(validationResult, result) {\r\n                                deferred.resolve(validationResult.status === VALIDATION_STATUS.valid && result)\r\n                            });\r\n                            return deferred.promise()\r\n                        } else {\r\n                            if (!validator) {\r\n                                return result\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _afterSaveEditData: function(cancel) {\r\n                    var _this7 = this;\r\n                    var $firstErrorRow;\r\n                    var isCellEditMode = this.getEditMode() === EDIT_MODE_CELL;\r\n                    (0, _iterator.each)(this.getChanges(), function(_, change) {\r\n                        var $errorRow = _this7._showErrorRow(change);\r\n                        $firstErrorRow = $firstErrorRow || $errorRow\r\n                    });\r\n                    if ($firstErrorRow) {\r\n                        var scrollable = this._rowsView.getScrollable();\r\n                        if (scrollable) {\r\n                            scrollable.update();\r\n                            scrollable.scrollToElement($firstErrorRow)\r\n                        }\r\n                    }\r\n                    if (cancel && isCellEditMode && this._needUpdateRow()) {\r\n                        var editRowIndex = this.getEditRowIndex();\r\n                        this._dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [editRowIndex]\r\n                        });\r\n                        this._focusEditingCell()\r\n                    } else {\r\n                        if (!cancel) {\r\n                            var shouldResetValidationState = true;\r\n                            if (isCellEditMode) {\r\n                                var columns = this.getController(\"columns\").getColumns();\r\n                                var columnsWithValidatingEditors = columns.filter(function(col) {\r\n                                    var _col$validationRules;\r\n                                    return col.showEditorAlways && (null === (_col$validationRules = col.validationRules) || void 0 === _col$validationRules ? void 0 : _col$validationRules.length) > 0\r\n                                }).length > 0;\r\n                                shouldResetValidationState = !columnsWithValidatingEditors\r\n                            }\r\n                            if (shouldResetValidationState) {\r\n                                this.getController(\"validating\")._validationState = []\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    if (\"standard\" === this.option(\"scrolling.mode\")) {\r\n                        this.resetRowAndPageIndices()\r\n                    }\r\n                    if (\"prepend\" === args.changeType) {\r\n                        (0, _iterator.each)(validationState, function(_, validationData) {\r\n                            validationData.rowIndex += args.items.length\r\n                        })\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                resetRowAndPageIndices: function() {\r\n                    var _this8 = this;\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    (0, _iterator.each)(validationState, function(_, validationData) {\r\n                        if (validationData.pageIndex !== _this8._pageIndex) {\r\n                            delete validationData.pageIndex;\r\n                            delete validationData.rowIndex\r\n                        }\r\n                    })\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    validatingController._validationState = [];\r\n                    this.callBase()\r\n                },\r\n                _showErrorRow: function(change) {\r\n                    var $popupContent;\r\n                    var errorHandling = this.getController(\"errorHandling\");\r\n                    var items = this.getController(\"data\").items();\r\n                    var rowIndex = this.getIndexByKey(change.key, items);\r\n                    var validationData = this.getController(\"validating\")._getValidationData(change.key);\r\n                    if (!(null !== validationData && void 0 !== validationData && validationData.isValid) && null !== validationData && void 0 !== validationData && validationData.errorText && rowIndex >= 0) {\r\n                        $popupContent = this.getPopupContent();\r\n                        return errorHandling && errorHandling.renderErrorRow(null === validationData || void 0 === validationData ? void 0 : validationData.errorText, rowIndex, $popupContent)\r\n                    }\r\n                },\r\n                updateFieldValue: function(e) {\r\n                    var _this9 = this;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var deferred = new _deferred.Deferred;\r\n                    validatingController.removeCellValidationResult({\r\n                        change: this.getChangeByKey(e.key),\r\n                        columnIndex: e.column.index\r\n                    });\r\n                    this.callBase.apply(this, arguments).done(function() {\r\n                        var currentValidator = validatingController.getCellValidator({\r\n                            rowKey: e.key,\r\n                            columnIndex: e.column.index\r\n                        });\r\n                        (0, _deferred.when)(currentValidator && validatingController.validateCell(currentValidator)).done(function(validationResult) {\r\n                            _this9.getController(\"editorFactory\").refocus();\r\n                            deferred.resolve(validationResult)\r\n                        })\r\n                    });\r\n                    return deferred.promise()\r\n                },\r\n                highlightDataCell: function($cell, parameters) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    validatingController.setCellValidationStatus(parameters);\r\n                    var isEditableCell = !!parameters.setValue;\r\n                    var cellModified = this.isCellModified(parameters);\r\n                    var isValidated = (0, _type.isDefined)(parameters.validationStatus);\r\n                    var needValidation = cellModified && parameters.column.setCellValue || isEditableCell && !cellModified && !(parameters.row.isNewRow || !isValidated);\r\n                    if (needValidation) {\r\n                        var validator = $cell.data(\"dxValidator\");\r\n                        if (validator) {\r\n                            (0, _deferred.when)(this.getController(\"validating\").validateCell(validator)).done(function() {\r\n                                validatingController.setCellValidationStatus(parameters)\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                getChangeByKey: function(key) {\r\n                    var changes = this.getChanges();\r\n                    return changes[_uiGrid_core2.default.getIndexByKey(key, changes)]\r\n                },\r\n                isCellModified: function(parameters) {\r\n                    var cellModified = this.callBase(parameters);\r\n                    var change = this.getChangeByKey(parameters.key);\r\n                    var isCellInvalid = !!parameters.row && this.getController(\"validating\").isInvalidCell({\r\n                        rowKey: parameters.key,\r\n                        columnIndex: parameters.column.index\r\n                    });\r\n                    return cellModified || this.getController(\"validating\")._rowIsValidated(change) && isCellInvalid\r\n                }\r\n            },\r\n            editorFactory: function() {\r\n                var getWidthOfVisibleCells = function(that, element) {\r\n                    var rowIndex = (0, _renderer.default)(element).closest(\"tr\").index();\r\n                    var $cellElements = (0, _renderer.default)(that._rowsView.getRowElement(rowIndex)).first().children().filter(\":not(.dx-hidden-cell)\");\r\n                    return that._rowsView._getWidths($cellElements).reduce(function(w1, w2) {\r\n                        return w1 + w2\r\n                    }, 0)\r\n                };\r\n                var getBoundaryNonFixedColumnsInfo = function(fixedColumns) {\r\n                    var firstNonFixedColumnIndex;\r\n                    var lastNonFixedColumnIndex;\r\n                    fixedColumns.some(function(column, index) {\r\n                        if (column.command === COMMAND_TRANSPARENT) {\r\n                            firstNonFixedColumnIndex = 0 === index ? -1 : index;\r\n                            lastNonFixedColumnIndex = index === fixedColumns.length - 1 ? -1 : index + column.colspan - 1;\r\n                            return true\r\n                        }\r\n                    });\r\n                    return {\r\n                        startColumnIndex: firstNonFixedColumnIndex,\r\n                        endColumnIndex: lastNonFixedColumnIndex\r\n                    }\r\n                };\r\n                return {\r\n                    _showRevertButton: function($container) {\r\n                        var _this10 = this;\r\n                        if (!$container || !$container.length) {\r\n                            return\r\n                        }\r\n                        var $tooltipElement = this._rowsView.element().find(\".\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                        var $overlayContainer = $container.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                        $tooltipElement && $tooltipElement.remove();\r\n                        $tooltipElement = (0, _renderer.default)(\"<div>\").addClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)).appendTo($container);\r\n                        var tooltipOptions = {\r\n                            animation: null,\r\n                            visible: true,\r\n                            width: \"auto\",\r\n                            height: \"auto\",\r\n                            target: $container,\r\n                            shading: false,\r\n                            container: $overlayContainer,\r\n                            propagateOutsideClick: true,\r\n                            closeOnOutsideClick: false,\r\n                            closeOnTargetScroll: false,\r\n                            contentTemplate: function() {\r\n                                var $buttonElement = (0, _renderer.default)(\"<div>\").addClass(REVERT_BUTTON_CLASS);\r\n                                var buttonOptions = {\r\n                                    icon: \"revert\",\r\n                                    hint: _this10.option(\"editing.texts.validationCancelChanges\"),\r\n                                    onClick: function() {\r\n                                        _this10._editingController.cancelEditData()\r\n                                    }\r\n                                };\r\n                                return new _button.default($buttonElement, buttonOptions).$element()\r\n                            },\r\n                            position: {\r\n                                my: \"left top\",\r\n                                at: \"right top\",\r\n                                offset: \"1 0\",\r\n                                collision: \"flip\",\r\n                                boundaryOffset: \"0 0\",\r\n                                boundary: this._rowsView.element()\r\n                            },\r\n                            onPositioned: this._positionedHandler.bind(this)\r\n                        };\r\n                        return new _overlay.default($tooltipElement, tooltipOptions)\r\n                    },\r\n                    _hideFixedGroupCell: function($cell, overlayOptions) {\r\n                        var $nextFixedRowElement;\r\n                        var $groupCellElement;\r\n                        var isFixedColumns = this._rowsView.isFixedColumns();\r\n                        var isFormEditMode = this._editingController.isFormEditMode();\r\n                        if (isFixedColumns && !isFormEditMode) {\r\n                            var nextRowOptions = $cell.closest(\".dx-row\").next().data(\"options\");\r\n                            if (nextRowOptions && \"group\" === nextRowOptions.rowType) {\r\n                                $nextFixedRowElement = (0, _renderer.default)(this._rowsView.getRowElement(nextRowOptions.rowIndex)).last();\r\n                                $groupCellElement = $nextFixedRowElement.find(\".\" + GROUP_CELL_CLASS);\r\n                                if ($groupCellElement.length && \"hidden\" !== $groupCellElement.get(0).style.visibility) {\r\n                                    $groupCellElement.css(\"visibility\", \"hidden\");\r\n                                    overlayOptions.onDisposing = function() {\r\n                                        $groupCellElement.css(\"visibility\", \"\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    _positionedHandler: function(e, isOverlayVisible) {\r\n                        if (!e.component.__skipPositionProcessing) {\r\n                            var isRevertButton = (0, _renderer.default)(e.element).hasClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                            var needRepaint = !isRevertButton && this._rowsView.updateFreeSpaceRowHeight();\r\n                            var normalizedPosition = this._normalizeValidationMessagePositionAndMaxWidth(e, isRevertButton, isOverlayVisible);\r\n                            e.component.__skipPositionProcessing = !!(needRepaint || normalizedPosition);\r\n                            if (normalizedPosition) {\r\n                                e.component.option(normalizedPosition)\r\n                            } else {\r\n                                if (needRepaint) {\r\n                                    e.component.repaint()\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    _showValidationMessage: function($cell, messages, alignment, revertTooltip) {\r\n                        var _this11 = this;\r\n                        var editorPopup = $cell.find(\".dx-dropdowneditor-overlay\").data(\"dxPopup\");\r\n                        var isOverlayVisible = editorPopup && editorPopup.option(\"visible\");\r\n                        var myPosition = isOverlayVisible ? \"top right\" : \"top \" + alignment;\r\n                        var atPosition = isOverlayVisible ? \"top left\" : \"bottom \" + alignment;\r\n                        var $overlayContainer = $cell.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                        var errorMessageText = \"\";\r\n                        messages && messages.forEach(function(message) {\r\n                            errorMessageText += (errorMessageText.length ? \"<br/>\" : \"\") + (0, _string.encodeHtml)(message)\r\n                        });\r\n                        var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                        this._rowsView.element().find(\".\" + invalidMessageClass).remove();\r\n                        var $overlayElement = (0, _renderer.default)(\"<div>\").addClass(INVALID_MESSAGE_CLASS).addClass(INVALID_MESSAGE_ALWAYS_CLASS).addClass(invalidMessageClass).html(errorMessageText).appendTo($cell);\r\n                        var overlayOptions = {\r\n                            target: $cell,\r\n                            container: $overlayContainer,\r\n                            shading: false,\r\n                            width: \"auto\",\r\n                            height: \"auto\",\r\n                            visible: true,\r\n                            animation: false,\r\n                            propagateOutsideClick: true,\r\n                            closeOnOutsideClick: false,\r\n                            closeOnTargetScroll: false,\r\n                            position: {\r\n                                collision: \"flip\",\r\n                                boundary: this._rowsView.element(),\r\n                                boundaryOffset: \"0 0\",\r\n                                offset: {\r\n                                    x: 0,\r\n                                    y: !isOverlayVisible && (_browser.default.mozilla || _browser.default.msie) ? -1 : 0\r\n                                },\r\n                                my: myPosition,\r\n                                at: atPosition\r\n                            },\r\n                            onPositioned: function(e) {\r\n                                _this11._positionedHandler(e, isOverlayVisible);\r\n                                _this11._shiftValidationMessageIfNeed(e.component.$content(), revertTooltip && revertTooltip.$content(), $cell)\r\n                            }\r\n                        };\r\n                        this._hideFixedGroupCell($cell, overlayOptions);\r\n                        new _overlay.default($overlayElement, overlayOptions)\r\n                    },\r\n                    _normalizeValidationMessagePositionAndMaxWidth: function(options, isRevertButton, isOverlayVisible) {\r\n                        var fixedColumns = this._columnsController.getFixedColumns();\r\n                        if (!fixedColumns || !fixedColumns.length) {\r\n                            return\r\n                        }\r\n                        var position;\r\n                        var visibleTableWidth = !isRevertButton && getWidthOfVisibleCells(this, options.element);\r\n                        var $overlayContentElement = options.component.$content();\r\n                        var validationMessageWidth = $overlayContentElement.outerWidth(true);\r\n                        var needMaxWidth = !isRevertButton && validationMessageWidth > visibleTableWidth;\r\n                        var columnIndex = this._rowsView.getCellIndex((0, _renderer.default)(options.element).closest(\"td\"));\r\n                        var boundaryNonFixedColumnsInfo = getBoundaryNonFixedColumnsInfo(fixedColumns);\r\n                        if (!isRevertButton && (columnIndex === boundaryNonFixedColumnsInfo.startColumnIndex || needMaxWidth)) {\r\n                            position = {\r\n                                collision: \"none flip\",\r\n                                my: \"top left\",\r\n                                at: isOverlayVisible ? \"top right\" : \"bottom left\"\r\n                            }\r\n                        } else {\r\n                            if (columnIndex === boundaryNonFixedColumnsInfo.endColumnIndex) {\r\n                                position = {\r\n                                    collision: \"none flip\",\r\n                                    my: \"top right\",\r\n                                    at: isRevertButton || isOverlayVisible ? \"top left\" : \"bottom right\"\r\n                                };\r\n                                if (isRevertButton) {\r\n                                    position.offset = \"-1 0\"\r\n                                }\r\n                            }\r\n                        }\r\n                        return position && {\r\n                            position: position,\r\n                            maxWidth: needMaxWidth ? visibleTableWidth - 2 : void 0\r\n                        }\r\n                    },\r\n                    _shiftValidationMessageIfNeed: function($content, $revertContent, $cell) {\r\n                        if (!$revertContent) {\r\n                            return\r\n                        }\r\n                        var contentOffset = $content.offset();\r\n                        var revertContentOffset = $revertContent.offset();\r\n                        if (contentOffset.top === revertContentOffset.top && contentOffset.left + $content.width() > revertContentOffset.left) {\r\n                            var left = $revertContent.width() + PADDING_BETWEEN_TOOLTIPS;\r\n                            $content.css(\"left\", revertContentOffset.left < $cell.offset().left ? -left : left)\r\n                        }\r\n                    },\r\n                    _getTooltipsSelector: function() {\r\n                        var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                        var revertTooltipClass = this.addWidgetPrefix(REVERT_TOOLTIP_CLASS);\r\n                        return \".dx-editor-cell .\" + revertTooltipClass + \", .dx-editor-cell .\" + invalidMessageClass + \", .dx-cell-modified .\" + invalidMessageClass\r\n                    },\r\n                    init: function() {\r\n                        this.callBase();\r\n                        this._editingController = this.getController(\"editing\");\r\n                        this._columnsController = this.getController(\"columns\");\r\n                        this._rowsView = this.getView(\"rowsView\")\r\n                    },\r\n                    loseFocus: function(skipValidator) {\r\n                        if (!skipValidator) {\r\n                            this.getController(\"validating\").setValidator(null)\r\n                        }\r\n                        this.callBase()\r\n                    },\r\n                    updateCellState: function($element, validationResult, hideBorder) {\r\n                        var _change$data;\r\n                        var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                        var $cell = null !== $focus && void 0 !== $focus && $focus.is(\"td\") ? $focus : null;\r\n                        var rowOptions = null === $focus || void 0 === $focus ? void 0 : $focus.closest(\".dx-row\").data(\"options\");\r\n                        var change = rowOptions ? this.getController(\"editing\").getChangeByKey(rowOptions.key) : null;\r\n                        var column = $cell && this.getController(\"columns\").getVisibleColumns()[$cell.index()];\r\n                        var isCellModified = void 0 !== (null === change || void 0 === change ? void 0 : null === (_change$data = change.data) || void 0 === _change$data ? void 0 : _change$data[null === column || void 0 === column ? void 0 : column.name]) && !this._editingController.isSaving();\r\n                        var revertTooltip;\r\n                        if ((null === validationResult || void 0 === validationResult ? void 0 : validationResult.status) === VALIDATION_STATUS.invalid || isCellModified) {\r\n                            if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                                revertTooltip = this._showRevertButton($focus)\r\n                            }\r\n                        }\r\n                        var showValidationMessage = validationResult && validationResult.status === VALIDATION_STATUS.invalid;\r\n                        if (showValidationMessage && $cell && column && validationResult && validationResult.brokenRules) {\r\n                            var errorMessages = [];\r\n                            validationResult.brokenRules.forEach(function(rule) {\r\n                                errorMessages.push(rule.message)\r\n                            });\r\n                            this._showValidationMessage($focus, errorMessages, column.alignment || \"left\", revertTooltip)\r\n                        }!hideBorder && this._rowsView.element() && this._rowsView.updateFreeSpaceRowHeight()\r\n                    },\r\n                    focus: function($element, hideBorder) {\r\n                        var _this12 = this;\r\n                        if (!arguments.length) {\r\n                            return this.callBase()\r\n                        }\r\n                        var $tooltips = $element && $element.closest(\".\" + this.addWidgetPrefix(ROWS_VIEW_CLASS)).find(this._getTooltipsSelector());\r\n                        $tooltips && $tooltips.remove();\r\n                        if (null !== $element && void 0 !== $element && $element.hasClass(\"dx-row\")) {\r\n                            return this.callBase($element, hideBorder)\r\n                        }\r\n                        var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                        var callBase = this.callBase;\r\n                        var validator = $focus && ($focus.data(\"dxValidator\") || $element.find(\".\" + this.addWidgetPrefix(VALIDATOR_CLASS)).eq(0).data(\"dxValidator\"));\r\n                        var rowOptions = $focus && $focus.closest(\".dx-row\").data(\"options\");\r\n                        var editingController = this.getController(\"editing\");\r\n                        var change = rowOptions ? editingController.getChangeByKey(rowOptions.key) : null;\r\n                        var validationResult;\r\n                        var validatingController = this.getController(\"validating\");\r\n                        if (validator) {\r\n                            validatingController.setValidator(validator);\r\n                            var value = validator.option(\"adapter\").getValue();\r\n                            if (cellValueShouldBeValidated(value, rowOptions) || validatingController._rowIsValidated(change)) {\r\n                                editingController.waitForDeferredOperations().done(function() {\r\n                                    (0, _deferred.when)(validatingController.validateCell(validator)).done(function(result) {\r\n                                        validationResult = result;\r\n                                        var column = validationResult.validator.option(\"dataGetter\")().column;\r\n                                        if (change && column && !validatingController.isCurrentValidatorProcessing({\r\n                                                rowKey: change.key,\r\n                                                columnIndex: column.index\r\n                                            })) {\r\n                                            return\r\n                                        }\r\n                                        if (validationResult.status === VALIDATION_STATUS.invalid) {\r\n                                            hideBorder = true\r\n                                        }\r\n                                        _this12.updateCellState($element, validationResult, hideBorder);\r\n                                        callBase.call(_this12, $element, hideBorder)\r\n                                    })\r\n                                });\r\n                                return this.callBase($element, hideBorder)\r\n                            }\r\n                        }\r\n                        this.updateCellState($element, validationResult, hideBorder);\r\n                        return this.callBase($element, hideBorder)\r\n                    },\r\n                    getEditorInstance: function($container) {\r\n                        var $editor = $container.find(\".dx-texteditor\").eq(0);\r\n                        return _uiGrid_core2.default.getWidgetInstance($editor)\r\n                    }\r\n                }\r\n            }(),\r\n            data: {\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var _oldRow$cells, _cell$column$validati;\r\n                    var cell = null === (_oldRow$cells = oldRow.cells) || void 0 === _oldRow$cells ? void 0 : _oldRow$cells[columnIndex];\r\n                    var oldValidationStatus = cell && cell.validationStatus;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationResult = validatingController.getCellValidationResult({\r\n                        rowKey: oldRow.key,\r\n                        columnIndex: columnIndex\r\n                    });\r\n                    var validationData = validatingController._getValidationData(oldRow.key);\r\n                    var newValidationStatus = validationResultIsValid(validationResult) ? validationResult.status : validationResult;\r\n                    var rowIsModified = JSON.stringify(newRow.modifiedValues) !== JSON.stringify(oldRow.modifiedValues);\r\n                    var cellIsMarkedAsInvalid = (0, _renderer.default)(null === cell || void 0 === cell ? void 0 : cell.cellElement).hasClass(this.addWidgetPrefix(INVALIDATE_CLASS));\r\n                    var editingChanged = oldRow.isEditing !== newRow.isEditing;\r\n                    var hasValidationRules = null === cell || void 0 === cell ? void 0 : null === (_cell$column$validati = cell.column.validationRules) || void 0 === _cell$column$validati ? void 0 : _cell$column$validati.length;\r\n                    if (editingChanged && hasValidationRules || oldValidationStatus !== newValidationStatus && rowIsModified || validationData.isValid && cellIsMarkedAsInvalid) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var that = this;\r\n                    var $rowElements;\r\n                    var $freeSpaceRowElement;\r\n                    var $freeSpaceRowElements;\r\n                    var $element = that.element();\r\n                    var $tooltipContent = $element && $element.find(\".\" + that.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS) + \" .dx-overlay-content\");\r\n                    that.callBase($table);\r\n                    if ($tooltipContent && $tooltipContent.length) {\r\n                        $rowElements = that._getRowElements();\r\n                        $freeSpaceRowElements = that._getFreeSpaceRowElements($table);\r\n                        $freeSpaceRowElement = $freeSpaceRowElements.first();\r\n                        if ($freeSpaceRowElement && 1 === $rowElements.length && (!$freeSpaceRowElement.is(\":visible\") || $tooltipContent.outerHeight() > $freeSpaceRowElement.outerHeight())) {\r\n                            $freeSpaceRowElements.show();\r\n                            $freeSpaceRowElements.height($tooltipContent.outerHeight());\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                _formItemPrepared: function(cellOptions, $container) {\r\n                    var _this13 = this;\r\n                    this.callBase.apply(this, arguments);\r\n                    (0, _common.deferUpdate)(function() {\r\n                        var $editor = $container.find(\".dx-widget\").first();\r\n                        var isEditorDisposed = $editor.length && !$editor.children().length;\r\n                        if (!isEditorDisposed) {\r\n                            _this13.getController(\"validating\").createValidator(cellOptions, $editor)\r\n                        }\r\n                    })\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    if (!this.getController(\"editing\").isFormEditMode()) {\r\n                        this.getController(\"validating\").createValidator(parameters, $cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _uiGrid_core = require(\"./ui.grid_core.virtual_columns_core\");\r\nvar DEFAULT_COLUMN_WIDTH = 50;\r\nvar VirtualScrollingRowsViewExtender = {\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._columnsController.resize()\r\n    },\r\n    _handleScroll: function(e) {\r\n        var that = this;\r\n        var scrollable = this.getScrollable();\r\n        var left = e.scrollOffset.left;\r\n        that.callBase.apply(that, arguments);\r\n        if (that.option(\"rtlEnabled\") && scrollable) {\r\n            left = scrollable.$content().width() - scrollable.$element().width() - left\r\n        }\r\n        that._columnsController.setScrollPosition(left)\r\n    }\r\n};\r\nvar HeaderViewExtender = {\r\n    _renderCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this._columnsController.isVirtualMode()) {\r\n            this._updateScrollLeftPosition()\r\n        }\r\n    }\r\n};\r\nvar ColumnsControllerExtender = function() {\r\n    var getWidths = function(columns) {\r\n        return columns.map(function(column) {\r\n            return column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH\r\n        })\r\n    };\r\n    var members = {\r\n        init: function() {\r\n            var that = this;\r\n            that.callBase();\r\n            that._beginPageIndex = 0;\r\n            that._endPageIndex = 0;\r\n            that._position = 0;\r\n            that._virtualVisibleColumns = {}\r\n        },\r\n        resetColumnsCache: function() {\r\n            this.callBase();\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        getBeginPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.floor(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return 0\r\n        },\r\n        getTotalWidth: function() {\r\n            var width = this.option(\"width\");\r\n            if (\"number\" === typeof width) {\r\n                return width\r\n            }\r\n            return this.getController(\"resizing\")._lastWidth || this.component.$element().outerWidth()\r\n        },\r\n        getEndPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            position += this.getTotalWidth();\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.ceil(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return Math.ceil(widths.length / this.getColumnPageSize())\r\n        },\r\n        getColumnPageSize: function() {\r\n            return this.option(\"scrolling.columnPageSize\")\r\n        },\r\n        _fireColumnsChanged: function() {\r\n            var date = new Date;\r\n            this.columnsChanged.fire({\r\n                optionNames: {\r\n                    all: true,\r\n                    length: 1\r\n                },\r\n                changeTypes: {\r\n                    columns: true,\r\n                    length: 1\r\n                }\r\n            });\r\n            this._renderTime = new Date - date\r\n        },\r\n        setScrollPosition: function(position) {\r\n            var that = this;\r\n            var renderingThreshold = that.option(\"scrolling.columnRenderingThreshold\");\r\n            if (that._renderTime > renderingThreshold) {\r\n                clearTimeout(that._changedTimeout);\r\n                that._changedTimeout = setTimeout(function() {\r\n                    that._setScrollPositionCore(position)\r\n                }, that.option(\"scrolling.timeout\"))\r\n            } else {\r\n                that._setScrollPositionCore(position)\r\n            }\r\n        },\r\n        isVirtualMode: function() {\r\n            return (0, _window.hasWindow)() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n        },\r\n        resize: function() {\r\n            this._setScrollPositionCore(this._position)\r\n        },\r\n        _setScrollPositionCore: function(position) {\r\n            var that = this;\r\n            if (that.isVirtualMode()) {\r\n                var beginPageIndex = that.getBeginPageIndex(position);\r\n                var endPageIndex = that.getEndPageIndex(position);\r\n                var needColumnsChanged = position < that._position ? that._beginPageIndex > beginPageIndex : that._endPageIndex < endPageIndex;\r\n                that._position = position;\r\n                if (needColumnsChanged) {\r\n                    that._beginPageIndex = beginPageIndex;\r\n                    that._endPageIndex = endPageIndex;\r\n                    that._fireColumnsChanged()\r\n                }\r\n            }\r\n        },\r\n        getFixedColumns: function(rowIndex, isBase) {\r\n            var fixedColumns = this.callBase(rowIndex);\r\n            if (this.isVirtualMode() && !isBase && fixedColumns.length) {\r\n                var transparentColumnIndex = fixedColumns.map(function(c) {\r\n                    return c.command\r\n                }).indexOf(\"transparent\");\r\n                fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\r\n                return fixedColumns\r\n            }\r\n            return fixedColumns\r\n        },\r\n        getVisibleColumns: function(rowIndex, isBase) {\r\n            if (isBase || !this.isVirtualMode()) {\r\n                return this.callBase(rowIndex)\r\n            }\r\n            if (!this._beginPageIndex && !this._endPageIndex) {\r\n                this._beginPageIndex = this.getBeginPageIndex(this._position);\r\n                this._endPageIndex = this.getEndPageIndex(this._position)\r\n            }\r\n            var beginPageIndex = this._beginPageIndex;\r\n            var endPageIndex = this._endPageIndex;\r\n            var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\r\n            if (this._virtualVisibleColumns[visibleColumnsHash]) {\r\n                return this._virtualVisibleColumns[visibleColumnsHash]\r\n            }\r\n            var visibleColumns = this.callBase();\r\n            var rowCount = this.getRowCount();\r\n            var pageSize = this.getColumnPageSize();\r\n            var startIndex = beginPageIndex * pageSize;\r\n            var endIndex = endPageIndex * pageSize;\r\n            var fixedColumns = this.getFixedColumns(void 0, true);\r\n            var transparentColumnIndex = fixedColumns.map(function(c) {\r\n                return c.command\r\n            }).indexOf(\"transparent\");\r\n            var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\r\n            var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\r\n            var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\r\n            var beginWidth = getWidths(beginColumns).reduce(function(a, b) {\r\n                return a + b\r\n            }, 0);\r\n            if (!beginWidth) {\r\n                startIndex = 0\r\n            }\r\n            var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\r\n            var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\r\n            var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\r\n            var endWidth = getWidths(endColumns).reduce(function(a, b) {\r\n                return a + b\r\n            }, 0);\r\n            if (!endWidth) {\r\n                endIndex = visibleColumns.length\r\n            }\r\n            if (rowCount > 1 && \"number\" === typeof rowIndex) {\r\n                var columnsInfo = [];\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    columnsInfo.push(this.callBase(i))\r\n                }\r\n                beginFixedColumns = (0, _uiGrid_core.createColumnsInfo)(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\r\n                endFixedColumns = (0, _uiGrid_core.createColumnsInfo)(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\r\n                visibleColumns = (0, _uiGrid_core.createColumnsInfo)(columnsInfo, startIndex, endIndex)[rowIndex] || []\r\n            } else {\r\n                visibleColumns = visibleColumns.slice(startIndex, endIndex)\r\n            }\r\n            if (beginWidth) {\r\n                visibleColumns.unshift({\r\n                    command: \"virtual\",\r\n                    width: beginWidth\r\n                });\r\n                visibleColumns = beginFixedColumns.concat(visibleColumns)\r\n            }\r\n            if (endWidth) {\r\n                visibleColumns.push({\r\n                    command: \"virtual\",\r\n                    width: endWidth\r\n                });\r\n                visibleColumns = visibleColumns.concat(endFixedColumns)\r\n            }\r\n            this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\r\n            return visibleColumns\r\n        },\r\n        getColumnIndexOffset: function() {\r\n            var offset = 0;\r\n            if (this._beginPageIndex > 0) {\r\n                var fixedColumns = this.getFixedColumns();\r\n                var transparentColumnIndex = fixedColumns.map(function(c) {\r\n                    return c.command\r\n                }).indexOf(\"transparent\");\r\n                var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\r\n                offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1\r\n            }\r\n            return offset > 0 ? offset : 0\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._changedTimeout);\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    };\r\n    return members\r\n}();\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                columnRenderingMode: \"standard\",\r\n                columnPageSize: 5,\r\n                columnRenderingThreshold: 300\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: ColumnsControllerExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: HeaderViewExtender,\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.virtual_columns_core.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.createColumnsInfo = createColumnsInfo;\r\nexports.foreachColumnInfo = foreachColumnInfo;\r\nvar _extend = require(\"../../core/utils/extend\");\r\n\r\nfunction foreachColumnInfo(info, callback, rowIndex, offsets, columnCount, lastProcessedIndexes) {\r\n    rowIndex = rowIndex || 0;\r\n    offsets = offsets || [];\r\n    lastProcessedIndexes = lastProcessedIndexes || [];\r\n    offsets[rowIndex] = offsets[rowIndex] || 0;\r\n    var row = info[rowIndex];\r\n    var startIndex = lastProcessedIndexes[rowIndex] + 1 || 0;\r\n    var processedColumnCount = 0;\r\n    var colIndex;\r\n    if (!row) {\r\n        return\r\n    }\r\n    for (colIndex = startIndex; colIndex < row.length; colIndex++) {\r\n        var cell = row[colIndex];\r\n        var visibleIndex = colIndex + offsets[rowIndex];\r\n        var colspan = cell.colspan || 1;\r\n        foreachColumnInfo(info, callback, rowIndex + (cell.rowspan || 1), offsets, colspan, lastProcessedIndexes);\r\n        offsets[rowIndex] += colspan - 1;\r\n        processedColumnCount += colspan;\r\n        if (cell.rowspan) {\r\n            for (var i = rowIndex + 1; i < rowIndex + cell.rowspan; i++) {\r\n                offsets[i] = offsets[i] || 0;\r\n                offsets[i] += cell.colspan || 1\r\n            }\r\n        }\r\n        if (false === callback(cell, visibleIndex, rowIndex, colIndex)) {\r\n            break\r\n        }\r\n        if (void 0 !== columnCount && processedColumnCount >= columnCount) {\r\n            break\r\n        }\r\n    }\r\n    lastProcessedIndexes[rowIndex] = colIndex\r\n}\r\n\r\nfunction createColumnsInfo(info, startIndex, endIndex) {\r\n    var newInfo = [];\r\n    foreachColumnInfo(info, function(columnInfo, visibleIndex, rowIndex) {\r\n        var cell = columnInfo;\r\n        var colspan;\r\n        var cellColspan = cell.colspan || 1;\r\n        var isVisible = visibleIndex + cellColspan - 1 >= startIndex && visibleIndex < endIndex;\r\n        newInfo[rowIndex] = newInfo[rowIndex] || [];\r\n        if (isVisible) {\r\n            if (visibleIndex < startIndex) {\r\n                colspan = cellColspan - (startIndex - visibleIndex);\r\n                visibleIndex = startIndex\r\n            } else {\r\n                colspan = cellColspan\r\n            }\r\n            if (visibleIndex + colspan > endIndex) {\r\n                colspan = endIndex - visibleIndex\r\n            }\r\n            if (colspan !== cellColspan) {\r\n                cell = (0, _extend.extend)({}, cell, {\r\n                    colspan: colspan\r\n                })\r\n            }\r\n            newInfo[rowIndex].push(cell)\r\n        } else {\r\n            if (visibleIndex > endIndex) {\r\n                return false\r\n            }\r\n        }\r\n    });\r\n    for (var i = 0; i < newInfo.length; i++) {\r\n        newInfo[i] = newInfo[i] || []\r\n    }\r\n    return newInfo\r\n}\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.virtual_scrolling.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _uiGrid_core = require(\"./ui.grid_core.virtual_scrolling_core\");\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TABLE_CLASS = \"table\";\r\nvar BOTTOM_LOAD_PANEL_CLASS = \"bottom-load-panel\";\r\nvar TABLE_CONTENT_CLASS = \"table-content\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar FREESPACE_CLASS = \"dx-freespace-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar SCROLLING_MODE_STANDARD = \"standard\";\r\nvar PIXELS_LIMIT = 25e4;\r\nvar LOAD_TIMEOUT = 300;\r\nvar isVirtualMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL\r\n};\r\nvar isAppendMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE\r\n};\r\nvar isVirtualRowRendering = function(that) {\r\n    var rowRenderingMode = that.option(\"scrolling.rowRenderingMode\");\r\n    if (rowRenderingMode === SCROLLING_MODE_VIRTUAL) {\r\n        return true\r\n    } else {\r\n        if (rowRenderingMode === SCROLLING_MODE_STANDARD) {\r\n            return false\r\n        }\r\n    }\r\n};\r\nvar _correctCount = function(items, count, fromEnd, isItemCountableFunc) {\r\n    for (var i = 0; i < count + 1; i++) {\r\n        var item = items[fromEnd ? items.length - 1 - i : i];\r\n        if (item && !isItemCountableFunc(item, i === count, fromEnd)) {\r\n            count++\r\n        }\r\n    }\r\n    return count\r\n};\r\nvar isItemCountableByDataSource = function(item, dataSource) {\r\n    return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && dataSource.isGroupItemCountable(item.data)\r\n};\r\nvar VirtualScrollingDataSourceAdapterExtender = function() {\r\n    var _updateLoading = function(that) {\r\n        var beginPageIndex = that._virtualScrollController.beginPageIndex(-1);\r\n        if (isVirtualMode(that)) {\r\n            if (beginPageIndex < 0 || that.viewportSize() >= 0 && that.getViewportItemIndex() >= 0 && (beginPageIndex * that.pageSize() > that.getViewportItemIndex() || beginPageIndex * that.pageSize() + that.itemsCount() < that.getViewportItemIndex() + that.viewportSize()) && that._dataSource.isLoading()) {\r\n                if (!that._isLoading) {\r\n                    that._isLoading = true;\r\n                    that.loadingChanged.fire(true)\r\n                }\r\n            } else {\r\n                if (that._isLoading) {\r\n                    that._isLoading = false;\r\n                    that.loadingChanged.fire(false)\r\n                }\r\n            }\r\n        }\r\n    };\r\n    var result = {\r\n        init: function(dataSource) {\r\n            var that = this;\r\n            that.callBase.apply(that, arguments);\r\n            that._items = [];\r\n            that._isLoaded = true;\r\n            that._virtualScrollController = new _uiGrid_core.VirtualScrollController(that.component, {\r\n                pageSize: function() {\r\n                    return that.pageSize()\r\n                },\r\n                totalItemsCount: function() {\r\n                    return that.totalItemsCount()\r\n                },\r\n                hasKnownLastPage: function() {\r\n                    return that.hasKnownLastPage()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return dataSource.pageIndex(index)\r\n                },\r\n                isLoading: function() {\r\n                    return dataSource.isLoading() && !that.isCustomLoading()\r\n                },\r\n                pageCount: function() {\r\n                    return that.pageCount()\r\n                },\r\n                load: function() {\r\n                    return dataSource.load()\r\n                },\r\n                updateLoading: function() {\r\n                    _updateLoading(that)\r\n                },\r\n                itemsCount: function() {\r\n                    return that.itemsCount(true)\r\n                },\r\n                items: function() {\r\n                    return dataSource.items()\r\n                },\r\n                viewportItems: function(items) {\r\n                    if (items) {\r\n                        that._items = items\r\n                    }\r\n                    return that._items\r\n                },\r\n                onChanged: function(e) {\r\n                    that.changed.fire(e)\r\n                },\r\n                changingDuration: function(e) {\r\n                    if (that.isLoading()) {\r\n                        return LOAD_TIMEOUT\r\n                    }\r\n                    return that._renderTime || 0\r\n                }\r\n            })\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            if (!isVirtualMode(this) || this._isLoadingAll) {\r\n                this._isLoading = isLoading;\r\n                this.callBase.apply(this, arguments)\r\n            }\r\n            if (isLoading) {\r\n                this._startLoadTime = new Date\r\n            } else {\r\n                this._startLoadTime = void 0\r\n            }\r\n        },\r\n        _handleLoadError: function() {\r\n            var that = this;\r\n            that._isLoading = false;\r\n            that.loadingChanged.fire(false);\r\n            that.callBase.apply(that, arguments)\r\n        },\r\n        _handleDataChanged: function(e) {\r\n            var callBase = this.callBase.bind(this);\r\n            this._virtualScrollController.handleDataChanged(callBase, e)\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var that = this;\r\n            if (!that.option(\"legacyRendering\") && isVirtualMode(that) && !operationTypes.reload && operationTypes.skip && that._renderTime < that.option(\"scrolling.renderingThreshold\")) {\r\n                options.delay = void 0\r\n            }\r\n            that.callBase.apply(that, arguments)\r\n        },\r\n        items: function() {\r\n            return this._items\r\n        },\r\n        itemsCount: function(isBase) {\r\n            if (isBase) {\r\n                return this.callBase()\r\n            }\r\n            return this._virtualScrollController.itemsCount()\r\n        },\r\n        load: function(loadOptions) {\r\n            if (loadOptions) {\r\n                return this.callBase(loadOptions)\r\n            }\r\n            return this._virtualScrollController.load()\r\n        },\r\n        isLoading: function() {\r\n            return this._isLoading\r\n        },\r\n        isLoaded: function() {\r\n            return this._dataSource.isLoaded() && this._isLoaded\r\n        },\r\n        resetPagesCache: function(isLiveUpdate) {\r\n            if (!isLiveUpdate) {\r\n                this._virtualScrollController.reset(true)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _changeRowExpandCore: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            this.resetPagesCache();\r\n            _updateLoading(this);\r\n            return result\r\n        },\r\n        reload: function() {\r\n            this._dataSource.pageIndex(this.pageIndex());\r\n            var virtualScrollController = this._virtualScrollController;\r\n            if (virtualScrollController) {\r\n                var d = new _deferred.Deferred;\r\n                this.callBase.apply(this, arguments).done(function(r) {\r\n                    var delayDeferred = virtualScrollController._delayDeferred;\r\n                    if (delayDeferred) {\r\n                        delayDeferred.done(d.resolve).fail(d.reject)\r\n                    } else {\r\n                        d.resolve(r)\r\n                    }\r\n                }).fail(d.reject);\r\n                return d\r\n            } else {\r\n                return this.callBase.apply(this, arguments)\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var dataSource = that._dataSource;\r\n            if (operationTypes.reload) {\r\n                that._virtualScrollController.reset();\r\n                dataSource.items().length = 0;\r\n                that._isLoaded = false;\r\n                _updateLoading(that);\r\n                that._isLoaded = true;\r\n                if (isAppendMode(that)) {\r\n                    that.pageIndex(0);\r\n                    dataSource.pageIndex(0);\r\n                    storeLoadOptions.pageIndex = 0;\r\n                    options.pageIndex = 0;\r\n                    storeLoadOptions.skip = 0\r\n                } else {\r\n                    dataSource.pageIndex(that.pageIndex());\r\n                    if (dataSource.paginate()) {\r\n                        options.pageIndex = that.pageIndex();\r\n                        storeLoadOptions.skip = that.pageIndex() * that.pageSize()\r\n                    }\r\n                }\r\n            } else {\r\n                if (isAppendMode(that) && storeLoadOptions.skip && that._skipCorrection < 0) {\r\n                    storeLoadOptions.skip += that._skipCorrection\r\n                }\r\n            }\r\n            return that.callBase.apply(that, arguments)\r\n        },\r\n        dispose: function() {\r\n            this._virtualScrollController.dispose();\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    };\r\n    [\"virtualItemsCount\", \"getContentOffset\", \"getVirtualContentSize\", \"setContentSize\", \"setViewportPosition\", \"getViewportItemIndex\", \"setViewportItemIndex\", \"getItemIndexByPosition\", \"viewportSize\", \"viewportItemSize\", \"getItemSize\", \"getItemSizes\", \"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"loadIfNeed\"].forEach(function(name) {\r\n        result[name] = function() {\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    });\r\n    return result\r\n}();\r\nvar VirtualScrollingRowsViewExtender = function() {\r\n    var removeEmptyRows = function($emptyRows, className) {\r\n        var getRowParent = function(row) {\r\n            return (0, _renderer.default)(row).parent(\".\" + className).get(0)\r\n        };\r\n        var tBodies = $emptyRows.toArray().map(getRowParent).filter(function(row) {\r\n            return row\r\n        });\r\n        if (tBodies.length) {\r\n            $emptyRows = (0, _renderer.default)(tBodies)\r\n        }\r\n        var rowCount = className === FREESPACE_CLASS ? $emptyRows.length - 1 : $emptyRows.length;\r\n        for (var i = 0; i < rowCount; i++) {\r\n            $emptyRows.eq(i).remove()\r\n        }\r\n    };\r\n    return {\r\n        init: function() {\r\n            var _dataController$state, _this = this;\r\n            var dataController = this.getController(\"data\");\r\n            this.callBase();\r\n            dataController.pageChanged.add(function() {\r\n                _this.scrollToPage(dataController.pageIndex())\r\n            });\r\n            dataController.dataSourceChanged.add(function() {\r\n                !_this._scrollTop && _this._scrollToCurrentPageOnResize()\r\n            });\r\n            null === (_dataController$state = dataController.stateLoaded) || void 0 === _dataController$state ? void 0 : _dataController$state.add(function() {\r\n                _this._scrollToCurrentPageOnResize()\r\n            });\r\n            this._scrollToCurrentPageOnResize()\r\n        },\r\n        _scrollToCurrentPageOnResize: function() {\r\n            var _this2 = this;\r\n            var dataController = this.getController(\"data\");\r\n            if (!this.option(\"legacyRendering\") && dataController.pageIndex() > 0) {\r\n                var resizeHandler = function resizeHandler() {\r\n                    _this2.resizeCompleted.remove(resizeHandler);\r\n                    _this2.scrollToPage(dataController.pageIndex())\r\n                };\r\n                this.resizeCompleted.add(resizeHandler)\r\n            }\r\n        },\r\n        scrollToPage: function(pageIndex) {\r\n            var that = this;\r\n            var dataController = that._dataController;\r\n            var pageSize = dataController ? dataController.pageSize() : 0;\r\n            var scrollPosition;\r\n            if (isVirtualMode(that) || isAppendMode(that)) {\r\n                var itemSize = dataController.getItemSize();\r\n                var itemSizes = dataController.getItemSizes();\r\n                var itemIndex = pageIndex * pageSize;\r\n                scrollPosition = itemIndex * itemSize;\r\n                for (var index in itemSizes) {\r\n                    if (index < itemIndex) {\r\n                        scrollPosition += itemSizes[index] - itemSize\r\n                    }\r\n                }\r\n            } else {\r\n                scrollPosition = 0\r\n            }\r\n            that.scrollTo({\r\n                y: scrollPosition,\r\n                x: that._scrollLeft\r\n            })\r\n        },\r\n        renderDelayedTemplates: function(e) {\r\n            this._updateContentPosition(true);\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _renderCore: function(e) {\r\n            var that = this;\r\n            var startRenderTime = new Date;\r\n            that.callBase.apply(that, arguments);\r\n            var dataSource = that._dataController._dataSource;\r\n            if (dataSource && e) {\r\n                var itemCount = e.items ? e.items.length : 20;\r\n                var viewportSize = that._dataController.viewportSize() || 20;\r\n                if (isVirtualRowRendering(that)) {\r\n                    dataSource._renderTime = (new Date - startRenderTime) * viewportSize / itemCount\r\n                } else {\r\n                    dataSource._renderTime = new Date - startRenderTime\r\n                }\r\n            }\r\n        },\r\n        _getRowElements: function(tableElement) {\r\n            var $rows = this.callBase(tableElement);\r\n            return $rows && $rows.not(\".\" + VIRTUAL_ROW_CLASS)\r\n        },\r\n        _renderContent: function(contentElement, tableElement) {\r\n            var that = this;\r\n            var virtualItemsCount = that._dataController.virtualItemsCount();\r\n            if (virtualItemsCount && that.option(\"legacyRendering\")) {\r\n                if ((0, _window.hasWindow)()) {\r\n                    tableElement.addClass(that.addWidgetPrefix(TABLE_CONTENT_CLASS))\r\n                }\r\n                if (!contentElement.children().length) {\r\n                    contentElement.append(tableElement)\r\n                } else {\r\n                    contentElement.children().first().replaceWith(tableElement)\r\n                }\r\n                if (1 === contentElement.children(\"table\").length) {\r\n                    contentElement.append(that._createTable());\r\n                    that._contentHeight = 0\r\n                }\r\n                return contentElement\r\n            }\r\n            return that.callBase.apply(that, arguments)\r\n        },\r\n        _removeRowsElements: function(contentTable, removeCount, changeType) {\r\n            var rowElements = this._getRowElements(contentTable).toArray();\r\n            if (\"append\" === changeType) {\r\n                rowElements = rowElements.slice(0, removeCount)\r\n            } else {\r\n                rowElements = rowElements.slice(-removeCount)\r\n            }\r\n            var errorHandlingController = this.getController(\"errorHandling\");\r\n            rowElements.map(function(rowElement) {\r\n                var $rowElement = (0, _renderer.default)(rowElement);\r\n                errorHandlingController && errorHandlingController.removeErrorRow($rowElement.next());\r\n                $rowElement.remove()\r\n            })\r\n        },\r\n        _restoreErrorRow: function(contentTable) {\r\n            var editingController = this.getController(\"editing\");\r\n            editingController && editingController.hasChanges() && this._getRowElements(contentTable).each(function(_, item) {\r\n                var rowOptions = (0, _renderer.default)(item).data(\"options\");\r\n                if (rowOptions) {\r\n                    var change = editingController.getChangeByKey(rowOptions.key);\r\n                    change && editingController._showErrorRow(change)\r\n                }\r\n            })\r\n        },\r\n        _updateContent: function(tableElement, change) {\r\n            var that = this;\r\n            var $freeSpaceRowElements;\r\n            var contentElement = that._findContentElement();\r\n            var changeType = change && change.changeType;\r\n            if (\"append\" === changeType || \"prepend\" === changeType) {\r\n                var contentTable = contentElement.children().first();\r\n                var $tBodies = that._getBodies(tableElement);\r\n                if (!that.option(\"legacyRendering\") && 1 === $tBodies.length) {\r\n                    that._getBodies(contentTable)[\"append\" === changeType ? \"append\" : \"prepend\"]($tBodies.children())\r\n                } else {\r\n                    $tBodies[\"append\" === changeType ? \"appendTo\" : \"prependTo\"](contentTable)\r\n                }\r\n                tableElement.remove();\r\n                $freeSpaceRowElements = that._getFreeSpaceRowElements(contentTable);\r\n                removeEmptyRows($freeSpaceRowElements, FREESPACE_CLASS);\r\n                if (change.removeCount) {\r\n                    that._removeRowsElements(contentTable, change.removeCount, changeType)\r\n                }\r\n                that._restoreErrorRow(contentTable)\r\n            } else {\r\n                that.callBase.apply(that, arguments)\r\n            }\r\n            that._updateBottomLoading()\r\n        },\r\n        _addVirtualRow: function($table, isFixed, location, position) {\r\n            if (!position) {\r\n                return\r\n            }\r\n            var $virtualRow = this._createEmptyRow(VIRTUAL_ROW_CLASS, isFixed, position);\r\n            $virtualRow = this._wrapRowIfNeed($table, $virtualRow);\r\n            this._appendEmptyRow($table, $virtualRow, location)\r\n        },\r\n        _getRowHeights: function() {\r\n            var rowHeights = this._getRowElements(this._tableElement).toArray().map(function(row) {\r\n                return (0, _position.getBoundingRect)(row).height\r\n            });\r\n            return rowHeights\r\n        },\r\n        _correctRowHeights: function(rowHeights) {\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController._dataSource;\r\n            var correctedRowHeights = [];\r\n            var visibleRows = dataController.getVisibleRows();\r\n            var itemSize = 0;\r\n            var firstCountableItem = true;\r\n            for (var i = 0; i < rowHeights.length; i++) {\r\n                var currentItem = visibleRows[i];\r\n                if (!(0, _type.isDefined)(currentItem)) {\r\n                    continue\r\n                }\r\n                if (isItemCountableByDataSource(currentItem, dataSource)) {\r\n                    if (firstCountableItem) {\r\n                        firstCountableItem = false\r\n                    } else {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                }\r\n                itemSize += rowHeights[i]\r\n            }\r\n            itemSize > 0 && correctedRowHeights.push(itemSize);\r\n            return correctedRowHeights\r\n        },\r\n        _updateContentPosition: function(isRender) {\r\n            var that = this;\r\n            var dataController = that._dataController;\r\n            var rowHeight = that._rowHeight || 20;\r\n            dataController.viewportItemSize(rowHeight);\r\n            if (!that.option(\"legacyRendering\") && (isVirtualMode(that) || isVirtualRowRendering(that))) {\r\n                if (!isRender) {\r\n                    var rowHeights = that._getRowHeights();\r\n                    var correctedRowHeights = that._correctRowHeights(rowHeights);\r\n                    dataController.setContentSize(correctedRowHeights)\r\n                }\r\n                var top = dataController.getContentOffset(\"begin\");\r\n                var bottom = dataController.getContentOffset(\"end\");\r\n                var $tables = that.getTableElements();\r\n                var $virtualRows = $tables.children(\"tbody\").children(\".\" + VIRTUAL_ROW_CLASS);\r\n                removeEmptyRows($virtualRows, VIRTUAL_ROW_CLASS);\r\n                $tables.each(function(index) {\r\n                    var isFixed = index > 0;\r\n                    that._isFixedTableRendering = isFixed;\r\n                    that._addVirtualRow((0, _renderer.default)(this), isFixed, \"top\", top);\r\n                    that._addVirtualRow((0, _renderer.default)(this), isFixed, \"bottom\", bottom);\r\n                    that._isFixedTableRendering = false\r\n                })\r\n            } else {\r\n                (0, _common.deferUpdate)(function() {\r\n                    that._updateContentPositionCore()\r\n                })\r\n            }\r\n        },\r\n        _updateContentPositionCore: function() {\r\n            var that = this;\r\n            var contentHeight;\r\n            var $tables;\r\n            var $contentTable;\r\n            var rowHeight = that._rowHeight || 20;\r\n            var virtualItemsCount = that._dataController.virtualItemsCount();\r\n            if (virtualItemsCount) {\r\n                var contentElement = that._findContentElement();\r\n                $tables = contentElement.children();\r\n                $contentTable = $tables.eq(0);\r\n                var virtualTable = $tables.eq(1);\r\n                that._contentTableHeight = $contentTable[0].offsetHeight;\r\n                that._dataController.viewportItemSize(rowHeight);\r\n                that._dataController.setContentSize(that._contentTableHeight);\r\n                contentHeight = that._dataController.getVirtualContentSize();\r\n                var top = that._dataController.getContentOffset();\r\n                (0, _common.deferRender)(function() {\r\n                    (0, _translator.move)($contentTable, {\r\n                        left: 0,\r\n                        top: top\r\n                    });\r\n                    var isRenderVirtualTableContentRequired = that._contentHeight !== contentHeight || 0 === contentHeight || !that._isTableLinesDisplaysCorrect(virtualTable) || !that._isColumnElementsEqual($contentTable.find(\"col\"), virtualTable.find(\"col\"));\r\n                    if (isRenderVirtualTableContentRequired) {\r\n                        that._contentHeight = contentHeight;\r\n                        that._renderVirtualTableContent(virtualTable, contentHeight)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _isTableLinesDisplaysCorrect: function(table) {\r\n            var hasColumnLines = table.find(\".\" + COLUMN_LINES_CLASS).length > 0;\r\n            return hasColumnLines === this.option(\"showColumnLines\")\r\n        },\r\n        _isColumnElementsEqual: function($columns, $virtualColumns) {\r\n            var result = $columns.length === $virtualColumns.length;\r\n            if (result) {\r\n                (0, _iterator.each)($columns, function(index, element) {\r\n                    if (element.style.width !== $virtualColumns[index].style.width) {\r\n                        result = false;\r\n                        return result\r\n                    }\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderVirtualTableContent: function(container, height) {\r\n            var that = this;\r\n            var columns = that._columnsController.getVisibleColumns();\r\n            var html = that._createColGroup(columns).prop(\"outerHTML\");\r\n            var freeSpaceCellsHtml = \"\";\r\n            var columnLinesClass = that.option(\"showColumnLines\") ? COLUMN_LINES_CLASS : \"\";\r\n            var createFreeSpaceRowHtml = function(height) {\r\n                return \"<tr style='height:\" + height + \"px;' class='\" + FREESPACE_CLASS + \" \" + ROW_CLASS + \" \" + columnLinesClass + \"' >\" + freeSpaceCellsHtml + \"</tr>\"\r\n            };\r\n            for (var i = 0; i < columns.length; i++) {\r\n                var classes = that._getCellClasses(columns[i]);\r\n                var classString = classes.length ? \" class='\" + classes.join(\" \") + \"'\" : \"\";\r\n                freeSpaceCellsHtml += \"<td\" + classString + \"/>\"\r\n            }\r\n            while (height > PIXELS_LIMIT) {\r\n                html += createFreeSpaceRowHtml(PIXELS_LIMIT);\r\n                height -= PIXELS_LIMIT\r\n            }\r\n            html += createFreeSpaceRowHtml(height);\r\n            container.addClass(that.addWidgetPrefix(TABLE_CLASS));\r\n            container.html(html)\r\n        },\r\n        _getCellClasses: function(column) {\r\n            var classes = [];\r\n            var cssClass = column.cssClass;\r\n            var isExpandColumn = \"expand\" === column.command;\r\n            cssClass && classes.push(cssClass);\r\n            isExpandColumn && classes.push(this.addWidgetPrefix(GROUP_SPACE_CLASS));\r\n            return classes\r\n        },\r\n        _findBottomLoadPanel: function($contentElement) {\r\n            var $element = $contentElement || this.element();\r\n            var $bottomLoadPanel = $element && $element.find(\".\" + this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS));\r\n            if ($bottomLoadPanel && $bottomLoadPanel.length) {\r\n                return $bottomLoadPanel\r\n            }\r\n        },\r\n        _updateBottomLoading: function() {\r\n            var that = this;\r\n            var scrollingMode = that.option(\"scrolling.mode\");\r\n            var virtualMode = scrollingMode === SCROLLING_MODE_VIRTUAL;\r\n            var appendMode = scrollingMode === SCROLLING_MODE_INFINITE;\r\n            var showBottomLoading = !that._dataController.hasKnownLastPage() && that._dataController.isLoaded() && (virtualMode || appendMode);\r\n            var $contentElement = that._findContentElement();\r\n            var bottomLoadPanelElement = that._findBottomLoadPanel($contentElement);\r\n            if (showBottomLoading) {\r\n                if (!bottomLoadPanelElement) {\r\n                    (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS)).append(that._createComponent((0, _renderer.default)(\"<div>\"), _load_indicator.default).$element()).appendTo($contentElement)\r\n                }\r\n            } else {\r\n                if (bottomLoadPanelElement) {\r\n                    bottomLoadPanelElement.remove()\r\n                }\r\n            }\r\n        },\r\n        _handleScroll: function(e) {\r\n            var that = this;\r\n            if (that._hasHeight && that._rowHeight) {\r\n                that._dataController.setViewportPosition(e.scrollOffset.top)\r\n            }\r\n            that.callBase.apply(that, arguments)\r\n        },\r\n        _needUpdateRowHeight: function(itemsCount) {\r\n            var that = this;\r\n            return that.callBase.apply(that, arguments) || itemsCount > 0 && that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && that.option(\"scrolling.rowRenderingMode\") !== SCROLLING_MODE_VIRTUAL\r\n        },\r\n        _updateRowHeight: function() {\r\n            var that = this;\r\n            that.callBase.apply(that, arguments);\r\n            if (that._rowHeight) {\r\n                that._updateContentPosition();\r\n                var viewportHeight = that._hasHeight ? that.element().outerHeight() : (0, _renderer.default)((0, _window.getWindow)()).outerHeight();\r\n                var dataController = this._dataController;\r\n                var itemsCount = dataController.items().length;\r\n                var $tableElement = this.getTableElement();\r\n                var rowsHeight = this._getRowsHeight($tableElement);\r\n                var rowHeight = itemsCount ? rowsHeight / itemsCount : this._rowHeight;\r\n                dataController.viewportSize(Math.ceil(viewportHeight / rowHeight))\r\n            }\r\n        },\r\n        updateFreeSpaceRowHeight: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (result) {\r\n                this._updateContentPosition()\r\n            }\r\n            return result\r\n        },\r\n        setLoading: function(isLoading, messageText) {\r\n            var that = this;\r\n            var callBase = that.callBase;\r\n            var dataController = that._dataController;\r\n            var hasBottomLoadPanel = dataController.pageIndex() > 0 && dataController.isLoaded() && !!that._findBottomLoadPanel();\r\n            if (hasBottomLoadPanel) {\r\n                isLoading = false\r\n            }\r\n            callBase.call(that, isLoading, messageText)\r\n        },\r\n        _resizeCore: function() {\r\n            var that = this;\r\n            var $element = that.element();\r\n            that.callBase();\r\n            if (that.component.$element() && !that._windowScroll && $element.closest((0, _window.getWindow)().document).length) {\r\n                that._windowScroll = (0, _uiGrid_core.subscribeToExternalScrollers)($element, function(scrollPos) {\r\n                    if (!that._hasHeight && that._rowHeight) {\r\n                        that._dataController.setViewportPosition(scrollPos)\r\n                    }\r\n                }, that.component.$element());\r\n                that.on(\"disposing\", function() {\r\n                    that._windowScroll.dispose()\r\n                })\r\n            }\r\n            that.loadIfNeed()\r\n        },\r\n        loadIfNeed: function() {\r\n            var dataController = this._dataController;\r\n            if (dataController && dataController.loadIfNeed) {\r\n                dataController.loadIfNeed()\r\n            }\r\n        },\r\n        setColumnWidths: function(widths) {\r\n            var scrollable = this.getScrollable();\r\n            var $content;\r\n            this.callBase.apply(this, arguments);\r\n            if (\"virtual\" === this.option(\"scrolling.mode\")) {\r\n                $content = scrollable ? scrollable.$content() : this.element();\r\n                this.callBase(widths, $content.children(\".\" + this.addWidgetPrefix(CONTENT_CLASS)).children(\":not(.\" + this.addWidgetPrefix(TABLE_CONTENT_CLASS) + \")\"))\r\n            }\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this.callBase()\r\n        }\r\n    }\r\n}();\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                timeout: 300,\r\n                updateTimeout: 300,\r\n                minTimeout: 0,\r\n                renderingThreshold: 100,\r\n                removeInvisiblePages: true,\r\n                rowPageSize: 5,\r\n                mode: \"standard\",\r\n                preloadEnabled: false,\r\n                rowRenderingMode: \"standard\",\r\n                loadTwoPagesOnStart: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        dataSourceAdapter: VirtualScrollingDataSourceAdapterExtender,\r\n        controllers: {\r\n            data: function() {\r\n                var members = {\r\n                    _refreshDataSource: function() {\r\n                        var baseResult = this.callBase.apply(this, arguments) || (new _deferred.Deferred).resolve().promise();\r\n                        baseResult.done(this.initVirtualRows.bind(this));\r\n                        return baseResult\r\n                    },\r\n                    getRowPageSize: function() {\r\n                        var rowPageSize = this.option(\"scrolling.rowPageSize\");\r\n                        var pageSize = this.pageSize();\r\n                        return pageSize && pageSize < rowPageSize ? pageSize : rowPageSize\r\n                    },\r\n                    reload: function() {\r\n                        var that = this;\r\n                        var rowsScrollController = that._rowsScrollController || that._dataSource;\r\n                        var itemIndex = rowsScrollController && rowsScrollController.getItemIndexByPosition();\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        return result && result.done(function() {\r\n                            if (isVirtualMode(that) || isVirtualRowRendering(that)) {\r\n                                var rowIndexOffset = that.getRowIndexOffset();\r\n                                var rowIndex = Math.floor(itemIndex) - rowIndexOffset;\r\n                                var component = that.component;\r\n                                var scrollable = component.getScrollable && component.getScrollable();\r\n                                var isSortingOperation = that.dataSource().operationTypes().sorting;\r\n                                if (scrollable && !that.option(\"legacyRendering\") && !isSortingOperation) {\r\n                                    var rowElement = component.getRowElement(rowIndex);\r\n                                    var $rowElement = rowElement && rowElement[0] && (0, _renderer.default)(rowElement[0]);\r\n                                    var top = $rowElement && $rowElement.position().top;\r\n                                    var isChromeLatest = _browser.default.chrome && _browser.default.version >= 91;\r\n                                    var allowedTopOffset = _browser.default.mozilla || _browser.default.msie || isChromeLatest ? 1 : 0;\r\n                                    if (top > allowedTopOffset) {\r\n                                        top = Math.round(top + $rowElement.outerHeight() * (itemIndex % 1));\r\n                                        scrollable.scrollTo({\r\n                                            y: top\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    },\r\n                    initVirtualRows: function() {\r\n                        var that = this;\r\n                        var virtualRowsRendering = isVirtualRowRendering(that);\r\n                        if (\"virtual\" !== that.option(\"scrolling.mode\") && true !== virtualRowsRendering || false === virtualRowsRendering || that.option(\"legacyRendering\") || !that.option(\"scrolling.rowPageSize\")) {\r\n                            that._visibleItems = null;\r\n                            that._rowsScrollController = null;\r\n                            return\r\n                        }\r\n                        var pageIndex = !isVirtualMode(this) && that.pageIndex() >= that.pageCount() ? that.pageCount() - 1 : that.pageIndex();\r\n                        that._rowPageIndex = Math.ceil(pageIndex * that.pageSize() / that.getRowPageSize());\r\n                        that._visibleItems = [];\r\n                        var isItemCountable = function(item) {\r\n                            return isItemCountableByDataSource(item, that._dataSource)\r\n                        };\r\n                        that._rowsScrollController = new _uiGrid_core.VirtualScrollController(that.component, {\r\n                            pageSize: function() {\r\n                                return that.getRowPageSize()\r\n                            },\r\n                            totalItemsCount: function() {\r\n                                return isVirtualMode(that) ? that.totalItemsCount() : that._items.filter(isItemCountable).length\r\n                            },\r\n                            hasKnownLastPage: function() {\r\n                                return true\r\n                            },\r\n                            pageIndex: function(index) {\r\n                                if (void 0 !== index) {\r\n                                    that._rowPageIndex = index\r\n                                }\r\n                                return that._rowPageIndex\r\n                            },\r\n                            isLoading: function() {\r\n                                return that.isLoading()\r\n                            },\r\n                            pageCount: function pageCount() {\r\n                                var pageCount = Math.ceil(this.totalItemsCount() / this.pageSize());\r\n                                return pageCount ? pageCount : 1\r\n                            },\r\n                            load: function() {\r\n                                if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\r\n                                    that._rowPageIndex = this.pageCount() - 1;\r\n                                    that._rowsScrollController.pageIndex(that._rowPageIndex)\r\n                                }\r\n                                if (!that._rowsScrollController._dataSource.items().length && this.totalItemsCount()) {\r\n                                    return\r\n                                }\r\n                                that._rowsScrollController.handleDataChanged(function(change) {\r\n                                    change = change || {};\r\n                                    change.changeType = change.changeType || \"refresh\";\r\n                                    change.items = change.items || that._visibleItems;\r\n                                    that._visibleItems.forEach(function(item, index) {\r\n                                        item.rowIndex = index\r\n                                    });\r\n                                    that._fireChanged(change)\r\n                                })\r\n                            },\r\n                            updateLoading: function() {},\r\n                            itemsCount: function() {\r\n                                return that._rowsScrollController._dataSource.items().filter(isItemCountable).length\r\n                            },\r\n                            correctCount: function(items, count, fromEnd) {\r\n                                return _correctCount(items, count, fromEnd, function(item, isNextAfterLast, fromEnd) {\r\n                                    if (item.isNewRow) {\r\n                                        return isNextAfterLast && !fromEnd\r\n                                    }\r\n                                    if (isNextAfterLast && fromEnd) {\r\n                                        return !item.isNewRow\r\n                                    }\r\n                                    return isItemCountable(item)\r\n                                })\r\n                            },\r\n                            items: function(countableOnly) {\r\n                                var dataSource = that.dataSource();\r\n                                var virtualItemsCount = dataSource && dataSource.virtualItemsCount();\r\n                                var begin = virtualItemsCount ? virtualItemsCount.begin : 0;\r\n                                var rowPageSize = that.getRowPageSize();\r\n                                var skip = that._rowPageIndex * rowPageSize - begin;\r\n                                var take = rowPageSize;\r\n                                var result = that._items;\r\n                                if (skip < 0) {\r\n                                    return []\r\n                                }\r\n                                if (skip) {\r\n                                    skip = this.correctCount(result, skip);\r\n                                    result = result.slice(skip)\r\n                                }\r\n                                if (take) {\r\n                                    take = this.correctCount(result, take);\r\n                                    result = result.slice(0, take)\r\n                                }\r\n                                return countableOnly ? result.filter(isItemCountable) : result\r\n                            },\r\n                            viewportItems: function(items) {\r\n                                if (items) {\r\n                                    that._visibleItems = items\r\n                                }\r\n                                return that._visibleItems\r\n                            },\r\n                            onChanged: function() {},\r\n                            changingDuration: function(e) {\r\n                                var dataSource = that.dataSource();\r\n                                if (dataSource.isLoading()) {\r\n                                    return LOAD_TIMEOUT\r\n                                }\r\n                                return (null === dataSource || void 0 === dataSource ? void 0 : dataSource._renderTime) || 0\r\n                            }\r\n                        }, true);\r\n                        that._rowsScrollController.positionChanged.add(function() {\r\n                            var _that$_dataSource;\r\n                            null === (_that$_dataSource = that._dataSource) || void 0 === _that$_dataSource ? void 0 : _that$_dataSource.setViewportItemIndex(that._rowsScrollController.getViewportItemIndex())\r\n                        });\r\n                        if (that.isLoaded()) {\r\n                            that._rowsScrollController.load()\r\n                        }\r\n                    },\r\n                    _updateItemsCore: function(change) {\r\n                        var _this3 = this;\r\n                        var delta = this.getRowIndexDelta();\r\n                        this.callBase.apply(this, arguments);\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            var visibleItems = this._visibleItems;\r\n                            var isRefresh = \"refresh\" === change.changeType || change.isLiveUpdate;\r\n                            if (\"append\" === change.changeType && change.items && !change.items.length) {\r\n                                return\r\n                            }\r\n                            if (isRefresh || \"append\" === change.changeType || \"prepend\" === change.changeType) {\r\n                                change.cancel = true;\r\n                                isRefresh && rowsScrollController.reset(true);\r\n                                rowsScrollController.load()\r\n                            } else {\r\n                                if (\"update\" === change.changeType) {\r\n                                    change.rowIndices.forEach(function(rowIndex, index) {\r\n                                        var changeType = change.changeTypes[index];\r\n                                        var newItem = change.items[index];\r\n                                        if (\"update\" === changeType) {\r\n                                            visibleItems[rowIndex] = newItem\r\n                                        } else {\r\n                                            if (\"insert\" === changeType) {\r\n                                                visibleItems.splice(rowIndex, 0, newItem)\r\n                                            } else {\r\n                                                if (\"remove\" === changeType) {\r\n                                                    visibleItems.splice(rowIndex, 1)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    })\r\n                                } else {\r\n                                    visibleItems.forEach(function(item, index) {\r\n                                        visibleItems[index] = _this3._items[index + delta] || visibleItems[index]\r\n                                    });\r\n                                    change.items = visibleItems\r\n                                }\r\n                                visibleItems.forEach(function(item, index) {\r\n                                    item.rowIndex = index\r\n                                })\r\n                            }\r\n                        }\r\n                    },\r\n                    _applyChange: function(change) {\r\n                        var that = this;\r\n                        var items = change.items;\r\n                        var changeType = change.changeType;\r\n                        var removeCount = change.removeCount;\r\n                        if (removeCount) {\r\n                            var fromEnd = \"prepend\" === changeType;\r\n                            removeCount = _correctCount(that._items, removeCount, fromEnd, function(item, isNextAfterLast) {\r\n                                return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && (that._dataSource.isGroupItemCountable(item.data) || isNextAfterLast)\r\n                            });\r\n                            change.removeCount = removeCount\r\n                        }\r\n                        switch (changeType) {\r\n                            case \"prepend\":\r\n                                that._items.unshift.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(-removeCount)\r\n                                }\r\n                                break;\r\n                            case \"append\":\r\n                                that._items.push.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(0, removeCount)\r\n                                }\r\n                                break;\r\n                            default:\r\n                                that.callBase(change)\r\n                        }\r\n                    },\r\n                    items: function(allItems) {\r\n                        return allItems ? this._items : this._visibleItems || this._items\r\n                    },\r\n                    getRowIndexDelta: function() {\r\n                        var visibleItems = this._visibleItems;\r\n                        var delta = 0;\r\n                        if (visibleItems && visibleItems[0]) {\r\n                            delta = this._items.indexOf(visibleItems[0])\r\n                        }\r\n                        return delta < 0 ? 0 : delta\r\n                    },\r\n                    getRowIndexOffset: function(byLoadedRows) {\r\n                        var offset = 0;\r\n                        var dataSource = this.dataSource();\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController && !byLoadedRows) {\r\n                            offset = rowsScrollController.beginPageIndex() * rowsScrollController._dataSource.pageSize()\r\n                        } else {\r\n                            if (\"virtual\" === this.option(\"scrolling.mode\") && dataSource) {\r\n                                offset = dataSource.beginPageIndex() * dataSource.pageSize()\r\n                            }\r\n                        }\r\n                        return offset\r\n                    },\r\n                    viewportSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.viewportSize.apply(rowsScrollController, arguments);\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.viewportSize.apply(dataSource, arguments)\r\n                    },\r\n                    viewportItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.viewportItemSize.apply(rowsScrollController, arguments);\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.viewportItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    setViewportPosition: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        if (rowsScrollController) {\r\n                            rowsScrollController.setViewportPosition.apply(rowsScrollController, arguments)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.setViewportPosition.apply(dataSource, arguments)\r\n                        }\r\n                    },\r\n                    setContentSize: function(sizes) {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.setContentSize(sizes);\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.setContentSize(sizes)\r\n                    },\r\n                    loadIfNeed: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.loadIfNeed();\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.loadIfNeed()\r\n                    },\r\n                    getItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSize.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    getItemSizes: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSizes.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSizes.apply(dataSource, arguments)\r\n                    },\r\n                    getContentOffset: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getContentOffset.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getContentOffset.apply(dataSource, arguments)\r\n                    },\r\n                    refresh: function(options) {\r\n                        var dataSource = this._dataSource;\r\n                        if (dataSource && options && options.load && isAppendMode(this)) {\r\n                            dataSource.resetCurrentTotalCount()\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    dispose: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.dispose();\r\n                        this.callBase.apply(this, arguments)\r\n                    },\r\n                    virtualItemsCount: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.virtualItemsCount.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount.apply(dataSource, arguments)\r\n                    }\r\n                };\r\n                _uiGrid_core2.default.proxyMethod(members, \"getVirtualContentSize\");\r\n                _uiGrid_core2.default.proxyMethod(members, \"setViewportItemIndex\");\r\n                return members\r\n            }(),\r\n            resizing: {\r\n                resize: function() {\r\n                    var that = this;\r\n                    var callBase = that.callBase;\r\n                    var result;\r\n                    if (!that.option(\"legacyRendering\") && (isVirtualMode(that) || isVirtualRowRendering(that))) {\r\n                        clearTimeout(that._resizeTimeout);\r\n                        var diff = new Date - that._lastTime;\r\n                        var updateTimeout = that.option(\"scrolling.updateTimeout\");\r\n                        if (that._lastTime && diff < updateTimeout) {\r\n                            result = new _deferred.Deferred;\r\n                            that._resizeTimeout = setTimeout(function() {\r\n                                callBase.apply(that).done(result.resolve).fail(result.reject);\r\n                                that._lastTime = new Date\r\n                            }, updateTimeout);\r\n                            that._lastTime = new Date\r\n                        } else {\r\n                            result = callBase.apply(that);\r\n                            if (that._dataController.isLoaded()) {\r\n                                that._lastTime = new Date\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = callBase.apply(that)\r\n                    }\r\n                    return result\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._resizeTimeout)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.VirtualScrollController = void 0;\r\nexports.getContentHeightLimit = getContentHeightLimit;\r\nexports.getPixelRatio = void 0;\r\nexports.subscribeToExternalScrollers = subscribeToExternalScrollers;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _position = _interopRequireDefault(require(\"../../animation/position\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar isVirtualMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual\r\n};\r\nvar isAppendMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual\r\n};\r\nvar needTwoPagesLoading = function(that) {\r\n    return that.option(\"scrolling.loadTwoPagesOnStart\") || that._isVirtual || that._viewportItemIndex > 0\r\n};\r\nvar getPixelRatio = function(window) {\r\n    return window.devicePixelRatio || 1\r\n};\r\nexports.getPixelRatio = getPixelRatio;\r\n\r\nfunction getContentHeightLimit(browser) {\r\n    if (browser.msie) {\r\n        return 4e6\r\n    } else {\r\n        if (browser.mozilla) {\r\n            return 8e6\r\n        }\r\n    }\r\n    return 15e6 / getPixelRatio((0, _window.getWindow)())\r\n}\r\n\r\nfunction subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = _position.default.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n\r\n    function createWindowScrollHandler(scrollable) {\r\n        return function() {\r\n            var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n            scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n            scrollChangedHandler(scrollTop)\r\n        }\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && (0, _renderer.default)((0, _window.getWindow)()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = _events_engine.default;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = createWindowScrollHandler(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push(function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        });\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push(function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        })\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            (0, _iterator.each)(scrollToArray, function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            })\r\n        },\r\n        dispose: function() {\r\n            (0, _iterator.each)(disposeArray, function(_, dispose) {\r\n                dispose()\r\n            })\r\n        }\r\n    }\r\n}\r\nvar VirtualScrollController = _class.default.inherit(function() {\r\n    var getViewportPageCount = function(that) {\r\n        var pageSize = that._dataSource.pageSize();\r\n        var preventPreload = that.option(\"scrolling.preventPreload\");\r\n        if (preventPreload) {\r\n            return 0\r\n        }\r\n        var realViewportSize = that._viewportSize;\r\n        if (isVirtualMode(that) && !that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\")) {\r\n            realViewportSize = 0;\r\n            var viewportSize = that._viewportSize * that._viewportItemSize;\r\n            var offset = that.getContentOffset();\r\n            var position = that._position || 0;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            var totalItemsCount = that._dataSource.totalItemsCount();\r\n            for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\r\n                if (offset >= position + viewportSize) {\r\n                    break\r\n                }\r\n                var itemSize = that._itemSizes[itemIndex] || that._viewportItemSize;\r\n                offset += itemSize;\r\n                if (offset >= position) {\r\n                    realViewportSize++\r\n                }\r\n            }\r\n        }\r\n        return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1\r\n    };\r\n    var getPreloadPageCount = function(that, previous) {\r\n        var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\r\n        var pageCount = getViewportPageCount(that);\r\n        if (pageCount) {\r\n            if (previous) {\r\n                pageCount = preloadEnabled ? 1 : 0\r\n            } else {\r\n                if (preloadEnabled) {\r\n                    pageCount++\r\n                }\r\n                if (isAppendMode(that) || !needTwoPagesLoading(that)) {\r\n                    pageCount--\r\n                }\r\n            }\r\n        }\r\n        return pageCount\r\n    };\r\n    var getPageIndexForLoad = function(that) {\r\n        var result = -1;\r\n        var beginPageIndex = getBeginPageIndex(that);\r\n        var dataSource = that._dataSource;\r\n        if (beginPageIndex < 0) {\r\n            result = that._pageIndex\r\n        } else {\r\n            if (!that._cache[that._pageIndex - beginPageIndex]) {\r\n                result = that._pageIndex\r\n            } else {\r\n                if (beginPageIndex >= 0 && that._viewportSize >= 0) {\r\n                    if (beginPageIndex > 0) {\r\n                        var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataSource.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\r\n                        var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\r\n                        if (needToLoadPrevPage) {\r\n                            result = beginPageIndex - 1\r\n                        }\r\n                    }\r\n                    if (result < 0) {\r\n                        var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\r\n                        if (needToLoadNextPage) {\r\n                            result = beginPageIndex + that._cache.length\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (that._loadingPageIndexes[result]) {\r\n            result = -1\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getBeginPageIndex(that) {\r\n        return that._cache.length ? that._cache[0].pageIndex : -1\r\n    }\r\n\r\n    function getEndPageIndex(that) {\r\n        return that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1\r\n    }\r\n    var fireChanged = function(that, changed, args) {\r\n        that._isChangedFiring = true;\r\n        changed(args);\r\n        that._isChangedFiring = false\r\n    };\r\n    var processDelayChanged = function(that, changed, args) {\r\n        if (that._isDelayChanged) {\r\n            that._isDelayChanged = false;\r\n            fireChanged(that, changed, args);\r\n            return true\r\n        }\r\n    };\r\n    var processChanged = function(that, changed, changeType, isDelayChanged, removeCacheItem) {\r\n        var dataSource = that._dataSource;\r\n        var items = dataSource.items().slice();\r\n        var change = (0, _type.isObject)(changeType) ? changeType : void 0;\r\n        var isPrepend = \"prepend\" === changeType;\r\n        var viewportItems = dataSource.viewportItems();\r\n        if (changeType && (0, _type.isString)(changeType) && !that._isDelayChanged) {\r\n            change = {\r\n                changeType: changeType,\r\n                items: items\r\n            };\r\n            if (removeCacheItem) {\r\n                change.removeCount = removeCacheItem.itemsCount;\r\n                if (change.removeCount && dataSource.correctCount) {\r\n                    change.removeCount = dataSource.correctCount(viewportItems, change.removeCount, isPrepend)\r\n                }\r\n            }\r\n        }\r\n        var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\r\n        if (removeItemCount && dataSource.correctCount) {\r\n            removeItemCount = dataSource.correctCount(viewportItems, removeItemCount, isPrepend)\r\n        }\r\n        if (\"append\" === changeType) {\r\n            viewportItems.push.apply(viewportItems, items);\r\n            if (removeCacheItem) {\r\n                viewportItems.splice(0, removeItemCount)\r\n            }\r\n        } else {\r\n            if (isPrepend) {\r\n                viewportItems.unshift.apply(viewportItems, items);\r\n                if (removeCacheItem) {\r\n                    viewportItems.splice(-removeItemCount)\r\n                }\r\n            } else {\r\n                that._dataSource.viewportItems(items)\r\n            }\r\n        }\r\n        dataSource.updateLoading();\r\n        that._lastPageIndex = that.pageIndex();\r\n        that._isDelayChanged = isDelayChanged;\r\n        if (!isDelayChanged) {\r\n            fireChanged(that, changed, change)\r\n        }\r\n    };\r\n    var loadCore = function(that, pageIndex) {\r\n        var dataSource = that._dataSource;\r\n        if (pageIndex === that.pageIndex() || !dataSource.isLoading() && pageIndex < dataSource.pageCount() || !dataSource.hasKnownLastPage() && pageIndex === dataSource.pageCount()) {\r\n            dataSource.pageIndex(pageIndex);\r\n            that._loadingPageIndexes[pageIndex] = true;\r\n            return (0, _deferred.when)(dataSource.load()).always(function() {\r\n                that._loadingPageIndexes[pageIndex] = false\r\n            })\r\n        }\r\n    };\r\n    return {\r\n        ctor: function(component, dataSource, isVirtual) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that.component = component;\r\n            that._pageIndex = that._lastPageIndex = dataSource.pageIndex();\r\n            that._viewportSize = 0;\r\n            that._viewportItemSize = 20;\r\n            that._viewportItemIndex = -1;\r\n            that._itemSizes = {};\r\n            that._sizeRatio = 1;\r\n            that._items = [];\r\n            that._cache = [];\r\n            that._isVirtual = isVirtual;\r\n            that._loadingPageIndexes = {};\r\n            that.positionChanged = (0, _callbacks.default)()\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        virtualItemsCount: function() {\r\n            var that = this;\r\n            var pageIndex;\r\n            var itemsCount = 0;\r\n            if (isVirtualMode(that)) {\r\n                pageIndex = getBeginPageIndex(that);\r\n                if (pageIndex < 0) {\r\n                    pageIndex = that._dataSource.pageIndex()\r\n                }\r\n                var beginItemsCount = pageIndex * that._dataSource.pageSize();\r\n                itemsCount = that._cache.length * that._dataSource.pageSize();\r\n                var endItemsCount = Math.max(0, that._dataSource.totalItemsCount() - itemsCount - beginItemsCount);\r\n                return {\r\n                    begin: beginItemsCount,\r\n                    end: endItemsCount\r\n                }\r\n            }\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var that = this;\r\n            var result = new _deferred.Deferred;\r\n            var scrollingTimeout = Math.min(that.option(\"scrolling.timeout\") || 0, that._dataSource.changingDuration());\r\n            if (scrollingTimeout < that.option(\"scrolling.renderingThreshold\")) {\r\n                scrollingTimeout = that.option(\"scrolling.minTimeout\") || 0\r\n            }\r\n            clearTimeout(that._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                that._scrollTimeoutID = setTimeout(function() {\r\n                    that._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                that._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position || 0\r\n        },\r\n        getItemIndexByPosition: function() {\r\n            var that = this;\r\n            var position = that._position;\r\n            var defaultItemSize = that.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(that._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = that._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            this._position = position;\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentSize: function(size) {\r\n            var that = this;\r\n            var sizes = Array.isArray(size) && size;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            if (sizes) {\r\n                size = sizes.reduce(function(a, b) {\r\n                    return a + b\r\n                }, 0)\r\n            }\r\n            that._contentSize = size;\r\n            if (virtualItemsCount) {\r\n                if (sizes) {\r\n                    sizes.forEach(function(size, index) {\r\n                        that._itemSizes[virtualItemsCount.begin + index] = size\r\n                    })\r\n                }\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + that.itemsCount()) * that._viewportItemSize;\r\n                var contentHeightLimit = getContentHeightLimit(_browser.default);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    that._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    that._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var that = this;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = that._dataSource.totalItemsCount();\r\n            Object.keys(that._itemSizes).forEach(function(currentItemIndex) {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += that._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * that._viewportItemSize * that._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var that = this;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            return virtualItemsCount ? that.getContentOffset(\"begin\") + that.getContentOffset(\"end\") + that._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            var that = this;\r\n            var pageSize = that._dataSource.pageSize();\r\n            var pageCount = that._dataSource.pageCount();\r\n            var virtualMode = isVirtualMode(that);\r\n            var appendMode = isAppendMode(that);\r\n            var totalItemsCount = that._dataSource.totalItemsCount();\r\n            var newPageIndex;\r\n            that._viewportItemIndex = itemIndex;\r\n            if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\r\n                if (that._viewportSize && itemIndex + that._viewportSize >= totalItemsCount && !that._isVirtual) {\r\n                    if (that._dataSource.hasKnownLastPage()) {\r\n                        newPageIndex = pageCount - 1;\r\n                        var lastPageSize = totalItemsCount % pageSize;\r\n                        if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < that._viewportSize) {\r\n                            newPageIndex--\r\n                        }\r\n                    } else {\r\n                        newPageIndex = pageCount\r\n                    }\r\n                } else {\r\n                    newPageIndex = Math.floor(itemIndex / pageSize);\r\n                    var maxPageIndex = pageCount - 1;\r\n                    newPageIndex = Math.max(newPageIndex, 0);\r\n                    newPageIndex = Math.min(newPageIndex, maxPageIndex)\r\n                }\r\n                that.pageIndex(newPageIndex);\r\n                return that.load()\r\n            }\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        pageIndex: function(_pageIndex) {\r\n            if (isVirtualMode(this) || isAppendMode(this)) {\r\n                if (void 0 !== _pageIndex) {\r\n                    this._pageIndex = _pageIndex\r\n                }\r\n                return this._pageIndex\r\n            } else {\r\n                return this._dataSource.pageIndex(_pageIndex)\r\n            }\r\n        },\r\n        beginPageIndex: function beginPageIndex(defaultPageIndex) {\r\n            var beginPageIndex = getBeginPageIndex(this);\r\n            if (beginPageIndex < 0) {\r\n                beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex()\r\n            }\r\n            return beginPageIndex\r\n        },\r\n        endPageIndex: function endPageIndex() {\r\n            var endPageIndex = getEndPageIndex(this);\r\n            return endPageIndex > 0 ? endPageIndex : this._lastPageIndex\r\n        },\r\n        pageSize: function() {\r\n            return this._dataSource.pageSize()\r\n        },\r\n        load: function() {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var result;\r\n            if (isVirtualMode(that) || isAppendMode(that)) {\r\n                var pageIndexForLoad = getPageIndexForLoad(that);\r\n                if (pageIndexForLoad >= 0) {\r\n                    var loadResult = loadCore(that, pageIndexForLoad);\r\n                    if (loadResult) {\r\n                        result = new _deferred.Deferred;\r\n                        loadResult.done(function() {\r\n                            var delayDeferred = that._delayDeferred;\r\n                            if (delayDeferred) {\r\n                                delayDeferred.done(result.resolve).fail(result.reject)\r\n                            } else {\r\n                                result.resolve()\r\n                            }\r\n                        }).fail(result.reject);\r\n                        dataSource.updateLoading()\r\n                    }\r\n                }\r\n            } else {\r\n                result = dataSource.load()\r\n            }\r\n            if (!result && that._lastPageIndex !== that.pageIndex()) {\r\n                that._dataSource.onChanged({\r\n                    changeType: \"pageIndex\"\r\n                })\r\n            }\r\n            return result || (new _deferred.Deferred).resolve()\r\n        },\r\n        loadIfNeed: function() {\r\n            var that = this;\r\n            if ((isVirtualMode(that) || isAppendMode(that)) && !that._dataSource.isLoading() && (!that._isChangedFiring || that._isVirtual)) {\r\n                var position = that.getViewportPosition();\r\n                if (position > 0) {\r\n                    that._setViewportPositionCore(position)\r\n                } else {\r\n                    that.load()\r\n                }\r\n            }\r\n        },\r\n        handleDataChanged: function(callBase, e) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var lastCacheLength = that._cache.length;\r\n            var changeType;\r\n            var removeInvisiblePages;\r\n            if (e && e.changes) {\r\n                fireChanged(that, callBase, e)\r\n            } else {\r\n                if (isVirtualMode(that) || isAppendMode(that)) {\r\n                    var beginPageIndex = getBeginPageIndex(that);\r\n                    if (beginPageIndex >= 0) {\r\n                        if (isVirtualMode(that) && beginPageIndex + that._cache.length !== dataSource.pageIndex() && beginPageIndex - 1 !== dataSource.pageIndex()) {\r\n                            lastCacheLength = 0;\r\n                            that._cache = []\r\n                        }\r\n                        if (isAppendMode(that)) {\r\n                            if (0 === dataSource.pageIndex()) {\r\n                                that._cache = []\r\n                            } else {\r\n                                if (dataSource.pageIndex() < getEndPageIndex(that)) {\r\n                                    fireChanged(that, callBase, {\r\n                                        changeType: \"append\",\r\n                                        items: []\r\n                                    });\r\n                                    return\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    var cacheItem = {\r\n                        pageIndex: dataSource.pageIndex(),\r\n                        itemsLength: dataSource.items(true).length,\r\n                        itemsCount: that.itemsCount(true)\r\n                    };\r\n                    if (!that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\") && isVirtualMode(that)) {\r\n                        removeInvisiblePages = that._cache.length > Math.max(getPreloadPageCount(this) + (that.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2)\r\n                    } else {\r\n                        processDelayChanged(that, callBase, {\r\n                            isDelayed: true\r\n                        })\r\n                    }\r\n                    var removeCacheItem;\r\n                    if (beginPageIndex === dataSource.pageIndex() + 1) {\r\n                        if (removeInvisiblePages) {\r\n                            removeCacheItem = that._cache.pop()\r\n                        }\r\n                        changeType = \"prepend\";\r\n                        that._cache.unshift(cacheItem)\r\n                    } else {\r\n                        if (removeInvisiblePages) {\r\n                            removeCacheItem = that._cache.shift()\r\n                        }\r\n                        changeType = \"append\";\r\n                        that._cache.push(cacheItem)\r\n                    }\r\n                    var isDelayChanged = isVirtualMode(that) && 0 === lastCacheLength && needTwoPagesLoading(that);\r\n                    processChanged(that, callBase, that._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\r\n                    that._delayDeferred = that.load().done(function() {\r\n                        if (processDelayChanged(that, callBase)) {\r\n                            that.load()\r\n                        }\r\n                    })\r\n                } else {\r\n                    processChanged(that, callBase, e)\r\n                }\r\n            }\r\n        },\r\n        itemsCount: function itemsCount(isBase) {\r\n            var itemsCount = 0;\r\n            if (!isBase && isVirtualMode(this)) {\r\n                (0, _iterator.each)(this._cache, function() {\r\n                    itemsCount += this.itemsCount\r\n                })\r\n            } else {\r\n                itemsCount = this._dataSource.itemsCount()\r\n            }\r\n            return itemsCount\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._loadingPageIndexes = {};\r\n            this._cache = [];\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            var that = this;\r\n            that._windowScroll = that._windowScroll || subscribeToExternalScrollers($element, function(scrollTop) {\r\n                if (that.viewportItemSize()) {\r\n                    that.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        }\r\n    }\r\n}());\r\nexports.VirtualScrollController = VirtualScrollController;\r\n","/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"../../ui/widget/ui.errors\"));\r\nvar _ui2 = _interopRequireDefault(require(\"../../ui/widget/ui.search_box_mixin\"));\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\nvar _store_helper = _interopRequireDefault(require(\"../../data/store_helper\"));\r\nvar _ui3 = _interopRequireDefault(require(\"./ui.data_converter\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar EXPANDED = \"expanded\";\r\nvar SELECTED = \"selected\";\r\nvar DISABLED = \"disabled\";\r\nvar DataAdapter = _class.default.inherit({\r\n    ctor: function(options) {\r\n        this.options = {};\r\n        (0, _extend.extend)(this.options, this._defaultOptions(), options);\r\n        this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\r\n        this._selectedNodesKeys = [];\r\n        this._expandedNodesKeys = [];\r\n        this._dataStructure = [];\r\n        this._createInternalDataStructure();\r\n        this.getTreeNodes()\r\n    },\r\n    setOption: function(name, value) {\r\n        this.options[name] = value;\r\n        if (\"recursiveSelection\" === name) {\r\n            this._updateSelection()\r\n        }\r\n    },\r\n    _defaultOptions: function() {\r\n        return {\r\n            dataAccessors: void 0,\r\n            items: [],\r\n            multipleSelection: true,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            rootValue: 0,\r\n            searchValue: \"\",\r\n            dataType: \"tree\",\r\n            searchMode: \"contains\",\r\n            dataConverter: new _ui3.default,\r\n            onNodeChanged: _common.noop,\r\n            sort: null\r\n        }\r\n    },\r\n    _createInternalDataStructure: function() {\r\n        this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\r\n        this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\r\n        this.options.dataConverter._dataStructure = this._dataStructure;\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    _updateSelection: function() {\r\n        if (this.options.recursiveSelection) {\r\n            this._setChildrenSelection();\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _updateExpansion: function(key) {\r\n        if (this.options.recursiveExpansion) {\r\n            key ? this._updateOneBranch(key) : this._setParentExpansion()\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    _updateNodesKeysArray: function(property) {\r\n        var that = this;\r\n        var array = [];\r\n        (0, _iterator.each)(that._getDataBySelectionMode(), function(_, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            if (node.internalFields[property]) {\r\n                if (property === EXPANDED || that.options.multipleSelection) {\r\n                    array.push(node.internalFields.key)\r\n                } else {\r\n                    array.length && that.toggleSelection(array[0], false, true);\r\n                    array = [node.internalFields.key]\r\n                }\r\n            }\r\n        });\r\n        return array\r\n    },\r\n    _getDataBySelectionMode: function() {\r\n        return this.options.multipleSelection ? this.getData() : this.getFullData()\r\n    },\r\n    _isNodeVisible: function(node) {\r\n        return false !== node.internalFields.item.visible\r\n    },\r\n    _getByKey: function(data, key) {\r\n        return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key)\r\n    },\r\n    _setChildrenSelection: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            if (!node.internalFields.childrenKeys.length) {\r\n                return\r\n            }\r\n            var isSelected = node.internalFields.selected;\r\n            true === isSelected && that._toggleChildrenSelection(node, isSelected)\r\n        })\r\n    },\r\n    _setParentSelection: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            var parent = that.options.dataConverter.getParentNode(node);\r\n            if (parent && node.internalFields.parentKey !== that.options.rootValue) {\r\n                that._iterateParents(node, function(parent) {\r\n                    var newParentState = that._calculateSelectedState(parent);\r\n                    that._setFieldState(parent, SELECTED, newParentState)\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _setParentExpansion: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            if (!node.internalFields.expanded) {\r\n                return\r\n            }\r\n            that._updateOneBranch(node.internalFields.key)\r\n        })\r\n    },\r\n    _updateOneBranch: function(key) {\r\n        var that = this;\r\n        var node = this.getNodeByKey(key);\r\n        that._iterateParents(node, function(parent) {\r\n            that._setFieldState(parent, EXPANDED, true)\r\n        })\r\n    },\r\n    _iterateChildren: function(node, recursive, callback, processedKeys) {\r\n        if (!(0, _type.isFunction)(callback)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var nodeKey = node.internalFields.key;\r\n        processedKeys = processedKeys || [];\r\n        if (processedKeys.indexOf(nodeKey) === -1) {\r\n            processedKeys.push(nodeKey);\r\n            (0, _iterator.each)(node.internalFields.childrenKeys, function(_, key) {\r\n                var child = that.getNodeByKey(key);\r\n                callback(child);\r\n                if (child.internalFields.childrenKeys.length && recursive) {\r\n                    that._iterateChildren(child, recursive, callback, processedKeys)\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _iterateParents: function(node, callback, processedKeys) {\r\n        if (node.internalFields.parentKey === this.options.rootValue || !(0, _type.isFunction)(callback)) {\r\n            return\r\n        }\r\n        processedKeys = processedKeys || [];\r\n        var key = node.internalFields.key;\r\n        if (processedKeys.indexOf(key) === -1) {\r\n            processedKeys.push(key);\r\n            var parent = this.options.dataConverter.getParentNode(node);\r\n            if (parent) {\r\n                callback(parent);\r\n                if (parent.internalFields.parentKey !== this.options.rootValue) {\r\n                    this._iterateParents(parent, callback, processedKeys)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _calculateSelectedState: function(node) {\r\n        var itemsCount = node.internalFields.childrenKeys.length;\r\n        var selectedItemsCount = 0;\r\n        var invisibleItemsCount = 0;\r\n        var result = false;\r\n        for (var i = 0; i <= itemsCount - 1; i++) {\r\n            var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\r\n            var isChildInvisible = false === childNode.internalFields.item.visible;\r\n            var childState = childNode.internalFields.selected;\r\n            if (isChildInvisible) {\r\n                invisibleItemsCount++;\r\n                continue\r\n            }\r\n            if (childState) {\r\n                selectedItemsCount++\r\n            } else {\r\n                if (void 0 === childState) {\r\n                    selectedItemsCount += .5\r\n                }\r\n            }\r\n        }\r\n        if (selectedItemsCount) {\r\n            result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0\r\n        }\r\n        return result\r\n    },\r\n    _toggleChildrenSelection: function(node, state) {\r\n        var that = this;\r\n        this._iterateChildren(node, true, function(child) {\r\n            if (that._isNodeVisible(child)) {\r\n                that._setFieldState(child, SELECTED, state)\r\n            }\r\n        })\r\n    },\r\n    _setFieldState: function(node, field, state) {\r\n        if (node.internalFields[field] === state) {\r\n            return\r\n        }\r\n        node.internalFields[field] = state;\r\n        if (node.internalFields.publicNode) {\r\n            node.internalFields.publicNode[field] = state\r\n        }\r\n        this.options.dataAccessors.setters[field](node.internalFields.item, state);\r\n        this.options.onNodeChanged(node)\r\n    },\r\n    _markChildren: function(keys) {\r\n        var that = this;\r\n        (0, _iterator.each)(keys, function(_, key) {\r\n            var index = that.getIndexByKey(key);\r\n            var node = that.getNodeByKey(key);\r\n            that._dataStructure[index] = 0;\r\n            node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys)\r\n        })\r\n    },\r\n    _removeNode: function(key) {\r\n        var node = this.getNodeByKey(key);\r\n        this._dataStructure[this.getIndexByKey(key)] = 0;\r\n        this._markChildren(node.internalFields.childrenKeys);\r\n        var that = this;\r\n        var counter = 0;\r\n        var items = (0, _extend.extend)([], this._dataStructure);\r\n        (0, _iterator.each)(items, function(index, item) {\r\n            if (!item) {\r\n                that._dataStructure.splice(index - counter, 1);\r\n                counter++\r\n            }\r\n        })\r\n    },\r\n    _addNode: function(item) {\r\n        var dataConverter = this.options.dataConverter;\r\n        var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\r\n        this._dataStructure = this._dataStructure.concat(node);\r\n        this._initialDataStructure = this._initialDataStructure.concat(node);\r\n        dataConverter._dataStructure = dataConverter._dataStructure.concat(node)\r\n    },\r\n    _updateFields: function() {\r\n        this.options.dataConverter.updateChildrenKeys();\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    getSelectedNodesKeys: function() {\r\n        return this._selectedNodesKeys\r\n    },\r\n    getExpandedNodesKeys: function() {\r\n        return this._expandedNodesKeys\r\n    },\r\n    getData: function() {\r\n        return this._dataStructure\r\n    },\r\n    getFullData: function() {\r\n        return this._initialDataStructure\r\n    },\r\n    getNodeByItem: function(item) {\r\n        var result = null;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            if (node.internalFields.item === item) {\r\n                result = node;\r\n                return false\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    getNodesByItems: function(items) {\r\n        var that = this;\r\n        var nodes = [];\r\n        (0, _iterator.each)(items, function(_, item) {\r\n            var node = that.getNodeByItem(item);\r\n            node && nodes.push(node)\r\n        });\r\n        return nodes\r\n    },\r\n    getNodeByKey: function(key, data) {\r\n        return this._getByKey(data || this._getDataBySelectionMode(), key)\r\n    },\r\n    getTreeNodes: function() {\r\n        return this.options.dataConverter.convertToPublicNodes(this.getRootNodes())\r\n    },\r\n    getItemsCount: function() {\r\n        return this.options.dataConverter.getItemsCount()\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this.options.dataConverter.getVisibleItemsCount()\r\n    },\r\n    getPublicNode: function(node) {\r\n        return node.internalFields.publicNode\r\n    },\r\n    getRootNodes: function() {\r\n        return this.getChildrenNodes(this.options.rootValue)\r\n    },\r\n    getChildrenNodes: function(parentKey) {\r\n        return (0, _query.default)(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray()\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this.options.dataConverter.getIndexByKey(key)\r\n    },\r\n    addItem: function(item) {\r\n        this._addNode(item);\r\n        this._updateFields()\r\n    },\r\n    removeItem: function(key) {\r\n        this._removeNode(key);\r\n        this._updateFields()\r\n    },\r\n    toggleSelection: function(key, state, selectRecursive) {\r\n        var isSingleModeUnselect = this._isSingleModeUnselect(state);\r\n        var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\r\n        this._setFieldState(node, SELECTED, state);\r\n        if (this.options.recursiveSelection && !selectRecursive) {\r\n            state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _isSingleModeUnselect: function(selectionState) {\r\n        return !this.options.multipleSelection && !selectionState\r\n    },\r\n    toggleNodeDisabledState: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, DISABLED, state)\r\n    },\r\n    toggleSelectAll: function(state) {\r\n        if (!(0, _type.isDefined)(state)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\r\n        var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\r\n        (0, _iterator.each)(dataStructure, function(index, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            that._setFieldState(node, SELECTED, state)\r\n        });\r\n        that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\r\n        if (!state && that.options.selectionRequired) {\r\n            that.toggleSelection(lastSelectedKey, true)\r\n        }\r\n    },\r\n    isAllSelected: function() {\r\n        if (this.getSelectedNodesKeys().length) {\r\n            return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    toggleExpansion: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, EXPANDED, state);\r\n        if (state) {\r\n            this._updateExpansion(key)\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    isFiltered: function(item) {\r\n        return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length\r\n    },\r\n    _createCriteria: function(selector, value, operation) {\r\n        var searchFilter = [];\r\n        if (!Array.isArray(selector)) {\r\n            return [selector, operation, value]\r\n        }(0, _iterator.each)(selector, function(i, item) {\r\n            searchFilter.push([item, operation, value], \"or\")\r\n        });\r\n        searchFilter.pop();\r\n        return searchFilter\r\n    },\r\n    _filterDataStructure: function(filterValue, dataStructure) {\r\n        var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\r\n        var operation = _ui2.default.getOperationBySearchMode(this.options.searchMode);\r\n        var criteria = this._createCriteria(selector, filterValue, operation);\r\n        dataStructure = dataStructure || this._initialDataStructure;\r\n        return (0, _query.default)(dataStructure).filter(criteria).toArray()\r\n    },\r\n    search: function(searchValue) {\r\n        var that = this;\r\n        var matches = this._filterDataStructure(searchValue);\r\n        var dataConverter = this.options.dataConverter;\r\n\r\n        function lookForParents(matches, index) {\r\n            var length = matches.length;\r\n            while (index < length) {\r\n                var node = matches[index];\r\n                if (node.internalFields.parentKey === that.options.rootValue) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                var parent = dataConverter.getParentNode(node);\r\n                if (!parent) {\r\n                    _ui.default.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\r\n                    index++;\r\n                    continue\r\n                }\r\n                if (!parent.internalFields.expanded) {\r\n                    that._setFieldState(parent, EXPANDED, true)\r\n                }\r\n                if ((0, _array.inArray)(parent, matches) > -1) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                matches.splice(index, 0, parent);\r\n                lookForParents(matches, index)\r\n            }\r\n        }\r\n        lookForParents(matches, 0);\r\n        if (this.options.sort) {\r\n            matches = _store_helper.default.queryByOptions((0, _query.default)(matches), {\r\n                sort: this.options.sort\r\n            }).toArray()\r\n        }\r\n        dataConverter._indexByKey = {};\r\n        (0, _iterator.each)(matches, function(index, node) {\r\n            node.internalFields.childrenKeys = [];\r\n            dataConverter._indexByKey[node.internalFields.key] = index\r\n        });\r\n        dataConverter._dataStructure = matches;\r\n        dataConverter.setChildrenKeys();\r\n        return dataConverter._dataStructure\r\n    }\r\n});\r\nvar _default = DataAdapter;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_converter.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"../../ui/widget/ui.errors\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DataConverter = _class.default.inherit({\r\n    ctor: function() {\r\n        this._dataStructure = [];\r\n        this._itemsCount = 0;\r\n        this._visibleItemsCount = 0\r\n    },\r\n    _indexByKey: {},\r\n    _convertItemsToNodes: function(items, parentKey) {\r\n        var that = this;\r\n        (0, _iterator.each)(items, function(_, item) {\r\n            var parentId = (0, _type.isDefined)(parentKey) ? parentKey : that._getParentId(item);\r\n            var node = that._convertItemToNode(item, parentId);\r\n            that._dataStructure.push(node);\r\n            that._checkForDuplicateId(node.internalFields.key);\r\n            that._indexByKey[node.internalFields.key] = that._dataStructure.length - 1;\r\n            if (that._itemHasChildren(item)) {\r\n                that._convertItemsToNodes(that._dataAccessors.getters.items(item), node.internalFields.key)\r\n            }\r\n        })\r\n    },\r\n    _checkForDuplicateId: function(key) {\r\n        if ((0, _type.isDefined)(this._indexByKey[key])) {\r\n            throw _ui.default.Error(\"E1040\", key)\r\n        }\r\n    },\r\n    _getParentId: function(item) {\r\n        return \"plain\" === this._dataType ? this._dataAccessors.getters.parentKey(item) : void 0\r\n    },\r\n    _itemHasChildren: function(item) {\r\n        if (\"plain\" === this._dataType) {\r\n            return\r\n        }\r\n        var items = this._dataAccessors.getters.items(item);\r\n        return items && items.length\r\n    },\r\n    _getUniqueKey: function(item) {\r\n        var keyGetter = this._dataAccessors.getters.key;\r\n        var itemKey = keyGetter(item);\r\n        var isCorrectKey = keyGetter && (itemKey || 0 === itemKey) && (0, _type.isPrimitive)(itemKey);\r\n        return isCorrectKey ? itemKey : this.getItemsCount()\r\n    },\r\n    _convertItemToNode: function(item, parentKey) {\r\n        this._itemsCount++;\r\n        false !== item.visible && this._visibleItemsCount++;\r\n        var that = this;\r\n        var node = {\r\n            internalFields: {\r\n                disabled: that._dataAccessors.getters.disabled(item, {\r\n                    defaultValue: false\r\n                }),\r\n                expanded: that._dataAccessors.getters.expanded(item, {\r\n                    defaultValue: false\r\n                }),\r\n                selected: that._dataAccessors.getters.selected(item, {\r\n                    defaultValue: false\r\n                }),\r\n                key: that._getUniqueKey(item),\r\n                parentKey: (0, _type.isDefined)(parentKey) ? parentKey : that._rootValue,\r\n                item: that._makeObjectFromPrimitive(item),\r\n                childrenKeys: []\r\n            }\r\n        };\r\n        (0, _extend.extend)(node, item);\r\n        delete node.items;\r\n        return node\r\n    },\r\n    setChildrenKeys: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            if (node.internalFields.parentKey === that._rootValue) {\r\n                return\r\n            }\r\n            var parent = that.getParentNode(node);\r\n            parent && parent.internalFields.childrenKeys.push(node.internalFields.key)\r\n        })\r\n    },\r\n    _makeObjectFromPrimitive: function(item) {\r\n        if ((0, _type.isPrimitive)(item)) {\r\n            var key = item;\r\n            item = {};\r\n            this._dataAccessors.setters.key(item, key)\r\n        }\r\n        return item\r\n    },\r\n    _convertToPublicNode: function(node, parent) {\r\n        if (!node) {\r\n            return null\r\n        }\r\n        var publicNode = {\r\n            text: this._dataAccessors.getters.display(node),\r\n            key: node.internalFields.key,\r\n            selected: node.internalFields.selected,\r\n            expanded: node.internalFields.expanded,\r\n            disabled: node.internalFields.disabled,\r\n            parent: parent || null,\r\n            itemData: node.internalFields.item,\r\n            children: [],\r\n            items: []\r\n        };\r\n        if (publicNode.parent) {\r\n            publicNode.parent.children.push(publicNode);\r\n            publicNode.parent.items.push(publicNode)\r\n        }\r\n        return publicNode\r\n    },\r\n    convertToPublicNodes: function(data, parent) {\r\n        if (!data.length) {\r\n            return []\r\n        }\r\n        var that = this;\r\n        var publicNodes = [];\r\n        (0, _iterator.each)(data, function(_, node) {\r\n            node = (0, _type.isPrimitive)(node) ? that._getByKey(node) : node;\r\n            var publicNode = that._convertToPublicNode(node, parent);\r\n            publicNode.children = that.convertToPublicNodes(node.internalFields.childrenKeys, publicNode);\r\n            publicNodes.push(publicNode);\r\n            node.internalFields.publicNode = publicNode\r\n        });\r\n        return publicNodes\r\n    },\r\n    setDataAccessors: function(accessors) {\r\n        this._dataAccessors = accessors\r\n    },\r\n    _getByKey: function(key) {\r\n        return this._dataStructure[this.getIndexByKey(key)] || null\r\n    },\r\n    getParentNode: function(node) {\r\n        return this._getByKey(node.internalFields.parentKey)\r\n    },\r\n    getByKey: function getByKey(data, key) {\r\n        if (null === key || void 0 === key) {\r\n            return null\r\n        }\r\n        var result = null;\r\n        var that = this;\r\n        var getByKey = function(data, key) {\r\n            (0, _iterator.each)(data, function(_, element) {\r\n                var currentElementKey = element.internalFields && element.internalFields.key || that._dataAccessors.getters.key(element);\r\n                if (currentElementKey.toString() === key.toString()) {\r\n                    result = element;\r\n                    return false\r\n                }\r\n            });\r\n            return result\r\n        };\r\n        return getByKey(data, key)\r\n    },\r\n    getItemsCount: function() {\r\n        return this._itemsCount\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this._visibleItemsCount\r\n    },\r\n    updateIndexByKey: function() {\r\n        var that = this;\r\n        this._indexByKey = {};\r\n        (0, _iterator.each)(this._dataStructure, function(index, node) {\r\n            that._checkForDuplicateId(node.internalFields.key);\r\n            that._indexByKey[node.internalFields.key] = index\r\n        })\r\n    },\r\n    updateChildrenKeys: function() {\r\n        this._indexByKey = {};\r\n        this.removeChildrenKeys();\r\n        this.updateIndexByKey();\r\n        this.setChildrenKeys()\r\n    },\r\n    removeChildrenKeys: function() {\r\n        this._indexByKey = {};\r\n        (0, _iterator.each)(this._dataStructure, function(index, node) {\r\n            node.internalFields.childrenKeys = []\r\n        })\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this._indexByKey[key]\r\n    },\r\n    createPlainStructure: function(items, rootValue, dataType) {\r\n        this._itemsCount = 0;\r\n        this._visibleItemsCount = 0;\r\n        this._rootValue = rootValue;\r\n        this._dataType = dataType;\r\n        this._indexByKey = {};\r\n        this._convertItemsToNodes(items);\r\n        this.setChildrenKeys();\r\n        return this._dataStructure\r\n    }\r\n});\r\nvar _default = DataConverter;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/hierarchical_collection/ui.hierarchical_collection_widget.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _icon = require(\"../../core/utils/icon\");\r\nvar _ui = _interopRequireDefault(require(\"./ui.data_adapter\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"../collection/ui.collection_widget.edit\"));\r\nvar _bindable_template = require(\"../../core/templates/bindable_template\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _common = require(\"../../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar HierarchicalCollectionWidget = _uiCollection_widget.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            keyExpr: \"id\",\r\n            displayExpr: \"text\",\r\n            selectedExpr: \"selected\",\r\n            disabledExpr: \"disabled\",\r\n            itemsExpr: \"items\",\r\n            hoverStateEnabled: true,\r\n            parentIdExpr: \"parentId\",\r\n            expandedExpr: \"expanded\"\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initAccessors();\r\n        this._initDataAdapter();\r\n        this._initDynamicTemplates()\r\n    },\r\n    _initDataSource: function() {\r\n        this.callBase();\r\n        this._dataSource && this._dataSource.paginate(false)\r\n    },\r\n    _initDataAdapter: function() {\r\n        var accessors = this._createDataAdapterAccessors();\r\n        this._dataAdapter = new _ui.default((0, _extend.extend)({\r\n            dataAccessors: {\r\n                getters: accessors.getters,\r\n                setters: accessors.setters\r\n            },\r\n            items: this.option(\"items\")\r\n        }, this._getDataAdapterOptions()))\r\n    },\r\n    _getDataAdapterOptions: _common.noop,\r\n    _initDynamicTemplates: function() {\r\n        var that = this;\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new _bindable_template.BindableTemplate(function($container, itemData) {\r\n                $container.html(itemData.html).append(this._getIconContainer(itemData)).append(this._getTextContainer(itemData)).append(this._getPopoutContainer(itemData));\r\n                that._addContentClasses(itemData, $container.parent())\r\n            }.bind(this), [\"text\", \"html\", \"items\", \"icon\"], this.option(\"integrationOptions.watchMethod\"), {\r\n                text: this._displayGetter,\r\n                items: this._itemsGetter\r\n            })\r\n        })\r\n    },\r\n    _getIconContainer: function(itemData) {\r\n        return itemData.icon ? (0, _icon.getImageContainer)(itemData.icon) : void 0\r\n    },\r\n    _getTextContainer: function(itemData) {\r\n        return (0, _renderer.default)(\"<span>\").text(itemData.text)\r\n    },\r\n    _getPopoutContainer: _common.noop,\r\n    _addContentClasses: _common.noop,\r\n    _initAccessors: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._getAccessors(), function(_, accessor) {\r\n            that._compileAccessor(accessor)\r\n        });\r\n        this._compileDisplayGetter()\r\n    },\r\n    _getAccessors: function() {\r\n        return [\"key\", \"selected\", \"items\", \"disabled\", \"parentId\", \"expanded\"]\r\n    },\r\n    _getChildNodes: function(node) {\r\n        var that = this;\r\n        var arr = [];\r\n        (0, _iterator.each)(node.internalFields.childrenKeys, function(_, key) {\r\n            var childNode = that._dataAdapter.getNodeByKey(key);\r\n            arr.push(childNode)\r\n        });\r\n        return arr\r\n    },\r\n    _hasChildren: function(node) {\r\n        return node && node.internalFields.childrenKeys.length\r\n    },\r\n    _compileAccessor: function(optionName) {\r\n        var getter = \"_\" + optionName + \"Getter\";\r\n        var setter = \"_\" + optionName + \"Setter\";\r\n        var optionExpr = this.option(optionName + \"Expr\");\r\n        if (!optionExpr) {\r\n            this[getter] = _common.noop;\r\n            this[setter] = _common.noop;\r\n            return\r\n        } else {\r\n            if ((0, _type.isFunction)(optionExpr)) {\r\n                this[setter] = function(obj, value) {\r\n                    obj[optionExpr()] = value\r\n                };\r\n                this[getter] = function(obj) {\r\n                    return obj[optionExpr()]\r\n                };\r\n                return\r\n            }\r\n        }\r\n        this[getter] = (0, _data.compileGetter)(optionExpr);\r\n        this[setter] = (0, _data.compileSetter)(optionExpr)\r\n    },\r\n    _createDataAdapterAccessors: function() {\r\n        var that = this;\r\n        var accessors = {\r\n            getters: {},\r\n            setters: {}\r\n        };\r\n        (0, _iterator.each)(this._getAccessors(), function(_, accessor) {\r\n            var getterName = \"_\" + accessor + \"Getter\";\r\n            var setterName = \"_\" + accessor + \"Setter\";\r\n            var newAccessor = \"parentId\" === accessor ? \"parentKey\" : accessor;\r\n            accessors.getters[newAccessor] = that[getterName];\r\n            accessors.setters[newAccessor] = that[setterName]\r\n        });\r\n        accessors.getters.display = !this._displayGetter ? function(itemData) {\r\n            return itemData.text\r\n        } : this._displayGetter;\r\n        return accessors\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._addWidgetClass()\r\n    },\r\n    _addWidgetClass: function() {\r\n        this._focusTarget().addClass(this._widgetClass())\r\n    },\r\n    _widgetClass: _common.noop,\r\n    _renderItemFrame: function(index, itemData) {\r\n        var $itemFrame = this.callBase.apply(this, arguments);\r\n        $itemFrame.toggleClass(DISABLED_STATE_CLASS, !!this._disabledGetter(itemData));\r\n        return $itemFrame\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"displayExpr\":\r\n            case \"keyExpr\":\r\n                this._initAccessors();\r\n                this._initDynamicTemplates();\r\n                this.repaint();\r\n                break;\r\n            case \"itemsExpr\":\r\n            case \"selectedExpr\":\r\n            case \"disabledExpr\":\r\n            case \"expandedExpr\":\r\n            case \"parentIdExpr\":\r\n                this._initAccessors();\r\n                this._initDataAdapter();\r\n                this.repaint();\r\n                break;\r\n            case \"items\":\r\n                this._initDataAdapter();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = HierarchicalCollectionWidget;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/list.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiListEdit = _interopRequireDefault(require(\"./list/ui.list.edit.search\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}(0, _component_registrator.default)(\"dxList\", _uiListEdit.default);\r\nvar _default = _uiListEdit.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/list/item.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _item = _interopRequireDefault(require(\"../collection/item\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar LIST_ITEM_BADGE_CONTAINER_CLASS = \"dx-list-item-badge-container\";\r\nvar LIST_ITEM_BADGE_CLASS = \"dx-list-item-badge\";\r\nvar BADGE_CLASS = \"dx-badge\";\r\nvar LIST_ITEM_CHEVRON_CONTAINER_CLASS = \"dx-list-item-chevron-container\";\r\nvar LIST_ITEM_CHEVRON_CLASS = \"dx-list-item-chevron\";\r\nvar ListItem = _item.default.inherit({\r\n    _renderWatchers: function() {\r\n        this.callBase();\r\n        this._startWatcher(\"badge\", this._renderBadge.bind(this));\r\n        this._startWatcher(\"showChevron\", this._renderShowChevron.bind(this))\r\n    },\r\n    _renderBadge: function(badge) {\r\n        this._$element.children(\".\" + LIST_ITEM_BADGE_CONTAINER_CLASS).remove();\r\n        if (!badge) {\r\n            return\r\n        }\r\n        var $badge = (0, _renderer.default)(\"<div>\").addClass(LIST_ITEM_BADGE_CONTAINER_CLASS).append((0, _renderer.default)(\"<div>\").addClass(LIST_ITEM_BADGE_CLASS).addClass(BADGE_CLASS).text(badge));\r\n        var $chevron = this._$element.children(\".\" + LIST_ITEM_CHEVRON_CONTAINER_CLASS).first();\r\n        $chevron.length > 0 ? $badge.insertBefore($chevron) : $badge.appendTo(this._$element)\r\n    },\r\n    _renderShowChevron: function(showChevron) {\r\n        this._$element.children(\".\" + LIST_ITEM_CHEVRON_CONTAINER_CLASS).remove();\r\n        if (!showChevron) {\r\n            return\r\n        }\r\n        var $chevronContainer = (0, _renderer.default)(\"<div>\").addClass(LIST_ITEM_CHEVRON_CONTAINER_CLASS);\r\n        var $chevron = (0, _renderer.default)(\"<div>\").addClass(LIST_ITEM_CHEVRON_CLASS);\r\n        $chevronContainer.append($chevron).appendTo(this._$element)\r\n    }\r\n});\r\nvar _default = ListItem;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/list/ui.list.base.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.ListBase = void 0;\r\nexports.setScrollView = setScrollView;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _icon = require(\"../../core/utils/icon\");\r\nvar _element = require(\"../../core/element\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _swipe = require(\"../../events/swipe\");\r\nvar _support = require(\"../../core/utils/support\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _utils = require(\"../widget/utils.ink_ripple\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _item = _interopRequireDefault(require(\"./item\"));\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _themes = require(\"../themes\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _scroll_view = _interopRequireDefault(require(\"../scroll_view\"));\r\nvar _uiScrollable = require(\"../scroll_view/ui.scrollable.device\");\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"../collection/ui.collection_widget.live_update\"));\r\nvar _bindable_template = require(\"../../core/templates/bindable_template\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _grouped_data_converter_mixin = _interopRequireDefault(require(\"../shared/grouped_data_converter_mixin\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar LIST_CLASS = \"dx-list\";\r\nvar LIST_ITEM_CLASS = \"dx-list-item\";\r\nvar LIST_ITEM_SELECTOR = \".\" + LIST_ITEM_CLASS;\r\nvar LIST_ITEM_ICON_CONTAINER_CLASS = \"dx-list-item-icon-container\";\r\nvar LIST_ITEM_ICON_CLASS = \"dx-list-item-icon\";\r\nvar LIST_GROUP_CLASS = \"dx-list-group\";\r\nvar LIST_GROUP_HEADER_CLASS = \"dx-list-group-header\";\r\nvar LIST_GROUP_BODY_CLASS = \"dx-list-group-body\";\r\nvar LIST_COLLAPSIBLE_GROUPS_CLASS = \"dx-list-collapsible-groups\";\r\nvar LIST_GROUP_COLLAPSED_CLASS = \"dx-list-group-collapsed\";\r\nvar LIST_GROUP_HEADER_INDICATOR_CLASS = \"dx-list-group-header-indicator\";\r\nvar LIST_HAS_NEXT_CLASS = \"dx-has-next\";\r\nvar LIST_NEXT_BUTTON_CLASS = \"dx-list-next-button\";\r\nvar WRAP_ITEM_TEXT_CLASS = \"dx-wrap-item-text\";\r\nvar SELECT_ALL_ITEM_SELECTOR = \".dx-list-select-all\";\r\nvar LIST_ITEM_DATA_KEY = \"dxListItemData\";\r\nvar LIST_FEEDBACK_SHOW_TIMEOUT = 70;\r\nvar groupItemsGetter = (0, _data.compileGetter)(\"items\");\r\nvar _scrollView;\r\nvar ListBase = _uiCollection_widget.default.inherit({\r\n    _activeStateUnit: [LIST_ITEM_SELECTOR, SELECT_ALL_ITEM_SELECTOR].join(\",\"),\r\n    _supportedKeys: function() {\r\n        var that = this;\r\n        var moveFocusPerPage = function(direction) {\r\n            var $item = getEdgeVisibleItem(direction);\r\n            var isFocusedItem = $item.is(that.option(\"focusedElement\"));\r\n            if (isFocusedItem) {\r\n                scrollListTo($item, direction);\r\n                $item = getEdgeVisibleItem(direction)\r\n            }\r\n            that.option(\"focusedElement\", (0, _element.getPublicElement)($item));\r\n            that.scrollToItem($item)\r\n        };\r\n\r\n        function getEdgeVisibleItem(direction) {\r\n            var scrollTop = that.scrollTop();\r\n            var containerHeight = that.$element().height();\r\n            var $item = (0, _renderer.default)(that.option(\"focusedElement\"));\r\n            var isItemVisible = true;\r\n            if (!$item.length) {\r\n                return (0, _renderer.default)()\r\n            }\r\n            while (isItemVisible) {\r\n                var $nextItem = $item[direction]();\r\n                if (!$nextItem.length) {\r\n                    break\r\n                }\r\n                var nextItemLocation = $nextItem.position().top + $nextItem.outerHeight() / 2;\r\n                isItemVisible = nextItemLocation < containerHeight + scrollTop && nextItemLocation > scrollTop;\r\n                if (isItemVisible) {\r\n                    $item = $nextItem\r\n                }\r\n            }\r\n            return $item\r\n        }\r\n\r\n        function scrollListTo($item, direction) {\r\n            var resultPosition = $item.position().top;\r\n            if (\"prev\" === direction) {\r\n                resultPosition = $item.position().top - that.$element().height() + $item.outerHeight()\r\n            }\r\n            that.scrollTo(resultPosition)\r\n        }\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            leftArrow: _common.noop,\r\n            rightArrow: _common.noop,\r\n            pageUp: function() {\r\n                moveFocusPerPage(\"prev\");\r\n                return false\r\n            },\r\n            pageDown: function() {\r\n                moveFocusPerPage(\"next\");\r\n                return false\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            pullRefreshEnabled: false,\r\n            scrollingEnabled: true,\r\n            showScrollbar: \"onScroll\",\r\n            useNativeScrolling: true,\r\n            bounceEnabled: true,\r\n            scrollByContent: true,\r\n            scrollByThumb: false,\r\n            pullingDownText: _message.default.format(\"dxList-pullingDownText\"),\r\n            pulledDownText: _message.default.format(\"dxList-pulledDownText\"),\r\n            refreshingText: _message.default.format(\"dxList-refreshingText\"),\r\n            pageLoadingText: _message.default.format(\"dxList-pageLoadingText\"),\r\n            onScroll: null,\r\n            onPullRefresh: null,\r\n            onPageLoading: null,\r\n            pageLoadMode: \"scrollBottom\",\r\n            nextButtonText: _message.default.format(\"dxList-nextButtonText\"),\r\n            onItemSwipe: null,\r\n            grouped: false,\r\n            onGroupRendered: null,\r\n            collapsibleGroups: false,\r\n            groupTemplate: \"group\",\r\n            indicateLoading: true,\r\n            activeStateEnabled: true,\r\n            _itemAttributes: {\r\n                role: \"option\"\r\n            },\r\n            _listAttributes: {\r\n                role: \"listbox\"\r\n            },\r\n            useInkRipple: false,\r\n            wrapItemText: false,\r\n            _swipeEnabled: true,\r\n            _revertPageOnEmptyLoad: false,\r\n            showChevronExpr: function(data) {\r\n                return data ? data.showChevron : void 0\r\n            },\r\n            badgeExpr: function(data) {\r\n                return data ? data.badge : void 0\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = (0, _themes.current)();\r\n        return this.callBase().concat((0, _uiScrollable.deviceDependentOptions)(), [{\r\n            device: function() {\r\n                return !_support.nativeScrolling\r\n            },\r\n            options: {\r\n                useNativeScrolling: false\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return !_support.nativeScrolling && !_devices.default.isSimulator() && \"desktop\" === _devices.default.real().deviceType && \"generic\" === _device.platform\r\n            },\r\n            options: {\r\n                showScrollbar: \"onHover\",\r\n                pageLoadMode: \"nextButton\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return (0, _themes.isMaterial)(themeName)\r\n            },\r\n            options: {\r\n                pullingDownText: \"\",\r\n                pulledDownText: \"\",\r\n                refreshingText: \"\",\r\n                pageLoadingText: \"\",\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateLoadingState(true)\r\n        }\r\n    },\r\n    _itemClass: function() {\r\n        return LIST_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return LIST_ITEM_DATA_KEY\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$container\r\n    },\r\n    _saveSelectionChangeEvent: function(e) {\r\n        this._selectionChangeEventInstance = e\r\n    },\r\n    _getSelectionChangeEvent: function() {\r\n        return this._selectionChangeEventInstance\r\n    },\r\n    _refreshItemElements: function() {\r\n        if (!this.option(\"grouped\")) {\r\n            this._itemElementsCache = this._itemContainer().children(this._itemSelector())\r\n        } else {\r\n            this._itemElementsCache = this._itemContainer().children(\".\" + LIST_GROUP_CLASS).children(\".\" + LIST_GROUP_BODY_CLASS).children(this._itemSelector())\r\n        }\r\n    },\r\n    _modifyByChanges: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._refreshItemElements();\r\n        this._updateLoadingState(true)\r\n    },\r\n    reorderItem: function(itemElement, toItemElement) {\r\n        var promise = this.callBase(itemElement, toItemElement);\r\n        return promise.done(function() {\r\n            this._refreshItemElements()\r\n        })\r\n    },\r\n    deleteItem: function(itemElement) {\r\n        var promise = this.callBase(itemElement);\r\n        return promise.done(function() {\r\n            this._refreshItemElements()\r\n        })\r\n    },\r\n    _itemElements: function() {\r\n        return this._itemElementsCache\r\n    },\r\n    _itemSelectHandler: function(e) {\r\n        if (\"single\" === this.option(\"selectionMode\") && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _allowDynamicItemsAppend: function() {\r\n        return true\r\n    },\r\n    _resetDataSourcePageIndex: function() {\r\n        var currentDataSource = this.getDataSource();\r\n        if (currentDataSource && 0 !== currentDataSource.pageIndex()) {\r\n            currentDataSource.pageIndex(0);\r\n            currentDataSource.load()\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._resetDataSourcePageIndex();\r\n        this._$container = this.$element();\r\n        this._initScrollView();\r\n        this._feedbackShowTimeout = LIST_FEEDBACK_SHOW_TIMEOUT;\r\n        this._createGroupRenderAction()\r\n    },\r\n    _scrollBottomMode: function() {\r\n        return \"scrollBottom\" === this.option(\"pageLoadMode\")\r\n    },\r\n    _nextButtonMode: function() {\r\n        return \"nextButton\" === this.option(\"pageLoadMode\")\r\n    },\r\n    _dataSourceOptions: function() {\r\n        var scrollBottom = this._scrollBottomMode();\r\n        var nextButton = this._nextButtonMode();\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            paginate: (0, _common.ensureDefined)(scrollBottom || nextButton, true)\r\n        })\r\n    },\r\n    _getGroupedOption: function() {\r\n        return this.option(\"grouped\")\r\n    },\r\n    _getGroupContainerByIndex: function(groupIndex) {\r\n        return this._itemContainer().find(\".\".concat(LIST_GROUP_CLASS)).eq(groupIndex).find(\".\".concat(LIST_GROUP_BODY_CLASS))\r\n    },\r\n    _dataSourceFromUrlLoadMode: function() {\r\n        return \"raw\"\r\n    },\r\n    _initScrollView: function() {\r\n        var scrollingEnabled = this.option(\"scrollingEnabled\");\r\n        var pullRefreshEnabled = scrollingEnabled && this.option(\"pullRefreshEnabled\");\r\n        var autoPagingEnabled = scrollingEnabled && this._scrollBottomMode() && !!this._dataSource;\r\n        this._scrollView = this._createComponent(this.$element(), getScrollView(), {\r\n            disabled: this.option(\"disabled\") || !scrollingEnabled,\r\n            onScroll: this._scrollHandler.bind(this),\r\n            onPullDown: pullRefreshEnabled ? this._pullDownHandler.bind(this) : null,\r\n            onReachBottom: autoPagingEnabled ? this._scrollBottomHandler.bind(this) : null,\r\n            showScrollbar: this.option(\"showScrollbar\"),\r\n            useNative: this.option(\"useNativeScrolling\"),\r\n            bounceEnabled: this.option(\"bounceEnabled\"),\r\n            scrollByContent: this.option(\"scrollByContent\"),\r\n            scrollByThumb: this.option(\"scrollByThumb\"),\r\n            pullingDownText: this.option(\"pullingDownText\"),\r\n            pulledDownText: this.option(\"pulledDownText\"),\r\n            refreshingText: this.option(\"refreshingText\"),\r\n            reachBottomText: this.option(\"pageLoadingText\"),\r\n            useKeyboard: false\r\n        });\r\n        this._$container = (0, _renderer.default)(this._scrollView.content());\r\n        if (this.option(\"wrapItemText\")) {\r\n            this._$container.addClass(WRAP_ITEM_TEXT_CLASS)\r\n        }\r\n        this._createScrollViewActions()\r\n    },\r\n    _createScrollViewActions: function() {\r\n        this._scrollAction = this._createActionByOption(\"onScroll\");\r\n        this._pullRefreshAction = this._createActionByOption(\"onPullRefresh\");\r\n        this._pageLoadingAction = this._createActionByOption(\"onPageLoading\")\r\n    },\r\n    _scrollHandler: function(e) {\r\n        this._scrollAction && this._scrollAction(e)\r\n    },\r\n    _initTemplates: function() {\r\n        this._templateManager.addDefaultTemplates({\r\n            group: new _bindable_template.BindableTemplate(function($container, data) {\r\n                if ((0, _type.isPlainObject)(data)) {\r\n                    if (data.key) {\r\n                        $container.text(data.key)\r\n                    }\r\n                } else {\r\n                    $container.text(String(data))\r\n                }\r\n            }, [\"key\"], this.option(\"integrationOptions.watchMethod\"))\r\n        });\r\n        this.callBase()\r\n    },\r\n    _prepareDefaultItemTemplate: function(data, $container) {\r\n        this.callBase(data, $container);\r\n        if (data.icon) {\r\n            var $icon = (0, _icon.getImageContainer)(data.icon).addClass(LIST_ITEM_ICON_CLASS);\r\n            var $iconContainer = (0, _renderer.default)(\"<div>\").addClass(LIST_ITEM_ICON_CONTAINER_CLASS);\r\n            $iconContainer.append($icon);\r\n            $container.prepend($iconContainer)\r\n        }\r\n    },\r\n    _getBindableFields: function() {\r\n        return [\"text\", \"html\", \"icon\"]\r\n    },\r\n    _updateLoadingState: function(tryLoadMore) {\r\n        var isDataLoaded = !tryLoadMore || this._isLastPage();\r\n        var scrollBottomMode = this._scrollBottomMode();\r\n        var stopLoading = isDataLoaded || !scrollBottomMode;\r\n        var hideLoadIndicator = stopLoading && !this._isDataSourceLoading();\r\n        if (stopLoading || this._scrollViewIsFull()) {\r\n            this._scrollView.release(hideLoadIndicator);\r\n            this._toggleNextButton(this._shouldRenderNextButton() && !this._isLastPage());\r\n            this._loadIndicationSuppressed(false)\r\n        } else {\r\n            this._infiniteDataLoading()\r\n        }\r\n    },\r\n    _shouldRenderNextButton: function() {\r\n        return this._nextButtonMode() && this._dataSource && this._dataSource.isLoaded()\r\n    },\r\n    _isDataSourceFirstLoadCompleted: function(newValue) {\r\n        if ((0, _type.isDefined)(newValue)) {\r\n            this._isFirstLoadCompleted = newValue\r\n        }\r\n        return this._isFirstLoadCompleted\r\n    },\r\n    _dataSourceLoadingChangedHandler: function(isLoading) {\r\n        if (this._loadIndicationSuppressed()) {\r\n            return\r\n        }\r\n        if (isLoading && this.option(\"indicateLoading\")) {\r\n            this._showLoadingIndicatorTimer = setTimeout(function() {\r\n                var isEmpty = !this._itemElements().length;\r\n                var shouldIndicateLoading = !isEmpty || this._isDataSourceFirstLoadCompleted();\r\n                if (shouldIndicateLoading) {\r\n                    var _this$_scrollView;\r\n                    null === (_this$_scrollView = this._scrollView) || void 0 === _this$_scrollView ? void 0 : _this$_scrollView.startLoading()\r\n                }\r\n            }.bind(this))\r\n        } else {\r\n            clearTimeout(this._showLoadingIndicatorTimer);\r\n            this._scrollView && this._scrollView.finishLoading()\r\n        }\r\n        if (!isLoading) {\r\n            this._isDataSourceFirstLoadCompleted(false)\r\n        }\r\n    },\r\n    _dataSourceChangedHandler: function() {\r\n        if (!this._shouldAppendItems() && (0, _window.hasWindow)()) {\r\n            this._scrollView && this._scrollView.scrollTo(0)\r\n        }\r\n        this.callBase.apply(this, arguments);\r\n        this._isDataSourceFirstLoadCompleted(true)\r\n    },\r\n    _refreshContent: function() {\r\n        this._prepareContent();\r\n        this._fireContentReadyAction()\r\n    },\r\n    _hideLoadingIfLoadIndicationOff: function() {\r\n        if (!this.option(\"indicateLoading\")) {\r\n            this._dataSourceLoadingChangedHandler(false)\r\n        }\r\n    },\r\n    _loadIndicationSuppressed: function(value) {\r\n        if (!arguments.length) {\r\n            return this._isLoadIndicationSuppressed\r\n        }\r\n        this._isLoadIndicationSuppressed = value\r\n    },\r\n    _scrollViewIsFull: function() {\r\n        return !this._scrollView || this._scrollView.isFull()\r\n    },\r\n    _pullDownHandler: function(e) {\r\n        this._pullRefreshAction(e);\r\n        if (this._dataSource && !this._isDataSourceLoading()) {\r\n            this._clearSelectedItems();\r\n            this._dataSource.pageIndex(0);\r\n            this._dataSource.reload()\r\n        } else {\r\n            this._updateLoadingState()\r\n        }\r\n    },\r\n    _infiniteDataLoading: function() {\r\n        var _this = this;\r\n        var isElementVisible = this.$element().is(\":visible\");\r\n        if (isElementVisible && !this._scrollViewIsFull() && !this._isDataSourceLoading() && !this._isLastPage()) {\r\n            clearTimeout(this._loadNextPageTimer);\r\n            this._loadNextPageTimer = setTimeout(function() {\r\n                _this._loadNextPage().done(_this._setPreviousPageIfNewIsEmpty.bind(_this))\r\n            })\r\n        }\r\n    },\r\n    _setPreviousPageIfNewIsEmpty: function(result) {\r\n        if (this.option(\"_revertPageOnEmptyLoad\")) {\r\n            var dataSource = this.getDataSource();\r\n            var pageIndex = null === dataSource || void 0 === dataSource ? void 0 : dataSource.pageIndex();\r\n            if (0 === (null === result || void 0 === result ? void 0 : result.length) && pageIndex > 0) {\r\n                this._fireContentReadyAction();\r\n                dataSource.pageIndex(pageIndex - 1)\r\n            }\r\n        }\r\n    },\r\n    _scrollBottomHandler: function(e) {\r\n        this._pageLoadingAction(e);\r\n        if (!this._isDataSourceLoading() && !this._isLastPage()) {\r\n            this._loadNextPage()\r\n        } else {\r\n            this._updateLoadingState()\r\n        }\r\n    },\r\n    _renderItems: function(items) {\r\n        if (this.option(\"grouped\")) {\r\n            (0, _iterator.each)(items, this._renderGroup.bind(this));\r\n            this._attachGroupCollapseEvent();\r\n            this._renderEmptyMessage();\r\n            if ((0, _themes.isMaterial)()) {\r\n                this.attachGroupHeaderInkRippleEvents()\r\n            }\r\n        } else {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n        this._refreshItemElements();\r\n        this._updateLoadingState(true)\r\n    },\r\n    _attachGroupCollapseEvent: function() {\r\n        var eventName = (0, _index.addNamespace)(_click.name, this.NAME);\r\n        var selector = \".\" + LIST_GROUP_HEADER_CLASS;\r\n        var $element = this.$element();\r\n        var collapsibleGroups = this.option(\"collapsibleGroups\");\r\n        $element.toggleClass(LIST_COLLAPSIBLE_GROUPS_CLASS, collapsibleGroups);\r\n        _events_engine.default.off($element, eventName, selector);\r\n        if (collapsibleGroups) {\r\n            _events_engine.default.on($element, eventName, selector, function(e) {\r\n                this._createAction(function(e) {\r\n                    var $group = (0, _renderer.default)(e.event.currentTarget).parent();\r\n                    this._collapseGroupHandler($group);\r\n                    if (this.option(\"focusStateEnabled\")) {\r\n                        this.option(\"focusedElement\", (0, _element.getPublicElement)($group.find(\".\" + LIST_ITEM_CLASS).eq(0)))\r\n                    }\r\n                }.bind(this), {\r\n                    validatingTargetName: \"element\"\r\n                })({\r\n                    event: e\r\n                })\r\n            }.bind(this))\r\n        }\r\n    },\r\n    _collapseGroupHandler: function($group, toggle) {\r\n        var deferred = new _deferred.Deferred;\r\n        if ($group.hasClass(LIST_GROUP_COLLAPSED_CLASS) === toggle) {\r\n            return deferred.resolve()\r\n        }\r\n        var $groupBody = $group.children(\".\" + LIST_GROUP_BODY_CLASS);\r\n        var startHeight = $groupBody.outerHeight();\r\n        var endHeight = 0 === startHeight ? $groupBody.height(\"auto\").outerHeight() : 0;\r\n        $group.toggleClass(LIST_GROUP_COLLAPSED_CLASS, toggle);\r\n        _fx.default.animate($groupBody, {\r\n            type: \"custom\",\r\n            from: {\r\n                height: startHeight\r\n            },\r\n            to: {\r\n                height: endHeight\r\n            },\r\n            duration: 200,\r\n            complete: function() {\r\n                this.updateDimensions();\r\n                this._updateLoadingState();\r\n                deferred.resolve()\r\n            }.bind(this)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    _dataSourceLoadErrorHandler: function() {\r\n        this._forgetNextPageLoading();\r\n        if (this._initialized) {\r\n            this._renderEmptyMessage();\r\n            this._updateLoadingState()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this._itemElementsCache = (0, _renderer.default)();\r\n        this.$element().addClass(LIST_CLASS);\r\n        this.callBase();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.setAria(\"role\", this.option(\"_listAttributes\").role)\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = (0, _utils.render)()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        var that = this;\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            if ((0, _themes.isMaterial)()) {\r\n                this._inkRippleTimer = setTimeout(function() {\r\n                    that._inkRipple.showWave(config)\r\n                }, LIST_FEEDBACK_SHOW_TIMEOUT / 2)\r\n            } else {\r\n                that._inkRipple.showWave(config)\r\n            }\r\n        } else {\r\n            clearTimeout(this._inkRippleTimer);\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        this._refreshItemElements();\r\n        this.callBase.apply(this, arguments);\r\n        if (this.option(\"_swipeEnabled\")) {\r\n            this._attachSwipeEvent((0, _renderer.default)(args.itemElement))\r\n        }\r\n    },\r\n    _attachSwipeEvent: function($itemElement) {\r\n        var endEventName = (0, _index.addNamespace)(_swipe.end, this.NAME);\r\n        _events_engine.default.on($itemElement, endEventName, this._itemSwipeEndHandler.bind(this))\r\n    },\r\n    _itemSwipeEndHandler: function(e) {\r\n        this._itemDXEventHandler(e, \"onItemSwipe\", {\r\n            direction: e.offset < 0 ? \"left\" : \"right\"\r\n        })\r\n    },\r\n    _nextButtonHandler: function(e) {\r\n        this._pageLoadingAction(e);\r\n        var source = this._dataSource;\r\n        if (source && !source.isLoading()) {\r\n            this._scrollView.toggleLoading(true);\r\n            this._$nextButton.detach();\r\n            this._loadIndicationSuppressed(true);\r\n            this._loadNextPage()\r\n        }\r\n    },\r\n    _renderGroup: function(index, group) {\r\n        var $groupElement = (0, _renderer.default)(\"<div>\").addClass(LIST_GROUP_CLASS).appendTo(this._itemContainer());\r\n        var $groupHeaderElement = (0, _renderer.default)(\"<div>\").addClass(LIST_GROUP_HEADER_CLASS).appendTo($groupElement);\r\n        var groupTemplateName = this.option(\"groupTemplate\");\r\n        var groupTemplate = this._getTemplate(group.template || groupTemplateName, group, index, $groupHeaderElement);\r\n        var renderArgs = {\r\n            index: index,\r\n            itemData: group,\r\n            container: (0, _element.getPublicElement)($groupHeaderElement)\r\n        };\r\n        this._createItemByTemplate(groupTemplate, renderArgs);\r\n        if ((0, _themes.isMaterial)()) {\r\n            (0, _renderer.default)(\"<div>\").addClass(LIST_GROUP_HEADER_INDICATOR_CLASS).prependTo($groupHeaderElement)\r\n        }\r\n        this._renderingGroupIndex = index;\r\n        var $groupBody = (0, _renderer.default)(\"<div>\").addClass(LIST_GROUP_BODY_CLASS).appendTo($groupElement);\r\n        (0, _iterator.each)(groupItemsGetter(group) || [], function(itemIndex, item) {\r\n            this._renderItem({\r\n                group: index,\r\n                item: itemIndex\r\n            }, item, $groupBody)\r\n        }.bind(this));\r\n        this._groupRenderAction({\r\n            groupElement: (0, _element.getPublicElement)($groupElement),\r\n            groupIndex: index,\r\n            groupData: group\r\n        })\r\n    },\r\n    downInkRippleHandler: function(e) {\r\n        this._toggleActiveState((0, _renderer.default)(e.currentTarget), true, e)\r\n    },\r\n    upInkRippleHandler: function(e) {\r\n        this._toggleActiveState((0, _renderer.default)(e.currentTarget), false)\r\n    },\r\n    attachGroupHeaderInkRippleEvents: function() {\r\n        var selector = \".\" + LIST_GROUP_HEADER_CLASS;\r\n        var $element = this.$element();\r\n        this._downInkRippleHandler = this._downInkRippleHandler || this.downInkRippleHandler.bind(this);\r\n        this._upInkRippleHandler = this._upInkRippleHandler || this.upInkRippleHandler.bind(this);\r\n        var downArguments = [$element, \"dxpointerdown\", selector, this._downInkRippleHandler];\r\n        var upArguments = [$element, \"dxpointerup dxpointerout\", selector, this._upInkRippleHandler];\r\n        _events_engine.default.off.apply(_events_engine.default, downArguments);\r\n        _events_engine.default.on.apply(_events_engine.default, downArguments);\r\n        _events_engine.default.off.apply(_events_engine.default, upArguments);\r\n        _events_engine.default.on.apply(_events_engine.default, upArguments)\r\n    },\r\n    _createGroupRenderAction: function() {\r\n        this._groupRenderAction = this._createActionByOption(\"onGroupRendered\")\r\n    },\r\n    _clean: function() {\r\n        clearTimeout(this._inkRippleTimer);\r\n        if (this._$nextButton) {\r\n            this._$nextButton.remove();\r\n            this._$nextButton = null\r\n        }\r\n        delete this._inkRipple;\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _dispose: function() {\r\n        this._isDataSourceFirstLoadCompleted(false);\r\n        clearTimeout(this._holdTimer);\r\n        clearTimeout(this._loadNextPageTimer);\r\n        clearTimeout(this._showLoadingIndicatorTimer);\r\n        this.callBase()\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this.callBase(value);\r\n        this._scrollView.option(\"disabled\", value || !this.option(\"scrollingEnabled\"))\r\n    },\r\n    _toggleNextButton: function(value) {\r\n        var dataSource = this._dataSource;\r\n        var $nextButton = this._getNextButton();\r\n        this.$element().toggleClass(LIST_HAS_NEXT_CLASS, value);\r\n        if (value && dataSource && dataSource.isLoaded()) {\r\n            $nextButton.appendTo(this._itemContainer())\r\n        }\r\n        if (!value) {\r\n            $nextButton.detach()\r\n        }\r\n    },\r\n    _getNextButton: function() {\r\n        if (!this._$nextButton) {\r\n            this._$nextButton = this._createNextButton()\r\n        }\r\n        return this._$nextButton\r\n    },\r\n    _createNextButton: function() {\r\n        var $result = (0, _renderer.default)(\"<div>\").addClass(LIST_NEXT_BUTTON_CLASS);\r\n        var $button = (0, _renderer.default)(\"<div>\").appendTo($result);\r\n        this._createComponent($button, _button.default, {\r\n            text: this.option(\"nextButtonText\"),\r\n            onClick: this._nextButtonHandler.bind(this),\r\n            type: (0, _themes.isMaterial)() ? \"default\" : void 0,\r\n            integrationOptions: {}\r\n        });\r\n        return $result\r\n    },\r\n    _moveFocus: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this.scrollToItem(this.option(\"focusedElement\"))\r\n    },\r\n    _refresh: function() {\r\n        if (!(0, _window.hasWindow)()) {\r\n            this.callBase()\r\n        } else {\r\n            var scrollTop = this._scrollView.scrollTop();\r\n            this.callBase();\r\n            scrollTop && this._scrollView.scrollTo(scrollTop)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"pageLoadMode\":\r\n                this._toggleNextButton(args.value);\r\n                this._initScrollView();\r\n                break;\r\n            case \"dataSource\":\r\n                this.callBase(args);\r\n                this._initScrollView();\r\n                this._isDataSourceFirstLoadCompleted(false);\r\n                break;\r\n            case \"items\":\r\n                this.callBase(args);\r\n                this._isDataSourceFirstLoadCompleted(false);\r\n                break;\r\n            case \"pullingDownText\":\r\n            case \"pulledDownText\":\r\n            case \"refreshingText\":\r\n            case \"pageLoadingText\":\r\n            case \"showScrollbar\":\r\n            case \"bounceEnabled\":\r\n            case \"scrollByContent\":\r\n            case \"scrollByThumb\":\r\n            case \"useNativeScrolling\":\r\n            case \"scrollingEnabled\":\r\n            case \"pullRefreshEnabled\":\r\n                this._initScrollView();\r\n                this._updateLoadingState();\r\n                break;\r\n            case \"nextButtonText\":\r\n            case \"onItemSwipe\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"onScroll\":\r\n            case \"onPullRefresh\":\r\n            case \"onPageLoading\":\r\n                this._createScrollViewActions();\r\n                break;\r\n            case \"grouped\":\r\n            case \"collapsibleGroups\":\r\n            case \"groupTemplate\":\r\n                this._invalidate();\r\n                break;\r\n            case \"wrapItemText\":\r\n                this._$container.toggleClass(WRAP_ITEM_TEXT_CLASS, args.value);\r\n                break;\r\n            case \"onGroupRendered\":\r\n                this._createGroupRenderAction();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._scrollView.update();\r\n                break;\r\n            case \"indicateLoading\":\r\n                this._hideLoadingIfLoadIndicationOff();\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                this._scrollView.update();\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this._initScrollView();\r\n                this.callBase(args);\r\n                break;\r\n            case \"showChevronExpr\":\r\n            case \"badgeExpr\":\r\n                this._invalidate();\r\n                break;\r\n            case \"_swipeEnabled\":\r\n            case \"_revertPageOnEmptyLoad\":\r\n                break;\r\n            case \"_listAttributes\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _extendActionArgs: function($itemElement) {\r\n        if (!this.option(\"grouped\")) {\r\n            return this.callBase($itemElement)\r\n        }\r\n        var $group = $itemElement.closest(\".\" + LIST_GROUP_CLASS);\r\n        var $item = $group.find(\".\" + LIST_ITEM_CLASS);\r\n        return (0, _extend.extend)(this.callBase($itemElement), {\r\n            itemIndex: {\r\n                group: $group.index(),\r\n                item: $item.index($itemElement)\r\n            }\r\n        })\r\n    },\r\n    expandGroup: function(groupIndex) {\r\n        var deferred = new _deferred.Deferred;\r\n        var $group = this._itemContainer().find(\".\" + LIST_GROUP_CLASS).eq(groupIndex);\r\n        this._collapseGroupHandler($group, false).done(function() {\r\n            deferred.resolveWith(this)\r\n        }.bind(this));\r\n        return deferred.promise()\r\n    },\r\n    collapseGroup: function(groupIndex) {\r\n        var deferred = new _deferred.Deferred;\r\n        var $group = this._itemContainer().find(\".\" + LIST_GROUP_CLASS).eq(groupIndex);\r\n        this._collapseGroupHandler($group, true).done(function() {\r\n            deferred.resolveWith(this)\r\n        }.bind(this));\r\n        return deferred\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this;\r\n        var deferred = new _deferred.Deferred;\r\n        if (that._scrollView) {\r\n            that._scrollView.update().done(function() {\r\n                !that._scrollViewIsFull() && that._updateLoadingState(true);\r\n                deferred.resolveWith(that)\r\n            })\r\n        } else {\r\n            deferred.resolveWith(that)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    reload: function() {\r\n        this.callBase();\r\n        this.scrollTo(0);\r\n        this._pullDownHandler()\r\n    },\r\n    repaint: function() {\r\n        this.scrollTo(0);\r\n        this.callBase()\r\n    },\r\n    scrollTop: function() {\r\n        return this._scrollView.scrollOffset().top\r\n    },\r\n    clientHeight: function() {\r\n        return this._scrollView.clientHeight()\r\n    },\r\n    scrollHeight: function() {\r\n        return this._scrollView.scrollHeight()\r\n    },\r\n    scrollBy: function(distance) {\r\n        this._scrollView.scrollBy(distance)\r\n    },\r\n    scrollTo: function(location) {\r\n        this._scrollView.scrollTo(location)\r\n    },\r\n    scrollToItem: function(itemElement) {\r\n        var $item = this._editStrategy.getItemElement(itemElement);\r\n        this._scrollView.scrollToElement($item)\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.updateDimensions()\r\n    }\r\n}).include(_grouped_data_converter_mixin.default);\r\nexports.ListBase = ListBase;\r\nListBase.ItemClass = _item.default;\r\n\r\nfunction getScrollView() {\r\n    return _scrollView || _scroll_view.default\r\n}\r\n\r\nfunction setScrollView(value) {\r\n    _scrollView = value\r\n}\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.context.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _uiListEdit = _interopRequireDefault(require(\"./ui.list.edit.decorator_menu_helper\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _uiListEdit2 = require(\"./ui.list.edit.decorator_registry\");\r\nvar _uiListEdit3 = _interopRequireDefault(require(\"./ui.list.edit.decorator\"));\r\nvar _overlay = _interopRequireDefault(require(\"../overlay\"));\r\nvar _uiList = require(\"./ui.list.base\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CONTEXTMENU_CLASS = \"dx-list-context-menu\";\r\nvar CONTEXTMENU_MENUCONTENT_CLASS = \"dx-list-context-menucontent\";\r\n(0, _uiListEdit2.register)(\"menu\", \"context\", _uiListEdit3.default.inherit({\r\n    _init: function() {\r\n        var $menu = (0, _renderer.default)(\"<div>\").addClass(CONTEXTMENU_CLASS);\r\n        this._list.$element().append($menu);\r\n        this._menu = this._renderOverlay($menu)\r\n    },\r\n    _renderOverlay: function($element) {\r\n        return this._list._createComponent($element, _overlay.default, {\r\n            shading: false,\r\n            deferRendering: true,\r\n            closeOnTargetScroll: true,\r\n            closeOnOutsideClick: function(e) {\r\n                return !(0, _renderer.default)(e.target).closest(\".\" + CONTEXTMENU_CLASS).length\r\n            },\r\n            animation: {\r\n                show: {\r\n                    type: \"slide\",\r\n                    duration: 300,\r\n                    from: {\r\n                        height: 0,\r\n                        opacity: 1\r\n                    },\r\n                    to: {\r\n                        height: function() {\r\n                            return this._$menuList.outerHeight()\r\n                        }.bind(this),\r\n                        opacity: 1\r\n                    }\r\n                },\r\n                hide: {\r\n                    type: \"slide\",\r\n                    duration: 0,\r\n                    from: {\r\n                        opacity: 1\r\n                    },\r\n                    to: {\r\n                        opacity: 0\r\n                    }\r\n                }\r\n            },\r\n            height: function() {\r\n                return this._$menuList ? this._$menuList.outerHeight() : 0\r\n            }.bind(this),\r\n            width: function() {\r\n                return this._list.$element().outerWidth()\r\n            }.bind(this),\r\n            onContentReady: this._renderMenuContent.bind(this)\r\n        })\r\n    },\r\n    _renderMenuContent: function(e) {\r\n        var $overlayContent = e.component.$content();\r\n        var items = this._menuItems().slice();\r\n        if (this._deleteEnabled()) {\r\n            items.push({\r\n                text: _message.default.format(\"dxListEditDecorator-delete\"),\r\n                action: this._deleteItem.bind(this)\r\n            })\r\n        }\r\n        this._$menuList = (0, _renderer.default)(\"<div>\");\r\n        this._list._createComponent(this._$menuList, _uiList.ListBase, {\r\n            items: items,\r\n            onItemClick: this._menuItemClickHandler.bind(this),\r\n            height: \"auto\",\r\n            integrationOptions: {}\r\n        });\r\n        $overlayContent.addClass(CONTEXTMENU_MENUCONTENT_CLASS);\r\n        $overlayContent.append(this._$menuList)\r\n    },\r\n    _menuItemClickHandler: function(args) {\r\n        this._menu.hide();\r\n        this._fireMenuAction(this._$itemWithMenu, args.itemData.action)\r\n    },\r\n    _deleteItem: function() {\r\n        this._list.deleteItem(this._$itemWithMenu)\r\n    },\r\n    handleContextMenu: function($itemElement) {\r\n        this._$itemWithMenu = $itemElement;\r\n        this._menu.option({\r\n            position: {\r\n                my: \"top\",\r\n                at: \"bottom\",\r\n                of: $itemElement,\r\n                collision: \"flip\"\r\n            }\r\n        });\r\n        this._menu.show();\r\n        return true\r\n    },\r\n    dispose: function() {\r\n        if (this._menu) {\r\n            this._menu.$element().remove()\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n}).include(_uiListEdit.default));\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _swipe = require(\"../../events/swipe\");\r\nvar _index = require(\"../../events/utils/index\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar LIST_EDIT_DECORATOR = \"dxListEditDecorator\";\r\nvar SWIPE_START_EVENT_NAME = (0, _index.addNamespace)(_swipe.start, LIST_EDIT_DECORATOR);\r\nvar SWIPE_UPDATE_EVENT_NAME = (0, _index.addNamespace)(_swipe.swipe, LIST_EDIT_DECORATOR);\r\nvar SWIPE_END_EVENT_NAME = (0, _index.addNamespace)(_swipe.end, LIST_EDIT_DECORATOR);\r\nvar EditDecorator = _class.default.inherit({\r\n    ctor: function(list) {\r\n        this._list = list;\r\n        this._init()\r\n    },\r\n    _init: _common.noop,\r\n    _shouldHandleSwipe: false,\r\n    _attachSwipeEvent: function(config) {\r\n        var swipeConfig = {\r\n            itemSizeFunc: function() {\r\n                if (this._clearSwipeCache) {\r\n                    this._itemWidthCache = this._list.$element().width();\r\n                    this._clearSwipeCache = false\r\n                }\r\n                return this._itemWidthCache\r\n            }.bind(this)\r\n        };\r\n        _events_engine.default.on(config.$itemElement, SWIPE_START_EVENT_NAME, swipeConfig, this._itemSwipeStartHandler.bind(this));\r\n        _events_engine.default.on(config.$itemElement, SWIPE_UPDATE_EVENT_NAME, this._itemSwipeUpdateHandler.bind(this));\r\n        _events_engine.default.on(config.$itemElement, SWIPE_END_EVENT_NAME, this._itemSwipeEndHandler.bind(this))\r\n    },\r\n    _itemSwipeStartHandler: function(e) {\r\n        var $itemElement = (0, _renderer.default)(e.currentTarget);\r\n        if ($itemElement.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        clearTimeout(this._list._inkRippleTimer);\r\n        this._swipeStartHandler($itemElement, e)\r\n    },\r\n    _itemSwipeUpdateHandler: function(e) {\r\n        var $itemElement = (0, _renderer.default)(e.currentTarget);\r\n        this._swipeUpdateHandler($itemElement, e)\r\n    },\r\n    _itemSwipeEndHandler: function(e) {\r\n        var $itemElement = (0, _renderer.default)(e.currentTarget);\r\n        this._swipeEndHandler($itemElement, e);\r\n        this._clearSwipeCache = true\r\n    },\r\n    beforeBag: _common.noop,\r\n    afterBag: _common.noop,\r\n    _commonOptions: function() {\r\n        return {\r\n            activeStateEnabled: this._list.option(\"activeStateEnabled\"),\r\n            hoverStateEnabled: this._list.option(\"hoverStateEnabled\"),\r\n            focusStateEnabled: this._list.option(\"focusStateEnabled\")\r\n        }\r\n    },\r\n    modifyElement: function(config) {\r\n        if (this._shouldHandleSwipe) {\r\n            this._attachSwipeEvent(config);\r\n            this._clearSwipeCache = true\r\n        }\r\n    },\r\n    afterRender: _common.noop,\r\n    handleClick: _common.noop,\r\n    handleKeyboardEvents: _common.noop,\r\n    handleEnterPressing: _common.noop,\r\n    handleContextMenu: _common.noop,\r\n    _swipeStartHandler: _common.noop,\r\n    _swipeUpdateHandler: _common.noop,\r\n    _swipeEndHandler: _common.noop,\r\n    visibilityChange: _common.noop,\r\n    getExcludedSelectors: _common.noop,\r\n    dispose: _common.noop\r\n});\r\nvar _default = EditDecorator;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.reorder.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _uiListEdit = require(\"./ui.list.edit.decorator_registry\");\r\nvar _uiListEdit2 = _interopRequireDefault(require(\"./ui.list.edit.decorator\"));\r\nvar _sortable = _interopRequireDefault(require(\"../sortable\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar REORDER_HANDLE_CONTAINER_CLASS = \"dx-list-reorder-handle-container\";\r\nvar REORDER_HANDLE_CLASS = \"dx-list-reorder-handle\";\r\nvar REORDERING_ITEM_GHOST_CLASS = \"dx-list-item-ghost-reordering\";\r\nvar STATE_HOVER_CLASS = \"dx-state-hover\";\r\n(0, _uiListEdit.register)(\"reorder\", \"default\", _uiListEdit2.default.inherit({\r\n    _init: function() {\r\n        var list = this._list;\r\n        this._groupedEnabled = this._list.option(\"grouped\");\r\n        this._lockedDrag = false;\r\n        var filter = this._groupedEnabled ? \"> .dx-list-group > .dx-list-group-body > .dx-list-item\" : \"> .dx-list-item\";\r\n        this._sortable = list._createComponent(list._scrollView.content(), _sortable.default, (0, _extend.extend)({\r\n            component: list,\r\n            contentTemplate: null,\r\n            allowReordering: false,\r\n            filter: filter,\r\n            container: list.$element(),\r\n            dragDirection: list.option(\"itemDragging.group\") ? \"both\" : \"vertical\",\r\n            handle: \".\".concat(REORDER_HANDLE_CLASS),\r\n            dragTemplate: this._dragTemplate,\r\n            onDragStart: this._dragStartHandler.bind(this),\r\n            onDragChange: this._dragChangeHandler.bind(this),\r\n            onReorder: this._reorderHandler.bind(this)\r\n        }, list.option(\"itemDragging\")))\r\n    },\r\n    afterRender: function() {\r\n        this._sortable.update()\r\n    },\r\n    _dragTemplate: function(e) {\r\n        return (0, _renderer.default)(e.itemElement).clone().width((0, _renderer.default)(e.itemElement).width()).addClass(REORDERING_ITEM_GHOST_CLASS).addClass(STATE_HOVER_CLASS)\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        if (this._lockedDrag) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n    },\r\n    _dragChangeHandler: function(e) {\r\n        if (this._groupedEnabled && !this._sameParent(e.fromIndex, e.toIndex)) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n    },\r\n    _sameParent: function(fromIndex, toIndex) {\r\n        var $dragging = this._list.getItemElementByFlatIndex(fromIndex);\r\n        var $over = this._list.getItemElementByFlatIndex(toIndex);\r\n        return $over.parent().get(0) === $dragging.parent().get(0)\r\n    },\r\n    _reorderHandler: function(e) {\r\n        var $targetElement = this._list.getItemElementByFlatIndex(e.toIndex);\r\n        this._list.reorderItem((0, _renderer.default)(e.itemElement), $targetElement)\r\n    },\r\n    afterBag: function(config) {\r\n        var _this = this;\r\n        var $handle = (0, _renderer.default)(\"<div>\").addClass(REORDER_HANDLE_CLASS);\r\n        _events_engine.default.on($handle, \"dxpointerdown\", function(e) {\r\n            _this._lockedDrag = !(0, _index.isMouseEvent)(e)\r\n        });\r\n        _events_engine.default.on($handle, \"dxhold\", {\r\n            timeout: 30\r\n        }, function(e) {\r\n            e.cancel = true;\r\n            _this._lockedDrag = false\r\n        });\r\n        config.$container.addClass(REORDER_HANDLE_CONTAINER_CLASS).append($handle)\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.selection.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _check_box = _interopRequireDefault(require(\"../check_box\"));\r\nvar _radio_button = _interopRequireDefault(require(\"../radio_group/radio_button\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _uiListEdit = require(\"./ui.list.edit.decorator_registry\");\r\nvar _uiListEdit2 = _interopRequireDefault(require(\"./ui.list.edit.decorator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SELECT_DECORATOR_ENABLED_CLASS = \"dx-list-select-decorator-enabled\";\r\nvar SELECT_DECORATOR_SELECT_ALL_CLASS = \"dx-list-select-all\";\r\nvar SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS = \"dx-list-select-all-checkbox\";\r\nvar SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS = \"dx-list-select-all-label\";\r\nvar SELECT_CHECKBOX_CONTAINER_CLASS = \"dx-list-select-checkbox-container\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-list-select-checkbox\";\r\nvar SELECT_RADIO_BUTTON_CONTAINER_CLASS = \"dx-list-select-radiobutton-container\";\r\nvar SELECT_RADIO_BUTTON_CLASS = \"dx-list-select-radiobutton\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar CLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxListEditDecorator\");\r\n(0, _uiListEdit.register)(\"selection\", \"default\", _uiListEdit2.default.inherit({\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var selectionMode = this._list.option(\"selectionMode\");\r\n        this._singleStrategy = \"single\" === selectionMode;\r\n        this._containerClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CONTAINER_CLASS : SELECT_CHECKBOX_CONTAINER_CLASS;\r\n        this._controlClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CLASS : SELECT_CHECKBOX_CLASS;\r\n        this._controlWidget = this._singleStrategy ? _radio_button.default : _check_box.default;\r\n        this._list.$element().addClass(SELECT_DECORATOR_ENABLED_CLASS)\r\n    },\r\n    beforeBag: function(config) {\r\n        var $itemElement = config.$itemElement;\r\n        var $container = config.$container.addClass(this._containerClass);\r\n        var $control = (0, _renderer.default)(\"<div>\").addClass(this._controlClass).appendTo($container);\r\n        new this._controlWidget($control, (0, _extend.extend)(this._commonOptions(), {\r\n            value: this._isSelected($itemElement),\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            onValueChanged: function(e) {\r\n                e.event && this._list._saveSelectionChangeEvent(e.event);\r\n                this._processCheckedState($itemElement, e.value);\r\n                e.event && e.event.stopPropagation()\r\n            }.bind(this)\r\n        }))\r\n    },\r\n    modifyElement: function(config) {\r\n        this.callBase.apply(this, arguments);\r\n        var $itemElement = config.$itemElement;\r\n        var control = this._controlWidget.getInstance($itemElement.find(\".\" + this._controlClass));\r\n        _events_engine.default.on($itemElement, \"stateChanged\", function(e, state) {\r\n            control.option(\"value\", state)\r\n        }.bind(this))\r\n    },\r\n    _updateSelectAllState: function() {\r\n        if (!this._$selectAll) {\r\n            return\r\n        }\r\n        this._selectAllCheckBox.option(\"value\", this._list.isSelectAll())\r\n    },\r\n    afterRender: function() {\r\n        if (\"all\" !== this._list.option(\"selectionMode\")) {\r\n            return\r\n        }\r\n        if (!this._$selectAll) {\r\n            this._renderSelectAll()\r\n        } else {\r\n            this._updateSelectAllState()\r\n        }\r\n    },\r\n    handleKeyboardEvents: function(currentFocusedIndex, moveFocusUp) {\r\n        var moveFocusDown = !moveFocusUp;\r\n        var list = this._list;\r\n        var $selectAll = this._$selectAll;\r\n        var lastItemIndex = list._getLastItemIndex();\r\n        var isFocusOutOfList = moveFocusUp && 0 === currentFocusedIndex || moveFocusDown && currentFocusedIndex === lastItemIndex;\r\n        var hasSelectAllItem = !!$selectAll;\r\n        if (hasSelectAllItem && isFocusOutOfList) {\r\n            list.option(\"focusedElement\", $selectAll);\r\n            list.scrollToItem(list.option(\"focusedElement\"));\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    handleEnterPressing: function(e) {\r\n        if (this._$selectAll && this._$selectAll.hasClass(FOCUSED_STATE_CLASS)) {\r\n            e.target = this._$selectAll.get(0);\r\n            this._list._saveSelectionChangeEvent(e);\r\n            this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\r\n            return true\r\n        }\r\n    },\r\n    _renderSelectAll: function() {\r\n        var $selectAll = this._$selectAll = (0, _renderer.default)(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CLASS);\r\n        var list = this._list;\r\n        var downArrowHandler = list._supportedKeys().downArrow.bind(list);\r\n        this._selectAllCheckBox = list._createComponent((0, _renderer.default)(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS).appendTo($selectAll), _check_box.default, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false\r\n        });\r\n        this._selectAllCheckBox.registerKeyHandler(\"downArrow\", downArrowHandler);\r\n        (0, _renderer.default)(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS).text(this._list.option(\"selectAllText\")).appendTo($selectAll);\r\n        this._list.itemsContainer().prepend($selectAll);\r\n        this._updateSelectAllState();\r\n        this._attachSelectAllHandler()\r\n    },\r\n    _attachSelectAllHandler: function() {\r\n        this._selectAllCheckBox.option(\"onValueChanged\", this._selectAllHandler.bind(this));\r\n        _events_engine.default.off(this._$selectAll, CLICK_EVENT_NAME);\r\n        _events_engine.default.on(this._$selectAll, CLICK_EVENT_NAME, this._selectAllClickHandler.bind(this))\r\n    },\r\n    _selectAllHandler: function(e) {\r\n        e.event && e.event.stopPropagation();\r\n        var isSelectedAll = this._selectAllCheckBox.option(\"value\");\r\n        var result = this._list._createActionByOption(\"onSelectAllValueChanged\")({\r\n            value: isSelectedAll\r\n        });\r\n        if (false === result) {\r\n            return\r\n        }\r\n        e.event && this._list._saveSelectionChangeEvent(e.event);\r\n        if (true === isSelectedAll) {\r\n            this._selectAllItems()\r\n        } else {\r\n            if (false === isSelectedAll) {\r\n                this._unselectAllItems()\r\n            }\r\n        }\r\n    },\r\n    _checkSelectAllCapability: function() {\r\n        var list = this._list;\r\n        var dataSource = list.getDataSource();\r\n        if (\"allPages\" === list.option(\"selectAllMode\") && list.option(\"grouped\") && (!dataSource || !dataSource.group())) {\r\n            _ui.default.log(\"W1010\");\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _selectAllItems: function() {\r\n        if (!this._checkSelectAllCapability()) {\r\n            return\r\n        }\r\n        this._list._selection.selectAll(\"page\" === this._list.option(\"selectAllMode\"))\r\n    },\r\n    _unselectAllItems: function() {\r\n        if (!this._checkSelectAllCapability()) {\r\n            return\r\n        }\r\n        this._list._selection.deselectAll(\"page\" === this._list.option(\"selectAllMode\"))\r\n    },\r\n    _selectAllClickHandler: function(e) {\r\n        this._list._saveSelectionChangeEvent(e);\r\n        this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"))\r\n    },\r\n    _isSelected: function($itemElement) {\r\n        return this._list.isItemSelected($itemElement)\r\n    },\r\n    _processCheckedState: function($itemElement, checked) {\r\n        if (checked) {\r\n            this._list.selectItem($itemElement)\r\n        } else {\r\n            this._list.unselectItem($itemElement)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._disposeSelectAll();\r\n        this._list.$element().removeClass(SELECT_DECORATOR_ENABLED_CLASS);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _disposeSelectAll: function() {\r\n        if (this._$selectAll) {\r\n            this._$selectAll.remove();\r\n            this._$selectAll = null\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.static.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\nvar _uiListEdit = require(\"./ui.list.edit.decorator_registry\");\r\nvar _uiListEdit2 = _interopRequireDefault(require(\"./ui.list.edit.decorator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar STATIC_DELETE_BUTTON_CONTAINER_CLASS = \"dx-list-static-delete-button-container\";\r\nvar STATIC_DELETE_BUTTON_CLASS = \"dx-list-static-delete-button\";\r\n(0, _uiListEdit.register)(\"delete\", \"static\", _uiListEdit2.default.inherit({\r\n    afterBag: function(config) {\r\n        var $itemElement = config.$itemElement;\r\n        var $container = config.$container;\r\n        var $button = (0, _renderer.default)(\"<div>\").addClass(STATIC_DELETE_BUTTON_CLASS);\r\n        this._list._createComponent($button, _button.default, {\r\n            icon: \"remove\",\r\n            onClick: function(args) {\r\n                args.event.stopPropagation();\r\n                this._deleteItem($itemElement)\r\n            }.bind(this),\r\n            integrationOptions: {}\r\n        });\r\n        $container.addClass(STATIC_DELETE_BUTTON_CONTAINER_CLASS).append($button)\r\n    },\r\n    _deleteItem: function($itemElement) {\r\n        if ($itemElement.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            return\r\n        }\r\n        this._list.deleteItem($itemElement)\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.swipe.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _uiListEdit = require(\"./ui.list.edit.decorator_registry\");\r\nvar _uiListEdit2 = _interopRequireDefault(require(\"./ui.list.edit.decorator\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}(0, _uiListEdit.register)(\"delete\", \"swipe\", _uiListEdit2.default.inherit({\r\n    _shouldHandleSwipe: true,\r\n    _renderItemPosition: function($itemElement, offset, animate) {\r\n        var deferred = new _deferred.Deferred;\r\n        var itemOffset = offset * this._itemElementWidth;\r\n        if (animate) {\r\n            _fx.default.animate($itemElement, {\r\n                to: {\r\n                    left: itemOffset\r\n                },\r\n                type: \"slide\",\r\n                complete: function() {\r\n                    deferred.resolve($itemElement, offset)\r\n                }\r\n            })\r\n        } else {\r\n            (0, _translator.move)($itemElement, {\r\n                left: itemOffset\r\n            });\r\n            deferred.resolve()\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    _swipeStartHandler: function($itemElement) {\r\n        this._itemElementWidth = $itemElement.width();\r\n        return true\r\n    },\r\n    _swipeUpdateHandler: function($itemElement, args) {\r\n        this._renderItemPosition($itemElement, args.offset);\r\n        return true\r\n    },\r\n    _swipeEndHandler: function($itemElement, args) {\r\n        var offset = args.targetOffset;\r\n        this._renderItemPosition($itemElement, offset, true).done(function($itemElement, offset) {\r\n            if (Math.abs(offset)) {\r\n                this._list.deleteItem($itemElement).fail(function() {\r\n                    this._renderItemPosition($itemElement, 0, true)\r\n                }.bind(this))\r\n            }\r\n        }.bind(this));\r\n        return true\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.switchable.button.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _uiListEdit = require(\"./ui.list.edit.decorator_registry\");\r\nvar _uiListEditDecorator = _interopRequireDefault(require(\"./ui.list.edit.decorator.switchable\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SWITCHABLE_DELETE_BUTTON_CONTAINER_CLASS = \"dx-list-switchable-delete-button-container\";\r\nvar SWITCHABLE_DELETE_BUTTON_WRAPPER_CLASS = \"dx-list-switchable-delete-button-wrapper\";\r\nvar SWITCHABLE_DELETE_BUTTON_INNER_WRAPPER_CLASS = \"dx-list-switchable-delete-button-inner-wrapper\";\r\nvar SWITCHABLE_DELETE_BUTTON_CLASS = \"dx-list-switchable-delete-button\";\r\nvar SWITCHABLE_DELETE_BUTTON_ANIMATION_DURATION = 200;\r\nvar SwitchableButtonEditDecorator = _uiListEditDecorator.default.inherit({\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var $buttonContainer = (0, _renderer.default)(\"<div>\").addClass(SWITCHABLE_DELETE_BUTTON_CONTAINER_CLASS);\r\n        var $buttonWrapper = (0, _renderer.default)(\"<div>\").addClass(SWITCHABLE_DELETE_BUTTON_WRAPPER_CLASS);\r\n        var $buttonInnerWrapper = (0, _renderer.default)(\"<div>\").addClass(SWITCHABLE_DELETE_BUTTON_INNER_WRAPPER_CLASS);\r\n        var $button = (0, _renderer.default)(\"<div>\").addClass(SWITCHABLE_DELETE_BUTTON_CLASS);\r\n        this._list._createComponent($button, _button.default, {\r\n            text: _message.default.format(\"dxListEditDecorator-delete\"),\r\n            type: \"danger\",\r\n            onClick: function(e) {\r\n                this._deleteItem();\r\n                e.event.stopPropagation()\r\n            }.bind(this),\r\n            integrationOptions: {}\r\n        });\r\n        $buttonContainer.append($buttonWrapper);\r\n        $buttonWrapper.append($buttonInnerWrapper);\r\n        $buttonInnerWrapper.append($button);\r\n        this._$buttonContainer = $buttonContainer\r\n    },\r\n    _enablePositioning: function($itemElement) {\r\n        this.callBase.apply(this, arguments);\r\n        _fx.default.stop(this._$buttonContainer, true);\r\n        this._$buttonContainer.appendTo($itemElement)\r\n    },\r\n    _disablePositioning: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._$buttonContainer.detach()\r\n    },\r\n    _animatePrepareDeleteReady: function() {\r\n        var rtl = this._isRtlEnabled();\r\n        var listWidth = this._list.$element().width();\r\n        var buttonWidth = this._buttonWidth();\r\n        var fromValue = rtl ? listWidth : -buttonWidth;\r\n        var toValue = rtl ? listWidth - buttonWidth : 0;\r\n        return _fx.default.animate(this._$buttonContainer, {\r\n            type: \"custom\",\r\n            duration: SWITCHABLE_DELETE_BUTTON_ANIMATION_DURATION,\r\n            from: {\r\n                right: fromValue\r\n            },\r\n            to: {\r\n                right: toValue\r\n            }\r\n        })\r\n    },\r\n    _animateForgetDeleteReady: function() {\r\n        var rtl = this._isRtlEnabled();\r\n        var listWidth = this._list.$element().width();\r\n        var buttonWidth = this._buttonWidth();\r\n        var fromValue = rtl ? listWidth - buttonWidth : 0;\r\n        var toValue = rtl ? listWidth : -buttonWidth;\r\n        return _fx.default.animate(this._$buttonContainer, {\r\n            type: \"custom\",\r\n            duration: SWITCHABLE_DELETE_BUTTON_ANIMATION_DURATION,\r\n            from: {\r\n                right: fromValue\r\n            },\r\n            to: {\r\n                right: toValue\r\n            }\r\n        })\r\n    },\r\n    _buttonWidth: function() {\r\n        if (!this._buttonContainerWidth) {\r\n            this._buttonContainerWidth = this._$buttonContainer.outerWidth()\r\n        }\r\n        return this._buttonContainerWidth\r\n    },\r\n    dispose: function() {\r\n        if (this._$buttonContainer) {\r\n            this._$buttonContainer.remove()\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n});\r\nvar TOGGLE_DELETE_SWITCH_CONTAINER_CLASS = \"dx-list-toggle-delete-switch-container\";\r\nvar TOGGLE_DELETE_SWITCH_CLASS = \"dx-list-toggle-delete-switch\";\r\n(0, _uiListEdit.register)(\"delete\", \"toggle\", SwitchableButtonEditDecorator.inherit({\r\n    beforeBag: function(config) {\r\n        var $itemElement = config.$itemElement;\r\n        var $container = config.$container;\r\n        var $toggle = (0, _renderer.default)(\"<div>\").addClass(TOGGLE_DELETE_SWITCH_CLASS);\r\n        this._list._createComponent($toggle, _button.default, {\r\n            icon: \"toggle-delete\",\r\n            onClick: function(e) {\r\n                _fx.default.stop(this._$buttonContainer, false);\r\n                this._toggleDeleteReady($itemElement);\r\n                e.event.stopPropagation()\r\n            }.bind(this),\r\n            integrationOptions: {}\r\n        });\r\n        $container.addClass(TOGGLE_DELETE_SWITCH_CONTAINER_CLASS);\r\n        $container.append($toggle)\r\n    }\r\n}));\r\n(0, _uiListEdit.register)(\"delete\", \"slideButton\", SwitchableButtonEditDecorator.inherit({\r\n    _shouldHandleSwipe: true,\r\n    _swipeEndHandler: function($itemElement, args) {\r\n        if (0 !== args.targetOffset) {\r\n            _fx.default.stop(this._$buttonContainer, false);\r\n            this._toggleDeleteReady($itemElement)\r\n        }\r\n        return true\r\n    }\r\n}));\r\nvar _default = SwitchableButtonEditDecorator;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.switchable.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _uiListEdit = _interopRequireDefault(require(\"./ui.list.edit.decorator\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _emitter = require(\"../../events/core/emitter.feedback\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar abstract = _uiListEdit.default.abstract;\r\nvar LIST_EDIT_DECORATOR = \"dxListEditDecorator\";\r\nvar POINTER_DOWN_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.down, LIST_EDIT_DECORATOR);\r\nvar ACTIVE_EVENT_NAME = (0, _index.addNamespace)(_emitter.active, LIST_EDIT_DECORATOR);\r\nvar LIST_ITEM_CONTENT_CLASS = \"dx-list-item-content\";\r\nvar SWITCHABLE_DELETE_READY_CLASS = \"dx-list-switchable-delete-ready\";\r\nvar SWITCHABLE_MENU_SHIELD_POSITIONING_CLASS = \"dx-list-switchable-menu-shield-positioning\";\r\nvar SWITCHABLE_DELETE_TOP_SHIELD_CLASS = \"dx-list-switchable-delete-top-shield\";\r\nvar SWITCHABLE_DELETE_BOTTOM_SHIELD_CLASS = \"dx-list-switchable-delete-bottom-shield\";\r\nvar SWITCHABLE_MENU_ITEM_SHIELD_POSITIONING_CLASS = \"dx-list-switchable-menu-item-shield-positioning\";\r\nvar SWITCHABLE_DELETE_ITEM_CONTENT_SHIELD_CLASS = \"dx-list-switchable-delete-item-content-shield\";\r\nvar SWITCHABLE_DELETE_BUTTON_CONTAINER_CLASS = \"dx-list-switchable-delete-button-container\";\r\nvar SwitchableEditDecorator = _uiListEdit.default.inherit({\r\n    _init: function() {\r\n        this._$topShield = (0, _renderer.default)(\"<div>\").addClass(SWITCHABLE_DELETE_TOP_SHIELD_CLASS);\r\n        this._$bottomShield = (0, _renderer.default)(\"<div>\").addClass(SWITCHABLE_DELETE_BOTTOM_SHIELD_CLASS);\r\n        this._$itemContentShield = (0, _renderer.default)(\"<div>\").addClass(SWITCHABLE_DELETE_ITEM_CONTENT_SHIELD_CLASS);\r\n        _events_engine.default.on(this._$topShield, POINTER_DOWN_EVENT_NAME, this._cancelDeleteReadyItem.bind(this));\r\n        _events_engine.default.on(this._$bottomShield, POINTER_DOWN_EVENT_NAME, this._cancelDeleteReadyItem.bind(this));\r\n        this._list.$element().append(this._$topShield.toggle(false)).append(this._$bottomShield.toggle(false))\r\n    },\r\n    handleClick: function() {\r\n        return this._cancelDeleteReadyItem()\r\n    },\r\n    _cancelDeleteReadyItem: function() {\r\n        if (!this._$readyToDeleteItem) {\r\n            return false\r\n        }\r\n        this._cancelDelete(this._$readyToDeleteItem);\r\n        return true\r\n    },\r\n    _cancelDelete: function($itemElement) {\r\n        this._toggleDeleteReady($itemElement, false)\r\n    },\r\n    _toggleDeleteReady: function($itemElement, readyToDelete) {\r\n        if (void 0 === readyToDelete) {\r\n            readyToDelete = !this._isReadyToDelete($itemElement)\r\n        }\r\n        this._toggleShields($itemElement, readyToDelete);\r\n        this._toggleScrolling(readyToDelete);\r\n        this._cacheReadyToDeleteItem($itemElement, readyToDelete);\r\n        this._animateToggleDelete($itemElement, readyToDelete)\r\n    },\r\n    _isReadyToDelete: function($itemElement) {\r\n        return $itemElement.hasClass(SWITCHABLE_DELETE_READY_CLASS)\r\n    },\r\n    _toggleShields: function($itemElement, enabled) {\r\n        this._list.$element().toggleClass(SWITCHABLE_MENU_SHIELD_POSITIONING_CLASS, enabled);\r\n        this._$topShield.toggle(enabled);\r\n        this._$bottomShield.toggle(enabled);\r\n        if (enabled) {\r\n            this._updateShieldsHeight($itemElement)\r\n        }\r\n        this._toggleContentShield($itemElement, enabled)\r\n    },\r\n    _updateShieldsHeight: function($itemElement) {\r\n        var $list = this._list.$element();\r\n        var listTopOffset = $list.offset().top;\r\n        var listHeight = $list.outerHeight();\r\n        var itemTopOffset = $itemElement.offset().top;\r\n        var itemHeight = $itemElement.outerHeight();\r\n        var dirtyTopShieldHeight = itemTopOffset - listTopOffset;\r\n        var dirtyBottomShieldHeight = listHeight - itemHeight - dirtyTopShieldHeight;\r\n        this._$topShield.height(Math.max(dirtyTopShieldHeight, 0));\r\n        this._$bottomShield.height(Math.max(dirtyBottomShieldHeight, 0))\r\n    },\r\n    _toggleContentShield: function($itemElement, enabled) {\r\n        if (enabled) {\r\n            $itemElement.find(\".\" + LIST_ITEM_CONTENT_CLASS).first().append(this._$itemContentShield)\r\n        } else {\r\n            this._$itemContentShield.detach()\r\n        }\r\n    },\r\n    _toggleScrolling: function(readyToDelete) {\r\n        var scrollView = this._list.$element().dxScrollView(\"instance\");\r\n        if (readyToDelete) {\r\n            scrollView.on(\"start\", this._cancelScrolling)\r\n        } else {\r\n            scrollView.off(\"start\", this._cancelScrolling)\r\n        }\r\n    },\r\n    _cancelScrolling: function(args) {\r\n        args.event.cancel = true\r\n    },\r\n    _cacheReadyToDeleteItem: function($itemElement, cache) {\r\n        if (cache) {\r\n            this._$readyToDeleteItem = $itemElement\r\n        } else {\r\n            delete this._$readyToDeleteItem\r\n        }\r\n    },\r\n    _animateToggleDelete: function($itemElement, readyToDelete) {\r\n        if (readyToDelete) {\r\n            this._enablePositioning($itemElement);\r\n            this._prepareDeleteReady($itemElement);\r\n            this._animatePrepareDeleteReady($itemElement);\r\n            _events_engine.default.off($itemElement, _pointer.default.up)\r\n        } else {\r\n            this._forgetDeleteReady($itemElement);\r\n            this._animateForgetDeleteReady($itemElement).done(this._disablePositioning.bind(this, $itemElement))\r\n        }\r\n    },\r\n    _enablePositioning: function($itemElement) {\r\n        $itemElement.addClass(SWITCHABLE_MENU_ITEM_SHIELD_POSITIONING_CLASS);\r\n        _events_engine.default.on($itemElement, ACTIVE_EVENT_NAME, _common.noop);\r\n        _events_engine.default.one($itemElement, _pointer.default.up, this._disablePositioning.bind(this, $itemElement))\r\n    },\r\n    _disablePositioning: function($itemElement) {\r\n        $itemElement.removeClass(SWITCHABLE_MENU_ITEM_SHIELD_POSITIONING_CLASS);\r\n        _events_engine.default.off($itemElement, ACTIVE_EVENT_NAME)\r\n    },\r\n    _prepareDeleteReady: function($itemElement) {\r\n        $itemElement.addClass(SWITCHABLE_DELETE_READY_CLASS)\r\n    },\r\n    _forgetDeleteReady: function($itemElement) {\r\n        $itemElement.removeClass(SWITCHABLE_DELETE_READY_CLASS)\r\n    },\r\n    _animatePrepareDeleteReady: abstract,\r\n    _animateForgetDeleteReady: abstract,\r\n    _getDeleteButtonContainer: function($itemElement) {\r\n        $itemElement = $itemElement || this._$readyToDeleteItem;\r\n        return $itemElement.children(\".\" + SWITCHABLE_DELETE_BUTTON_CONTAINER_CLASS)\r\n    },\r\n    _deleteItem: function($itemElement) {\r\n        $itemElement = $itemElement || this._$readyToDeleteItem;\r\n        this._getDeleteButtonContainer($itemElement).detach();\r\n        if ($itemElement.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            return\r\n        }\r\n        this._list.deleteItem($itemElement).always(this._cancelDelete.bind(this, $itemElement))\r\n    },\r\n    _isRtlEnabled: function() {\r\n        return this._list.option(\"rtlEnabled\")\r\n    },\r\n    dispose: function() {\r\n        if (this._$topShield) {\r\n            this._$topShield.remove()\r\n        }\r\n        if (this._$bottomShield) {\r\n            this._$bottomShield.remove()\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n});\r\nvar _default = SwitchableEditDecorator;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.switchable.slide.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _click = require(\"../../events/click\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _emitter = require(\"../../events/core/emitter.feedback\");\r\nvar _uiListEdit = _interopRequireDefault(require(\"./ui.list.edit.decorator_menu_helper\"));\r\nvar _uiListEdit2 = require(\"./ui.list.edit.decorator_registry\");\r\nvar _uiListEditDecorator = _interopRequireDefault(require(\"./ui.list.edit.decorator.switchable\"));\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _themes = require(\"../themes\");\r\nvar _action_sheet = _interopRequireDefault(require(\"../action_sheet\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar LIST_EDIT_DECORATOR = \"dxListEditDecorator\";\r\nvar CLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, LIST_EDIT_DECORATOR);\r\nvar ACTIVE_EVENT_NAME = (0, _index.addNamespace)(_emitter.active, LIST_EDIT_DECORATOR);\r\nvar SLIDE_MENU_CLASS = \"dx-list-slide-menu\";\r\nvar SLIDE_MENU_WRAPPER_CLASS = \"dx-list-slide-menu-wrapper\";\r\nvar SLIDE_MENU_CONTENT_CLASS = \"dx-list-slide-menu-content\";\r\nvar SLIDE_MENU_BUTTONS_CONTAINER_CLASS = \"dx-list-slide-menu-buttons-container\";\r\nvar SLIDE_MENU_BUTTONS_CLASS = \"dx-list-slide-menu-buttons\";\r\nvar SLIDE_MENU_BUTTON_CLASS = \"dx-list-slide-menu-button\";\r\nvar SLIDE_MENU_BUTTON_MENU_CLASS = \"dx-list-slide-menu-button-menu\";\r\nvar SLIDE_MENU_BUTTON_DELETE_CLASS = \"dx-list-slide-menu-button-delete\";\r\nvar SLIDE_MENU_ANIMATION_DURATION = 400;\r\nvar SLIDE_MENU_ANIMATION_EASING = \"cubic-bezier(0.075, 0.82, 0.165, 1)\";\r\n(0, _uiListEdit2.register)(\"menu\", \"slide\", _uiListEditDecorator.default.inherit({\r\n    _shouldHandleSwipe: true,\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._$buttonsContainer = (0, _renderer.default)(\"<div>\").addClass(SLIDE_MENU_BUTTONS_CONTAINER_CLASS);\r\n        _events_engine.default.on(this._$buttonsContainer, ACTIVE_EVENT_NAME, _common.noop);\r\n        this._$buttons = (0, _renderer.default)(\"<div>\").addClass(SLIDE_MENU_BUTTONS_CLASS).appendTo(this._$buttonsContainer);\r\n        this._renderMenu();\r\n        this._renderDeleteButton()\r\n    },\r\n    _renderMenu: function() {\r\n        if (!this._menuEnabled()) {\r\n            return\r\n        }\r\n        var menuItems = this._menuItems();\r\n        if (1 === menuItems.length) {\r\n            var menuItem = menuItems[0];\r\n            this._renderMenuButton(menuItem.text, function(e) {\r\n                e.stopPropagation();\r\n                this._fireAction(menuItem)\r\n            }.bind(this))\r\n        } else {\r\n            var $menu = (0, _renderer.default)(\"<div>\").addClass(SLIDE_MENU_CLASS);\r\n            this._menu = this._list._createComponent($menu, _action_sheet.default, {\r\n                showTitle: false,\r\n                items: menuItems,\r\n                onItemClick: function(args) {\r\n                    this._fireAction(args.itemData)\r\n                }.bind(this),\r\n                integrationOptions: {}\r\n            });\r\n            $menu.appendTo(this._list.$element());\r\n            var $menuButton = this._renderMenuButton(_message.default.format(\"dxListEditDecorator-more\"), function(e) {\r\n                e.stopPropagation();\r\n                this._menu.show()\r\n            }.bind(this));\r\n            this._menu.option(\"target\", $menuButton)\r\n        }\r\n    },\r\n    _renderMenuButton: function(text, action) {\r\n        var $menuButton = (0, _renderer.default)(\"<div>\").addClass(SLIDE_MENU_BUTTON_CLASS).addClass(SLIDE_MENU_BUTTON_MENU_CLASS).text(text);\r\n        this._$buttons.append($menuButton);\r\n        _events_engine.default.on($menuButton, CLICK_EVENT_NAME, action);\r\n        return $menuButton\r\n    },\r\n    _renderDeleteButton: function() {\r\n        if (!this._deleteEnabled()) {\r\n            return\r\n        }\r\n        var $deleteButton = (0, _renderer.default)(\"<div>\").addClass(SLIDE_MENU_BUTTON_CLASS).addClass(SLIDE_MENU_BUTTON_DELETE_CLASS).text((0, _themes.isMaterial)() ? \"\" : _message.default.format(\"dxListEditDecorator-delete\"));\r\n        _events_engine.default.on($deleteButton, CLICK_EVENT_NAME, function(e) {\r\n            e.stopPropagation();\r\n            this._deleteItem()\r\n        }.bind(this));\r\n        this._$buttons.append($deleteButton)\r\n    },\r\n    _fireAction: function(menuItem) {\r\n        this._fireMenuAction((0, _renderer.default)(this._cachedNode), menuItem.action);\r\n        this._cancelDeleteReadyItem()\r\n    },\r\n    modifyElement: function(config) {\r\n        this.callBase.apply(this, arguments);\r\n        var $itemElement = config.$itemElement;\r\n        $itemElement.addClass(SLIDE_MENU_WRAPPER_CLASS);\r\n        var $slideMenuContent = (0, _renderer.default)(\"<div>\").addClass(SLIDE_MENU_CONTENT_CLASS);\r\n        $itemElement.wrapInner($slideMenuContent)\r\n    },\r\n    _getDeleteButtonContainer: function() {\r\n        return this._$buttonsContainer\r\n    },\r\n    handleClick: function(_, e) {\r\n        if ((0, _renderer.default)(e.target).closest(\".\" + SLIDE_MENU_CONTENT_CLASS).length) {\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n        return false\r\n    },\r\n    _swipeStartHandler: function($itemElement) {\r\n        this._enablePositioning($itemElement);\r\n        this._cacheItemData($itemElement);\r\n        this._setPositions(this._getPositions(0))\r\n    },\r\n    _swipeUpdateHandler: function($itemElement, args) {\r\n        var rtl = this._isRtlEnabled();\r\n        var signCorrection = rtl ? -1 : 1;\r\n        var isItemReadyToDelete = this._isReadyToDelete($itemElement);\r\n        var moveJustStarted = this._getCurrentPositions().content === this._getStartPositions().content;\r\n        if (moveJustStarted && !isItemReadyToDelete && args.offset * signCorrection > 0) {\r\n            args.cancel = true;\r\n            return\r\n        }\r\n        var offset = this._cachedItemWidth * args.offset;\r\n        var startOffset = isItemReadyToDelete ? -this._cachedButtonWidth * signCorrection : 0;\r\n        var correctedOffset = (offset + startOffset) * signCorrection;\r\n        var percent = correctedOffset < 0 ? Math.abs((offset + startOffset) / this._cachedButtonWidth) : 0;\r\n        this._setPositions(this._getPositions(percent));\r\n        return true\r\n    },\r\n    _getStartPositions: function() {\r\n        var rtl = this._isRtlEnabled();\r\n        var signCorrection = rtl ? -1 : 1;\r\n        return {\r\n            content: 0,\r\n            buttonsContainer: rtl ? -this._cachedButtonWidth : this._cachedItemWidth,\r\n            buttons: -this._cachedButtonWidth * signCorrection\r\n        }\r\n    },\r\n    _getPositions: function(percent) {\r\n        var rtl = this._isRtlEnabled();\r\n        var signCorrection = rtl ? -1 : 1;\r\n        var startPositions = this._getStartPositions();\r\n        return {\r\n            content: startPositions.content - percent * this._cachedButtonWidth * signCorrection,\r\n            buttonsContainer: startPositions.buttonsContainer - Math.min(percent, 1) * this._cachedButtonWidth * signCorrection,\r\n            buttons: startPositions.buttons + Math.min(percent, 1) * this._cachedButtonWidth * signCorrection\r\n        }\r\n    },\r\n    _getCurrentPositions: function() {\r\n        return {\r\n            content: (0, _translator.locate)(this._$cachedContent).left,\r\n            buttonsContainer: (0, _translator.locate)(this._$buttonsContainer).left,\r\n            buttons: (0, _translator.locate)(this._$buttons).left\r\n        }\r\n    },\r\n    _setPositions: function(positions) {\r\n        (0, _translator.move)(this._$cachedContent, {\r\n            left: positions.content\r\n        });\r\n        (0, _translator.move)(this._$buttonsContainer, {\r\n            left: positions.buttonsContainer\r\n        });\r\n        (0, _translator.move)(this._$buttons, {\r\n            left: positions.buttons\r\n        })\r\n    },\r\n    _cacheItemData: function($itemElement) {\r\n        if ($itemElement[0] === this._cachedNode) {\r\n            return\r\n        }\r\n        this._$cachedContent = $itemElement.find(\".\" + SLIDE_MENU_CONTENT_CLASS);\r\n        this._cachedItemWidth = $itemElement.outerWidth();\r\n        this._cachedButtonWidth = this._cachedButtonWidth || this._$buttons.outerWidth();\r\n        this._$buttonsContainer.width(this._cachedButtonWidth);\r\n        if (this._$cachedContent.length) {\r\n            this._cachedNode = $itemElement[0]\r\n        }\r\n    },\r\n    _minButtonContainerLeftOffset: function() {\r\n        return this._cachedItemWidth - this._cachedButtonWidth\r\n    },\r\n    _swipeEndHandler: function($itemElement, args) {\r\n        this._cacheItemData($itemElement);\r\n        var signCorrection = this._isRtlEnabled() ? 1 : -1;\r\n        var offset = this._cachedItemWidth * args.offset;\r\n        var endedAtReadyToDelete = !this._isReadyToDelete($itemElement) && offset * signCorrection > .2 * this._cachedButtonWidth;\r\n        var readyToDelete = args.targetOffset === signCorrection && endedAtReadyToDelete;\r\n        this._toggleDeleteReady($itemElement, readyToDelete);\r\n        return true\r\n    },\r\n    _enablePositioning: function($itemElement) {\r\n        _fx.default.stop(this._$cachedContent, true);\r\n        this.callBase.apply(this, arguments);\r\n        this._$buttonsContainer.appendTo($itemElement)\r\n    },\r\n    _disablePositioning: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._$buttonsContainer.detach()\r\n    },\r\n    _animatePrepareDeleteReady: function() {\r\n        return this._animateToPositions(this._getPositions(1))\r\n    },\r\n    _animateForgetDeleteReady: function($itemElement) {\r\n        this._cacheItemData($itemElement);\r\n        return this._animateToPositions(this._getPositions(0))\r\n    },\r\n    _animateToPositions: function(positions) {\r\n        var that = this;\r\n        var currentPosition = this._getCurrentPositions();\r\n        var durationTimePart = Math.min(Math.abs(currentPosition.content - positions.content) / this._cachedButtonWidth, 1);\r\n        return _fx.default.animate(this._$cachedContent, {\r\n            from: currentPosition,\r\n            to: positions,\r\n            easing: SLIDE_MENU_ANIMATION_EASING,\r\n            duration: SLIDE_MENU_ANIMATION_DURATION * durationTimePart,\r\n            strategy: \"frame\",\r\n            draw: function(positions) {\r\n                that._setPositions(positions)\r\n            }\r\n        })\r\n    },\r\n    dispose: function() {\r\n        if (this._menu) {\r\n            this._menu.$element().remove()\r\n        }\r\n        if (this._$buttonsContainer) {\r\n            this._$buttonsContainer.remove()\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n}).include(_uiListEdit.default));\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator_menu_helper.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar EditDecoratorMenuHelperMixin = {\r\n    _menuEnabled: function() {\r\n        return !!this._menuItems().length\r\n    },\r\n    _menuItems: function() {\r\n        return this._list.option(\"menuItems\")\r\n    },\r\n    _deleteEnabled: function() {\r\n        return this._list.option(\"allowItemDeleting\")\r\n    },\r\n    _fireMenuAction: function($itemElement, action) {\r\n        this._list._itemEventHandlerByHandler($itemElement, action, {}, {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    }\r\n};\r\nvar _default = EditDecoratorMenuHelperMixin;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator_registry.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.register = register;\r\nexports.registry = void 0;\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar registry = {};\r\nexports.registry = registry;\r\n\r\nfunction register(option, type, decoratorClass) {\r\n    var decoratorsRegistry = registry;\r\n    var decoratorConfig = {};\r\n    decoratorConfig[option] = decoratorsRegistry[option] ? decoratorsRegistry[option] : {};\r\n    decoratorConfig[option][type] = decoratorClass;\r\n    decoratorsRegistry = (0, _extend.extend)(decoratorsRegistry, decoratorConfig)\r\n}\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiListEditStrategy = _interopRequireDefault(require(\"./ui.list.edit.strategy.grouped\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _uiListEdit = _interopRequireDefault(require(\"./ui.list.edit.provider\"));\r\nvar _uiList = require(\"./ui.list.base\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar LIST_ITEM_SELECTED_CLASS = \"dx-list-item-selected\";\r\nvar LIST_ITEM_RESPONSE_WAIT_CLASS = \"dx-list-item-response-wait\";\r\nvar ListEdit = _uiList.ListBase.inherit({\r\n    _supportedKeys: function() {\r\n        var _this = this;\r\n        var that = this;\r\n        var parent = this.callBase();\r\n        var deleteFocusedItem = function(e) {\r\n            if (that.option(\"allowItemDeleting\")) {\r\n                e.preventDefault();\r\n                that.deleteItem(that.option(\"focusedElement\"))\r\n            }\r\n        };\r\n        var moveFocusedItem = function(e, moveUp) {\r\n            var editStrategy = _this._editStrategy;\r\n            var focusedElement = _this.option(\"focusedElement\");\r\n            var focusedItemIndex = editStrategy.getNormalizedIndex(focusedElement);\r\n            var isLastIndexFocused = focusedItemIndex === _this._getLastItemIndex();\r\n            if (isLastIndexFocused && _this._isDataSourceLoading()) {\r\n                return\r\n            }\r\n            if (e.shiftKey && that.option(\"itemDragging.allowReordering\")) {\r\n                var nextItemIndex = focusedItemIndex + (moveUp ? -1 : 1);\r\n                var $nextItem = editStrategy.getItemElement(nextItemIndex);\r\n                _this.reorderItem(focusedElement, $nextItem);\r\n                _this.scrollToItem(focusedElement);\r\n                e.preventDefault()\r\n            } else {\r\n                var editProvider = _this._editProvider;\r\n                var isInternalMoving = editProvider.handleKeyboardEvents(focusedItemIndex, moveUp);\r\n                if (!isInternalMoving) {\r\n                    moveUp ? parent.upArrow(e) : parent.downArrow(e)\r\n                }\r\n            }\r\n        };\r\n        var enter = function(e) {\r\n            if (!this._editProvider.handleEnterPressing(e)) {\r\n                parent.enter.apply(this, arguments)\r\n            }\r\n        };\r\n        var space = function(e) {\r\n            if (!this._editProvider.handleEnterPressing(e)) {\r\n                parent.space.apply(this, arguments)\r\n            }\r\n        };\r\n        return (0, _extend.extend)({}, parent, {\r\n            del: deleteFocusedItem,\r\n            upArrow: function(e) {\r\n                return moveFocusedItem(e, true)\r\n            },\r\n            downArrow: function(e) {\r\n                return moveFocusedItem(e)\r\n            },\r\n            enter: enter,\r\n            space: space\r\n        })\r\n    },\r\n    _updateSelection: function() {\r\n        this._editProvider.afterItemsRendered();\r\n        this.callBase()\r\n    },\r\n    _getLastItemIndex: function() {\r\n        return this._itemElements().length - 1\r\n    },\r\n    _refreshItemElements: function() {\r\n        this.callBase();\r\n        var excludedSelectors = this._editProvider.getExcludedItemSelectors();\r\n        if (excludedSelectors.length) {\r\n            this._itemElementsCache = this._itemElementsCache.not(excludedSelectors)\r\n        }\r\n    },\r\n    _isItemStrictEquals: function(item1, item2) {\r\n        var privateKey = item1 && item1.__dx_key__;\r\n        if (privateKey && !this.key() && this._selection.isItemSelected(privateKey)) {\r\n            return false\r\n        }\r\n        return this.callBase(item1, item2)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            showSelectionControls: false,\r\n            selectionMode: \"none\",\r\n            selectAllMode: \"page\",\r\n            onSelectAllValueChanged: null,\r\n            selectAllText: _message.default.format(\"dxList-selectAll\"),\r\n            menuItems: [],\r\n            menuMode: \"context\",\r\n            allowItemDeleting: false,\r\n            itemDeleteMode: \"static\",\r\n            itemDragging: {}\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"ios\" === _device.platform\r\n            },\r\n            options: {\r\n                menuMode: \"slide\",\r\n                itemDeleteMode: \"slideItem\"\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                itemDeleteMode: \"swipe\"\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initEditProvider()\r\n    },\r\n    _initDataSource: function() {\r\n        this.callBase();\r\n        if (!this._isPageSelectAll()) {\r\n            this._dataSource && this._dataSource.requireTotalCount(true)\r\n        }\r\n    },\r\n    _isPageSelectAll: function() {\r\n        return \"page\" === this.option(\"selectAllMode\")\r\n    },\r\n    _initEditProvider: function() {\r\n        this._editProvider = new _uiListEdit.default(this)\r\n    },\r\n    _disposeEditProvider: function() {\r\n        if (this._editProvider) {\r\n            this._editProvider.dispose()\r\n        }\r\n    },\r\n    _refreshEditProvider: function() {\r\n        this._disposeEditProvider();\r\n        this._initEditProvider()\r\n    },\r\n    _initEditStrategy: function() {\r\n        if (this.option(\"grouped\")) {\r\n            this._editStrategy = new _uiListEditStrategy.default(this)\r\n        } else {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this._refreshEditProvider();\r\n        this.callBase()\r\n    },\r\n    _renderItems: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._editProvider.afterItemsRendered()\r\n    },\r\n    _selectedItemClass: function() {\r\n        return LIST_ITEM_SELECTED_CLASS\r\n    },\r\n    _itemResponseWaitClass: function() {\r\n        return LIST_ITEM_RESPONSE_WAIT_CLASS\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        var $itemElement = (0, _renderer.default)(e.currentTarget);\r\n        if ($itemElement.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            return\r\n        }\r\n        var handledByEditProvider = this._editProvider.handleClick($itemElement, e);\r\n        if (handledByEditProvider) {\r\n            return\r\n        }\r\n        this._saveSelectionChangeEvent(e);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _shouldFireContextMenuEvent: function() {\r\n        return this.callBase.apply(this, arguments) || this._editProvider.contextMenuHandlerExists()\r\n    },\r\n    _itemHoldHandler: function(e) {\r\n        var $itemElement = (0, _renderer.default)(e.currentTarget);\r\n        if ($itemElement.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            return\r\n        }\r\n        var handledByEditProvider = (0, _index.isTouchEvent)(e) && this._editProvider.handleContextMenu($itemElement, e);\r\n        if (handledByEditProvider) {\r\n            e.handledByEditProvider = true;\r\n            return\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _getItemContainer: function(changeData) {\r\n        if (this.option(\"grouped\")) {\r\n            var _this$_editStrategy$g;\r\n            var groupIndex = null === (_this$_editStrategy$g = this._editStrategy.getIndexByItemData(changeData)) || void 0 === _this$_editStrategy$g ? void 0 : _this$_editStrategy$g.group;\r\n            return this._getGroupContainerByIndex(groupIndex)\r\n        } else {\r\n            return this.callBase(changeData)\r\n        }\r\n    },\r\n    _itemContextMenuHandler: function(e) {\r\n        var $itemElement = (0, _renderer.default)(e.currentTarget);\r\n        if ($itemElement.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            return\r\n        }\r\n        var handledByEditProvider = !e.handledByEditProvider && this._editProvider.handleContextMenu($itemElement, e);\r\n        if (handledByEditProvider) {\r\n            e.preventDefault();\r\n            return\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        this.callBase.apply(this, arguments);\r\n        this._editProvider.modifyItemElement(args)\r\n    },\r\n    _clean: function() {\r\n        this._disposeEditProvider();\r\n        this.callBase()\r\n    },\r\n    focusListItem: function(index) {\r\n        var $item = this._editStrategy.getItemElement(index);\r\n        this.option(\"focusedElement\", $item);\r\n        this.focus();\r\n        this.scrollToItem(this.option(\"focusedElement\"))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"selectAllMode\":\r\n                this._initDataSource();\r\n                this._dataSource.pageIndex(0);\r\n                this._dataSource.load();\r\n                break;\r\n            case \"grouped\":\r\n                this._clearSelectedItems();\r\n                delete this._renderingGroupIndex;\r\n                this._initEditStrategy();\r\n                this.callBase(args);\r\n                break;\r\n            case \"showSelectionControls\":\r\n            case \"menuItems\":\r\n            case \"menuMode\":\r\n            case \"allowItemDeleting\":\r\n            case \"itemDeleteMode\":\r\n            case \"itemDragging\":\r\n            case \"selectAllText\":\r\n                this._invalidate();\r\n                break;\r\n            case \"onSelectAllValueChanged\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    selectAll: function() {\r\n        return this._selection.selectAll(this._isPageSelectAll())\r\n    },\r\n    unselectAll: function() {\r\n        return this._selection.deselectAll(this._isPageSelectAll())\r\n    },\r\n    isSelectAll: function() {\r\n        return this._selection.getSelectAllState(this._isPageSelectAll())\r\n    },\r\n    getFlatIndexByItemElement: function(itemElement) {\r\n        return this._itemElements().index(itemElement)\r\n    },\r\n    getItemElementByFlatIndex: function(flatIndex) {\r\n        var $itemElements = this._itemElements();\r\n        if (flatIndex < 0 || flatIndex >= $itemElements.length) {\r\n            return (0, _renderer.default)()\r\n        }\r\n        return $itemElements.eq(flatIndex)\r\n    },\r\n    getItemByIndex: function(index) {\r\n        return this._editStrategy.getItemDataByIndex(index)\r\n    }\r\n});\r\nvar _default = ListEdit;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.provider.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _uiListEdit = require(\"./ui.list.edit.decorator_registry\");\r\nrequire(\"./ui.list.edit.decorator.static\");\r\nrequire(\"./ui.list.edit.decorator.switchable.button\");\r\nrequire(\"./ui.list.edit.decorator.switchable.slide\");\r\nrequire(\"./ui.list.edit.decorator.swipe\");\r\nrequire(\"./ui.list.edit.decorator.context\");\r\nrequire(\"./ui.list.edit.decorator.selection\");\r\nrequire(\"./ui.list.edit.decorator.reorder\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar editOptionsRegistry = [];\r\nvar registerOption = function(enabledFunc, decoratorTypeFunc, decoratorSubTypeFunc) {\r\n    editOptionsRegistry.push({\r\n        enabled: enabledFunc,\r\n        decoratorType: decoratorTypeFunc,\r\n        decoratorSubType: decoratorSubTypeFunc\r\n    })\r\n};\r\nregisterOption(function() {\r\n    return this.option(\"menuItems\").length\r\n}, function() {\r\n    return \"menu\"\r\n}, function() {\r\n    return this.option(\"menuMode\")\r\n});\r\nregisterOption(function() {\r\n    return !this.option(\"menuItems\").length && this.option(\"allowItemDeleting\")\r\n}, function() {\r\n    var mode = this.option(\"itemDeleteMode\");\r\n    return \"toggle\" === mode || \"slideButton\" === mode || \"swipe\" === mode || \"static\" === mode ? \"delete\" : \"menu\"\r\n}, function() {\r\n    var mode = this.option(\"itemDeleteMode\");\r\n    if (\"slideItem\" === mode) {\r\n        mode = \"slide\"\r\n    }\r\n    if (\"hold\" === mode) {\r\n        mode = \"context\"\r\n    }\r\n    return mode\r\n});\r\nregisterOption(function() {\r\n    return \"none\" !== this.option(\"selectionMode\") && this.option(\"showSelectionControls\")\r\n}, function() {\r\n    return \"selection\"\r\n}, function() {\r\n    return \"default\"\r\n});\r\nregisterOption(function() {\r\n    return this.option(\"itemDragging.allowReordering\") || this.option(\"itemDragging.allowDropInsideItem\") || this.option(\"itemDragging.group\")\r\n}, function() {\r\n    return \"reorder\"\r\n}, function() {\r\n    return \"default\"\r\n});\r\nvar LIST_ITEM_BEFORE_BAG_CLASS = \"dx-list-item-before-bag\";\r\nvar LIST_ITEM_AFTER_BAG_CLASS = \"dx-list-item-after-bag\";\r\nvar DECORATOR_BEFORE_BAG_CREATE_METHOD = \"beforeBag\";\r\nvar DECORATOR_AFTER_BAG_CREATE_METHOD = \"afterBag\";\r\nvar DECORATOR_MODIFY_ELEMENT_METHOD = \"modifyElement\";\r\nvar DECORATOR_AFTER_RENDER_METHOD = \"afterRender\";\r\nvar DECORATOR_GET_EXCLUDED_SELECTORS_METHOD = \"getExcludedSelectors\";\r\nvar EditProvider = _class.default.inherit({\r\n    ctor: function(list) {\r\n        this._list = list;\r\n        this._fetchRequiredDecorators()\r\n    },\r\n    dispose: function() {\r\n        if (this._decorators && this._decorators.length) {\r\n            (0, _iterator.each)(this._decorators, function(_, decorator) {\r\n                decorator.dispose()\r\n            })\r\n        }\r\n    },\r\n    _fetchRequiredDecorators: function() {\r\n        this._decorators = [];\r\n        (0, _iterator.each)(editOptionsRegistry, function(_, option) {\r\n            var optionEnabled = option.enabled.call(this._list);\r\n            if (optionEnabled) {\r\n                var decoratorType = option.decoratorType.call(this._list);\r\n                var decoratorSubType = option.decoratorSubType.call(this._list);\r\n                var decorator = this._createDecorator(decoratorType, decoratorSubType);\r\n                this._decorators.push(decorator)\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _createDecorator: function(type, subType) {\r\n        var decoratorClass = this._findDecorator(type, subType);\r\n        return new decoratorClass(this._list)\r\n    },\r\n    _findDecorator: function(type, subType) {\r\n        var foundDecorator = _uiListEdit.registry[type][subType];\r\n        if (!foundDecorator) {\r\n            throw _ui.default.Error(\"E1012\", type, subType)\r\n        }\r\n        return foundDecorator\r\n    },\r\n    modifyItemElement: function(args) {\r\n        var $itemElement = (0, _renderer.default)(args.itemElement);\r\n        var config = {\r\n            $itemElement: $itemElement\r\n        };\r\n        this._prependBeforeBags($itemElement, config);\r\n        this._appendAfterBags($itemElement, config);\r\n        this._applyDecorators(DECORATOR_MODIFY_ELEMENT_METHOD, config)\r\n    },\r\n    afterItemsRendered: function() {\r\n        this._applyDecorators(DECORATOR_AFTER_RENDER_METHOD)\r\n    },\r\n    _prependBeforeBags: function($itemElement, config) {\r\n        var $beforeBags = this._collectDecoratorsMarkup(DECORATOR_BEFORE_BAG_CREATE_METHOD, config, LIST_ITEM_BEFORE_BAG_CLASS);\r\n        $itemElement.prepend($beforeBags)\r\n    },\r\n    _appendAfterBags: function($itemElement, config) {\r\n        var $afterBags = this._collectDecoratorsMarkup(DECORATOR_AFTER_BAG_CREATE_METHOD, config, LIST_ITEM_AFTER_BAG_CLASS);\r\n        $itemElement.append($afterBags)\r\n    },\r\n    _collectDecoratorsMarkup: function(method, config, containerClass) {\r\n        var $collector = (0, _renderer.default)(\"<div>\");\r\n        (0, _iterator.each)(this._decorators, function() {\r\n            var $container = (0, _renderer.default)(\"<div>\").addClass(containerClass);\r\n            this[method]((0, _extend.extend)({\r\n                $container: $container\r\n            }, config));\r\n            if ($container.children().length) {\r\n                $collector.append($container)\r\n            }\r\n        });\r\n        return $collector.children()\r\n    },\r\n    _applyDecorators: function(method, config) {\r\n        (0, _iterator.each)(this._decorators, function() {\r\n            this[method](config)\r\n        })\r\n    },\r\n    _handlerExists: function(name) {\r\n        if (!this._decorators) {\r\n            return false\r\n        }\r\n        var decorators = this._decorators;\r\n        var length = decorators.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (decorators[i][name] !== _common.noop) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _eventHandler: function(name, $itemElement, e) {\r\n        if (!this._decorators) {\r\n            return false\r\n        }\r\n        var response = false;\r\n        var decorators = this._decorators;\r\n        var length = decorators.length;\r\n        for (var i = 0; i < length; i++) {\r\n            response = decorators[i][name]($itemElement, e);\r\n            if (response) {\r\n                break\r\n            }\r\n        }\r\n        return response\r\n    },\r\n    handleClick: function($itemElement, e) {\r\n        return this._eventHandler(\"handleClick\", $itemElement, e)\r\n    },\r\n    handleKeyboardEvents: function(currentFocusedIndex, moveFocusUp) {\r\n        return this._eventHandler(\"handleKeyboardEvents\", currentFocusedIndex, moveFocusUp)\r\n    },\r\n    handleEnterPressing: function(e) {\r\n        return this._eventHandler(\"handleEnterPressing\", e)\r\n    },\r\n    contextMenuHandlerExists: function() {\r\n        return this._handlerExists(\"handleContextMenu\")\r\n    },\r\n    handleContextMenu: function($itemElement, e) {\r\n        return this._eventHandler(\"handleContextMenu\", $itemElement, e)\r\n    },\r\n    getExcludedItemSelectors: function() {\r\n        var excludedSelectors = [];\r\n        this._applyDecorators(DECORATOR_GET_EXCLUDED_SELECTORS_METHOD, excludedSelectors);\r\n        return excludedSelectors.join(\",\")\r\n    }\r\n});\r\nvar _default = EditProvider;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.search.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiList = _interopRequireDefault(require(\"./ui.list.edit\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.search_box_mixin\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ListSearch = _uiList.default.inherit(_ui.default).inherit({\r\n    _addWidgetPrefix: function(className) {\r\n        return \"dx-list-\" + className\r\n    },\r\n    _getCombinedFilter: function() {\r\n        var filter;\r\n        var storeLoadOptions;\r\n        var dataSource = this._dataSource;\r\n        if (dataSource) {\r\n            storeLoadOptions = {\r\n                filter: dataSource.filter()\r\n            };\r\n            dataSource._addSearchFilter(storeLoadOptions);\r\n            filter = storeLoadOptions.filter\r\n        }\r\n        return filter\r\n    },\r\n    _initDataSource: function() {\r\n        var value = this.option(\"searchValue\");\r\n        var expr = this.option(\"searchExpr\");\r\n        var mode = this.option(\"searchMode\");\r\n        this.callBase();\r\n        if (this._dataSource) {\r\n            value && value.length && this._dataSource.searchValue(value);\r\n            mode.length && this._dataSource.searchOperation(_ui.default.getOperationBySearchMode(mode));\r\n            expr && this._dataSource.searchExpr(expr)\r\n        }\r\n    }\r\n});\r\nvar _default = ListSearch;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/list/ui.list.edit.strategy.grouped.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _store_helper = _interopRequireDefault(require(\"../../data/store_helper\"));\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\nvar _uiCollection_widgetEditStrategy = _interopRequireDefault(require(\"../collection/ui.collection_widget.edit.strategy.plain\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar LIST_ITEM_CLASS = \"dx-list-item\";\r\nvar LIST_GROUP_CLASS = \"dx-list-group\";\r\nvar SELECTION_SHIFT = 20;\r\nvar SELECTION_MASK = (1 << SELECTION_SHIFT) - 1;\r\nvar combineIndex = function(indices) {\r\n    return (indices.group << SELECTION_SHIFT) + indices.item\r\n};\r\nvar splitIndex = function(combinedIndex) {\r\n    return {\r\n        group: combinedIndex >> SELECTION_SHIFT,\r\n        item: combinedIndex & SELECTION_MASK\r\n    }\r\n};\r\nvar GroupedEditStrategy = _uiCollection_widgetEditStrategy.default.inherit({\r\n    _groupElements: function() {\r\n        return this._collectionWidget._itemContainer().find(\".\" + LIST_GROUP_CLASS)\r\n    },\r\n    _groupItemElements: function($group) {\r\n        return $group.find(\".\" + LIST_ITEM_CLASS)\r\n    },\r\n    getIndexByItemData: function(itemData) {\r\n        var groups = this._collectionWidget.option(\"items\");\r\n        var index = false;\r\n        if (!itemData) {\r\n            return false\r\n        }\r\n        if (itemData.items && itemData.items.length) {\r\n            itemData = itemData.items[0]\r\n        }(0, _iterator.each)(groups, function(groupIndex, group) {\r\n            if (!group.items) {\r\n                return false\r\n            }(0, _iterator.each)(group.items, function(itemIndex, item) {\r\n                if (item !== itemData) {\r\n                    return true\r\n                }\r\n                index = {\r\n                    group: groupIndex,\r\n                    item: itemIndex\r\n                };\r\n                return false\r\n            });\r\n            if (index) {\r\n                return false\r\n            }\r\n        });\r\n        return index\r\n    },\r\n    getItemDataByIndex: function(index) {\r\n        var items = this._collectionWidget.option(\"items\");\r\n        if ((0, _type.isNumeric)(index)) {\r\n            return this.itemsGetter()[index]\r\n        }\r\n        return index && items[index.group] && items[index.group].items[index.item] || null\r\n    },\r\n    itemsGetter: function() {\r\n        var resultItems = [];\r\n        var items = this._collectionWidget.option(\"items\");\r\n        for (var i = 0; i < items.length; i++) {\r\n            if (items[i] && items[i].items) {\r\n                resultItems = resultItems.concat(items[i].items)\r\n            } else {\r\n                resultItems.push(items[i])\r\n            }\r\n        }\r\n        return resultItems\r\n    },\r\n    deleteItemAtIndex: function(index) {\r\n        var indices = splitIndex(index);\r\n        var itemGroup = this._collectionWidget.option(\"items\")[indices.group].items;\r\n        itemGroup.splice(indices.item, 1)\r\n    },\r\n    getKeysByItems: function(items) {\r\n        var plainItems = [];\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            if (items[i] && items[i].items) {\r\n                plainItems = plainItems.concat(items[i].items)\r\n            } else {\r\n                plainItems.push(items[i])\r\n            }\r\n        }\r\n        var result = [];\r\n        for (i = 0; i < plainItems.length; i++) {\r\n            result.push(this._collectionWidget.keyOf(plainItems[i]))\r\n        }\r\n        return result\r\n    },\r\n    getIndexByKey: function(key, items) {\r\n        var groups = items || this._collectionWidget.option(\"items\");\r\n        var index = -1;\r\n        var that = this;\r\n        (0, _iterator.each)(groups, function(groupIndex, group) {\r\n            if (!group.items) {\r\n                return\r\n            }\r\n            var keys = that.getKeysByItems(group.items);\r\n            (0, _iterator.each)(keys, function(keyIndex, itemKey) {\r\n                if (that._equalKeys(itemKey, key)) {\r\n                    index = {\r\n                        group: groupIndex,\r\n                        item: keyIndex\r\n                    };\r\n                    return false\r\n                }\r\n            });\r\n            if (index !== -1) {\r\n                return false\r\n            }\r\n        });\r\n        return index\r\n    },\r\n    _getGroups: function(items) {\r\n        var dataSource = this._collectionWidget.getDataSource();\r\n        var group = dataSource && dataSource.group();\r\n        if (group) {\r\n            return _store_helper.default.queryByOptions((0, _query.default)(items), {\r\n                group: group\r\n            }).toArray()\r\n        }\r\n        return this._collectionWidget.option(\"items\")\r\n    },\r\n    getItemsByKeys: function(keys, items) {\r\n        var result = [];\r\n        (0, _iterator.each)(keys, function(_, key) {\r\n            var getItemMeta = function(groups) {\r\n                var index = this.getIndexByKey(key, groups);\r\n                var group = index && groups[index.group];\r\n                if (!group) {\r\n                    return\r\n                }\r\n                return {\r\n                    groupKey: group.key,\r\n                    item: group.items[index.item]\r\n                }\r\n            }.bind(this);\r\n            var itemMeta = getItemMeta(this._getGroups(items));\r\n            if (!itemMeta) {\r\n                return\r\n            }\r\n            var groupKey = itemMeta.groupKey;\r\n            var item = itemMeta.item;\r\n            var selectedGroup;\r\n            (0, _iterator.each)(result, function(_, item) {\r\n                if (item.key === groupKey) {\r\n                    selectedGroup = item;\r\n                    return false\r\n                }\r\n            });\r\n            if (!selectedGroup) {\r\n                selectedGroup = {\r\n                    key: groupKey,\r\n                    items: []\r\n                };\r\n                result.push(selectedGroup)\r\n            }\r\n            selectedGroup.items.push(item)\r\n        }.bind(this));\r\n        return result\r\n    },\r\n    moveItemAtIndexToIndex: function(movingIndex, destinationIndex) {\r\n        var items = this._collectionWidget.option(\"items\");\r\n        var movingIndices = splitIndex(movingIndex);\r\n        var destinationIndices = splitIndex(destinationIndex);\r\n        var movingItemGroup = items[movingIndices.group].items;\r\n        var destinationItemGroup = items[destinationIndices.group].items;\r\n        var movedItemData = movingItemGroup[movingIndices.item];\r\n        movingItemGroup.splice(movingIndices.item, 1);\r\n        destinationItemGroup.splice(destinationIndices.item, 0, movedItemData)\r\n    },\r\n    _isItemIndex: function(index) {\r\n        return index && (0, _type.isNumeric)(index.group) && (0, _type.isNumeric)(index.item)\r\n    },\r\n    _getNormalizedItemIndex: function(itemElement) {\r\n        var $item = (0, _renderer.default)(itemElement);\r\n        var $group = $item.closest(\".\" + LIST_GROUP_CLASS);\r\n        if (!$group.length) {\r\n            return -1\r\n        }\r\n        return combineIndex({\r\n            group: this._groupElements().index($group),\r\n            item: this._groupItemElements($group).index($item)\r\n        })\r\n    },\r\n    _normalizeItemIndex: function(index) {\r\n        return combineIndex(index)\r\n    },\r\n    _denormalizeItemIndex: function(index) {\r\n        return splitIndex(index)\r\n    },\r\n    _getItemByNormalizedIndex: function(index) {\r\n        var indices = splitIndex(index);\r\n        var $group = this._groupElements().eq(indices.group);\r\n        return this._groupItemElements($group).eq(indices.item)\r\n    },\r\n    _itemsFromSameParent: function(firstIndex, secondIndex) {\r\n        return splitIndex(firstIndex).group === splitIndex(secondIndex).group\r\n    }\r\n});\r\nvar _default = GroupedEditStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/load_indicator.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _window = require(\"../core/utils/window\");\r\nvar _support = require(\"../core/utils/support\");\r\nvar _themes = require(\"./themes\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _ui = _interopRequireDefault(require(\"./widget/ui.widget\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar navigator = (0, _window.getNavigator)();\r\nvar LOADINDICATOR_CLASS = \"dx-loadindicator\";\r\nvar LOADINDICATOR_WRAPPER_CLASS = \"dx-loadindicator-wrapper\";\r\nvar LOADINDICATOR_CONTENT_CLASS = \"dx-loadindicator-content\";\r\nvar LOADINDICATOR_ICON_CLASS = \"dx-loadindicator-icon\";\r\nvar LOADINDICATOR_SEGMENT_CLASS = \"dx-loadindicator-segment\";\r\nvar LOADINDICATOR_SEGMENT_INNER_CLASS = \"dx-loadindicator-segment-inner\";\r\nvar LOADINDICATOR_IMAGE_CLASS = \"dx-loadindicator-image\";\r\nvar LoadIndicator = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            indicatorSrc: \"\",\r\n            activeStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            _animatingSegmentCount: 1,\r\n            _animatingSegmentInner: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = (0, _themes.current)();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                var realDevice = _devices.default.real();\r\n                var obsoleteAndroid = \"android\" === realDevice.platform && !/chrome/i.test(navigator.userAgent);\r\n                return obsoleteAndroid\r\n            },\r\n            options: {\r\n                viaImage: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return (0, _themes.isMaterial)(themeName)\r\n            },\r\n            options: {\r\n                _animatingSegmentCount: 2,\r\n                _animatingSegmentInner: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return (0, _themes.isGeneric)(themeName)\r\n            },\r\n            options: {\r\n                _animatingSegmentCount: 7\r\n            }\r\n        }])\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(LOADINDICATOR_CLASS)\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderWrapper();\r\n        this._renderIndicatorContent();\r\n        this._renderMarkup()\r\n    },\r\n    _renderWrapper: function() {\r\n        this._$wrapper = (0, _renderer.default)(\"<div>\").addClass(LOADINDICATOR_WRAPPER_CLASS);\r\n        this.$element().append(this._$wrapper)\r\n    },\r\n    _renderIndicatorContent: function() {\r\n        this._$content = (0, _renderer.default)(\"<div>\").addClass(LOADINDICATOR_CONTENT_CLASS);\r\n        this._$wrapper.append(this._$content)\r\n    },\r\n    _renderMarkup: function() {\r\n        if ((0, _support.animation)() && !this.option(\"viaImage\") && !this.option(\"indicatorSrc\")) {\r\n            this._renderMarkupForAnimation()\r\n        } else {\r\n            this._renderMarkupForImage()\r\n        }\r\n    },\r\n    _renderMarkupForAnimation: function() {\r\n        var animatingSegmentInner = this.option(\"_animatingSegmentInner\");\r\n        this._$indicator = (0, _renderer.default)(\"<div>\").addClass(LOADINDICATOR_ICON_CLASS);\r\n        this._$content.append(this._$indicator);\r\n        for (var i = this.option(\"_animatingSegmentCount\"); i >= 0; --i) {\r\n            var $segment = (0, _renderer.default)(\"<div>\").addClass(LOADINDICATOR_SEGMENT_CLASS).addClass(LOADINDICATOR_SEGMENT_CLASS + i);\r\n            if (animatingSegmentInner) {\r\n                $segment.append((0, _renderer.default)(\"<div>\").addClass(LOADINDICATOR_SEGMENT_INNER_CLASS))\r\n            }\r\n            this._$indicator.append($segment)\r\n        }\r\n    },\r\n    _renderMarkupForImage: function() {\r\n        var indicatorSrc = this.option(\"indicatorSrc\");\r\n        this._$wrapper.addClass(LOADINDICATOR_IMAGE_CLASS);\r\n        if (indicatorSrc) {\r\n            this._$wrapper.css(\"backgroundImage\", \"url(\" + indicatorSrc + \")\")\r\n        }\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this._updateContentSizeForAnimation()\r\n    },\r\n    _updateContentSizeForAnimation: function() {\r\n        if (!this._$indicator) {\r\n            return\r\n        }\r\n        var width = this.option(\"width\");\r\n        var height = this.option(\"height\");\r\n        if (width || height) {\r\n            width = this.$element().width();\r\n            height = this.$element().height();\r\n            var minDimension = Math.min(height, width);\r\n            this._$wrapper.css({\r\n                height: minDimension,\r\n                width: minDimension,\r\n                fontSize: minDimension\r\n            })\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._removeMarkupForAnimation();\r\n        this._removeMarkupForImage()\r\n    },\r\n    _removeMarkupForAnimation: function() {\r\n        if (!this._$indicator) {\r\n            return\r\n        }\r\n        this._$indicator.remove();\r\n        delete this._$indicator\r\n    },\r\n    _removeMarkupForImage: function() {\r\n        this._$wrapper.css(\"backgroundImage\", \"none\")\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"_animatingSegmentCount\":\r\n            case \"_animatingSegmentInner\":\r\n            case \"indicatorSrc\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxLoadIndicator\", LoadIndicator);\r\nvar _default = LoadIndicator;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/load_panel.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _message = _interopRequireDefault(require(\"../localization/message\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _load_indicator = _interopRequireDefault(require(\"./load_indicator\"));\r\nvar _overlay = _interopRequireDefault(require(\"./overlay\"));\r\nvar _deferred = require(\"../core/utils/deferred\");\r\nvar _themes = require(\"./themes\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar LOADPANEL_CLASS = \"dx-loadpanel\";\r\nvar LOADPANEL_WRAPPER_CLASS = \"dx-loadpanel-wrapper\";\r\nvar LOADPANEL_INDICATOR_CLASS = \"dx-loadpanel-indicator\";\r\nvar LOADPANEL_MESSAGE_CLASS = \"dx-loadpanel-message\";\r\nvar LOADPANEL_CONTENT_CLASS = \"dx-loadpanel-content\";\r\nvar LOADPANEL_CONTENT_WRAPPER_CLASS = \"dx-loadpanel-content-wrapper\";\r\nvar LOADPANEL_PANE_HIDDEN_CLASS = \"dx-loadpanel-pane-hidden\";\r\nvar LoadPanel = _overlay.default.inherit({\r\n    _supportedKeys: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            escape: _common.noop\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            message: _message.default.format(\"Loading\"),\r\n            width: 222,\r\n            height: 90,\r\n            animation: null,\r\n            showIndicator: true,\r\n            indicatorSrc: \"\",\r\n            showPane: true,\r\n            delay: 0,\r\n            templatesRenderAsynchronously: false,\r\n            hideTopOverlayHandler: null,\r\n            resizeEnabled: false,\r\n            focusStateEnabled: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                shadingColor: \"transparent\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return (0, _themes.isMaterial)()\r\n            },\r\n            options: {\r\n                message: \"\",\r\n                width: 60,\r\n                height: 60,\r\n                maxHeight: 60,\r\n                maxWidth: 60\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(LOADPANEL_CLASS);\r\n        this.$wrapper().addClass(LOADPANEL_WRAPPER_CLASS)\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.callBase();\r\n        this.$content().addClass(LOADPANEL_CONTENT_CLASS);\r\n        this._$loadPanelContentWrapper = (0, _renderer.default)(\"<div>\").addClass(LOADPANEL_CONTENT_WRAPPER_CLASS);\r\n        this._$loadPanelContentWrapper.appendTo(this.$content());\r\n        this._togglePaneVisible();\r\n        this._cleanPreviousContent();\r\n        this._renderLoadIndicator();\r\n        this._renderMessage()\r\n    },\r\n    _show: function() {\r\n        var delay = this.option(\"delay\");\r\n        if (!delay) {\r\n            return this.callBase()\r\n        }\r\n        var deferred = new _deferred.Deferred;\r\n        var callBase = this.callBase.bind(this);\r\n        this._clearShowTimeout();\r\n        this._showTimeout = setTimeout(function() {\r\n            callBase().done(function() {\r\n                deferred.resolve()\r\n            })\r\n        }, delay);\r\n        return deferred.promise()\r\n    },\r\n    _hide: function() {\r\n        this._clearShowTimeout();\r\n        return this.callBase()\r\n    },\r\n    _clearShowTimeout: function() {\r\n        clearTimeout(this._showTimeout)\r\n    },\r\n    _renderMessage: function() {\r\n        if (!this._$loadPanelContentWrapper) {\r\n            return\r\n        }\r\n        var message = this.option(\"message\");\r\n        if (!message) {\r\n            return\r\n        }\r\n        var $message = (0, _renderer.default)(\"<div>\").addClass(LOADPANEL_MESSAGE_CLASS).text(message);\r\n        this._$loadPanelContentWrapper.append($message)\r\n    },\r\n    _renderLoadIndicator: function() {\r\n        if (!this._$loadPanelContentWrapper || !this.option(\"showIndicator\")) {\r\n            return\r\n        }\r\n        if (!this._$indicator) {\r\n            this._$indicator = (0, _renderer.default)(\"<div>\").addClass(LOADPANEL_INDICATOR_CLASS).appendTo(this._$loadPanelContentWrapper)\r\n        }\r\n        this._createComponent(this._$indicator, _load_indicator.default, {\r\n            indicatorSrc: this.option(\"indicatorSrc\")\r\n        })\r\n    },\r\n    _cleanPreviousContent: function() {\r\n        this.$content().find(\".\" + LOADPANEL_MESSAGE_CLASS).remove();\r\n        this.$content().find(\".\" + LOADPANEL_INDICATOR_CLASS).remove();\r\n        delete this._$indicator\r\n    },\r\n    _togglePaneVisible: function() {\r\n        this.$content().toggleClass(LOADPANEL_PANE_HIDDEN_CLASS, !this.option(\"showPane\"))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"delay\":\r\n                break;\r\n            case \"message\":\r\n            case \"showIndicator\":\r\n                this._cleanPreviousContent();\r\n                this._renderLoadIndicator();\r\n                this._renderMessage();\r\n                break;\r\n            case \"showPane\":\r\n                this._togglePaneVisible();\r\n                break;\r\n            case \"indicatorSrc\":\r\n                this._renderLoadIndicator();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this._clearShowTimeout();\r\n        this.callBase()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxLoadPanel\", LoadPanel);\r\nvar _default = LoadPanel;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/menu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _ui = _interopRequireDefault(require(\"./menu/ui.menu\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _ui.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/menu/ui.menu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _element = require(\"../../core/element\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _utils = require(\"../overlay/utils\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _hover = require(\"../../events/hover\");\r\nvar _ui = _interopRequireDefault(require(\"../context_menu/ui.menu_base\"));\r\nvar _overlay = _interopRequireDefault(require(\"../overlay\"));\r\nvar _ui2 = _interopRequireDefault(require(\"./ui.submenu\"));\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\nvar _tree_view = _interopRequireDefault(require(\"../tree_view\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\r\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\r\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\r\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\r\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\r\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\r\nvar NEXTITEM_OPERATION = \"nextItem\";\r\nvar PREVITEM_OPERATION = \"prevItem\";\r\nvar DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\r\nvar Menu = function(_MenuBase) {\r\n    _inheritsLoose(Menu, _MenuBase);\r\n\r\n    function Menu() {\r\n        return _MenuBase.apply(this, arguments) || this\r\n    }\r\n    var _proto = Menu.prototype;\r\n    _proto._getDefaultOptions = function() {\r\n        return (0, _extend.extend)(_MenuBase.prototype._getDefaultOptions.call(this), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    };\r\n    _proto._setOptionsByReference = function() {\r\n        _MenuBase.prototype._setOptionsByReference.call(this);\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    };\r\n    _proto._itemElements = function() {\r\n        var rootMenuElements = _MenuBase.prototype._itemElements.call(this);\r\n        var submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    };\r\n    _proto._submenuItemElements = function() {\r\n        var elements = [];\r\n        var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\r\n        var currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    };\r\n    _proto._focusTarget = function() {\r\n        return this.$element()\r\n    };\r\n    _proto._isMenuHorizontal = function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    };\r\n    _proto._moveFocus = function(location) {\r\n        var $items = this._getAvailableItems();\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        var $activeItem = this._getActiveItem(true);\r\n        var argument;\r\n        var operation;\r\n        var navigationAction;\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return _MenuBase.prototype._moveFocus.call(this, location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", (0, _element.getPublicElement)($newTarget))\r\n        }\r\n    };\r\n    _proto._getItemsNavigationOperation = function(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    };\r\n    _proto._getKeyboardNavigationAction = function(operation, argument) {\r\n        var action = _common.noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    };\r\n    _proto._clean = function() {\r\n        _MenuBase.prototype._clean.call(this);\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    };\r\n    _proto._visibilityChanged = function(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    };\r\n    _proto._isAdaptivityEnabled = function() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    };\r\n    _proto._updateItemsWidthCache = function() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    };\r\n    _proto._dimensionChanged = function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = this.$element().outerWidth();\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    };\r\n    _proto._init = function() {\r\n        _MenuBase.prototype._init.call(this);\r\n        this._submenus = []\r\n    };\r\n    _proto._initActions = function() {\r\n        var _this = this;\r\n        this._actions = {};\r\n        (0, _iterator.each)(ACTIONS, function(index, action) {\r\n            _this._actions[action] = _this._createActionByOption(action)\r\n        })\r\n    };\r\n    _proto._initMarkup = function() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        _MenuBase.prototype._initMarkup.call(this);\r\n        this.setAria(\"role\", \"menubar\")\r\n    };\r\n    _proto._render = function() {\r\n        _MenuBase.prototype._render.call(this);\r\n        this._initAdaptivity()\r\n    };\r\n    _proto._renderHamburgerButton = function() {\r\n        this._hamburger = new _button.default((0, _renderer.default)(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    };\r\n    _proto._toggleTreeView = function(state) {\r\n        if ((0, _type.isPlainObject)(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    };\r\n    _proto._toggleHamburgerActiveState = function(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    };\r\n    _proto._toggleAdaptiveMode = function(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\r\n        var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    };\r\n    _proto._removeAdaptivity = function() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    };\r\n    _proto._treeviewItemClickHandler = function(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    };\r\n    _proto._getAdaptiveOverlayOptions = function() {\r\n        var _this2 = this;\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            maxHeight: function() {\r\n                return (0, _utils.getElementMaxHeightByWindow)(_this2.$element())\r\n            },\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            closeOnTargetScroll: true,\r\n            onHidden: function() {\r\n                _this2._toggleHamburgerActiveState(false)\r\n            },\r\n            height: \"auto\",\r\n            closeOnOutsideClick: function(e) {\r\n                return !(0, _renderer.default)(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length\r\n            },\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    };\r\n    _proto._getTreeViewOptions = function() {\r\n        var _this3 = this;\r\n        var menuOptions = {};\r\n        var optionsToTransfer = [\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"];\r\n        var actionsToTransfer = [\"onItemContextMenu\", \"onSelectionChanged\"];\r\n        (0, _iterator.each)(optionsToTransfer, function(_, option) {\r\n            menuOptions[option] = _this3.option(option)\r\n        });\r\n        (0, _iterator.each)(actionsToTransfer, function(_, actionName) {\r\n            menuOptions[actionName] = function(e) {\r\n                _this3._actions[actionName](e)\r\n            }\r\n        });\r\n        return (0, _extend.extend)(menuOptions, {\r\n            dataSource: this.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: this._treeviewItemClickHandler.bind(this),\r\n            onItemExpanded: function(e) {\r\n                _this3._overlay.repaint();\r\n                _this3._actions.onSubmenuShown(e)\r\n            },\r\n            onItemCollapsed: function(e) {\r\n                _this3._overlay.repaint();\r\n                _this3._actions.onSubmenuHidden(e)\r\n            },\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    };\r\n    _proto._initAdaptivity = function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = (0, _renderer.default)(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent((0, _renderer.default)(\"<div>\"), _tree_view.default, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent((0, _renderer.default)(\"<div>\"), _overlay.default, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    };\r\n    _proto._getDelay = function(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!(0, _type.isDefined)(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return (0, _type.isObject)(delay) ? delay[delayType] : delay\r\n        }\r\n    };\r\n    _proto._keyboardHandler = function(e) {\r\n        return _MenuBase.prototype._keyboardHandler.call(this, e, !!this._visibleSubmenu)\r\n    };\r\n    _proto._renderContainer = function() {\r\n        var $wrapper = (0, _renderer.default)(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return _MenuBase.prototype._renderContainer.call(this, $wrapper)\r\n    };\r\n    _proto._renderSubmenuItems = function(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    };\r\n    _proto._getKeyboardListeners = function() {\r\n        return _MenuBase.prototype._getKeyboardListeners.call(this).concat(this._visibleSubmenu)\r\n    };\r\n    _proto._createSubmenu = function(node, $rootItem) {\r\n        var $submenuContainer = (0, _renderer.default)(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node);\r\n        var result = this._createComponent($submenuContainer, _ui2.default, (0, _extend.extend)(this._getSubmenuOptions(), {\r\n            _dataAdapter: this._dataAdapter,\r\n            _parentKey: node.internalFields.key,\r\n            items: items,\r\n            onHoverStart: this._clearTimeouts.bind(this),\r\n            position: this.getSubmenuPosition($rootItem)\r\n        }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    };\r\n    _proto._getSubmenuOptions = function() {\r\n        var _this4 = this;\r\n        var $submenuTarget = (0, _renderer.default)(\"<div>\");\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: function(e) {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                _this4.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            },\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    };\r\n    _proto._getShowFirstSubmenuMode = function() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return (0, _type.isObject)(optionValue) ? optionValue.name : optionValue\r\n    };\r\n    _proto._moveMainMenuFocus = function(direction) {\r\n        var $items = this._getAvailableItems();\r\n        var itemCount = $items.length;\r\n        var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\r\n        var itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else {\r\n            if (itemIndex < 0) {\r\n                itemIndex = itemCount - 1\r\n            }\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", (0, _element.getPublicElement)($newItem))\r\n    };\r\n    _proto._nestedItemOnSelectionChangedHandler = function(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0];\r\n        var submenu = _ui2.default.getInstance(args.element);\r\n        var onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem)\r\n    };\r\n    _proto._clearSelectionInSubmenus = function(item, targetSubmenu) {\r\n        var _this5 = this;\r\n        var cleanAllSubmenus = !arguments.length;\r\n        (0, _iterator.each)(this._submenus, function(index, submenu) {\r\n            var $submenu = submenu._itemContainer();\r\n            var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\r\n            var $selectedItem = $submenu.find(\".\".concat(_this5._selectedItemClass()));\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                $selectedItem.removeClass(_this5._selectedItemClass());\r\n                var selectedItemData = _this5._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    };\r\n    _proto._clearRootSelection = function() {\r\n        var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    };\r\n    _proto._nestedItemOnItemClickHandler = function(e) {\r\n        this._actions.onItemClick(e)\r\n    };\r\n    _proto._nestedItemOnItemRenderedHandler = function(e) {\r\n        this._actions.onItemRendered(e)\r\n    };\r\n    _proto._attachSubmenuHandlers = function($rootItem, submenu) {\r\n        var _this6 = this;\r\n        var $submenuOverlayContent = submenu.getOverlayContent();\r\n        var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var submenuMouseLeaveName = (0, _index.addNamespace)(_hover.end, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        (0, _iterator.each)(submenus, function(index, submenu) {\r\n            _events_engine.default.off(submenu, submenuMouseLeaveName);\r\n            _events_engine.default.on(submenu, submenuMouseLeaveName, null, _this6._submenuMouseLeaveHandler.bind(_this6, $rootItem))\r\n        })\r\n    };\r\n    _proto._submenuOnShowingHandler = function($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: (0, _element.getPublicElement)($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    };\r\n    _proto._submenuOnShownHandler = function($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: (0, _element.getPublicElement)($rootItem),\r\n            submenu: submenu\r\n        })\r\n    };\r\n    _proto._submenuOnHidingHandler = function($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        var args = eventArgs;\r\n        args.rootItem = (0, _element.getPublicElement)($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    };\r\n    _proto._submenuOnHiddenHandler = function($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: (0, _element.getPublicElement)($rootItem),\r\n            submenu: submenu\r\n        })\r\n    };\r\n    _proto._submenuMouseLeaveHandler = function($rootItem, eventArgs) {\r\n        var target = (0, _renderer.default)(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\r\n        var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            this._clearTimeouts();\r\n            setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"))\r\n        }\r\n    };\r\n    _proto._hideSubmenuAfterTimeout = function() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = (0, _renderer.default)(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\r\n        var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\r\n        var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\r\n        if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    };\r\n    _proto._getSubmenuByRootElement = function($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\r\n        return $submenu.length && _ui2.default.getInstance($submenu)\r\n    };\r\n    _proto.getSubmenuPosition = function($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal();\r\n        var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var submenuPosition = {\r\n            collision: \"flip\",\r\n            of: $rootItem\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    };\r\n    _proto._renderBorderElement = function($item) {\r\n        (0, _renderer.default)(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    };\r\n    _proto._itemPointerDownHandler = function(e) {\r\n        var $target = (0, _renderer.default)(e.target);\r\n        var $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        _MenuBase.prototype._itemPointerDownHandler.call(this, e)\r\n    };\r\n    _proto._hoverStartHandler = function(e) {\r\n        var mouseMoveEventName = (0, _index.addNamespace)(_pointer.default.move, this.NAME);\r\n        var $item = this._getItemElementByEventArgs(e);\r\n        var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        var isSelectionActive = (0, _type.isDefined)(e.buttons) && 1 === e.buttons || !(0, _type.isDefined)(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        _events_engine.default.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                _events_engine.default.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    };\r\n    _proto._hoverEndHandler = function(eventArg) {\r\n        var _this7 = this;\r\n        var $item = this._getItemElementByEventArgs(eventArg);\r\n        var relatedTarget = (0, _renderer.default)(eventArg.relatedTarget);\r\n        _MenuBase.prototype._hoverEndHandler.call(this, eventArg);\r\n        this._clearTimeouts();\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            this._hideSubmenuTimer = setTimeout(function() {\r\n                _this7._hideSubmenuAfterTimeout()\r\n            }, this._getDelay(\"hide\"))\r\n        }\r\n    };\r\n    _proto._hideVisibleSubmenu = function() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    };\r\n    _proto._showSubmenu = function($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            this._clearTimeouts();\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    };\r\n    _proto._hideSubmenu = function(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    };\r\n    _proto._itemMouseMoveHandler = function(e) {\r\n        var _this8 = this;\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var $item = (0, _renderer.default)(e.currentTarget);\r\n        if (!(0, _type.isDefined)(this._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        this._clearTimeouts();\r\n        this._showSubmenuTimer = setTimeout(function() {\r\n            var submenu = _this8._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                _this8._showSubmenu($item)\r\n            }\r\n        }, this._getDelay(\"show\"))\r\n    };\r\n    _proto._clearTimeouts = function() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    };\r\n    _proto._getSubmenuByElement = function($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    };\r\n    _proto._updateSubmenuVisibilityOnClick = function(actionArgs) {\r\n        var args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = (0, _renderer.default)(args.itemElement);\r\n        var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    };\r\n    _proto._optionChanged = function(args) {\r\n        if (ACTIONS.indexOf(args.name) >= 0) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                _MenuBase.prototype._optionChanged.call(this, args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                _MenuBase.prototype._optionChanged.call(this, args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\r\n                    this._treeView.option(args.fullName, args.value)\r\n                }\r\n                _MenuBase.prototype._optionChanged.call(this, args)\r\n        }\r\n    };\r\n    _proto._changeSubmenusOption = function(name, value) {\r\n        (0, _iterator.each)(this._submenus, function(index, submenu) {\r\n            submenu.option(name, value)\r\n        })\r\n    };\r\n    _proto.selectItem = function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        _MenuBase.prototype.selectItem.call(this, itemElement)\r\n    };\r\n    _proto.unselectItem = function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        _MenuBase.prototype.selectItem.call(this, itemElement)\r\n    };\r\n    return Menu\r\n}(_ui.default);\r\n(0, _component_registrator.default)(\"dxMenu\", Menu);\r\nvar _default = Menu;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/menu/ui.submenu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _element = require(\"../../core/element\");\r\nvar _position = _interopRequireDefault(require(\"../../animation/position\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _context_menu = _interopRequireDefault(require(\"../context_menu\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar Submenu = function(_ContextMenu) {\r\n    _inheritsLoose(Submenu, _ContextMenu);\r\n\r\n    function Submenu() {\r\n        return _ContextMenu.apply(this, arguments) || this\r\n    }\r\n    var _proto = Submenu.prototype;\r\n    _proto._getDefaultOptions = function() {\r\n        return (0, _extend.extend)(_ContextMenu.prototype._getDefaultOptions.call(this), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: _common.noop\r\n        })\r\n    };\r\n    _proto._initDataAdapter = function() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            _ContextMenu.prototype._initDataAdapter.call(this)\r\n        }\r\n    };\r\n    _proto._renderContentImpl = function() {\r\n        this._renderContextMenuOverlay();\r\n        _ContextMenu.prototype._renderContentImpl.call(this);\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    };\r\n    _proto._renderDelimiter = function() {\r\n        this.$contentDelimiter = (0, _renderer.default)(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    };\r\n    _proto._getOverlayOptions = function() {\r\n        return (0, _extend.extend)(_ContextMenu.prototype._getOverlayOptions.call(this), {\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    };\r\n    _proto._overlayPositionedActionHandler = function(arg) {\r\n        this._showDelimiter(arg)\r\n    };\r\n    _proto._hoverEndHandler = function(e) {\r\n        _ContextMenu.prototype._hoverEndHandler.call(this, e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    };\r\n    _proto._isMenuHorizontal = function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    };\r\n    _proto._hoverStartHandler = function(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        _ContextMenu.prototype._hoverStartHandler.call(this, e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    };\r\n    _proto._drawSubmenu = function($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: (0, _element.getPublicElement)($rootItem),\r\n            submenu: this\r\n        });\r\n        _ContextMenu.prototype._drawSubmenu.call(this, $rootItem);\r\n        this._actions.onShown({\r\n            rootItem: (0, _element.getPublicElement)($rootItem),\r\n            submenu: this\r\n        })\r\n    };\r\n    _proto._hideSubmenu = function($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: (0, _element.getPublicElement)($rootItem),\r\n            submenu: this\r\n        });\r\n        _ContextMenu.prototype._hideSubmenu.call(this, $rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: (0, _element.getPublicElement)($rootItem),\r\n            submenu: this\r\n        })\r\n    };\r\n    _proto._showDelimiter = function(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\".concat(DX_SUBMENU_CLASS)).eq(0);\r\n        var $rootItem = this.option(\"position\").of;\r\n        var position = {\r\n            of: $submenu\r\n        };\r\n        var containerOffset = arg.position;\r\n        var vLocation = containerOffset.v.location;\r\n        var hLocation = containerOffset.h.location;\r\n        var rootOffset = $rootItem.offset();\r\n        var offsetLeft = Math.round(rootOffset.left);\r\n        var offsetTop = Math.round(rootOffset.top);\r\n        var rootWidth = $rootItem.width();\r\n        var rootHeight = $rootItem.height();\r\n        var submenuWidth = $submenu.width();\r\n        var submenuHeight = $submenu.height();\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        this.$contentDelimiter.width(this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        this.$contentDelimiter.height(this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                this.$contentDelimiter.height(5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else {\r\n            if (hLocation > offsetLeft) {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"-1 1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"left bottom\"\r\n                }\r\n            } else {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"1 1\";\r\n                    position.at = position.my = \"right top\"\r\n                } else {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        }\r\n        _position.default.setup(this.$contentDelimiter, position)\r\n    };\r\n    _proto._getContextMenuPosition = function() {\r\n        return this.option(\"position\")\r\n    };\r\n    _proto.isOverlayVisible = function() {\r\n        return this._overlay.option(\"visible\")\r\n    };\r\n    _proto.getOverlayContent = function() {\r\n        return this._overlay.$content()\r\n    };\r\n    return Submenu\r\n}(_context_menu.default);\r\nvar _default = Submenu;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/multi_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _translator2 = require(\"../animation/translator\");\r\nvar _uiMulti_view = require(\"./multi_view/ui.multi_view.animation\");\r\nvar _math = require(\"../core/utils/math\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _common = require(\"../core/utils/common\");\r\nvar _visibility_change = require(\"../events/visibility_change\");\r\nvar _element = require(\"../core/element\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./collection/ui.collection_widget.live_update\"));\r\nvar _swipeable = _interopRequireDefault(require(\"../events/gesture/swipeable\"));\r\nvar _deferred = require(\"../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MULTIVIEW_CLASS = \"dx-multiview\";\r\nvar MULTIVIEW_WRAPPER_CLASS = \"dx-multiview-wrapper\";\r\nvar MULTIVIEW_ITEM_CONTAINER_CLASS = \"dx-multiview-item-container\";\r\nvar MULTIVIEW_ITEM_CLASS = \"dx-multiview-item\";\r\nvar MULTIVIEW_ITEM_HIDDEN_CLASS = \"dx-multiview-item-hidden\";\r\nvar MULTIVIEW_ITEM_DATA_KEY = \"dxMultiViewItemData\";\r\nvar MULTIVIEW_ANIMATION_DURATION = 200;\r\nvar toNumber = function(value) {\r\n    return +value\r\n};\r\nvar position = function($element) {\r\n    return (0, _translator2.locate)($element).left\r\n};\r\nvar MultiView = _uiCollection_widget.default.inherit({\r\n    _activeStateUnit: \".\" + MULTIVIEW_ITEM_CLASS,\r\n    _supportedKeys: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            pageUp: _common.noop,\r\n            pageDown: _common.noop\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            selectedIndex: 0,\r\n            swipeEnabled: true,\r\n            animationEnabled: true,\r\n            loop: false,\r\n            deferRendering: true,\r\n            _itemAttributes: {\r\n                role: \"tabpanel\"\r\n            },\r\n            loopItemFocus: false,\r\n            selectOnFocus: true,\r\n            selectionMode: \"single\",\r\n            selectionRequired: true,\r\n            selectionByClick: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _itemClass: function() {\r\n        return MULTIVIEW_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return MULTIVIEW_ITEM_DATA_KEY\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$itemContainer\r\n    },\r\n    _itemElements: function() {\r\n        return this._itemContainer().children(this._itemSelector())\r\n    },\r\n    _itemWidth: function() {\r\n        if (!this._itemWidthValue) {\r\n            this._itemWidthValue = this._$wrapper.width()\r\n        }\r\n        return this._itemWidthValue\r\n    },\r\n    _clearItemWidthCache: function() {\r\n        delete this._itemWidthValue\r\n    },\r\n    _itemsCount: function() {\r\n        return this.option(\"items\").length\r\n    },\r\n    _normalizeIndex: function(index) {\r\n        var count = this._itemsCount();\r\n        if (index < 0) {\r\n            index += count\r\n        }\r\n        if (index >= count) {\r\n            index -= count\r\n        }\r\n        return index\r\n    },\r\n    _getRTLSignCorrection: function() {\r\n        return this.option(\"rtlEnabled\") ? -1 : 1\r\n    },\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var $element = this.$element();\r\n        $element.addClass(MULTIVIEW_CLASS);\r\n        this._$wrapper = (0, _renderer.default)(\"<div>\").addClass(MULTIVIEW_WRAPPER_CLASS);\r\n        this._$wrapper.appendTo($element);\r\n        this._$itemContainer = (0, _renderer.default)(\"<div>\").addClass(MULTIVIEW_ITEM_CONTAINER_CLASS);\r\n        this._$itemContainer.appendTo(this._$wrapper);\r\n        this.option(\"loopItemFocus\", this.option(\"loop\"));\r\n        this._initSwipeable()\r\n    },\r\n    _initMarkup: function() {\r\n        this._deferredItems = [];\r\n        this.callBase();\r\n        var selectedItemIndices = this._getSelectedItemIndices();\r\n        this._updateItemsVisibility(selectedItemIndices[0])\r\n    },\r\n    _afterItemElementDeleted: function($item, deletedActionArgs) {\r\n        this.callBase($item, deletedActionArgs);\r\n        if (this._deferredItems) {\r\n            this._deferredItems.splice(deletedActionArgs.itemIndex, 1)\r\n        }\r\n    },\r\n    _beforeItemElementInserted: function(change) {\r\n        this.callBase.apply(this, arguments);\r\n        if (this._deferredItems) {\r\n            this._deferredItems.splice(change.index, 0, null)\r\n        }\r\n    },\r\n    _executeItemRenderAction: function(index, itemData, itemElement) {\r\n        index = (this.option(\"items\") || []).indexOf(itemData);\r\n        this.callBase(index, itemData, itemElement)\r\n    },\r\n    _renderItemContent: function(args) {\r\n        var renderContentDeferred = new _deferred.Deferred;\r\n        var that = this;\r\n        var callBase = this.callBase;\r\n        var deferred = new _deferred.Deferred;\r\n        deferred.done(function() {\r\n            var $itemContent = callBase.call(that, args);\r\n            renderContentDeferred.resolve($itemContent)\r\n        });\r\n        this._deferredItems[args.index] = deferred;\r\n        this.option(\"deferRendering\") || deferred.resolve();\r\n        return renderContentDeferred.promise()\r\n    },\r\n    _render: function() {\r\n        var _this = this;\r\n        this.callBase();\r\n        (0, _common.deferRender)(function() {\r\n            var selectedItemIndices = _this._getSelectedItemIndices();\r\n            _this._updateItems(selectedItemIndices[0])\r\n        })\r\n    },\r\n    _updateItems: function(selectedIndex, newIndex) {\r\n        this._updateItemsPosition(selectedIndex, newIndex);\r\n        this._updateItemsVisibility(selectedIndex, newIndex)\r\n    },\r\n    _modifyByChanges: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var selectedItemIndices = this._getSelectedItemIndices();\r\n        this._updateItemsVisibility(selectedItemIndices[0])\r\n    },\r\n    _updateItemsPosition: function(selectedIndex, newIndex) {\r\n        var $itemElements = this._itemElements();\r\n        var positionSign = (0, _type.isDefined)(newIndex) ? -this._animationDirection(newIndex, selectedIndex) : void 0;\r\n        var $selectedItem = $itemElements.eq(selectedIndex);\r\n        _uiMulti_view._translator.move($selectedItem, 0);\r\n        if ((0, _type.isDefined)(newIndex)) {\r\n            _uiMulti_view._translator.move($itemElements.eq(newIndex), 100 * positionSign + \"%\")\r\n        }\r\n    },\r\n    _updateItemsVisibility: function(selectedIndex, newIndex) {\r\n        var $itemElements = this._itemElements();\r\n        $itemElements.each(function(itemIndex, item) {\r\n            var $item = (0, _renderer.default)(item);\r\n            var isHidden = itemIndex !== selectedIndex && itemIndex !== newIndex;\r\n            if (!isHidden) {\r\n                this._renderSpecificItem(itemIndex)\r\n            }\r\n            $item.toggleClass(MULTIVIEW_ITEM_HIDDEN_CLASS, isHidden);\r\n            this.setAria(\"hidden\", isHidden || void 0, $item)\r\n        }.bind(this))\r\n    },\r\n    _renderSpecificItem: function(index) {\r\n        var $item = this._itemElements().eq(index);\r\n        var hasItemContent = $item.find(this._itemContentClass()).length > 0;\r\n        if ((0, _type.isDefined)(index) && !hasItemContent) {\r\n            this._deferredItems[index].resolve();\r\n            (0, _visibility_change.triggerResizeEvent)($item)\r\n        }\r\n    },\r\n    _refreshItem: function($item, item) {\r\n        this.callBase($item, item);\r\n        this._updateItemsVisibility(this.option(\"selectedIndex\"))\r\n    },\r\n    _setAriaSelected: _common.noop,\r\n    _updateSelection: function(addedSelection, removedSelection) {\r\n        var newIndex = addedSelection[0];\r\n        var prevIndex = removedSelection[0];\r\n        _uiMulti_view.animation.complete(this._$itemContainer);\r\n        this._updateItems(prevIndex, newIndex);\r\n        var animationDirection = this._animationDirection(newIndex, prevIndex);\r\n        this._animateItemContainer(animationDirection * this._itemWidth(), function() {\r\n            _uiMulti_view._translator.move(this._$itemContainer, 0);\r\n            this._updateItems(newIndex);\r\n            this._$itemContainer.width()\r\n        }.bind(this))\r\n    },\r\n    _animateItemContainer: function(position, completeCallback) {\r\n        var duration = this.option(\"animationEnabled\") ? MULTIVIEW_ANIMATION_DURATION : 0;\r\n        _uiMulti_view.animation.moveTo(this._$itemContainer, position, duration, completeCallback)\r\n    },\r\n    _animationDirection: function(newIndex, prevIndex) {\r\n        var containerPosition = position(this._$itemContainer);\r\n        var indexDifference = (prevIndex - newIndex) * this._getRTLSignCorrection() * this._getItemFocusLoopSignCorrection();\r\n        var isSwipePresent = 0 !== containerPosition;\r\n        var directionSignVariable = isSwipePresent ? containerPosition : indexDifference;\r\n        return (0, _math.sign)(directionSignVariable)\r\n    },\r\n    _getSwipeDisabledState: function() {\r\n        return !this.option(\"swipeEnabled\") || this._itemsCount() <= 1\r\n    },\r\n    _initSwipeable: function() {\r\n        var _this2 = this;\r\n        this._createComponent(this.$element(), _swipeable.default, {\r\n            disabled: this._getSwipeDisabledState(),\r\n            elastic: false,\r\n            itemSizeFunc: this._itemWidth.bind(this),\r\n            onStart: function(args) {\r\n                return _this2._swipeStartHandler(args.event)\r\n            },\r\n            onUpdated: function(args) {\r\n                return _this2._swipeUpdateHandler(args.event)\r\n            },\r\n            onEnd: function(args) {\r\n                return _this2._swipeEndHandler(args.event)\r\n            }\r\n        })\r\n    },\r\n    _swipeStartHandler: function(e) {\r\n        _uiMulti_view.animation.complete(this._$itemContainer);\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        var loop = this.option(\"loop\");\r\n        var lastIndex = this._itemsCount() - 1;\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        e.maxLeftOffset = toNumber(loop || (rtl ? selectedIndex > 0 : selectedIndex < lastIndex));\r\n        e.maxRightOffset = toNumber(loop || (rtl ? selectedIndex < lastIndex : selectedIndex > 0));\r\n        this._swipeDirection = null\r\n    },\r\n    _swipeUpdateHandler: function(e) {\r\n        var offset = e.offset;\r\n        var swipeDirection = (0, _math.sign)(offset) * this._getRTLSignCorrection();\r\n        _uiMulti_view._translator.move(this._$itemContainer, offset * this._itemWidth());\r\n        if (swipeDirection !== this._swipeDirection) {\r\n            this._swipeDirection = swipeDirection;\r\n            var selectedIndex = this.option(\"selectedIndex\");\r\n            var newIndex = this._normalizeIndex(selectedIndex - swipeDirection);\r\n            this._updateItems(selectedIndex, newIndex)\r\n        }\r\n    },\r\n    _swipeEndHandler: function(e) {\r\n        var targetOffset = e.targetOffset * this._getRTLSignCorrection();\r\n        if (targetOffset) {\r\n            this.option(\"selectedIndex\", this._normalizeIndex(this.option(\"selectedIndex\") - targetOffset));\r\n            var $selectedElement = this.itemElements().filter(\".dx-item-selected\");\r\n            this.option(\"focusStateEnabled\") && this.option(\"focusedElement\", (0, _element.getPublicElement)($selectedElement))\r\n        } else {\r\n            this._animateItemContainer(0, _common.noop)\r\n        }\r\n    },\r\n    _getItemFocusLoopSignCorrection: function() {\r\n        return this._itemFocusLooped ? -1 : 1\r\n    },\r\n    _moveFocus: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._itemFocusLooped = false\r\n    },\r\n    _prevItem: function($items) {\r\n        var $result = this.callBase.apply(this, arguments);\r\n        this._itemFocusLooped = $result.is($items.last());\r\n        return $result\r\n    },\r\n    _nextItem: function($items) {\r\n        var $result = this.callBase.apply(this, arguments);\r\n        this._itemFocusLooped = $result.is($items.first());\r\n        return $result\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._clearItemWidthCache()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _updateSwipeDisabledState: function() {\r\n        var disabled = this._getSwipeDisabledState();\r\n        _swipeable.default.getInstance(this.$element()).option(\"disabled\", disabled)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        switch (args.name) {\r\n            case \"loop\":\r\n                this.option(\"loopItemFocus\", value);\r\n                break;\r\n            case \"animationEnabled\":\r\n                break;\r\n            case \"swipeEnabled\":\r\n                this._updateSwipeDisabledState();\r\n                break;\r\n            case \"deferRendering\":\r\n                this._invalidate();\r\n                break;\r\n            case \"items\":\r\n                this._updateSwipeDisabledState();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxMultiView\", MultiView);\r\nvar _default = MultiView;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/multi_view/ui.multi_view.animation.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.animation = exports._translator = void 0;\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _translator2 = require(\"../../animation/translator\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _translator = {\r\n    move: function($element, position) {\r\n        (0, _translator2.move)($element, {\r\n            left: position\r\n        })\r\n    }\r\n};\r\nexports._translator = _translator;\r\nvar animation = {\r\n    moveTo: function($element, position, duration, completeAction) {\r\n        _fx.default.animate($element, {\r\n            type: \"slide\",\r\n            to: {\r\n                left: position\r\n            },\r\n            duration: duration,\r\n            complete: completeAction\r\n        })\r\n    },\r\n    complete: function($element) {\r\n        _fx.default.stop($element, true)\r\n    }\r\n};\r\nexports.animation = animation;\r\n","/**\r\n * DevExtreme (ui/number_box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _number_box = _interopRequireDefault(require(\"./number_box/number_box\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _number_box.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/number_box/number_box.base.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _ui = _interopRequireDefault(require(\"../text_box/ui.text_editor\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _number_box = _interopRequireDefault(require(\"./number_box.spins\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar math = Math;\r\nvar WIDGET_CLASS = \"dx-numberbox\";\r\nvar FIREFOX_CONTROL_KEYS = [\"tab\", \"del\", \"backspace\", \"leftArrow\", \"rightArrow\", \"home\", \"end\", \"enter\"];\r\nvar FORCE_VALUECHANGE_EVENT_NAMESPACE = \"NumberBoxForceValueChange\";\r\nvar NumberBoxBase = _ui.default.inherit({\r\n    _supportedKeys: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            upArrow: function(e) {\r\n                if (!(0, _index.isCommandKeyPressed)(e)) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    this._spinUpChangeHandler(e)\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                if (!(0, _index.isCommandKeyPressed)(e)) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    this._spinDownChangeHandler(e)\r\n                }\r\n            },\r\n            enter: function() {}\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            step: 1,\r\n            showSpinButtons: false,\r\n            useLargeSpinButtons: true,\r\n            mode: \"text\",\r\n            invalidValueMessage: _message.default.format(\"dxNumberBox-invalidValueMessage\"),\r\n            buttons: void 0\r\n        })\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    },\r\n    _getDefaultButtons: function() {\r\n        return this.callBase().concat([{\r\n            name: \"spins\",\r\n            Ctor: _number_box.default\r\n        }])\r\n    },\r\n    _isSupportInputMode: function() {\r\n        var version = parseFloat(_browser.default.version);\r\n        return _browser.default.chrome && version >= 66 || _browser.default.safari && version >= 12 || _browser.default.msie && version >= 75\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return _devices.default.real().generic && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                useLargeSpinButtons: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"desktop\" !== _devices.default.real().deviceType && !this._isSupportInputMode()\r\n            }.bind(this),\r\n            options: {\r\n                mode: \"number\"\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this.callBase()\r\n    },\r\n    _getDefaultAttributes: function() {\r\n        var attributes = this.callBase();\r\n        attributes.inputmode = \"decimal\";\r\n        return attributes\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.option(\"isValid\") && this._validateValue(this.option(\"value\"));\r\n        this.setAria(\"role\", \"spinbutton\")\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = (0, _renderer.default)(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        this._getSubmitElement().val((0, _common.applyServerDecimalSeparator)(value))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        this.callBase(e);\r\n        var char = (0, _index.getChar)(e);\r\n        var validCharRegExp = /[\\d.,eE\\-+]|Subtract/;\r\n        var isInputCharValid = validCharRegExp.test(char);\r\n        if (!isInputCharValid) {\r\n            var keyName = (0, _index.normalizeKeyName)(e);\r\n            if ((0, _index.isCommandKeyPressed)(e) || keyName && (0, _array.inArray)(keyName, FIREFOX_CONTROL_KEYS) >= 0) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n        this._keyPressed = true\r\n    },\r\n    _onMouseWheel: function(dxEvent) {\r\n        dxEvent.delta > 0 ? this._spinValueChange(1, dxEvent) : this._spinValueChange(-1, dxEvent)\r\n    },\r\n    _renderValue: function() {\r\n        var inputValue = this._input().val();\r\n        var value = this.option(\"value\");\r\n        if (!inputValue.length || Number(inputValue) !== value) {\r\n            this._forceValueRender();\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        var valueText = (0, _type.isDefined)(value) ? null : _message.default.format(\"dxNumberBox-noDataText\");\r\n        this.setAria({\r\n            valuenow: (0, _common.ensureDefined)(value, \"\"),\r\n            valuetext: valueText\r\n        });\r\n        this.option(\"text\", this._input().val());\r\n        this._updateButtons();\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    _forceValueRender: function() {\r\n        var value = this.option(\"value\");\r\n        var number = Number(value);\r\n        var formattedValue = isNaN(number) ? \"\" : this._applyDisplayValueFormatter(value);\r\n        this._renderDisplayText(formattedValue)\r\n    },\r\n    _applyDisplayValueFormatter: function(value) {\r\n        return this.option(\"displayValueFormatter\")(value)\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().prop({\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            step: this.option(\"step\")\r\n        });\r\n        this.setAria({\r\n            valuemin: (0, _common.ensureDefined)(this.option(\"min\"), \"\"),\r\n            valuemax: (0, _common.ensureDefined)(this.option(\"max\"), \"\")\r\n        })\r\n    },\r\n    _spinButtonsPointerDownHandler: function() {\r\n        var $input = this._input();\r\n        if (!this.option(\"useLargeSpinButtons\") && _dom_adapter.default.getActiveElement() !== $input[0]) {\r\n            _events_engine.default.trigger($input, \"focus\")\r\n        }\r\n    },\r\n    _spinUpChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(1, e.event || e)\r\n        }\r\n    },\r\n    _spinDownChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(-1, e.event || e)\r\n        }\r\n    },\r\n    _spinValueChange: function(sign, dxEvent) {\r\n        var step = parseFloat(this.option(\"step\"));\r\n        if (0 === step) {\r\n            return\r\n        }\r\n        var value = parseFloat(this._normalizeInputValue()) || 0;\r\n        value = this._correctRounding(value, step * sign);\r\n        var min = this.option(\"min\");\r\n        var max = this.option(\"max\");\r\n        if ((0, _type.isDefined)(min)) {\r\n            value = Math.max(min, value)\r\n        }\r\n        if ((0, _type.isDefined)(max)) {\r\n            value = Math.min(max, value)\r\n        }\r\n        this._saveValueChangeEvent(dxEvent);\r\n        this.option(\"value\", value)\r\n    },\r\n    _correctRounding: function(value, step) {\r\n        var regex = /[,.](.*)/;\r\n        var isFloatValue = regex.test(value);\r\n        var isFloatStep = regex.test(step);\r\n        if (isFloatValue || isFloatStep) {\r\n            var valueAccuracy = isFloatValue ? regex.exec(value)[0].length : 0;\r\n            var stepAccuracy = isFloatStep ? regex.exec(step)[0].length : 0;\r\n            var accuracy = math.max(valueAccuracy, stepAccuracy);\r\n            value = this._round(value + step, accuracy);\r\n            return value\r\n        }\r\n        return value + step\r\n    },\r\n    _round: function(value, precision) {\r\n        precision = precision || 0;\r\n        var multiplier = Math.pow(10, precision);\r\n        value *= multiplier;\r\n        value = Math.round(value) / multiplier;\r\n        return value\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        this.callBase();\r\n        var forceValueChangeEvent = (0, _index.addNamespace)(\"focusout\", FORCE_VALUECHANGE_EVENT_NAMESPACE);\r\n        _events_engine.default.off(this.element(), forceValueChangeEvent);\r\n        _events_engine.default.on(this.element(), forceValueChangeEvent, this._forceRefreshInputValue.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (\"number\" === this.option(\"mode\")) {\r\n            return\r\n        }\r\n        var $input = this._input();\r\n        var formattedValue = this._applyDisplayValueFormatter(this.option(\"value\"));\r\n        $input.val(null);\r\n        $input.val(formattedValue)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var $input = this._input();\r\n        var inputValue = this._normalizeText();\r\n        var value = this._parseValue(inputValue);\r\n        var valueHasDigits = \".\" !== inputValue && \"-\" !== inputValue;\r\n        if (this._isValueValid() && !this._validateValue(value)) {\r\n            $input.val(this._applyDisplayValueFormatter(value));\r\n            return\r\n        }\r\n        if (valueHasDigits) {\r\n            this.callBase(e, isNaN(value) ? null : value)\r\n        }\r\n        this._applyValueBoundaries(inputValue, value);\r\n        this.validationRequest.fire({\r\n            value: value,\r\n            editor: this\r\n        })\r\n    },\r\n    _applyValueBoundaries: function(inputValue, parsedValue) {\r\n        var isValueIncomplete = this._isValueIncomplete(inputValue);\r\n        var isValueCorrect = this._isValueInRange(inputValue);\r\n        if (!isValueIncomplete && !isValueCorrect && null !== parsedValue) {\r\n            if (Number(inputValue) !== parsedValue) {\r\n                this._input().val(this._applyDisplayValueFormatter(parsedValue))\r\n            }\r\n        }\r\n    },\r\n    _replaceCommaWithPoint: function(value) {\r\n        return value.replace(\",\", \".\")\r\n    },\r\n    _inputIsInvalid: function() {\r\n        var isNumberMode = \"number\" === this.option(\"mode\");\r\n        var validityState = this._input().get(0).validity;\r\n        return isNumberMode && validityState && validityState.badInput\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        if (this._inputIsInvalid()) {\r\n            return\r\n        }\r\n        this.callBase(text)\r\n    },\r\n    _isValueIncomplete: function(value) {\r\n        var incompleteRegex = /(^-$)|(^-?\\d*\\.$)|(\\d+e-?$)/i;\r\n        return incompleteRegex.test(value)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        return (0, _math.inRange)(value, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _isNumber: function(value) {\r\n        return null !== this._parseValue(value)\r\n    },\r\n    _validateValue: function(value) {\r\n        var inputValue = this._normalizeText();\r\n        var isValueValid = this._isValueValid();\r\n        var isValid = true;\r\n        var isNumber = this._isNumber(inputValue);\r\n        if (isNaN(Number(value))) {\r\n            isValid = false\r\n        }\r\n        if (!value && isValueValid) {\r\n            isValid = true\r\n        } else {\r\n            if (!isNumber && !isValueValid) {\r\n                isValid = false\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: this.option(\"invalidValueMessage\")\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _normalizeInputValue: function() {\r\n        return this._parseValue(this._normalizeText())\r\n    },\r\n    _normalizeText: function() {\r\n        var value = this._input().val().trim();\r\n        return this._replaceCommaWithPoint(value)\r\n    },\r\n    _parseValue: function(value) {\r\n        var number = parseFloat(value);\r\n        if (isNaN(number)) {\r\n            return null\r\n        }\r\n        return (0, _math.fitIntoRange)(number, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _clearValue: function() {\r\n        if (this._inputIsInvalid()) {\r\n            this._input().val(\"\");\r\n            this._validateValue()\r\n        }\r\n        this.callBase()\r\n    },\r\n    reset: function() {\r\n        if (null === this.option(\"value\")) {\r\n            this.option(\"text\", \"\");\r\n            this._renderValue()\r\n        } else {\r\n            this.option(\"value\", null)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._validateValue(args.value);\r\n                this._setSubmitValue(args.value);\r\n                this.callBase(args);\r\n                this._resumeValueChangeAction();\r\n                break;\r\n            case \"step\":\r\n                this._renderProps();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._renderProps();\r\n                this.option(\"value\", this._parseValue(this.option(\"value\")));\r\n                break;\r\n            case \"showSpinButtons\":\r\n            case \"useLargeSpinButtons\":\r\n                this._updateButtons([\"spins\"]);\r\n                break;\r\n            case \"invalidValueMessage\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = NumberBoxBase;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/number_box/number_box.caret.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getCaretBoundaries = exports.getCaretAfterFormat = void 0;\r\nexports.getCaretInBoundaries = getCaretInBoundaries;\r\nexports.isCaretInBoundaries = exports.getCaretWithOffset = exports.getCaretOffset = void 0;\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _number = _interopRequireDefault(require(\"../../localization/number\"));\r\nvar _utils = require(\"./utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar getCaretBoundaries = function(text, format) {\r\n    if (\"string\" === typeof format) {\r\n        var signParts = format.split(\";\");\r\n        var sign = _number.default.getSign(text, format);\r\n        signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n        format = signParts[sign < 0 ? 1 : 0];\r\n        var mockEscapedStubs = function(str) {\r\n            return str.replace(/'([^']*)'/g, function(str) {\r\n                return str.split(\"\").map(function() {\r\n                    return \" \"\r\n                }).join(\"\").substr(2)\r\n            })\r\n        };\r\n        format = mockEscapedStubs(format);\r\n        var prefixStubLength = /^[^#0.,]*/.exec(format)[0].length;\r\n        var postfixStubLength = /[^#0.,]*$/.exec(format)[0].length;\r\n        return {\r\n            start: prefixStubLength,\r\n            end: text.length - postfixStubLength\r\n        }\r\n    } else {\r\n        return {\r\n            start: 0,\r\n            end: text.length\r\n        }\r\n    }\r\n};\r\nexports.getCaretBoundaries = getCaretBoundaries;\r\nvar _getDigitCountBeforeIndex = function(index, text) {\r\n    var decimalSeparator = _number.default.getDecimalSeparator();\r\n    var regExp = new RegExp(\"[^0-9\" + (0, _common.escapeRegExp)(decimalSeparator) + \"]\", \"g\");\r\n    var textBeforePosition = text.slice(0, index);\r\n    return textBeforePosition.replace(regExp, \"\").length\r\n};\r\nvar _reverseText = function(text) {\r\n    return text.split(\"\").reverse().join(\"\")\r\n};\r\nvar _getDigitPositionByIndex = function(digitIndex, text) {\r\n    if (!digitIndex) {\r\n        return -1\r\n    }\r\n    var regExp = /[0-9]/g;\r\n    var counter = 1;\r\n    var index = null;\r\n    var result = regExp.exec(text);\r\n    while (result) {\r\n        index = result.index;\r\n        if (!digitIndex || counter >= digitIndex) {\r\n            return index\r\n        }\r\n        counter++;\r\n        result = regExp.exec(text)\r\n    }\r\n    return null === index ? text.length : index\r\n};\r\nvar _trimNonNumericCharsFromEnd = function(text) {\r\n    return text.replace(/[^0-9e]+$/, \"\")\r\n};\r\nvar getCaretWithOffset = function(caret, offset) {\r\n    if (void 0 === caret.start) {\r\n        caret = {\r\n            start: caret,\r\n            end: caret\r\n        }\r\n    }\r\n    return {\r\n        start: caret.start + offset,\r\n        end: caret.end + offset\r\n    }\r\n};\r\nexports.getCaretWithOffset = getCaretWithOffset;\r\nvar getCaretAfterFormat = function(text, formatted, caret, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var point = _number.default.getDecimalSeparator();\r\n    var isSeparatorBasedText = isSeparatorBasedString(text);\r\n    var realSeparatorOccurrenceIndex = (0, _utils.getRealSeparatorIndex)(format).occurrence;\r\n    var pointPosition = isSeparatorBasedText ? 0 : (0, _utils.getNthOccurrence)(text, point, realSeparatorOccurrenceIndex);\r\n    var newPointPosition = (0, _utils.getNthOccurrence)(formatted, point, realSeparatorOccurrenceIndex);\r\n    var textParts = (0, _utils.splitByIndex)(text, pointPosition);\r\n    var formattedParts = (0, _utils.splitByIndex)(formatted, newPointPosition);\r\n    var isCaretOnFloat = pointPosition !== -1 && caret.start > pointPosition;\r\n    if (isCaretOnFloat) {\r\n        var relativeIndex = caret.start - pointPosition - 1;\r\n        var digitsBefore = _getDigitCountBeforeIndex(relativeIndex, textParts[1]);\r\n        var newPosition = formattedParts[1] ? newPointPosition + 1 + _getDigitPositionByIndex(digitsBefore, formattedParts[1]) + 1 : formatted.length;\r\n        return getCaretInBoundaries(newPosition, formatted, format)\r\n    } else {\r\n        var formattedIntPart = _trimNonNumericCharsFromEnd(formattedParts[0]);\r\n        var positionFromEnd = textParts[0].length - caret.start;\r\n        var digitsFromEnd = _getDigitCountBeforeIndex(positionFromEnd, _reverseText(textParts[0]));\r\n        var newPositionFromEnd = _getDigitPositionByIndex(digitsFromEnd, _reverseText(formattedIntPart));\r\n        var newPositionFromBegin = formattedIntPart.length - (newPositionFromEnd + 1);\r\n        return getCaretInBoundaries(newPositionFromBegin, formatted, format)\r\n    }\r\n};\r\nexports.getCaretAfterFormat = getCaretAfterFormat;\r\n\r\nfunction isSeparatorBasedString(text) {\r\n    return 1 === text.length && !!text.match(/^[,.][0-9]*$/g)\r\n}\r\nvar isCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretInBoundaries(caret, text, format);\r\n    return caret.start >= boundaries.start && caret.end <= boundaries.end\r\n};\r\nexports.isCaretInBoundaries = isCaretInBoundaries;\r\n\r\nfunction getCaretInBoundaries(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretBoundaries(text, format);\r\n    var adjustedCaret = {\r\n        start: (0, _math.fitIntoRange)(caret.start, boundaries.start, boundaries.end),\r\n        end: (0, _math.fitIntoRange)(caret.end, boundaries.start, boundaries.end)\r\n    };\r\n    return adjustedCaret\r\n}\r\nvar getCaretOffset = function(previousText, newText, format) {\r\n    var previousBoundaries = getCaretBoundaries(previousText, format);\r\n    var newBoundaries = getCaretBoundaries(newText, format);\r\n    return newBoundaries.start - previousBoundaries.start\r\n};\r\nexports.getCaretOffset = getCaretOffset;\r\n","/**\r\n * DevExtreme (ui/number_box/number_box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _number_box = _interopRequireDefault(require(\"./number_box.mask\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}(0, _component_registrator.default)(\"dxNumberBox\", _number_box.default);\r\nvar _default = _number_box.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/number_box/number_box.mask.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _number = _interopRequireDefault(require(\"../../localization/number\"));\r\nvar _number_box = require(\"./number_box.caret\");\r\nvar _number2 = require(\"../../localization/ldml/number\");\r\nvar _number_box2 = _interopRequireDefault(require(\"./number_box.base\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _utils = require(\"./utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar NUMBER_FORMATTER_NAMESPACE = \"dxNumberFormatter\";\r\nvar MOVE_FORWARD = 1;\r\nvar MOVE_BACKWARD = -1;\r\nvar MINUS = \"-\";\r\nvar MINUS_KEY = \"minus\";\r\nvar NUMPUD_MINUS_KEY_IE = \"Subtract\";\r\nvar INPUT_EVENT = \"input\";\r\nvar CARET_TIMEOUT_DURATION = _browser.default.msie ? 300 : 0;\r\nvar NumberBoxMask = _number_box2.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            useMaskBehavior: true,\r\n            format: null\r\n        })\r\n    },\r\n    _isDeleteKey: function(key) {\r\n        return \"del\" === key\r\n    },\r\n    _supportedKeys: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n        var that = this;\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            minus: that._revertSign.bind(that),\r\n            del: that._removeHandler.bind(that),\r\n            backspace: that._removeHandler.bind(that),\r\n            leftArrow: that._arrowHandler.bind(that, MOVE_BACKWARD),\r\n            rightArrow: that._arrowHandler.bind(that, MOVE_FORWARD),\r\n            home: that._moveCaretToBoundaryEventHandler.bind(that, MOVE_FORWARD),\r\n            enter: that._updateFormattedValue.bind(that),\r\n            end: that._moveCaretToBoundaryEventHandler.bind(that, MOVE_BACKWARD)\r\n        })\r\n    },\r\n    _getTextSeparatorIndex: function(text) {\r\n        var decimalSeparator = _number.default.getDecimalSeparator();\r\n        var realSeparatorOccurrenceIndex = (0, _utils.getRealSeparatorIndex)(this.option(\"format\")).occurrence;\r\n        return (0, _utils.getNthOccurrence)(text, decimalSeparator, realSeparatorOccurrenceIndex)\r\n    },\r\n    _focusInHandler: function(e) {\r\n        if (!this._preventNestedFocusEvent(e)) {\r\n            this.clearCaretTimeout();\r\n            this._caretTimeout = setTimeout(function() {\r\n                this._caretTimeout = void 0;\r\n                var caret = this._caret();\r\n                if (caret.start === caret.end && this._useMaskBehavior()) {\r\n                    var text = this._getInputVal();\r\n                    var decimalSeparatorIndex = this._getTextSeparatorIndex(text);\r\n                    if (decimalSeparatorIndex >= 0) {\r\n                        this._caret({\r\n                            start: decimalSeparatorIndex,\r\n                            end: decimalSeparatorIndex\r\n                        })\r\n                    } else {\r\n                        this._moveCaretToBoundaryEventHandler(MOVE_BACKWARD, e)\r\n                    }\r\n                }\r\n            }.bind(this), CARET_TIMEOUT_DURATION)\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        var shouldHandleEvent = !this._preventNestedFocusEvent(e);\r\n        if (shouldHandleEvent) {\r\n            this._focusOutOccurs = true;\r\n            if (this._useMaskBehavior()) {\r\n                this._updateFormattedValue()\r\n            }\r\n        }\r\n        this.callBase(e);\r\n        if (shouldHandleEvent) {\r\n            this._focusOutOccurs = false\r\n        }\r\n    },\r\n    _hasValueBeenChanged: function(inputValue) {\r\n        var format = this._getFormatPattern();\r\n        var value = this.option(\"value\");\r\n        var formatted = this._format(value, format) || \"\";\r\n        return formatted !== inputValue\r\n    },\r\n    _updateFormattedValue: function() {\r\n        var inputValue = this._getInputVal();\r\n        if (this._hasValueBeenChanged(inputValue)) {\r\n            this._updateParsedValue();\r\n            this._adjustParsedValue();\r\n            this._setTextByParsedValue();\r\n            if (this._parsedValue !== this.option(\"value\")) {\r\n                _events_engine.default.trigger(this._input(), \"change\")\r\n            }\r\n        }\r\n    },\r\n    _arrowHandler: function(step, e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this._getInputVal();\r\n        var format = this._getFormatPattern();\r\n        var nextCaret = (0, _number_box.getCaretWithOffset)(this._caret(), step);\r\n        if (!(0, _number_box.isCaretInBoundaries)(nextCaret, text, format)) {\r\n            nextCaret = step === MOVE_FORWARD ? nextCaret.end : nextCaret.start;\r\n            e.preventDefault();\r\n            this._caret((0, _number_box.getCaretInBoundaries)(nextCaret, text, format))\r\n        }\r\n    },\r\n    _moveCaretToBoundary: function(direction) {\r\n        var boundaries = (0, _number_box.getCaretBoundaries)(this._getInputVal(), this._getFormatPattern());\r\n        var newCaret = (0, _number_box.getCaretWithOffset)(direction === MOVE_FORWARD ? boundaries.start : boundaries.end, 0);\r\n        this._caret(newCaret)\r\n    },\r\n    _moveCaretToBoundaryEventHandler: function(direction, e) {\r\n        if (!this._useMaskBehavior() || e && e.shiftKey) {\r\n            return\r\n        }\r\n        this._moveCaretToBoundary(direction);\r\n        e && e.preventDefault()\r\n    },\r\n    _shouldMoveCaret: function(text, caret) {\r\n        var decimalSeparator = _number.default.getDecimalSeparator();\r\n        var isDecimalSeparatorNext = text.charAt(caret.end) === decimalSeparator;\r\n        var moveToFloat = (this._lastKey === decimalSeparator || \".\" === this._lastKey) && isDecimalSeparatorNext;\r\n        return moveToFloat\r\n    },\r\n    _getInputVal: function() {\r\n        return _number.default.convertDigits(this._input().val(), true)\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        this.clearCaretTimeout();\r\n        this._lastKey = _number.default.convertDigits((0, _index.getChar)(e), true);\r\n        this._lastKeyName = (0, _index.normalizeKeyName)(e);\r\n        if (!this._shouldHandleKey(e.originalEvent)) {\r\n            return this.callBase(e)\r\n        }\r\n        var normalizedText = this._getInputVal();\r\n        var caret = this._caret();\r\n        var enteredChar = this._lastKeyName === MINUS_KEY ? \"\" : this._lastKey;\r\n        var newValue = this._tryParse(normalizedText, caret, enteredChar);\r\n        if (this._shouldMoveCaret(normalizedText, caret)) {\r\n            this._moveCaret(1);\r\n            e.originalEvent.preventDefault()\r\n        }\r\n        if (void 0 === newValue) {\r\n            if (this._lastKeyName !== MINUS_KEY) {\r\n                e.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            this._parsedValue = newValue\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _removeHandler: function(e) {\r\n        var caret = this._caret();\r\n        var text = this._getInputVal();\r\n        var start = caret.start;\r\n        var end = caret.end;\r\n        this._lastKey = (0, _index.getChar)(e);\r\n        this._lastKeyName = (0, _index.normalizeKeyName)(e);\r\n        var isDeleteKey = this._isDeleteKey(this._lastKeyName);\r\n        var isBackspaceKey = !isDeleteKey;\r\n        if (start === end) {\r\n            var caretPosition = start;\r\n            var canDelete = isBackspaceKey && caretPosition > 0 || isDeleteKey && caretPosition < text.length;\r\n            if (canDelete) {\r\n                isDeleteKey && end++;\r\n                isBackspaceKey && start--\r\n            } else {\r\n                e.preventDefault();\r\n                return\r\n            }\r\n        }\r\n        var char = text.slice(start, end);\r\n        if (this._isStub(char)) {\r\n            this._moveCaret(isDeleteKey ? 1 : -1);\r\n            if (this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0)) {\r\n                this._revertSign(e);\r\n                this._setTextByParsedValue()\r\n            }\r\n            e.preventDefault();\r\n            return\r\n        }\r\n        var decimalSeparator = _number.default.getDecimalSeparator();\r\n        if (char === decimalSeparator) {\r\n            var decimalSeparatorIndex = text.indexOf(decimalSeparator);\r\n            if (this._isNonStubAfter(decimalSeparatorIndex + 1)) {\r\n                this._moveCaret(isDeleteKey ? 1 : -1);\r\n                e.preventDefault()\r\n            }\r\n            return\r\n        }\r\n        if (end - start < text.length) {\r\n            var editedText = this._replaceSelectedText(text, {\r\n                start: start,\r\n                end: end\r\n            }, \"\");\r\n            var noDigits = editedText.search(/[0-9]/) < 0;\r\n            if (noDigits && this._isValueInRange(0)) {\r\n                this._parsedValue = this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0) ? -0 : 0;\r\n                return\r\n            }\r\n        }\r\n        var valueAfterRemoving = this._tryParse(text, {\r\n            start: start,\r\n            end: end\r\n        }, \"\");\r\n        if (void 0 === valueAfterRemoving) {\r\n            e.preventDefault()\r\n        } else {\r\n            this._parsedValue = valueAfterRemoving\r\n        }\r\n    },\r\n    _isPercentFormat: function() {\r\n        var format = this._getFormatPattern();\r\n        var noEscapedFormat = format.replace(/'[^']+'/g, \"\");\r\n        return noEscapedFormat.indexOf(\"%\") !== -1\r\n    },\r\n    _parse: function(text, format) {\r\n        var formatOption = this.option(\"format\");\r\n        var isCustomParser = (0, _type.isFunction)(formatOption.parser);\r\n        var parser = isCustomParser ? formatOption.parser : _number.default.parse;\r\n        var integerPartStartIndex = 0;\r\n        if (!isCustomParser) {\r\n            var formatPointIndex = (0, _utils.getRealSeparatorIndex)(format).index;\r\n            var textPointIndex = this._getTextSeparatorIndex(text);\r\n            var formatIntegerPartLength = formatPointIndex !== -1 ? formatPointIndex : format.length;\r\n            var textIntegerPartLength = textPointIndex !== -1 ? textPointIndex : text.length;\r\n            if (textIntegerPartLength > formatIntegerPartLength && format.indexOf(\"#\") === -1) {\r\n                integerPartStartIndex = textIntegerPartLength - formatIntegerPartLength\r\n            }\r\n        }\r\n        text = this._removeStubs(text, true);\r\n        text = text.substr(integerPartStartIndex);\r\n        return parser(text, format)\r\n    },\r\n    _format: function(value, format) {\r\n        var formatOption = this.option(\"format\");\r\n        var customFormatter = (null === formatOption || void 0 === formatOption ? void 0 : formatOption.formatter) || formatOption;\r\n        var formatter = (0, _type.isFunction)(customFormatter) ? customFormatter : _number.default.format;\r\n        var formattedValue = null === value ? \"\" : formatter(value, format);\r\n        return formattedValue\r\n    },\r\n    _getFormatPattern: function() {\r\n        if (!this._currentFormat) {\r\n            this._updateFormat()\r\n        }\r\n        return this._currentFormat\r\n    },\r\n    _updateFormat: function() {\r\n        var _this = this;\r\n        var format = this.option(\"format\");\r\n        var isCustomParser = (0, _type.isFunction)(null === format || void 0 === format ? void 0 : format.parser);\r\n        var isLDMLPattern = (0, _type.isString)(format) && (format.indexOf(\"0\") >= 0 || format.indexOf(\"#\") >= 0);\r\n        this._currentFormat = isCustomParser || isLDMLPattern ? format : (0, _number2.getFormat)(function(value) {\r\n            var text = _this._format(value, format);\r\n            return _number.default.convertDigits(text, true)\r\n        })\r\n    },\r\n    _getFormatForSign: function(text) {\r\n        var format = this._getFormatPattern();\r\n        if ((0, _type.isString)(format)) {\r\n            var signParts = format.split(\";\");\r\n            var sign = _number.default.getSign(text, format);\r\n            signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n            return sign < 0 ? signParts[1] : signParts[0]\r\n        } else {\r\n            var _sign = _number.default.getSign(text);\r\n            return _sign < 0 ? \"-\" : \"\"\r\n        }\r\n    },\r\n    _removeStubs: function(text, excludeComma) {\r\n        var format = this._getFormatForSign(text);\r\n        var thousandsSeparator = _number.default.getThousandsSeparator();\r\n        var stubs = this._getStubs(format);\r\n        var result = text;\r\n        if (stubs.length) {\r\n            var prefixStubs = stubs[0];\r\n            var postfixRegex = new RegExp(\"(\" + (0, _common.escapeRegExp)(stubs[1] || \"\") + \")$\", \"g\");\r\n            var decoratorsRegex = new RegExp(\"[-\" + (0, _common.escapeRegExp)(excludeComma ? \"\" : thousandsSeparator) + \"]\", \"g\");\r\n            result = result.replace(prefixStubs, \"\").replace(postfixRegex, \"\").replace(decoratorsRegex, \"\")\r\n        }\r\n        return result\r\n    },\r\n    _getStubs: function(format) {\r\n        var regExpResult = /[^']([#0.,]+)/g.exec(format);\r\n        var pattern = regExpResult && regExpResult[0].trim();\r\n        return format.split(pattern).map(function(stub) {\r\n            return stub.replace(/'/g, \"\")\r\n        })\r\n    },\r\n    _truncateToPrecision: function(value, maxPrecision) {\r\n        if ((0, _type.isDefined)(value)) {\r\n            var strValue = value.toString();\r\n            var decimalSeparatorIndex = strValue.indexOf(\".\");\r\n            if (strValue && decimalSeparatorIndex > -1) {\r\n                var parsedValue = parseFloat(strValue.substr(0, decimalSeparatorIndex + maxPrecision + 1));\r\n                return isNaN(parsedValue) ? value : parsedValue\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _tryParse: function(text, selection, char) {\r\n        var editedText = this._replaceSelectedText(text, selection, char);\r\n        var format = this._getFormatPattern();\r\n        var isTextSelected = selection.start !== selection.end;\r\n        var parsedValue = this._getParsedValue(editedText, format);\r\n        var maxPrecision = !format.parser && this._getPrecisionLimits(editedText).max;\r\n        var isValueChanged = parsedValue !== this._parsedValue;\r\n        var decimalSeparator = _number.default.getDecimalSeparator();\r\n        var isDecimalPointRestricted = char === decimalSeparator && 0 === maxPrecision;\r\n        var isUselessCharRestricted = !isTextSelected && !isValueChanged && char !== MINUS && !this._isValueIncomplete(editedText) && this._isStub(char);\r\n        if (isDecimalPointRestricted || isUselessCharRestricted) {\r\n            return\r\n        }\r\n        if (\"\" === this._removeStubs(editedText)) {\r\n            parsedValue = Math.abs(0 * this._parsedValue)\r\n        }\r\n        if (isNaN(parsedValue)) {\r\n            return\r\n        }\r\n        var value = null === parsedValue ? this._parsedValue : parsedValue;\r\n        parsedValue = maxPrecision ? this._truncateToPrecision(value, maxPrecision) : parsedValue;\r\n        return !format.parser && this._isPercentFormat() ? (0, _utils.adjustPercentValue)(parsedValue, maxPrecision) : parsedValue\r\n    },\r\n    _getParsedValue: function(text, format) {\r\n        var sign = _number.default.getSign(text, (null === format || void 0 === format ? void 0 : format.formatter) || format);\r\n        var parsedValue = this._parse(text, format);\r\n        var parsedValueSign = parsedValue < 0 ? -1 : 1;\r\n        var parsedValueWithSign = (0, _type.isNumeric)(parsedValue) && sign !== parsedValueSign ? sign * parsedValue : parsedValue;\r\n        return parsedValueWithSign\r\n    },\r\n    _isValueIncomplete: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        var caret = this._caret();\r\n        var point = _number.default.getDecimalSeparator();\r\n        var pointIndex = this._getTextSeparatorIndex(text);\r\n        var isCaretOnFloat = pointIndex >= 0 && pointIndex < caret.start;\r\n        var textParts = this._removeStubs(text, true).split(point);\r\n        if (!isCaretOnFloat || 2 !== textParts.length) {\r\n            return false\r\n        }\r\n        var floatLength = textParts[1].length;\r\n        var format = this._getFormatPattern();\r\n        var isCustomParser = !!format.parser;\r\n        var precision = !isCustomParser && this._getPrecisionLimits(this._getFormatPattern(), text);\r\n        var isPrecisionInRange = isCustomParser ? true : (0, _math.inRange)(floatLength, precision.min, precision.max);\r\n        var endsWithZero = \"0\" === textParts[1].charAt(floatLength - 1);\r\n        return isPrecisionInRange && (endsWithZero || !floatLength)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        var min = (0, _common.ensureDefined)(this.option(\"min\"), -(1 / 0));\r\n        var max = (0, _common.ensureDefined)(this.option(\"max\"), 1 / 0);\r\n        return (0, _math.inRange)(value, min, max)\r\n    },\r\n    _setInputText: function(text) {\r\n        var normalizedText = _number.default.convertDigits(text, true);\r\n        var newCaret = (0, _number_box.getCaretAfterFormat)(this._getInputVal(), normalizedText, this._caret(), this._getFormatPattern());\r\n        this._input().val(text);\r\n        this._toggleEmptinessEventHandler();\r\n        this._formattedValue = text;\r\n        if (!this._focusOutOccurs) {\r\n            this._caret(newCaret)\r\n        }\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return !!this.option(\"format\") && this.option(\"useMaskBehavior\")\r\n    },\r\n    _renderInputType: function() {\r\n        var isNumberType = \"number\" === this.option(\"mode\");\r\n        var isDesktop = \"desktop\" === _devices.default.real().deviceType;\r\n        if (this._useMaskBehavior() && isNumberType) {\r\n            this._setInputType(isDesktop || this._isSupportInputMode() ? \"text\" : \"tel\")\r\n        } else {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _isChar: function(str) {\r\n        return (0, _type.isString)(str) && 1 === str.length\r\n    },\r\n    _moveCaret: function(offset) {\r\n        if (!offset) {\r\n            return\r\n        }\r\n        var newCaret = (0, _number_box.getCaretWithOffset)(this._caret(), offset);\r\n        var adjustedCaret = (0, _number_box.getCaretInBoundaries)(newCaret, this._getInputVal(), this._getFormatPattern());\r\n        this._caret(adjustedCaret)\r\n    },\r\n    _shouldHandleKey: function(e) {\r\n        var keyName = (0, _index.normalizeKeyName)(e);\r\n        var isSpecialChar = (0, _index.isCommandKeyPressed)(e) || e.altKey || e.shiftKey || !this._isChar(keyName);\r\n        var isMinusKey = keyName === MINUS_KEY;\r\n        var useMaskBehavior = this._useMaskBehavior();\r\n        return useMaskBehavior && !isSpecialChar && !isMinusKey\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderFormatter()\r\n    },\r\n    _renderFormatter: function() {\r\n        this._clearCache();\r\n        this._detachFormatterEvents();\r\n        if (this._useMaskBehavior()) {\r\n            this._attachFormatterEvents()\r\n        }\r\n    },\r\n    _detachFormatterEvents: function() {\r\n        _events_engine.default.off(this._input(), \".\" + NUMBER_FORMATTER_NAMESPACE)\r\n    },\r\n    _isInputFromPaste: function(e) {\r\n        var inputType = e.originalEvent && e.originalEvent.inputType;\r\n        if ((0, _type.isDefined)(inputType)) {\r\n            return \"insertFromPaste\" === inputType\r\n        } else {\r\n            return this._isValuePasted\r\n        }\r\n    },\r\n    _attachFormatterEvents: function() {\r\n        var $input = this._input();\r\n        _events_engine.default.on($input, (0, _index.addNamespace)(INPUT_EVENT, NUMBER_FORMATTER_NAMESPACE), function(e) {\r\n            this._formatValue(e);\r\n            this._isValuePasted = false\r\n        }.bind(this));\r\n        if (_browser.default.msie && _browser.default.version < 12) {\r\n            _events_engine.default.on($input, (0, _index.addNamespace)(\"paste\", NUMBER_FORMATTER_NAMESPACE), function() {\r\n                this._isValuePasted = true\r\n            }.bind(this))\r\n        }\r\n        _events_engine.default.on($input, (0, _index.addNamespace)(\"dxclick\", NUMBER_FORMATTER_NAMESPACE), function() {\r\n            if (!this._caretTimeout) {\r\n                this._caretTimeout = setTimeout(function() {\r\n                    this._caretTimeout = void 0;\r\n                    this._caret((0, _number_box.getCaretInBoundaries)(this._caret(), this._getInputVal(), this._getFormatPattern()))\r\n                }.bind(this), CARET_TIMEOUT_DURATION)\r\n            }\r\n        }.bind(this));\r\n        _events_engine.default.on($input, \"dxdblclick\", function() {\r\n            this.clearCaretTimeout()\r\n        }.bind(this))\r\n    },\r\n    clearCaretTimeout: function() {\r\n        clearTimeout(this._caretTimeout);\r\n        this._caretTimeout = void 0\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n    },\r\n    _isNonStubAfter: function(index) {\r\n        var text = this._getInputVal().slice(index);\r\n        return text && !this._isStub(text, true)\r\n    },\r\n    _isStub: function(str, isString) {\r\n        var escapedDecimalSeparator = (0, _common.escapeRegExp)(_number.default.getDecimalSeparator());\r\n        var regExpString = \"^[^0-9\" + escapedDecimalSeparator + \"]+$\";\r\n        var stubRegExp = new RegExp(regExpString, \"g\");\r\n        return stubRegExp.test(str) && (isString || this._isChar(str))\r\n    },\r\n    _parseValue: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        return this._parsedValue\r\n    },\r\n    _getPrecisionLimits: function(text) {\r\n        var currentFormat = this._getFormatForSign(text);\r\n        var realSeparatorIndex = (0, _utils.getRealSeparatorIndex)(currentFormat).index;\r\n        var floatPart = ((0, _utils.splitByIndex)(currentFormat, realSeparatorIndex)[1] || \"\").replace(/[^#0]/g, \"\");\r\n        var minPrecision = floatPart.replace(/^(0*)#*/, \"$1\").length;\r\n        var maxPrecision = floatPart.length;\r\n        return {\r\n            min: minPrecision,\r\n            max: maxPrecision\r\n        }\r\n    },\r\n    _revertSign: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            if ((0, _index.normalizeKeyName)(e) === MINUS_KEY) {\r\n                this._applyRevertedSign(e, caret, true);\r\n                return\r\n            } else {\r\n                this._caret((0, _number_box.getCaretInBoundaries)(0, this._getInputVal(), this._getFormatPattern()))\r\n            }\r\n        }\r\n        this._applyRevertedSign(e, caret)\r\n    },\r\n    _applyRevertedSign: function(e, caret, preserveSelectedText) {\r\n        var newValue = -1 * (0, _common.ensureDefined)(this._parsedValue, null);\r\n        if (this._isValueInRange(newValue)) {\r\n            this._parsedValue = newValue;\r\n            if (preserveSelectedText) {\r\n                var format = this._getFormatPattern();\r\n                var previousText = this._getInputVal();\r\n                this._setTextByParsedValue();\r\n                e.preventDefault();\r\n                var currentText = this._getInputVal();\r\n                var offset = (0, _number_box.getCaretOffset)(previousText, currentText, format);\r\n                caret = (0, _number_box.getCaretWithOffset)(caret, offset);\r\n                var caretInBoundaries = (0, _number_box.getCaretInBoundaries)(caret, currentText, format);\r\n                if (_browser.default.msie) {\r\n                    clearTimeout(this._caretTimeout);\r\n                    this._caretTimeout = setTimeout(this._caret.bind(this, caretInBoundaries))\r\n                } else {\r\n                    this._caret(caretInBoundaries)\r\n                }\r\n            }\r\n            if (e.key === NUMPUD_MINUS_KEY_IE) {\r\n                _events_engine.default.trigger(this._input(), INPUT_EVENT)\r\n            }\r\n        }\r\n    },\r\n    _removeMinusFromText: function(text, caret) {\r\n        var isMinusPressed = this._lastKeyName === MINUS_KEY && text.charAt(caret.start - 1) === MINUS;\r\n        return isMinusPressed ? this._replaceSelectedText(text, {\r\n            start: caret.start - 1,\r\n            end: caret.start\r\n        }, \"\") : text\r\n    },\r\n    _setTextByParsedValue: function() {\r\n        var format = this._getFormatPattern();\r\n        var parsed = this._parseValue();\r\n        var formatted = this._format(parsed, format) || \"\";\r\n        this._setInputText(formatted)\r\n    },\r\n    _formatValue: function(e) {\r\n        var normalizedText = this._getInputVal();\r\n        var caret = this._caret();\r\n        var textWithoutMinus = this._removeMinusFromText(normalizedText, caret);\r\n        var wasMinusRemoved = textWithoutMinus !== normalizedText;\r\n        normalizedText = textWithoutMinus;\r\n        if (!this._isInputFromPaste(e) && this._isValueIncomplete(textWithoutMinus)) {\r\n            this._formattedValue = normalizedText;\r\n            if (wasMinusRemoved) {\r\n                this._setTextByParsedValue()\r\n            }\r\n            return\r\n        }\r\n        var textWasChanged = _number.default.convertDigits(this._formattedValue, true) !== normalizedText;\r\n        if (textWasChanged) {\r\n            var value = this._tryParse(normalizedText, caret, \"\");\r\n            if ((0, _type.isDefined)(value)) {\r\n                this._parsedValue = value\r\n            }\r\n        }\r\n        this._setTextByParsedValue()\r\n    },\r\n    _renderDisplayText: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._toggleEmptinessEventHandler()\r\n        } else {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._parsedValue = this.option(\"value\");\r\n            this._setTextByParsedValue()\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _updateParsedValue: function() {\r\n        var inputValue = this._getInputVal();\r\n        this._parsedValue = this._tryParse(inputValue, this._caret())\r\n    },\r\n    _adjustParsedValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var clearedText = this._removeStubs(this._getInputVal());\r\n        var parsedValue = clearedText ? this._parseValue() : null;\r\n        if (!(0, _type.isNumeric)(parsedValue)) {\r\n            this._parsedValue = parsedValue;\r\n            return\r\n        }\r\n        this._parsedValue = (0, _math.fitIntoRange)(parsedValue, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(e)\r\n        }\r\n        var caret = this._caret();\r\n        this._saveValueChangeEvent(e);\r\n        this._lastKey = null;\r\n        this._lastKeyName = null;\r\n        this._updateParsedValue();\r\n        this._adjustParsedValue();\r\n        this.option(\"value\", this._parsedValue);\r\n        if (caret) {\r\n            this._caret(caret)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"format\":\r\n            case \"useMaskBehavior\":\r\n                this._renderInputType();\r\n                this._updateFormat();\r\n                this._renderFormatter();\r\n                this._renderValue();\r\n                this._refreshValueChangeEvent();\r\n                this._refreshEvents();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._adjustParsedValue();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clearCache: function() {\r\n        delete this._formattedValue;\r\n        delete this._lastKey;\r\n        delete this._lastKeyName;\r\n        delete this._parsedValue;\r\n        delete this._focusOutOccurs;\r\n        clearTimeout(this._caretTimeout);\r\n        delete this._caretTimeout\r\n    },\r\n    _clean: function() {\r\n        this._clearCache();\r\n        this.callBase()\r\n    }\r\n});\r\nvar _default = NumberBoxMask;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/number_box/number_box.spin.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _emitter = require(\"../../events/core/emitter.feedback\");\r\nvar _hold = _interopRequireDefault(require(\"../../events/hold\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SPIN_CLASS = \"dx-numberbox-spin\";\r\nvar SPIN_BUTTON_CLASS = \"dx-numberbox-spin-button\";\r\nvar SPIN_HOLD_DELAY = 100;\r\nvar NUMBER_BOX = \"dxNumberBox\";\r\nvar POINTERUP_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.up, NUMBER_BOX);\r\nvar POINTERCANCEL_EVENT_NAME = (0, _index.addNamespace)(_pointer.default.cancel, NUMBER_BOX);\r\nvar SpinButton = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            direction: \"up\",\r\n            onChange: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        var direction = SPIN_CLASS + \"-\" + this.option(\"direction\");\r\n        this.$element().addClass(SPIN_BUTTON_CLASS).addClass(direction);\r\n        this._spinIcon = (0, _renderer.default)(\"<div>\").addClass(direction + \"-icon\").appendTo(this.$element())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        var eventName = (0, _index.addNamespace)(_pointer.default.down, this.NAME);\r\n        var $element = this.$element();\r\n        _events_engine.default.off($element, eventName);\r\n        _events_engine.default.on($element, eventName, this._spinDownHandler.bind(this));\r\n        this._spinChangeHandler = this._createActionByOption(\"onChange\")\r\n    },\r\n    _spinDownHandler: function(e) {\r\n        e.preventDefault();\r\n        this._clearTimer();\r\n        _events_engine.default.on(this.$element(), _hold.default.name, function() {\r\n            this._feedBackDeferred = new _deferred.Deferred;\r\n            (0, _emitter.lock)(this._feedBackDeferred);\r\n            this._spinChangeHandler({\r\n                event: e\r\n            });\r\n            this._holdTimer = setInterval(this._spinChangeHandler, SPIN_HOLD_DELAY, {\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        var document = _dom_adapter.default.getDocument();\r\n        _events_engine.default.on(document, POINTERUP_EVENT_NAME, this._clearTimer.bind(this));\r\n        _events_engine.default.on(document, POINTERCANCEL_EVENT_NAME, this._clearTimer.bind(this));\r\n        this._spinChangeHandler({\r\n            event: e\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this._clearTimer();\r\n        this.callBase()\r\n    },\r\n    _clearTimer: function() {\r\n        _events_engine.default.off(this.$element(), _hold.default.name);\r\n        var document = _dom_adapter.default.getDocument();\r\n        _events_engine.default.off(document, POINTERUP_EVENT_NAME);\r\n        _events_engine.default.off(document, POINTERCANCEL_EVENT_NAME);\r\n        if (this._feedBackDeferred) {\r\n            this._feedBackDeferred.resolve()\r\n        }\r\n        if (this._holdTimer) {\r\n            clearInterval(this._holdTimer)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onChange\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = SpinButton;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/number_box/number_box.spins.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _button = _interopRequireDefault(require(\"../text_box/texteditor_button_collection/button\"));\r\nvar _number_box = _interopRequireDefault(require(\"./number_box.spin\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar SPIN_CLASS = \"dx-numberbox-spin\";\r\nvar SPIN_CONTAINER_CLASS = \"dx-numberbox-spin-container\";\r\nvar SPIN_TOUCH_FRIENDLY_CLASS = \"dx-numberbox-spin-touch-friendly\";\r\nvar SpinButtons = function(_TextEditorButton) {\r\n    _inheritsLoose(SpinButtons, _TextEditorButton);\r\n\r\n    function SpinButtons() {\r\n        return _TextEditorButton.apply(this, arguments) || this\r\n    }\r\n    var _proto = SpinButtons.prototype;\r\n    _proto._attachEvents = function(instance, $spinContainer) {\r\n        var editor = this.editor;\r\n        var eventName = (0, _index.addNamespace)(_pointer.default.down, editor.NAME);\r\n        var $spinContainerChildren = $spinContainer.children();\r\n        var pointerDownAction = editor._createAction(function(e) {\r\n            return editor._spinButtonsPointerDownHandler(e)\r\n        });\r\n        _events_engine.default.off($spinContainer, eventName);\r\n        _events_engine.default.on($spinContainer, eventName, function(e) {\r\n            return pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        _number_box.default.getInstance($spinContainerChildren.eq(0)).option(\"onChange\", function(e) {\r\n            return editor._spinUpChangeHandler(e)\r\n        });\r\n        _number_box.default.getInstance($spinContainerChildren.eq(1)).option(\"onChange\", function(e) {\r\n            return editor._spinDownChangeHandler(e)\r\n        })\r\n    };\r\n    _proto._create = function() {\r\n        var editor = this.editor;\r\n        var $spinContainer = (0, _renderer.default)(\"<div>\").addClass(SPIN_CONTAINER_CLASS);\r\n        var $spinUp = (0, _renderer.default)(\"<div>\").appendTo($spinContainer);\r\n        var $spinDown = (0, _renderer.default)(\"<div>\").appendTo($spinContainer);\r\n        var options = this._getOptions();\r\n        this._addToContainer($spinContainer);\r\n        editor._createComponent($spinUp, _number_box.default, (0, _extend.extend)({\r\n            direction: \"up\"\r\n        }, options));\r\n        editor._createComponent($spinDown, _number_box.default, (0, _extend.extend)({\r\n            direction: \"down\"\r\n        }, options));\r\n        this._legacyRender(editor.$element(), this._isTouchFriendly(), options.visible);\r\n        return {\r\n            instance: $spinContainer,\r\n            $element: $spinContainer\r\n        }\r\n    };\r\n    _proto._getOptions = function() {\r\n        var editor = this.editor;\r\n        var visible = this._isVisible();\r\n        var disabled = editor.option(\"disabled\");\r\n        return {\r\n            visible: visible,\r\n            disabled: disabled\r\n        }\r\n    };\r\n    _proto._isVisible = function() {\r\n        var editor = this.editor;\r\n        return _TextEditorButton.prototype._isVisible.call(this) && editor.option(\"showSpinButtons\")\r\n    };\r\n    _proto._isTouchFriendly = function() {\r\n        var editor = this.editor;\r\n        return editor.option(\"showSpinButtons\") && editor.option(\"useLargeSpinButtons\")\r\n    };\r\n    _proto._legacyRender = function($editor, isTouchFriendly, isVisible) {\r\n        $editor.toggleClass(SPIN_TOUCH_FRIENDLY_CLASS, isTouchFriendly);\r\n        $editor.toggleClass(SPIN_CLASS, isVisible)\r\n    };\r\n    _proto.update = function() {\r\n        var shouldUpdate = _TextEditorButton.prototype.update.call(this);\r\n        if (shouldUpdate) {\r\n            var editor = this.editor,\r\n                instance = this.instance;\r\n            var $editor = editor.$element();\r\n            var isVisible = this._isVisible();\r\n            var isTouchFriendly = this._isTouchFriendly();\r\n            var $spinButtons = instance.children();\r\n            var spinUp = _number_box.default.getInstance($spinButtons.eq(0));\r\n            var spinDown = _number_box.default.getInstance($spinButtons.eq(1));\r\n            var options = this._getOptions();\r\n            spinUp.option(options);\r\n            spinDown.option(options);\r\n            this._legacyRender($editor, isTouchFriendly, isVisible)\r\n        }\r\n    };\r\n    return SpinButtons\r\n}(_button.default);\r\nexports.default = SpinButtons;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/number_box/utils.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.splitByIndex = exports.getRealSeparatorIndex = exports.getNthOccurrence = exports.adjustPercentValue = void 0;\r\nvar _math = require(\"../../core/utils/math\");\r\nvar getRealSeparatorIndex = function(str) {\r\n    var quoteBalance = 0;\r\n    var separatorCount = 0;\r\n    for (var i = 0; i < str.length; ++i) {\r\n        if (\"'\" === str[i]) {\r\n            quoteBalance++\r\n        }\r\n        if (\".\" === str[i]) {\r\n            ++separatorCount;\r\n            if (quoteBalance % 2 === 0) {\r\n                return {\r\n                    occurrence: separatorCount,\r\n                    index: i\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        occurrence: 1,\r\n        index: -1\r\n    }\r\n};\r\nexports.getRealSeparatorIndex = getRealSeparatorIndex;\r\nvar getNthOccurrence = function(str, c, n) {\r\n    var i = -1;\r\n    while (n-- && i++ < str.length) {\r\n        i = str.indexOf(c, i)\r\n    }\r\n    return i\r\n};\r\nexports.getNthOccurrence = getNthOccurrence;\r\nvar splitByIndex = function(str, index) {\r\n    if (index === -1) {\r\n        return [str]\r\n    }\r\n    return [str.slice(0, index), str.slice(index + 1)]\r\n};\r\nexports.splitByIndex = splitByIndex;\r\nvar adjustPercentValue = function(rawValue, precision) {\r\n    return rawValue && (0, _math.adjust)(rawValue / 100, precision)\r\n};\r\nexports.adjustPercentValue = adjustPercentValue;\r\n","/**\r\n * DevExtreme (ui/overlay.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _ui = _interopRequireDefault(require(\"./overlay/ui.overlay\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _ui.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/overlay/ui.overlay.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _position = _interopRequireDefault(require(\"../../animation/position\"));\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _element = require(\"../../core/element\");\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _empty_template = require(\"../../core/templates/empty_template\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _ready_callbacks = _interopRequireDefault(require(\"../../core/utils/ready_callbacks\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _view_port = require(\"../../core/utils/view_port\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _drag = require(\"../../events/drag\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _short = require(\"../../events/short\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _visibility_change = require(\"../../events/visibility_change\");\r\nvar _hide_callback = require(\"../../mobile/hide_callback\");\r\nvar _resizable = _interopRequireDefault(require(\"../resizable\"));\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _swatch_container = _interopRequireDefault(require(\"../widget/swatch_container\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar zIndexPool = _interopRequireWildcard(require(\"./z_index\"));\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cacheBabelInterop = new WeakMap;\r\n    var cacheNodeInterop = new WeakMap;\r\n    return (_getRequireWildcardCache = function(nodeInterop) {\r\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop\r\n    })(nodeInterop)\r\n}\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) {\r\n    if (!nodeInterop && obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache(nodeInterop);\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (\"default\" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nvar ready = _ready_callbacks.default.add;\r\nvar window = (0, _window.getWindow)();\r\nvar viewPortChanged = _view_port.changeCallback;\r\nvar OVERLAY_CLASS = \"dx-overlay\";\r\nvar OVERLAY_WRAPPER_CLASS = \"dx-overlay-wrapper\";\r\nvar OVERLAY_CONTENT_CLASS = \"dx-overlay-content\";\r\nvar OVERLAY_SHADER_CLASS = \"dx-overlay-shader\";\r\nvar OVERLAY_MODAL_CLASS = \"dx-overlay-modal\";\r\nvar INNER_OVERLAY_CLASS = \"dx-inner-overlay\";\r\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nvar RTL_DIRECTION_CLASS = \"dx-rtl\";\r\nvar ACTIONS = [\"onShowing\", \"onShown\", \"onHiding\", \"onHidden\", \"onPositioned\", \"onResizeStart\", \"onResize\", \"onResizeEnd\"];\r\nvar OVERLAY_STACK = [];\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar PREVENT_SAFARI_SCROLLING_CLASS = \"dx-prevent-safari-scrolling\";\r\nvar TAB_KEY = \"tab\";\r\nvar POSITION_ALIASES = {\r\n    top: {\r\n        my: \"top center\",\r\n        at: \"top center\"\r\n    },\r\n    bottom: {\r\n        my: \"bottom center\",\r\n        at: \"bottom center\"\r\n    },\r\n    right: {\r\n        my: \"right center\",\r\n        at: \"right center\"\r\n    },\r\n    left: {\r\n        my: \"left center\",\r\n        at: \"left center\"\r\n    },\r\n    center: {\r\n        my: \"center\",\r\n        at: \"center\"\r\n    },\r\n    \"right bottom\": {\r\n        my: \"right bottom\",\r\n        at: \"right bottom\"\r\n    },\r\n    \"right top\": {\r\n        my: \"right top\",\r\n        at: \"right top\"\r\n    },\r\n    \"left bottom\": {\r\n        my: \"left bottom\",\r\n        at: \"left bottom\"\r\n    },\r\n    \"left top\": {\r\n        my: \"left top\",\r\n        at: \"left top\"\r\n    }\r\n};\r\nvar realDevice = _devices.default.real();\r\nvar firefoxDesktop = _browser.default.mozilla && \"desktop\" === realDevice.deviceType;\r\nvar iOS = \"ios\" === realDevice.platform;\r\nvar hasSafariAddressBar = _browser.default.safari && \"desktop\" !== realDevice.deviceType;\r\nvar forceRepaint = function($element) {\r\n    if (firefoxDesktop) {\r\n        $element.width()\r\n    }\r\n};\r\nvar getElement = function(value) {\r\n    if ((0, _type.isEvent)(value)) {\r\n        value = value.target\r\n    }\r\n    return (0, _renderer.default)(value)\r\n};\r\nready(function() {\r\n    _events_engine.default.subscribeGlobal(_dom_adapter.default.getDocument(), _pointer.default.down, function(e) {\r\n        for (var i = OVERLAY_STACK.length - 1; i >= 0; i--) {\r\n            if (!OVERLAY_STACK[i]._proxiedDocumentDownHandler(e)) {\r\n                return\r\n            }\r\n        }\r\n    })\r\n});\r\nvar Overlay = _ui.default.inherit({\r\n    _supportedKeys: function() {\r\n        var offsetSize = 5;\r\n        var move = function(top, left, e) {\r\n            if (!this.option(\"dragEnabled\")) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            var allowedOffsets = this._allowedOffsets();\r\n            var offset = {\r\n                top: (0, _math.fitIntoRange)(top, -allowedOffsets.top, allowedOffsets.bottom),\r\n                left: (0, _math.fitIntoRange)(left, -allowedOffsets.left, allowedOffsets.right)\r\n            };\r\n            this._changePosition(offset)\r\n        };\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            escape: function() {\r\n                this.hide()\r\n            },\r\n            upArrow: move.bind(this, -offsetSize, 0),\r\n            downArrow: move.bind(this, offsetSize, 0),\r\n            leftArrow: move.bind(this, 0, -offsetSize),\r\n            rightArrow: move.bind(this, 0, offsetSize)\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        var _this = this;\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            activeStateEnabled: false,\r\n            visible: false,\r\n            deferRendering: true,\r\n            shading: true,\r\n            shadingColor: \"\",\r\n            position: {\r\n                my: \"center\",\r\n                at: \"center\"\r\n            },\r\n            width: function() {\r\n                return .8 * (0, _renderer.default)(window).width()\r\n            },\r\n            minWidth: null,\r\n            maxWidth: null,\r\n            height: function() {\r\n                return .8 * (0, _renderer.default)(window).height()\r\n            },\r\n            minHeight: null,\r\n            maxHeight: null,\r\n            animation: {\r\n                show: {\r\n                    type: \"pop\",\r\n                    duration: 300,\r\n                    from: {\r\n                        scale: .55\r\n                    }\r\n                },\r\n                hide: {\r\n                    type: \"pop\",\r\n                    duration: 300,\r\n                    to: {\r\n                        opacity: 0,\r\n                        scale: .55\r\n                    },\r\n                    from: {\r\n                        opacity: 1,\r\n                        scale: 1\r\n                    }\r\n                }\r\n            },\r\n            closeOnOutsideClick: false,\r\n            onShowing: null,\r\n            onShown: null,\r\n            onHiding: null,\r\n            onHidden: null,\r\n            contentTemplate: \"content\",\r\n            dragEnabled: false,\r\n            resizeEnabled: false,\r\n            onResizeStart: null,\r\n            onResize: null,\r\n            onResizeEnd: null,\r\n            innerOverlay: false,\r\n            target: void 0,\r\n            container: void 0,\r\n            hideTopOverlayHandler: function() {\r\n                _this.hide()\r\n            },\r\n            closeOnTargetScroll: false,\r\n            onPositioned: null,\r\n            boundaryOffset: {\r\n                h: 0,\r\n                v: 0\r\n            },\r\n            propagateOutsideClick: false,\r\n            ignoreChildEvents: true,\r\n            _checkParentVisibility: true,\r\n            _fixedPosition: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return !(0, _window.hasWindow)()\r\n            },\r\n            options: {\r\n                width: null,\r\n                height: null,\r\n                animation: null,\r\n                _checkParentVisibility: false\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            animation: true\r\n        })\r\n    },\r\n    $wrapper: function() {\r\n        return this._$wrapper\r\n    },\r\n    _eventBindingTarget: function() {\r\n        return this._$content\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initActions();\r\n        this._initCloseOnOutsideClickHandler();\r\n        this._initTabTerminatorHandler();\r\n        this._$wrapper = (0, _renderer.default)(\"<div>\").addClass(OVERLAY_WRAPPER_CLASS);\r\n        this._$content = (0, _renderer.default)(\"<div>\").addClass(OVERLAY_CONTENT_CLASS);\r\n        this._initInnerOverlayClass();\r\n        var $element = this.$element();\r\n        this._$wrapper.addClass($element.attr(\"class\"));\r\n        $element.addClass(OVERLAY_CLASS);\r\n        this._$wrapper.attr(\"data-bind\", \"dxControlsDescendantBindings: true\");\r\n        _events_engine.default.on(this._$wrapper, \"MSPointerDown\", _common.noop);\r\n        _events_engine.default.on(this._$wrapper, \"focusin\", function(e) {\r\n            e.stopPropagation()\r\n        });\r\n        this._toggleViewPortSubscription(true);\r\n        this._initHideTopOverlayHandler(this.option(\"hideTopOverlayHandler\"))\r\n    },\r\n    _initOptions: function(options) {\r\n        this._initTarget(options.target);\r\n        var container = void 0 === options.container ? this.option(\"container\") : options.container;\r\n        this._initContainer(container);\r\n        this.callBase(options)\r\n    },\r\n    _initInnerOverlayClass: function() {\r\n        this._$content.toggleClass(INNER_OVERLAY_CLASS, this.option(\"innerOverlay\"))\r\n    },\r\n    _initTarget: function(target) {\r\n        if (!(0, _type.isDefined)(target)) {\r\n            return\r\n        }\r\n        var options = this.option();\r\n        (0, _iterator.each)([\"position.of\", \"animation.show.from.position.of\", \"animation.show.to.position.of\", \"animation.hide.from.position.of\", \"animation.hide.to.position.of\"], function(_, path) {\r\n            var pathParts = path.split(\".\");\r\n            var option = options;\r\n            while (option) {\r\n                if (1 === pathParts.length) {\r\n                    if ((0, _type.isPlainObject)(option)) {\r\n                        option[pathParts.shift()] = target\r\n                    }\r\n                    break\r\n                } else {\r\n                    option = option[pathParts.shift()]\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _initContainer: function(container) {\r\n        container = void 0 === container ? (0, _view_port.value)() : container;\r\n        var $element = this.$element();\r\n        var $container = $element.closest(container);\r\n        if (!$container.length) {\r\n            $container = (0, _renderer.default)(container).first()\r\n        }\r\n        this._$container = $container.length ? $container : $element.parent()\r\n    },\r\n    _initHideTopOverlayHandler: function(handler) {\r\n        this._hideTopOverlayHandler = handler\r\n    },\r\n    _initActions: function() {\r\n        var _this2 = this;\r\n        this._actions = {};\r\n        (0, _iterator.each)(ACTIONS, function(_, action) {\r\n            _this2._actions[action] = _this2._createActionByOption(action, {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            }) || _common.noop\r\n        })\r\n    },\r\n    _initCloseOnOutsideClickHandler: function() {\r\n        var that = this;\r\n        this._proxiedDocumentDownHandler = function() {\r\n            return that._documentDownHandler.apply(that, arguments)\r\n        }\r\n    },\r\n    _documentDownHandler: function(e) {\r\n        if (this._showAnimationProcessing) {\r\n            this._stopAnimation()\r\n        }\r\n        var closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n        if ((0, _type.isFunction)(closeOnOutsideClick)) {\r\n            closeOnOutsideClick = closeOnOutsideClick(e)\r\n        }\r\n        var $container = this._$content;\r\n        var isAttachedTarget = (0, _renderer.default)(window.document).is(e.target) || (0, _dom.contains)(window.document, e.target);\r\n        var isInnerOverlay = (0, _renderer.default)(e.target).closest(\".\" + INNER_OVERLAY_CLASS).length;\r\n        var outsideClick = isAttachedTarget && !isInnerOverlay && !($container.is(e.target) || (0, _dom.contains)($container.get(0), e.target));\r\n        if (outsideClick && closeOnOutsideClick) {\r\n            this._outsideClickHandler(e)\r\n        }\r\n        return this.option(\"propagateOutsideClick\")\r\n    },\r\n    _outsideClickHandler: function(e) {\r\n        if (this.option(\"shading\")) {\r\n            e.preventDefault()\r\n        }\r\n        this.hide()\r\n    },\r\n    _getAnonymousTemplateName: function() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    },\r\n    _initTemplates: function() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new _empty_template.EmptyTemplate\r\n        });\r\n        this.callBase()\r\n    },\r\n    _isTopOverlay: function() {\r\n        var overlayStack = this._overlayStack();\r\n        for (var i = overlayStack.length - 1; i >= 0; i--) {\r\n            var tabbableElements = overlayStack[i]._findTabbableBounds();\r\n            if (tabbableElements.first || tabbableElements.last) {\r\n                return overlayStack[i] === this\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _overlayStack: function() {\r\n        return OVERLAY_STACK\r\n    },\r\n    _zIndexInitValue: function() {\r\n        return Overlay.baseZIndex()\r\n    },\r\n    _toggleViewPortSubscription: function(toggle) {\r\n        viewPortChanged.remove(this._viewPortChangeHandle);\r\n        if (toggle) {\r\n            this._viewPortChangeHandle = this._viewPortChangeHandler.bind(this);\r\n            viewPortChanged.add(this._viewPortChangeHandle)\r\n        }\r\n    },\r\n    _viewPortChangeHandler: function() {\r\n        this._initContainer(this.option(\"container\"));\r\n        this._refresh()\r\n    },\r\n    _renderVisibilityAnimate: function(visible) {\r\n        this._stopAnimation();\r\n        return visible ? this._show() : this._hide()\r\n    },\r\n    _normalizePosition: function() {\r\n        var position = this.option(\"position\");\r\n        this._position = \"function\" === typeof position ? position() : position\r\n    },\r\n    _getAnimationConfig: function() {\r\n        var animation = this.option(\"animation\");\r\n        if ((0, _type.isFunction)(animation)) {\r\n            animation = animation.call(this)\r\n        }\r\n        return animation\r\n    },\r\n    _show: function() {\r\n        var _this3 = this;\r\n        var that = this;\r\n        var deferred = new _deferred.Deferred;\r\n        this._parentHidden = this._isParentHidden();\r\n        deferred.done(function() {\r\n            delete that._parentHidden\r\n        });\r\n        if (this._parentHidden) {\r\n            this._isHidden = true;\r\n            return deferred.resolve()\r\n        }\r\n        if (this._currentVisible) {\r\n            return (new _deferred.Deferred).resolve().promise()\r\n        }\r\n        this._currentVisible = true;\r\n        this._isShown = false;\r\n        this._normalizePosition();\r\n        var animation = that._getAnimationConfig() || {};\r\n        var showAnimation = this._normalizeAnimation(animation.show, \"to\");\r\n        var startShowAnimation = showAnimation && showAnimation.start || _common.noop;\r\n        var completeShowAnimation = showAnimation && showAnimation.complete || _common.noop;\r\n        if (this._isHidingActionCanceled) {\r\n            delete this._isHidingActionCanceled;\r\n            deferred.resolve()\r\n        } else {\r\n            var show = function() {\r\n                _this3._renderVisibility(true);\r\n                if (_this3._isShowingActionCanceled) {\r\n                    delete _this3._isShowingActionCanceled;\r\n                    deferred.resolve();\r\n                    return\r\n                }\r\n                _this3._animate(showAnimation, function() {\r\n                    if (that.option(\"focusStateEnabled\")) {\r\n                        _events_engine.default.trigger(that._focusTarget(), \"focus\")\r\n                    }\r\n                    completeShowAnimation.apply(this, arguments);\r\n                    that._showAnimationProcessing = false;\r\n                    that._isShown = true;\r\n                    that._actions.onShown();\r\n                    that._toggleSafariScrolling(false);\r\n                    deferred.resolve()\r\n                }, function() {\r\n                    startShowAnimation.apply(this, arguments);\r\n                    that._showAnimationProcessing = true\r\n                })\r\n            };\r\n            if (this.option(\"templatesRenderAsynchronously\")) {\r\n                this._stopShowTimer();\r\n                this._asyncShowTimeout = setTimeout(show)\r\n            } else {\r\n                show()\r\n            }\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    _normalizeAnimation: function(animation, prop) {\r\n        if (animation) {\r\n            animation = (0, _extend.extend)({\r\n                type: \"slide\",\r\n                skipElementInitialStyles: true\r\n            }, animation);\r\n            if (animation[prop] && \"object\" === _typeof(animation[prop])) {\r\n                (0, _extend.extend)(animation[prop], {\r\n                    position: this._position\r\n                })\r\n            }\r\n        }\r\n        return animation\r\n    },\r\n    _hide: function() {\r\n        if (!this._currentVisible) {\r\n            return (new _deferred.Deferred).resolve().promise()\r\n        }\r\n        this._currentVisible = false;\r\n        var that = this;\r\n        var deferred = new _deferred.Deferred;\r\n        var animation = that._getAnimationConfig() || {};\r\n        var hideAnimation = this._normalizeAnimation(animation.hide, \"from\");\r\n        var startHideAnimation = hideAnimation && hideAnimation.start || _common.noop;\r\n        var completeHideAnimation = hideAnimation && hideAnimation.complete || _common.noop;\r\n        var hidingArgs = {\r\n            cancel: false\r\n        };\r\n        if (this._isShowingActionCanceled) {\r\n            deferred.resolve()\r\n        } else {\r\n            this._actions.onHiding(hidingArgs);\r\n            that._toggleSafariScrolling(true);\r\n            if (hidingArgs.cancel) {\r\n                this._isHidingActionCanceled = true;\r\n                this.option(\"visible\", true);\r\n                deferred.resolve()\r\n            } else {\r\n                this._forceFocusLost();\r\n                this._toggleShading(false);\r\n                this._toggleSubscriptions(false);\r\n                this._stopShowTimer();\r\n                this._animate(hideAnimation, function() {\r\n                    var _that$_actions;\r\n                    that._$content.css(\"pointerEvents\", \"\");\r\n                    that._renderVisibility(false);\r\n                    completeHideAnimation.apply(this, arguments);\r\n                    that._hideAnimationProcessing = false;\r\n                    null === (_that$_actions = that._actions) || void 0 === _that$_actions ? void 0 : _that$_actions.onHidden();\r\n                    deferred.resolve()\r\n                }, function() {\r\n                    that._$content.css(\"pointerEvents\", \"none\");\r\n                    startHideAnimation.apply(this, arguments);\r\n                    that._hideAnimationProcessing = true\r\n                })\r\n            }\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    _forceFocusLost: function() {\r\n        var activeElement = _dom_adapter.default.getActiveElement();\r\n        var shouldResetActiveElement = !!this._$content.find(activeElement).length;\r\n        if (shouldResetActiveElement) {\r\n            (0, _dom.resetActiveElement)()\r\n        }\r\n    },\r\n    _animate: function(animation, completeCallback, startCallback) {\r\n        if (animation) {\r\n            startCallback = startCallback || animation.start || _common.noop;\r\n            _fx.default.animate(this._$content, (0, _extend.extend)({}, animation, {\r\n                start: startCallback,\r\n                complete: completeCallback\r\n            }))\r\n        } else {\r\n            completeCallback()\r\n        }\r\n    },\r\n    _stopAnimation: function() {\r\n        _fx.default.stop(this._$content, true)\r\n    },\r\n    _renderVisibility: function(visible) {\r\n        if (visible && this._isParentHidden()) {\r\n            return\r\n        }\r\n        this._currentVisible = visible;\r\n        this._stopAnimation();\r\n        if (!visible) {\r\n            (0, _visibility_change.triggerHidingEvent)(this._$content)\r\n        }\r\n        this._toggleVisibility(visible);\r\n        this._$content.toggleClass(INVISIBLE_STATE_CLASS, !visible);\r\n        this._updateZIndexStackPosition(visible);\r\n        if (visible) {\r\n            this._renderContent();\r\n            var showingArgs = {\r\n                cancel: false\r\n            };\r\n            this._actions.onShowing(showingArgs);\r\n            if (showingArgs.cancel) {\r\n                this._toggleVisibility(false);\r\n                this._$content.toggleClass(INVISIBLE_STATE_CLASS, true);\r\n                this._updateZIndexStackPosition(false);\r\n                this._moveFromContainer();\r\n                this._isShowingActionCanceled = true;\r\n                this.option(\"visible\", false);\r\n                return\r\n            }\r\n            this._moveToContainer();\r\n            this._renderGeometry();\r\n            (0, _visibility_change.triggerShownEvent)(this._$content);\r\n            (0, _visibility_change.triggerResizeEvent)(this._$content)\r\n        } else {\r\n            this._moveFromContainer()\r\n        }\r\n        this._toggleShading(visible);\r\n        this._toggleSubscriptions(visible)\r\n    },\r\n    _updateZIndexStackPosition: function(pushToStack) {\r\n        var overlayStack = this._overlayStack();\r\n        var index = (0, _array.inArray)(this, overlayStack);\r\n        if (pushToStack) {\r\n            if (index === -1) {\r\n                this._zIndex = zIndexPool.create(this._zIndexInitValue());\r\n                overlayStack.push(this)\r\n            }\r\n            this._$wrapper.css(\"zIndex\", this._zIndex);\r\n            this._$content.css(\"zIndex\", this._zIndex)\r\n        } else {\r\n            if (index !== -1) {\r\n                overlayStack.splice(index, 1);\r\n                zIndexPool.remove(this._zIndex)\r\n            }\r\n        }\r\n    },\r\n    _toggleShading: function(visible) {\r\n        this._$wrapper.toggleClass(OVERLAY_MODAL_CLASS, this.option(\"shading\") && !this.option(\"container\"));\r\n        this._$wrapper.toggleClass(OVERLAY_SHADER_CLASS, visible && this.option(\"shading\"));\r\n        this._$wrapper.css(\"backgroundColor\", this.option(\"shading\") ? this.option(\"shadingColor\") : \"\");\r\n        this._toggleTabTerminator(visible && this.option(\"shading\"))\r\n    },\r\n    _initTabTerminatorHandler: function() {\r\n        var that = this;\r\n        this._proxiedTabTerminatorHandler = function() {\r\n            that._tabKeyHandler.apply(that, arguments)\r\n        }\r\n    },\r\n    _toggleTabTerminator: function(enabled) {\r\n        var eventName = (0, _index.addNamespace)(\"keydown\", this.NAME);\r\n        if (enabled) {\r\n            _events_engine.default.on(_dom_adapter.default.getDocument(), eventName, this._proxiedTabTerminatorHandler)\r\n        } else {\r\n            _events_engine.default.off(_dom_adapter.default.getDocument(), eventName, this._proxiedTabTerminatorHandler)\r\n        }\r\n    },\r\n    _findTabbableBounds: function() {\r\n        var $elements = this._$wrapper.find(\"*\");\r\n        var elementsCount = $elements.length - 1;\r\n        var result = {\r\n            first: null,\r\n            last: null\r\n        };\r\n        for (var i = 0; i <= elementsCount; i++) {\r\n            if (!result.first && $elements.eq(i).is(_selectors.tabbable)) {\r\n                result.first = $elements.eq(i)\r\n            }\r\n            if (!result.last && $elements.eq(elementsCount - i).is(_selectors.tabbable)) {\r\n                result.last = $elements.eq(elementsCount - i)\r\n            }\r\n            if (result.first && result.last) {\r\n                break\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _tabKeyHandler: function(e) {\r\n        if ((0, _index.normalizeKeyName)(e) !== TAB_KEY || !this._isTopOverlay()) {\r\n            return\r\n        }\r\n        var tabbableElements = this._findTabbableBounds();\r\n        var $firstTabbable = tabbableElements.first;\r\n        var $lastTabbable = tabbableElements.last;\r\n        var isTabOnLast = !e.shiftKey && e.target === $lastTabbable.get(0);\r\n        var isShiftTabOnFirst = e.shiftKey && e.target === $firstTabbable.get(0);\r\n        var isEmptyTabList = 0 === tabbableElements.length;\r\n        var isOutsideTarget = !(0, _dom.contains)(this._$wrapper.get(0), e.target);\r\n        if (isTabOnLast || isShiftTabOnFirst || isEmptyTabList || isOutsideTarget) {\r\n            e.preventDefault();\r\n            var $focusElement = e.shiftKey ? $lastTabbable : $firstTabbable;\r\n            _events_engine.default.trigger($focusElement, \"focusin\");\r\n            _events_engine.default.trigger($focusElement, \"focus\")\r\n        }\r\n    },\r\n    _toggleSubscriptions: function(enabled) {\r\n        if ((0, _window.hasWindow)()) {\r\n            this._toggleHideTopOverlayCallback(enabled);\r\n            this._toggleParentsScrollSubscription(enabled)\r\n        }\r\n    },\r\n    _toggleHideTopOverlayCallback: function(subscribe) {\r\n        if (!this._hideTopOverlayHandler) {\r\n            return\r\n        }\r\n        if (subscribe) {\r\n            _hide_callback.hideCallback.add(this._hideTopOverlayHandler)\r\n        } else {\r\n            _hide_callback.hideCallback.remove(this._hideTopOverlayHandler)\r\n        }\r\n    },\r\n    _toggleParentsScrollSubscription: function(subscribe) {\r\n        var _this4 = this;\r\n        if (!this._position) {\r\n            return\r\n        }\r\n        var target = this._position.of || (0, _renderer.default)();\r\n        var closeOnScroll = this.option(\"closeOnTargetScroll\");\r\n        var $parents = getElement(target).parents();\r\n        var scrollEvent = (0, _index.addNamespace)(\"scroll\", this.NAME);\r\n        if (\"desktop\" === _devices.default.real().deviceType) {\r\n            $parents = $parents.add(window)\r\n        }\r\n        this._proxiedTargetParentsScrollHandler = this._proxiedTargetParentsScrollHandler || function(e) {\r\n            _this4._targetParentsScrollHandler(e)\r\n        };\r\n        _events_engine.default.off((0, _renderer.default)().add(this._$prevTargetParents), scrollEvent, this._proxiedTargetParentsScrollHandler);\r\n        if (subscribe && closeOnScroll) {\r\n            _events_engine.default.on($parents, scrollEvent, this._proxiedTargetParentsScrollHandler);\r\n            this._$prevTargetParents = $parents\r\n        }\r\n    },\r\n    _targetParentsScrollHandler: function(e) {\r\n        var closeHandled = false;\r\n        var closeOnScroll = this.option(\"closeOnTargetScroll\");\r\n        if ((0, _type.isFunction)(closeOnScroll)) {\r\n            closeHandled = closeOnScroll(e)\r\n        }\r\n        if (!closeHandled && !this._showAnimationProcessing) {\r\n            this.hide()\r\n        }\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._appendContentToElement();\r\n        this._renderVisibilityAnimate(this.option(\"visible\"))\r\n    },\r\n    _appendContentToElement: function() {\r\n        if (!this._$content.parent().is(this.$element())) {\r\n            this._$content.appendTo(this.$element())\r\n        }\r\n    },\r\n    _renderContent: function() {\r\n        var shouldDeferRendering = !this._currentVisible && this.option(\"deferRendering\");\r\n        var isParentHidden = this.option(\"visible\") && this._isParentHidden();\r\n        if (isParentHidden) {\r\n            this._isHidden = true;\r\n            return\r\n        }\r\n        if (this._contentAlreadyRendered || shouldDeferRendering) {\r\n            return\r\n        }\r\n        this._contentAlreadyRendered = true;\r\n        this._appendContentToElement();\r\n        this.callBase()\r\n    },\r\n    _isParentHidden: function() {\r\n        if (!this.option(\"_checkParentVisibility\")) {\r\n            return false\r\n        }\r\n        if (void 0 !== this._parentHidden) {\r\n            return this._parentHidden\r\n        }\r\n        var $parent = this.$element().parent();\r\n        if ($parent.is(\":visible\")) {\r\n            return false\r\n        }\r\n        var isHidden = false;\r\n        $parent.add($parent.parents()).each(function() {\r\n            var $element = (0, _renderer.default)(this);\r\n            if (\"none\" === $element.css(\"display\")) {\r\n                isHidden = true;\r\n                return false\r\n            }\r\n        });\r\n        return isHidden || !_dom_adapter.default.getBody().contains($parent.get(0))\r\n    },\r\n    _renderContentImpl: function() {\r\n        var _this5 = this;\r\n        var whenContentRendered = new _deferred.Deferred;\r\n        var contentTemplateOption = this.option(\"contentTemplate\");\r\n        var contentTemplate = this._getTemplate(contentTemplateOption);\r\n        var transclude = this._templateManager.anonymousTemplateName === contentTemplateOption;\r\n        contentTemplate && contentTemplate.render({\r\n            container: (0, _element.getPublicElement)(this.$content()),\r\n            noModel: true,\r\n            transclude: transclude,\r\n            onRendered: function() {\r\n                whenContentRendered.resolve()\r\n            }\r\n        });\r\n        this._renderDrag();\r\n        this._renderResize();\r\n        this._renderScrollTerminator();\r\n        whenContentRendered.done(function() {\r\n            if (_this5.option(\"visible\")) {\r\n                _this5._moveToContainer()\r\n            }\r\n        });\r\n        return whenContentRendered.promise()\r\n    },\r\n    _renderDrag: function() {\r\n        var $dragTarget = this._getDragTarget();\r\n        if (!$dragTarget) {\r\n            return\r\n        }\r\n        var startEventName = (0, _index.addNamespace)(_drag.start, this.NAME);\r\n        var updateEventName = (0, _index.addNamespace)(_drag.move, this.NAME);\r\n        _events_engine.default.off($dragTarget, startEventName);\r\n        _events_engine.default.off($dragTarget, updateEventName);\r\n        if (!this.option(\"dragEnabled\")) {\r\n            return\r\n        }\r\n        _events_engine.default.on($dragTarget, startEventName, this._dragStartHandler.bind(this));\r\n        _events_engine.default.on($dragTarget, updateEventName, this._dragUpdateHandler.bind(this))\r\n    },\r\n    _renderResize: function() {\r\n        this._resizable = this._createComponent(this._$content, _resizable.default, {\r\n            handles: this.option(\"resizeEnabled\") ? \"all\" : \"none\",\r\n            onResizeEnd: this._resizeEndHandler.bind(this),\r\n            onResize: this._actions.onResize.bind(this),\r\n            onResizeStart: this._actions.onResizeStart.bind(this),\r\n            minHeight: 100,\r\n            minWidth: 100,\r\n            area: this._getDragResizeContainer()\r\n        })\r\n    },\r\n    _resizeEndHandler: function() {\r\n        this._positionChangeHandled = true;\r\n        var width = this._resizable.option(\"width\");\r\n        var height = this._resizable.option(\"height\");\r\n        width && this.option(\"width\", width);\r\n        height && this.option(\"height\", height);\r\n        this._actions.onResizeEnd()\r\n    },\r\n    _renderScrollTerminator: function() {\r\n        var $scrollTerminator = this._$wrapper;\r\n        var terminatorEventName = (0, _index.addNamespace)(_drag.move, this.NAME);\r\n        _events_engine.default.off($scrollTerminator, terminatorEventName);\r\n        _events_engine.default.on($scrollTerminator, terminatorEventName, {\r\n            validate: function() {\r\n                return true\r\n            },\r\n            getDirection: function() {\r\n                return \"both\"\r\n            },\r\n            _toggleGestureCover: function(toggle) {\r\n                if (!toggle) {\r\n                    this._toggleGestureCoverImpl(toggle)\r\n                }\r\n            },\r\n            _clearSelection: _common.noop,\r\n            isNative: true\r\n        }, function(e) {\r\n            var originalEvent = e.originalEvent.originalEvent;\r\n            var _ref = originalEvent || {},\r\n                type = _ref.type;\r\n            var isWheel = \"wheel\" === type;\r\n            var isMouseMove = \"mousemove\" === type;\r\n            var isScrollByWheel = isWheel && !(0, _index.isCommandKeyPressed)(e);\r\n            e._cancelPreventDefault = true;\r\n            if (originalEvent && false !== e.cancelable && (!isMouseMove && !isWheel || isScrollByWheel)) {\r\n                e.preventDefault()\r\n            }\r\n        })\r\n    },\r\n    _getDragTarget: function() {\r\n        return this.$content()\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        e.targetElements = [];\r\n        this._prevOffset = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        var allowedOffsets = this._allowedOffsets();\r\n        e.maxTopOffset = allowedOffsets.top;\r\n        e.maxBottomOffset = allowedOffsets.bottom;\r\n        e.maxLeftOffset = allowedOffsets.left;\r\n        e.maxRightOffset = allowedOffsets.right\r\n    },\r\n    _getDragResizeContainer: function() {\r\n        var isContainerDefined = (0, _view_port.originalViewPort)().get(0) || this.option(\"container\");\r\n        var $container = !isContainerDefined ? (0, _renderer.default)(window) : this._$container;\r\n        return $container\r\n    },\r\n    _deltaSize: function() {\r\n        var $content = this._$content;\r\n        var $container = this._getDragResizeContainer();\r\n        var contentWidth = $content.outerWidth();\r\n        var contentHeight = $content.outerHeight();\r\n        var containerWidth = $container.outerWidth();\r\n        var containerHeight = $container.outerHeight();\r\n        if (this._isWindow($container)) {\r\n            var document = _dom_adapter.default.getDocument();\r\n            var fullPageHeight = Math.max((0, _renderer.default)(document).outerHeight(), containerHeight);\r\n            var fullPageWidth = Math.max((0, _renderer.default)(document).outerWidth(), containerWidth);\r\n            containerHeight = fullPageHeight;\r\n            containerWidth = fullPageWidth\r\n        }\r\n        return {\r\n            width: containerWidth - contentWidth,\r\n            height: containerHeight - contentHeight\r\n        }\r\n    },\r\n    _dragUpdateHandler: function(e) {\r\n        var offset = e.offset;\r\n        var prevOffset = this._prevOffset;\r\n        var targetOffset = {\r\n            top: offset.y - prevOffset.y,\r\n            left: offset.x - prevOffset.x\r\n        };\r\n        this._changePosition(targetOffset);\r\n        this._prevOffset = offset\r\n    },\r\n    _changePosition: function(offset) {\r\n        var position = (0, _translator.locate)(this._$content);\r\n        (0, _translator.move)(this._$content, {\r\n            left: position.left + offset.left,\r\n            top: position.top + offset.top\r\n        });\r\n        this._positionChangeHandled = true\r\n    },\r\n    _allowedOffsets: function() {\r\n        var position = (0, _translator.locate)(this._$content);\r\n        var deltaSize = this._deltaSize();\r\n        var isAllowedDrag = deltaSize.height >= 0 && deltaSize.width >= 0;\r\n        var shaderOffset = this.option(\"shading\") && !this.option(\"container\") && !this._isWindow(this._getContainer()) ? (0, _translator.locate)(this._$wrapper) : {\r\n            top: 0,\r\n            left: 0\r\n        };\r\n        var boundaryOffset = this.option(\"boundaryOffset\");\r\n        return {\r\n            top: isAllowedDrag ? position.top + shaderOffset.top + boundaryOffset.v : 0,\r\n            bottom: isAllowedDrag ? -position.top - shaderOffset.top + deltaSize.height - boundaryOffset.v : 0,\r\n            left: isAllowedDrag ? position.left + shaderOffset.left + boundaryOffset.h : 0,\r\n            right: isAllowedDrag ? -position.left - shaderOffset.left + deltaSize.width - boundaryOffset.h : 0\r\n        }\r\n    },\r\n    _moveFromContainer: function() {\r\n        this._$content.appendTo(this.$element());\r\n        this._detachWrapperToContainer()\r\n    },\r\n    _detachWrapperToContainer: function() {\r\n        this._$wrapper.detach()\r\n    },\r\n    _moveToContainer: function() {\r\n        this._attachWrapperToContainer();\r\n        this._$content.appendTo(this._$wrapper)\r\n    },\r\n    _attachWrapperToContainer: function() {\r\n        var $element = this.$element();\r\n        var containerDefined = void 0 !== this.option(\"container\");\r\n        var renderContainer = containerDefined ? this._$container : _swatch_container.default.getSwatchContainer($element);\r\n        if (renderContainer && renderContainer[0] === $element.parent()[0]) {\r\n            renderContainer = $element\r\n        }\r\n        this._$wrapper.appendTo(renderContainer)\r\n    },\r\n    _fixHeightAfterSafariAddressBarResizing: function() {\r\n        if (this._isWindow(this._getContainer()) && hasSafariAddressBar) {\r\n            this._$wrapper.css(\"minHeight\", window.innerHeight)\r\n        }\r\n    },\r\n    _renderGeometry: function(isDimensionChanged) {\r\n        if (this.option(\"visible\") && (0, _window.hasWindow)()) {\r\n            this._renderGeometryImpl(isDimensionChanged)\r\n        }\r\n    },\r\n    _renderGeometryImpl: function(isDimensionChanged) {\r\n        this._stopAnimation();\r\n        this._normalizePosition();\r\n        this._renderWrapper();\r\n        this._fixHeightAfterSafariAddressBarResizing();\r\n        this._renderDimensions();\r\n        var resultPosition = this._renderPosition();\r\n        this._actions.onPositioned({\r\n            position: resultPosition\r\n        })\r\n    },\r\n    _fixWrapperPosition: function() {\r\n        this._$wrapper.css(\"position\", this._useFixedPosition() ? \"fixed\" : \"absolute\")\r\n    },\r\n    _useFixedPosition: function() {\r\n        return this._shouldFixBodyPosition() || this.option(\"_fixedPosition\")\r\n    },\r\n    _shouldFixBodyPosition: function() {\r\n        var $container = this._getContainer();\r\n        return this._isWindow($container) && (!iOS || void 0 !== this._bodyScrollTop)\r\n    },\r\n    _toggleSafariScrolling: function(scrollingEnabled) {\r\n        if (iOS && this._shouldFixBodyPosition()) {\r\n            var body = _dom_adapter.default.getBody();\r\n            if (scrollingEnabled) {\r\n                (0, _renderer.default)(body).removeClass(PREVENT_SAFARI_SCROLLING_CLASS);\r\n                window.scrollTo(0, this._bodyScrollTop);\r\n                this._bodyScrollTop = void 0\r\n            } else {\r\n                if (this.option(\"visible\")) {\r\n                    this._bodyScrollTop = window.pageYOffset;\r\n                    (0, _renderer.default)(body).addClass(PREVENT_SAFARI_SCROLLING_CLASS)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderWrapper: function() {\r\n        this._fixWrapperPosition();\r\n        this._renderWrapperDimensions();\r\n        this._renderWrapperPosition()\r\n    },\r\n    _renderWrapperDimensions: function() {\r\n        var wrapperWidth;\r\n        var wrapperHeight;\r\n        var $container = this._getContainer();\r\n        if (!$container) {\r\n            return\r\n        }\r\n        var isWindow = this._isWindow($container);\r\n        wrapperWidth = isWindow ? \"\" : $container.outerWidth(), wrapperHeight = isWindow ? \"\" : $container.outerHeight();\r\n        this._$wrapper.css({\r\n            width: wrapperWidth,\r\n            height: wrapperHeight\r\n        })\r\n    },\r\n    _isWindow: function($element) {\r\n        return !!$element && (0, _type.isWindow)($element.get(0))\r\n    },\r\n    _renderWrapperPosition: function() {\r\n        var $container = this._getContainer();\r\n        if ($container) {\r\n            _position.default.setup(this._$wrapper, {\r\n                my: \"top left\",\r\n                at: \"top left\",\r\n                of: $container\r\n            })\r\n        }\r\n    },\r\n    _getContainer: function() {\r\n        var position = this._position;\r\n        var container = this.option(\"container\");\r\n        var positionOf = null;\r\n        if (!container && position) {\r\n            positionOf = (0, _type.isEvent)(position.of) ? window : position.of || window\r\n        }\r\n        return getElement(container || positionOf)\r\n    },\r\n    _renderDimensions: function() {\r\n        var content = this._$content.get(0);\r\n        this._$content.css({\r\n            minWidth: this._getOptionValue(\"minWidth\", content),\r\n            maxWidth: this._getOptionValue(\"maxWidth\", content),\r\n            minHeight: this._getOptionValue(\"minHeight\", content),\r\n            maxHeight: this._getOptionValue(\"maxHeight\", content),\r\n            width: this._getOptionValue(\"width\", content),\r\n            height: this._getOptionValue(\"height\", content)\r\n        })\r\n    },\r\n    _renderPosition: function() {\r\n        if (this._positionChangeHandled) {\r\n            var allowedOffsets = this._allowedOffsets();\r\n            this._changePosition({\r\n                top: (0, _math.fitIntoRange)(0, -allowedOffsets.top, allowedOffsets.bottom),\r\n                left: (0, _math.fitIntoRange)(0, -allowedOffsets.left, allowedOffsets.right)\r\n            })\r\n        } else {\r\n            this._renderOverlayBoundaryOffset();\r\n            (0, _translator.resetPosition)(this._$content);\r\n            var wrapperOverflow = this._$wrapper.css(\"overflow\");\r\n            this._$wrapper.css(\"overflow\", \"hidden\");\r\n            var position = this._transformStringPosition(this._position, POSITION_ALIASES);\r\n            var resultPosition = _position.default.setup(this._$content, position);\r\n            this._$wrapper.css(\"overflow\", wrapperOverflow);\r\n            forceRepaint(this._$content);\r\n            return resultPosition\r\n        }\r\n    },\r\n    _transformStringPosition: function(position, positionAliases) {\r\n        if ((0, _type.isString)(position)) {\r\n            position = (0, _extend.extend)({}, positionAliases[position])\r\n        }\r\n        return position\r\n    },\r\n    _renderOverlayBoundaryOffset: function() {\r\n        var boundaryOffset = this.option(\"boundaryOffset\");\r\n        this._$content.css(\"margin\", boundaryOffset.v + \"px \" + boundaryOffset.h + \"px\")\r\n    },\r\n    _focusTarget: function() {\r\n        return this._$content\r\n    },\r\n    _attachKeyboardEvents: function() {\r\n        var _this6 = this;\r\n        this._keyboardListenerId = _short.keyboard.on(this._$content, null, function(opts) {\r\n            return _this6._keyboardHandler(opts)\r\n        })\r\n    },\r\n    _keyboardHandler: function(options) {\r\n        var e = options.originalEvent;\r\n        var $target = (0, _renderer.default)(e.target);\r\n        if ($target.is(this._$content) || !this.option(\"ignoreChildEvents\")) {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _isVisible: function() {\r\n        return this.option(\"visible\")\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            if (this.option(\"visible\")) {\r\n                this._renderVisibilityAnimate(visible)\r\n            }\r\n        } else {\r\n            this._renderVisibilityAnimate(visible)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._renderGeometry(true)\r\n    },\r\n    _clean: function() {\r\n        if (!this._contentAlreadyRendered) {\r\n            this.$content().empty()\r\n        }\r\n        this._renderVisibility(false);\r\n        this._stopShowTimer();\r\n        this._cleanFocusState()\r\n    },\r\n    _stopShowTimer: function() {\r\n        if (this._asyncShowTimeout) {\r\n            clearTimeout(this._asyncShowTimeout)\r\n        }\r\n        this._asyncShowTimeout = null\r\n    },\r\n    _dispose: function() {\r\n        _fx.default.stop(this._$content, false);\r\n        clearTimeout(this._deferShowTimer);\r\n        this._toggleViewPortSubscription(false);\r\n        this._toggleSubscriptions(false);\r\n        this._updateZIndexStackPosition(false);\r\n        this._toggleTabTerminator(false);\r\n        this._toggleSafariScrolling(true);\r\n        this._actions = null;\r\n        this.callBase();\r\n        zIndexPool.remove(this._zIndex);\r\n        this._$wrapper.remove();\r\n        this._$content.remove()\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this.callBase.apply(this, arguments);\r\n        this._$content.toggleClass(DISABLED_STATE_CLASS, Boolean(value))\r\n    },\r\n    _toggleRTLDirection: function(rtl) {\r\n        this._$content.toggleClass(RTL_DIRECTION_CLASS, rtl)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var _this7 = this;\r\n        var value = args.value;\r\n        if ((0, _array.inArray)(args.name, ACTIONS) > -1) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"dragEnabled\":\r\n                this._renderDrag();\r\n                this._renderGeometry();\r\n                break;\r\n            case \"resizeEnabled\":\r\n                this._renderResize();\r\n                this._renderGeometry();\r\n                break;\r\n            case \"shading\":\r\n            case \"shadingColor\":\r\n                this._toggleShading(this.option(\"visible\"));\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n            case \"minWidth\":\r\n            case \"maxWidth\":\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n            case \"boundaryOffset\":\r\n                this._renderGeometry();\r\n                break;\r\n            case \"position\":\r\n                this._positionChangeHandled = false;\r\n                this._renderGeometry();\r\n                break;\r\n            case \"visible\":\r\n                this._renderVisibilityAnimate(value).done(function() {\r\n                    if (!_this7._animateDeferred) {\r\n                        return\r\n                    }\r\n                    _this7._animateDeferred.resolveWith(_this7)\r\n                });\r\n                break;\r\n            case \"target\":\r\n                this._initTarget(value);\r\n                this._invalidate();\r\n                break;\r\n            case \"container\":\r\n                this._initContainer(value);\r\n                this._invalidate();\r\n                break;\r\n            case \"innerOverlay\":\r\n                this._initInnerOverlayClass();\r\n                break;\r\n            case \"deferRendering\":\r\n            case \"contentTemplate\":\r\n                this._contentAlreadyRendered = false;\r\n                this._clean();\r\n                this._invalidate();\r\n                break;\r\n            case \"hideTopOverlayHandler\":\r\n                this._toggleHideTopOverlayCallback(false);\r\n                this._initHideTopOverlayHandler(args.value);\r\n                this._toggleHideTopOverlayCallback(this.option(\"visible\"));\r\n                break;\r\n            case \"closeOnTargetScroll\":\r\n                this._toggleParentsScrollSubscription(this.option(\"visible\"));\r\n                break;\r\n            case \"closeOnOutsideClick\":\r\n            case \"animation\":\r\n            case \"propagateOutsideClick\":\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this._contentAlreadyRendered = false;\r\n                this.callBase(args);\r\n                break;\r\n            case \"_fixedPosition\":\r\n                this._fixWrapperPosition();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    toggle: function(showing) {\r\n        var _this8 = this;\r\n        showing = void 0 === showing ? !this.option(\"visible\") : showing;\r\n        var result = new _deferred.Deferred;\r\n        if (showing === this.option(\"visible\")) {\r\n            return result.resolveWith(this, [showing]).promise()\r\n        }\r\n        var animateDeferred = new _deferred.Deferred;\r\n        this._animateDeferred = animateDeferred;\r\n        this.option(\"visible\", showing);\r\n        animateDeferred.promise().done(function() {\r\n            delete _this8._animateDeferred;\r\n            result.resolveWith(_this8, [_this8.option(\"visible\")])\r\n        });\r\n        return result.promise()\r\n    },\r\n    $content: function() {\r\n        return this._$content\r\n    },\r\n    show: function() {\r\n        return this.toggle(true)\r\n    },\r\n    hide: function() {\r\n        return this.toggle(false)\r\n    },\r\n    content: function() {\r\n        return (0, _element.getPublicElement)(this._$content)\r\n    },\r\n    repaint: function() {\r\n        if (this._contentAlreadyRendered) {\r\n            this._renderGeometry();\r\n            (0, _visibility_change.triggerResizeEvent)(this._$content)\r\n        } else {\r\n            this.callBase()\r\n        }\r\n    }\r\n});\r\nOverlay.baseZIndex = function(zIndex) {\r\n    return zIndexPool.base(zIndex)\r\n};\r\n(0, _component_registrator.default)(\"dxOverlay\", Overlay);\r\nvar _default = Overlay;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/overlay/utils.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getElementMaxHeightByWindow = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nvar getElementMaxHeightByWindow = function($element, startLocation) {\r\n    var $window = (0, _renderer.default)((0, _window.getWindow)());\r\n    var _$element$offset = $element.offset(),\r\n        elementOffset = _$element$offset.top;\r\n    var actualOffset;\r\n    if ((0, _type.isNumeric)(startLocation)) {\r\n        if (startLocation < elementOffset) {\r\n            return elementOffset - startLocation\r\n        } else {\r\n            actualOffset = $window.innerHeight() - startLocation + $window.scrollTop()\r\n        }\r\n    } else {\r\n        var offsetTop = elementOffset - $window.scrollTop();\r\n        var offsetBottom = $window.innerHeight() - offsetTop - $element.outerHeight();\r\n        actualOffset = Math.max(offsetTop, offsetBottom)\r\n    }\r\n    return actualOffset * WINDOW_HEIGHT_PERCENT\r\n};\r\nexports.getElementMaxHeightByWindow = getElementMaxHeightByWindow;\r\n","/**\r\n * DevExtreme (ui/overlay/z_index.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.remove = exports.create = exports.clearStack = exports.base = void 0;\r\nvar _common = require(\"../../core/utils/common\");\r\nvar baseZIndex = 1500;\r\nvar zIndexStack = [];\r\nvar base = function(ZIndex) {\r\n    baseZIndex = (0, _common.ensureDefined)(ZIndex, baseZIndex);\r\n    return baseZIndex\r\n};\r\nexports.base = base;\r\nvar create = function() {\r\n    var baseIndex = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : baseZIndex;\r\n    var length = zIndexStack.length;\r\n    var index = (length ? zIndexStack[length - 1] : baseIndex) + 1;\r\n    zIndexStack.push(index);\r\n    return index\r\n};\r\nexports.create = create;\r\nvar remove = function(zIndex) {\r\n    var position = zIndexStack.indexOf(zIndex);\r\n    if (position >= 0) {\r\n        zIndexStack.splice(position, 1)\r\n    }\r\n};\r\nexports.remove = remove;\r\nvar clearStack = function() {\r\n    zIndexStack = []\r\n};\r\nexports.clearStack = clearStack;\r\n","/**\r\n * DevExtreme (ui/pager.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _class = _interopRequireDefault(require(\"../core/class\"));\r\nvar _string = require(\"../core/utils/string\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _click = require(\"../events/click\");\r\nvar _pointer = _interopRequireDefault(require(\"../events/pointer\"));\r\nvar _message = _interopRequireDefault(require(\"../localization/message\"));\r\nvar _ui = _interopRequireDefault(require(\"./widget/ui.widget\"));\r\nvar _select_box = _interopRequireDefault(require(\"./select_box\"));\r\nvar _number_box = _interopRequireDefault(require(\"./number_box\"));\r\nvar _index = require(\"../events/utils/index\");\r\nvar _accessibility = require(\"./shared/accessibility\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar PAGES_LIMITER = 4;\r\nvar PAGER_CLASS = \"dx-pager\";\r\nvar PAGER_PAGE_CLASS = \"dx-page\";\r\nvar PAGER_PAGE_CLASS_SELECTOR = \".\" + PAGER_PAGE_CLASS;\r\nvar PAGER_PAGES_CLASS = \"dx-pages\";\r\nvar LIGHT_MODE_CLASS = \"dx-light-mode\";\r\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\r\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\r\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\r\nvar PAGER_SELECTION_CLASS = \"dx-selection\";\r\nvar PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\r\nvar PAGER_PAGE_SIZES_CLASS = \"dx-page-sizes\";\r\nvar PAGER_PAGE_SIZE_CLASS = \"dx-page-size\";\r\nvar PAGER_PAGE_SIZE_CLASS_SELECTOR = \".\" + PAGER_PAGE_SIZE_CLASS;\r\nvar PAGER_NAVIGATE_BUTTON = \"dx-navigate-button\";\r\nvar PAGER_PREV_BUTTON_CLASS = \"dx-prev-button\";\r\nvar PAGER_NEXT_BUTTON_CLASS = \"dx-next-button\";\r\nvar PAGER_INFO_CLASS = \"dx-info\";\r\nvar PAGER_INFO_TEXT_CLASS = \"dx-info-text\";\r\nvar PAGER_BUTTON_DISABLE_CLASS = \"dx-button-disable\";\r\nvar Page = _class.default.inherit({\r\n    ctor: function(value, index) {\r\n        var that = this;\r\n        that.index = index;\r\n        that._$page = (0, _renderer.default)(\"<div>\").text(value).addClass(PAGER_PAGE_CLASS)\r\n    },\r\n    value: function(_value) {\r\n        var that = this;\r\n        if ((0, _type.isDefined)(_value)) {\r\n            that._$page.text(_value)\r\n        } else {\r\n            var text = that._$page.text();\r\n            if ((0, _type.isNumeric)(text)) {\r\n                return parseInt(text)\r\n            } else {\r\n                return text\r\n            }\r\n        }\r\n    },\r\n    element: function() {\r\n        return this._$page\r\n    },\r\n    select: function(value) {\r\n        this._$page.toggleClass(PAGER_SELECTION_CLASS, value)\r\n    },\r\n    render: function(rootElement, rtlEnabled) {\r\n        rtlEnabled ? this._$page.prependTo(rootElement) : this._$page.appendTo(rootElement)\r\n    }\r\n});\r\nvar Pager = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            visible: true,\r\n            pagesNavigatorVisible: \"auto\",\r\n            pageIndex: 1,\r\n            maxPagesCount: 10,\r\n            pageCount: 10,\r\n            totalCount: 0,\r\n            pageSize: 5,\r\n            showPageSizes: true,\r\n            pageSizes: [5, 10],\r\n            hasKnownLastPage: true,\r\n            showNavigationButtons: false,\r\n            showInfo: false,\r\n            infoText: _message.default.getFormatter(\"dxPager-infoText\"),\r\n            pagesCountText: _message.default.getFormatter(\"dxPager-pagesCountText\"),\r\n            rtlEnabled: false,\r\n            lightModeEnabled: false,\r\n            pageIndexChanged: _common.noop,\r\n            pageSizeChanged: _common.noop\r\n        })\r\n    },\r\n    _toggleVisibility: function(value) {\r\n        var $element = this.$element();\r\n        if ($element) {\r\n            $element.css(\"display\", value ? \"\" : \"none\")\r\n        }\r\n    },\r\n    _getPages: function(currentPage, count) {\r\n        var pages = [];\r\n        var showMoreButton = !this.option(\"hasKnownLastPage\");\r\n        var firstValue;\r\n        var i;\r\n        if (count > 0 || showMoreButton) {\r\n            if (count <= this.option(\"maxPagesCount\")) {\r\n                for (i = 1; i <= count; i++) {\r\n                    pages.push(new Page(i, i - 1))\r\n                }\r\n                if (showMoreButton) {\r\n                    pages.push(new Page(\">\", i - 1))\r\n                }\r\n            } else {\r\n                pages.push(new Page(1, 0));\r\n                firstValue = currentPage ? currentPage.value() - currentPage.index : 1;\r\n                var pagesCount = count === firstValue + PAGES_LIMITER ? PAGES_LIMITER - 1 : PAGES_LIMITER;\r\n                for (i = 1; i <= pagesCount; i++) {\r\n                    pages.push(new Page(firstValue + i, i))\r\n                }\r\n                pages.push(new Page(count, PAGES_LIMITER + 1));\r\n                if (showMoreButton) {\r\n                    pages.push(new Page(\">\", PAGES_LIMITER + 1))\r\n                }\r\n            }\r\n        }\r\n        return pages\r\n    },\r\n    _getPageByValue: function(value) {\r\n        var that = this;\r\n        var page;\r\n        var i;\r\n        for (i = 0; i < that._pages.length; i++) {\r\n            page = that._pages[i];\r\n            if (page.value() === value) {\r\n                return page\r\n            }\r\n        }\r\n    },\r\n    _processSelectedPage: function(maxPagesCount, pageIndex, pageCount) {\r\n        var that = this;\r\n        var isPageIndexValid = false;\r\n        var selectedPageIndex;\r\n        if (that._pages) {\r\n            (0, _iterator.each)(that._pages, function(key, page) {\r\n                if (pageIndex === page.value()) {\r\n                    isPageIndexValid = true\r\n                }\r\n            });\r\n            if (!isPageIndexValid) {\r\n                that.selectedPage = null\r\n            }\r\n        }\r\n        if ((0, _type.isDefined)(that.selectedPage)) {\r\n            if (pageIndex === pageCount && pageCount > maxPagesCount && that.selectedPage.index !== PAGES_LIMITER + 1) {\r\n                that.selectedPage.index = PAGES_LIMITER + 1\r\n            }\r\n        } else {\r\n            if (pageIndex > PAGES_LIMITER && pageIndex < pageCount) {\r\n                selectedPageIndex = pageCount - PAGES_LIMITER < pageIndex ? PAGES_LIMITER - (pageCount - pageIndex) + 1 : 2;\r\n                that.selectedPage = new Page(pageIndex, selectedPageIndex)\r\n            }\r\n        }\r\n    },\r\n    _selectPageByValue: function(value) {\r\n        var that = this;\r\n        var i;\r\n        var page = that._getPageByValue(value);\r\n        var pages = that._pages;\r\n        var pagesLength = pages.length;\r\n        var nextPage;\r\n        var morePage;\r\n        if (!(0, _type.isDefined)(page)) {\r\n            return\r\n        }\r\n        var prevPage = that._pages[page.index - 1];\r\n        nextPage = that._pages[page.index + 1];\r\n        if (nextPage && \">\" === nextPage.value()) {\r\n            morePage = nextPage;\r\n            nextPage = void 0;\r\n            pagesLength--;\r\n            pages.pop()\r\n        }\r\n        if (that.selectedPage) {\r\n            that.selectedPage.select(false)\r\n        }\r\n        page.select(true);\r\n        that.selectedPage = page;\r\n        if (nextPage && nextPage.value() - value > 1) {\r\n            if (0 !== page.index) {\r\n                prevPage.value(value + 1);\r\n                that._pages.splice(page.index, 1);\r\n                that._pages.splice(page.index - 1, 0, page);\r\n                that._pages[page.index].index = page.index;\r\n                page.index = page.index - 1;\r\n                for (i = page.index - 1; i > 0; i--) {\r\n                    that._pages[i].value(that._pages[i + 1].value() - 1)\r\n                }\r\n            } else {\r\n                for (i = 0; i < pagesLength - 1; i++) {\r\n                    that._pages[i].value(i + 1)\r\n                }\r\n            }\r\n        }\r\n        if (prevPage && value - prevPage.value() > 1) {\r\n            if (page.index !== pagesLength - 1) {\r\n                nextPage.value(value - 1);\r\n                that._pages.splice(page.index, 1);\r\n                that._pages.splice(page.index + 1, 0, page);\r\n                that._pages[page.index].index = page.index;\r\n                page.index = page.index + 1;\r\n                for (i = page.index + 1; i < pagesLength - 1; i++) {\r\n                    that._pages[i].value(that._pages[i - 1].value() + 1)\r\n                }\r\n            } else {\r\n                for (i = 1; i <= pagesLength - 2; i++) {\r\n                    that._pages[pagesLength - 1 - i].value(that._pages[pagesLength - 1].value() - i)\r\n                }\r\n            }\r\n        }\r\n        if (morePage) {\r\n            pages.push(morePage)\r\n        }\r\n    },\r\n    _updatePagesTabIndices: function() {\r\n        var _this = this;\r\n        var $selectedPage = this.selectedPage._$page;\r\n        var updatePageIndices = function updatePageIndices() {\r\n            var buttons = (0, _renderer.default)(_this.element()).find(\"[role=button]:not(.dx-button-disable)\");\r\n            (0, _iterator.each)(buttons, function(_, element) {\r\n                return (0, _renderer.default)(element).attr(\"tabindex\", 0)\r\n            });\r\n            _events_engine.default.off($selectedPage, \"focus\", updatePageIndices)\r\n        };\r\n        _events_engine.default.on($selectedPage, \"focus\", updatePageIndices)\r\n    },\r\n    _nextPage: function(direction) {\r\n        var pageIndex = this.option(\"pageIndex\");\r\n        var pageCount = this.option(\"pageCount\");\r\n        if ((0, _type.isDefined)(pageIndex)) {\r\n            pageIndex = \"next\" === direction ? ++pageIndex : --pageIndex;\r\n            if (pageIndex > 0 && pageIndex <= pageCount) {\r\n                this.option(\"pageIndex\", pageIndex)\r\n            }\r\n        }\r\n    },\r\n    _wrapClickAction: function(action) {\r\n        var _this2 = this;\r\n        return function(e) {\r\n            if (\"dxpointerup\" === e.type) {\r\n                _this2._pointerUpHappened = true\r\n            } else {\r\n                if (_this2._pointerUpHappened) {\r\n                    _this2._pointerUpHappened = false;\r\n                    return\r\n                }\r\n            }\r\n            action({\r\n                event: e\r\n            })\r\n        }\r\n    },\r\n    _renderPages: function(pages) {\r\n        var that = this;\r\n        var $separator;\r\n        var pagesLength = pages.length;\r\n        var clickPagesIndexAction = that._createAction(function(args) {\r\n            var e = args.event;\r\n            var pageNumber = (0, _renderer.default)(e.target).text();\r\n            var pageIndex = \">\" === pageNumber ? that.option(\"pageCount\") + 1 : Number(pageNumber);\r\n            that.option(\"pageIndex\", pageIndex)\r\n        });\r\n        var page;\r\n        if (pagesLength > 1) {\r\n            that._pageClickHandler = this._wrapClickAction(clickPagesIndexAction);\r\n            _events_engine.default.on(that._$pagesChooser, (0, _index.addNamespace)([_pointer.default.up, _click.name], that.Name + \"Pages\"), PAGER_PAGE_CLASS_SELECTOR, that._pageClickHandler);\r\n            (0, _accessibility.registerKeyboardAction)(\"pager\", that, that._$pagesChooser, PAGER_PAGE_CLASS_SELECTOR, clickPagesIndexAction)\r\n        }\r\n        for (var i = 0; i < pagesLength; i++) {\r\n            page = pages[i];\r\n            page.render(that._$pagesChooser, that.option(\"rtlEnabled\"));\r\n            that.setAria({\r\n                role: \"button\",\r\n                label: \"Page \" + page.value()\r\n            }, page.element());\r\n            (0, _accessibility.setTabIndex)(that, page.element());\r\n            if (pages[i + 1] && pages[i + 1].value() - page.value() > 1) {\r\n                $separator = (0, _renderer.default)(\"<div>\").text(\". . .\").addClass(PAGER_PAGE_SEPARATOR_CLASS);\r\n                that.option(\"rtlEnabled\") ? $separator.prependTo(that._$pagesChooser) : $separator.appendTo(that._$pagesChooser)\r\n            }\r\n        }\r\n    },\r\n    _calculateLightPagesWidth: function($pageIndex, pageCount) {\r\n        return Number($pageIndex.css(\"minWidth\").replace(\"px\", \"\")) + 10 * pageCount.toString().length\r\n    },\r\n    _renderLightPages: function() {\r\n        var that = this;\r\n        var pageCount = this.option(\"pageCount\");\r\n        var pageIndex = this.option(\"pageIndex\");\r\n        var clickAction = that._createAction(function() {\r\n            that.option(\"pageIndex\", pageCount)\r\n        });\r\n        var pagesCountText = this.option(\"pagesCountText\");\r\n        var $container = (0, _renderer.default)(\"<div>\").addClass(LIGHT_PAGES_CLASS).appendTo(this._$pagesChooser);\r\n        var $pageIndex = (0, _renderer.default)(\"<div>\").addClass(PAGER_PAGE_INDEX_CLASS).appendTo($container);\r\n        that._pageIndexEditor = that._createComponent($pageIndex, _number_box.default, {\r\n            value: pageIndex,\r\n            min: 1,\r\n            max: pageCount,\r\n            width: that._calculateLightPagesWidth($pageIndex, pageCount),\r\n            onValueChanged: function(e) {\r\n                if (null === e.value) {\r\n                    return\r\n                }\r\n                that.option(\"pageIndex\", e.value)\r\n            }\r\n        });\r\n        (0, _renderer.default)(\"<span>\").text(pagesCountText).addClass(PAGER_INFO_TEXT_CLASS + \" \" + PAGER_INFO_CLASS).appendTo($container);\r\n        var $pageCount = (0, _renderer.default)(\"<span>\").addClass(PAGER_PAGES_COUNT_CLASS).text(pageCount);\r\n        _events_engine.default.on($pageCount, (0, _index.addNamespace)(_click.name, that.Name + \"PagesCount\"), function(e) {\r\n            clickAction({\r\n                event: e\r\n            })\r\n        });\r\n        (0, _accessibility.registerKeyboardAction)(\"pager\", that, $pageCount, void 0, clickAction);\r\n        $pageCount.appendTo($container);\r\n        that.setAria({\r\n            role: \"button\",\r\n            label: \"Navigates to the last page\"\r\n        }, $pageCount)\r\n    },\r\n    _renderPagesChooser: function() {\r\n        var that = this;\r\n        var lightModeEnabled = that.option(\"lightModeEnabled\");\r\n        var pagesNavigatorVisible = that.option(\"pagesNavigatorVisible\");\r\n        var $element = that.$element();\r\n        that._$pagesChooser && that._$pagesChooser.remove();\r\n        if (!pagesNavigatorVisible) {\r\n            return\r\n        }\r\n        if (that._pages && 0 === that._pages.length) {\r\n            that.selectedPage = null;\r\n            return\r\n        }\r\n        that._$pagesChooser = (0, _renderer.default)(\"<div>\").addClass(PAGER_PAGES_CLASS).appendTo($element);\r\n        if (\"auto\" === pagesNavigatorVisible) {\r\n            that._$pagesChooser.css(\"visibility\", 1 === that.option(\"pageCount\") ? \"hidden\" : \"\")\r\n        }\r\n        if (!lightModeEnabled) {\r\n            that._renderInfo()\r\n        }\r\n        that._renderNavigateButton(\"prev\");\r\n        if (lightModeEnabled) {\r\n            that._renderLightPages()\r\n        } else {\r\n            that._renderPages(that._pages)\r\n        }\r\n        that._renderNavigateButton(\"next\");\r\n        that._updatePagesChooserWidth()\r\n    },\r\n    _renderPageSizes: function() {\r\n        var that = this;\r\n        var i;\r\n        var pageSizes = that.option(\"pageSizes\");\r\n        var pagesSizesLength = pageSizes && pageSizes.length;\r\n        var pageSizeValue;\r\n        var currentPageSize = that.option(\"pageSize\");\r\n        var $pageSize;\r\n        var clickPagesSizeAction = that._createAction(function(args) {\r\n            var e = args.event;\r\n            pageSizeValue = parseInt((0, _renderer.default)(e.target).text());\r\n            that.option(\"pageSize\", pageSizeValue)\r\n        });\r\n        _events_engine.default.on(that._$pagesSizeChooser, (0, _index.addNamespace)(_click.name, that.Name + \"PageSize\"), PAGER_PAGE_SIZE_CLASS_SELECTOR, function(e) {\r\n            clickPagesSizeAction({\r\n                event: e\r\n            })\r\n        });\r\n        (0, _accessibility.registerKeyboardAction)(\"pager\", that, that._$pagesSizeChooser, PAGER_PAGE_SIZE_CLASS_SELECTOR, clickPagesSizeAction);\r\n        for (i = 0; i < pagesSizesLength; i++) {\r\n            $pageSize = (0, _renderer.default)(\"<div>\").text(pageSizes[i]).addClass(PAGER_PAGE_SIZE_CLASS);\r\n            that.setAria({\r\n                role: \"button\",\r\n                label: \"Display \" + pageSizes[i] + \" items on page\"\r\n            }, $pageSize);\r\n            (0, _accessibility.setTabIndex)(that, $pageSize);\r\n            if (currentPageSize === pageSizes[i]) {\r\n                $pageSize.addClass(PAGER_SELECTION_CLASS)\r\n            }\r\n            that._$pagesSizeChooser.append($pageSize)\r\n        }\r\n    },\r\n    _calculateLightPageSizesWidth: function(pageSizes) {\r\n        return Number(this._$pagesSizeChooser.css(\"minWidth\").replace(\"px\", \"\")) + 10 * Math.max.apply(Math, pageSizes).toString().length\r\n    },\r\n    _renderLightPageSizes: function() {\r\n        var that = this;\r\n        var pageSizes = that.option(\"pageSizes\");\r\n        var $editor = (0, _renderer.default)(\"<div>\").appendTo(that._$pagesSizeChooser);\r\n        that._pageSizeEditor = that._createComponent($editor, _select_box.default, {\r\n            dataSource: pageSizes,\r\n            value: that.option(\"pageSize\"),\r\n            onSelectionChanged: function(e) {\r\n                that.option(\"pageSize\", e.selectedItem)\r\n            },\r\n            width: that._calculateLightPageSizesWidth(pageSizes)\r\n        })\r\n    },\r\n    _renderPagesSizeChooser: function() {\r\n        var that = this;\r\n        var pageSizes = that.option(\"pageSizes\");\r\n        var showPageSizes = that.option(\"showPageSizes\");\r\n        var pagesSizesLength = pageSizes && pageSizes.length;\r\n        var $element = that.$element();\r\n        that._$pagesSizeChooser && that._$pagesSizeChooser.remove();\r\n        if (!showPageSizes || !pagesSizesLength) {\r\n            return\r\n        }\r\n        that._$pagesSizeChooser = (0, _renderer.default)(\"<div>\").addClass(PAGER_PAGE_SIZES_CLASS).appendTo($element);\r\n        if (that.option(\"lightModeEnabled\")) {\r\n            that._renderLightPageSizes()\r\n        } else {\r\n            that._renderPageSizes()\r\n        }\r\n        that._pagesSizeChooserWidth = that._$pagesSizeChooser.width()\r\n    },\r\n    _renderInfo: function() {\r\n        var infoText = this.option(\"infoText\");\r\n        if (this.option(\"showInfo\") && (0, _type.isDefined)(infoText)) {\r\n            this._$info = (0, _renderer.default)(\"<div>\").css(\"display\", this._isInfoHide ? \"none\" : \"\").addClass(PAGER_INFO_CLASS).text((0, _string.format)(infoText, this.selectedPage && this.selectedPage.value(), this.option(\"pageCount\"), this.option(\"totalCount\"))).appendTo(this._$pagesChooser);\r\n            if (!this._isInfoHide) {\r\n                this._infoWidth = this._$info.outerWidth(true)\r\n            }\r\n        }\r\n    },\r\n    _renderNavigateButton: function(direction) {\r\n        var that = this;\r\n        var clickAction = that._createAction(function() {\r\n            that._nextPage(direction)\r\n        });\r\n        var $button;\r\n        if (that.option(\"showNavigationButtons\") || that.option(\"lightModeEnabled\")) {\r\n            $button = (0, _renderer.default)(\"<div>\").addClass(PAGER_NAVIGATE_BUTTON);\r\n            _events_engine.default.on($button, (0, _index.addNamespace)([_pointer.default.up, _click.name], that.Name + \"Pages\"), that._wrapClickAction(clickAction));\r\n            (0, _accessibility.registerKeyboardAction)(\"pager\", that, $button, void 0, clickAction);\r\n            that.setAria({\r\n                role: \"button\",\r\n                label: \"prev\" === direction ? \"Previous page\" : \" Next page\"\r\n            }, $button);\r\n            (0, _accessibility.setTabIndex)(that, $button);\r\n            if (that.option(\"rtlEnabled\")) {\r\n                $button.addClass(\"prev\" === direction ? PAGER_NEXT_BUTTON_CLASS : PAGER_PREV_BUTTON_CLASS);\r\n                $button.prependTo(this._$pagesChooser)\r\n            } else {\r\n                $button.addClass(\"prev\" === direction ? PAGER_PREV_BUTTON_CLASS : PAGER_NEXT_BUTTON_CLASS);\r\n                $button.appendTo(this._$pagesChooser)\r\n            }\r\n        }\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.$element().toggleClass(LIGHT_MODE_CLASS, this.option(\"lightModeEnabled\"));\r\n        this._toggleVisibility(this.option(\"visible\"));\r\n        this._updatePageSizes(true);\r\n        this._updatePages(true);\r\n        (0, _accessibility.restoreFocus)(this)\r\n    },\r\n    _initMarkup: function() {\r\n        var $element = this.$element();\r\n        $element.addClass(PAGER_CLASS);\r\n        var $pageSize = (0, _renderer.default)(\"<div>\").addClass(PAGER_PAGE_CLASS);\r\n        this._$pagesChooser = (0, _renderer.default)(\"<div>\").addClass(PAGER_PAGES_CLASS).append($pageSize).appendTo($element)\r\n    },\r\n    _render: function() {\r\n        this.option().lightModeEnabled = false;\r\n        this.callBase();\r\n        this._updateLightMode()\r\n    },\r\n    _updatePageSizes: function(forceRender) {\r\n        var lightModeEnabled = this.option(\"lightModeEnabled\");\r\n        var pageSize = this.option(\"pageSize\");\r\n        var pageSizes = this.option(\"pageSizes\");\r\n        if (lightModeEnabled) {\r\n            this._pageSizeEditor && this._pageSizeEditor.option({\r\n                value: pageSize,\r\n                dataSource: pageSizes,\r\n                width: this._calculateLightPageSizesWidth(pageSizes)\r\n            })\r\n        }\r\n        if (!lightModeEnabled || forceRender) {\r\n            this._renderPagesSizeChooser()\r\n        }\r\n    },\r\n    _updatePages: function(forceRender) {\r\n        var pageCount = this.option(\"pageCount\");\r\n        var pageIndex = this.option(\"pageIndex\");\r\n        var lightModeEnabled = this.option(\"lightModeEnabled\");\r\n        if (!lightModeEnabled) {\r\n            this._processSelectedPage(this.option(\"maxPagesCount\"), pageIndex, pageCount);\r\n            this._pages = this._getPages(this.selectedPage, pageCount);\r\n            this._selectPageByValue(pageIndex)\r\n        } else {\r\n            this._pageIndexEditor && this._pageIndexEditor.option({\r\n                value: pageIndex,\r\n                width: this._calculateLightPagesWidth(this._pageIndexEditor.$element(), pageCount)\r\n            })\r\n        }\r\n        if (!lightModeEnabled || forceRender) {\r\n            this._renderPagesChooser()\r\n        }\r\n        this._updateButtonsState(pageIndex)\r\n    },\r\n    _isPageIndexInvalid: function(direction, pageIndex) {\r\n        var isNextDirection = \"next\" === direction;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        if (rtlEnabled && isNextDirection || !rtlEnabled && !isNextDirection) {\r\n            return pageIndex <= 1\r\n        }\r\n        return pageIndex >= this.option(\"pageCount\")\r\n    },\r\n    _updateButtonsState: function(pageIndex) {\r\n        var nextButton = this.$element().find(\".\" + PAGER_NEXT_BUTTON_CLASS);\r\n        var prevButton = this.$element().find(\".\" + PAGER_PREV_BUTTON_CLASS);\r\n        nextButton.toggleClass(PAGER_BUTTON_DISABLE_CLASS, this._isPageIndexInvalid(\"next\", pageIndex));\r\n        prevButton.toggleClass(PAGER_BUTTON_DISABLE_CLASS, this._isPageIndexInvalid(\"prev\", pageIndex))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"visible\":\r\n                this._toggleVisibility(args.value);\r\n                break;\r\n            case \"pageIndex\":\r\n                var pageIndexChanged = this.option(\"pageIndexChanged\");\r\n                if (pageIndexChanged) {\r\n                    pageIndexChanged(args.value)\r\n                }\r\n                this._updatePages();\r\n                break;\r\n            case \"maxPagesCount\":\r\n            case \"pageCount\":\r\n            case \"totalCount\":\r\n            case \"hasKnownLastPage\":\r\n            case \"pagesNavigatorVisible\":\r\n            case \"showNavigationButtons\":\r\n                this._updatePages();\r\n                break;\r\n            case \"pageSize\":\r\n                var pageSizeChanged = this.option(\"pageSizeChanged\");\r\n                if (pageSizeChanged) {\r\n                    pageSizeChanged(args.value)\r\n                }\r\n                this._updatePageSizes();\r\n                break;\r\n            case \"pageSizes\":\r\n                this._updatePageSizes();\r\n                break;\r\n            case \"lightModeEnabled\":\r\n                this._renderContentImpl();\r\n                !args.value && this._updateLightMode();\r\n                break;\r\n            default:\r\n                this._invalidate()\r\n        }\r\n    },\r\n    _clean: function() {\r\n        if (this._$pagesChooser) {\r\n            _events_engine.default.off(this._$pagesChooser, (0, _index.addNamespace)([_pointer.default.up, _click.name], this.Name + \"Pages\"), PAGER_PAGE_CLASS_SELECTOR, this._pageClickHandler);\r\n            (0, _accessibility.registerKeyboardAction)(\"pager\", this, this._$pagesChooser, PAGER_PAGE_CLASS_SELECTOR, this._pageKeyDownHandler)\r\n        }\r\n        this.callBase()\r\n    },\r\n    _getMinPagerWidth: function() {\r\n        var pagesChooserWidth = (0, _type.isDefined)(this._pagesChooserWidth) ? this._pagesChooserWidth : 0;\r\n        var pagesSizeChooserWidth = (0, _type.isDefined)(this._pagesSizeChooserWidth) ? this._pagesSizeChooserWidth : 0;\r\n        return pagesChooserWidth + pagesSizeChooserWidth\r\n    },\r\n    _updatePagesChooserWidth: (0, _common.deferUpdater)(function() {\r\n        var lastPageWidth = this._pages && this._pages.length > 0 ? this._pages[this._pages.length - 1]._$page.width() : 0;\r\n        this._pagesChooserWidth = this._$pagesChooser.width() + lastPageWidth\r\n    }),\r\n    _updateLightMode: (0, _common.deferUpdater)(function() {\r\n        var that = this;\r\n        var width = this.$element().width();\r\n        var infoWidth = (0, _type.isDefined)(this._infoWidth) ? this._infoWidth : 0;\r\n        (0, _common.deferRender)(function() {\r\n            if (that._isInfoHide && width > that._getMinPagerWidth() + infoWidth) {\r\n                that._$info.css(\"display\", \"\");\r\n                that._updatePagesChooserWidth();\r\n                that._isInfoHide = false\r\n            }\r\n            if (!that._isInfoHide && width > that._getMinPagerWidth() - infoWidth && width < that._getMinPagerWidth()) {\r\n                that._$info.css(\"display\", \"none\");\r\n                that._updatePagesChooserWidth();\r\n                that._isInfoHide = true\r\n            }(0, _common.deferUpdate)(function() {\r\n                (0, _common.deferRender)(function() {\r\n                    if (that.option(\"lightModeEnabled\") && width > that._previousWidth) {\r\n                        that.option(\"lightModeEnabled\", false)\r\n                    } else {\r\n                        if (width < that._getMinPagerWidth()) {\r\n                            that.option(\"lightModeEnabled\", true)\r\n                        }\r\n                    }\r\n                    that._previousWidth = width\r\n                })\r\n            })\r\n        })\r\n    }),\r\n    _dimensionChanged: function() {\r\n        this._updateLightMode()\r\n    },\r\n    getHeight: function() {\r\n        return this.option(\"visible\") ? this.$element().outerHeight() : 0\r\n    }\r\n});\r\nvar _default = Pager;\r\nexports.default = _default;\r\n(0, _component_registrator.default)(\"dxPager\", Pager);\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/popover.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _window = require(\"../core/utils/window\");\r\nvar _element = require(\"../core/element\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _translator = require(\"../animation/translator\");\r\nvar _position = _interopRequireDefault(require(\"../animation/position\"));\r\nvar _type = require(\"../core/utils/type\");\r\nvar _math = require(\"../core/utils/math\");\r\nvar _index = require(\"../events/utils/index\");\r\nvar _popup = _interopRequireDefault(require(\"./popup\"));\r\nvar _position2 = require(\"../core/utils/position\");\r\nvar _popover_contants = require(\"./popover_contants\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar POPOVER_CLASS = \"dx-popover\";\r\nvar POPOVER_WRAPPER_CLASS = \"dx-popover-wrapper\";\r\nvar POPOVER_ARROW_CLASS = \"dx-popover-arrow\";\r\nvar POPOVER_WITHOUT_TITLE_CLASS = \"dx-popover-without-title\";\r\nvar POSITION_FLIP_MAP = {\r\n    left: \"right\",\r\n    top: \"bottom\",\r\n    right: \"left\",\r\n    bottom: \"top\",\r\n    center: \"center\"\r\n};\r\nvar WEIGHT_OF_SIDES = {\r\n    left: -1,\r\n    top: -1,\r\n    center: 0,\r\n    right: 1,\r\n    bottom: 1\r\n};\r\nvar POSITION_ALIASES = {\r\n    top: {\r\n        my: \"bottom center\",\r\n        at: \"top center\",\r\n        collision: \"fit flip\"\r\n    },\r\n    bottom: {\r\n        my: \"top center\",\r\n        at: \"bottom center\",\r\n        collision: \"fit flip\"\r\n    },\r\n    right: {\r\n        my: \"left center\",\r\n        at: \"right center\",\r\n        collision: \"flip fit\"\r\n    },\r\n    left: {\r\n        my: \"right center\",\r\n        at: \"left center\",\r\n        collision: \"flip fit\"\r\n    }\r\n};\r\nvar SIDE_BORDER_WIDTH_STYLES = {\r\n    left: \"borderLeftWidth\",\r\n    top: \"borderTopWidth\",\r\n    right: \"borderRightWidth\",\r\n    bottom: \"borderBottomWidth\"\r\n};\r\nvar getEventNameByOption = function(optionValue) {\r\n    return (0, _type.isObject)(optionValue) ? optionValue.name : optionValue\r\n};\r\nvar getEventName = function(that, optionName) {\r\n    var optionValue = that.option(optionName);\r\n    return getEventNameByOption(optionValue)\r\n};\r\nvar getEventDelay = function(that, optionName) {\r\n    var optionValue = that.option(optionName);\r\n    return (0, _type.isObject)(optionValue) && optionValue.delay\r\n};\r\nvar attachEvent = function(that, name) {\r\n    var target = that.option(\"target\");\r\n    var isSelector = (0, _type.isString)(target);\r\n    var event = getEventName(that, name + \"Event\");\r\n    if (!event || that.option(\"disabled\")) {\r\n        return\r\n    }\r\n    var eventName = (0, _index.addNamespace)(event, that.NAME);\r\n    var action = that._createAction(function() {\r\n        var delay = getEventDelay(that, name + \"Event\");\r\n        this._clearEventsTimeouts();\r\n        if (delay) {\r\n            this._timeouts[name] = setTimeout(function() {\r\n                that[name]()\r\n            }, delay)\r\n        } else {\r\n            that[name]()\r\n        }\r\n    }.bind(that), {\r\n        validatingTargetName: \"target\"\r\n    });\r\n    var handler = function(e) {\r\n        action({\r\n            event: e,\r\n            target: (0, _renderer.default)(e.currentTarget)\r\n        })\r\n    };\r\n    var EVENT_HANDLER_NAME = \"_\" + name + \"EventHandler\";\r\n    if (isSelector) {\r\n        that[EVENT_HANDLER_NAME] = handler;\r\n        _events_engine.default.on(_dom_adapter.default.getDocument(), eventName, target, handler)\r\n    } else {\r\n        var targetElement = (0, _element.getPublicElement)((0, _renderer.default)(target));\r\n        that[EVENT_HANDLER_NAME] = void 0;\r\n        _events_engine.default.on(targetElement, eventName, handler)\r\n    }\r\n};\r\nvar detachEvent = function(that, target, name, event) {\r\n    var eventName = event || getEventName(that, name + \"Event\");\r\n    if (!eventName) {\r\n        return\r\n    }\r\n    eventName = (0, _index.addNamespace)(eventName, that.NAME);\r\n    var EVENT_HANDLER_NAME = \"_\" + name + \"EventHandler\";\r\n    if (that[EVENT_HANDLER_NAME]) {\r\n        _events_engine.default.off(_dom_adapter.default.getDocument(), eventName, target, that[EVENT_HANDLER_NAME])\r\n    } else {\r\n        _events_engine.default.off((0, _element.getPublicElement)((0, _renderer.default)(target)), eventName)\r\n    }\r\n};\r\nvar Popover = _popup.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            target: window,\r\n            shading: false,\r\n            position: \"bottom\",\r\n            closeOnOutsideClick: true,\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    to: 0\r\n                }\r\n            },\r\n            showTitle: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            dragEnabled: false,\r\n            resizeEnabled: false,\r\n            fullScreen: false,\r\n            closeOnTargetScroll: true,\r\n            arrowPosition: \"\",\r\n            arrowOffset: 0,\r\n            boundaryOffset: {\r\n                h: _popover_contants.POPOVER_BOUNDARY_OFFSET,\r\n                v: _popover_contants.POPOVER_BOUNDARY_OFFSET\r\n            },\r\n            _fixedPosition: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return [{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                arrowPosition: {\r\n                    boundaryOffset: {\r\n                        h: 20,\r\n                        v: -10\r\n                    },\r\n                    collision: \"fit\"\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return !(0, _window.hasWindow)()\r\n            },\r\n            options: {\r\n                animation: null\r\n            }\r\n        }]\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderArrow();\r\n        this._timeouts = {};\r\n        this.$element().addClass(POPOVER_CLASS);\r\n        this.$wrapper().addClass(POPOVER_WRAPPER_CLASS)\r\n    },\r\n    _render: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._detachEvents(this.option(\"target\"));\r\n        this._attachEvents()\r\n    },\r\n    _detachEvents: function(target) {\r\n        detachEvent(this, target, \"show\");\r\n        detachEvent(this, target, \"hide\")\r\n    },\r\n    _attachEvents: function() {\r\n        attachEvent(this, \"show\");\r\n        attachEvent(this, \"hide\")\r\n    },\r\n    _renderArrow: function() {\r\n        this._$arrow = (0, _renderer.default)(\"<div>\").addClass(POPOVER_ARROW_CLASS).prependTo(this.$overlayContent())\r\n    },\r\n    _documentDownHandler: function(e) {\r\n        if (this._isOutsideClick(e)) {\r\n            return this.callBase(e)\r\n        }\r\n        return true\r\n    },\r\n    _isOutsideClick: function(e) {\r\n        return !(0, _renderer.default)(e.target).closest(this.option(\"target\")).length\r\n    },\r\n    _animate: function(animation) {\r\n        if (animation && animation.to && \"object\" === _typeof(animation.to)) {\r\n            (0, _extend.extend)(animation.to, {\r\n                position: this._getContainerPosition()\r\n            })\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _stopAnimation: function() {\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _renderTitle: function() {\r\n        this.$wrapper().toggleClass(POPOVER_WITHOUT_TITLE_CLASS, !this.option(\"showTitle\"));\r\n        this.callBase()\r\n    },\r\n    _renderPosition: function() {\r\n        this.callBase();\r\n        this._renderOverlayPosition()\r\n    },\r\n    _renderOverlayBoundaryOffset: _common.noop,\r\n    _renderOverlayPosition: function() {\r\n        this._resetOverlayPosition();\r\n        this._updateContentSize();\r\n        var contentPosition = this._getContainerPosition();\r\n        var resultLocation = _position.default.setup(this.$overlayContent(), contentPosition);\r\n        var positionSide = this._getSideByLocation(resultLocation);\r\n        this._togglePositionClass(\"dx-position-\" + positionSide);\r\n        this._toggleFlippedClass(resultLocation.h.flip, resultLocation.v.flip);\r\n        var isArrowVisible = this._isHorizontalSide() || this._isVerticalSide();\r\n        if (isArrowVisible) {\r\n            this._renderArrowPosition(positionSide)\r\n        }\r\n    },\r\n    _resetOverlayPosition: function() {\r\n        this._setContentHeight(true);\r\n        this._togglePositionClass(\"dx-position-\" + this._positionSide);\r\n        (0, _translator.move)(this.$overlayContent(), {\r\n            left: 0,\r\n            top: 0\r\n        });\r\n        this._$arrow.css({\r\n            top: \"auto\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            left: \"auto\"\r\n        })\r\n    },\r\n    _updateContentSize: function() {\r\n        if (!this.$content()) {\r\n            return\r\n        }\r\n        var containerLocation = _position.default.calculate(this.$overlayContent(), this._getContainerPosition());\r\n        if (containerLocation.h.oversize > 0 && this._isHorizontalSide() && !containerLocation.h.fit) {\r\n            var newContainerWidth = this.$overlayContent().width() - containerLocation.h.oversize;\r\n            this.$overlayContent().width(newContainerWidth)\r\n        }\r\n        if (containerLocation.v.oversize > 0 && this._isVerticalSide() && !containerLocation.v.fit) {\r\n            var newOverlayContentHeight = this.$overlayContent().height() - containerLocation.v.oversize;\r\n            var newPopupContentHeight = this.$content().height() - containerLocation.v.oversize;\r\n            this.$overlayContent().height(newOverlayContentHeight);\r\n            this.$content().height(newPopupContentHeight)\r\n        }\r\n    },\r\n    _getContainerPosition: function() {\r\n        var offset = (0, _common.pairToObject)(this._position.offset || \"\");\r\n        var hOffset = offset.h;\r\n        var vOffset = offset.v;\r\n        var isVerticalSide = this._isVerticalSide();\r\n        var isHorizontalSide = this._isHorizontalSide();\r\n        if (isVerticalSide || isHorizontalSide) {\r\n            var isPopoverInside = this._isPopoverInside();\r\n            var sign = (isPopoverInside ? -1 : 1) * WEIGHT_OF_SIDES[this._positionSide];\r\n            var arrowSize = isVerticalSide ? this._$arrow.height() : this._$arrow.width();\r\n            var arrowSizeCorrection = this._getContentBorderWidth(this._positionSide);\r\n            var arrowOffset = sign * (arrowSize - arrowSizeCorrection);\r\n            isVerticalSide ? vOffset += arrowOffset : hOffset += arrowOffset\r\n        }\r\n        return (0, _extend.extend)({}, this._position, {\r\n            offset: hOffset + \" \" + vOffset\r\n        })\r\n    },\r\n    _getContentBorderWidth: function(side) {\r\n        var borderWidth = this.$overlayContent().css(SIDE_BORDER_WIDTH_STYLES[side]);\r\n        return parseInt(borderWidth) || 0\r\n    },\r\n    _getSideByLocation: function(location) {\r\n        var isFlippedByVertical = location.v.flip;\r\n        var isFlippedByHorizontal = location.h.flip;\r\n        return this._isVerticalSide() && isFlippedByVertical || this._isHorizontalSide() && isFlippedByHorizontal || this._isPopoverInside() ? POSITION_FLIP_MAP[this._positionSide] : this._positionSide\r\n    },\r\n    _togglePositionClass: function(positionClass) {\r\n        this.$wrapper().removeClass(\"dx-position-left dx-position-right dx-position-top dx-position-bottom\").addClass(positionClass)\r\n    },\r\n    _toggleFlippedClass: function(isFlippedHorizontal, isFlippedVertical) {\r\n        this.$wrapper().toggleClass(\"dx-popover-flipped-horizontal\", isFlippedHorizontal).toggleClass(\"dx-popover-flipped-vertical\", isFlippedVertical)\r\n    },\r\n    _renderArrowPosition: function(side) {\r\n        var _$target$get;\r\n        var arrowRect = (0, _position2.getBoundingRect)(this._$arrow.get(0));\r\n        var arrowFlip = -(this._isVerticalSide(side) ? arrowRect.height : arrowRect.width);\r\n        this._$arrow.css(POSITION_FLIP_MAP[side], arrowFlip);\r\n        var axis = this._isVerticalSide(side) ? \"left\" : \"top\";\r\n        var sizeProperty = this._isVerticalSide(side) ? \"width\" : \"height\";\r\n        var $target = (0, _renderer.default)(this._position.of);\r\n        var targetOffset = _position.default.offset($target) || {\r\n            top: 0,\r\n            left: 0\r\n        };\r\n        var contentOffset = _position.default.offset(this.$overlayContent());\r\n        var arrowSize = arrowRect[sizeProperty];\r\n        var contentLocation = contentOffset[axis];\r\n        var contentSize = (0, _position2.getBoundingRect)(this.$overlayContent().get(0))[sizeProperty];\r\n        var targetLocation = targetOffset[axis];\r\n        var targetSize = null !== (_$target$get = $target.get(0)) && void 0 !== _$target$get && _$target$get.preventDefault ? 0 : (0, _position2.getBoundingRect)($target.get(0))[sizeProperty];\r\n        var min = Math.max(contentLocation, targetLocation);\r\n        var max = Math.min(contentLocation + contentSize, targetLocation + targetSize);\r\n        var arrowLocation;\r\n        if (\"start\" === this.option(\"arrowPosition\")) {\r\n            arrowLocation = min - contentLocation\r\n        } else {\r\n            if (\"end\" === this.option(\"arrowPosition\")) {\r\n                arrowLocation = max - contentLocation - arrowSize\r\n            } else {\r\n                arrowLocation = (min + max) / 2 - contentLocation - arrowSize / 2\r\n            }\r\n        }\r\n        var borderWidth = this._getContentBorderWidth(side);\r\n        var finalArrowLocation = (0, _math.fitIntoRange)(arrowLocation - borderWidth + this.option(\"arrowOffset\"), borderWidth, contentSize - arrowSize - 2 * borderWidth);\r\n        this._$arrow.css(axis, finalArrowLocation)\r\n    },\r\n    _isPopoverInside: function() {\r\n        var position = this._transformStringPosition(this.option(\"position\"), POSITION_ALIASES);\r\n        var my = _position.default.setup.normalizeAlign(position.my);\r\n        var at = _position.default.setup.normalizeAlign(position.at);\r\n        return my.h === at.h && my.v === at.v\r\n    },\r\n    _setContentHeight: function(fullUpdate) {\r\n        if (fullUpdate) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _renderWrapperPosition: function() {\r\n        if (this.option(\"shading\")) {\r\n            this.$wrapper().css({\r\n                top: 0,\r\n                left: 0\r\n            })\r\n        }\r\n    },\r\n    _renderWrapperDimensions: function() {\r\n        if (this.option(\"shading\")) {\r\n            this.$wrapper().css({\r\n                width: \"100%\",\r\n                height: \"100%\"\r\n            })\r\n        }\r\n    },\r\n    _normalizePosition: function() {\r\n        var position = (0, _extend.extend)({}, this._transformStringPosition(this.option(\"position\"), POSITION_ALIASES));\r\n        if (!position.of) {\r\n            position.of = this.option(\"target\")\r\n        }\r\n        if (!position.collision) {\r\n            position.collision = \"flip\"\r\n        }\r\n        if (!position.boundaryOffset) {\r\n            position.boundaryOffset = this.option(\"boundaryOffset\")\r\n        }\r\n        this._positionSide = this._getDisplaySide(position);\r\n        this._position = position\r\n    },\r\n    _getDisplaySide: function(position) {\r\n        var my = _position.default.setup.normalizeAlign(position.my);\r\n        var at = _position.default.setup.normalizeAlign(position.at);\r\n        var weightSign = WEIGHT_OF_SIDES[my.h] === WEIGHT_OF_SIDES[at.h] && WEIGHT_OF_SIDES[my.v] === WEIGHT_OF_SIDES[at.v] ? -1 : 1;\r\n        var horizontalWeight = Math.abs(WEIGHT_OF_SIDES[my.h] - weightSign * WEIGHT_OF_SIDES[at.h]);\r\n        var verticalWeight = Math.abs(WEIGHT_OF_SIDES[my.v] - weightSign * WEIGHT_OF_SIDES[at.v]);\r\n        return horizontalWeight > verticalWeight ? at.h : at.v\r\n    },\r\n    _isVerticalSide: function(side) {\r\n        side = side || this._positionSide;\r\n        return \"top\" === side || \"bottom\" === side\r\n    },\r\n    _isHorizontalSide: function(side) {\r\n        side = side || this._positionSide;\r\n        return \"left\" === side || \"right\" === side\r\n    },\r\n    _clearEventTimeout: function(name) {\r\n        clearTimeout(this._timeouts[name])\r\n    },\r\n    _clearEventsTimeouts: function() {\r\n        this._clearEventTimeout(\"show\");\r\n        this._clearEventTimeout(\"hide\")\r\n    },\r\n    _clean: function() {\r\n        this._detachEvents(this.option(\"target\"));\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"boundaryOffset\":\r\n            case \"arrowPosition\":\r\n            case \"arrowOffset\":\r\n                this._renderGeometry();\r\n                break;\r\n            case \"fullScreen\":\r\n                if (args.value) {\r\n                    this.option(\"fullScreen\", false)\r\n                }\r\n                break;\r\n            case \"target\":\r\n                args.previousValue && this._detachEvents(args.previousValue);\r\n                this.callBase(args);\r\n                break;\r\n            case \"showEvent\":\r\n            case \"hideEvent\":\r\n                var name = args.name.substring(0, 4);\r\n                var event = getEventNameByOption(args.previousValue);\r\n                this.hide();\r\n                detachEvent(this, this.option(\"target\"), name, event);\r\n                attachEvent(this, name);\r\n                break;\r\n            case \"visible\":\r\n                this._clearEventTimeout(args.value ? \"show\" : \"hide\");\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    show: function(target) {\r\n        if (target) {\r\n            this.option(\"target\", target)\r\n        }\r\n        return this.callBase()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxPopover\", Popover);\r\nvar _default = Popover;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/popover_contants.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.POPOVER_BOUNDARY_OFFSET = void 0;\r\nvar POPOVER_BOUNDARY_OFFSET = 10;\r\nexports.POPOVER_BOUNDARY_OFFSET = POPOVER_BOUNDARY_OFFSET;\r\n","/**\r\n * DevExtreme (ui/popup.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _translator = require(\"../animation/translator\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\nvar _element = require(\"../core/element\");\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _empty_template = require(\"../core/templates/empty_template\");\r\nvar _array = require(\"../core/utils/array\");\r\nvar _browser = _interopRequireDefault(require(\"../core/utils/browser\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _inflector = require(\"../core/utils/inflector\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _size = require(\"../core/utils/size\");\r\nvar _position = require(\"../core/utils/position\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _version = require(\"../core/utils/version\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _visibility_change = require(\"../events/visibility_change\");\r\nvar _message = _interopRequireDefault(require(\"../localization/message\"));\r\nvar _button = _interopRequireDefault(require(\"./button\"));\r\nvar _overlay = _interopRequireDefault(require(\"./overlay\"));\r\nvar _themes = require(\"./themes\");\r\nrequire(\"./toolbar/ui.toolbar.base\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar POPUP_CLASS = \"dx-popup\";\r\nvar POPUP_WRAPPER_CLASS = \"dx-popup-wrapper\";\r\nvar POPUP_FULL_SCREEN_CLASS = \"dx-popup-fullscreen\";\r\nvar POPUP_FULL_SCREEN_WIDTH_CLASS = \"dx-popup-fullscreen-width\";\r\nvar POPUP_NORMAL_CLASS = \"dx-popup-normal\";\r\nvar POPUP_CONTENT_CLASS = \"dx-popup-content\";\r\nvar POPUP_DRAGGABLE_CLASS = \"dx-popup-draggable\";\r\nvar POPUP_TITLE_CLASS = \"dx-popup-title\";\r\nvar POPUP_TITLE_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nvar POPUP_BOTTOM_CLASS = \"dx-popup-bottom\";\r\nvar POPUP_HAS_CLOSE_BUTTON_CLASS = \"dx-has-close-button\";\r\nvar TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\r\nvar POPUP_CONTENT_FLEX_HEIGHT_CLASS = \"dx-popup-flex-height\";\r\nvar POPUP_CONTENT_INHERIT_HEIGHT_CLASS = \"dx-popup-inherit-height\";\r\nvar ALLOWED_TOOLBAR_ITEM_ALIASES = [\"cancel\", \"clear\", \"done\"];\r\nvar BUTTON_DEFAULT_TYPE = \"default\";\r\nvar BUTTON_NORMAL_TYPE = \"normal\";\r\nvar BUTTON_TEXT_MODE = \"text\";\r\nvar BUTTON_CONTAINED_MODE = \"contained\";\r\nvar IS_IE11 = _browser.default.msie && 11 === parseInt(_browser.default.version);\r\nvar IS_OLD_SAFARI = _browser.default.safari && (0, _version.compare)(_browser.default.version, [11]) < 0;\r\nvar HEIGHT_STRATEGIES = {\r\n    \"static\": \"\",\r\n    inherit: POPUP_CONTENT_INHERIT_HEIGHT_CLASS,\r\n    flex: POPUP_CONTENT_FLEX_HEIGHT_CLASS\r\n};\r\nvar getButtonPlace = function(name) {\r\n    var device = _devices.default.current();\r\n    var platform = device.platform;\r\n    var toolbar = \"bottom\";\r\n    var location = \"before\";\r\n    if (\"ios\" === platform) {\r\n        switch (name) {\r\n            case \"cancel\":\r\n                toolbar = \"top\";\r\n                break;\r\n            case \"clear\":\r\n                toolbar = \"top\";\r\n                location = \"after\";\r\n                break;\r\n            case \"done\":\r\n                location = \"after\"\r\n        }\r\n    } else {\r\n        if (\"android\" === platform && device.version && parseInt(device.version[0]) > 4) {\r\n            switch (name) {\r\n                case \"cancel\":\r\n                    location = \"after\";\r\n                    break;\r\n                case \"done\":\r\n                    location = \"after\"\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        toolbar: toolbar,\r\n        location: location\r\n    }\r\n};\r\nvar Popup = _overlay.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            fullScreen: false,\r\n            title: \"\",\r\n            showTitle: true,\r\n            titleTemplate: \"title\",\r\n            onTitleRendered: null,\r\n            dragEnabled: false,\r\n            toolbarItems: [],\r\n            showCloseButton: false,\r\n            bottomTemplate: \"bottom\",\r\n            useDefaultToolbarButtons: false,\r\n            useFlatToolbarButtons: false,\r\n            autoResizeEnabled: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = (0, _themes.current)();\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                animation: this._iosAnimation\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                animation: this._androidAnimation\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                showCloseButton: true\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return \"desktop\" === _devices.default.real().deviceType && \"generic\" === _device.platform\r\n            },\r\n            options: {\r\n                dragEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return (0, _themes.isMaterial)(themeName)\r\n            },\r\n            options: {\r\n                useDefaultToolbarButtons: true,\r\n                useFlatToolbarButtons: true\r\n            }\r\n        }])\r\n    },\r\n    _iosAnimation: {\r\n        show: {\r\n            type: \"slide\",\r\n            duration: 400,\r\n            from: {\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"bottom\"\r\n                }\r\n            },\r\n            to: {\r\n                position: {\r\n                    my: \"center\",\r\n                    at: \"center\"\r\n                }\r\n            }\r\n        },\r\n        hide: {\r\n            type: \"slide\",\r\n            duration: 400,\r\n            from: {\r\n                opacity: 1,\r\n                position: {\r\n                    my: \"center\",\r\n                    at: \"center\"\r\n                }\r\n            },\r\n            to: {\r\n                opacity: 1,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"bottom\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _androidAnimation: function() {\r\n        var fullScreenConfig = {\r\n            show: {\r\n                type: \"slide\",\r\n                duration: 300,\r\n                from: {\r\n                    top: \"30%\",\r\n                    opacity: 0\r\n                },\r\n                to: {\r\n                    top: 0,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            hide: {\r\n                type: \"slide\",\r\n                duration: 300,\r\n                from: {\r\n                    top: 0,\r\n                    opacity: 1\r\n                },\r\n                to: {\r\n                    top: \"30%\",\r\n                    opacity: 0\r\n                }\r\n            }\r\n        };\r\n        var defaultConfig = {\r\n            show: {\r\n                type: \"fade\",\r\n                duration: 400,\r\n                from: 0,\r\n                to: 1\r\n            },\r\n            hide: {\r\n                type: \"fade\",\r\n                duration: 400,\r\n                from: 1,\r\n                to: 0\r\n            }\r\n        };\r\n        return this.option(\"fullScreen\") ? fullScreenConfig : defaultConfig\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(POPUP_CLASS);\r\n        this.$wrapper().addClass(POPUP_WRAPPER_CLASS);\r\n        this._$popupContent = this._$content.wrapInner((0, _renderer.default)(\"<div>\").addClass(POPUP_CONTENT_CLASS)).children().eq(0)\r\n    },\r\n    _render: function() {\r\n        var isFullscreen = this.option(\"fullScreen\");\r\n        this._toggleFullScreenClass(isFullscreen);\r\n        this.callBase()\r\n    },\r\n    _toggleFullScreenClass: function(value) {\r\n        this.$overlayContent().toggleClass(POPUP_FULL_SCREEN_CLASS, value).toggleClass(POPUP_NORMAL_CLASS, !value)\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            title: new _empty_template.EmptyTemplate,\r\n            bottom: new _empty_template.EmptyTemplate\r\n        })\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderTitle();\r\n        this.callBase();\r\n        this._renderBottom()\r\n    },\r\n    _renderTitle: function() {\r\n        var items = this._getToolbarItems(\"top\");\r\n        var titleText = this.option(\"title\");\r\n        var showTitle = this.option(\"showTitle\");\r\n        if (showTitle && !!titleText) {\r\n            items.unshift({\r\n                location: _devices.default.current().ios ? \"center\" : \"before\",\r\n                text: titleText\r\n            })\r\n        }\r\n        if (showTitle || items.length > 0) {\r\n            this._$title && this._$title.remove();\r\n            var $title = (0, _renderer.default)(\"<div>\").addClass(POPUP_TITLE_CLASS).insertBefore(this.$content());\r\n            this._$title = this._renderTemplateByType(\"titleTemplate\", items, $title).addClass(POPUP_TITLE_CLASS);\r\n            this._renderDrag();\r\n            this._executeTitleRenderAction(this._$title);\r\n            this._$title.toggleClass(POPUP_HAS_CLOSE_BUTTON_CLASS, this._hasCloseButton())\r\n        } else {\r\n            if (this._$title) {\r\n                this._$title.detach()\r\n            }\r\n        }\r\n    },\r\n    _renderTemplateByType: function(optionName, data, $container, additionalToolbarOptions) {\r\n        var template = this._getTemplateByOption(optionName);\r\n        var toolbarTemplate = template instanceof _empty_template.EmptyTemplate;\r\n        if (toolbarTemplate) {\r\n            var integrationOptions = (0, _extend.extend)({}, this.option(\"integrationOptions\"), {\r\n                skipTemplates: [\"content\", \"title\"]\r\n            });\r\n            var toolbarOptions = (0, _extend.extend)(additionalToolbarOptions, {\r\n                items: data,\r\n                rtlEnabled: this.option(\"rtlEnabled\"),\r\n                useDefaultButtons: this.option(\"useDefaultToolbarButtons\"),\r\n                useFlatButtons: this.option(\"useFlatToolbarButtons\"),\r\n                integrationOptions: integrationOptions\r\n            });\r\n            this._getTemplate(\"dx-polymorph-widget\").render({\r\n                container: $container,\r\n                model: {\r\n                    widget: \"dxToolbarBase\",\r\n                    options: toolbarOptions\r\n                }\r\n            });\r\n            var $toolbar = $container.children(\"div\");\r\n            $container.replaceWith($toolbar);\r\n            return $toolbar\r\n        } else {\r\n            var $result = (0, _renderer.default)(template.render({\r\n                container: (0, _element.getPublicElement)($container)\r\n            }));\r\n            if ($result.hasClass(TEMPLATE_WRAPPER_CLASS)) {\r\n                $container.replaceWith($result);\r\n                $container = $result\r\n            }\r\n            return $container\r\n        }\r\n    },\r\n    _executeTitleRenderAction: function($titleElement) {\r\n        this._getTitleRenderAction()({\r\n            titleElement: (0, _element.getPublicElement)($titleElement)\r\n        })\r\n    },\r\n    _getTitleRenderAction: function() {\r\n        return this._titleRenderAction || this._createTitleRenderAction()\r\n    },\r\n    _createTitleRenderAction: function() {\r\n        return this._titleRenderAction = this._createActionByOption(\"onTitleRendered\", {\r\n            element: this.element(),\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _getCloseButton: function() {\r\n        return {\r\n            toolbar: \"top\",\r\n            location: \"after\",\r\n            template: this._getCloseButtonRenderer()\r\n        }\r\n    },\r\n    _getCloseButtonRenderer: function() {\r\n        var _this = this;\r\n        return function(_, __, container) {\r\n            var $button = (0, _renderer.default)(\"<div>\").addClass(POPUP_TITLE_CLOSEBUTTON_CLASS);\r\n            _this._createComponent($button, _button.default, {\r\n                icon: \"close\",\r\n                onClick: _this._createToolbarItemAction(void 0),\r\n                stylingMode: \"text\",\r\n                integrationOptions: {}\r\n            });\r\n            (0, _renderer.default)(container).append($button)\r\n        }\r\n    },\r\n    _getToolbarItems: function(toolbar) {\r\n        var _this2 = this;\r\n        var toolbarItems = this.option(\"toolbarItems\");\r\n        var toolbarsItems = [];\r\n        this._toolbarItemClasses = [];\r\n        var currentPlatform = _devices.default.current().platform;\r\n        var index = 0;\r\n        (0, _iterator.each)(toolbarItems, function(_, data) {\r\n            var isShortcut = (0, _type.isDefined)(data.shortcut);\r\n            var item = isShortcut ? getButtonPlace(data.shortcut) : data;\r\n            if (isShortcut && \"ios\" === currentPlatform && index < 2) {\r\n                item.toolbar = \"top\";\r\n                index++\r\n            }\r\n            item.toolbar = data.toolbar || item.toolbar || \"top\";\r\n            if (item && item.toolbar === toolbar) {\r\n                if (isShortcut) {\r\n                    (0, _extend.extend)(item, {\r\n                        location: data.location\r\n                    }, _this2._getToolbarItemByAlias(data))\r\n                }\r\n                var isLTROrder = \"generic\" === currentPlatform;\r\n                if (\"done\" === data.shortcut && isLTROrder || \"cancel\" === data.shortcut && !isLTROrder) {\r\n                    toolbarsItems.unshift(item)\r\n                } else {\r\n                    toolbarsItems.push(item)\r\n                }\r\n            }\r\n        });\r\n        if (\"top\" === toolbar && this._hasCloseButton()) {\r\n            toolbarsItems.push(this._getCloseButton())\r\n        }\r\n        return toolbarsItems\r\n    },\r\n    _hasCloseButton: function() {\r\n        return this.option(\"showCloseButton\") && this.option(\"showTitle\")\r\n    },\r\n    _getLocalizationKey: function(itemType) {\r\n        return \"done\" === itemType.toLowerCase() ? \"OK\" : (0, _inflector.camelize)(itemType, true)\r\n    },\r\n    _getToolbarItemByAlias: function(data) {\r\n        var that = this;\r\n        var itemType = data.shortcut;\r\n        if ((0, _array.inArray)(itemType, ALLOWED_TOOLBAR_ITEM_ALIASES) < 0) {\r\n            return false\r\n        }\r\n        var itemConfig = (0, _extend.extend)({\r\n            text: _message.default.format(this._getLocalizationKey(itemType)),\r\n            onClick: this._createToolbarItemAction(data.onClick),\r\n            integrationOptions: {},\r\n            type: that.option(\"useDefaultToolbarButtons\") ? BUTTON_DEFAULT_TYPE : BUTTON_NORMAL_TYPE,\r\n            stylingMode: that.option(\"useFlatToolbarButtons\") ? BUTTON_TEXT_MODE : BUTTON_CONTAINED_MODE\r\n        }, data.options || {});\r\n        var itemClass = POPUP_CLASS + \"-\" + itemType;\r\n        this._toolbarItemClasses.push(itemClass);\r\n        return {\r\n            template: function(_, __, container) {\r\n                var $toolbarItem = (0, _renderer.default)(\"<div>\").addClass(itemClass).appendTo(container);\r\n                that._createComponent($toolbarItem, _button.default, itemConfig)\r\n            }\r\n        }\r\n    },\r\n    _createToolbarItemAction: function(clickAction) {\r\n        return this._createAction(clickAction, {\r\n            afterExecute: function(e) {\r\n                e.component.hide()\r\n            }\r\n        })\r\n    },\r\n    _renderBottom: function() {\r\n        var items = this._getToolbarItems(\"bottom\");\r\n        if (items.length) {\r\n            this._$bottom && this._$bottom.remove();\r\n            var $bottom = (0, _renderer.default)(\"<div>\").addClass(POPUP_BOTTOM_CLASS).insertAfter(this.$content());\r\n            this._$bottom = this._renderTemplateByType(\"bottomTemplate\", items, $bottom, {\r\n                compactMode: true\r\n            }).addClass(POPUP_BOTTOM_CLASS);\r\n            this._toggleClasses()\r\n        } else {\r\n            this._$bottom && this._$bottom.detach()\r\n        }\r\n    },\r\n    _toggleClasses: function() {\r\n        var _this3 = this;\r\n        var aliases = ALLOWED_TOOLBAR_ITEM_ALIASES;\r\n        (0, _iterator.each)(aliases, function(_, alias) {\r\n            var className = POPUP_CLASS + \"-\" + alias;\r\n            if ((0, _array.inArray)(className, _this3._toolbarItemClasses) >= 0) {\r\n                _this3.$wrapper().addClass(className + \"-visible\");\r\n                _this3._$bottom.addClass(className)\r\n            } else {\r\n                _this3.$wrapper().removeClass(className + \"-visible\");\r\n                _this3._$bottom.removeClass(className)\r\n            }\r\n        })\r\n    },\r\n    _getContainer: function() {\r\n        if (this.option(\"fullScreen\")) {\r\n            return (0, _renderer.default)(window)\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _getDragTarget: function() {\r\n        return this.topToolbar()\r\n    },\r\n    _renderGeometryImpl: function(isDimensionChanged) {\r\n        if (!isDimensionChanged) {\r\n            this._resetContentHeight()\r\n        }\r\n        this.callBase.apply(this, arguments);\r\n        this._setContentHeight()\r\n    },\r\n    _resetContentHeight: function() {\r\n        this.$content().css({\r\n            height: \"auto\",\r\n            maxHeight: \"none\"\r\n        })\r\n    },\r\n    _renderDrag: function() {\r\n        this.callBase();\r\n        this.$overlayContent().toggleClass(POPUP_DRAGGABLE_CLASS, this.option(\"dragEnabled\"))\r\n    },\r\n    _renderResize: function() {\r\n        this.callBase();\r\n        this._resizable.option(\"onResize\", function() {\r\n            this._setContentHeight();\r\n            this._actions.onResize(arguments)\r\n        }.bind(this))\r\n    },\r\n    _setContentHeight: function() {\r\n        (this.option(\"forceApplyBindings\") || _common.noop)();\r\n        var overlayContent = this.$overlayContent().get(0);\r\n        var currentHeightStrategyClass = this._chooseHeightStrategy(overlayContent);\r\n        this.$content().css(this._getHeightCssStyles(currentHeightStrategyClass, overlayContent));\r\n        this._setHeightClasses(this.$overlayContent(), currentHeightStrategyClass)\r\n    },\r\n    _heightStrategyChangeOffset: function(currentHeightStrategyClass, popupVerticalPaddings) {\r\n        return currentHeightStrategyClass === HEIGHT_STRATEGIES.flex ? -popupVerticalPaddings : 0\r\n    },\r\n    _chooseHeightStrategy: function(overlayContent) {\r\n        var isAutoWidth = \"auto\" === overlayContent.style.width || \"\" === overlayContent.style.width;\r\n        var currentHeightStrategyClass = HEIGHT_STRATEGIES.static;\r\n        if (this._isAutoHeight() && this.option(\"autoResizeEnabled\")) {\r\n            if (isAutoWidth || IS_OLD_SAFARI) {\r\n                if (!IS_IE11) {\r\n                    currentHeightStrategyClass = HEIGHT_STRATEGIES.inherit\r\n                }\r\n            } else {\r\n                currentHeightStrategyClass = HEIGHT_STRATEGIES.flex\r\n            }\r\n        }\r\n        return currentHeightStrategyClass\r\n    },\r\n    _getHeightCssStyles: function(currentHeightStrategyClass, overlayContent) {\r\n        var cssStyles = {};\r\n        var contentMaxHeight = this._getOptionValue(\"maxHeight\", overlayContent);\r\n        var contentMinHeight = this._getOptionValue(\"minHeight\", overlayContent);\r\n        var popupHeightParts = this._splitPopupHeight();\r\n        var toolbarsAndVerticalOffsetsHeight = popupHeightParts.header + popupHeightParts.footer + popupHeightParts.contentVerticalOffsets + popupHeightParts.popupVerticalOffsets + this._heightStrategyChangeOffset(currentHeightStrategyClass, popupHeightParts.popupVerticalPaddings);\r\n        if (currentHeightStrategyClass === HEIGHT_STRATEGIES.static) {\r\n            if (!this._isAutoHeight() || contentMaxHeight || contentMinHeight) {\r\n                var overlayHeight = this.option(\"fullScreen\") ? Math.min((0, _position.getBoundingRect)(overlayContent).height, (0, _window.getWindow)().innerHeight) : (0, _position.getBoundingRect)(overlayContent).height;\r\n                var contentHeight = overlayHeight - toolbarsAndVerticalOffsetsHeight;\r\n                cssStyles = {\r\n                    height: Math.max(0, contentHeight),\r\n                    minHeight: \"auto\",\r\n                    maxHeight: \"auto\"\r\n                }\r\n            }\r\n        } else {\r\n            var container = (0, _renderer.default)(this._getContainer()).get(0);\r\n            var maxHeightValue = (0, _size.addOffsetToMaxHeight)(contentMaxHeight, -toolbarsAndVerticalOffsetsHeight, container);\r\n            var minHeightValue = (0, _size.addOffsetToMinHeight)(contentMinHeight, -toolbarsAndVerticalOffsetsHeight, container);\r\n            cssStyles = {\r\n                height: \"auto\",\r\n                minHeight: minHeightValue,\r\n                maxHeight: maxHeightValue\r\n            }\r\n        }\r\n        return cssStyles\r\n    },\r\n    _setHeightClasses: function($container, currentClass) {\r\n        var excessClasses = \"\";\r\n        for (var name in HEIGHT_STRATEGIES) {\r\n            if (HEIGHT_STRATEGIES[name] !== currentClass) {\r\n                excessClasses += \" \" + HEIGHT_STRATEGIES[name]\r\n            }\r\n        }\r\n        $container.removeClass(excessClasses).addClass(currentClass)\r\n    },\r\n    _isAutoHeight: function() {\r\n        return \"auto\" === this.$overlayContent().get(0).style.height\r\n    },\r\n    _splitPopupHeight: function() {\r\n        var topToolbar = this.topToolbar();\r\n        var bottomToolbar = this.bottomToolbar();\r\n        return {\r\n            header: (0, _size.getVisibleHeight)(topToolbar && topToolbar.get(0)),\r\n            footer: (0, _size.getVisibleHeight)(bottomToolbar && bottomToolbar.get(0)),\r\n            contentVerticalOffsets: (0, _size.getVerticalOffsets)(this.$overlayContent().get(0), true),\r\n            popupVerticalOffsets: (0, _size.getVerticalOffsets)(this.$content().get(0), true),\r\n            popupVerticalPaddings: (0, _size.getVerticalOffsets)(this.$content().get(0), false)\r\n        }\r\n    },\r\n    _shouldFixBodyPosition: function() {\r\n        return this.callBase() || this.option(\"fullScreen\")\r\n    },\r\n    _toggleSafariFullScreen: function(value) {\r\n        var toggleFullScreenBeforeShown = this._shouldFixBodyPosition() && value && !this._isShown;\r\n        if (toggleFullScreenBeforeShown) {\r\n            this._bodyScrollTop = value ? window.pageYOffset : void 0\r\n        } else {\r\n            this._toggleSafariScrolling(!value)\r\n        }\r\n    },\r\n    _renderDimensions: function() {\r\n        if (this.option(\"fullScreen\")) {\r\n            this.$overlayContent().css({\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                minWidth: \"\",\r\n                maxWidth: \"\",\r\n                minHeight: \"\",\r\n                maxHeight: \"\"\r\n            })\r\n        } else {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n        if ((0, _window.hasWindow)()) {\r\n            this._renderFullscreenWidthClass()\r\n        }\r\n    },\r\n    _renderFullscreenWidthClass: function() {\r\n        this.$overlayContent().toggleClass(POPUP_FULL_SCREEN_WIDTH_CLASS, this.$overlayContent().outerWidth() === (0, _renderer.default)(window).width())\r\n    },\r\n    refreshPosition: function() {\r\n        this._renderPosition()\r\n    },\r\n    _renderPosition: function() {\r\n        if (this.option(\"fullScreen\")) {\r\n            (0, _translator.move)(this.$overlayContent(), {\r\n                top: 0,\r\n                left: 0\r\n            })\r\n        } else {\r\n            (this.option(\"forceApplyBindings\") || _common.noop)();\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showTitle\":\r\n            case \"title\":\r\n            case \"titleTemplate\":\r\n                this._renderTitle();\r\n                this._renderGeometry();\r\n                (0, _visibility_change.triggerResizeEvent)(this.$overlayContent());\r\n                break;\r\n            case \"bottomTemplate\":\r\n                this._renderBottom();\r\n                this._renderGeometry();\r\n                (0, _visibility_change.triggerResizeEvent)(this.$overlayContent());\r\n                break;\r\n            case \"onTitleRendered\":\r\n                this._createTitleRenderAction(args.value);\r\n                break;\r\n            case \"toolbarItems\":\r\n            case \"useDefaultToolbarButtons\":\r\n            case \"useFlatToolbarButtons\":\r\n                var shouldRenderGeometry = !args.fullName.match(/^toolbarItems((\\[\\d+\\])(\\.(options|visible).*)?)?$/);\r\n                this._renderTitle();\r\n                this._renderBottom();\r\n                if (shouldRenderGeometry) {\r\n                    this._renderGeometry();\r\n                    (0, _visibility_change.triggerResizeEvent)(this.$overlayContent())\r\n                }\r\n                break;\r\n            case \"dragEnabled\":\r\n                this._renderDrag();\r\n                break;\r\n            case \"autoResizeEnabled\":\r\n                this._renderGeometry();\r\n                (0, _visibility_change.triggerResizeEvent)(this.$overlayContent());\r\n                break;\r\n            case \"fullScreen\":\r\n                this._toggleFullScreenClass(args.value);\r\n                this._toggleSafariFullScreen(args.value);\r\n                this._renderGeometry();\r\n                (0, _visibility_change.triggerResizeEvent)(this.$overlayContent());\r\n                break;\r\n            case \"showCloseButton\":\r\n                this._renderTitle();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    bottomToolbar: function() {\r\n        return this._$bottom\r\n    },\r\n    topToolbar: function() {\r\n        return this._$title\r\n    },\r\n    $content: function() {\r\n        return this._$popupContent\r\n    },\r\n    content: function() {\r\n        return (0, _element.getPublicElement)(this.$content())\r\n    },\r\n    $overlayContent: function() {\r\n        return this._$content\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxPopup\", Popup);\r\nvar _default = Popup;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/radio_group/radio_button.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _utils = require(\"../widget/utils.ink_ripple\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _click = require(\"../../events/click\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar RADIO_BUTTON_CLASS = \"dx-radiobutton\";\r\nvar RADIO_BUTTON_ICON_CLASS = \"dx-radiobutton-icon\";\r\nvar RADIO_BUTTON_ICON_DOT_CLASS = \"dx-radiobutton-icon-dot\";\r\nvar RADIO_BUTTON_CHECKED_CLASS = \"dx-radiobutton-checked\";\r\nvar RADIO_BUTTON_ICON_CHECKED_CLASS = \"dx-radiobutton-icon-checked\";\r\nvar RadioButton = _editor.default.inherit({\r\n    _supportedKeys: function() {\r\n        var click = function(e) {\r\n            e.preventDefault();\r\n            this._clickAction({\r\n                event: e\r\n            })\r\n        };\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            space: click\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            activeStateEnabled: true,\r\n            value: false,\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _canValueBeChangedByClick: function() {\r\n        return true\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RADIO_BUTTON_CLASS)\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderIcon();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this._renderCheckedState(this.option(\"value\"));\r\n        this._renderClick();\r\n        this.setAria(\"role\", \"radio\")\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = (0, _utils.render)({\r\n            waveSizeCoefficient: 3.3,\r\n            useHoldAnimation: false,\r\n            wavesNumber: 2,\r\n            isCentered: true\r\n        })\r\n    },\r\n    _renderInkWave: function(element, dxEvent, doRender, waveIndex) {\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: element,\r\n            event: dxEvent,\r\n            wave: waveIndex\r\n        };\r\n        if (doRender) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _updateFocusState: function(e, value) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$icon, e, value, 0)\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$icon, e, value, 1)\r\n    },\r\n    _renderIcon: function() {\r\n        this._$icon = (0, _renderer.default)(\"<div>\").addClass(RADIO_BUTTON_ICON_CLASS);\r\n        (0, _renderer.default)(\"<div>\").addClass(RADIO_BUTTON_ICON_DOT_CLASS).appendTo(this._$icon);\r\n        this.$element().append(this._$icon)\r\n    },\r\n    _renderCheckedState: function(checked) {\r\n        this.$element().toggleClass(RADIO_BUTTON_CHECKED_CLASS, checked).find(\".\" + RADIO_BUTTON_ICON_CLASS).toggleClass(RADIO_BUTTON_ICON_CHECKED_CLASS, checked);\r\n        this.setAria(\"checked\", checked)\r\n    },\r\n    _renderClick: function() {\r\n        var eventName = (0, _index.addNamespace)(_click.name, this.NAME);\r\n        this._clickAction = this._createAction(function(args) {\r\n            this._clickHandler(args.event)\r\n        }.bind(this));\r\n        _events_engine.default.off(this.$element(), eventName);\r\n        _events_engine.default.on(this.$element(), eventName, function(e) {\r\n            this._clickAction({\r\n                event: e\r\n            })\r\n        }.bind(this))\r\n    },\r\n    _clickHandler: function(e) {\r\n        this._saveValueChangeEvent(e);\r\n        this.option(\"value\", true)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                this._renderCheckedState(args.value);\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        delete this._inkRipple;\r\n        this.callBase()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxRadioButton\", RadioButton);\r\nvar _default = RadioButton;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/resizable.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _translator = require(\"../animation/translator\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _dom_component = _interopRequireDefault(require(\"../core/dom_component\"));\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _array = require(\"../core/utils/array\");\r\nvar _common = require(\"../core/utils/common\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _math = require(\"../core/utils/math\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _drag = require(\"../events/drag\");\r\nvar _position = require(\"../core/utils/position\");\r\nvar _index = require(\"../events/utils/index\");\r\nvar _visibility_change = require(\"../events/visibility_change\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar RESIZABLE = \"dxResizable\";\r\nvar RESIZABLE_CLASS = \"dx-resizable\";\r\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\r\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\r\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\r\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\r\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\r\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\r\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\r\nvar DRAGSTART_START_EVENT_NAME = (0, _index.addNamespace)(_drag.start, RESIZABLE);\r\nvar DRAGSTART_EVENT_NAME = (0, _index.addNamespace)(_drag.move, RESIZABLE);\r\nvar DRAGSTART_END_EVENT_NAME = (0, _index.addNamespace)(_drag.end, RESIZABLE);\r\nvar SIDE_BORDER_WIDTH_STYLES = {\r\n    left: \"borderLeftWidth\",\r\n    top: \"borderTopWidth\",\r\n    right: \"borderRightWidth\",\r\n    bottom: \"borderBottomWidth\"\r\n};\r\nvar Resizable = _dom_component.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            handles: \"all\",\r\n            step: \"1\",\r\n            stepPrecision: \"simple\",\r\n            area: void 0,\r\n            minWidth: 30,\r\n            maxWidth: 1 / 0,\r\n            minHeight: 30,\r\n            maxHeight: 1 / 0,\r\n            onResizeStart: null,\r\n            onResize: null,\r\n            onResizeEnd: null,\r\n            roundStepValue: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESIZABLE_CLASS)\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderHandles()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderActions()\r\n    },\r\n    _renderActions: function() {\r\n        this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\r\n        this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\r\n        this._resizeAction = this._createActionByOption(\"onResize\")\r\n    },\r\n    _renderHandles: function() {\r\n        var _this = this;\r\n        this._handles = [];\r\n        var handles = this.option(\"handles\");\r\n        if (\"none\" === handles) {\r\n            return\r\n        }\r\n        var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\r\n        (0, _iterator.each)(directions, function(index, handleName) {\r\n            _this._renderHandle(handleName)\r\n        });\r\n        (0, _array.inArray)(\"bottom\", directions) + 1 && (0, _array.inArray)(\"right\", directions) + 1 && this._renderHandle(\"corner-bottom-right\");\r\n        (0, _array.inArray)(\"bottom\", directions) + 1 && (0, _array.inArray)(\"left\", directions) + 1 && this._renderHandle(\"corner-bottom-left\");\r\n        (0, _array.inArray)(\"top\", directions) + 1 && (0, _array.inArray)(\"right\", directions) + 1 && this._renderHandle(\"corner-top-right\");\r\n        (0, _array.inArray)(\"top\", directions) + 1 && (0, _array.inArray)(\"left\", directions) + 1 && this._renderHandle(\"corner-top-left\");\r\n        this._attachEventHandlers()\r\n    },\r\n    _renderHandle: function(handleName) {\r\n        var $handle = (0, _renderer.default)(\"<div>\").addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo(this.$element());\r\n        this._handles.push($handle)\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var handlers = {};\r\n        handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\r\n        handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        this._handles.forEach(function(handleElement) {\r\n            _events_engine.default.on(handleElement, handlers, {\r\n                direction: \"both\",\r\n                immediate: true\r\n            })\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        this._handles.forEach(function(handleElement) {\r\n            _events_engine.default.off(handleElement)\r\n        })\r\n    },\r\n    _toggleEventHandlers: function(shouldAttachEvents) {\r\n        shouldAttachEvents ? this._attachEventHandlers() : this._detachEventHandlers()\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this._toggleResizingClass(true);\r\n        this._movingSides = this._getMovingSides(e);\r\n        this._elementLocation = (0, _translator.locate)($element);\r\n        var elementRect = (0, _position.getBoundingRect)($element.get(0));\r\n        this._elementSize = {\r\n            width: elementRect.width,\r\n            height: elementRect.height\r\n        };\r\n        this._renderDragOffsets(e);\r\n        this._resizeStartAction({\r\n            event: e,\r\n            width: this._elementSize.width,\r\n            height: this._elementSize.height,\r\n            handles: this._movingSides\r\n        });\r\n        e.targetElements = null\r\n    },\r\n    _toggleResizingClass: function(value) {\r\n        this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value)\r\n    },\r\n    _renderDragOffsets: function(e) {\r\n        var area = this._getArea();\r\n        if (!area) {\r\n            return\r\n        }\r\n        var $handle = (0, _renderer.default)(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\r\n        var handleWidth = $handle.outerWidth();\r\n        var handleHeight = $handle.outerHeight();\r\n        var handleOffset = $handle.offset();\r\n        var areaOffset = area.offset;\r\n        var scrollOffset = this._getAreaScrollOffset();\r\n        e.maxLeftOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\r\n        e.maxRightOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\r\n        e.maxTopOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\r\n        e.maxBottomOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY\r\n    },\r\n    _getBorderWidth: function($element, direction) {\r\n        if ((0, _type.isWindow)($element.get(0))) {\r\n            return 0\r\n        }\r\n        var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\r\n        return parseInt(borderWidth) || 0\r\n    },\r\n    _dragHandler: function(e) {\r\n        var $element = this.$element();\r\n        var sides = this._movingSides;\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var offset = this._getOffset(e);\r\n        var width = size.width + offset.x * (sides.left ? -1 : 1);\r\n        var height = size.height + offset.y * (sides.top ? -1 : 1);\r\n        if (offset.x || \"strict\" === this.option(\"stepPrecision\")) {\r\n            this._renderWidth(width)\r\n        }\r\n        if (offset.y || \"strict\" === this.option(\"stepPrecision\")) {\r\n            this._renderHeight(height)\r\n        }\r\n        var elementRect = (0, _position.getBoundingRect)($element.get(0));\r\n        var offsetTop = offset.y - ((elementRect.height || height) - height);\r\n        var offsetLeft = offset.x - ((elementRect.width || width) - width);\r\n        (0, _translator.move)($element, {\r\n            top: location.top + (sides.top ? offsetTop : 0),\r\n            left: location.left + (sides.left ? offsetLeft : 0)\r\n        });\r\n        this._resizeAction({\r\n            event: e,\r\n            width: this.option(\"width\") || width,\r\n            height: this.option(\"height\") || height,\r\n            handles: this._movingSides\r\n        });\r\n        (0, _visibility_change.triggerResizeEvent)($element)\r\n    },\r\n    _getOffset: function(e) {\r\n        var offset = e.offset;\r\n        var steps = (0, _common.pairToObject)(this.option(\"step\"), !this.option(\"roundStepValue\"));\r\n        var sides = this._getMovingSides(e);\r\n        var strictPrecision = \"strict\" === this.option(\"stepPrecision\");\r\n        if (!sides.left && !sides.right) {\r\n            offset.x = 0\r\n        }\r\n        if (!sides.top && !sides.bottom) {\r\n            offset.y = 0\r\n        }\r\n        return strictPrecision ? this._getStrictOffset(offset, steps, sides) : this._getSimpleOffset(offset, steps)\r\n    },\r\n    _getSimpleOffset: function(offset, steps) {\r\n        return {\r\n            x: offset.x - offset.x % steps.h,\r\n            y: offset.y - offset.y % steps.v\r\n        }\r\n    },\r\n    _getStrictOffset: function(offset, steps, sides) {\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var xPos = sides.left ? location.left : location.left + size.width;\r\n        var yPos = sides.top ? location.top : location.top + size.height;\r\n        var newXShift = (xPos + offset.x) % steps.h;\r\n        var newYShift = (yPos + offset.y) % steps.v;\r\n        var sign = Math.sign || function(x) {\r\n            x = +x;\r\n            if (0 === x || isNaN(x)) {\r\n                return x\r\n            }\r\n            return x > 0 ? 1 : -1\r\n        };\r\n        var separatorOffset = function(steps, offset) {\r\n            return (1 + .2 * sign(offset)) % 1 * steps\r\n        };\r\n        var isSmallOffset = function(offset, steps) {\r\n            return Math.abs(offset) < .2 * steps\r\n        };\r\n        var newOffsetX = offset.x - newXShift;\r\n        var newOffsetY = offset.y - newYShift;\r\n        if (newXShift > separatorOffset(steps.h, offset.x)) {\r\n            newOffsetX += steps.h\r\n        }\r\n        if (newYShift > separatorOffset(steps.v, offset.y)) {\r\n            newOffsetY += steps.v\r\n        }\r\n        return {\r\n            x: (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\r\n            y: (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0\r\n        }\r\n    },\r\n    _getMovingSides: function(e) {\r\n        var $target = (0, _renderer.default)(e.target);\r\n        var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\r\n        var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\r\n        var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\r\n        var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\r\n        return {\r\n            top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\r\n            left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\r\n            bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\r\n            right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\r\n        }\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if ((0, _type.isFunction)(area)) {\r\n            area = area.call(this)\r\n        }\r\n        if ((0, _type.isPlainObject)(area)) {\r\n            return this._getAreaFromObject(area)\r\n        }\r\n        return this._getAreaFromElement(area)\r\n    },\r\n    _getAreaScrollOffset: function() {\r\n        var area = this.option(\"area\");\r\n        var isElement = !(0, _type.isFunction)(area) && !(0, _type.isPlainObject)(area);\r\n        var scrollOffset = {\r\n            scrollY: 0,\r\n            scrollX: 0\r\n        };\r\n        if (isElement) {\r\n            var areaElement = (0, _renderer.default)(area)[0];\r\n            if ((0, _type.isWindow)(areaElement)) {\r\n                scrollOffset.scrollX = areaElement.pageXOffset;\r\n                scrollOffset.scrollY = areaElement.pageYOffset\r\n            }\r\n        }\r\n        return scrollOffset\r\n    },\r\n    _getAreaFromObject: function(area) {\r\n        var result = {\r\n            width: area.right - area.left,\r\n            height: area.bottom - area.top,\r\n            offset: {\r\n                left: area.left,\r\n                top: area.top\r\n            }\r\n        };\r\n        this._correctAreaGeometry(result);\r\n        return result\r\n    },\r\n    _getAreaFromElement: function(area) {\r\n        var $area = (0, _renderer.default)(area);\r\n        var result;\r\n        if ($area.length) {\r\n            result = {\r\n                width: $area.innerWidth(),\r\n                height: $area.innerHeight(),\r\n                offset: (0, _extend.extend)({\r\n                    top: 0,\r\n                    left: 0\r\n                }, (0, _type.isWindow)($area[0]) ? {} : $area.offset())\r\n            };\r\n            this._correctAreaGeometry(result, $area)\r\n        }\r\n        return result\r\n    },\r\n    _correctAreaGeometry: function(result, $area) {\r\n        var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\r\n        var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\r\n        result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\r\n        result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\r\n        result.width -= this.$element().outerWidth() - this.$element().innerWidth();\r\n        result.height -= this.$element().outerHeight() - this.$element().innerHeight()\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var $element = this.$element();\r\n        this._resizeEndAction({\r\n            event: e,\r\n            width: $element.outerWidth(),\r\n            height: $element.outerHeight(),\r\n            handles: this._movingSides\r\n        });\r\n        this._toggleResizingClass(false)\r\n    },\r\n    _renderWidth: function(width) {\r\n        this.option(\"width\", (0, _math.fitIntoRange)(width, this.option(\"minWidth\"), this.option(\"maxWidth\")))\r\n    },\r\n    _renderHeight: function(height) {\r\n        this.option(\"height\", (0, _math.fitIntoRange)(height, this.option(\"minHeight\"), this.option(\"maxHeight\")))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"disabled\":\r\n                this._toggleEventHandlers(!args.value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"handles\":\r\n                this._invalidate();\r\n                break;\r\n            case \"minWidth\":\r\n            case \"maxWidth\":\r\n                (0, _window.hasWindow)() && this._renderWidth(this.$element().outerWidth());\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                (0, _window.hasWindow)() && this._renderHeight(this.$element().outerHeight());\r\n                break;\r\n            case \"onResize\":\r\n            case \"onResizeStart\":\r\n            case \"onResizeEnd\":\r\n                this._renderActions();\r\n                break;\r\n            case \"area\":\r\n            case \"stepPrecision\":\r\n            case \"step\":\r\n            case \"roundStepValue\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove()\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    }\r\n});\r\n(0, _component_registrator.default)(RESIZABLE, Resizable);\r\nvar _default = Resizable;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/responsive_box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _ui = _interopRequireDefault(require(\"./widget/ui.errors\"));\r\nvar _window = require(\"../core/utils/window\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _box = _interopRequireDefault(require(\"./box\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./collection/ui.collection_widget.edit\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar RESPONSIVE_BOX_CLASS = \"dx-responsivebox\";\r\nvar SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + \"-screen-\";\r\nvar BOX_ITEM_CLASS = \"dx-box-item\";\r\nvar BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\r\nvar HD_SCREEN_WIDTH = 1920;\r\nvar ResponsiveBox = _uiCollection_widget.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            rows: [],\r\n            cols: [],\r\n            screenByWidth: null,\r\n            singleColumnScreen: \"\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            onItemStateChanged: void 0,\r\n            onLayoutChanged: null,\r\n            currentScreenFactor: void 0,\r\n            _layoutStrategy: void 0\r\n        })\r\n    },\r\n    _init: function() {\r\n        if (!this.option(\"screenByWidth\")) {\r\n            this._options.silent(\"screenByWidth\", _window.defaultScreenFactorFunc)\r\n        }\r\n        this.callBase();\r\n        this._initLayoutChangedAction()\r\n    },\r\n    _initLayoutChangedAction: function() {\r\n        this._layoutChangedAction = this._createActionByOption(\"onLayoutChanged\", {\r\n            excludeValidators: [\"disabled\", \"readonly\"]\r\n        })\r\n    },\r\n    _itemClass: function() {\r\n        return BOX_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return BOX_ITEM_DATA_KEY\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESPONSIVE_BOX_CLASS);\r\n        this._updateRootBox()\r\n    },\r\n    _updateRootBox: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = setTimeout(function() {\r\n            if (this._$root) {\r\n                _events_engine.default.triggerHandler(this._$root, \"dxupdate\")\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _renderItems: function() {\r\n        this._setScreenSize();\r\n        this._screenItems = this._itemsByScreen();\r\n        this._prepareGrid();\r\n        this._spreadItems();\r\n        this._layoutItems();\r\n        this._linkNodeToItem()\r\n    },\r\n    _itemOptionChanged: function(item) {\r\n        var $item = this._findItemElementByItem(item);\r\n        if (!$item.length) {\r\n            return\r\n        }\r\n        this._refreshItem($item, item);\r\n        this._clearItemNodeTemplates();\r\n        this._update(true)\r\n    },\r\n    _setScreenSize: function() {\r\n        var currentScreen = this._getCurrentScreen();\r\n        this._removeScreenSizeClass();\r\n        this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);\r\n        this.option(\"currentScreenFactor\", currentScreen)\r\n    },\r\n    _removeScreenSizeClass: function() {\r\n        var currentScreenFactor = this.option(\"currentScreenFactor\");\r\n        currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor)\r\n    },\r\n    _prepareGrid: function() {\r\n        var grid = this._grid = [];\r\n        this._prepareRowsAndCols();\r\n        (0, _iterator.each)(this._rows, function() {\r\n            var row = [];\r\n            grid.push(row);\r\n            (0, _iterator.each)(this._cols, function() {\r\n                row.push(this._createEmptyCell())\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    getSingleColumnRows: function() {\r\n        var rows = this.option(\"rows\");\r\n        var screenItemsLength = this._screenItems.length;\r\n        if (rows.length) {\r\n            var filteredRows = this._filterByScreen(rows);\r\n            var result = [];\r\n            for (var i = 0; i < screenItemsLength; i++) {\r\n                var sizeConfig = this._defaultSizeConfig();\r\n                if (i < filteredRows.length && (0, _type.isDefined)(filteredRows[i].shrink)) {\r\n                    sizeConfig.shrink = filteredRows[i].shrink\r\n                }\r\n                result.push(sizeConfig)\r\n            }\r\n            return result\r\n        } else {\r\n            return this._defaultSizeConfig(screenItemsLength)\r\n        }\r\n    },\r\n    _prepareRowsAndCols: function() {\r\n        if (this._isSingleColumnScreen()) {\r\n            this._prepareSingleColumnScreenItems();\r\n            this._rows = this.getSingleColumnRows();\r\n            this._cols = this._defaultSizeConfig(1)\r\n        } else {\r\n            this._rows = this._sizesByScreen(this.option(\"rows\"));\r\n            this._cols = this._sizesByScreen(this.option(\"cols\"))\r\n        }\r\n    },\r\n    _isSingleColumnScreen: function() {\r\n        return this._screenRegExp().test(this.option(\"singleColumnScreen\")) || !this.option(\"rows\").length || !this.option(\"cols\").length\r\n    },\r\n    _prepareSingleColumnScreenItems: function() {\r\n        this._screenItems.sort(function(item1, item2) {\r\n            return item1.location.row - item2.location.row || item1.location.col - item2.location.col\r\n        });\r\n        (0, _iterator.each)(this._screenItems, function(index, item) {\r\n            (0, _extend.extend)(item.location, {\r\n                row: index,\r\n                col: 0,\r\n                rowspan: 1,\r\n                colspan: 1\r\n            })\r\n        })\r\n    },\r\n    _sizesByScreen: function(sizeConfigs) {\r\n        return (0, _iterator.map)(this._filterByScreen(sizeConfigs), function(sizeConfig) {\r\n            return (0, _extend.extend)(this._defaultSizeConfig(), sizeConfig)\r\n        }.bind(this))\r\n    },\r\n    _createDefaultSizeConfig: function() {\r\n        return {\r\n            ratio: 1,\r\n            baseSize: 0,\r\n            minSize: 0,\r\n            maxSize: 0\r\n        }\r\n    },\r\n    _defaultSizeConfig: function(size) {\r\n        var defaultSizeConfig = this._createDefaultSizeConfig();\r\n        if (!arguments.length) {\r\n            return defaultSizeConfig\r\n        }\r\n        var result = [];\r\n        for (var i = 0; i < size; i++) {\r\n            result.push(defaultSizeConfig)\r\n        }\r\n        return result\r\n    },\r\n    _filterByScreen: function(items) {\r\n        var screenRegExp = this._screenRegExp();\r\n        return (0, _common.grep)(items, function(item) {\r\n            return !item.screen || screenRegExp.test(item.screen)\r\n        })\r\n    },\r\n    _screenRegExp: function() {\r\n        var screen = this._getCurrentScreen();\r\n        return new RegExp(\"(^|\\\\s)\" + screen + \"($|\\\\s)\", \"i\")\r\n    },\r\n    _getCurrentScreen: function() {\r\n        var width = this._screenWidth();\r\n        return this.option(\"screenByWidth\")(width)\r\n    },\r\n    _screenWidth: function() {\r\n        return (0, _window.hasWindow)() ? (0, _renderer.default)(window).width() : HD_SCREEN_WIDTH\r\n    },\r\n    _createEmptyCell: function() {\r\n        return {\r\n            item: {},\r\n            location: {\r\n                colspan: 1,\r\n                rowspan: 1\r\n            }\r\n        }\r\n    },\r\n    _spreadItems: function() {\r\n        (0, _iterator.each)(this._screenItems, function(_, itemInfo) {\r\n            var location = itemInfo.location || {};\r\n            var itemCol = location.col;\r\n            var itemRow = location.row;\r\n            var row = this._grid[itemRow];\r\n            var itemCell = row && row[itemCol];\r\n            this._occupyCells(itemCell, itemInfo)\r\n        }.bind(this))\r\n    },\r\n    _itemsByScreen: function() {\r\n        var _this = this;\r\n        return this.option(\"items\").reduce(function(result, item) {\r\n            var locations = item.location || {};\r\n            locations = (0, _type.isPlainObject)(locations) ? [locations] : locations;\r\n            _this._filterByScreen(locations).forEach(function(location) {\r\n                result.push({\r\n                    item: item,\r\n                    location: (0, _extend.extend)({\r\n                        rowspan: 1,\r\n                        colspan: 1\r\n                    }, location)\r\n                })\r\n            });\r\n            return result\r\n        }, [])\r\n    },\r\n    _occupyCells: function(itemCell, itemInfo) {\r\n        if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {\r\n            return\r\n        }(0, _extend.extend)(itemCell, itemInfo);\r\n        this._markSpanningCell(itemCell)\r\n    },\r\n    _isItemCellOccupied: function(itemCell, itemInfo) {\r\n        if (!(0, _type.isEmptyObject)(itemCell.item)) {\r\n            return true\r\n        }\r\n        var result = false;\r\n        this._loopOverSpanning(itemInfo.location, function(cell) {\r\n            result = result || !(0, _type.isEmptyObject)(cell.item)\r\n        });\r\n        return result\r\n    },\r\n    _loopOverSpanning: function(location, callback) {\r\n        var rowEnd = location.row + location.rowspan - 1;\r\n        var colEnd = location.col + location.colspan - 1;\r\n        var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);\r\n        var boundColEnd = Math.min(colEnd, this._cols.length - 1);\r\n        location.rowspan -= rowEnd - boundRowEnd;\r\n        location.colspan -= colEnd - boundColEnd;\r\n        for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {\r\n            for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {\r\n                if (rowIndex !== location.row || colIndex !== location.col) {\r\n                    callback(this._grid[rowIndex][colIndex])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _markSpanningCell: function(itemCell) {\r\n        this._loopOverSpanning(itemCell.location, function(cell) {\r\n            (0, _extend.extend)(cell, {\r\n                item: itemCell.item,\r\n                spanningCell: itemCell\r\n            })\r\n        })\r\n    },\r\n    _linkNodeToItem: function() {\r\n        (0, _iterator.each)(this._itemElements(), function(_, itemNode) {\r\n            var $item = (0, _renderer.default)(itemNode);\r\n            var item = $item.data(BOX_ITEM_DATA_KEY);\r\n            if (!item.box) {\r\n                item.node = $item.children()\r\n            }\r\n        })\r\n    },\r\n    _layoutItems: function() {\r\n        var rowsCount = this._grid.length;\r\n        var colsCount = rowsCount && this._grid[0].length;\r\n        if (!rowsCount && !colsCount) {\r\n            return\r\n        }\r\n        var result = this._layoutBlock({\r\n            direction: \"col\",\r\n            row: {\r\n                start: 0,\r\n                end: rowsCount - 1\r\n            },\r\n            col: {\r\n                start: 0,\r\n                end: colsCount - 1\r\n            }\r\n        });\r\n        var rootBox = this._prepareBoxConfig(result.box || {\r\n            direction: \"row\",\r\n            items: [(0, _extend.extend)(result, {\r\n                ratio: 1\r\n            })]\r\n        });\r\n        (0, _extend.extend)(rootBox, this._rootBoxConfig(rootBox.items));\r\n        this._$root = (0, _renderer.default)(\"<div>\").appendTo(this._itemContainer());\r\n        this._createComponent(this._$root, _box.default, rootBox)\r\n    },\r\n    _rootBoxConfig: function(items) {\r\n        var rootItems = (0, _iterator.each)(items, function(index, item) {\r\n            this._needApplyAutoBaseSize(item) && (0, _extend.extend)(item, {\r\n                baseSize: \"auto\"\r\n            })\r\n        }.bind(this));\r\n        return (0, _extend.extend)({\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            items: rootItems,\r\n            itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\r\n            itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n            onItemHold: this._createActionByOption(\"onItemHold\"),\r\n            onItemClick: this._createActionByOption(\"onItemClick\"),\r\n            onItemContextMenu: this._createActionByOption(\"onItemContextMenu\"),\r\n            onItemRendered: this._createActionByOption(\"onItemRendered\")\r\n        }, {\r\n            _layoutStrategy: this.option(\"_layoutStrategy\")\r\n        })\r\n    },\r\n    _needApplyAutoBaseSize: function(item) {\r\n        return !item.baseSize && (!item.minSize || \"auto\" === item.minSize) && (!item.maxSize || \"auto\" === item.maxSize)\r\n    },\r\n    _prepareBoxConfig: function(config) {\r\n        return (0, _extend.extend)(config || {}, {\r\n            crossAlign: \"stretch\",\r\n            onItemStateChanged: this.option(\"onItemStateChanged\")\r\n        })\r\n    },\r\n    _layoutBlock: function(options) {\r\n        if (this._isSingleItem(options)) {\r\n            return this._itemByCell(options.row.start, options.col.start)\r\n        }\r\n        return this._layoutDirection(options)\r\n    },\r\n    _isSingleItem: function(options) {\r\n        var firstCellLocation = this._grid[options.row.start][options.col.start].location;\r\n        var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;\r\n        var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;\r\n        return isItemRowSpanned && isItemColSpanned\r\n    },\r\n    _itemByCell: function(rowIndex, colIndex) {\r\n        var itemCell = this._grid[rowIndex][colIndex];\r\n        return itemCell.spanningCell ? null : itemCell.item\r\n    },\r\n    _layoutDirection: function(options) {\r\n        var items = [];\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var block;\r\n        while (block = this._nextBlock(options)) {\r\n            if (this._isBlockIndivisible(options.prevBlockOptions, block)) {\r\n                throw _ui.default.Error(\"E1025\")\r\n            }\r\n            var item = this._layoutBlock({\r\n                direction: crossDirection,\r\n                row: block.row,\r\n                col: block.col,\r\n                prevBlockOptions: options\r\n            });\r\n            if (item) {\r\n                (0, _extend.extend)(item, this._blockSize(block, crossDirection));\r\n                items.push(item)\r\n            }\r\n            options[crossDirection].start = block[crossDirection].end + 1\r\n        }\r\n        return {\r\n            box: this._prepareBoxConfig({\r\n                direction: direction,\r\n                items: items\r\n            })\r\n        }\r\n    },\r\n    _isBlockIndivisible: function(options, block) {\r\n        return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end\r\n    },\r\n    _crossDirection: function(direction) {\r\n        return \"col\" === direction ? \"row\" : \"col\"\r\n    },\r\n    _nextBlock: function(options) {\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var startIndex = options[direction].start;\r\n        var endIndex = options[direction].end;\r\n        var crossStartIndex = options[crossDirection].start;\r\n        if (crossStartIndex > options[crossDirection].end) {\r\n            return null\r\n        }\r\n        var crossSpan = 1;\r\n        for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {\r\n            var lineCrossSpan = 1;\r\n            for (var index = startIndex; index <= endIndex; index++) {\r\n                var cell = this._cellByDirection(direction, index, crossIndex);\r\n                lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + \"span\"])\r\n            }\r\n            var lineCrossEndIndex = crossIndex + lineCrossSpan;\r\n            var crossEndIndex = crossStartIndex + crossSpan;\r\n            if (lineCrossEndIndex > crossEndIndex) {\r\n                crossSpan += lineCrossEndIndex - crossEndIndex\r\n            }\r\n        }\r\n        var result = {};\r\n        result[direction] = {\r\n            start: startIndex,\r\n            end: endIndex\r\n        };\r\n        result[crossDirection] = {\r\n            start: crossStartIndex,\r\n            end: crossStartIndex + crossSpan - 1\r\n        };\r\n        return result\r\n    },\r\n    _cellByDirection: function(direction, index, crossIndex) {\r\n        return \"col\" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex]\r\n    },\r\n    _blockSize: function(block, direction) {\r\n        var defaultMinSize = \"row\" === direction ? \"auto\" : 0;\r\n        var sizeConfigs = \"row\" === direction ? this._rows : this._cols;\r\n        var result = (0, _extend.extend)(this._createDefaultSizeConfig(), {\r\n            ratio: 0\r\n        });\r\n        for (var index = block[direction].start; index <= block[direction].end; index++) {\r\n            var sizeConfig = sizeConfigs[index];\r\n            result.ratio += sizeConfig.ratio;\r\n            result.baseSize += sizeConfig.baseSize;\r\n            result.minSize += sizeConfig.minSize;\r\n            result.maxSize += sizeConfig.maxSize;\r\n            if ((0, _type.isDefined)(sizeConfig.shrink)) {\r\n                result.shrink = sizeConfig.shrink\r\n            }\r\n        }\r\n        result.minSize = result.minSize ? result.minSize : defaultMinSize;\r\n        result.maxSize = result.maxSize ? result.maxSize : \"auto\";\r\n        this._isSingleColumnScreen() && (result.baseSize = \"auto\");\r\n        return result\r\n    },\r\n    _update: function(forceRemoveRoot) {\r\n        var $existingRoot = this._$root;\r\n        this._renderItems();\r\n        if ($existingRoot) {\r\n            if (forceRemoveRoot) {\r\n                $existingRoot.remove()\r\n            } else {\r\n                $existingRoot.detach();\r\n                this._saveAssistantRoot($existingRoot)\r\n            }\r\n        }\r\n        this._layoutChangedAction();\r\n        this._updateRootBox()\r\n    },\r\n    _saveAssistantRoot: function($root) {\r\n        this._assistantRoots = this._assistantRoots || [];\r\n        this._assistantRoots.push($root)\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._clearItemNodeTemplates();\r\n        this._cleanUnusedRoots();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _cleanUnusedRoots: function() {\r\n        if (!this._assistantRoots) {\r\n            return\r\n        }(0, _iterator.each)(this._assistantRoots, function(_, item) {\r\n            (0, _renderer.default)(item).remove()\r\n        })\r\n    },\r\n    _clearItemNodeTemplates: function() {\r\n        (0, _iterator.each)(this.option(\"items\"), function() {\r\n            delete this.node\r\n        })\r\n    },\r\n    _toggleVisibility: function(visible) {\r\n        this.callBase(visible);\r\n        if (visible) {\r\n            this._updateRootBox()\r\n        }\r\n    },\r\n    _attachClickEvent: _common.noop,\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"rows\":\r\n            case \"cols\":\r\n            case \"screenByWidth\":\r\n            case \"_layoutStrategy\":\r\n            case \"singleColumnScreen\":\r\n                this._clearItemNodeTemplates();\r\n                this._invalidate();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._update();\r\n                break;\r\n            case \"onLayoutChanged\":\r\n                this._initLayoutChangedAction();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._clearItemNodeTemplates();\r\n                this.callBase(args);\r\n                break;\r\n            case \"currentScreenFactor\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this._getCurrentScreen() !== this.option(\"currentScreenFactor\")) {\r\n            this._update()\r\n        }\r\n    },\r\n    repaint: function() {\r\n        this._update()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxResponsiveBox\", ResponsiveBox);\r\nvar _default = ResponsiveBox;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/scroll_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _ui = _interopRequireDefault(require(\"./scroll_view/ui.scroll_view\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _ui.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/scroll_view/animator.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _frame = require(\"../../animation/frame\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar abstract = _class.default.abstract;\r\nvar Animator = _class.default.inherit({\r\n    ctor: function() {\r\n        this._finished = true;\r\n        this._stopped = false;\r\n        this._proxiedStepCore = this._stepCore.bind(this)\r\n    },\r\n    start: function() {\r\n        this._stopped = false;\r\n        this._finished = false;\r\n        this._stepCore()\r\n    },\r\n    stop: function() {\r\n        this._stopped = true;\r\n        (0, _frame.cancelAnimationFrame)(this._stepAnimationFrame)\r\n    },\r\n    _stepCore: function() {\r\n        if (this._isStopped()) {\r\n            this._stop();\r\n            return\r\n        }\r\n        if (this._isFinished()) {\r\n            this._finished = true;\r\n            this._complete();\r\n            return\r\n        }\r\n        this._step();\r\n        this._stepAnimationFrame = (0, _frame.requestAnimationFrame)(this._proxiedStepCore)\r\n    },\r\n    _step: abstract,\r\n    _isFinished: _common.noop,\r\n    _stop: _common.noop,\r\n    _complete: _common.noop,\r\n    _isStopped: function() {\r\n        return this._stopped\r\n    },\r\n    inProgress: function() {\r\n        return !(this._stopped || this._finished)\r\n    }\r\n});\r\nvar _default = Animator;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.events.emitter.gesture.scroll.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _emitter = _interopRequireDefault(require(\"../../events/gesture/emitter.gesture\"));\r\nvar _emitter_registrator = _interopRequireDefault(require(\"../../events/core/emitter_registrator\"));\r\nvar _frame = require(\"../../animation/frame\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _version = require(\"../../core/utils/version\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar abstract = _class.default.abstract;\r\nvar realDevice = _devices.default.real();\r\nvar SCROLL_INIT_EVENT = \"dxscrollinit\";\r\nvar SCROLL_START_EVENT = \"dxscrollstart\";\r\nvar SCROLL_MOVE_EVENT = \"dxscroll\";\r\nvar SCROLL_END_EVENT = \"dxscrollend\";\r\nvar SCROLL_STOP_EVENT = \"dxscrollstop\";\r\nvar SCROLL_CANCEL_EVENT = \"dxscrollcancel\";\r\nvar Locker = _class.default.inherit(function() {\r\n    var NAMESPACED_SCROLL_EVENT = (0, _index.addNamespace)(\"scroll\", \"dxScrollEmitter\");\r\n    return {\r\n        ctor: function(element) {\r\n            this._element = element;\r\n            this._locked = false;\r\n            var that = this;\r\n            this._proxiedScroll = function(e) {\r\n                that._scroll(e)\r\n            };\r\n            _events_engine.default.on(this._element, NAMESPACED_SCROLL_EVENT, this._proxiedScroll)\r\n        },\r\n        _scroll: abstract,\r\n        check: function(e, callback) {\r\n            if (this._locked) {\r\n                callback()\r\n            }\r\n        },\r\n        dispose: function() {\r\n            _events_engine.default.off(this._element, NAMESPACED_SCROLL_EVENT, this._proxiedScroll)\r\n        }\r\n    }\r\n}());\r\nvar TimeoutLocker = Locker.inherit(function() {\r\n    return {\r\n        ctor: function(element, timeout) {\r\n            this.callBase(element);\r\n            this._timeout = timeout\r\n        },\r\n        _scroll: function() {\r\n            this._prepare();\r\n            this._forget()\r\n        },\r\n        _prepare: function() {\r\n            if (this._timer) {\r\n                this._clearTimer()\r\n            }\r\n            this._locked = true\r\n        },\r\n        _clearTimer: function() {\r\n            clearTimeout(this._timer);\r\n            this._locked = false;\r\n            this._timer = null\r\n        },\r\n        _forget: function() {\r\n            var that = this;\r\n            this._timer = setTimeout(function() {\r\n                that._clearTimer()\r\n            }, this._timeout)\r\n        },\r\n        dispose: function() {\r\n            this.callBase();\r\n            this._clearTimer()\r\n        }\r\n    }\r\n}());\r\nvar WheelLocker = TimeoutLocker.inherit(function() {\r\n    var WHEEL_UNLOCK_TIMEOUT = 400;\r\n    return {\r\n        ctor: function(element) {\r\n            this.callBase(element, WHEEL_UNLOCK_TIMEOUT);\r\n            this._lastWheelDirection = null\r\n        },\r\n        check: function(e, callback) {\r\n            this._checkDirectionChanged(e);\r\n            this.callBase(e, callback)\r\n        },\r\n        _checkDirectionChanged: function(e) {\r\n            if (!(0, _index.isDxMouseWheelEvent)(e)) {\r\n                this._lastWheelDirection = null;\r\n                return\r\n            }\r\n            var direction = e.shiftKey || false;\r\n            var directionChange = null !== this._lastWheelDirection && direction !== this._lastWheelDirection;\r\n            this._lastWheelDirection = direction;\r\n            this._locked = this._locked && !directionChange\r\n        }\r\n    }\r\n}());\r\nvar PointerLocker = TimeoutLocker.inherit(function() {\r\n    var POINTER_UNLOCK_TIMEOUT = 400;\r\n    return {\r\n        ctor: function(element) {\r\n            this.callBase(element, POINTER_UNLOCK_TIMEOUT)\r\n        }\r\n    }\r\n}());\r\n! function() {\r\n    var ios8_greater = realDevice.ios && (0, _version.compare)(realDevice.version, [8]) >= 0;\r\n    var android5_greater = realDevice.android && (0, _version.compare)(realDevice.version, [5]) >= 0;\r\n    if (!(ios8_greater || android5_greater)) {\r\n        return\r\n    }\r\n    PointerLocker = Locker.inherit(function() {\r\n        return {\r\n            _scroll: function() {\r\n                this._locked = true;\r\n                var that = this;\r\n                (0, _frame.cancelAnimationFrame)(this._scrollFrame);\r\n                this._scrollFrame = (0, _frame.requestAnimationFrame)(function() {\r\n                    that._locked = false\r\n                })\r\n            },\r\n            check: function(e, callback) {\r\n                (0, _frame.cancelAnimationFrame)(this._scrollFrame);\r\n                (0, _frame.cancelAnimationFrame)(this._checkFrame);\r\n                var that = this;\r\n                var callBase = this.callBase;\r\n                this._checkFrame = (0, _frame.requestAnimationFrame)(function() {\r\n                    callBase.call(that, e, callback);\r\n                    that._locked = false\r\n                })\r\n            },\r\n            dispose: function() {\r\n                this.callBase();\r\n                (0, _frame.cancelAnimationFrame)(this._scrollFrame);\r\n                (0, _frame.cancelAnimationFrame)(this._checkFrame)\r\n            }\r\n        }\r\n    }())\r\n}();\r\nvar ScrollEmitter = _emitter.default.inherit(function() {\r\n    var INERTIA_TIMEOUT = 100;\r\n    var VELOCITY_CALC_TIMEOUT = 200;\r\n    var FRAME_DURATION = Math.round(1e3 / 60);\r\n    return {\r\n        ctor: function(element) {\r\n            this.callBase.apply(this, arguments);\r\n            this.direction = \"both\";\r\n            this._pointerLocker = new PointerLocker(element);\r\n            this._wheelLocker = new WheelLocker(element)\r\n        },\r\n        validate: function() {\r\n            return true\r\n        },\r\n        configure: function(data) {\r\n            if (data.scrollTarget) {\r\n                this._pointerLocker.dispose();\r\n                this._wheelLocker.dispose();\r\n                this._pointerLocker = new PointerLocker(data.scrollTarget);\r\n                this._wheelLocker = new WheelLocker(data.scrollTarget)\r\n            }\r\n            this.callBase(data)\r\n        },\r\n        _init: function(e) {\r\n            this._wheelLocker.check(e, function() {\r\n                if ((0, _index.isDxMouseWheelEvent)(e)) {\r\n                    this._accept(e)\r\n                }\r\n            }.bind(this));\r\n            this._pointerLocker.check(e, function() {\r\n                var skipCheck = this.isNative && (0, _index.isMouseEvent)(e);\r\n                if (!(0, _index.isDxMouseWheelEvent)(e) && !skipCheck) {\r\n                    this._accept(e)\r\n                }\r\n            }.bind(this));\r\n            this._fireEvent(SCROLL_INIT_EVENT, e);\r\n            this._prevEventData = (0, _index.eventData)(e)\r\n        },\r\n        move: function(e) {\r\n            this.callBase.apply(this, arguments);\r\n            e.isScrollingEvent = this.isNative || e.isScrollingEvent\r\n        },\r\n        _start: function(e) {\r\n            this._savedEventData = (0, _index.eventData)(e);\r\n            this._fireEvent(SCROLL_START_EVENT, e);\r\n            this._prevEventData = (0, _index.eventData)(e)\r\n        },\r\n        _move: function(e) {\r\n            var currentEventData = (0, _index.eventData)(e);\r\n            this._fireEvent(SCROLL_MOVE_EVENT, e, {\r\n                delta: (0, _index.eventDelta)(this._prevEventData, currentEventData)\r\n            });\r\n            var delta = (0, _index.eventDelta)(this._savedEventData, currentEventData);\r\n            if (delta.time > VELOCITY_CALC_TIMEOUT) {\r\n                this._savedEventData = this._prevEventData\r\n            }\r\n            this._prevEventData = (0, _index.eventData)(e)\r\n        },\r\n        _end: function(e) {\r\n            var endEventDelta = (0, _index.eventDelta)(this._prevEventData, (0, _index.eventData)(e));\r\n            var velocity = {\r\n                x: 0,\r\n                y: 0\r\n            };\r\n            if (!(0, _index.isDxMouseWheelEvent)(e) && endEventDelta.time < INERTIA_TIMEOUT) {\r\n                var delta = (0, _index.eventDelta)(this._savedEventData, this._prevEventData);\r\n                var velocityMultiplier = FRAME_DURATION / delta.time;\r\n                velocity = {\r\n                    x: delta.x * velocityMultiplier,\r\n                    y: delta.y * velocityMultiplier\r\n                }\r\n            }\r\n            this._fireEvent(SCROLL_END_EVENT, e, {\r\n                velocity: velocity\r\n            })\r\n        },\r\n        _stop: function(e) {\r\n            this._fireEvent(SCROLL_STOP_EVENT, e)\r\n        },\r\n        cancel: function(e) {\r\n            this.callBase.apply(this, arguments);\r\n            this._fireEvent(SCROLL_CANCEL_EVENT, e)\r\n        },\r\n        dispose: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._pointerLocker.dispose();\r\n            this._wheelLocker.dispose()\r\n        },\r\n        _clearSelection: function() {\r\n            if (this.isNative) {\r\n                return\r\n            }\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        _toggleGestureCover: function() {\r\n            if (this.isNative) {\r\n                return\r\n            }\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n    }\r\n}());\r\n(0, _emitter_registrator.default)({\r\n    emitter: ScrollEmitter,\r\n    events: [SCROLL_INIT_EVENT, SCROLL_START_EVENT, SCROLL_MOVE_EVENT, SCROLL_END_EVENT, SCROLL_STOP_EVENT, SCROLL_CANCEL_EVENT]\r\n});\r\nvar _default = {\r\n    init: SCROLL_INIT_EVENT,\r\n    start: SCROLL_START_EVENT,\r\n    move: SCROLL_MOVE_EVENT,\r\n    end: SCROLL_END_EVENT,\r\n    stop: SCROLL_STOP_EVENT,\r\n    cancel: SCROLL_CANCEL_EVENT\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.scroll_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _element = require(\"../../core/element\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _uiScroll_viewNative = _interopRequireDefault(require(\"./ui.scroll_view.native.pull_down\"));\r\nvar _uiScroll_viewNative2 = _interopRequireDefault(require(\"./ui.scroll_view.native.swipe_down\"));\r\nvar _uiScroll_view = _interopRequireDefault(require(\"./ui.scroll_view.simulated\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.scrollable\"));\r\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\r\nvar _themes = require(\"./../themes\");\r\nvar _load_panel = _interopRequireDefault(require(\"../load_panel\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLVIEW_CLASS = \"dx-scrollview\";\r\nvar SCROLLVIEW_CONTENT_CLASS = SCROLLVIEW_CLASS + \"-content\";\r\nvar SCROLLVIEW_TOP_POCKET_CLASS = SCROLLVIEW_CLASS + \"-top-pocket\";\r\nvar SCROLLVIEW_BOTTOM_POCKET_CLASS = SCROLLVIEW_CLASS + \"-bottom-pocket\";\r\nvar SCROLLVIEW_PULLDOWN_CLASS = SCROLLVIEW_CLASS + \"-pull-down\";\r\nvar SCROLLVIEW_REACHBOTTOM_CLASS = SCROLLVIEW_CLASS + \"-scrollbottom\";\r\nvar SCROLLVIEW_REACHBOTTOM_INDICATOR_CLASS = SCROLLVIEW_REACHBOTTOM_CLASS + \"-indicator\";\r\nvar SCROLLVIEW_REACHBOTTOM_TEXT_CLASS = SCROLLVIEW_REACHBOTTOM_CLASS + \"-text\";\r\nvar SCROLLVIEW_LOADPANEL = SCROLLVIEW_CLASS + \"-loadpanel\";\r\nvar refreshStrategies = {\r\n    pullDown: _uiScroll_viewNative.default,\r\n    swipeDown: _uiScroll_viewNative2.default,\r\n    simulated: _uiScroll_view.default\r\n};\r\nvar isServerSide = !(0, _window.hasWindow)();\r\nvar scrollViewServerConfig = {\r\n    finishLoading: _common.noop,\r\n    release: _common.noop,\r\n    refresh: _common.noop,\r\n    _optionChanged: function(args) {\r\n        if (\"onUpdated\" !== args.name) {\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n    }\r\n};\r\nvar ScrollView = _ui.default.inherit(isServerSide ? scrollViewServerConfig : {\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            pullingDownText: _message.default.format(\"dxScrollView-pullingDownText\"),\r\n            pulledDownText: _message.default.format(\"dxScrollView-pulledDownText\"),\r\n            refreshingText: _message.default.format(\"dxScrollView-refreshingText\"),\r\n            reachBottomText: _message.default.format(\"dxScrollView-reachBottomText\"),\r\n            onPullDown: null,\r\n            onReachBottom: null,\r\n            refreshStrategy: \"pullDown\"\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                var realDevice = _devices.default.real();\r\n                return \"android\" === realDevice.platform\r\n            },\r\n            options: {\r\n                refreshStrategy: \"swipeDown\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return (0, _themes.isMaterial)()\r\n            },\r\n            options: {\r\n                pullingDownText: \"\",\r\n                pulledDownText: \"\",\r\n                refreshingText: \"\",\r\n                reachBottomText: \"\"\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._loadingIndicatorEnabled = true\r\n    },\r\n    _initScrollableMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(SCROLLVIEW_CLASS);\r\n        this._initContent();\r\n        this._initTopPocket();\r\n        this._initBottomPocket();\r\n        this._initLoadPanel()\r\n    },\r\n    _initContent: function() {\r\n        var $content = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_CONTENT_CLASS);\r\n        this._$content.wrapInner($content)\r\n    },\r\n    _initTopPocket: function() {\r\n        var $topPocket = this._$topPocket = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_TOP_POCKET_CLASS);\r\n        var $pullDown = this._$pullDown = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_PULLDOWN_CLASS);\r\n        $topPocket.append($pullDown);\r\n        this._$content.prepend($topPocket)\r\n    },\r\n    _initBottomPocket: function() {\r\n        var $bottomPocket = this._$bottomPocket = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_BOTTOM_POCKET_CLASS);\r\n        var $reachBottom = this._$reachBottom = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_REACHBOTTOM_CLASS);\r\n        var $loadContainer = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_REACHBOTTOM_INDICATOR_CLASS);\r\n        var $loadIndicator = new _load_indicator.default((0, _renderer.default)(\"<div>\")).$element();\r\n        var $text = this._$reachBottomText = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_REACHBOTTOM_TEXT_CLASS);\r\n        this._updateReachBottomText();\r\n        $reachBottom.append($loadContainer.append($loadIndicator)).append($text);\r\n        $bottomPocket.append($reachBottom);\r\n        this._$content.append($bottomPocket)\r\n    },\r\n    _initLoadPanel: function() {\r\n        var $loadPanelElement = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_LOADPANEL).appendTo(this.$element());\r\n        var loadPanelOptions = {\r\n            shading: false,\r\n            delay: 400,\r\n            message: this.option(\"refreshingText\"),\r\n            position: {\r\n                of: this.$element()\r\n            }\r\n        };\r\n        this._loadPanel = this._createComponent($loadPanelElement, _load_panel.default, loadPanelOptions)\r\n    },\r\n    _updateReachBottomText: function() {\r\n        this._$reachBottomText.text(this.option(\"reachBottomText\"))\r\n    },\r\n    _createStrategy: function() {\r\n        var strategyName = this.option(\"useNative\") ? this.option(\"refreshStrategy\") : \"simulated\";\r\n        var strategyClass = refreshStrategies[strategyName];\r\n        this._strategy = new strategyClass(this);\r\n        this._strategy.pullDownCallbacks.add(this._pullDownHandler.bind(this));\r\n        this._strategy.releaseCallbacks.add(this._releaseHandler.bind(this));\r\n        this._strategy.reachBottomCallbacks.add(this._reachBottomHandler.bind(this))\r\n    },\r\n    _createActions: function() {\r\n        this.callBase();\r\n        this._pullDownAction = this._createActionByOption(\"onPullDown\");\r\n        this._reachBottomAction = this._createActionByOption(\"onReachBottom\");\r\n        this._tryRefreshPocketState()\r\n    },\r\n    _tryRefreshPocketState: function() {\r\n        this._pullDownEnable(this.hasActionSubscription(\"onPullDown\"));\r\n        this._reachBottomEnable(this.hasActionSubscription(\"onReachBottom\"))\r\n    },\r\n    on: function(eventName) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (\"pullDown\" === eventName || \"reachBottom\" === eventName) {\r\n            this._tryRefreshPocketState()\r\n        }\r\n        return result\r\n    },\r\n    _pullDownEnable: function(enabled) {\r\n        if (0 === arguments.length) {\r\n            return this._pullDownEnabled\r\n        }\r\n        if (this._$pullDown && this._strategy) {\r\n            this._$pullDown.toggle(enabled);\r\n            this._strategy.pullDownEnable(enabled);\r\n            this._pullDownEnabled = enabled\r\n        }\r\n    },\r\n    _reachBottomEnable: function(enabled) {\r\n        if (0 === arguments.length) {\r\n            return this._reachBottomEnabled\r\n        }\r\n        if (this._$reachBottom && this._strategy) {\r\n            this._$reachBottom.toggle(enabled);\r\n            this._strategy.reachBottomEnable(enabled);\r\n            this._reachBottomEnabled = enabled\r\n        }\r\n    },\r\n    _pullDownHandler: function() {\r\n        this._loadingIndicator(false);\r\n        this._pullDownLoading()\r\n    },\r\n    _loadingIndicator: function(value) {\r\n        if (arguments.length < 1) {\r\n            return this._loadingIndicatorEnabled\r\n        }\r\n        this._loadingIndicatorEnabled = value\r\n    },\r\n    _pullDownLoading: function() {\r\n        this.startLoading();\r\n        this._pullDownAction()\r\n    },\r\n    _reachBottomHandler: function() {\r\n        this._loadingIndicator(false);\r\n        this._reachBottomLoading()\r\n    },\r\n    _reachBottomLoading: function() {\r\n        this.startLoading();\r\n        this._reachBottomAction()\r\n    },\r\n    _releaseHandler: function() {\r\n        this.finishLoading();\r\n        this._loadingIndicator(true)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onPullDown\":\r\n            case \"onReachBottom\":\r\n                this._createActions();\r\n                break;\r\n            case \"pullingDownText\":\r\n            case \"pulledDownText\":\r\n            case \"refreshingText\":\r\n            case \"refreshStrategy\":\r\n                this._invalidate();\r\n                break;\r\n            case \"reachBottomText\":\r\n                this._updateReachBottomText();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    isEmpty: function() {\r\n        return !(0, _renderer.default)(this.content()).children().length\r\n    },\r\n    content: function() {\r\n        return (0, _element.getPublicElement)(this._$content.children().eq(1))\r\n    },\r\n    release: function(preventReachBottom) {\r\n        if (void 0 !== preventReachBottom) {\r\n            this.toggleLoading(!preventReachBottom)\r\n        }\r\n        return this._strategy.release()\r\n    },\r\n    toggleLoading: function(showOrHide) {\r\n        this._reachBottomEnable(showOrHide)\r\n    },\r\n    isFull: function() {\r\n        return (0, _renderer.default)(this.content()).height() > this._$container.height()\r\n    },\r\n    refresh: function() {\r\n        if (!this.hasActionSubscription(\"onPullDown\")) {\r\n            return\r\n        }\r\n        this._strategy.pendingRelease();\r\n        this._pullDownLoading()\r\n    },\r\n    startLoading: function() {\r\n        if (this._loadingIndicator() && this.$element().is(\":visible\")) {\r\n            this._loadPanel.show()\r\n        }\r\n        this._lock()\r\n    },\r\n    finishLoading: function() {\r\n        this._loadPanel.hide();\r\n        this._unlock()\r\n    },\r\n    _dispose: function() {\r\n        this._strategy.dispose();\r\n        this.callBase();\r\n        if (this._loadPanel) {\r\n            this._loadPanel.$element().remove()\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxScrollView\", ScrollView);\r\nvar _default = ScrollView;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.scroll_view.native.pull_down.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _uiScrollable = _interopRequireDefault(require(\"./ui.scrollable.native\"));\r\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLVIEW_PULLDOWN_REFRESHING_CLASS = \"dx-scrollview-pull-down-loading\";\r\nvar SCROLLVIEW_PULLDOWN_READY_CLASS = \"dx-scrollview-pull-down-ready\";\r\nvar SCROLLVIEW_PULLDOWN_IMAGE_CLASS = \"dx-scrollview-pull-down-image\";\r\nvar SCROLLVIEW_PULLDOWN_INDICATOR_CLASS = \"dx-scrollview-pull-down-indicator\";\r\nvar SCROLLVIEW_PULLDOWN_TEXT_CLASS = \"dx-scrollview-pull-down-text\";\r\nvar SCROLLVIEW_PULLDOWN_VISIBLE_TEXT_CLASS = \"dx-scrollview-pull-down-text-visible\";\r\nvar STATE_RELEASED = 0;\r\nvar STATE_READY = 1;\r\nvar STATE_REFRESHING = 2;\r\nvar STATE_LOADING = 3;\r\nvar PULLDOWN_RELEASE_TIME = 400;\r\nvar PullDownNativeScrollViewStrategy = _uiScrollable.default.inherit({\r\n    _init: function(scrollView) {\r\n        this.callBase(scrollView);\r\n        this._$topPocket = scrollView._$topPocket;\r\n        this._$pullDown = scrollView._$pullDown;\r\n        this._$bottomPocket = scrollView._$bottomPocket;\r\n        this._$refreshingText = scrollView._$refreshingText;\r\n        this._$scrollViewContent = (0, _renderer.default)(scrollView.content());\r\n        this._initCallbacks()\r\n    },\r\n    _initCallbacks: function() {\r\n        this.pullDownCallbacks = (0, _callbacks.default)();\r\n        this.releaseCallbacks = (0, _callbacks.default)();\r\n        this.reachBottomCallbacks = (0, _callbacks.default)()\r\n    },\r\n    render: function() {\r\n        this.callBase();\r\n        this._renderPullDown();\r\n        this._releaseState()\r\n    },\r\n    _renderPullDown: function() {\r\n        var $image = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_PULLDOWN_IMAGE_CLASS);\r\n        var $loadContainer = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_PULLDOWN_INDICATOR_CLASS);\r\n        var $loadIndicator = new _load_indicator.default((0, _renderer.default)(\"<div>\")).$element();\r\n        var $text = this._$pullDownText = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_PULLDOWN_TEXT_CLASS);\r\n        this._$pullingDownText = (0, _renderer.default)(\"<div>\").text(this.option(\"pullingDownText\")).appendTo($text);\r\n        this._$pulledDownText = (0, _renderer.default)(\"<div>\").text(this.option(\"pulledDownText\")).appendTo($text);\r\n        this._$refreshingText = (0, _renderer.default)(\"<div>\").text(this.option(\"refreshingText\")).appendTo($text);\r\n        this._$pullDown.empty().append($image).append($loadContainer.append($loadIndicator)).append($text)\r\n    },\r\n    _releaseState: function() {\r\n        this._state = STATE_RELEASED;\r\n        this._refreshPullDownText()\r\n    },\r\n    _pushBackFromBoundary: function() {\r\n        if (!this._isLocked() && !this._component.isEmpty()) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _refreshPullDownText: function() {\r\n        var that = this;\r\n        var pullDownTextItems = [{\r\n            element: this._$pullingDownText,\r\n            visibleState: STATE_RELEASED\r\n        }, {\r\n            element: this._$pulledDownText,\r\n            visibleState: STATE_READY\r\n        }, {\r\n            element: this._$refreshingText,\r\n            visibleState: STATE_REFRESHING\r\n        }];\r\n        (0, _iterator.each)(pullDownTextItems, function(_, item) {\r\n            var action = that._state === item.visibleState ? \"addClass\" : \"removeClass\";\r\n            item.element[action](SCROLLVIEW_PULLDOWN_VISIBLE_TEXT_CLASS)\r\n        })\r\n    },\r\n    update: function() {\r\n        this.callBase();\r\n        this._setTopPocketOffset()\r\n    },\r\n    _updateDimensions: function() {\r\n        this.callBase();\r\n        this._topPocketSize = this._$topPocket.height();\r\n        this._bottomPocketSize = this._$bottomPocket.height();\r\n        if (_browser.default.msie) {\r\n            this._scrollOffset = Math.round(100 * (this._$container.height() - this._$content.height())) / 100\r\n        } else {\r\n            this._scrollOffset = this._$container.height() - this._$content.height()\r\n        }\r\n    },\r\n    _allowedDirections: function() {\r\n        var allowedDirections = this.callBase();\r\n        allowedDirections.vertical = allowedDirections.vertical || this._pullDownEnabled;\r\n        return allowedDirections\r\n    },\r\n    _setTopPocketOffset: function() {\r\n        this._$topPocket.css({\r\n            top: -this._topPocketSize\r\n        })\r\n    },\r\n    handleEnd: function() {\r\n        this.callBase();\r\n        this._complete()\r\n    },\r\n    handleStop: function() {\r\n        this.callBase();\r\n        this._complete()\r\n    },\r\n    _complete: function() {\r\n        if (this._state === STATE_READY) {\r\n            this._setPullDownOffset(this._topPocketSize);\r\n            clearTimeout(this._pullDownRefreshTimeout);\r\n            this._pullDownRefreshTimeout = setTimeout(function() {\r\n                this._pullDownRefreshing()\r\n            }.bind(this), 400)\r\n        }\r\n    },\r\n    _setPullDownOffset: function(offset) {\r\n        (0, _translator.move)(this._$topPocket, {\r\n            top: offset\r\n        });\r\n        (0, _translator.move)(this._$scrollViewContent, {\r\n            top: offset\r\n        })\r\n    },\r\n    handleScroll: function(e) {\r\n        this.callBase(e);\r\n        if (this._state === STATE_REFRESHING) {\r\n            return\r\n        }\r\n        var currentLocation = this.location().top;\r\n        var scrollDelta = (this._location || 0) - currentLocation;\r\n        this._location = currentLocation;\r\n        if (this._isPullDown()) {\r\n            this._pullDownReady()\r\n        } else {\r\n            if (scrollDelta > 0 && this._isReachBottom()) {\r\n                this._reachBottom()\r\n            } else {\r\n                this._stateReleased()\r\n            }\r\n        }\r\n    },\r\n    _isPullDown: function() {\r\n        return this._pullDownEnabled && this._location >= this._topPocketSize\r\n    },\r\n    _isReachBottom: function() {\r\n        return this._reachBottomEnabled && this._location - (this._scrollOffset + this._bottomPocketSize) <= .5\r\n    },\r\n    _reachBottom: function() {\r\n        if (this._state === STATE_LOADING) {\r\n            return\r\n        }\r\n        this._state = STATE_LOADING;\r\n        this.reachBottomCallbacks.fire()\r\n    },\r\n    _pullDownReady: function() {\r\n        if (this._state === STATE_READY) {\r\n            return\r\n        }\r\n        this._state = STATE_READY;\r\n        this._$pullDown.addClass(SCROLLVIEW_PULLDOWN_READY_CLASS);\r\n        this._refreshPullDownText()\r\n    },\r\n    _stateReleased: function() {\r\n        if (this._state === STATE_RELEASED) {\r\n            return\r\n        }\r\n        this._$pullDown.removeClass(SCROLLVIEW_PULLDOWN_REFRESHING_CLASS).removeClass(SCROLLVIEW_PULLDOWN_READY_CLASS);\r\n        this._releaseState()\r\n    },\r\n    _pullDownRefreshing: function() {\r\n        if (this._state === STATE_REFRESHING) {\r\n            return\r\n        }\r\n        this._state = STATE_REFRESHING;\r\n        this._$pullDown.addClass(SCROLLVIEW_PULLDOWN_REFRESHING_CLASS).removeClass(SCROLLVIEW_PULLDOWN_READY_CLASS);\r\n        this._refreshPullDownText();\r\n        this.pullDownCallbacks.fire()\r\n    },\r\n    pullDownEnable: function(enabled) {\r\n        if (enabled) {\r\n            this._updateDimensions();\r\n            this._setTopPocketOffset()\r\n        }\r\n        this._pullDownEnabled = enabled\r\n    },\r\n    reachBottomEnable: function(enabled) {\r\n        this._reachBottomEnabled = enabled\r\n    },\r\n    pendingRelease: function() {\r\n        this._state = STATE_READY\r\n    },\r\n    release: function() {\r\n        var deferred = new _deferred.Deferred;\r\n        this._updateDimensions();\r\n        clearTimeout(this._releaseTimeout);\r\n        if (this._state === STATE_LOADING) {\r\n            this._state = STATE_RELEASED\r\n        }\r\n        this._releaseTimeout = setTimeout(function() {\r\n            this._setPullDownOffset(0);\r\n            this._stateReleased();\r\n            this.releaseCallbacks.fire();\r\n            this._updateAction();\r\n            deferred.resolve()\r\n        }.bind(this), PULLDOWN_RELEASE_TIME);\r\n        return deferred.promise()\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._pullDownRefreshTimeout);\r\n        clearTimeout(this._releaseTimeout);\r\n        this.callBase()\r\n    }\r\n});\r\nvar _default = PullDownNativeScrollViewStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.scroll_view.native.swipe_down.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _uiScrollable = _interopRequireDefault(require(\"./ui.scrollable.native\"));\r\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLVIEW_PULLDOWN_DOWN_LOADING_CLASS = \"dx-scrollview-pull-down-loading\";\r\nvar SCROLLVIEW_PULLDOWN_INDICATOR_CLASS = \"dx-scrollview-pull-down-indicator\";\r\nvar SCROLLVIEW_PULLDOWN_REFRESHING_CLASS = \"dx-scrollview-pull-down-refreshing\";\r\nvar PULLDOWN_ICON_CLASS = \"dx-icon-pulldown\";\r\nvar STATE_RELEASED = 0;\r\nvar STATE_READY = 1;\r\nvar STATE_REFRESHING = 2;\r\nvar STATE_TOUCHED = 4;\r\nvar STATE_PULLED = 5;\r\nvar SwipeDownNativeScrollViewStrategy = _uiScrollable.default.inherit({\r\n    _init: function(scrollView) {\r\n        this.callBase(scrollView);\r\n        this._$topPocket = scrollView._$topPocket;\r\n        this._$bottomPocket = scrollView._$bottomPocket;\r\n        this._$pullDown = scrollView._$pullDown;\r\n        this._$scrollViewContent = scrollView.content();\r\n        this._initCallbacks();\r\n        this._location = 0\r\n    },\r\n    _initCallbacks: function() {\r\n        this.pullDownCallbacks = (0, _callbacks.default)();\r\n        this.releaseCallbacks = (0, _callbacks.default)();\r\n        this.reachBottomCallbacks = (0, _callbacks.default)()\r\n    },\r\n    render: function() {\r\n        this.callBase();\r\n        this._renderPullDown();\r\n        this._releaseState()\r\n    },\r\n    _renderPullDown: function() {\r\n        var $loadContainer = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_PULLDOWN_INDICATOR_CLASS);\r\n        var $loadIndicator = new _load_indicator.default((0, _renderer.default)(\"<div>\")).$element();\r\n        this._$icon = (0, _renderer.default)(\"<div>\").addClass(PULLDOWN_ICON_CLASS);\r\n        this._$pullDown.empty().append(this._$icon).append($loadContainer.append($loadIndicator))\r\n    },\r\n    _releaseState: function() {\r\n        this._state = STATE_RELEASED;\r\n        this._releasePullDown();\r\n        this._updateDimensions()\r\n    },\r\n    _releasePullDown: function() {\r\n        this._$pullDown.css({\r\n            opacity: 0\r\n        })\r\n    },\r\n    _updateDimensions: function() {\r\n        this.callBase();\r\n        this._topPocketSize = this._$topPocket.height();\r\n        this._bottomPocketSize = this._$bottomPocket.height();\r\n        this._scrollOffset = this._$container.height() - this._$content.height()\r\n    },\r\n    _allowedDirections: function() {\r\n        var allowedDirections = this.callBase();\r\n        allowedDirections.vertical = allowedDirections.vertical || this._pullDownEnabled;\r\n        return allowedDirections\r\n    },\r\n    handleInit: function(e) {\r\n        this.callBase(e);\r\n        if (this._state === STATE_RELEASED && 0 === this._location) {\r\n            this._startClientY = (0, _index.eventData)(e.originalEvent).y;\r\n            this._state = STATE_TOUCHED\r\n        }\r\n    },\r\n    handleMove: function(e) {\r\n        this.callBase(e);\r\n        this._deltaY = (0, _index.eventData)(e.originalEvent).y - this._startClientY;\r\n        if (this._state === STATE_TOUCHED) {\r\n            if (this._pullDownEnabled && this._deltaY > 0) {\r\n                this._state = STATE_PULLED\r\n            } else {\r\n                this._complete()\r\n            }\r\n        }\r\n        if (this._state === STATE_PULLED) {\r\n            e.preventDefault();\r\n            this._movePullDown()\r\n        }\r\n    },\r\n    _movePullDown: function() {\r\n        var pullDownHeight = this._getPullDownHeight();\r\n        var top = Math.min(3 * pullDownHeight, this._deltaY + this._getPullDownStartPosition());\r\n        var angle = 180 * top / pullDownHeight / 3;\r\n        this._$pullDown.css({\r\n            opacity: 1\r\n        }).toggleClass(SCROLLVIEW_PULLDOWN_REFRESHING_CLASS, top < pullDownHeight);\r\n        (0, _translator.move)(this._$pullDown, {\r\n            top: top\r\n        });\r\n        this._$icon.css({\r\n            transform: \"rotate(\" + angle + \"deg)\"\r\n        })\r\n    },\r\n    _isPullDown: function() {\r\n        return this._pullDownEnabled && this._state === STATE_PULLED && this._deltaY >= this._getPullDownHeight() - this._getPullDownStartPosition()\r\n    },\r\n    _getPullDownHeight: function() {\r\n        return Math.round(.05 * this._$element.outerHeight())\r\n    },\r\n    _getPullDownStartPosition: function() {\r\n        return -Math.round(1.5 * this._$pullDown.outerHeight())\r\n    },\r\n    handleEnd: function() {\r\n        if (this._isPullDown()) {\r\n            this._pullDownRefreshing()\r\n        }\r\n        this._complete()\r\n    },\r\n    handleStop: function() {\r\n        this._complete()\r\n    },\r\n    _complete: function() {\r\n        if (this._state === STATE_TOUCHED || this._state === STATE_PULLED) {\r\n            this._releaseState()\r\n        }\r\n    },\r\n    handleScroll: function(e) {\r\n        this.callBase(e);\r\n        if (this._state === STATE_REFRESHING) {\r\n            return\r\n        }\r\n        var currentLocation = this.location().top;\r\n        var scrollDelta = this._location - currentLocation;\r\n        this._location = currentLocation;\r\n        if (scrollDelta > 0 && this._isReachBottom()) {\r\n            this._reachBottom()\r\n        } else {\r\n            this._stateReleased()\r\n        }\r\n    },\r\n    _isReachBottom: function() {\r\n        return this._reachBottomEnabled && this._location <= this._scrollOffset + this._bottomPocketSize\r\n    },\r\n    _reachBottom: function() {\r\n        this.reachBottomCallbacks.fire()\r\n    },\r\n    _stateReleased: function() {\r\n        if (this._state === STATE_RELEASED) {\r\n            return\r\n        }\r\n        this._$pullDown.removeClass(SCROLLVIEW_PULLDOWN_DOWN_LOADING_CLASS);\r\n        this._releaseState()\r\n    },\r\n    _pullDownRefreshing: function() {\r\n        this._state = STATE_REFRESHING;\r\n        this._pullDownRefreshHandler()\r\n    },\r\n    _pullDownRefreshHandler: function() {\r\n        this._refreshPullDown();\r\n        this.pullDownCallbacks.fire()\r\n    },\r\n    _refreshPullDown: function() {\r\n        this._$pullDown.addClass(SCROLLVIEW_PULLDOWN_DOWN_LOADING_CLASS);\r\n        (0, _translator.move)(this._$pullDown, {\r\n            top: this._getPullDownHeight()\r\n        })\r\n    },\r\n    pullDownEnable: function(enabled) {\r\n        this._$topPocket.toggle(enabled);\r\n        this._pullDownEnabled = enabled\r\n    },\r\n    reachBottomEnable: function(enabled) {\r\n        this._reachBottomEnabled = enabled\r\n    },\r\n    pendingRelease: function() {\r\n        this._state = STATE_READY\r\n    },\r\n    release: function() {\r\n        var deferred = new _deferred.Deferred;\r\n        this._updateDimensions();\r\n        clearTimeout(this._releaseTimeout);\r\n        this._releaseTimeout = setTimeout(function() {\r\n            this._stateReleased();\r\n            this.releaseCallbacks.fire();\r\n            this._updateAction();\r\n            deferred.resolve()\r\n        }.bind(this), 800);\r\n        return deferred.promise()\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._pullDownRefreshTimeout);\r\n        clearTimeout(this._releaseTimeout);\r\n        this.callBase()\r\n    }\r\n});\r\nvar _default = SwipeDownNativeScrollViewStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.scroll_view.simulated.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiScrollable = require(\"./ui.scrollable.simulated\");\r\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar math = Math;\r\nvar SCROLLVIEW_PULLDOWN_REFRESHING_CLASS = \"dx-scrollview-pull-down-loading\";\r\nvar SCROLLVIEW_PULLDOWN_READY_CLASS = \"dx-scrollview-pull-down-ready\";\r\nvar SCROLLVIEW_PULLDOWN_IMAGE_CLASS = \"dx-scrollview-pull-down-image\";\r\nvar SCROLLVIEW_PULLDOWN_INDICATOR_CLASS = \"dx-scrollview-pull-down-indicator\";\r\nvar SCROLLVIEW_PULLDOWN_TEXT_CLASS = \"dx-scrollview-pull-down-text\";\r\nvar SCROLLVIEW_PULLDOWN_VISIBLE_TEXT_CLASS = \"dx-scrollview-pull-down-text-visible\";\r\nvar STATE_RELEASED = 0;\r\nvar STATE_READY = 1;\r\nvar STATE_REFRESHING = 2;\r\nvar STATE_LOADING = 3;\r\nvar ScrollViewScroller = _uiScrollable.Scroller.inherit({\r\n    ctor: function() {\r\n        this._topPocketSize = 0;\r\n        this.callBase.apply(this, arguments);\r\n        this._initCallbacks();\r\n        this._releaseState()\r\n    },\r\n    _releaseState: function() {\r\n        this._state = STATE_RELEASED;\r\n        this._refreshPullDownText()\r\n    },\r\n    _refreshPullDownText: function() {\r\n        var that = this;\r\n        var pullDownTextItems = [{\r\n            element: this._$pullingDownText,\r\n            visibleState: STATE_RELEASED\r\n        }, {\r\n            element: this._$pulledDownText,\r\n            visibleState: STATE_READY\r\n        }, {\r\n            element: this._$refreshingText,\r\n            visibleState: STATE_REFRESHING\r\n        }];\r\n        (0, _iterator.each)(pullDownTextItems, function(_, item) {\r\n            var action = that._state === item.visibleState ? \"addClass\" : \"removeClass\";\r\n            item.element[action](SCROLLVIEW_PULLDOWN_VISIBLE_TEXT_CLASS)\r\n        })\r\n    },\r\n    _initCallbacks: function() {\r\n        this.pullDownCallbacks = (0, _callbacks.default)();\r\n        this.releaseCallbacks = (0, _callbacks.default)();\r\n        this.reachBottomCallbacks = (0, _callbacks.default)()\r\n    },\r\n    _updateBounds: function() {\r\n        var considerPockets = \"horizontal\" !== this._direction;\r\n        this._topPocketSize = considerPockets ? Math.round(this._$topPocket[this._dimension]()) : 0;\r\n        this._bottomPocketSize = considerPockets ? Math.round(this._$bottomPocket[this._dimension]()) : 0;\r\n        this.callBase();\r\n        this._bottomBound = this._minOffset + this._bottomPocketSize\r\n    },\r\n    _updateScrollbar: function() {\r\n        this._scrollbar.option({\r\n            containerSize: this._containerSize(),\r\n            contentSize: this._contentSize() - this._topPocketSize - this._bottomPocketSize,\r\n            scaleRatio: this._getScaleRatio()\r\n        })\r\n    },\r\n    _moveContent: function() {\r\n        this.callBase();\r\n        if (this._isPullDown()) {\r\n            this._pullDownReady()\r\n        } else {\r\n            if (this._isReachBottom()) {\r\n                this._reachBottomReady()\r\n            } else {\r\n                if (this._state !== STATE_RELEASED) {\r\n                    this._stateReleased()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _moveScrollbar: function() {\r\n        this._scrollbar.moveTo(this._topPocketSize + this._location)\r\n    },\r\n    _isPullDown: function() {\r\n        return this._pullDownEnabled && this._location >= 0\r\n    },\r\n    _isReachBottom: function() {\r\n        return this._reachBottomEnabled && this._location - this._bottomBound <= .5\r\n    },\r\n    _scrollComplete: function() {\r\n        if (this._inBounds() && this._state === STATE_READY) {\r\n            this._pullDownRefreshing()\r\n        } else {\r\n            if (this._inBounds() && this._state === STATE_LOADING) {\r\n                this._reachBottomLoading()\r\n            } else {\r\n                this.callBase()\r\n            }\r\n        }\r\n    },\r\n    _reachBottomReady: function() {\r\n        if (this._state === STATE_LOADING) {\r\n            return\r\n        }\r\n        this._state = STATE_LOADING;\r\n        this._minOffset = this._getMinOffset()\r\n    },\r\n    _getMaxOffset: function() {\r\n        return -this._topPocketSize\r\n    },\r\n    _getMinOffset: function() {\r\n        return math.min(this.callBase(), -this._topPocketSize)\r\n    },\r\n    _reachBottomLoading: function() {\r\n        this.reachBottomCallbacks.fire()\r\n    },\r\n    _pullDownReady: function() {\r\n        if (this._state === STATE_READY) {\r\n            return\r\n        }\r\n        this._state = STATE_READY;\r\n        this._maxOffset = 0;\r\n        this._$pullDown.addClass(SCROLLVIEW_PULLDOWN_READY_CLASS);\r\n        this._refreshPullDownText()\r\n    },\r\n    _stateReleased: function() {\r\n        if (this._state === STATE_RELEASED) {\r\n            return\r\n        }\r\n        this._releaseState();\r\n        this._updateBounds();\r\n        this._$pullDown.removeClass(SCROLLVIEW_PULLDOWN_REFRESHING_CLASS).removeClass(SCROLLVIEW_PULLDOWN_READY_CLASS);\r\n        this.releaseCallbacks.fire()\r\n    },\r\n    _pullDownRefreshing: function() {\r\n        if (this._state === STATE_REFRESHING) {\r\n            return\r\n        }\r\n        this._state = STATE_REFRESHING;\r\n        this._$pullDown.addClass(SCROLLVIEW_PULLDOWN_REFRESHING_CLASS).removeClass(SCROLLVIEW_PULLDOWN_READY_CLASS);\r\n        this._refreshPullDownText();\r\n        this.pullDownCallbacks.fire()\r\n    },\r\n    _releaseHandler: function() {\r\n        if (this._state === STATE_RELEASED) {\r\n            this._moveToBounds()\r\n        }\r\n        this._update();\r\n        if (this._releaseTask) {\r\n            this._releaseTask.abort()\r\n        }\r\n        this._releaseTask = (0, _common.executeAsync)(this._release.bind(this));\r\n        return this._releaseTask.promise\r\n    },\r\n    _release: function() {\r\n        this._stateReleased();\r\n        this._scrollComplete()\r\n    },\r\n    _reachBottomEnablingHandler: function(enabled) {\r\n        if (this._reachBottomEnabled === enabled) {\r\n            return\r\n        }\r\n        this._reachBottomEnabled = enabled;\r\n        this._updateBounds()\r\n    },\r\n    _pullDownEnablingHandler: function(enabled) {\r\n        if (this._pullDownEnabled === enabled) {\r\n            return\r\n        }\r\n        this._pullDownEnabled = enabled;\r\n        this._considerTopPocketChange();\r\n        this._updateHandler()\r\n    },\r\n    _considerTopPocketChange: function() {\r\n        this._location -= this._$topPocket.height() || -this._topPocketSize;\r\n        this._maxOffset = 0;\r\n        this._move()\r\n    },\r\n    _pendingReleaseHandler: function() {\r\n        this._state = STATE_READY\r\n    },\r\n    dispose: function() {\r\n        if (this._releaseTask) {\r\n            this._releaseTask.abort()\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nvar SimulatedScrollViewStrategy = _uiScrollable.SimulatedStrategy.inherit({\r\n    _init: function(scrollView) {\r\n        this.callBase(scrollView);\r\n        this._$pullDown = scrollView._$pullDown;\r\n        this._$topPocket = scrollView._$topPocket;\r\n        this._$bottomPocket = scrollView._$bottomPocket;\r\n        this._initCallbacks()\r\n    },\r\n    _initCallbacks: function() {\r\n        this.pullDownCallbacks = (0, _callbacks.default)();\r\n        this.releaseCallbacks = (0, _callbacks.default)();\r\n        this.reachBottomCallbacks = (0, _callbacks.default)()\r\n    },\r\n    render: function() {\r\n        this._renderPullDown();\r\n        this.callBase()\r\n    },\r\n    _renderPullDown: function() {\r\n        var $image = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_PULLDOWN_IMAGE_CLASS);\r\n        var $loadContainer = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_PULLDOWN_INDICATOR_CLASS);\r\n        var $loadIndicator = new _load_indicator.default((0, _renderer.default)(\"<div>\")).$element();\r\n        var $text = this._$pullDownText = (0, _renderer.default)(\"<div>\").addClass(SCROLLVIEW_PULLDOWN_TEXT_CLASS);\r\n        this._$pullingDownText = (0, _renderer.default)(\"<div>\").text(this.option(\"pullingDownText\")).appendTo($text);\r\n        this._$pulledDownText = (0, _renderer.default)(\"<div>\").text(this.option(\"pulledDownText\")).appendTo($text);\r\n        this._$refreshingText = (0, _renderer.default)(\"<div>\").text(this.option(\"refreshingText\")).appendTo($text);\r\n        this._$pullDown.empty().append($image).append($loadContainer.append($loadIndicator)).append($text)\r\n    },\r\n    pullDownEnable: function(enabled) {\r\n        this._eventHandler(\"pullDownEnabling\", enabled)\r\n    },\r\n    reachBottomEnable: function(enabled) {\r\n        this._eventHandler(\"reachBottomEnabling\", enabled)\r\n    },\r\n    _createScroller: function(direction) {\r\n        var that = this;\r\n        var scroller = that._scrollers[direction] = new ScrollViewScroller(that._scrollerOptions(direction));\r\n        scroller.pullDownCallbacks.add(function() {\r\n            that.pullDownCallbacks.fire()\r\n        });\r\n        scroller.releaseCallbacks.add(function() {\r\n            that.releaseCallbacks.fire()\r\n        });\r\n        scroller.reachBottomCallbacks.add(function() {\r\n            that.reachBottomCallbacks.fire()\r\n        })\r\n    },\r\n    _scrollerOptions: function(direction) {\r\n        return (0, _extend.extend)(this.callBase(direction), {\r\n            $topPocket: this._$topPocket,\r\n            $bottomPocket: this._$bottomPocket,\r\n            $pullDown: this._$pullDown,\r\n            $pullDownText: this._$pullDownText,\r\n            $pullingDownText: this._$pullingDownText,\r\n            $pulledDownText: this._$pulledDownText,\r\n            $refreshingText: this._$refreshingText\r\n        })\r\n    },\r\n    pendingRelease: function() {\r\n        this._eventHandler(\"pendingRelease\")\r\n    },\r\n    release: function() {\r\n        return this._eventHandler(\"release\").done(this._updateAction)\r\n    },\r\n    location: function location() {\r\n        var location = this.callBase();\r\n        location.top += this._$topPocket.height();\r\n        return location\r\n    },\r\n    dispose: function() {\r\n        (0, _iterator.each)(this._scrollers, function() {\r\n            this.dispose()\r\n        });\r\n        this.callBase()\r\n    }\r\n});\r\nvar _default = SimulatedScrollViewStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.scrollable.device.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.deviceDependentOptions = void 0;\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _support = require(\"../../core/utils/support\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar deviceDependentOptions = function() {\r\n    return [{\r\n        device: function() {\r\n            return !_support.nativeScrolling\r\n        },\r\n        options: {\r\n            useNative: false\r\n        }\r\n    }, {\r\n        device: function(_device) {\r\n            return !_devices.default.isSimulator() && \"desktop\" === _devices.default.real().deviceType && \"generic\" === _device.platform\r\n        },\r\n        options: {\r\n            bounceEnabled: false,\r\n            scrollByThumb: true,\r\n            scrollByContent: _support.touch,\r\n            showScrollbar: \"onHover\"\r\n        }\r\n    }]\r\n};\r\nexports.deviceDependentOptions = deviceDependentOptions;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.scrollable.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _support = require(\"../../core/utils/support\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _element = require(\"../../core/element\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _dom_component = _interopRequireDefault(require(\"../../core/dom_component\"));\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _uiEventsEmitterGesture = _interopRequireDefault(require(\"./ui.events.emitter.gesture.scroll\"));\r\nvar _uiScrollable = require(\"./ui.scrollable.simulated\");\r\nvar _uiScrollable2 = _interopRequireDefault(require(\"./ui.scrollable.native\"));\r\nvar _uiScrollable3 = require(\"./ui.scrollable.device\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLABLE = \"dxScrollable\";\r\nvar SCROLLABLE_STRATEGY = \"dxScrollableStrategy\";\r\nvar SCROLLABLE_CLASS = \"dx-scrollable\";\r\nvar SCROLLABLE_DISABLED_CLASS = \"dx-scrollable-disabled\";\r\nvar SCROLLABLE_CONTAINER_CLASS = \"dx-scrollable-container\";\r\nvar SCROLLABLE_WRAPPER_CLASS = \"dx-scrollable-wrapper\";\r\nvar SCROLLABLE_CONTENT_CLASS = \"dx-scrollable-content\";\r\nvar VERTICAL = \"vertical\";\r\nvar HORIZONTAL = \"horizontal\";\r\nvar BOTH = \"both\";\r\nvar Scrollable = _dom_component.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            disabled: false,\r\n            onScroll: null,\r\n            direction: VERTICAL,\r\n            showScrollbar: \"onScroll\",\r\n            useNative: true,\r\n            bounceEnabled: true,\r\n            scrollByContent: true,\r\n            scrollByThumb: false,\r\n            onUpdated: null,\r\n            onStart: null,\r\n            onEnd: null,\r\n            onBounce: null,\r\n            onStop: null,\r\n            useSimulatedScrollbar: false,\r\n            useKeyboard: true,\r\n            inertiaEnabled: true,\r\n            pushBackValue: 0,\r\n            updateManually: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat((0, _uiScrollable3.deviceDependentOptions)(), [{\r\n            device: function() {\r\n                return _support.nativeScrolling && \"android\" === _devices.default.real().platform && !_browser.default.mozilla\r\n            },\r\n            options: {\r\n                useSimulatedScrollbar: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"ios\" === _devices.default.real().platform\r\n            },\r\n            options: {\r\n                pushBackValue: 1\r\n            }\r\n        }])\r\n    },\r\n    _initOptions: function(options) {\r\n        this.callBase(options);\r\n        if (!(\"useSimulatedScrollbar\" in options)) {\r\n            this._setUseSimulatedScrollbar()\r\n        }\r\n    },\r\n    _setUseSimulatedScrollbar: function() {\r\n        if (!this.initialOption(\"useSimulatedScrollbar\")) {\r\n            this.option(\"useSimulatedScrollbar\", !this.option(\"useNative\"))\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initScrollableMarkup();\r\n        this._locked = false\r\n    },\r\n    _getWindowDevicePixelRatio: function() {\r\n        return (0, _window.hasWindow)() ? (0, _window.getWindow)().devicePixelRatio : 1\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.update();\r\n            this._updateRtlPosition();\r\n            this._savedScrollOffset && this.scrollTo(this._savedScrollOffset);\r\n            delete this._savedScrollOffset\r\n        } else {\r\n            this._savedScrollOffset = this.scrollOffset()\r\n        }\r\n    },\r\n    _initScrollableMarkup: function() {\r\n        var $element = this.$element().addClass(SCROLLABLE_CLASS);\r\n        var $container = this._$container = (0, _renderer.default)(\"<div>\").addClass(SCROLLABLE_CONTAINER_CLASS);\r\n        var $wrapper = this._$wrapper = (0, _renderer.default)(\"<div>\").addClass(SCROLLABLE_WRAPPER_CLASS);\r\n        var $content = this._$content = (0, _renderer.default)(\"<div>\").addClass(SCROLLABLE_CONTENT_CLASS);\r\n        if (_dom_adapter.default.hasDocumentProperty(\"onbeforeactivate\") && _browser.default.msie && _browser.default.version < 12) {\r\n            _events_engine.default.on($element, (0, _index.addNamespace)(\"beforeactivate\", SCROLLABLE), function(e) {\r\n                if (!(0, _renderer.default)(e.target).is(_selectors.focusable)) {\r\n                    e.preventDefault()\r\n                }\r\n            })\r\n        }\r\n        $content.append($element.contents()).appendTo($container);\r\n        $container.appendTo($wrapper);\r\n        $wrapper.appendTo($element)\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.update();\r\n        this._updateRtlPosition()\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderDirection()\r\n    },\r\n    _render: function() {\r\n        this._renderStrategy();\r\n        this._attachEventHandlers();\r\n        this._renderDisabledState();\r\n        this._createActions();\r\n        this.update();\r\n        this.callBase();\r\n        this._rtlConfig = {\r\n            scrollRight: 0,\r\n            clientWidth: this._container().get(0).clientWidth,\r\n            windowPixelRatio: this._getWindowDevicePixelRatio()\r\n        };\r\n        this._updateRtlPosition()\r\n    },\r\n    _isHorizontalAndRtlEnabled: function() {\r\n        return this.option(\"rtlEnabled\") && this.option(\"direction\") !== VERTICAL\r\n    },\r\n    _updateRtlPosition: function() {\r\n        var _this = this;\r\n        this._updateBounds();\r\n        if (this._isHorizontalAndRtlEnabled()) {\r\n            (0, _common.deferUpdate)(function() {\r\n                var scrollLeft = _this._getMaxOffset().left - _this._rtlConfig.scrollRight;\r\n                if (scrollLeft <= 0) {\r\n                    scrollLeft = 0;\r\n                    _this._rtlConfig.scrollRight = _this._getMaxOffset().left\r\n                }(0, _common.deferRender)(function() {\r\n                    if (_this.scrollLeft() !== scrollLeft) {\r\n                        _this._rtlConfig.skipUpdating = true;\r\n                        _this.scrollTo({\r\n                            left: scrollLeft\r\n                        });\r\n                        _this._rtlConfig.skipUpdating = false\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    },\r\n    _getMaxOffset: function() {\r\n        var _this$_container$get = this._container().get(0),\r\n            scrollWidth = _this$_container$get.scrollWidth,\r\n            clientWidth = _this$_container$get.clientWidth,\r\n            scrollHeight = _this$_container$get.scrollHeight,\r\n            clientHeight = _this$_container$get.clientHeight;\r\n        return {\r\n            left: scrollWidth - clientWidth,\r\n            top: scrollHeight - clientHeight\r\n        }\r\n    },\r\n    _updateBounds: function() {\r\n        this._strategy.updateBounds()\r\n    },\r\n    _attachEventHandlers: function() {\r\n        var strategy = this._strategy;\r\n        var initEventData = {\r\n            getDirection: strategy.getDirection.bind(strategy),\r\n            validate: this._validate.bind(this),\r\n            isNative: this.option(\"useNative\"),\r\n            scrollTarget: this._$container\r\n        };\r\n        _events_engine.default.off(this._$wrapper, \".\" + SCROLLABLE);\r\n        _events_engine.default.on(this._$wrapper, (0, _index.addNamespace)(_uiEventsEmitterGesture.default.init, SCROLLABLE), initEventData, this._initHandler.bind(this));\r\n        _events_engine.default.on(this._$wrapper, (0, _index.addNamespace)(_uiEventsEmitterGesture.default.start, SCROLLABLE), strategy.handleStart.bind(strategy));\r\n        _events_engine.default.on(this._$wrapper, (0, _index.addNamespace)(_uiEventsEmitterGesture.default.move, SCROLLABLE), strategy.handleMove.bind(strategy));\r\n        _events_engine.default.on(this._$wrapper, (0, _index.addNamespace)(_uiEventsEmitterGesture.default.end, SCROLLABLE), strategy.handleEnd.bind(strategy));\r\n        _events_engine.default.on(this._$wrapper, (0, _index.addNamespace)(_uiEventsEmitterGesture.default.cancel, SCROLLABLE), strategy.handleCancel.bind(strategy));\r\n        _events_engine.default.on(this._$wrapper, (0, _index.addNamespace)(_uiEventsEmitterGesture.default.stop, SCROLLABLE), strategy.handleStop.bind(strategy));\r\n        _events_engine.default.off(this._$container, \".\" + SCROLLABLE);\r\n        _events_engine.default.on(this._$container, (0, _index.addNamespace)(\"scroll\", SCROLLABLE), strategy.handleScroll.bind(strategy))\r\n    },\r\n    _updateRtlConfig: function() {\r\n        if (this._isHorizontalAndRtlEnabled() && !this._rtlConfig.skipUpdating) {\r\n            var _this$_container$get2 = this._container().get(0),\r\n                clientWidth = _this$_container$get2.clientWidth,\r\n                scrollLeft = _this$_container$get2.scrollLeft;\r\n            var windowPixelRatio = this._getWindowDevicePixelRatio();\r\n            if (this._rtlConfig.windowPixelRatio === windowPixelRatio && this._rtlConfig.clientWidth === clientWidth) {\r\n                this._rtlConfig.scrollRight = this._getMaxOffset().left - scrollLeft\r\n            }\r\n            this._rtlConfig.clientWidth = clientWidth;\r\n            this._rtlConfig.windowPixelRatio = windowPixelRatio\r\n        }\r\n    },\r\n    _validate: function(e) {\r\n        if (this._isLocked()) {\r\n            return false\r\n        }\r\n        this._updateIfNeed();\r\n        return this._strategy.validate(e)\r\n    },\r\n    _initHandler: function() {\r\n        var strategy = this._strategy;\r\n        strategy.handleInit.apply(strategy, arguments)\r\n    },\r\n    _renderDisabledState: function() {\r\n        this.$element().toggleClass(SCROLLABLE_DISABLED_CLASS, this.option(\"disabled\"));\r\n        if (this.option(\"disabled\")) {\r\n            this._lock()\r\n        } else {\r\n            this._unlock()\r\n        }\r\n    },\r\n    _renderDirection: function() {\r\n        this.$element().removeClass(\"dx-scrollable-\" + HORIZONTAL).removeClass(\"dx-scrollable-\" + VERTICAL).removeClass(\"dx-scrollable-\" + BOTH).addClass(\"dx-scrollable-\" + this.option(\"direction\"))\r\n    },\r\n    _renderStrategy: function() {\r\n        this._createStrategy();\r\n        this._strategy.render();\r\n        this.$element().data(SCROLLABLE_STRATEGY, this._strategy)\r\n    },\r\n    _createStrategy: function() {\r\n        this._strategy = this.option(\"useNative\") ? new _uiScrollable2.default(this) : new _uiScrollable.SimulatedStrategy(this)\r\n    },\r\n    _createActions: function() {\r\n        this._strategy && this._strategy.createActions()\r\n    },\r\n    _clean: function() {\r\n        this._strategy && this._strategy.dispose()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onStart\":\r\n            case \"onEnd\":\r\n            case \"onStop\":\r\n            case \"onUpdated\":\r\n            case \"onScroll\":\r\n            case \"onBounce\":\r\n                this._createActions();\r\n                break;\r\n            case \"direction\":\r\n                this._resetInactiveDirection();\r\n                this._invalidate();\r\n                break;\r\n            case \"useNative\":\r\n                this._setUseSimulatedScrollbar();\r\n                this._invalidate();\r\n                break;\r\n            case \"inertiaEnabled\":\r\n            case \"scrollByContent\":\r\n            case \"scrollByThumb\":\r\n            case \"bounceEnabled\":\r\n            case \"useKeyboard\":\r\n            case \"showScrollbar\":\r\n            case \"useSimulatedScrollbar\":\r\n            case \"pushBackValue\":\r\n                this._invalidate();\r\n                break;\r\n            case \"disabled\":\r\n                this._renderDisabledState();\r\n                this._strategy && this._strategy.disabledChanged();\r\n                break;\r\n            case \"updateManually\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._updateRtlPosition();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _resetInactiveDirection: function() {\r\n        var inactiveProp = this._getInactiveProp();\r\n        if (!inactiveProp || !(0, _window.hasWindow)()) {\r\n            return\r\n        }\r\n        var scrollOffset = this.scrollOffset();\r\n        scrollOffset[inactiveProp] = 0;\r\n        this.scrollTo(scrollOffset)\r\n    },\r\n    _getInactiveProp: function() {\r\n        var direction = this.option(\"direction\");\r\n        if (direction === VERTICAL) {\r\n            return \"left\"\r\n        }\r\n        if (direction === HORIZONTAL) {\r\n            return \"top\"\r\n        }\r\n    },\r\n    _location: function() {\r\n        return this._strategy.location()\r\n    },\r\n    _normalizeLocation: function(location) {\r\n        if ((0, _type.isPlainObject)(location)) {\r\n            var left = (0, _common.ensureDefined)(location.left, location.x);\r\n            var top = (0, _common.ensureDefined)(location.top, location.y);\r\n            return {\r\n                left: (0, _type.isDefined)(left) ? -left : void 0,\r\n                top: (0, _type.isDefined)(top) ? -top : void 0\r\n            }\r\n        } else {\r\n            var direction = this.option(\"direction\");\r\n            return {\r\n                left: direction !== VERTICAL ? -location : void 0,\r\n                top: direction !== HORIZONTAL ? -location : void 0\r\n            }\r\n        }\r\n    },\r\n    _isLocked: function() {\r\n        return this._locked\r\n    },\r\n    _lock: function() {\r\n        this._locked = true\r\n    },\r\n    _unlock: function() {\r\n        if (!this.option(\"disabled\")) {\r\n            this._locked = false\r\n        }\r\n    },\r\n    _isDirection: function(direction) {\r\n        var current = this.option(\"direction\");\r\n        if (direction === VERTICAL) {\r\n            return current !== HORIZONTAL\r\n        }\r\n        if (direction === HORIZONTAL) {\r\n            return current !== VERTICAL\r\n        }\r\n        return current === direction\r\n    },\r\n    _updateAllowedDirection: function() {\r\n        var allowedDirections = this._strategy._allowedDirections();\r\n        if (this._isDirection(BOTH) && allowedDirections.vertical && allowedDirections.horizontal) {\r\n            this._allowedDirectionValue = BOTH\r\n        } else {\r\n            if (this._isDirection(HORIZONTAL) && allowedDirections.horizontal) {\r\n                this._allowedDirectionValue = HORIZONTAL\r\n            } else {\r\n                if (this._isDirection(VERTICAL) && allowedDirections.vertical) {\r\n                    this._allowedDirectionValue = VERTICAL\r\n                } else {\r\n                    this._allowedDirectionValue = null\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _allowedDirection: function() {\r\n        return this._allowedDirectionValue\r\n    },\r\n    _container: function() {\r\n        return this._$container\r\n    },\r\n    $content: function() {\r\n        return this._$content\r\n    },\r\n    content: function() {\r\n        return (0, _element.getPublicElement)(this._$content)\r\n    },\r\n    container: function() {\r\n        return (0, _element.getPublicElement)(this._$container)\r\n    },\r\n    scrollOffset: function() {\r\n        return this._getScrollOffset()\r\n    },\r\n    _getScrollOffset: function() {\r\n        return {\r\n            top: -this._location().top,\r\n            left: -this._location().left\r\n        }\r\n    },\r\n    scrollTop: function() {\r\n        return this.scrollOffset().top\r\n    },\r\n    scrollLeft: function() {\r\n        return this.scrollOffset().left\r\n    },\r\n    clientHeight: function() {\r\n        return this._$container.height()\r\n    },\r\n    scrollHeight: function() {\r\n        return this.$content().outerHeight() - 2 * this._strategy.verticalOffset()\r\n    },\r\n    clientWidth: function() {\r\n        return this._$container.width()\r\n    },\r\n    scrollWidth: function() {\r\n        return this.$content().outerWidth()\r\n    },\r\n    update: function() {\r\n        if (!this._strategy) {\r\n            return\r\n        }\r\n        return (0, _deferred.when)(this._strategy.update()).done(function() {\r\n            this._updateAllowedDirection()\r\n        }.bind(this))\r\n    },\r\n    scrollBy: function(distance) {\r\n        distance = this._normalizeLocation(distance);\r\n        if (!distance.top && !distance.left) {\r\n            return\r\n        }\r\n        this._updateIfNeed();\r\n        this._strategy.scrollBy(distance);\r\n        this._updateRtlConfig()\r\n    },\r\n    scrollTo: function(targetLocation) {\r\n        targetLocation = this._normalizeLocation(targetLocation);\r\n        this._updateIfNeed();\r\n        var location = this._location();\r\n        if (!this.option(\"useNative\")) {\r\n            targetLocation = this._strategy._applyScaleRatio(targetLocation);\r\n            location = this._strategy._applyScaleRatio(location)\r\n        }\r\n        var distance = this._normalizeLocation({\r\n            left: location.left - (0, _common.ensureDefined)(targetLocation.left, location.left),\r\n            top: location.top - (0, _common.ensureDefined)(targetLocation.top, location.top)\r\n        });\r\n        if (!distance.top && !distance.left) {\r\n            return\r\n        }\r\n        this._strategy.scrollBy(distance);\r\n        this._updateRtlConfig()\r\n    },\r\n    scrollToElement: function(element, offset) {\r\n        var $element = (0, _renderer.default)(element);\r\n        var elementInsideContent = this.$content().find(element).length;\r\n        var elementIsInsideContent = $element.parents(\".\" + SCROLLABLE_CLASS).length - $element.parents(\".\" + SCROLLABLE_CONTENT_CLASS).length === 0;\r\n        if (!elementInsideContent || !elementIsInsideContent) {\r\n            return\r\n        }\r\n        var scrollPosition = {\r\n            top: 0,\r\n            left: 0\r\n        };\r\n        var direction = this.option(\"direction\");\r\n        if (direction !== VERTICAL) {\r\n            scrollPosition.left = this.getScrollElementPosition($element, HORIZONTAL, offset)\r\n        }\r\n        if (direction !== HORIZONTAL) {\r\n            scrollPosition.top = this.getScrollElementPosition($element, VERTICAL, offset)\r\n        }\r\n        this.scrollTo(scrollPosition)\r\n    },\r\n    scrollToElementTopLeft: function(element) {\r\n        var $element = (0, _renderer.default)(element);\r\n        var elementInsideContent = this.$content().find(element).length;\r\n        var elementIsInsideContent = $element.parents(\".\" + SCROLLABLE_CLASS).length - $element.parents(\".\" + SCROLLABLE_CONTENT_CLASS).length === 0;\r\n        if (!elementInsideContent || !elementIsInsideContent) {\r\n            return\r\n        }\r\n        var scrollPosition = {\r\n            top: 0,\r\n            left: 0\r\n        };\r\n        var direction = this.option(\"direction\");\r\n        if (direction !== VERTICAL) {\r\n            var leftPosition = this._elementPositionRelativeToContent($element, \"left\");\r\n            scrollPosition.left = true === this.option(\"rtlEnabled\") ? leftPosition + $element.width() - this.clientWidth() : leftPosition\r\n        }\r\n        if (direction !== HORIZONTAL) {\r\n            scrollPosition.top = this._elementPositionRelativeToContent($element, \"top\")\r\n        }\r\n        this.scrollTo(scrollPosition)\r\n    },\r\n    getScrollElementPosition: function($element, direction, offset) {\r\n        offset = offset || {};\r\n        var isVertical = direction === VERTICAL;\r\n        var startOffset = (isVertical ? offset.top : offset.left) || 0;\r\n        var endOffset = (isVertical ? offset.bottom : offset.right) || 0;\r\n        var pushBackOffset = isVertical ? this._strategy.verticalOffset() : 0;\r\n        var elementPositionRelativeToContent = this._elementPositionRelativeToContent($element, isVertical ? \"top\" : \"left\");\r\n        var elementPosition = elementPositionRelativeToContent - pushBackOffset;\r\n        var elementSize = $element[isVertical ? \"outerHeight\" : \"outerWidth\"]();\r\n        var scrollLocation = isVertical ? this.scrollTop() : this.scrollLeft();\r\n        var clientSize = this._container().get(0)[isVertical ? \"clientHeight\" : \"clientWidth\"];\r\n        var startDistance = scrollLocation - elementPosition + startOffset;\r\n        var endDistance = scrollLocation - elementPosition - elementSize + clientSize - endOffset;\r\n        if (startDistance <= 0 && endDistance >= 0) {\r\n            return scrollLocation\r\n        }\r\n        return scrollLocation - (Math.abs(startDistance) > Math.abs(endDistance) ? endDistance : startDistance)\r\n    },\r\n    _elementPositionRelativeToContent: function($element, prop) {\r\n        var result = 0;\r\n        while (this._hasScrollContent($element)) {\r\n            result += $element.position()[prop];\r\n            $element = $element.offsetParent()\r\n        }\r\n        return result\r\n    },\r\n    _hasScrollContent: function($element) {\r\n        var $content = this.$content();\r\n        return $element.closest($content).length && !$element.is($content)\r\n    },\r\n    _updateIfNeed: function() {\r\n        if (!this.option(\"updateManually\")) {\r\n            this.update()\r\n        }\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    }\r\n});\r\n(0, _component_registrator.default)(SCROLLABLE, Scrollable);\r\nvar _default = Scrollable;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.scrollable.native.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.scrollbar\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLABLE_NATIVE = \"dxNativeScrollable\";\r\nvar SCROLLABLE_NATIVE_CLASS = \"dx-scrollable-native\";\r\nvar SCROLLABLE_SCROLLBAR_SIMULATED = \"dx-scrollable-scrollbar-simulated\";\r\nvar SCROLLABLE_SCROLLBARS_HIDDEN = \"dx-scrollable-scrollbars-hidden\";\r\nvar VERTICAL = \"vertical\";\r\nvar HORIZONTAL = \"horizontal\";\r\nvar HIDE_SCROLLBAR_TIMEOUT = 500;\r\nvar NativeStrategy = _class.default.inherit({\r\n    ctor: function(scrollable) {\r\n        this._init(scrollable)\r\n    },\r\n    _init: function(scrollable) {\r\n        this._component = scrollable;\r\n        this._$element = scrollable.$element();\r\n        this._$container = scrollable._$container;\r\n        this._$content = scrollable._$content;\r\n        this._direction = scrollable.option(\"direction\");\r\n        this._useSimulatedScrollbar = scrollable.option(\"useSimulatedScrollbar\");\r\n        this._showScrollbar = scrollable.option(\"showScrollbar\");\r\n        this.option = scrollable.option.bind(scrollable);\r\n        this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\r\n        this._isLocked = scrollable._isLocked.bind(scrollable);\r\n        this._isDirection = scrollable._isDirection.bind(scrollable);\r\n        this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\r\n        this._getScrollOffset = scrollable._getScrollOffset.bind(scrollable);\r\n        this._getMaxOffset = scrollable._getMaxOffset.bind(scrollable)\r\n    },\r\n    render: function() {\r\n        this._renderPushBackOffset();\r\n        var device = _devices.default.real();\r\n        var deviceType = device.platform;\r\n        this._$element.addClass(SCROLLABLE_NATIVE_CLASS).addClass(SCROLLABLE_NATIVE_CLASS + \"-\" + deviceType).toggleClass(SCROLLABLE_SCROLLBARS_HIDDEN, !this._showScrollbar);\r\n        if (this._showScrollbar && this._useSimulatedScrollbar) {\r\n            this._renderScrollbars()\r\n        }\r\n    },\r\n    updateBounds: _common.noop,\r\n    _renderPushBackOffset: function() {\r\n        var pushBackValue = this.option(\"pushBackValue\");\r\n        if (!pushBackValue && !this._component._lastPushBackValue) {\r\n            return\r\n        }\r\n        this._$content.css({\r\n            paddingTop: pushBackValue,\r\n            paddingBottom: pushBackValue\r\n        });\r\n        this._component._lastPushBackValue = pushBackValue\r\n    },\r\n    _renderScrollbars: function() {\r\n        this._scrollbars = {};\r\n        this._hideScrollbarTimeout = 0;\r\n        this._$element.addClass(SCROLLABLE_SCROLLBAR_SIMULATED);\r\n        this._renderScrollbar(VERTICAL);\r\n        this._renderScrollbar(HORIZONTAL)\r\n    },\r\n    _renderScrollbar: function(direction) {\r\n        if (!this._isDirection(direction)) {\r\n            return\r\n        }\r\n        this._scrollbars[direction] = new _ui.default((0, _renderer.default)(\"<div>\").appendTo(this._$element), {\r\n            direction: direction,\r\n            expandable: this._component.option(\"scrollByThumb\")\r\n        })\r\n    },\r\n    handleInit: _common.noop,\r\n    handleStart: function() {\r\n        this._disablePushBack = true\r\n    },\r\n    handleMove: function(e) {\r\n        if (this._isLocked()) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        if (this._allowedDirection()) {\r\n            e.originalEvent.isScrollingEvent = true\r\n        }\r\n    },\r\n    handleEnd: function() {\r\n        this._disablePushBack = false\r\n    },\r\n    handleCancel: _common.noop,\r\n    handleStop: _common.noop,\r\n    _eachScrollbar: function(callback) {\r\n        callback = callback.bind(this);\r\n        (0, _iterator.each)(this._scrollbars || {}, function(direction, scrollbar) {\r\n            callback(scrollbar, direction)\r\n        })\r\n    },\r\n    createActions: function() {\r\n        this._scrollAction = this._createActionByOption(\"onScroll\");\r\n        this._updateAction = this._createActionByOption(\"onUpdated\")\r\n    },\r\n    _createActionArgs: function() {\r\n        var _this$location = this.location(),\r\n            left = _this$location.left,\r\n            top = _this$location.top;\r\n        return {\r\n            event: this._eventForUserAction,\r\n            scrollOffset: this._getScrollOffset(),\r\n            reachedLeft: this._isReachedLeft(left),\r\n            reachedRight: this._isReachedRight(left),\r\n            reachedTop: this._isDirection(VERTICAL) ? top >= 0 : void 0,\r\n            reachedBottom: this._isDirection(VERTICAL) ? Math.abs(top) >= this._getMaxOffset().top - 2 * this.option(\"pushBackValue\") : void 0\r\n        }\r\n    },\r\n    _isReachedLeft: function() {\r\n        return this._isDirection(HORIZONTAL) ? this.location().left >= 0 : void 0\r\n    },\r\n    _isReachedRight: function() {\r\n        return this._isDirection(HORIZONTAL) ? Math.abs(this.location().left) >= this._getMaxOffset().left : void 0\r\n    },\r\n    handleScroll: function(e) {\r\n        this._component._updateRtlConfig();\r\n        if (!this._isScrollLocationChanged()) {\r\n            e.stopImmediatePropagation();\r\n            return\r\n        }\r\n        this._eventForUserAction = e;\r\n        this._moveScrollbars();\r\n        this._scrollAction(this._createActionArgs());\r\n        this._lastLocation = this.location();\r\n        this._pushBackFromBoundary()\r\n    },\r\n    _pushBackFromBoundary: function() {\r\n        var pushBackValue = this.option(\"pushBackValue\");\r\n        if (!pushBackValue || this._disablePushBack) {\r\n            return\r\n        }\r\n        var scrollOffset = this._containerSize.height - this._contentSize.height;\r\n        var scrollTopPos = this._$container.scrollTop();\r\n        var scrollBottomPos = scrollOffset + scrollTopPos - 2 * pushBackValue;\r\n        if (!scrollTopPos) {\r\n            this._$container.scrollTop(pushBackValue)\r\n        } else {\r\n            if (!scrollBottomPos) {\r\n                this._$container.scrollTop(pushBackValue - scrollOffset)\r\n            }\r\n        }\r\n    },\r\n    _isScrollLocationChanged: function() {\r\n        var currentLocation = this.location();\r\n        var lastLocation = this._lastLocation || {};\r\n        var isTopChanged = lastLocation.top !== currentLocation.top;\r\n        var isLeftChanged = lastLocation.left !== currentLocation.left;\r\n        return isTopChanged || isLeftChanged\r\n    },\r\n    _moveScrollbars: function() {\r\n        this._eachScrollbar(function(scrollbar) {\r\n            scrollbar.moveTo(this.location());\r\n            scrollbar.option(\"visible\", true)\r\n        });\r\n        this._hideScrollbars()\r\n    },\r\n    _hideScrollbars: function() {\r\n        clearTimeout(this._hideScrollbarTimeout);\r\n        this._hideScrollbarTimeout = setTimeout(function() {\r\n            this._eachScrollbar(function(scrollbar) {\r\n                scrollbar.option(\"visible\", false)\r\n            })\r\n        }.bind(this), HIDE_SCROLLBAR_TIMEOUT)\r\n    },\r\n    location: function() {\r\n        return {\r\n            left: -this._$container.scrollLeft(),\r\n            top: this.option(\"pushBackValue\") - this._$container.scrollTop()\r\n        }\r\n    },\r\n    disabledChanged: _common.noop,\r\n    update: function() {\r\n        this._update();\r\n        this._updateAction(this._createActionArgs())\r\n    },\r\n    _update: function() {\r\n        this._updateDimensions();\r\n        this._updateScrollbars()\r\n    },\r\n    _updateDimensions: function() {\r\n        this._containerSize = {\r\n            height: this._$container.height(),\r\n            width: this._$container.width()\r\n        };\r\n        this._componentContentSize = {\r\n            height: this._component.$content().height(),\r\n            width: this._component.$content().width()\r\n        };\r\n        this._contentSize = {\r\n            height: this._$content.height(),\r\n            width: this._$content.width()\r\n        };\r\n        this._pushBackFromBoundary()\r\n    },\r\n    _updateScrollbars: function() {\r\n        this._eachScrollbar(function(scrollbar, direction) {\r\n            var dimension = direction === VERTICAL ? \"height\" : \"width\";\r\n            scrollbar.option({\r\n                containerSize: this._containerSize[dimension],\r\n                contentSize: this._componentContentSize[dimension]\r\n            });\r\n            scrollbar.update()\r\n        })\r\n    },\r\n    _allowedDirections: function() {\r\n        return {\r\n            vertical: this._isDirection(VERTICAL) && this._contentSize.height > this._containerSize.height,\r\n            horizontal: this._isDirection(HORIZONTAL) && this._contentSize.width > this._containerSize.width\r\n        }\r\n    },\r\n    dispose: function() {\r\n        var className = this._$element.get(0).className;\r\n        var scrollableNativeRegexp = new RegExp(SCROLLABLE_NATIVE_CLASS + \"\\\\S*\", \"g\");\r\n        if (scrollableNativeRegexp.test(className)) {\r\n            this._$element.removeClass(className.match(scrollableNativeRegexp).join(\" \"))\r\n        }\r\n        _events_engine.default.off(this._$element, \".\" + SCROLLABLE_NATIVE);\r\n        _events_engine.default.off(this._$container, \".\" + SCROLLABLE_NATIVE);\r\n        this._removeScrollbars();\r\n        clearTimeout(this._hideScrollbarTimeout)\r\n    },\r\n    _removeScrollbars: function() {\r\n        this._eachScrollbar(function(scrollbar) {\r\n            scrollbar.$element().remove()\r\n        })\r\n    },\r\n    scrollBy: function(distance) {\r\n        var location = this.location();\r\n        this._$container.scrollTop(Math.round(-location.top - distance.top + this.option(\"pushBackValue\")));\r\n        this._$container.scrollLeft(Math.round(-location.left - distance.left))\r\n    },\r\n    validate: function(e) {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if ((0, _index.isDxMouseWheelEvent)(e) && this._isScrolledInMaxDirection(e)) {\r\n            return false\r\n        }\r\n        return !!this._allowedDirection()\r\n    },\r\n    _isScrolledInMaxDirection: function(e) {\r\n        var container = this._$container.get(0);\r\n        var result;\r\n        if (e.delta > 0) {\r\n            result = e.shiftKey ? !container.scrollLeft : !container.scrollTop\r\n        } else {\r\n            if (e.shiftKey) {\r\n                result = container.scrollLeft >= this._getMaxOffset().left\r\n            } else {\r\n                result = container.scrollTop >= this._getMaxOffset().top\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    getDirection: function() {\r\n        return this._allowedDirection()\r\n    },\r\n    verticalOffset: function() {\r\n        return this.option(\"pushBackValue\")\r\n    }\r\n});\r\nvar _default = NativeStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.scrollable.simulated.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.SimulatedStrategy = exports.Scroller = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _inflector = require(\"../../core/utils/inflector\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _animator = _interopRequireDefault(require(\"./animator\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _ui = _interopRequireDefault(require(\"./ui.scrollbar\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLABLE_SIMULATED = \"dxSimulatedScrollable\";\r\nvar SCROLLABLE_STRATEGY = \"dxScrollableStrategy\";\r\nvar SCROLLABLE_SIMULATED_CURSOR = SCROLLABLE_SIMULATED + \"Cursor\";\r\nvar SCROLLABLE_SIMULATED_KEYBOARD = SCROLLABLE_SIMULATED + \"Keyboard\";\r\nvar SCROLLABLE_SIMULATED_CLASS = \"dx-scrollable-simulated\";\r\nvar SCROLLABLE_SCROLLBARS_HIDDEN = \"dx-scrollable-scrollbars-hidden\";\r\nvar SCROLLABLE_SCROLLBARS_ALWAYSVISIBLE = \"dx-scrollable-scrollbars-alwaysvisible\";\r\nvar SCROLLABLE_SCROLLBAR_CLASS = \"dx-scrollable-scrollbar\";\r\nvar VERTICAL = \"vertical\";\r\nvar HORIZONTAL = \"horizontal\";\r\nvar ACCELERATION = .92;\r\nvar OUT_BOUNDS_ACCELERATION = .5;\r\nvar MIN_VELOCITY_LIMIT = 1;\r\nvar FRAME_DURATION = Math.round(1e3 / 60);\r\nvar SCROLL_LINE_HEIGHT = 40;\r\nvar VALIDATE_WHEEL_TIMEOUT = 500;\r\nvar BOUNCE_MIN_VELOCITY_LIMIT = MIN_VELOCITY_LIMIT / 5;\r\nvar BOUNCE_DURATION = 400;\r\nvar BOUNCE_FRAMES = BOUNCE_DURATION / FRAME_DURATION;\r\nvar BOUNCE_ACCELERATION_SUM = (1 - Math.pow(ACCELERATION, BOUNCE_FRAMES)) / (1 - ACCELERATION);\r\nvar KEY_CODES = {\r\n    PAGE_UP: \"pageUp\",\r\n    PAGE_DOWN: \"pageDown\",\r\n    END: \"end\",\r\n    HOME: \"home\",\r\n    LEFT: \"leftArrow\",\r\n    UP: \"upArrow\",\r\n    RIGHT: \"rightArrow\",\r\n    DOWN: \"downArrow\",\r\n    TAB: \"tab\"\r\n};\r\nvar InertiaAnimator = _animator.default.inherit({\r\n    ctor: function(scroller) {\r\n        this.callBase();\r\n        this.scroller = scroller\r\n    },\r\n    VELOCITY_LIMIT: MIN_VELOCITY_LIMIT,\r\n    _isFinished: function() {\r\n        return Math.abs(this.scroller._velocity) <= this.VELOCITY_LIMIT\r\n    },\r\n    _step: function() {\r\n        this.scroller._scrollStep(this.scroller._velocity);\r\n        this.scroller._velocity *= this._acceleration()\r\n    },\r\n    _acceleration: function() {\r\n        return this.scroller._inBounds() ? ACCELERATION : OUT_BOUNDS_ACCELERATION\r\n    },\r\n    _complete: function() {\r\n        this.scroller._scrollComplete()\r\n    },\r\n    _stop: function() {\r\n        this.scroller._stopComplete()\r\n    }\r\n});\r\nvar BounceAnimator = InertiaAnimator.inherit({\r\n    VELOCITY_LIMIT: BOUNCE_MIN_VELOCITY_LIMIT,\r\n    _isFinished: function() {\r\n        return this.scroller._crossBoundOnNextStep() || this.callBase()\r\n    },\r\n    _acceleration: function() {\r\n        return ACCELERATION\r\n    },\r\n    _complete: function() {\r\n        this.scroller._move(this.scroller._bounceLocation);\r\n        this.callBase()\r\n    }\r\n});\r\nvar Scroller = _class.default.inherit({\r\n    ctor: function(options) {\r\n        this._initOptions(options);\r\n        this._initAnimators();\r\n        this._initScrollbar()\r\n    },\r\n    _initOptions: function(options) {\r\n        var _this = this;\r\n        this._location = 0;\r\n        this._topReached = false;\r\n        this._bottomReached = false;\r\n        this._axis = options.direction === HORIZONTAL ? \"x\" : \"y\";\r\n        this._prop = options.direction === HORIZONTAL ? \"left\" : \"top\";\r\n        this._dimension = options.direction === HORIZONTAL ? \"width\" : \"height\";\r\n        this._scrollProp = options.direction === HORIZONTAL ? \"scrollLeft\" : \"scrollTop\";\r\n        (0, _iterator.each)(options, function(optionName, optionValue) {\r\n            _this[\"_\" + optionName] = optionValue\r\n        })\r\n    },\r\n    _initAnimators: function() {\r\n        this._inertiaAnimator = new InertiaAnimator(this);\r\n        this._bounceAnimator = new BounceAnimator(this)\r\n    },\r\n    _initScrollbar: function() {\r\n        this._scrollbar = new _ui.default((0, _renderer.default)(\"<div>\").appendTo(this._$container), {\r\n            direction: this._direction,\r\n            visible: this._scrollByThumb,\r\n            visibilityMode: this._visibilityModeNormalize(this._scrollbarVisible),\r\n            expandable: this._scrollByThumb\r\n        });\r\n        this._$scrollbar = this._scrollbar.$element()\r\n    },\r\n    _visibilityModeNormalize: function(mode) {\r\n        return true === mode ? \"onScroll\" : false === mode ? \"never\" : mode\r\n    },\r\n    _scrollStep: function(delta) {\r\n        var prevLocation = this._location;\r\n        this._location += delta;\r\n        this._suppressBounce();\r\n        this._move();\r\n        if (Math.abs(prevLocation - this._location) < 1) {\r\n            return\r\n        }\r\n        _events_engine.default.triggerHandler(this._$container, {\r\n            type: \"scroll\"\r\n        })\r\n    },\r\n    _suppressBounce: function() {\r\n        if (this._bounceEnabled || this._inBounds(this._location)) {\r\n            return\r\n        }\r\n        this._velocity = 0;\r\n        this._location = this._boundLocation()\r\n    },\r\n    _boundLocation: function(location) {\r\n        location = void 0 !== location ? location : this._location;\r\n        return Math.max(Math.min(location, this._maxOffset), this._minOffset)\r\n    },\r\n    _move: function(location) {\r\n        this._location = void 0 !== location ? location * this._getScaleRatio() : this._location;\r\n        this._moveContent();\r\n        this._moveScrollbar()\r\n    },\r\n    _moveContent: function() {\r\n        var location = this._location;\r\n        this._$container[this._scrollProp](-location / this._getScaleRatio());\r\n        this._moveContentByTranslator(location)\r\n    },\r\n    _getScaleRatio: function() {\r\n        if ((0, _window.hasWindow)() && !this._scaleRatio) {\r\n            var element = this._$element.get(0);\r\n            var realDimension = this._getRealDimension(element, this._dimension);\r\n            var baseDimension = this._getBaseDimension(element, this._dimension);\r\n            this._scaleRatio = Math.round(realDimension / baseDimension * 100) / 100\r\n        }\r\n        return this._scaleRatio || 1\r\n    },\r\n    _getRealDimension: function(element, dimension) {\r\n        return Math.round((0, _position.getBoundingRect)(element)[dimension])\r\n    },\r\n    _getBaseDimension: function(element, dimension) {\r\n        var dimensionName = \"offset\" + (0, _inflector.titleize)(dimension);\r\n        return element[dimensionName]\r\n    },\r\n    _moveContentByTranslator: function(location) {\r\n        var translateOffset;\r\n        var minOffset = -this._maxScrollPropValue;\r\n        if (location > 0) {\r\n            translateOffset = location\r\n        } else {\r\n            if (location <= minOffset) {\r\n                translateOffset = location - minOffset\r\n            } else {\r\n                translateOffset = location % 1\r\n            }\r\n        }\r\n        if (this._translateOffset === translateOffset) {\r\n            return\r\n        }\r\n        var targetLocation = {};\r\n        targetLocation[this._prop] = translateOffset;\r\n        this._translateOffset = translateOffset;\r\n        if (0 === translateOffset) {\r\n            (0, _translator.resetPosition)(this._$content);\r\n            return\r\n        }(0, _translator.move)(this._$content, targetLocation)\r\n    },\r\n    _moveScrollbar: function() {\r\n        this._scrollbar.moveTo(this._location)\r\n    },\r\n    _scrollComplete: function() {\r\n        if (this._inBounds()) {\r\n            this._hideScrollbar();\r\n            if (this._completeDeferred) {\r\n                this._completeDeferred.resolve()\r\n            }\r\n        }\r\n        this._scrollToBounds()\r\n    },\r\n    _scrollToBounds: function() {\r\n        if (this._inBounds()) {\r\n            return\r\n        }\r\n        this._bounceAction();\r\n        this._setupBounce();\r\n        this._bounceAnimator.start()\r\n    },\r\n    _setupBounce: function() {\r\n        var boundLocation = this._bounceLocation = this._boundLocation();\r\n        var bounceDistance = boundLocation - this._location;\r\n        this._velocity = bounceDistance / BOUNCE_ACCELERATION_SUM\r\n    },\r\n    _inBounds: function(location) {\r\n        location = void 0 !== location ? location : this._location;\r\n        return this._boundLocation(location) === location\r\n    },\r\n    _crossBoundOnNextStep: function() {\r\n        var location = this._location;\r\n        var nextLocation = location + this._velocity;\r\n        return location < this._minOffset && nextLocation >= this._minOffset || location > this._maxOffset && nextLocation <= this._maxOffset\r\n    },\r\n    _initHandler: function(e) {\r\n        this._stopDeferred = new _deferred.Deferred;\r\n        this._stopScrolling();\r\n        this._prepareThumbScrolling(e);\r\n        return this._stopDeferred.promise()\r\n    },\r\n    _stopScrolling: (0, _common.deferRenderer)(function() {\r\n        this._hideScrollbar();\r\n        this._inertiaAnimator.stop();\r\n        this._bounceAnimator.stop()\r\n    }),\r\n    _prepareThumbScrolling: function(e) {\r\n        if ((0, _index.isDxMouseWheelEvent)(e.originalEvent)) {\r\n            return\r\n        }\r\n        var $target = (0, _renderer.default)(e.originalEvent.target);\r\n        var scrollbarClicked = this._isScrollbar($target);\r\n        if (scrollbarClicked) {\r\n            this._moveToMouseLocation(e)\r\n        }\r\n        this._thumbScrolling = scrollbarClicked || this._isThumb($target);\r\n        this._crossThumbScrolling = !this._thumbScrolling && this._isAnyThumbScrolling($target);\r\n        if (this._thumbScrolling) {\r\n            this._scrollbar.feedbackOn()\r\n        }\r\n    },\r\n    _isThumbScrollingHandler: function($target) {\r\n        return this._isThumb($target)\r\n    },\r\n    _moveToMouseLocation: function(e) {\r\n        var mouseLocation = e[\"page\" + this._axis.toUpperCase()] - this._$element.offset()[this._prop];\r\n        var location = this._location + mouseLocation / this._containerToContentRatio() - this._$container.height() / 2;\r\n        this._scrollStep(-Math.round(location))\r\n    },\r\n    _stopComplete: function() {\r\n        if (this._stopDeferred) {\r\n            this._stopDeferred.resolve()\r\n        }\r\n    },\r\n    _startHandler: function() {\r\n        this._showScrollbar()\r\n    },\r\n    _moveHandler: function(delta) {\r\n        if (this._crossThumbScrolling) {\r\n            return\r\n        }\r\n        if (this._thumbScrolling) {\r\n            delta[this._axis] = -Math.round(delta[this._axis] / this._containerToContentRatio())\r\n        }\r\n        this._scrollBy(delta)\r\n    },\r\n    _scrollBy: function(delta) {\r\n        delta = delta[this._axis];\r\n        if (!this._inBounds()) {\r\n            delta *= OUT_BOUNDS_ACCELERATION\r\n        }\r\n        this._scrollStep(delta)\r\n    },\r\n    _scrollByHandler: function(delta) {\r\n        this._scrollBy(delta);\r\n        this._scrollComplete()\r\n    },\r\n    _containerToContentRatio: function() {\r\n        return this._scrollbar.containerToContentRatio()\r\n    },\r\n    _endHandler: function(velocity) {\r\n        this._completeDeferred = new _deferred.Deferred;\r\n        this._velocity = velocity[this._axis];\r\n        this._inertiaHandler();\r\n        this._resetThumbScrolling();\r\n        return this._completeDeferred.promise()\r\n    },\r\n    _inertiaHandler: function() {\r\n        this._suppressInertia();\r\n        this._inertiaAnimator.start()\r\n    },\r\n    _suppressInertia: function() {\r\n        if (!this._inertiaEnabled || this._thumbScrolling) {\r\n            this._velocity = 0\r\n        }\r\n    },\r\n    _resetThumbScrolling: function() {\r\n        this._thumbScrolling = false;\r\n        this._crossThumbScrolling = false\r\n    },\r\n    _stopHandler: function() {\r\n        if (this._thumbScrolling) {\r\n            this._scrollComplete()\r\n        }\r\n        this._resetThumbScrolling();\r\n        this._scrollToBounds()\r\n    },\r\n    _disposeHandler: function() {\r\n        this._stopScrolling();\r\n        this._$scrollbar.remove()\r\n    },\r\n    _updateHandler: function() {\r\n        this._update();\r\n        this._moveToBounds()\r\n    },\r\n    _update: function() {\r\n        var _this2 = this;\r\n        this._stopScrolling();\r\n        return (0, _common.deferUpdate)(function() {\r\n            _this2._resetScaleRatio();\r\n            _this2._updateLocation();\r\n            _this2._updateBounds();\r\n            _this2._updateScrollbar();\r\n            (0, _common.deferRender)(function() {\r\n                _this2._moveScrollbar();\r\n                _this2._scrollbar.update()\r\n            })\r\n        })\r\n    },\r\n    _resetScaleRatio: function() {\r\n        this._scaleRatio = null\r\n    },\r\n    _updateLocation: function() {\r\n        this._location = ((0, _translator.locate)(this._$content)[this._prop] - this._$container[this._scrollProp]()) * this._getScaleRatio()\r\n    },\r\n    _updateBounds: function() {\r\n        this._maxOffset = Math.round(this._getMaxOffset());\r\n        this._minOffset = Math.round(this._getMinOffset())\r\n    },\r\n    _getMaxOffset: function() {\r\n        return 0\r\n    },\r\n    _getMinOffset: function() {\r\n        this._maxScrollPropValue = Math.max(this._contentSize() - this._containerSize(), 0);\r\n        return -this._maxScrollPropValue\r\n    },\r\n    _updateScrollbar: (0, _common.deferUpdater)(function() {\r\n        var _this3 = this;\r\n        var containerSize = this._containerSize();\r\n        var contentSize = this._contentSize();\r\n        var baseContainerSize = this._getBaseDimension(this._$container.get(0), this._dimension);\r\n        var baseContentSize = this._getBaseDimension(this._$content.get(0), this._dimension);\r\n        (0, _common.deferRender)(function() {\r\n            _this3._scrollbar.option({\r\n                containerSize: containerSize,\r\n                contentSize: contentSize,\r\n                baseContainerSize: baseContainerSize,\r\n                baseContentSize: baseContentSize,\r\n                scaleRatio: _this3._getScaleRatio()\r\n            })\r\n        })\r\n    }),\r\n    _moveToBounds: (0, _common.deferRenderer)((0, _common.deferUpdater)((0, _common.deferRenderer)(function() {\r\n        var location = this._boundLocation();\r\n        var locationChanged = location !== this._location;\r\n        this._location = location;\r\n        this._move();\r\n        if (locationChanged) {\r\n            this._scrollAction()\r\n        }\r\n    }))),\r\n    _createActionsHandler: function(actions) {\r\n        this._scrollAction = actions.scroll;\r\n        this._bounceAction = actions.bounce\r\n    },\r\n    _showScrollbar: function() {\r\n        this._scrollbar.option(\"visible\", true)\r\n    },\r\n    _hideScrollbar: function() {\r\n        this._scrollbar.option(\"visible\", false)\r\n    },\r\n    _containerSize: function() {\r\n        return this._getRealDimension(this._$container.get(0), this._dimension)\r\n    },\r\n    _contentSize: function() {\r\n        var isOverflowHidden = \"hidden\" === this._$content.css(\"overflow\" + this._axis.toUpperCase());\r\n        var contentSize = this._getRealDimension(this._$content.get(0), this._dimension);\r\n        if (!isOverflowHidden) {\r\n            var containerScrollSize = this._$content[0][\"scroll\" + (0, _inflector.titleize)(this._dimension)] * this._getScaleRatio();\r\n            contentSize = Math.max(containerScrollSize, contentSize)\r\n        }\r\n        return contentSize\r\n    },\r\n    _validateEvent: function(e) {\r\n        var $target = (0, _renderer.default)(e.originalEvent.target);\r\n        return this._isThumb($target) || this._isScrollbar($target) || this._isContent($target)\r\n    },\r\n    _isThumb: function($element) {\r\n        return this._scrollByThumb && this._scrollbar.isThumb($element)\r\n    },\r\n    _isScrollbar: function($element) {\r\n        return this._scrollByThumb && $element && $element.is(this._$scrollbar)\r\n    },\r\n    _isContent: function($element) {\r\n        return this._scrollByContent && !!$element.closest(this._$element).length\r\n    },\r\n    _reachedMin: function() {\r\n        return this._location <= this._minOffset\r\n    },\r\n    _reachedMax: function() {\r\n        return this._location >= this._maxOffset\r\n    },\r\n    _cursorEnterHandler: function() {\r\n        this._resetScaleRatio();\r\n        this._updateScrollbar();\r\n        this._scrollbar.cursorEnter()\r\n    },\r\n    _cursorLeaveHandler: function() {\r\n        this._scrollbar.cursorLeave()\r\n    },\r\n    dispose: _common.noop\r\n});\r\nexports.Scroller = Scroller;\r\nvar hoveredScrollable;\r\nvar activeScrollable;\r\nvar SimulatedStrategy = _class.default.inherit({\r\n    ctor: function(scrollable) {\r\n        this._init(scrollable)\r\n    },\r\n    _init: function(scrollable) {\r\n        this._component = scrollable;\r\n        this._$element = scrollable.$element();\r\n        this._$container = scrollable._$container;\r\n        this._$wrapper = scrollable._$wrapper;\r\n        this._$content = scrollable._$content;\r\n        this.option = scrollable.option.bind(scrollable);\r\n        this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\r\n        this._isLocked = scrollable._isLocked.bind(scrollable);\r\n        this._isDirection = scrollable._isDirection.bind(scrollable);\r\n        this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\r\n        this._getScrollOffset = scrollable._getScrollOffset.bind(scrollable)\r\n    },\r\n    render: function() {\r\n        this._$element.addClass(SCROLLABLE_SIMULATED_CLASS);\r\n        this._createScrollers();\r\n        if (this.option(\"useKeyboard\")) {\r\n            this._$container.prop(\"tabIndex\", 0)\r\n        }\r\n        this._attachKeyboardHandler();\r\n        this._attachCursorHandlers()\r\n    },\r\n    _createScrollers: function() {\r\n        this._scrollers = {};\r\n        if (this._isDirection(HORIZONTAL)) {\r\n            this._createScroller(HORIZONTAL)\r\n        }\r\n        if (this._isDirection(VERTICAL)) {\r\n            this._createScroller(VERTICAL)\r\n        }\r\n        this._$element.toggleClass(SCROLLABLE_SCROLLBARS_ALWAYSVISIBLE, \"always\" === this.option(\"showScrollbar\"));\r\n        this._$element.toggleClass(SCROLLABLE_SCROLLBARS_HIDDEN, !this.option(\"showScrollbar\"))\r\n    },\r\n    _createScroller: function(direction) {\r\n        this._scrollers[direction] = new Scroller(this._scrollerOptions(direction))\r\n    },\r\n    _scrollerOptions: function(direction) {\r\n        return {\r\n            direction: direction,\r\n            $content: this._$content,\r\n            $container: this._$container,\r\n            $wrapper: this._$wrapper,\r\n            $element: this._$element,\r\n            scrollByContent: this.option(\"scrollByContent\"),\r\n            scrollByThumb: this.option(\"scrollByThumb\"),\r\n            scrollbarVisible: this.option(\"showScrollbar\"),\r\n            bounceEnabled: this.option(\"bounceEnabled\"),\r\n            inertiaEnabled: this.option(\"inertiaEnabled\"),\r\n            isAnyThumbScrolling: this._isAnyThumbScrolling.bind(this)\r\n        }\r\n    },\r\n    _applyScaleRatio: function(targetLocation) {\r\n        for (var direction in this._scrollers) {\r\n            var prop = this._getPropByDirection(direction);\r\n            if ((0, _type.isDefined)(targetLocation[prop])) {\r\n                var scroller = this._scrollers[direction];\r\n                targetLocation[prop] *= scroller._getScaleRatio()\r\n            }\r\n        }\r\n        return targetLocation\r\n    },\r\n    _isAnyThumbScrolling: function($target) {\r\n        var result = false;\r\n        this._eventHandler(\"isThumbScrolling\", $target).done(function(isThumbScrollingVertical, isThumbScrollingHorizontal) {\r\n            result = isThumbScrollingVertical || isThumbScrollingHorizontal\r\n        });\r\n        return result\r\n    },\r\n    handleInit: function(e) {\r\n        this._suppressDirections(e);\r\n        this._eventForUserAction = e;\r\n        this._eventHandler(\"init\", e).done(this._stopAction)\r\n    },\r\n    _suppressDirections: function(e) {\r\n        if ((0, _index.isDxMouseWheelEvent)(e.originalEvent)) {\r\n            this._prepareDirections(true);\r\n            return\r\n        }\r\n        this._prepareDirections();\r\n        this._eachScroller(function(scroller, direction) {\r\n            var isValid = scroller._validateEvent(e);\r\n            this._validDirections[direction] = isValid\r\n        })\r\n    },\r\n    _prepareDirections: function(value) {\r\n        value = value || false;\r\n        this._validDirections = {};\r\n        this._validDirections[HORIZONTAL] = value;\r\n        this._validDirections[VERTICAL] = value\r\n    },\r\n    _eachScroller: function(callback) {\r\n        callback = callback.bind(this);\r\n        (0, _iterator.each)(this._scrollers, function(direction, scroller) {\r\n            callback(scroller, direction)\r\n        })\r\n    },\r\n    handleStart: function(e) {\r\n        this._eventForUserAction = e;\r\n        this._eventHandler(\"start\").done(this._startAction)\r\n    },\r\n    _saveActive: function() {\r\n        activeScrollable = this\r\n    },\r\n    _resetActive: function() {\r\n        if (activeScrollable === this) {\r\n            activeScrollable = null\r\n        }\r\n    },\r\n    handleMove: function(e) {\r\n        if (this._isLocked()) {\r\n            e.cancel = true;\r\n            this._resetActive();\r\n            return\r\n        }\r\n        this._saveActive();\r\n        e.preventDefault && e.preventDefault();\r\n        this._adjustDistance(e, e.delta);\r\n        this._eventForUserAction = e;\r\n        this._eventHandler(\"move\", e.delta)\r\n    },\r\n    _adjustDistance: function(e, distance) {\r\n        distance.x *= this._validDirections[HORIZONTAL];\r\n        distance.y *= this._validDirections[VERTICAL];\r\n        var devicePixelRatio = this._tryGetDevicePixelRatio();\r\n        if (devicePixelRatio && (0, _index.isDxMouseWheelEvent)(e.originalEvent)) {\r\n            distance.x = Math.round(distance.x / devicePixelRatio * 100) / 100;\r\n            distance.y = Math.round(distance.y / devicePixelRatio * 100) / 100\r\n        }\r\n    },\r\n    _tryGetDevicePixelRatio: function() {\r\n        if ((0, _window.hasWindow)()) {\r\n            return (0, _window.getWindow)().devicePixelRatio\r\n        }\r\n    },\r\n    handleEnd: function(e) {\r\n        this._resetActive();\r\n        this._refreshCursorState(e.originalEvent && e.originalEvent.target);\r\n        this._adjustDistance(e, e.velocity);\r\n        this._eventForUserAction = e;\r\n        return this._eventHandler(\"end\", e.velocity).done(this._endAction)\r\n    },\r\n    handleCancel: function(e) {\r\n        this._resetActive();\r\n        this._eventForUserAction = e;\r\n        return this._eventHandler(\"end\", {\r\n            x: 0,\r\n            y: 0\r\n        })\r\n    },\r\n    handleStop: function() {\r\n        this._resetActive();\r\n        this._eventHandler(\"stop\")\r\n    },\r\n    handleScroll: function() {\r\n        this._component._updateRtlConfig();\r\n        this._scrollAction()\r\n    },\r\n    _attachKeyboardHandler: function() {\r\n        _events_engine.default.off(this._$element, \".\".concat(SCROLLABLE_SIMULATED_KEYBOARD));\r\n        if (!this.option(\"disabled\") && this.option(\"useKeyboard\")) {\r\n            _events_engine.default.on(this._$element, (0, _index.addNamespace)(\"keydown\", SCROLLABLE_SIMULATED_KEYBOARD), this._keyDownHandler.bind(this))\r\n        }\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var _this4 = this;\r\n        clearTimeout(this._updateHandlerTimeout);\r\n        this._updateHandlerTimeout = setTimeout(function() {\r\n            if ((0, _index.normalizeKeyName)(e) === KEY_CODES.TAB) {\r\n                _this4._eachScroller(function(scroller) {\r\n                    scroller._updateHandler()\r\n                })\r\n            }\r\n        });\r\n        if (!this._$container.is(_dom_adapter.default.getActiveElement())) {\r\n            return\r\n        }\r\n        var handled = true;\r\n        switch ((0, _index.normalizeKeyName)(e)) {\r\n            case KEY_CODES.DOWN:\r\n                this._scrollByLine({\r\n                    y: 1\r\n                });\r\n                break;\r\n            case KEY_CODES.UP:\r\n                this._scrollByLine({\r\n                    y: -1\r\n                });\r\n                break;\r\n            case KEY_CODES.RIGHT:\r\n                this._scrollByLine({\r\n                    x: 1\r\n                });\r\n                break;\r\n            case KEY_CODES.LEFT:\r\n                this._scrollByLine({\r\n                    x: -1\r\n                });\r\n                break;\r\n            case KEY_CODES.PAGE_DOWN:\r\n                this._scrollByPage(1);\r\n                break;\r\n            case KEY_CODES.PAGE_UP:\r\n                this._scrollByPage(-1);\r\n                break;\r\n            case KEY_CODES.HOME:\r\n                this._scrollToHome();\r\n                break;\r\n            case KEY_CODES.END:\r\n                this._scrollToEnd();\r\n                break;\r\n            default:\r\n                handled = false\r\n        }\r\n        if (handled) {\r\n            e.stopPropagation();\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _scrollByLine: function(lines) {\r\n        var devicePixelRatio = this._tryGetDevicePixelRatio();\r\n        var scrollOffset = SCROLL_LINE_HEIGHT;\r\n        if (devicePixelRatio) {\r\n            scrollOffset = Math.abs(scrollOffset / devicePixelRatio * 100) / 100\r\n        }\r\n        this.scrollBy({\r\n            top: (lines.y || 0) * -scrollOffset,\r\n            left: (lines.x || 0) * -scrollOffset\r\n        })\r\n    },\r\n    _scrollByPage: function(page) {\r\n        var prop = this._wheelProp();\r\n        var dimension = this._dimensionByProp(prop);\r\n        var distance = {};\r\n        distance[prop] = page * -this._$container[dimension]();\r\n        this.scrollBy(distance)\r\n    },\r\n    _dimensionByProp: function(prop) {\r\n        return \"left\" === prop ? \"width\" : \"height\"\r\n    },\r\n    _getPropByDirection: function(direction) {\r\n        return direction === HORIZONTAL ? \"left\" : \"top\"\r\n    },\r\n    _scrollToHome: function() {\r\n        var prop = this._wheelProp();\r\n        var distance = {};\r\n        distance[prop] = 0;\r\n        this._component.scrollTo(distance)\r\n    },\r\n    _scrollToEnd: function() {\r\n        var prop = this._wheelProp();\r\n        var dimension = this._dimensionByProp(prop);\r\n        var distance = {};\r\n        distance[prop] = this._$content[dimension]() - this._$container[dimension]();\r\n        this._component.scrollTo(distance)\r\n    },\r\n    createActions: function() {\r\n        this._startAction = this._createActionHandler(\"onStart\");\r\n        this._stopAction = this._createActionHandler(\"onStop\");\r\n        this._endAction = this._createActionHandler(\"onEnd\");\r\n        this._updateAction = this._createActionHandler(\"onUpdated\");\r\n        this._createScrollerActions()\r\n    },\r\n    _createScrollerActions: function() {\r\n        this._scrollAction = this._createActionHandler(\"onScroll\");\r\n        this._bounceAction = this._createActionHandler(\"onBounce\");\r\n        this._eventHandler(\"createActions\", {\r\n            scroll: this._scrollAction,\r\n            bounce: this._bounceAction\r\n        })\r\n    },\r\n    _createActionHandler: function(optionName) {\r\n        var _arguments = arguments,\r\n            _this5 = this;\r\n        var actionHandler = this._createActionByOption(optionName);\r\n        return function() {\r\n            actionHandler((0, _extend.extend)(_this5._createActionArgs(), _arguments))\r\n        }\r\n    },\r\n    _createActionArgs: function() {\r\n        var _this$_scrollers = this._scrollers,\r\n            scrollerX = _this$_scrollers.horizontal,\r\n            scrollerY = _this$_scrollers.vertical;\r\n        var offset = this._getScrollOffset();\r\n        this._scrollOffset = {\r\n            top: scrollerY && offset.top,\r\n            left: scrollerX && offset.left\r\n        };\r\n        return {\r\n            event: this._eventForUserAction,\r\n            scrollOffset: this._scrollOffset,\r\n            reachedLeft: scrollerX && scrollerX._reachedMax(),\r\n            reachedRight: scrollerX && scrollerX._reachedMin(),\r\n            reachedTop: scrollerY && scrollerY._reachedMax(),\r\n            reachedBottom: scrollerY && scrollerY._reachedMin()\r\n        }\r\n    },\r\n    _eventHandler: function(eventName) {\r\n        var args = [].slice.call(arguments).slice(1);\r\n        var deferreds = (0, _iterator.map)(this._scrollers, function(scroller) {\r\n            return scroller[\"_\" + eventName + \"Handler\"].apply(scroller, args)\r\n        });\r\n        return _deferred.when.apply(_renderer.default, deferreds).promise()\r\n    },\r\n    location: function location() {\r\n        var location = (0, _translator.locate)(this._$content);\r\n        location.top -= this._$container.scrollTop();\r\n        location.left -= this._$container.scrollLeft();\r\n        return location\r\n    },\r\n    disabledChanged: function() {\r\n        this._attachCursorHandlers()\r\n    },\r\n    _attachCursorHandlers: function() {\r\n        _events_engine.default.off(this._$element, \".\".concat(SCROLLABLE_SIMULATED_CURSOR));\r\n        if (!this.option(\"disabled\") && this._isHoverMode()) {\r\n            _events_engine.default.on(this._$element, (0, _index.addNamespace)(\"mouseenter\", SCROLLABLE_SIMULATED_CURSOR), this._cursorEnterHandler.bind(this));\r\n            _events_engine.default.on(this._$element, (0, _index.addNamespace)(\"mouseleave\", SCROLLABLE_SIMULATED_CURSOR), this._cursorLeaveHandler.bind(this))\r\n        }\r\n    },\r\n    _isHoverMode: function() {\r\n        return \"onHover\" === this.option(\"showScrollbar\")\r\n    },\r\n    _cursorEnterHandler: function(e) {\r\n        e = e || {};\r\n        e.originalEvent = e.originalEvent || {};\r\n        if (activeScrollable || e.originalEvent._hoverHandled) {\r\n            return\r\n        }\r\n        if (hoveredScrollable) {\r\n            hoveredScrollable._cursorLeaveHandler()\r\n        }\r\n        hoveredScrollable = this;\r\n        this._eventHandler(\"cursorEnter\");\r\n        e.originalEvent._hoverHandled = true\r\n    },\r\n    _cursorLeaveHandler: function(e) {\r\n        if (hoveredScrollable !== this || activeScrollable === hoveredScrollable) {\r\n            return\r\n        }\r\n        this._eventHandler(\"cursorLeave\");\r\n        hoveredScrollable = null;\r\n        this._refreshCursorState(e && e.relatedTarget)\r\n    },\r\n    _refreshCursorState: function(target) {\r\n        if (!this._isHoverMode() && (!target || activeScrollable)) {\r\n            return\r\n        }\r\n        var $target = (0, _renderer.default)(target);\r\n        var $scrollable = $target.closest(\".\".concat(SCROLLABLE_SIMULATED_CLASS, \":not(.dx-state-disabled)\"));\r\n        var targetScrollable = $scrollable.length && $scrollable.data(SCROLLABLE_STRATEGY);\r\n        if (hoveredScrollable && hoveredScrollable !== targetScrollable) {\r\n            hoveredScrollable._cursorLeaveHandler()\r\n        }\r\n        if (targetScrollable) {\r\n            targetScrollable._cursorEnterHandler()\r\n        }\r\n    },\r\n    update: function() {\r\n        var _this6 = this;\r\n        var result = this._eventHandler(\"update\").done(this._updateAction);\r\n        return (0, _deferred.when)(result, (0, _common.deferUpdate)(function() {\r\n            var allowedDirections = _this6._allowedDirections();\r\n            (0, _common.deferRender)(function() {\r\n                var touchDirection = allowedDirections.vertical ? \"pan-x\" : \"\";\r\n                touchDirection = allowedDirections.horizontal ? \"pan-y\" : touchDirection;\r\n                touchDirection = allowedDirections.vertical && allowedDirections.horizontal ? \"none\" : touchDirection;\r\n                _this6._$container.css(\"touchAction\", touchDirection)\r\n            });\r\n            return (0, _deferred.when)().promise()\r\n        }))\r\n    },\r\n    _allowedDirections: function() {\r\n        var bounceEnabled = this.option(\"bounceEnabled\");\r\n        var verticalScroller = this._scrollers[VERTICAL];\r\n        var horizontalScroller = this._scrollers[HORIZONTAL];\r\n        return {\r\n            vertical: verticalScroller && (verticalScroller._minOffset < 0 || bounceEnabled),\r\n            horizontal: horizontalScroller && (horizontalScroller._minOffset < 0 || bounceEnabled)\r\n        }\r\n    },\r\n    updateBounds: function() {\r\n        this._scrollers[HORIZONTAL] && this._scrollers[HORIZONTAL]._updateBounds()\r\n    },\r\n    scrollBy: function(distance) {\r\n        var verticalScroller = this._scrollers[VERTICAL];\r\n        var horizontalScroller = this._scrollers[HORIZONTAL];\r\n        if (verticalScroller) {\r\n            distance.top = verticalScroller._boundLocation(distance.top + verticalScroller._location) - verticalScroller._location\r\n        }\r\n        if (horizontalScroller) {\r\n            distance.left = horizontalScroller._boundLocation(distance.left + horizontalScroller._location) - horizontalScroller._location\r\n        }\r\n        this._prepareDirections(true);\r\n        this._startAction();\r\n        this._eventHandler(\"scrollBy\", {\r\n            x: distance.left,\r\n            y: distance.top\r\n        });\r\n        this._endAction()\r\n    },\r\n    validate: function(e) {\r\n        if ((0, _index.isDxMouseWheelEvent)(e) && (0, _index.isCommandKeyPressed)(e)) {\r\n            return false\r\n        }\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"bounceEnabled\")) {\r\n            return true\r\n        }\r\n        return (0, _index.isDxMouseWheelEvent)(e) ? this._validateWheel(e) : this._validateMove(e)\r\n    },\r\n    _validateWheel: function(e) {\r\n        var _this7 = this;\r\n        var scroller = this._scrollers[this._wheelDirection(e)];\r\n        var reachedMin = scroller._reachedMin();\r\n        var reachedMax = scroller._reachedMax();\r\n        var contentGreaterThanContainer = !reachedMin || !reachedMax;\r\n        var locatedNotAtBound = !reachedMin && !reachedMax;\r\n        var scrollFromMin = reachedMin && e.delta > 0;\r\n        var scrollFromMax = reachedMax && e.delta < 0;\r\n        var validated = contentGreaterThanContainer && (locatedNotAtBound || scrollFromMin || scrollFromMax);\r\n        validated = validated || void 0 !== this._validateWheelTimer;\r\n        if (validated) {\r\n            clearTimeout(this._validateWheelTimer);\r\n            this._validateWheelTimer = setTimeout(function() {\r\n                _this7._validateWheelTimer = void 0\r\n            }, VALIDATE_WHEEL_TIMEOUT)\r\n        }\r\n        return validated\r\n    },\r\n    _validateMove: function(e) {\r\n        if (!this.option(\"scrollByContent\") && !(0, _renderer.default)(e.target).closest(\".\".concat(SCROLLABLE_SCROLLBAR_CLASS)).length) {\r\n            return false\r\n        }\r\n        return this._allowedDirection()\r\n    },\r\n    getDirection: function(e) {\r\n        return (0, _index.isDxMouseWheelEvent)(e) ? this._wheelDirection(e) : this._allowedDirection()\r\n    },\r\n    _wheelProp: function() {\r\n        return this._wheelDirection() === HORIZONTAL ? \"left\" : \"top\"\r\n    },\r\n    _wheelDirection: function(e) {\r\n        switch (this.option(\"direction\")) {\r\n            case HORIZONTAL:\r\n                return HORIZONTAL;\r\n            case VERTICAL:\r\n                return VERTICAL;\r\n            default:\r\n                return e && e.shiftKey ? HORIZONTAL : VERTICAL\r\n        }\r\n    },\r\n    verticalOffset: function() {\r\n        return 0\r\n    },\r\n    dispose: function() {\r\n        this._resetActive();\r\n        if (hoveredScrollable === this) {\r\n            hoveredScrollable = null\r\n        }\r\n        this._eventHandler(\"dispose\");\r\n        this._detachEventHandlers();\r\n        this._$element.removeClass(SCROLLABLE_SIMULATED_CLASS);\r\n        this._eventForUserAction = null;\r\n        clearTimeout(this._validateWheelTimer);\r\n        clearTimeout(this._updateHandlerTimeout)\r\n    },\r\n    _detachEventHandlers: function() {\r\n        _events_engine.default.off(this._$element, \".\".concat(SCROLLABLE_SIMULATED_CURSOR));\r\n        _events_engine.default.off(this._$container, \".\".concat(SCROLLABLE_SIMULATED_KEYBOARD))\r\n    }\r\n});\r\nexports.SimulatedStrategy = SimulatedStrategy;\r\n","/**\r\n * DevExtreme (ui/scroll_view/ui.scrollbar.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _ready_callbacks = _interopRequireDefault(require(\"../../core/utils/ready_callbacks\"));\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLBAR = \"dxScrollbar\";\r\nvar SCROLLABLE_SCROLLBAR_CLASS = \"dx-scrollable-scrollbar\";\r\nvar SCROLLABLE_SCROLLBAR_ACTIVE_CLASS = \"\".concat(SCROLLABLE_SCROLLBAR_CLASS, \"-active\");\r\nvar SCROLLABLE_SCROLL_CLASS = \"dx-scrollable-scroll\";\r\nvar SCROLLABLE_SCROLL_CONTENT_CLASS = \"dx-scrollable-scroll-content\";\r\nvar HOVER_ENABLED_STATE = \"dx-scrollbar-hoverable\";\r\nvar HORIZONTAL = \"horizontal\";\r\nvar THUMB_MIN_SIZE = 15;\r\nvar SCROLLBAR_VISIBLE = {\r\n    onScroll: \"onScroll\",\r\n    onHover: \"onHover\",\r\n    always: \"always\",\r\n    never: \"never\"\r\n};\r\nvar activeScrollbar = null;\r\nvar Scrollbar = _ui.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            direction: null,\r\n            visible: false,\r\n            activeStateEnabled: false,\r\n            visibilityMode: SCROLLBAR_VISIBLE.onScroll,\r\n            containerSize: 0,\r\n            contentSize: 0,\r\n            expandable: true,\r\n            scaleRatio: 1\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._isHovered = false\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderThumb();\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderDirection();\r\n        this._update();\r\n        this._attachPointerDownHandler();\r\n        this.option(\"hoverStateEnabled\", this._isHoverMode());\r\n        this.$element().toggleClass(HOVER_ENABLED_STATE, this.option(\"hoverStateEnabled\"))\r\n    },\r\n    _renderThumb: function() {\r\n        this._$thumb = (0, _renderer.default)(\"<div>\").addClass(SCROLLABLE_SCROLL_CLASS);\r\n        (0, _renderer.default)(\"<div>\").addClass(SCROLLABLE_SCROLL_CONTENT_CLASS).appendTo(this._$thumb);\r\n        this.$element().addClass(SCROLLABLE_SCROLLBAR_CLASS).append(this._$thumb)\r\n    },\r\n    isThumb: function($element) {\r\n        return !!this.$element().find($element).length\r\n    },\r\n    _isHoverMode: function() {\r\n        var visibilityMode = this.option(\"visibilityMode\");\r\n        return (visibilityMode === SCROLLBAR_VISIBLE.onHover || visibilityMode === SCROLLBAR_VISIBLE.always) && this.option(\"expandable\")\r\n    },\r\n    _renderDirection: function() {\r\n        var direction = this.option(\"direction\");\r\n        this.$element().addClass(\"dx-scrollbar-\" + direction);\r\n        this._dimension = direction === HORIZONTAL ? \"width\" : \"height\";\r\n        this._prop = direction === HORIZONTAL ? \"left\" : \"top\"\r\n    },\r\n    _attachPointerDownHandler: function() {\r\n        _events_engine.default.on(this._$thumb, (0, _index.addNamespace)(_pointer.default.down, SCROLLBAR), this.feedbackOn.bind(this))\r\n    },\r\n    feedbackOn: function() {\r\n        this.$element().addClass(SCROLLABLE_SCROLLBAR_ACTIVE_CLASS);\r\n        activeScrollbar = this\r\n    },\r\n    feedbackOff: function() {\r\n        this.$element().removeClass(SCROLLABLE_SCROLLBAR_ACTIVE_CLASS);\r\n        activeScrollbar = null\r\n    },\r\n    cursorEnter: function() {\r\n        this._isHovered = true;\r\n        if (this._needScrollbar()) {\r\n            this.option(\"visible\", true)\r\n        }\r\n    },\r\n    cursorLeave: function() {\r\n        this._isHovered = false;\r\n        this.option(\"visible\", false)\r\n    },\r\n    _renderDimensions: function() {\r\n        this._$thumb.css({\r\n            width: this.option(\"width\"),\r\n            height: this.option(\"height\")\r\n        })\r\n    },\r\n    _toggleVisibility: function(visible) {\r\n        if (this.option(\"visibilityMode\") === SCROLLBAR_VISIBLE.onScroll) {\r\n            this._$thumb.css(\"opacity\")\r\n        }\r\n        visible = this._adjustVisibility(visible);\r\n        this.option().visible = visible;\r\n        this._$thumb.toggleClass(\"dx-state-invisible\", !visible)\r\n    },\r\n    _adjustVisibility: function(visible) {\r\n        if (this._baseContainerToContentRatio && !this._needScrollbar()) {\r\n            return false\r\n        }\r\n        switch (this.option(\"visibilityMode\")) {\r\n            case SCROLLBAR_VISIBLE.onScroll:\r\n                break;\r\n            case SCROLLBAR_VISIBLE.onHover:\r\n                visible = visible || !!this._isHovered;\r\n                break;\r\n            case SCROLLBAR_VISIBLE.never:\r\n                visible = false;\r\n                break;\r\n            case SCROLLBAR_VISIBLE.always:\r\n                visible = true\r\n        }\r\n        return visible\r\n    },\r\n    moveTo: function(location) {\r\n        if (this._isHidden()) {\r\n            return\r\n        }\r\n        if ((0, _type.isPlainObject)(location)) {\r\n            location = location[this._prop] || 0\r\n        }\r\n        var scrollBarLocation = {};\r\n        scrollBarLocation[this._prop] = this._calculateScrollBarPosition(location);\r\n        (0, _translator.move)(this._$thumb, scrollBarLocation)\r\n    },\r\n    _calculateScrollBarPosition: function(location) {\r\n        return -location * this._thumbRatio\r\n    },\r\n    _update: function() {\r\n        var containerSize = Math.round(this.option(\"containerSize\"));\r\n        var contentSize = Math.round(this.option(\"contentSize\"));\r\n        var baseContainerSize = Math.round(this.option(\"baseContainerSize\"));\r\n        var baseContentSize = Math.round(this.option(\"baseContentSize\"));\r\n        if (isNaN(baseContainerSize)) {\r\n            baseContainerSize = containerSize;\r\n            baseContentSize = contentSize\r\n        }\r\n        this._baseContainerToContentRatio = baseContentSize ? baseContainerSize / baseContentSize : baseContainerSize;\r\n        this._realContainerToContentRatio = contentSize ? containerSize / contentSize : containerSize;\r\n        var thumbSize = Math.round(Math.max(Math.round(containerSize * this._realContainerToContentRatio), THUMB_MIN_SIZE));\r\n        this._thumbRatio = (containerSize - thumbSize) / (this.option(\"scaleRatio\") * (contentSize - containerSize));\r\n        this.option(this._dimension, thumbSize / this.option(\"scaleRatio\"));\r\n        this.$element().css(\"display\", this._needScrollbar() ? \"\" : \"none\")\r\n    },\r\n    _isHidden: function() {\r\n        return this.option(\"visibilityMode\") === SCROLLBAR_VISIBLE.never\r\n    },\r\n    _needScrollbar: function() {\r\n        return !this._isHidden() && this._baseContainerToContentRatio < 1\r\n    },\r\n    containerToContentRatio: function() {\r\n        return this._realContainerToContentRatio\r\n    },\r\n    _normalizeSize: function(size) {\r\n        return (0, _type.isPlainObject)(size) ? size[this._dimension] || 0 : size\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        if (this === activeScrollbar) {\r\n            activeScrollbar = null\r\n        }\r\n        _events_engine.default.off(this._$thumb, \".\" + SCROLLBAR)\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (this._isHidden()) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"containerSize\":\r\n            case \"contentSize\":\r\n                this.option()[args.name] = this._normalizeSize(args.value);\r\n                this._update();\r\n                break;\r\n            case \"baseContentSize\":\r\n            case \"baseContainerSize\":\r\n                this._update();\r\n                break;\r\n            case \"visibilityMode\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            case \"scaleRatio\":\r\n                this._update();\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    update: (0, _common.deferRenderer)(function() {\r\n        this._adjustVisibility() && this.option(\"visible\", true)\r\n    })\r\n});\r\n_ready_callbacks.default.add(function() {\r\n    _events_engine.default.subscribeGlobal(_dom_adapter.default.getDocument(), (0, _index.addNamespace)(_pointer.default.up, SCROLLBAR), function() {\r\n        if (activeScrollbar) {\r\n            activeScrollbar.feedbackOff()\r\n        }\r\n    })\r\n});\r\nvar _default = Scrollbar;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/select_box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _array = require(\"../core/utils/array\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _deferred = require(\"../core/utils/deferred\");\r\nvar _element = require(\"../core/element\");\r\nvar _errors = _interopRequireDefault(require(\"../core/errors\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../core/dom_adapter\"));\r\nvar _utils = require(\"./widget/utils.ink_ripple\");\r\nvar _message = _interopRequireDefault(require(\"../localization/message\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _ui = _interopRequireDefault(require(\"./drop_down_editor/ui.drop_down_list\"));\r\nvar _index = require(\"../events/utils/index\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DISABLED_STATE_SELECTOR = \".dx-state-disabled\";\r\nvar SELECTBOX_CLASS = \"dx-selectbox\";\r\nvar SELECTBOX_POPUP_CLASS = \"dx-selectbox-popup\";\r\nvar SELECTBOX_CONTAINER_CLASS = \"dx-selectbox-container\";\r\nvar SELECTBOX_POPUP_WRAPPER_CLASS = \"dx-selectbox-popup-wrapper\";\r\nvar SelectBox = _ui.default.inherit({\r\n    _supportedKeys: function() {\r\n        var that = this;\r\n        var parent = this.callBase();\r\n        var clearSelectBox = function(e) {\r\n            var isEditable = this._isEditable();\r\n            if (!isEditable) {\r\n                if (this.option(\"showClearButton\")) {\r\n                    e.preventDefault();\r\n                    this.reset()\r\n                }\r\n            } else {\r\n                if (this._valueSubstituted()) {\r\n                    this._preventFiltering = true\r\n                }\r\n            }\r\n            this._savedTextRemoveEvent = e;\r\n            this._preventSubstitution = true\r\n        };\r\n        var searchIfNeeded = function() {\r\n            if (that.option(\"searchEnabled\") && that._valueSubstituted()) {\r\n                that._searchHandler()\r\n            }\r\n        };\r\n        return (0, _extend.extend)({}, parent, {\r\n            tab: function() {\r\n                if (this.option(\"opened\") && \"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this._resetCaretPosition(true)\r\n                }\r\n                parent.tab && parent.tab.apply(this, arguments);\r\n                this._cancelSearchIfNeed()\r\n            },\r\n            upArrow: function(e) {\r\n                if (parent.upArrow && parent.upArrow.apply(this, arguments)) {\r\n                    if (!this.option(\"opened\")) {\r\n                        this._setNextValue(e)\r\n                    }\r\n                    return true\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                if (parent.downArrow && parent.downArrow.apply(this, arguments)) {\r\n                    if (!this.option(\"opened\")) {\r\n                        this._setNextValue(e)\r\n                    }\r\n                    return true\r\n                }\r\n            },\r\n            leftArrow: function() {\r\n                searchIfNeeded();\r\n                parent.leftArrow && parent.leftArrow.apply(this, arguments)\r\n            },\r\n            rightArrow: function() {\r\n                searchIfNeeded();\r\n                parent.rightArrow && parent.rightArrow.apply(this, arguments)\r\n            },\r\n            home: function() {\r\n                searchIfNeeded();\r\n                parent.home && parent.home.apply(this, arguments)\r\n            },\r\n            end: function() {\r\n                searchIfNeeded();\r\n                parent.end && parent.end.apply(this, arguments)\r\n            },\r\n            escape: function() {\r\n                var result = parent.escape && parent.escape.apply(this, arguments);\r\n                this._cancelEditing();\r\n                return null !== result && void 0 !== result ? result : true\r\n            },\r\n            enter: function(e) {\r\n                var isOpened = this.option(\"opened\");\r\n                var inputText = this._input().val().trim();\r\n                var isCustomText = inputText && this._list && !this._list.option(\"focusedElement\");\r\n                if (!inputText && (0, _type.isDefined)(this.option(\"value\")) && this.option(\"allowClearing\")) {\r\n                    this._saveValueChangeEvent(e);\r\n                    this.option({\r\n                        selectedItem: null,\r\n                        value: null\r\n                    });\r\n                    this.close()\r\n                } else {\r\n                    if (this.option(\"acceptCustomValue\")) {\r\n                        e.preventDefault();\r\n                        if (isCustomText) {\r\n                            if (isOpened) {\r\n                                this._toggleOpenState()\r\n                            }\r\n                            this._valueChangeEventHandler(e)\r\n                        }\r\n                        return isOpened\r\n                    }\r\n                    if (parent.enter && parent.enter.apply(this, arguments)) {\r\n                        return isOpened\r\n                    }\r\n                }\r\n            },\r\n            space: function(e) {\r\n                var isOpened = this.option(\"opened\");\r\n                var isSearchEnabled = this.option(\"searchEnabled\");\r\n                var acceptCustomValue = this.option(\"acceptCustomValue\");\r\n                if (!isOpened || isSearchEnabled || acceptCustomValue) {\r\n                    return\r\n                }\r\n                e.preventDefault();\r\n                this._valueChangeEventHandler(e);\r\n                return true\r\n            },\r\n            backspace: clearSelectBox,\r\n            del: clearSelectBox\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            placeholder: _message.default.format(\"Select\"),\r\n            fieldTemplate: null,\r\n            valueChangeEvent: \"change\",\r\n            acceptCustomValue: false,\r\n            onCustomItemCreating: function(e) {\r\n                if (!(0, _type.isDefined)(e.customItem)) {\r\n                    e.customItem = e.text\r\n                }\r\n            },\r\n            showSelectionControls: false,\r\n            allowClearing: true,\r\n            tooltipEnabled: false,\r\n            openOnFieldClick: true,\r\n            showDropDownButton: true,\r\n            displayCustomValue: false,\r\n            useInkRipple: false,\r\n            useHiddenSubmitElement: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initCustomItemCreatingAction()\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(SELECTBOX_CLASS);\r\n        this._renderTooltip();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.callBase();\r\n        this._$container.addClass(SELECTBOX_CONTAINER_CLASS)\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = (0, _utils.render)()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple || this._isEditable()) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: this._inputWrapper(),\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _createPopup: function() {\r\n        this.callBase();\r\n        this._popup.$element().addClass(SELECTBOX_POPUP_CLASS);\r\n        this._popup.$overlayContent().attr(\"tabindex\", -1)\r\n    },\r\n    _popupWrapperClass: function() {\r\n        return this.callBase() + \" \" + SELECTBOX_POPUP_WRAPPER_CLASS\r\n    },\r\n    _cancelEditing: function() {\r\n        if (!this.option(\"searchEnabled\") && this._list) {\r\n            this._focusListElement(null);\r\n            this._updateField(this.option(\"selectedItem\"))\r\n        }\r\n    },\r\n    _renderOpenedState: function() {\r\n        this.callBase();\r\n        if (this.option(\"opened\")) {\r\n            this._scrollToSelectedItem();\r\n            this._focusSelectedElement()\r\n        }\r\n    },\r\n    _focusSelectedElement: function() {\r\n        var searchValue = this._searchValue();\r\n        if (!searchValue) {\r\n            this._focusListElement(null);\r\n            return\r\n        }\r\n        var $listItems = this._list._itemElements();\r\n        var index = (0, _array.inArray)(this.option(\"selectedItem\"), this.option(\"items\"));\r\n        var focusedElement = index >= 0 && !this._isCustomItemSelected() ? $listItems.eq(index) : null;\r\n        this._focusListElement(focusedElement)\r\n    },\r\n    _renderFocusedElement: function() {\r\n        if (!this._list) {\r\n            return\r\n        }\r\n        var searchValue = this._searchValue();\r\n        if (!searchValue || this.option(\"acceptCustomValue\")) {\r\n            this._focusListElement(null);\r\n            return\r\n        }\r\n        var $listItems = this._list._itemElements();\r\n        var focusedElement = $listItems.not(DISABLED_STATE_SELECTOR).eq(0);\r\n        this._focusListElement(focusedElement)\r\n    },\r\n    _focusListElement: function(element) {\r\n        this._preventInputValueRender = true;\r\n        this._list.option(\"focusedElement\", (0, _element.getPublicElement)(element));\r\n        delete this._preventInputValueRender\r\n    },\r\n    _scrollToSelectedItem: function() {\r\n        this._list && this._list.scrollToItem(this._list.option(\"selectedItem\"))\r\n    },\r\n    _listContentReadyHandler: function() {\r\n        this.callBase();\r\n        var isPaginate = this._dataSource && this._dataSource.paginate();\r\n        if (isPaginate && this._needPopupRepaint()) {\r\n            return\r\n        }\r\n        this._scrollToSelectedItem()\r\n    },\r\n    _renderValue: function() {\r\n        this._renderInputValue();\r\n        this._setSubmitValue();\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    _renderInputValue: function() {\r\n        return this.callBase().always(function() {\r\n            this._renderInputValueAsync()\r\n        }.bind(this))\r\n    },\r\n    _renderInputValueAsync: function() {\r\n        this._renderTooltip();\r\n        this._renderInputValueImpl().always(function() {\r\n            this._refreshSelected()\r\n        }.bind(this))\r\n    },\r\n    _renderInputValueImpl: function() {\r\n        this._renderField();\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    _setNextItem: function(step) {\r\n        var item = this._calcNextItem(step);\r\n        var value = this._valueGetter(item);\r\n        this._setValue(value)\r\n    },\r\n    _setNextValue: function(e) {\r\n        var dataSourceIsLoaded = this._dataSource.isLoaded() ? (new _deferred.Deferred).resolve() : this._dataSource.load();\r\n        dataSourceIsLoaded.done(function() {\r\n            var selectedIndex = this._getSelectedIndex();\r\n            var hasPages = this._dataSource.pageSize();\r\n            var isLastPage = this._dataSource.isLastPage();\r\n            var isLastItem = selectedIndex === this._items().length - 1;\r\n            this._saveValueChangeEvent(e);\r\n            var step = \"downArrow\" === (0, _index.normalizeKeyName)(e) ? 1 : -1;\r\n            if (hasPages && !isLastPage && isLastItem && step > 0) {\r\n                if (!this._popup) {\r\n                    this._createPopup()\r\n                }\r\n                if (!this._dataSource.isLoading()) {\r\n                    this._list._loadNextPage().done(this._setNextItem.bind(this, step))\r\n                }\r\n            } else {\r\n                this._setNextItem(step)\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _setSelectedItem: function(item) {\r\n        var isUnknownItem = !this._isCustomValueAllowed() && void 0 === item;\r\n        this.callBase(isUnknownItem ? null : item);\r\n        if (!isUnknownItem && (!this._isEditable() || this._isCustomItemSelected())) {\r\n            this._setListOption(\"selectedItem\", this.option(\"selectedItem\"))\r\n        }\r\n    },\r\n    _isCustomValueAllowed: function() {\r\n        return this.option(\"acceptCustomValue\") || this.callBase()\r\n    },\r\n    _displayValue: function(item) {\r\n        item = !(0, _type.isDefined)(item) && this._isCustomValueAllowed() ? this.option(\"value\") : item;\r\n        return this.callBase(item)\r\n    },\r\n    _listConfig: function() {\r\n        var result = (0, _extend.extend)(this.callBase(), {\r\n            pageLoadMode: \"scrollBottom\",\r\n            onSelectionChanged: this._getSelectionChangeHandler(),\r\n            selectedItem: this.option(\"selectedItem\"),\r\n            onFocusedItemChanged: this._listFocusedItemChangeHandler.bind(this)\r\n        });\r\n        if (this.option(\"showSelectionControls\")) {\r\n            (0, _extend.extend)(result, {\r\n                showSelectionControls: true,\r\n                selectionByClick: true\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _listFocusedItemChangeHandler: function(e) {\r\n        if (this._preventInputValueRender) {\r\n            return\r\n        }\r\n        var list = e.component;\r\n        var focusedElement = (0, _renderer.default)(list.option(\"focusedElement\"));\r\n        var focusedItem = list._getItemData(focusedElement);\r\n        this._updateField(focusedItem)\r\n    },\r\n    _updateField: function(item) {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (!(fieldTemplate && this.option(\"fieldTemplate\"))) {\r\n            var text = this._displayGetter(item);\r\n            this.option(\"text\", text);\r\n            this._renderDisplayText(text);\r\n            return\r\n        }\r\n        this._renderField()\r\n    },\r\n    _getSelectionChangeHandler: function() {\r\n        return this.option(\"showSelectionControls\") ? this._selectionChangeHandler.bind(this) : _common.noop\r\n    },\r\n    _selectionChangeHandler: function(e) {\r\n        (0, _iterator.each)(e.addedItems || [], function(_, addedItem) {\r\n            this._setValue(this._valueGetter(addedItem))\r\n        }.bind(this))\r\n    },\r\n    _getActualSearchValue: function() {\r\n        return this._dataSource.searchValue()\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n        if (!isVisible && !this._shouldClearFilter()) {\r\n            this._restoreInputText(true)\r\n        }\r\n        if (this._wasSearch() && isVisible) {\r\n            this._wasSearch(false);\r\n            var showDataImmediately = this.option(\"showDataBeforeSearch\") || this._isMinSearchLengthExceeded();\r\n            if (showDataImmediately && this._dataSource) {\r\n                if (this._searchTimer) {\r\n                    return\r\n                }\r\n                var searchValue = this._getActualSearchValue();\r\n                searchValue && this._wasSearch(true);\r\n                this._filterDataSource(searchValue || null)\r\n            } else {\r\n                this._setListOption(\"items\", [])\r\n            }\r\n        }\r\n        if (isVisible) {\r\n            this._scrollToSelectedItem()\r\n        }\r\n        this.callBase(isVisible)\r\n    },\r\n    _renderTooltip: function() {\r\n        if (this.option(\"tooltipEnabled\")) {\r\n            this.$element().attr(\"title\", this.option(\"displayValue\"))\r\n        }\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this._dimensionChanged()\r\n    },\r\n    _isValueEqualInputText: function() {\r\n        var initialSelectedItem = this.option(\"selectedItem\");\r\n        if (null === initialSelectedItem) {\r\n            return false\r\n        }\r\n        var value = this._displayGetter(initialSelectedItem);\r\n        var displayValue = value ? String(value) : \"\";\r\n        var inputText = this._searchValue();\r\n        return displayValue === inputText\r\n    },\r\n    _popupHidingHandler: function() {\r\n        if (this._isValueEqualInputText()) {\r\n            this._cancelEditing()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this.callBase();\r\n        if (this._shouldCancelSearch()) {\r\n            this._wasSearch(false);\r\n            this._searchCanceled();\r\n            this._shouldCancelSearch(false)\r\n        }\r\n    },\r\n    _restoreInputText: function(saveEditingValue) {\r\n        if (this.option(\"readOnly\")) {\r\n            return\r\n        }\r\n        this._loadItemDeferred && this._loadItemDeferred.always(function() {\r\n            var initialSelectedItem = this.option(\"selectedItem\");\r\n            if (this.option(\"acceptCustomValue\")) {\r\n                if (!saveEditingValue) {\r\n                    this._updateField(initialSelectedItem);\r\n                    this._clearFilter()\r\n                }\r\n                return\r\n            }\r\n            if (this.option(\"searchEnabled\")) {\r\n                if (!this._searchValue() && this.option(\"allowClearing\")) {\r\n                    this._clearTextValue();\r\n                    return\r\n                }\r\n            }\r\n            if (this._isValueEqualInputText()) {\r\n                return\r\n            }\r\n            this._renderInputValue().always(function(selectedItem) {\r\n                var newSelectedItem = (0, _common.ensureDefined)(selectedItem, initialSelectedItem);\r\n                this._setSelectedItem(newSelectedItem);\r\n                this._updateField(newSelectedItem);\r\n                this._clearFilter()\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        if (!this._preventNestedFocusEvent(e)) {\r\n            var isOverlayTarget = this._isOverlayNestedTarget(e.relatedTarget);\r\n            if (!isOverlayTarget) {\r\n                this._restoreInputText();\r\n                this._clearSearchTimer()\r\n            }\r\n            this._cancelSearchIfNeed(e)\r\n        }\r\n        e.target = this._input().get(0);\r\n        this.callBase(e)\r\n    },\r\n    _cancelSearchIfNeed: function(e) {\r\n        var _this$option = this.option(),\r\n            searchEnabled = _this$option.searchEnabled;\r\n        var isOverlayTarget = this._isOverlayNestedTarget(null === e || void 0 === e ? void 0 : e.relatedTarget);\r\n        var shouldCancelSearch = this._wasSearch() && searchEnabled && !isOverlayTarget;\r\n        if (shouldCancelSearch) {\r\n            var _this$_popup;\r\n            var isPopupVisible = null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup._hideAnimationProcessing;\r\n            this._clearSearchTimer();\r\n            if (isPopupVisible) {\r\n                this._shouldCancelSearch(true)\r\n            } else {\r\n                this._wasSearch(false);\r\n                this._searchCanceled()\r\n            }\r\n        }\r\n    },\r\n    _shouldCancelSearch: function(value) {\r\n        if (!arguments.length) {\r\n            return this._shouldCancelSearchValue\r\n        }\r\n        this._shouldCancelSearchValue = value\r\n    },\r\n    _isOverlayNestedTarget: function(target) {\r\n        return !!(0, _renderer.default)(target).closest(\".\".concat(SELECTBOX_POPUP_WRAPPER_CLASS)).length\r\n    },\r\n    _clearTextValue: function() {\r\n        if (this.option(\"selectedItem\")) {\r\n            if (this._savedTextRemoveEvent) {\r\n                this._saveValueChangeEvent(this._savedTextRemoveEvent)\r\n            }\r\n            this.option(\"value\", null)\r\n        }\r\n        delete this._savedTextRemoveEvent\r\n    },\r\n    _shouldOpenPopup: function() {\r\n        return this._needPassDataSourceToList() && this._wasSearch()\r\n    },\r\n    _isFocused: function() {\r\n        var activeElement = _dom_adapter.default.getActiveElement();\r\n        return this.callBase() && (0, _renderer.default)(activeElement).closest(this._input()).length > 0\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        if (this._isEditable()) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _fieldRenderData: function() {\r\n        var $listFocused = this._list && this.option(\"opened\") && (0, _renderer.default)(this._list.option(\"focusedElement\"));\r\n        if ($listFocused && $listFocused.length) {\r\n            return this._list._getItemData($listFocused)\r\n        }\r\n        return this.option(\"selectedItem\")\r\n    },\r\n    _isSelectedValue: function(value) {\r\n        return this._isValueEquals(value, this.option(\"value\"))\r\n    },\r\n    _shouldCloseOnItemClick: function() {\r\n        return !(this.option(\"showSelectionControls\") && \"single\" !== this.option(\"selectionMode\"))\r\n    },\r\n    _listItemClickHandler: function(e) {\r\n        var previousValue = this._getCurrentValue();\r\n        this._focusListElement((0, _renderer.default)(e.itemElement));\r\n        this._saveValueChangeEvent(e.event);\r\n        this._completeSelection(this._valueGetter(e.itemData));\r\n        if (this._shouldCloseOnItemClick()) {\r\n            this.option(\"opened\", false)\r\n        }\r\n        if (this.option(\"searchEnabled\") && previousValue === this._valueGetter(e.itemData)) {\r\n            this._updateField(e.itemData)\r\n        }\r\n        if (this._shouldClearFilter()) {\r\n            this._cancelSearchIfNeed()\r\n        }\r\n    },\r\n    _shouldClearFilter: function() {\r\n        return this._wasSearch()\r\n    },\r\n    _completeSelection: function(value) {\r\n        this._setValue(value)\r\n    },\r\n    _loadItem: function(value, cache) {\r\n        var that = this;\r\n        var deferred = new _deferred.Deferred;\r\n        this.callBase(value, cache).done(function(item) {\r\n            deferred.resolve(item)\r\n        }.bind(this)).fail(function(args) {\r\n            if (null !== args && void 0 !== args && args.shouldSkipCallback) {\r\n                return\r\n            }\r\n            var selectedItem = that.option(\"selectedItem\");\r\n            if (that.option(\"acceptCustomValue\") && value === that._valueGetter(selectedItem)) {\r\n                deferred.resolve(selectedItem)\r\n            } else {\r\n                deferred.reject()\r\n            }\r\n        }.bind(this));\r\n        return deferred.promise()\r\n    },\r\n    _loadInputValue: function(value, callback) {\r\n        this._loadItemDeferred = this._loadItem(value).always(callback);\r\n        return this._loadItemDeferred\r\n    },\r\n    _isCustomItemSelected: function() {\r\n        var selectedItem = this.option(\"selectedItem\");\r\n        var searchValue = this._searchValue();\r\n        var selectedItemText = this._displayGetter(selectedItem);\r\n        return !selectedItemText || searchValue !== selectedItemText.toString()\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (this.option(\"acceptCustomValue\") && this._isCustomItemSelected() && !this._isValueChanging) {\r\n            this._isValueChanging = true;\r\n            this._customItemAddedHandler(e);\r\n            this._isValueChanging = false\r\n        }\r\n    },\r\n    _initCustomItemCreatingAction: function() {\r\n        this._customItemCreatingAction = this._createActionByOption(\"onCustomItemCreating\")\r\n    },\r\n    _createCustomItem: function(text) {\r\n        var params = {\r\n            text: text\r\n        };\r\n        var actionResult = this._customItemCreatingAction(params);\r\n        var item = (0, _common.ensureDefined)(actionResult, params.customItem);\r\n        if ((0, _type.isDefined)(actionResult)) {\r\n            _errors.default.log(\"W0015\", \"onCustomItemCreating\", \"customItem\")\r\n        }\r\n        return item\r\n    },\r\n    _customItemAddedHandler: function(e) {\r\n        var searchValue = this._searchValue();\r\n        var item = this._createCustomItem(searchValue);\r\n        this._saveValueChangeEvent(e);\r\n        if (void 0 === item) {\r\n            this._renderValue();\r\n            throw _errors.default.Error(\"E0121\")\r\n        }\r\n        if ((0, _type.isPromise)(item)) {\r\n            (0, _deferred.fromPromise)(item).done(this._setCustomItem.bind(this)).fail(this._setCustomItem.bind(this, null))\r\n        } else {\r\n            this._setCustomItem(item)\r\n        }\r\n    },\r\n    _setCustomItem: function(item) {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        item = item || null;\r\n        this.option(\"selectedItem\", item);\r\n        this._cancelSearchIfNeed();\r\n        this._setValue(this._valueGetter(item));\r\n        this._renderDisplayText(this._displayGetter(item))\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        this._preventFiltering = true;\r\n        this.callBase(e);\r\n        return false\r\n    },\r\n    _wasSearch: function(value) {\r\n        if (!arguments.length) {\r\n            return this._wasSearchValue\r\n        }\r\n        this._wasSearchValue = value\r\n    },\r\n    _searchHandler: function() {\r\n        if (this._preventFiltering) {\r\n            delete this._preventFiltering;\r\n            return\r\n        }\r\n        if (this._needPassDataSourceToList()) {\r\n            this._wasSearch(true)\r\n        }\r\n        this.callBase(arguments)\r\n    },\r\n    _dataSourceFiltered: function(searchValue) {\r\n        this.callBase();\r\n        if (null !== searchValue) {\r\n            this._renderInputSubstitution();\r\n            this._renderFocusedElement()\r\n        }\r\n    },\r\n    _valueSubstituted: function() {\r\n        var input = this._input().get(0);\r\n        var isAllSelected = 0 === input.selectionStart && input.selectionEnd === this._searchValue().length;\r\n        var inputHasSelection = input.selectionStart !== input.selectionEnd;\r\n        return this._wasSearch() && inputHasSelection && !isAllSelected\r\n    },\r\n    _shouldSubstitutionBeRendered: function() {\r\n        return !this._preventSubstitution && this.option(\"searchEnabled\") && !this.option(\"acceptCustomValue\") && \"startswith\" === this.option(\"searchMode\")\r\n    },\r\n    _renderInputSubstitution: function() {\r\n        if (!this._shouldSubstitutionBeRendered()) {\r\n            delete this._preventSubstitution;\r\n            return\r\n        }\r\n        var item = this._list && this._getPlainItems(this._list.option(\"items\"))[0];\r\n        if (!item) {\r\n            return\r\n        }\r\n        var $input = this._input();\r\n        var valueLength = $input.val().length;\r\n        if (0 === valueLength) {\r\n            return\r\n        }\r\n        var inputElement = $input.get(0);\r\n        var displayValue = this._displayGetter(item).toString();\r\n        inputElement.value = displayValue;\r\n        this._caret({\r\n            start: valueLength,\r\n            end: displayValue.length\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this._renderInputValueAsync = _common.noop;\r\n        delete this._loadItemDeferred;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onCustomItemCreating\":\r\n                this._initCustomItemCreatingAction();\r\n                break;\r\n            case \"tooltipEnabled\":\r\n                this._renderTooltip();\r\n                break;\r\n            case \"displayCustomValue\":\r\n            case \"acceptCustomValue\":\r\n            case \"showSelectionControls\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"allowClearing\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        delete this._inkRipple;\r\n        this.callBase()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxSelectBox\", SelectBox);\r\nvar _default = SelectBox;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/selection/selection.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _selectionStrategy = _interopRequireDefault(require(\"./selection.strategy.deferred\"));\r\nvar _selectionStrategy2 = _interopRequireDefault(require(\"./selection.strategy.standard\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _class.default.inherit({\r\n    ctor: function(options) {\r\n        this.options = (0, _extend.extend)(this._getDefaultOptions(), options, {\r\n            selectedItemKeys: options.selectedKeys || []\r\n        });\r\n        this._selectionStrategy = this.options.deferred ? new _selectionStrategy.default(this.options) : new _selectionStrategy2.default(this.options);\r\n        this._focusedItemIndex = -1;\r\n        if (!this.options.equalByReference) {\r\n            this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys)\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return {\r\n            allowNullValue: false,\r\n            deferred: false,\r\n            equalByReference: false,\r\n            mode: \"multiple\",\r\n            selectedItems: [],\r\n            selectionFilter: [],\r\n            maxFilterLengthInRequest: 0,\r\n            onSelectionChanged: _common.noop,\r\n            key: _common.noop,\r\n            keyOf: function(item) {\r\n                return item\r\n            },\r\n            load: function() {\r\n                return (new _deferred.Deferred).resolve([])\r\n            },\r\n            totalCount: function() {\r\n                return -1\r\n            },\r\n            isSelectableItem: function() {\r\n                return true\r\n            },\r\n            isItemSelected: function() {\r\n                return false\r\n            },\r\n            getItemData: function(item) {\r\n                return item\r\n            },\r\n            dataFields: _common.noop,\r\n            filter: _common.noop\r\n        }\r\n    },\r\n    validate: function() {\r\n        this._selectionStrategy.validate()\r\n    },\r\n    getSelectedItemKeys: function() {\r\n        return this._selectionStrategy.getSelectedItemKeys()\r\n    },\r\n    getSelectedItems: function() {\r\n        return this._selectionStrategy.getSelectedItems()\r\n    },\r\n    selectionFilter: function(value) {\r\n        if (void 0 === value) {\r\n            return this.options.selectionFilter\r\n        }\r\n        var filterIsChanged = this.options.selectionFilter !== value && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(value);\r\n        this.options.selectionFilter = value;\r\n        filterIsChanged && this.onSelectionChanged()\r\n    },\r\n    setSelection: function(keys, updatedKeys) {\r\n        return this.selectedItemKeys(keys, false, false, false, updatedKeys)\r\n    },\r\n    select: function(keys) {\r\n        return this.selectedItemKeys(keys, true)\r\n    },\r\n    deselect: function(keys) {\r\n        return this.selectedItemKeys(keys, true, true)\r\n    },\r\n    selectedItemKeys: function(keys, preserve, isDeselect, isSelectAll, updatedKeys) {\r\n        var _keys;\r\n        var that = this;\r\n        keys = null !== (_keys = keys) && void 0 !== _keys ? _keys : [];\r\n        keys = Array.isArray(keys) ? keys : [keys];\r\n        that.validate();\r\n        return this._selectionStrategy.selectedItemKeys(keys, preserve, isDeselect, isSelectAll, updatedKeys)\r\n    },\r\n    clearSelection: function() {\r\n        return this.selectedItemKeys([])\r\n    },\r\n    _addSelectedItem: function(itemData, key) {\r\n        this._selectionStrategy.addSelectedItem(key, itemData)\r\n    },\r\n    _removeSelectedItem: function(key) {\r\n        this._selectionStrategy.removeSelectedItem(key)\r\n    },\r\n    _setSelectedItems: function(keys, items) {\r\n        this._selectionStrategy.setSelectedItems(keys, items)\r\n    },\r\n    onSelectionChanged: function() {\r\n        this._selectionStrategy.onSelectionChanged()\r\n    },\r\n    changeItemSelection: function(itemIndex, keys) {\r\n        var isSelectedItemsChanged;\r\n        var items = this.options.plainItems();\r\n        var item = items[itemIndex];\r\n        if (!this.isSelectable() || !this.isDataItem(item)) {\r\n            return false\r\n        }\r\n        var itemData = this.options.getItemData(item);\r\n        var itemKey = this.options.keyOf(itemData);\r\n        keys = keys || {};\r\n        if (keys.shift && \"multiple\" === this.options.mode && this._focusedItemIndex >= 0) {\r\n            isSelectedItemsChanged = this.changeItemSelectionWhenShiftKeyPressed(itemIndex, items)\r\n        } else {\r\n            if (keys.control) {\r\n                this._resetItemSelectionWhenShiftKeyPressed();\r\n                var isSelected = this._selectionStrategy.isItemDataSelected(itemData);\r\n                if (\"single\" === this.options.mode) {\r\n                    this.clearSelectedItems()\r\n                }\r\n                if (isSelected) {\r\n                    this._removeSelectedItem(itemKey)\r\n                } else {\r\n                    this._addSelectedItem(itemData, itemKey)\r\n                }\r\n                isSelectedItemsChanged = true\r\n            } else {\r\n                this._resetItemSelectionWhenShiftKeyPressed();\r\n                var isKeysEqual = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], itemKey);\r\n                if (1 !== this.options.selectedItemKeys.length || !isKeysEqual) {\r\n                    this._setSelectedItems([itemKey], [itemData]);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (isSelectedItemsChanged) {\r\n            this._focusedItemIndex = itemIndex;\r\n            this.onSelectionChanged();\r\n            return true\r\n        }\r\n    },\r\n    isDataItem: function(item) {\r\n        return this.options.isSelectableItem(item)\r\n    },\r\n    isSelectable: function() {\r\n        return \"single\" === this.options.mode || \"multiple\" === this.options.mode\r\n    },\r\n    isItemDataSelected: function(data) {\r\n        return this._selectionStrategy.isItemDataSelected(data, {\r\n            checkPending: true\r\n        })\r\n    },\r\n    isItemSelected: function(arg, options) {\r\n        return this._selectionStrategy.isItemKeySelected(arg, options)\r\n    },\r\n    _resetItemSelectionWhenShiftKeyPressed: function() {\r\n        delete this._shiftFocusedItemIndex\r\n    },\r\n    _resetFocusedItemIndex: function() {\r\n        this._focusedItemIndex = -1\r\n    },\r\n    changeItemSelectionWhenShiftKeyPressed: function(itemIndex, items) {\r\n        var isSelectedItemsChanged = false;\r\n        var itemIndexStep;\r\n        var index;\r\n        var keyOf = this.options.keyOf;\r\n        var focusedItem = items[this._focusedItemIndex];\r\n        var focusedData = this.options.getItemData(focusedItem);\r\n        var focusedKey = keyOf(focusedData);\r\n        var isFocusedItemSelected = focusedItem && this.isItemDataSelected(focusedData);\r\n        if (!(0, _type.isDefined)(this._shiftFocusedItemIndex)) {\r\n            this._shiftFocusedItemIndex = this._focusedItemIndex\r\n        }\r\n        var data;\r\n        var itemKey;\r\n        if (this._shiftFocusedItemIndex !== this._focusedItemIndex) {\r\n            itemIndexStep = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            for (index = this._focusedItemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\r\n                if (this.isDataItem(items[index])) {\r\n                    itemKey = keyOf(this.options.getItemData(items[index]));\r\n                    this._removeSelectedItem(itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (itemIndex !== this._shiftFocusedItemIndex) {\r\n            itemIndexStep = itemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            for (index = itemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\r\n                if (this.isDataItem(items[index])) {\r\n                    data = this.options.getItemData(items[index]);\r\n                    itemKey = keyOf(data);\r\n                    this._addSelectedItem(data, itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (this.isDataItem(focusedItem) && !isFocusedItemSelected) {\r\n            this._addSelectedItem(focusedData, focusedKey);\r\n            isSelectedItemsChanged = true\r\n        }\r\n        return isSelectedItemsChanged\r\n    },\r\n    clearSelectedItems: function() {\r\n        this._setSelectedItems([], [])\r\n    },\r\n    selectAll: function(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._onePageSelectAll(false)\r\n        } else {\r\n            return this.selectedItemKeys([], true, false, true)\r\n        }\r\n    },\r\n    deselectAll: function(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._onePageSelectAll(true)\r\n        } else {\r\n            return this.selectedItemKeys([], true, true, true)\r\n        }\r\n    },\r\n    _onePageSelectAll: function(isDeselect) {\r\n        var items = this._selectionStrategy.getSelectableItems(this.options.plainItems());\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (this.isDataItem(item)) {\r\n                var itemData = this.options.getItemData(item);\r\n                var itemKey = this.options.keyOf(itemData);\r\n                var isSelected = this.isItemSelected(itemKey);\r\n                if (!isSelected && !isDeselect) {\r\n                    this._addSelectedItem(itemData, itemKey)\r\n                }\r\n                if (isSelected && isDeselect) {\r\n                    this._removeSelectedItem(itemKey)\r\n                }\r\n            }\r\n        }\r\n        this.onSelectionChanged();\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    getSelectAllState: function(visibleOnly) {\r\n        return this._selectionStrategy.getSelectAllState(visibleOnly)\r\n    }\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/selection/selection.strategy.deferred.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _selection = _interopRequireDefault(require(\"./selection.strategy\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _selection.default.inherit({\r\n    getSelectedItems: function() {\r\n        return this._loadFilteredData(this.options.selectionFilter)\r\n    },\r\n    getSelectedItemKeys: function() {\r\n        var d = new _deferred.Deferred;\r\n        var that = this;\r\n        var key = this.options.key();\r\n        var select = (0, _type.isString)(key) ? [key] : key;\r\n        this._loadFilteredData(this.options.selectionFilter, null, select).done(function(items) {\r\n            var keys = items.map(function(item) {\r\n                return that.options.keyOf(item)\r\n            });\r\n            d.resolve(keys)\r\n        }).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    selectedItemKeys: function(keys, preserve, isDeselect, isSelectAll) {\r\n        if (isSelectAll) {\r\n            var filter = this.options.filter();\r\n            var needResetSelectionFilter = !filter || JSON.stringify(filter) === JSON.stringify(this.options.selectionFilter) && isDeselect;\r\n            if (needResetSelectionFilter) {\r\n                this._setOption(\"selectionFilter\", isDeselect ? [] : null)\r\n            } else {\r\n                this._addSelectionFilter(isDeselect, filter, isSelectAll)\r\n            }\r\n        } else {\r\n            if (!preserve) {\r\n                this._setOption(\"selectionFilter\", [])\r\n            }\r\n            for (var i = 0; i < keys.length; i++) {\r\n                if (isDeselect) {\r\n                    this.removeSelectedItem(keys[i])\r\n                } else {\r\n                    this.addSelectedItem(keys[i])\r\n                }\r\n            }\r\n        }\r\n        this.onSelectionChanged();\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    setSelectedItems: function(keys) {\r\n        this._setOption(\"selectionFilter\", null);\r\n        for (var i = 0; i < keys.length; i++) {\r\n            this.addSelectedItem(keys[i])\r\n        }\r\n    },\r\n    isItemDataSelected: function(itemData) {\r\n        return this.isItemKeySelected(itemData)\r\n    },\r\n    isItemKeySelected: function(itemData) {\r\n        var selectionFilter = this.options.selectionFilter;\r\n        if (!selectionFilter) {\r\n            return true\r\n        }\r\n        return !!(0, _query.default)([itemData]).filter(selectionFilter).toArray().length\r\n    },\r\n    _getKeyExpr: function() {\r\n        var keyField = this.options.key();\r\n        if (Array.isArray(keyField) && 1 === keyField.length) {\r\n            return keyField[0]\r\n        }\r\n        return keyField\r\n    },\r\n    _normalizeKey: function(key) {\r\n        var keyExpr = this.options.key();\r\n        if (Array.isArray(keyExpr) && 1 === keyExpr.length) {\r\n            return key[keyExpr[0]]\r\n        }\r\n        return key\r\n    },\r\n    _getFilterByKey: function(key) {\r\n        var keyField = this._getKeyExpr();\r\n        var filter = [keyField, \"=\", this._normalizeKey(key)];\r\n        if (Array.isArray(keyField)) {\r\n            filter = [];\r\n            for (var i = 0; i < keyField.length; i++) {\r\n                filter.push([keyField[i], \"=\", key[keyField[i]]]);\r\n                if (i !== keyField.length - 1) {\r\n                    filter.push(\"and\")\r\n                }\r\n            }\r\n        }\r\n        return filter\r\n    },\r\n    addSelectedItem: function(key) {\r\n        var filter = this._getFilterByKey(key);\r\n        this._addSelectionFilter(false, filter)\r\n    },\r\n    removeSelectedItem: function(key) {\r\n        var filter = this._getFilterByKey(key);\r\n        this._addSelectionFilter(true, filter)\r\n    },\r\n    validate: function() {\r\n        var key = this.options.key;\r\n        if (key && void 0 === key()) {\r\n            throw _ui.default.Error(\"E1042\", \"Deferred selection\")\r\n        }\r\n    },\r\n    _findSubFilter: function(selectionFilter, filter) {\r\n        if (!selectionFilter) {\r\n            return -1\r\n        }\r\n        var filterString = JSON.stringify(filter);\r\n        for (var index = 0; index < selectionFilter.length; index++) {\r\n            var subFilter = selectionFilter[index];\r\n            if (subFilter && JSON.stringify(subFilter) === filterString) {\r\n                return index\r\n            }\r\n        }\r\n        return -1\r\n    },\r\n    _isLastSubFilter: function(selectionFilter, filter) {\r\n        if (selectionFilter && filter) {\r\n            return this._findSubFilter(selectionFilter, filter) === selectionFilter.length - 1 || 0 === this._findSubFilter([selectionFilter], filter)\r\n        }\r\n        return false\r\n    },\r\n    _addFilterOperator: function(selectionFilter, filterOperator) {\r\n        if (selectionFilter.length > 1 && (0, _type.isString)(selectionFilter[1]) && selectionFilter[1] !== filterOperator) {\r\n            selectionFilter = [selectionFilter]\r\n        }\r\n        if (selectionFilter.length) {\r\n            selectionFilter.push(filterOperator)\r\n        }\r\n        return selectionFilter\r\n    },\r\n    _denormalizeFilter: function(filter) {\r\n        if (filter && (0, _type.isString)(filter[0])) {\r\n            filter = [filter]\r\n        }\r\n        return filter\r\n    },\r\n    _addSelectionFilter: function(isDeselect, filter, isSelectAll) {\r\n        var that = this;\r\n        var currentFilter = isDeselect ? [\"!\", filter] : filter;\r\n        var currentOperation = isDeselect ? \"and\" : \"or\";\r\n        var needAddFilter = true;\r\n        var selectionFilter = that.options.selectionFilter || [];\r\n        selectionFilter = that._denormalizeFilter(selectionFilter);\r\n        if (selectionFilter && selectionFilter.length) {\r\n            that._removeSameFilter(selectionFilter, filter, isDeselect, isSelectAll);\r\n            var filterIndex = that._removeSameFilter(selectionFilter, filter, !isDeselect);\r\n            var isKeyOperatorsAfterRemoved = this._isKeyFilter(filter) && this._hasKeyFiltersOnlyStartingFromIndex(selectionFilter, filterIndex);\r\n            needAddFilter = filter.length && !isKeyOperatorsAfterRemoved;\r\n            if (needAddFilter) {\r\n                selectionFilter = that._addFilterOperator(selectionFilter, currentOperation)\r\n            }\r\n        }\r\n        if (needAddFilter) {\r\n            selectionFilter.push(currentFilter)\r\n        }\r\n        selectionFilter = that._normalizeFilter(selectionFilter);\r\n        that._setOption(\"selectionFilter\", !isDeselect && !selectionFilter.length ? null : selectionFilter)\r\n    },\r\n    _normalizeFilter: function(filter) {\r\n        if (filter && 1 === filter.length) {\r\n            filter = filter[0]\r\n        }\r\n        return filter\r\n    },\r\n    _removeFilterByIndex: function(filter, filterIndex, isSelectAll) {\r\n        var operation = filter[1];\r\n        if (filterIndex > 0) {\r\n            filter.splice(filterIndex - 1, 2)\r\n        } else {\r\n            filter.splice(filterIndex, 2)\r\n        }\r\n        if (isSelectAll && \"and\" === operation) {\r\n            filter.splice(0, filter.length)\r\n        }\r\n    },\r\n    _isSimpleKeyFilter: function(filter, key) {\r\n        return 3 === filter.length && filter[0] === key && \"=\" === filter[1]\r\n    },\r\n    _isKeyFilter: function(filter) {\r\n        if (2 === filter.length && \"!\" === filter[0]) {\r\n            return this._isKeyFilter(filter[1])\r\n        }\r\n        var keyField = this._getKeyExpr();\r\n        if (Array.isArray(keyField)) {\r\n            if (filter.length !== 2 * keyField.length - 1) {\r\n                return false\r\n            }\r\n            for (var i = 0; i < keyField.length; i++) {\r\n                if (i > 0 && \"and\" !== filter[2 * i - 1]) {\r\n                    return false\r\n                }\r\n                if (!this._isSimpleKeyFilter(filter[2 * i], keyField[i])) {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return this._isSimpleKeyFilter(filter, keyField)\r\n    },\r\n    _hasKeyFiltersOnlyStartingFromIndex: function(selectionFilter, filterIndex) {\r\n        if (filterIndex >= 0) {\r\n            for (var i = filterIndex; i < selectionFilter.length; i++) {\r\n                if (\"string\" !== typeof selectionFilter[i] && !this._isKeyFilter(selectionFilter[i])) {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _removeSameFilter: function(selectionFilter, filter, inverted, isSelectAll) {\r\n        filter = inverted ? [\"!\", filter] : filter;\r\n        if (JSON.stringify(filter) === JSON.stringify(selectionFilter)) {\r\n            selectionFilter.splice(0, selectionFilter.length);\r\n            return 0\r\n        }\r\n        var filterIndex = this._findSubFilter(selectionFilter, filter);\r\n        if (filterIndex >= 0) {\r\n            this._removeFilterByIndex(selectionFilter, filterIndex, isSelectAll);\r\n            return filterIndex\r\n        } else {\r\n            for (var i = 0; i < selectionFilter.length; i++) {\r\n                if (Array.isArray(selectionFilter[i]) && selectionFilter[i].length > 2) {\r\n                    var _filterIndex = this._removeSameFilter(selectionFilter[i], filter, false, isSelectAll);\r\n                    if (_filterIndex >= 0) {\r\n                        if (!selectionFilter[i].length) {\r\n                            this._removeFilterByIndex(selectionFilter, i, isSelectAll)\r\n                        } else {\r\n                            if (1 === selectionFilter[i].length) {\r\n                                selectionFilter[i] = selectionFilter[i][0]\r\n                            }\r\n                        }\r\n                        return _filterIndex\r\n                    }\r\n                }\r\n            }\r\n            return -1\r\n        }\r\n    },\r\n    getSelectAllState: function() {\r\n        var filter = this.options.filter();\r\n        var selectionFilter = this.options.selectionFilter;\r\n        if (!selectionFilter) {\r\n            return true\r\n        }\r\n        if (!selectionFilter.length) {\r\n            return false\r\n        }\r\n        if (!filter || !filter.length) {\r\n            return\r\n        }\r\n        selectionFilter = this._denormalizeFilter(selectionFilter);\r\n        if (this._isLastSubFilter(selectionFilter, filter)) {\r\n            return true\r\n        }\r\n        if (this._isLastSubFilter(selectionFilter, [\"!\", filter])) {\r\n            return false\r\n        }\r\n        return\r\n    }\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/selection/selection.strategy.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _class.default.inherit({\r\n    ctor: function(options) {\r\n        this.options = options;\r\n        this._setOption(\"disabledItemKeys\", []);\r\n        this._clearItemKeys()\r\n    },\r\n    _clearItemKeys: function() {\r\n        this._setOption(\"addedItemKeys\", []);\r\n        this._setOption(\"removedItemKeys\", []);\r\n        this._setOption(\"removedItems\", []);\r\n        this._setOption(\"addedItems\", [])\r\n    },\r\n    validate: _common.noop,\r\n    _setOption: function(name, value) {\r\n        this.options[name] = value\r\n    },\r\n    onSelectionChanged: function onSelectionChanged() {\r\n        var addedItemKeys = this.options.addedItemKeys;\r\n        var removedItemKeys = this.options.removedItemKeys;\r\n        var addedItems = this.options.addedItems;\r\n        var removedItems = this.options.removedItems;\r\n        var selectedItems = this.options.selectedItems;\r\n        var selectedItemKeys = this.options.selectedItemKeys;\r\n        var onSelectionChanged = this.options.onSelectionChanged || _common.noop;\r\n        this._clearItemKeys();\r\n        onSelectionChanged({\r\n            selectedItems: selectedItems,\r\n            selectedItemKeys: selectedItemKeys,\r\n            addedItemKeys: addedItemKeys,\r\n            removedItemKeys: removedItemKeys,\r\n            addedItems: addedItems,\r\n            removedItems: removedItems\r\n        })\r\n    },\r\n    equalKeys: function(key1, key2) {\r\n        if (this.options.equalByReference) {\r\n            if ((0, _type.isObject)(key1) && (0, _type.isObject)(key2)) {\r\n                return key1 === key2\r\n            }\r\n        }\r\n        return (0, _common.equalByValue)(key1, key2)\r\n    },\r\n    getSelectableItems: function(items) {\r\n        return items.filter(function(item) {\r\n            return !item.disabled\r\n        })\r\n    },\r\n    _clearSelection: function(keys, preserve, isDeselect, isSelectAll) {\r\n        keys = keys || [];\r\n        keys = Array.isArray(keys) ? keys : [keys];\r\n        this.validate();\r\n        return this.selectedItemKeys(keys, preserve, isDeselect, isSelectAll)\r\n    },\r\n    _removeTemplateProperty: function(remoteFilter) {\r\n        var _this = this;\r\n        if (Array.isArray(remoteFilter)) {\r\n            return remoteFilter.map(function(f) {\r\n                return _this._removeTemplateProperty(f)\r\n            })\r\n        }\r\n        if ((0, _type.isObject)(remoteFilter)) {\r\n            delete remoteFilter.template\r\n        }\r\n        return remoteFilter\r\n    },\r\n    _loadFilteredData: function(remoteFilter, localFilter, select, isSelectAll) {\r\n        var filterLength = encodeURI(JSON.stringify(this._removeTemplateProperty(remoteFilter))).length;\r\n        var needLoadAllData = this.options.maxFilterLengthInRequest && filterLength > this.options.maxFilterLengthInRequest;\r\n        var deferred = new _deferred.Deferred;\r\n        var loadOptions = {\r\n            filter: needLoadAllData ? void 0 : remoteFilter,\r\n            select: needLoadAllData ? this.options.dataFields() : select || this.options.dataFields()\r\n        };\r\n        if (remoteFilter && 0 === remoteFilter.length) {\r\n            deferred.resolve([])\r\n        } else {\r\n            this.options.load(loadOptions).done(function(items) {\r\n                var filteredItems = (0, _type.isPlainObject)(items) ? items.data : items;\r\n                if (localFilter && !isSelectAll) {\r\n                    filteredItems = filteredItems.filter(localFilter)\r\n                } else {\r\n                    if (needLoadAllData) {\r\n                        filteredItems = (0, _query.default)(filteredItems).filter(remoteFilter).toArray()\r\n                    }\r\n                }\r\n                deferred.resolve(filteredItems)\r\n            }).fail(deferred.reject.bind(deferred))\r\n        }\r\n        return deferred\r\n    },\r\n    updateSelectedItemKeyHash: function(keys) {\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var keyHash = (0, _common.getKeyHash)(keys[i]);\r\n            if (!(0, _type.isObject)(keyHash)) {\r\n                this.options.keyHashIndices[keyHash] = this.options.keyHashIndices[keyHash] || [];\r\n                var keyIndices = this.options.keyHashIndices[keyHash];\r\n                keyIndices.push(i)\r\n            }\r\n        }\r\n    },\r\n    _isAnyItemSelected: function(items) {\r\n        for (var i = 0; i < items.length; i++) {\r\n            if (this.options.isItemSelected(items[i])) {\r\n                return\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _getFullSelectAllState: function() {\r\n        var items = this.options.plainItems();\r\n        var dataFilter = this.options.filter();\r\n        var selectedItems = this.options.selectedItems;\r\n        if (dataFilter) {\r\n            selectedItems = (0, _query.default)(selectedItems).filter(dataFilter).toArray()\r\n        }\r\n        var selectedItemsLength = selectedItems.length;\r\n        if (!selectedItemsLength) {\r\n            return this._isAnyItemSelected(items)\r\n        }\r\n        if (selectedItemsLength >= this.options.totalCount() - this.options.disabledItemKeys.length) {\r\n            return true\r\n        }\r\n        return\r\n    },\r\n    _getVisibleSelectAllState: function() {\r\n        var items = this.getSelectableItems(this.options.plainItems());\r\n        var hasSelectedItems = false;\r\n        var hasUnselectedItems = false;\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var itemData = this.options.getItemData(item);\r\n            var key = this.options.keyOf(itemData);\r\n            if (this.options.isSelectableItem(item)) {\r\n                if (this.isItemKeySelected(key)) {\r\n                    hasSelectedItems = true\r\n                } else {\r\n                    hasUnselectedItems = true\r\n                }\r\n            }\r\n        }\r\n        if (hasSelectedItems) {\r\n            return !hasUnselectedItems ? true : void 0\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/selection/selection.strategy.standard.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _array_compare = require(\"../../core/utils/array_compare\");\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _selection_filter = require(\"../../core/utils/selection_filter\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _selection = _interopRequireDefault(require(\"./selection.strategy\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _selection.default.inherit({\r\n    ctor: function(options) {\r\n        this.callBase(options);\r\n        this._initSelectedItemKeyHash()\r\n    },\r\n    _initSelectedItemKeyHash: function() {\r\n        this._setOption(\"keyHashIndices\", this.options.equalByReference ? null : {})\r\n    },\r\n    getSelectedItemKeys: function() {\r\n        return this.options.selectedItemKeys.slice(0)\r\n    },\r\n    getSelectedItems: function() {\r\n        return this.options.selectedItems.slice(0)\r\n    },\r\n    _preserveSelectionUpdate: function(items, isDeselect) {\r\n        var keyOf = this.options.keyOf;\r\n        var keyIndicesToRemoveMap;\r\n        var keyIndex;\r\n        var i;\r\n        if (!keyOf) {\r\n            return\r\n        }\r\n        var isBatchDeselect = isDeselect && items.length > 1 && !this.options.equalByReference;\r\n        if (isBatchDeselect) {\r\n            keyIndicesToRemoveMap = {}\r\n        }\r\n        for (i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var key = keyOf(item);\r\n            if (isDeselect) {\r\n                keyIndex = this.removeSelectedItem(key, keyIndicesToRemoveMap);\r\n                if (keyIndicesToRemoveMap && keyIndex >= 0) {\r\n                    keyIndicesToRemoveMap[keyIndex] = true\r\n                }\r\n            } else {\r\n                this.addSelectedItem(key, item)\r\n            }\r\n        }\r\n        if (isBatchDeselect) {\r\n            this._batchRemoveSelectedItems(keyIndicesToRemoveMap)\r\n        }\r\n    },\r\n    _batchRemoveSelectedItems: function(keyIndicesToRemoveMap) {\r\n        var selectedItemKeys = this.options.selectedItemKeys.slice(0);\r\n        var selectedItems = this.options.selectedItems.slice(0);\r\n        this.options.selectedItemKeys.length = 0;\r\n        this.options.selectedItems.length = 0;\r\n        for (var i = 0; i < selectedItemKeys.length; i++) {\r\n            if (!keyIndicesToRemoveMap[i]) {\r\n                this.options.selectedItemKeys.push(selectedItemKeys[i]);\r\n                this.options.selectedItems.push(selectedItems[i])\r\n            }\r\n        }\r\n        this._initSelectedItemKeyHash();\r\n        this.updateSelectedItemKeyHash(this.options.selectedItemKeys)\r\n    },\r\n    _loadSelectedItemsCore: function(keys, isDeselect, isSelectAll) {\r\n        var deferred = new _deferred.Deferred;\r\n        var key = this.options.key();\r\n        if (!keys.length && !isSelectAll) {\r\n            deferred.resolve([]);\r\n            return deferred\r\n        }\r\n        var filter = this.options.filter();\r\n        if (isSelectAll && isDeselect && !filter) {\r\n            deferred.resolve(this.getSelectedItems());\r\n            return deferred\r\n        }\r\n        var selectionFilterCreator = new _selection_filter.SelectionFilterCreator(keys, isSelectAll);\r\n        var combinedFilter = selectionFilterCreator.getCombinedFilter(key, filter);\r\n        var deselectedItems = [];\r\n        if (isDeselect) {\r\n            var selectedItems = this.options.selectedItems;\r\n            deselectedItems = combinedFilter && keys.length !== selectedItems.length ? (0, _query.default)(selectedItems).filter(combinedFilter).toArray() : selectedItems.slice(0)\r\n        }\r\n        var filteredItems = deselectedItems.length ? deselectedItems : this.options.plainItems(true).filter(this.options.isSelectableItem).map(this.options.getItemData);\r\n        var localFilter = selectionFilterCreator.getLocalFilter(this.options.keyOf, this.equalKeys.bind(this), this.options.equalByReference, key);\r\n        filteredItems = filteredItems.filter(localFilter);\r\n        if (deselectedItems.length || !isSelectAll && filteredItems.length === keys.length) {\r\n            deferred.resolve(filteredItems)\r\n        } else {\r\n            deferred = this._loadFilteredData(combinedFilter, localFilter, null, isSelectAll)\r\n        }\r\n        return deferred\r\n    },\r\n    _replaceSelectionUpdate: function(items) {\r\n        var internalKeys = [];\r\n        var keyOf = this.options.keyOf;\r\n        if (!keyOf) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var key = keyOf(item);\r\n            internalKeys.push(key)\r\n        }\r\n        this.setSelectedItems(internalKeys, items)\r\n    },\r\n    _warnOnIncorrectKeys: function(keys) {\r\n        var allowNullValue = this.options.allowNullValue;\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var key = keys[i];\r\n            if ((!allowNullValue || null !== key) && !this.isItemKeySelected(key)) {\r\n                _ui.default.log(\"W1002\", key)\r\n            }\r\n        }\r\n    },\r\n    _isMultiSelectEnabled: function() {\r\n        var mode = this.options.mode;\r\n        return \"all\" === mode || \"multiple\" === mode\r\n    },\r\n    _requestInProgress: function() {\r\n        var _this$_lastLoadDeferr;\r\n        return \"pending\" === (null === (_this$_lastLoadDeferr = this._lastLoadDeferred) || void 0 === _this$_lastLoadDeferr ? void 0 : _this$_lastLoadDeferr.state())\r\n    },\r\n    _concatRequestsItems: function(keys, isDeselect, oldRequestItems, updatedKeys) {\r\n        var selectedItems;\r\n        var deselectedItems = isDeselect ? keys : [];\r\n        if (updatedKeys) {\r\n            selectedItems = updatedKeys\r\n        } else {\r\n            selectedItems = (0, _array.removeDuplicates)(keys, this.options.selectedItemKeys)\r\n        }\r\n        return {\r\n            addedItems: oldRequestItems.added.concat(selectedItems),\r\n            removedItems: oldRequestItems.removed.concat(deselectedItems),\r\n            keys: keys\r\n        }\r\n    },\r\n    _collectLastRequestData: function(keys, isDeselect, isSelectAll, updatedKeys) {\r\n        var isDeselectAll = isDeselect && isSelectAll;\r\n        var oldRequestItems = {\r\n            added: [],\r\n            removed: []\r\n        };\r\n        var multiSelectEnabled = this._isMultiSelectEnabled();\r\n        var lastRequestData = multiSelectEnabled ? this._lastRequestData : {};\r\n        if (multiSelectEnabled) {\r\n            if (this._shouldMergeWithLastRequest) {\r\n                if (isDeselectAll) {\r\n                    this._lastLoadDeferred.reject();\r\n                    lastRequestData = {}\r\n                } else {\r\n                    if (!(0, _array_compare.isKeysEqual)(keys, this.options.selectedItemKeys)) {\r\n                        oldRequestItems.added = lastRequestData.addedItems;\r\n                        oldRequestItems.removed = lastRequestData.removedItems;\r\n                        if (!isDeselect) {\r\n                            this._lastLoadDeferred.reject()\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lastRequestData = this._concatRequestsItems(keys, isDeselect, oldRequestItems, this._shouldMergeWithLastRequest ? void 0 : updatedKeys)\r\n        }\r\n        return lastRequestData\r\n    },\r\n    _updateKeysByLastRequestData: function(keys, isDeselect, isSelectAll) {\r\n        var currentKeys = keys;\r\n        if (this._isMultiSelectEnabled() && this._shouldMergeWithLastRequest && !isDeselect && !isSelectAll) {\r\n            var _this$_lastRequestDat, _this$_lastRequestDat2;\r\n            currentKeys = (0, _array.removeDuplicates)(keys.concat(null === (_this$_lastRequestDat = this._lastRequestData) || void 0 === _this$_lastRequestDat ? void 0 : _this$_lastRequestDat.addedItems), null === (_this$_lastRequestDat2 = this._lastRequestData) || void 0 === _this$_lastRequestDat2 ? void 0 : _this$_lastRequestDat2.removedItems);\r\n            currentKeys = (0, _array.uniqueValues)(currentKeys)\r\n        }\r\n        return currentKeys\r\n    },\r\n    _loadSelectedItems: function(keys, isDeselect, isSelectAll, updatedKeys) {\r\n        var that = this;\r\n        var deferred = new _deferred.Deferred;\r\n        this._shouldMergeWithLastRequest = this._requestInProgress();\r\n        this._lastRequestData = this._collectLastRequestData(keys, isDeselect, isSelectAll, updatedKeys);\r\n        (0, _deferred.when)(that._lastLoadDeferred).always(function() {\r\n            var currentKeys = that._updateKeysByLastRequestData(keys, isDeselect, isSelectAll);\r\n            that._shouldMergeWithLastRequest = false;\r\n            that._loadSelectedItemsCore(currentKeys, isDeselect, isSelectAll).done(deferred.resolve).fail(deferred.reject)\r\n        });\r\n        that._lastLoadDeferred = deferred;\r\n        return deferred\r\n    },\r\n    selectedItemKeys: function(keys, preserve, isDeselect, isSelectAll, updatedKeys) {\r\n        var that = this;\r\n        var deferred = that._loadSelectedItems(keys, isDeselect, isSelectAll, updatedKeys);\r\n        deferred.done(function(items) {\r\n            if (preserve) {\r\n                that._preserveSelectionUpdate(items, isDeselect)\r\n            } else {\r\n                that._replaceSelectionUpdate(items)\r\n            }\r\n            that.onSelectionChanged()\r\n        });\r\n        return deferred\r\n    },\r\n    addSelectedItem: function(key, itemData) {\r\n        if ((0, _type.isDefined)(itemData) && !this.options.ignoreDisabledItems && itemData.disabled) {\r\n            if (this.options.disabledItemKeys.indexOf(key) === -1) {\r\n                this.options.disabledItemKeys.push(key)\r\n            }\r\n            return\r\n        }\r\n        var keyHash = this._getKeyHash(key);\r\n        if (this._indexOfSelectedItemKey(keyHash) === -1) {\r\n            if (!(0, _type.isObject)(keyHash) && this.options.keyHashIndices) {\r\n                this.options.keyHashIndices[keyHash] = [this.options.selectedItemKeys.length]\r\n            }\r\n            this.options.selectedItemKeys.push(key);\r\n            this.options.addedItemKeys.push(key);\r\n            this.options.addedItems.push(itemData);\r\n            this.options.selectedItems.push(itemData)\r\n        }\r\n    },\r\n    _getSelectedIndexByKey: function(key, ignoreIndicesMap) {\r\n        var selectedItemKeys = this.options.selectedItemKeys;\r\n        for (var index = 0; index < selectedItemKeys.length; index++) {\r\n            if ((!ignoreIndicesMap || !ignoreIndicesMap[index]) && this.equalKeys(selectedItemKeys[index], key)) {\r\n                return index\r\n            }\r\n        }\r\n        return -1\r\n    },\r\n    _getSelectedIndexByHash: function(key, ignoreIndicesMap) {\r\n        var indices = this.options.keyHashIndices[key];\r\n        if (indices && indices.length > 1 && ignoreIndicesMap) {\r\n            indices = indices.filter(function(index) {\r\n                return !ignoreIndicesMap[index]\r\n            })\r\n        }\r\n        return indices && indices[0] >= 0 ? indices[0] : -1\r\n    },\r\n    _indexOfSelectedItemKey: function(key, ignoreIndicesMap) {\r\n        var selectedIndex;\r\n        if (this.options.equalByReference) {\r\n            selectedIndex = this.options.selectedItemKeys.indexOf(key)\r\n        } else {\r\n            if ((0, _type.isObject)(key)) {\r\n                selectedIndex = this._getSelectedIndexByKey(key, ignoreIndicesMap)\r\n            } else {\r\n                selectedIndex = this._getSelectedIndexByHash(key, ignoreIndicesMap)\r\n            }\r\n        }\r\n        return selectedIndex\r\n    },\r\n    _shiftSelectedKeyIndices: function(keyIndex) {\r\n        for (var currentKeyIndex = keyIndex; currentKeyIndex < this.options.selectedItemKeys.length; currentKeyIndex++) {\r\n            var currentKey = this.options.selectedItemKeys[currentKeyIndex];\r\n            var currentKeyHash = (0, _common.getKeyHash)(currentKey);\r\n            var currentKeyIndices = this.options.keyHashIndices[currentKeyHash];\r\n            if (!currentKeyIndices) {\r\n                continue\r\n            }\r\n            for (var i = 0; i < currentKeyIndices.length; i++) {\r\n                if (currentKeyIndices[i] > keyIndex) {\r\n                    currentKeyIndices[i]--\r\n                }\r\n            }\r\n        }\r\n    },\r\n    removeSelectedItem: function(key, keyIndicesToRemoveMap) {\r\n        var keyHash = this._getKeyHash(key);\r\n        var isBatchDeselect = !!keyIndicesToRemoveMap;\r\n        var keyIndex = this._indexOfSelectedItemKey(keyHash, keyIndicesToRemoveMap);\r\n        if (keyIndex < 0) {\r\n            return keyIndex\r\n        }\r\n        this.options.removedItemKeys.push(key);\r\n        this.options.removedItems.push(this.options.selectedItems[keyIndex]);\r\n        if (isBatchDeselect) {\r\n            return keyIndex\r\n        }\r\n        this.options.selectedItemKeys.splice(keyIndex, 1);\r\n        this.options.selectedItems.splice(keyIndex, 1);\r\n        if ((0, _type.isObject)(keyHash) || !this.options.keyHashIndices) {\r\n            return keyIndex\r\n        }\r\n        var keyIndices = this.options.keyHashIndices[keyHash];\r\n        if (!keyIndices) {\r\n            return keyIndex\r\n        }\r\n        keyIndices.shift();\r\n        if (!keyIndices.length) {\r\n            delete this.options.keyHashIndices[keyHash]\r\n        }\r\n        this._shiftSelectedKeyIndices(keyIndex);\r\n        return keyIndex\r\n    },\r\n    _updateAddedItemKeys: function(keys, items) {\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (!this.isItemKeySelected(keys[i])) {\r\n                this.options.addedItemKeys.push(keys[i]);\r\n                this.options.addedItems.push(items[i])\r\n            }\r\n        }\r\n    },\r\n    _updateRemovedItemKeys: function(keys, oldSelectedKeys, oldSelectedItems) {\r\n        for (var i = 0; i < oldSelectedKeys.length; i++) {\r\n            if (!this.isItemKeySelected(oldSelectedKeys[i])) {\r\n                this.options.removedItemKeys.push(oldSelectedKeys[i]);\r\n                this.options.removedItems.push(oldSelectedItems[i])\r\n            }\r\n        }\r\n    },\r\n    _isItemSelectionInProgress: function(key, checkPending) {\r\n        var shouldCheckPending = checkPending && this._lastRequestData && this._requestInProgress();\r\n        if (shouldCheckPending) {\r\n            var _this$_lastRequestDat3;\r\n            var addedItems = null !== (_this$_lastRequestDat3 = this._lastRequestData.addedItems) && void 0 !== _this$_lastRequestDat3 ? _this$_lastRequestDat3 : [];\r\n            return addedItems.indexOf(key) > -1\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    _getKeyHash: function(key) {\r\n        return this.options.equalByReference ? key : (0, _common.getKeyHash)(key)\r\n    },\r\n    setSelectedItems: function(keys, items) {\r\n        this._updateAddedItemKeys(keys, items);\r\n        var oldSelectedKeys = this.options.selectedItemKeys;\r\n        var oldSelectedItems = this.options.selectedItems;\r\n        if (!this.options.equalByReference) {\r\n            this._initSelectedItemKeyHash();\r\n            this.updateSelectedItemKeyHash(keys)\r\n        }\r\n        this._setOption(\"selectedItemKeys\", keys);\r\n        this._setOption(\"selectedItems\", items);\r\n        this._updateRemovedItemKeys(keys, oldSelectedKeys, oldSelectedItems)\r\n    },\r\n    isItemDataSelected: function(itemData) {\r\n        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n        var key = this.options.keyOf(itemData);\r\n        return this.isItemKeySelected(key, options)\r\n    },\r\n    isItemKeySelected: function(key) {\r\n        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n        var result = this._isItemSelectionInProgress(key, options.checkPending);\r\n        if (!result) {\r\n            var keyHash = this._getKeyHash(key);\r\n            var index = this._indexOfSelectedItemKey(keyHash);\r\n            result = index !== -1\r\n        }\r\n        return result\r\n    },\r\n    getSelectAllState: function(visibleOnly) {\r\n        if (visibleOnly) {\r\n            return this._getVisibleSelectAllState()\r\n        } else {\r\n            return this._getFullSelectAllState()\r\n        }\r\n    }\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/shared/accessibility.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.hiddenFocus = hiddenFocus;\r\nexports.registerKeyboardAction = registerKeyboardAction;\r\nexports.restoreFocus = restoreFocus;\r\nexports.selectView = selectView;\r\nexports.setTabIndex = setTabIndex;\r\nexports.subscribeVisibilityChange = subscribeVisibilityChange;\r\nexports.unsubscribeVisibilityChange = unsubscribeVisibilityChange;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _common = require(\"../../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row-focused\";\r\nvar GRID_ROW_SELECTOR = \".dx-datagrid-rowsview .dx-row\";\r\nvar GRID_CELL_SELECTOR = \"\".concat(GRID_ROW_SELECTOR, \" > td\");\r\nvar TREELIST_ROW_SELECTOR = \".dx-treelist-rowsview .dx-row\";\r\nvar TREELIST_CELL_SELECTOR = \"\".concat(TREELIST_ROW_SELECTOR, \" > td\");\r\nvar viewItemSelectorMap = {\r\n    groupPanel: [\".dx-datagrid-group-panel .dx-group-panel-item[tabindex]\"],\r\n    columnHeaders: [\".dx-datagrid-headers .dx-header-row > td.dx-datagrid-action\", \".dx-treelist-headers .dx-header-row > td.dx-treelist-action\"],\r\n    filterRow: [\".dx-datagrid-headers .dx-datagrid-filter-row .dx-editor-cell .dx-texteditor-input\", \".dx-treelist-headers .dx-treelist-filter-row .dx-editor-cell .dx-texteditor-input\"],\r\n    rowsView: [\"\".concat(FOCUSED_ROW_SELECTOR), \"\".concat(GRID_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR), \"\".concat(TREELIST_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR)],\r\n    footer: [\".dx-datagrid-total-footer .dx-datagrid-summary-item\", \".dx-treelist-total-footer .dx-treelist-summary-item\"],\r\n    filterPanel: [\".dx-datagrid-filter-panel .dx-icon-filter\", \".dx-treelist-filter-panel .dx-icon-filter\"],\r\n    pager: [\".dx-datagrid-pager [tabindex]\", \".dx-treelist-pager [tabindex]\"]\r\n};\r\nvar isMouseDown = false;\r\nvar isHiddenFocusing = false;\r\nvar focusedElementInfo = null;\r\n\r\nfunction processKeyDown(viewName, instance, event, action, $mainElement, executeKeyDown) {\r\n    var isHandled = fireKeyDownEvent(instance, event.originalEvent, executeKeyDown);\r\n    if (isHandled) {\r\n        return\r\n    }\r\n    var keyName = (0, _index.normalizeKeyName)(event);\r\n    if (\"enter\" === keyName || \"space\" === keyName) {\r\n        saveFocusedElementInfo(event.target, instance);\r\n        action && action({\r\n            event: event\r\n        })\r\n    } else {\r\n        if (\"tab\" === keyName) {\r\n            $mainElement.addClass(FOCUS_STATE_CLASS)\r\n        } else {\r\n            selectView(viewName, instance, event)\r\n        }\r\n    }\r\n}\r\n\r\nfunction saveFocusedElementInfo(target, instance) {\r\n    var $target = (0, _renderer.default)(target);\r\n    var ariaLabel = $target.attr(\"aria-label\");\r\n    var $activeElements = getActiveAccessibleElements(ariaLabel, instance.element());\r\n    var targetIndex = $activeElements.index($target);\r\n    focusedElementInfo = (0, _extend.extend)({}, {\r\n        ariaLabel: ariaLabel,\r\n        index: targetIndex\r\n    }, {\r\n        viewInstance: instance\r\n    })\r\n}\r\n\r\nfunction getActiveAccessibleElements(ariaLabel, viewElement) {\r\n    var $viewElement = (0, _renderer.default)(viewElement);\r\n    var $activeElements;\r\n    if (ariaLabel) {\r\n        $activeElements = $viewElement.find('[aria-label=\"'.concat(ariaLabel, '\"][tabindex]'))\r\n    } else {\r\n        $activeElements = $viewElement.find(\"[tabindex]\")\r\n    }\r\n    return $activeElements\r\n}\r\n\r\nfunction findFocusedViewElement(viewSelectors) {\r\n    for (var index in viewSelectors) {\r\n        var selector = viewSelectors[index];\r\n        var $focusViewElement = (0, _renderer.default)(selector).first();\r\n        if ($focusViewElement.length) {\r\n            return $focusViewElement\r\n        }\r\n    }\r\n}\r\n\r\nfunction fireKeyDownEvent(instance, event, executeAction) {\r\n    var args = {\r\n        event: event,\r\n        handled: false\r\n    };\r\n    if (executeAction) {\r\n        executeAction(args)\r\n    } else {\r\n        instance._createActionByOption(\"onKeyDown\")(args)\r\n    }\r\n    return args.handled\r\n}\r\n\r\nfunction onDocumentVisibilityChange() {\r\n    isHiddenFocusing = \"visible\" === _dom_adapter.default.getDocument().visibilityState\r\n}\r\n\r\nfunction subscribeVisibilityChange() {\r\n    _events_engine.default.on(_dom_adapter.default.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\n\r\nfunction unsubscribeVisibilityChange() {\r\n    _events_engine.default.off(_dom_adapter.default.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\n\r\nfunction hiddenFocus(element) {\r\n    isHiddenFocusing = true;\r\n    element.focus();\r\n    isHiddenFocusing = false\r\n}\r\n\r\nfunction registerKeyboardAction(viewName, instance, $element, selector, action, executeKeyDown) {\r\n    if (instance.option(\"useLegacyKeyboardNavigation\")) {\r\n        return _common.noop\r\n    }\r\n    var $mainElement = (0, _renderer.default)(instance.element());\r\n    var keyDownHandler = function(e) {\r\n        return processKeyDown(viewName, instance, e, action, $mainElement, executeKeyDown)\r\n    };\r\n    var mouseDownHandler = function() {\r\n        isMouseDown = true;\r\n        $mainElement.removeClass(FOCUS_STATE_CLASS)\r\n    };\r\n    var focusinHandler = function() {\r\n        var needShowOverlay = !isMouseDown && !isHiddenFocusing;\r\n        if (needShowOverlay) {\r\n            $mainElement.addClass(FOCUS_STATE_CLASS)\r\n        }\r\n        isMouseDown = false\r\n    };\r\n    _events_engine.default.on($element, \"keydown\", selector, keyDownHandler);\r\n    _events_engine.default.on($element, \"mousedown\", selector, mouseDownHandler);\r\n    _events_engine.default.on($element, \"focusin\", selector, focusinHandler);\r\n    return function() {\r\n        _events_engine.default.off($element, \"keydown\", selector, keyDownHandler);\r\n        _events_engine.default.off($element, \"mousedown\", selector, mouseDownHandler);\r\n        _events_engine.default.off($element, \"focusin\", selector, focusinHandler)\r\n    }\r\n}\r\n\r\nfunction restoreFocus(instance) {\r\n    if (!instance.option(\"useLegacyKeyboardNavigation\") && focusedElementInfo) {\r\n        var viewInstance = focusedElementInfo.viewInstance;\r\n        if (viewInstance) {\r\n            var $activeElements = getActiveAccessibleElements(focusedElementInfo.ariaLabel, viewInstance.element());\r\n            var $targetElement = $activeElements.eq(focusedElementInfo.index);\r\n            focusedElementInfo = null;\r\n            _events_engine.default.trigger($targetElement, \"focus\")\r\n        }\r\n    }\r\n}\r\n\r\nfunction selectView(viewName, instance, event) {\r\n    var keyName = (0, _index.normalizeKeyName)(event);\r\n    if (event.ctrlKey && (\"upArrow\" === keyName || \"downArrow\" === keyName)) {\r\n        var viewNames = Object.keys(viewItemSelectorMap);\r\n        var viewItemIndex = viewNames.indexOf(viewName);\r\n        while (viewItemIndex >= 0 && viewItemIndex < viewNames.length) {\r\n            viewItemIndex = \"upArrow\" === keyName ? --viewItemIndex : ++viewItemIndex;\r\n            var _viewName = viewNames[viewItemIndex];\r\n            var viewSelectors = viewItemSelectorMap[_viewName];\r\n            var $focusViewElement = findFocusedViewElement(viewSelectors);\r\n            if ($focusViewElement && $focusViewElement.length) {\r\n                $focusViewElement.attr(\"tabindex\", instance.option(\"tabindex\") || 0);\r\n                _events_engine.default.trigger($focusViewElement, \"focus\");\r\n                $focusViewElement.removeClass(FOCUS_DISABLED_CLASS);\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction setTabIndex(instance, $element) {\r\n    if (!instance.option(\"useLegacyKeyboardnavigation\")) {\r\n        $element.attr(\"tabindex\", instance.option(\"tabindex\") || 0)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (ui/shared/filtering.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\r\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\r\nvar isDateType = function(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n};\r\nvar getGroupInterval = function(column) {\r\n    var index;\r\n    var result = [];\r\n    var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\r\n    var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\r\n    var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\r\n    if (isDateType(column.dataType) && null !== groupInterval) {\r\n        result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\r\n        index = (0, _array.inArray)(interval, dateIntervals);\r\n        if (index >= 0) {\r\n            result = dateIntervals.slice(0, index);\r\n            result.push(groupInterval);\r\n            return result\r\n        }\r\n        return result\r\n    } else {\r\n        if ((0, _type.isDefined)(groupInterval)) {\r\n            return Array.isArray(groupInterval) ? groupInterval : [groupInterval]\r\n        }\r\n    }\r\n};\r\nvar _default = function() {\r\n    var getFilterSelector = function(column, target) {\r\n        var selector = column.dataField || column.selector;\r\n        if (\"search\" === target) {\r\n            selector = column.displayField || column.calculateDisplayValue || selector\r\n        }\r\n        return selector\r\n    };\r\n    var isZeroTime = function(date) {\r\n        return date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1\r\n    };\r\n    var getDateValues = function(dateValue) {\r\n        if ((0, _type.isDate)(dateValue)) {\r\n            return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()]\r\n        }\r\n        return (0, _iterator.map)((\"\" + dateValue).split(\"/\"), function(value, index) {\r\n            return 1 === index ? Number(value) - 1 : Number(value)\r\n        })\r\n    };\r\n    var getFilterExpressionByRange = function(filterValue, target) {\r\n        var column = this;\r\n        var endFilterValue;\r\n        var startFilterExpression;\r\n        var endFilterExpression;\r\n        var selector = getFilterSelector(column, target);\r\n        if (Array.isArray(filterValue) && (0, _type.isDefined)(filterValue[0]) && (0, _type.isDefined)(filterValue[1])) {\r\n            startFilterExpression = [selector, \">=\", filterValue[0]];\r\n            endFilterExpression = [selector, \"<=\", filterValue[1]];\r\n            if (isDateType(column.dataType) && isZeroTime(filterValue[1])) {\r\n                endFilterValue = new Date(filterValue[1].getTime());\r\n                if (\"date\" === column.dataType) {\r\n                    endFilterValue.setDate(filterValue[1].getDate() + 1)\r\n                }\r\n                endFilterExpression = [selector, \"<\", endFilterValue]\r\n            }\r\n            return [startFilterExpression, \"and\", endFilterExpression]\r\n        }\r\n    };\r\n    var getFilterExpressionForDate = function(filterValue, selectedFilterOperation, target) {\r\n        var column = this;\r\n        var dateStart;\r\n        var dateEnd;\r\n        var dateInterval;\r\n        var values = getDateValues(filterValue);\r\n        var selector = getFilterSelector(column, target);\r\n        if (\"headerFilter\" === target) {\r\n            dateInterval = getGroupInterval(column)[values.length - 1]\r\n        } else {\r\n            if (\"datetime\" === column.dataType) {\r\n                dateInterval = \"minute\"\r\n            }\r\n        }\r\n        switch (dateInterval) {\r\n            case \"year\":\r\n                dateStart = new Date(values[0], 0, 1);\r\n                dateEnd = new Date(values[0] + 1, 0, 1);\r\n                break;\r\n            case \"month\":\r\n                dateStart = new Date(values[0], values[1], 1);\r\n                dateEnd = new Date(values[0], values[1] + 1, 1);\r\n                break;\r\n            case \"quarter\":\r\n                dateStart = new Date(values[0], 3 * values[1], 1);\r\n                dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\r\n                break;\r\n            case \"hour\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\r\n                break;\r\n            case \"minute\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\r\n                break;\r\n            case \"second\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\r\n                break;\r\n            default:\r\n                dateStart = new Date(values[0], values[1], values[2]);\r\n                dateEnd = new Date(values[0], values[1], values[2] + 1)\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"<\":\r\n                return [selector, \"<\", dateStart];\r\n            case \"<=\":\r\n                return [selector, \"<\", dateEnd];\r\n            case \">\":\r\n                return [selector, \">=\", dateEnd];\r\n            case \">=\":\r\n                return [selector, \">=\", dateStart];\r\n            case \"<>\":\r\n                return [\r\n                    [selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]\r\n                ];\r\n            default:\r\n                return [\r\n                    [selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]\r\n                ]\r\n        }\r\n    };\r\n    var getFilterExpressionForNumber = function(filterValue, selectedFilterOperation, target) {\r\n        var column = this;\r\n        var selector = getFilterSelector(column, target);\r\n        var groupInterval = getGroupInterval(column);\r\n        if (\"headerFilter\" === target && groupInterval && (0, _type.isDefined)(filterValue)) {\r\n            var values = (\"\" + filterValue).split(\"/\");\r\n            var value = Number(values[values.length - 1]);\r\n            var interval = groupInterval[values.length - 1];\r\n            var startFilterValue = [selector, \">=\", value];\r\n            var endFilterValue = [selector, \"<\", value + interval];\r\n            var condition = [startFilterValue, \"and\", endFilterValue];\r\n            return condition\r\n        }\r\n        return [selector, selectedFilterOperation || \"=\", filterValue]\r\n    };\r\n    return {\r\n        defaultCalculateFilterExpression: function(filterValue, selectedFilterOperation, target) {\r\n            var column = this;\r\n            var selector = getFilterSelector(column, target);\r\n            var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\r\n            var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\r\n            var filter = null;\r\n            if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\r\n                filter = [selector, selectedFilterOperation || \"=\", null];\r\n                if (\"string\" === dataType) {\r\n                    filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]]\r\n                }\r\n            } else {\r\n                if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\r\n                    filter = [selector, selectedFilterOperation || \"contains\", filterValue]\r\n                } else {\r\n                    if (\"between\" === selectedFilterOperation) {\r\n                        return getFilterExpressionByRange.apply(column, [filterValue, target])\r\n                    } else {\r\n                        if (isDateType(dataType) && (0, _type.isDefined)(filterValue)) {\r\n                            return getFilterExpressionForDate.apply(column, arguments)\r\n                        } else {\r\n                            if (\"number\" === dataType) {\r\n                                return getFilterExpressionForNumber.apply(column, arguments)\r\n                            } else {\r\n                                if (\"object\" !== dataType) {\r\n                                    filter = [selector, selectedFilterOperation || \"=\", filterValue]\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return filter\r\n        },\r\n        getGroupInterval: getGroupInterval\r\n    }\r\n}();\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/shared/grouped_data_converter_mixin.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar isCorrectStructure = function(data) {\r\n    return Array.isArray(data) && data.every(function(item) {\r\n        var hasTwoFields = 2 === Object.keys(item).length;\r\n        var hasCorrectFields = \"key\" in item && \"items\" in item;\r\n        return hasTwoFields && hasCorrectFields && Array.isArray(item.items)\r\n    })\r\n};\r\nvar _default = {\r\n    _getSpecificDataSourceOption: function() {\r\n        var groupKey = \"key\";\r\n        var dataSource = this.option(\"dataSource\");\r\n        var hasSimpleItems = false;\r\n        var data = {};\r\n        if (this._getGroupedOption() && isCorrectStructure(dataSource)) {\r\n            data = dataSource.reduce(function(accumulator, item) {\r\n                var items = item.items.map(function(innerItem) {\r\n                    if (!(0, _type.isObject)(innerItem)) {\r\n                        innerItem = {\r\n                            text: innerItem\r\n                        };\r\n                        hasSimpleItems = true\r\n                    }\r\n                    if (!(groupKey in innerItem)) {\r\n                        innerItem[groupKey] = item.key\r\n                    }\r\n                    return innerItem\r\n                });\r\n                return accumulator.concat(items)\r\n            }, []);\r\n            dataSource = {\r\n                store: {\r\n                    type: \"array\",\r\n                    data: data\r\n                },\r\n                group: {\r\n                    selector: \"key\",\r\n                    keepInitialKeyOrder: true\r\n                }\r\n            };\r\n            if (hasSimpleItems) {\r\n                dataSource.searchExpr = \"text\"\r\n            }\r\n        }\r\n        return dataSource\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/shared/ui.editor_factory_mixin.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _variable_wrapper = _interopRequireDefault(require(\"../../core/utils/variable_wrapper\"));\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _element = require(\"../../core/element\");\r\nvar _utils = require(\"../../data/data_source/utils\");\r\nvar _index = require(\"../../events/utils/index\");\r\nrequire(\"../text_box\");\r\nrequire(\"../number_box\");\r\nrequire(\"../check_box\");\r\nrequire(\"../select_box\");\r\nrequire(\"../date_box\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar isWrapped = _variable_wrapper.default.isWrapped;\r\nvar CHECKBOX_SIZE_CLASS = \"checkbox-size\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar EditorFactoryMixin = function() {\r\n    var getResultConfig = function(config, options) {\r\n        return (0, _extend.extend)(config, {\r\n            readOnly: options.readOnly,\r\n            placeholder: options.placeholder,\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            tabIndex: options.tabIndex\r\n        }, options.editorOptions)\r\n    };\r\n    var checkEnterBug = function() {\r\n        return _browser.default.msie || _browser.default.mozilla || _devices.default.real().ios\r\n    };\r\n    var getTextEditorConfig = function(options) {\r\n        var data = {};\r\n        var isEnterBug = checkEnterBug();\r\n        var sharedData = options.sharedData || data;\r\n        return getResultConfig({\r\n            placeholder: options.placeholder,\r\n            width: options.width,\r\n            value: options.value,\r\n            onValueChanged: function(e) {\r\n                var needDelayedUpdate = \"filterRow\" === options.parentType || \"searchPanel\" === options.parentType;\r\n                var isInputOrKeyUpEvent = e.event && (\"input\" === e.event.type || \"keyup\" === e.event.type);\r\n                var updateValue = function(e, notFireEvent) {\r\n                    options && options.setValue(e.value, notFireEvent)\r\n                };\r\n                clearTimeout(data.valueChangeTimeout);\r\n                if (isInputOrKeyUpEvent && needDelayedUpdate) {\r\n                    sharedData.valueChangeTimeout = data.valueChangeTimeout = setTimeout(function() {\r\n                        updateValue(e, data.valueChangeTimeout !== sharedData.valueChangeTimeout)\r\n                    }, (0, _type.isDefined)(options.updateValueTimeout) ? options.updateValueTimeout : 0)\r\n                } else {\r\n                    updateValue(e)\r\n                }\r\n            },\r\n            onKeyDown: function(e) {\r\n                if (isEnterBug && \"enter\" === (0, _index.normalizeKeyName)(e.event)) {\r\n                    _events_engine.default.trigger((0, _renderer.default)(e.component._input()), \"change\")\r\n                }\r\n            },\r\n            valueChangeEvent: \"change\" + (\"filterRow\" === options.parentType ? \" keyup input\" : \"\")\r\n        }, options)\r\n    };\r\n    var prepareDateBox = function(options) {\r\n        options.editorName = \"dxDateBox\";\r\n        options.editorOptions = getResultConfig({\r\n            value: options.value,\r\n            onValueChanged: function(args) {\r\n                options.setValue(args.value)\r\n            },\r\n            onKeyDown: function(e) {\r\n                if (checkEnterBug() && \"enter\" === (0, _index.normalizeKeyName)(e.event)) {\r\n                    e.component.blur();\r\n                    e.component.focus()\r\n                }\r\n            },\r\n            displayFormat: options.format,\r\n            type: options.dataType,\r\n            dateSerializationFormat: null,\r\n            width: \"filterBuilder\" === options.parentType ? void 0 : \"auto\"\r\n        }, options)\r\n    };\r\n    var prepareTextBox = function(options) {\r\n        var config = getTextEditorConfig(options);\r\n        var isSearching = \"searchPanel\" === options.parentType;\r\n        var toString = function(value) {\r\n            return (0, _type.isDefined)(value) ? value.toString() : \"\"\r\n        };\r\n        if (options.editorType && \"dxTextBox\" !== options.editorType) {\r\n            config.value = options.value\r\n        } else {\r\n            config.value = toString(options.value)\r\n        }\r\n        config.valueChangeEvent += isSearching ? \" keyup input search\" : \"\";\r\n        config.mode = config.mode || (isSearching ? \"search\" : \"text\");\r\n        options.editorName = \"dxTextBox\";\r\n        options.editorOptions = config\r\n    };\r\n    var prepareNumberBox = function(options) {\r\n        var config = getTextEditorConfig(options);\r\n        config.value = (0, _type.isDefined)(options.value) ? options.value : null;\r\n        options.editorName = \"dxNumberBox\";\r\n        options.editorOptions = config\r\n    };\r\n    var prepareBooleanEditor = function(options) {\r\n        if (\"filterRow\" === options.parentType || \"filterBuilder\" === options.parentType) {\r\n            prepareSelectBox((0, _extend.extend)(options, {\r\n                lookup: {\r\n                    displayExpr: function(data) {\r\n                        if (true === data) {\r\n                            return options.trueText || \"true\"\r\n                        } else {\r\n                            if (false === data) {\r\n                                return options.falseText || \"false\"\r\n                            }\r\n                        }\r\n                    },\r\n                    dataSource: [true, false]\r\n                }\r\n            }))\r\n        } else {\r\n            prepareCheckBox(options)\r\n        }\r\n    };\r\n\r\n    function watchLookupDataSource(options) {\r\n        if (options.row && options.row.watch && \"dataRow\" === options.parentType) {\r\n            var editorOptions = options.editorOptions || {};\r\n            options.editorOptions = editorOptions;\r\n            var selectBox;\r\n            var onInitialized = editorOptions.onInitialized;\r\n            editorOptions.onInitialized = function(e) {\r\n                onInitialized && onInitialized.apply(this, arguments);\r\n                selectBox = e.component;\r\n                selectBox.on(\"disposing\", stopWatch)\r\n            };\r\n            var dataSource;\r\n            var stopWatch = options.row.watch(function() {\r\n                dataSource = options.lookup.dataSource(options.row);\r\n                return dataSource && dataSource.filter\r\n            }, function(newValue, row) {\r\n                options.row = row;\r\n                selectBox.option(\"dataSource\", dataSource)\r\n            })\r\n        }\r\n    }\r\n\r\n    function prepareSelectBox(options) {\r\n        var lookup = options.lookup;\r\n        var displayGetter;\r\n        var dataSource;\r\n        var postProcess;\r\n        var isFilterRow = \"filterRow\" === options.parentType;\r\n        if (lookup) {\r\n            displayGetter = (0, _data.compileGetter)(lookup.displayExpr);\r\n            dataSource = lookup.dataSource;\r\n            if ((0, _type.isFunction)(dataSource) && !isWrapped(dataSource)) {\r\n                dataSource = dataSource(options.row || {});\r\n                watchLookupDataSource(options)\r\n            }\r\n            if ((0, _type.isObject)(dataSource) || Array.isArray(dataSource)) {\r\n                dataSource = (0, _utils.normalizeDataSourceOptions)(dataSource);\r\n                if (isFilterRow) {\r\n                    postProcess = dataSource.postProcess;\r\n                    dataSource.postProcess = function(items) {\r\n                        if (0 === this.pageIndex()) {\r\n                            items = items.slice(0);\r\n                            items.unshift(null)\r\n                        }\r\n                        if (postProcess) {\r\n                            return postProcess.call(this, items)\r\n                        }\r\n                        return items\r\n                    }\r\n                }\r\n            }\r\n            var allowClearing = Boolean(lookup.allowClearing && !isFilterRow);\r\n            options.editorName = \"dxSelectBox\";\r\n            options.editorOptions = getResultConfig({\r\n                searchEnabled: true,\r\n                value: options.value,\r\n                valueExpr: options.lookup.valueExpr,\r\n                searchExpr: options.lookup.searchExpr || options.lookup.displayExpr,\r\n                allowClearing: allowClearing,\r\n                showClearButton: allowClearing,\r\n                displayExpr: function(data) {\r\n                    if (null === data) {\r\n                        return options.showAllText\r\n                    }\r\n                    return displayGetter(data)\r\n                },\r\n                dataSource: dataSource,\r\n                onValueChanged: function(e) {\r\n                    var params = [e.value];\r\n                    !isFilterRow && params.push(e.component.option(\"text\"));\r\n                    options.setValue.apply(this, params)\r\n                }\r\n            }, options)\r\n        }\r\n    }\r\n\r\n    function prepareCheckBox(options) {\r\n        options.editorName = \"dxCheckBox\";\r\n        options.editorOptions = getResultConfig({\r\n            elementAttr: {\r\n                id: options.id\r\n            },\r\n            value: (0, _type.isDefined)(options.value) ? options.value : void 0,\r\n            hoverStateEnabled: !options.readOnly,\r\n            focusStateEnabled: !options.readOnly,\r\n            activeStateEnabled: false,\r\n            onValueChanged: function(e) {\r\n                options.setValue && options.setValue(e.value, e)\r\n            }\r\n        }, options)\r\n    }\r\n    var createEditorCore = function(that, options) {\r\n        var $editorElement = (0, _renderer.default)(options.editorElement);\r\n        if (options.editorName && options.editorOptions && $editorElement[options.editorName]) {\r\n            if (\"dxCheckBox\" === options.editorName || \"dxSwitch\" === options.editorName) {\r\n                if (!options.isOnForm) {\r\n                    $editorElement.addClass(that.addWidgetPrefix(CHECKBOX_SIZE_CLASS));\r\n                    $editorElement.parent().addClass(EDITOR_INLINE_BLOCK)\r\n                }\r\n            }\r\n            that._createComponent($editorElement, options.editorName, options.editorOptions);\r\n            if (\"dxTextBox\" === options.editorName) {\r\n                $editorElement.dxTextBox(\"instance\").registerKeyHandler(\"enter\", _common.noop)\r\n            }\r\n            if (\"dxDateBox\" === options.editorName) {\r\n                var dateBox = $editorElement.dxDateBox(\"instance\");\r\n                var defaultEnterKeyHandler = dateBox._supportedKeys().enter;\r\n                dateBox.registerKeyHandler(\"enter\", function(e) {\r\n                    if (dateBox.option(\"opened\")) {\r\n                        defaultEnterKeyHandler(e)\r\n                    }\r\n                    return true\r\n                })\r\n            }\r\n            if (\"dxTextArea\" === options.editorName) {\r\n                $editorElement.dxTextArea(\"instance\").registerKeyHandler(\"enter\", function(event) {\r\n                    if (\"enter\" === (0, _index.normalizeKeyName)(event) && !event.ctrlKey && !event.shiftKey) {\r\n                        event.stopPropagation()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    };\r\n    return {\r\n        createEditor: function($container, options) {\r\n            options.cancel = false;\r\n            options.editorElement = (0, _element.getPublicElement)($container);\r\n            if (!(0, _type.isDefined)(options.tabIndex)) {\r\n                options.tabIndex = this.option(\"tabIndex\")\r\n            }\r\n            if (options.lookup) {\r\n                prepareSelectBox(options)\r\n            } else {\r\n                switch (options.dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        prepareDateBox(options);\r\n                        break;\r\n                    case \"boolean\":\r\n                        prepareBooleanEditor(options);\r\n                        break;\r\n                    case \"number\":\r\n                        prepareNumberBox(options);\r\n                        break;\r\n                    default:\r\n                        prepareTextBox(options)\r\n                }\r\n            }\r\n            var editorName = options.editorName;\r\n            this.executeAction(\"onEditorPreparing\", options);\r\n            if (options.cancel) {\r\n                return\r\n            } else {\r\n                if (\"dataRow\" === options.parentType && options.editorType && editorName === options.editorName) {\r\n                    options.editorName = options.editorType\r\n                }\r\n            }\r\n            if (\"dataRow\" === options.parentType && !options.isOnForm && !(0, _type.isDefined)(options.editorOptions.showValidationMark)) {\r\n                options.editorOptions.showValidationMark = false\r\n            }\r\n            createEditorCore(this, options);\r\n            this.executeAction(\"onEditorPrepared\", options)\r\n        }\r\n    }\r\n}();\r\nvar _default = EditorFactoryMixin;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/sortable.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _draggable = _interopRequireDefault(require(\"./draggable\"));\r\nvar _element = require(\"../core/element\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _position = require(\"../core/utils/position\");\r\nvar _translator = require(\"../animation/translator\");\r\nvar _fx = _interopRequireDefault(require(\"../animation/fx\"));\r\nvar _deferred = require(\"../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar SORTABLE = \"dxSortable\";\r\nvar PLACEHOLDER_CLASS = \"placeholder\";\r\nvar CLONE_CLASS = \"clone\";\r\nvar isElementVisible = function(itemElement) {\r\n    return (0, _renderer.default)(itemElement).is(\":visible\")\r\n};\r\nvar animate = function(element, config) {\r\n    var _config$to, _config$to2;\r\n    if (!element) {\r\n        return\r\n    }\r\n    var left = (null === (_config$to = config.to) || void 0 === _config$to ? void 0 : _config$to.left) || 0;\r\n    var top = (null === (_config$to2 = config.to) || void 0 === _config$to2 ? void 0 : _config$to2.top) || 0;\r\n    element.style.transform = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\r\n    element.style.transition = _fx.default.off ? \"\" : \"transform \".concat(config.duration, \"ms \").concat(config.easing)\r\n};\r\nvar stopAnimation = function(element) {\r\n    if (!element) {\r\n        return\r\n    }\r\n    element.style.transform = \"\";\r\n    element.style.transition = \"\"\r\n};\r\n\r\nfunction getScrollableBoundary($scrollable) {\r\n    var offset = $scrollable.offset();\r\n    var style = $scrollable[0].style;\r\n    var paddingLeft = parseFloat(style.paddingLeft) || 0;\r\n    var paddingRight = parseFloat(style.paddingRight) || 0;\r\n    var paddingTop = parseFloat(style.paddingTop) || 0;\r\n    var width = $scrollable[0].clientWidth - (paddingLeft + paddingRight);\r\n    var height = $scrollable.height();\r\n    var left = offset.left + paddingLeft;\r\n    var top = offset.top + paddingTop;\r\n    return {\r\n        left: left,\r\n        right: left + width,\r\n        top: top,\r\n        bottom: top + height\r\n    }\r\n}\r\nvar Sortable = _draggable.default.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._sourceScrollHandler = this._handleSourceScroll.bind(this);\r\n        this._sourceScrollableInfo = null\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            clone: true,\r\n            filter: \"> *\",\r\n            itemOrientation: \"vertical\",\r\n            dropFeedbackMode: \"push\",\r\n            allowDropInsideItem: false,\r\n            allowReordering: true,\r\n            moveItemOnDrop: false,\r\n            onDragChange: null,\r\n            onAdd: null,\r\n            onRemove: null,\r\n            onReorder: null,\r\n            onPlaceholderPrepared: null,\r\n            animation: {\r\n                type: \"slide\",\r\n                duration: 300,\r\n                easing: \"ease\"\r\n            },\r\n            fromIndex: null,\r\n            toIndex: null,\r\n            dropInsideItem: false,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            offset: 0,\r\n            autoUpdate: false,\r\n            draggableElementSize: 0\r\n        })\r\n    },\r\n    reset: function() {\r\n        this.option({\r\n            dropInsideItem: false,\r\n            toIndex: null,\r\n            fromIndex: null,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            draggableElementSize: 0\r\n        });\r\n        if (this._$placeholderElement) {\r\n            this._$placeholderElement.remove()\r\n        }\r\n        this._$placeholderElement = null;\r\n        if (!this._isIndicateMode() && this._$modifiedItem) {\r\n            this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\r\n            this._$modifiedItem = null\r\n        }\r\n    },\r\n    _getPrevVisibleItem: function(items, index) {\r\n        return items.slice(0, index).reverse().filter(isElementVisible)[0]\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (true === e.cancel) {\r\n            return\r\n        }\r\n        var $sourceElement = this._getSourceElement();\r\n        this._updateItemPoints();\r\n        this._subscribeToSourceScroll(e);\r\n        this.option(\"fromIndex\", this._getElementIndex($sourceElement));\r\n        this.option(\"fromIndexOffset\", this.option(\"offset\"))\r\n    },\r\n    _subscribeToSourceScroll: function(e) {\r\n        var $scrollable = this._getScrollable((0, _renderer.default)(e.target));\r\n        if ($scrollable) {\r\n            this._sourceScrollableInfo = {\r\n                element: $scrollable,\r\n                scrollLeft: $scrollable.scrollLeft(),\r\n                scrollTop: $scrollable.scrollTop()\r\n            };\r\n            _events_engine.default.on($scrollable, \"scroll\", this._sourceScrollHandler)\r\n        }\r\n    },\r\n    _unsubscribeFromSourceScroll: function() {\r\n        if (this._sourceScrollableInfo) {\r\n            _events_engine.default.off(this._sourceScrollableInfo.element, \"scroll\", this._sourceScrollHandler);\r\n            this._sourceScrollableInfo = null\r\n        }\r\n    },\r\n    _handleSourceScroll: function(e) {\r\n        var _this = this;\r\n        var sourceScrollableInfo = this._sourceScrollableInfo;\r\n        if (sourceScrollableInfo) {\r\n            [\"scrollLeft\", \"scrollTop\"].forEach(function(scrollProp) {\r\n                if (e.target[scrollProp] !== sourceScrollableInfo[scrollProp]) {\r\n                    var scrollBy = e.target[scrollProp] - sourceScrollableInfo[scrollProp];\r\n                    _this._correctItemPoints(scrollBy);\r\n                    _this._movePlaceholder();\r\n                    sourceScrollableInfo[scrollProp] = e.target[scrollProp]\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _dragEnterHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        this._subscribeToSourceScroll(e);\r\n        if (this === this._getSourceDraggable()) {\r\n            return\r\n        }\r\n        this._updateItemPoints();\r\n        this.option(\"fromIndex\", -1);\r\n        if (!this._isIndicateMode()) {\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var lastItemPoint = itemPoints[itemPoints.length - 1];\r\n            if (lastItemPoint) {\r\n                var $element = this.$element();\r\n                var $sourceElement = this._getSourceElement();\r\n                var isVertical = this._isVerticalOrientation();\r\n                var sourceElementSize = isVertical ? $sourceElement.outerHeight(true) : $sourceElement.outerWidth(true);\r\n                var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\r\n                var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\r\n                var positionProp = isVertical ? \"top\" : \"left\";\r\n                var lastPointPosition = lastItemPoint[positionProp];\r\n                var elementPosition = $element.offset()[positionProp];\r\n                var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\r\n                if (freeSize < sourceElementSize) {\r\n                    if (isVertical) {\r\n                        var items = this._getItems();\r\n                        var $lastItem = (0, _renderer.default)(this._getPrevVisibleItem(items));\r\n                        this._$modifiedItem = $lastItem;\r\n                        this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\r\n                        $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\r\n                        var $sortable = $lastItem.closest(\".dx-sortable\");\r\n                        var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\r\n                        sortable && sortable.update()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _dragLeaveHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._unsubscribeFromSourceScroll()\r\n    },\r\n    dragEnter: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", -1)\r\n        }\r\n    },\r\n    dragLeave: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", this.option(\"fromIndex\"))\r\n        }\r\n    },\r\n    _allowDrop: function(event) {\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var $targetDraggable = targetDraggable.$element();\r\n        var $scrollable = this._getScrollable($targetDraggable);\r\n        if ($scrollable) {\r\n            var _getScrollableBoundar = getScrollableBoundary($scrollable),\r\n                left = _getScrollableBoundar.left,\r\n                right = _getScrollableBoundar.right,\r\n                top = _getScrollableBoundar.top,\r\n                bottom = _getScrollableBoundar.bottom;\r\n            var toIndex = this.option(\"toIndex\");\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var itemPoint = null === itemPoints || void 0 === itemPoints ? void 0 : itemPoints.filter(function(item) {\r\n                return item.index === toIndex\r\n            })[0];\r\n            if (itemPoint && void 0 !== itemPoint.top) {\r\n                var isVertical = this._isVerticalOrientation();\r\n                if (isVertical) {\r\n                    return top <= itemPoint.top && itemPoint.top <= bottom\r\n                } else {\r\n                    return left <= itemPoint.left && itemPoint.left <= right\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    dragEnd: function(sourceEvent) {\r\n        var _sourceEvent$fromComp, _sourceEvent$fromComp2, _sourceEvent$toCompon, _sourceEvent$toCompon2;\r\n        null === (_sourceEvent$fromComp = (_sourceEvent$fromComp2 = sourceEvent.fromComponent)._unsubscribeFromSourceScroll) || void 0 === _sourceEvent$fromComp ? void 0 : _sourceEvent$fromComp.call(_sourceEvent$fromComp2);\r\n        null === (_sourceEvent$toCompon = (_sourceEvent$toCompon2 = sourceEvent.toComponent)._unsubscribeFromSourceScroll) || void 0 === _sourceEvent$toCompon ? void 0 : _sourceEvent$toCompon.call(_sourceEvent$toCompon2);\r\n        var $sourceElement = this._getSourceElement();\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\r\n        var toIndex = this.option(\"toIndex\");\r\n        var event = sourceEvent.event;\r\n        var allowDrop = this._allowDrop(event);\r\n        if (null !== toIndex && toIndex >= 0 && allowDrop) {\r\n            var cancelAdd;\r\n            var cancelRemove;\r\n            if (sourceDraggable !== this) {\r\n                cancelAdd = this._fireAddEvent(event);\r\n                if (!cancelAdd) {\r\n                    cancelRemove = this._fireRemoveEvent(event)\r\n                }\r\n            }\r\n            if (isSourceDraggable) {\r\n                (0, _translator.resetPosition)($sourceElement)\r\n            }\r\n            if (this.option(\"moveItemOnDrop\")) {\r\n                !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove)\r\n            }\r\n            if (sourceDraggable === this) {\r\n                return this._fireReorderEvent(event)\r\n            }\r\n        }\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    dragMove: function(e) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (!itemPoints) {\r\n            return\r\n        }\r\n        var isVertical = this._isVerticalOrientation();\r\n        var axisName = isVertical ? \"top\" : \"left\";\r\n        var cursorPosition = isVertical ? e.pageY : e.pageX;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var itemPoint;\r\n        for (var i = itemPoints.length - 1; i >= 0; i--) {\r\n            var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\r\n            if ((!isVertical && rtlEnabled ? cursorPosition > centerPosition : centerPosition > cursorPosition) || void 0 === centerPosition) {\r\n                itemPoint = itemPoints[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        if (itemPoint) {\r\n            this._updatePlaceholderPosition(e, itemPoint);\r\n            if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\r\n                this._movePlaceholder()\r\n            }\r\n        }\r\n    },\r\n    _isIndicateMode: function() {\r\n        return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\")\r\n    },\r\n    _createPlaceholder: function() {\r\n        var $placeholderContainer;\r\n        if (this._isIndicateMode()) {\r\n            $placeholderContainer = (0, _renderer.default)(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement)\r\n        }\r\n        this._$placeholderElement = $placeholderContainer;\r\n        return $placeholderContainer\r\n    },\r\n    _getItems: function() {\r\n        var itemsSelector = this._getItemsSelector();\r\n        return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray()\r\n    },\r\n    _allowReordering: function() {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return sourceDraggable !== targetDraggable || this.option(\"allowReordering\")\r\n    },\r\n    _isValidPoint: function(visibleIndex, draggableVisibleIndex, dropInsideItem) {\r\n        var allowDropInsideItem = this.option(\"allowDropInsideItem\");\r\n        var allowReordering = dropInsideItem || this._allowReordering();\r\n        if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\r\n            return false\r\n        }\r\n        if (!this._isIndicateMode()) {\r\n            return true\r\n        }\r\n        return draggableVisibleIndex === -1 || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1)\r\n    },\r\n    _getItemPoints: function() {\r\n        var that = this;\r\n        var result = [];\r\n        var $item;\r\n        var offset;\r\n        var itemWidth;\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isVertical = that._isVerticalOrientation();\r\n        var itemElements = that._getItems();\r\n        var visibleItemElements = itemElements.filter(isElementVisible);\r\n        var visibleItemCount = visibleItemElements.length;\r\n        var $draggableItem = this._getDraggableElement();\r\n        var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\r\n        if (visibleItemCount) {\r\n            for (var i = 0; i <= visibleItemCount; i++) {\r\n                var needCorrectLeftPosition = !isVertical && rtlEnabled ^ i === visibleItemCount;\r\n                var needCorrectTopPosition = isVertical && i === visibleItemCount;\r\n                if (i < visibleItemCount) {\r\n                    $item = (0, _renderer.default)(visibleItemElements[i]);\r\n                    offset = $item.offset();\r\n                    itemWidth = $item.outerWidth()\r\n                }\r\n                result.push({\r\n                    dropInsideItem: false,\r\n                    left: offset.left + (needCorrectLeftPosition ? itemWidth : 0),\r\n                    top: offset.top + (needCorrectTopPosition ? result[i - 1].height : 0),\r\n                    index: i === visibleItemCount ? itemElements.length : itemElements.indexOf($item.get(0)),\r\n                    $item: $item,\r\n                    width: $item.outerWidth(),\r\n                    height: $item.outerHeight(),\r\n                    isValid: that._isValidPoint(i, draggableVisibleIndex)\r\n                })\r\n            }\r\n            if (this.option(\"allowDropInsideItem\")) {\r\n                var points = result;\r\n                result = [];\r\n                for (var _i = 0; _i < points.length; _i++) {\r\n                    result.push(points[_i]);\r\n                    if (points[_i + 1]) {\r\n                        result.push((0, _extend.extend)({}, points[_i], {\r\n                            dropInsideItem: true,\r\n                            top: Math.floor((points[_i].top + points[_i + 1].top) / 2),\r\n                            left: Math.floor((points[_i].left + points[_i + 1].left) / 2),\r\n                            isValid: this._isValidPoint(_i, draggableVisibleIndex, true)\r\n                        }))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            result.push({\r\n                dropInsideItem: false,\r\n                index: 0,\r\n                isValid: true\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _updateItemPoints: function(forceUpdate) {\r\n        if (forceUpdate || this.option(\"autoUpdate\") || !this.option(\"itemPoints\")) {\r\n            this.option(\"itemPoints\", this._getItemPoints())\r\n        }\r\n    },\r\n    _correctItemPoints: function(scrollBy) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (scrollBy && itemPoints && !this.option(\"autoUpdate\")) {\r\n            var isVertical = this._isVerticalOrientation();\r\n            var positionPropName = isVertical ? \"top\" : \"left\";\r\n            itemPoints.forEach(function(itemPoint) {\r\n                itemPoint[positionPropName] -= scrollBy\r\n            })\r\n        }\r\n    },\r\n    _getElementIndex: function($itemElement) {\r\n        return this._getItems().indexOf($itemElement.get(0))\r\n    },\r\n    _getDragTemplateArgs: function($element) {\r\n        var args = this.callBase.apply(this, arguments);\r\n        args.model.fromIndex = this._getElementIndex($element);\r\n        return args\r\n    },\r\n    _togglePlaceholder: function(value) {\r\n        this._$placeholderElement && this._$placeholderElement.toggle(value)\r\n    },\r\n    _isVerticalOrientation: function() {\r\n        return \"vertical\" === this.option(\"itemOrientation\")\r\n    },\r\n    _normalizeToIndex: function(toIndex, dropInsideItem) {\r\n        var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\r\n        var fromIndex = this.option(\"fromIndex\");\r\n        if (null === toIndex) {\r\n            return fromIndex\r\n        }\r\n        return Math.max(isAnotherDraggable || fromIndex >= toIndex || dropInsideItem ? toIndex : toIndex - 1, 0)\r\n    },\r\n    _updatePlaceholderPosition: function(e, itemPoint) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\r\n        var eventArgs = (0, _extend.extend)(this._getEventArgs(e), {\r\n            toIndex: toIndex,\r\n            dropInsideItem: itemPoint.dropInsideItem\r\n        });\r\n        itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\r\n        if (eventArgs.cancel || !itemPoint.isValid) {\r\n            if (!itemPoint.isValid) {\r\n                this.option({\r\n                    dropInsideItem: false,\r\n                    toIndex: null\r\n                })\r\n            }\r\n            return\r\n        }\r\n        this.option({\r\n            dropInsideItem: itemPoint.dropInsideItem,\r\n            toIndex: itemPoint.index\r\n        });\r\n        this._getAction(\"onPlaceholderPrepared\")((0, _extend.extend)(this._getEventArgs(e), {\r\n            placeholderElement: (0, _element.getPublicElement)(this._$placeholderElement),\r\n            dragElement: (0, _element.getPublicElement)(sourceDraggable._$dragElement)\r\n        }));\r\n        this._updateItemPoints()\r\n    },\r\n    _makeWidthCorrection: function($item, width) {\r\n        this._$scrollable = this._getScrollable($item);\r\n        if (this._$scrollable && this._$scrollable.width() < width) {\r\n            var scrollableWidth = this._$scrollable.width();\r\n            var offsetLeft = $item.offset().left - this._$scrollable.offset().left;\r\n            var offsetRight = scrollableWidth - $item.outerWidth() - offsetLeft;\r\n            if (offsetLeft > 0) {\r\n                width = scrollableWidth - offsetLeft\r\n            } else {\r\n                if (offsetRight > 0) {\r\n                    width = scrollableWidth - offsetRight\r\n                } else {\r\n                    width = scrollableWidth\r\n                }\r\n            }\r\n        }\r\n        return width\r\n    },\r\n    _updatePlaceholderSizes: function($placeholderElement, itemElement) {\r\n        var that = this;\r\n        var dropInsideItem = that.option(\"dropInsideItem\");\r\n        var $item = (0, _renderer.default)(itemElement);\r\n        var isVertical = that._isVerticalOrientation();\r\n        var width = \"\";\r\n        var height = \"\";\r\n        $placeholderElement.toggleClass(that._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\r\n        if (isVertical || dropInsideItem) {\r\n            width = $item.outerWidth()\r\n        }\r\n        if (!isVertical || dropInsideItem) {\r\n            height = $item.outerHeight()\r\n        }\r\n        width = that._makeWidthCorrection($item, width);\r\n        $placeholderElement.css({\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _moveItem: function($itemElement, index, cancelRemove) {\r\n        var $prevTargetItemElement;\r\n        var $itemElements = this._getItems();\r\n        var $targetItemElement = $itemElements[index];\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (cancelRemove) {\r\n            $itemElement = $itemElement.clone();\r\n            sourceDraggable._toggleDragSourceClass(false, $itemElement)\r\n        }\r\n        if (!$targetItemElement) {\r\n            $prevTargetItemElement = $itemElements[index - 1]\r\n        }\r\n        this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement)\r\n    },\r\n    _moveItemCore: function($targetItem, item, prevItem) {\r\n        if (!item && !prevItem) {\r\n            $targetItem.appendTo(this.$element())\r\n        } else {\r\n            if (prevItem) {\r\n                $targetItem.insertAfter((0, _renderer.default)(prevItem))\r\n            } else {\r\n                $targetItem.insertBefore((0, _renderer.default)(item))\r\n            }\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        return (0, _extend.extend)(this.callBase.apply(this, arguments), {\r\n            fromIndex: this._getElementIndex($itemElement)\r\n        })\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\r\n        return (0, _extend.extend)(this.callBase.apply(this, arguments), {\r\n            fromIndex: sourceDraggable.option(\"fromIndex\"),\r\n            toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\r\n            dropInsideItem: dropInsideItem\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var _this2 = this;\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragChange\":\r\n            case \"onPlaceholderPrepared\":\r\n            case \"onAdd\":\r\n            case \"onRemove\":\r\n            case \"onReorder\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"itemOrientation\":\r\n            case \"allowDropInsideItem\":\r\n            case \"moveItemOnDrop\":\r\n            case \"dropFeedbackMode\":\r\n            case \"itemPoints\":\r\n            case \"animation\":\r\n            case \"allowReordering\":\r\n            case \"fromIndexOffset\":\r\n            case \"offset\":\r\n            case \"draggableElementSize\":\r\n            case \"autoUpdate\":\r\n                break;\r\n            case \"fromIndex\":\r\n                [false, true].forEach(function(isDragSource) {\r\n                    var fromIndex = isDragSource ? args.value : args.previousValue;\r\n                    if (null !== fromIndex) {\r\n                        var $fromElement = (0, _renderer.default)(_this2._getItems()[fromIndex]);\r\n                        _this2._toggleDragSourceClass(isDragSource, $fromElement)\r\n                    }\r\n                });\r\n                break;\r\n            case \"dropInsideItem\":\r\n                this._optionChangedDropInsideItem(args);\r\n                break;\r\n            case \"toIndex\":\r\n                this._optionChangedToIndex(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionChangedDropInsideItem: function() {\r\n        if (this._isIndicateMode() && this._$placeholderElement) {\r\n            this._movePlaceholder()\r\n        }\r\n    },\r\n    _isPositionVisible: function(position) {\r\n        var $element = this.$element();\r\n        var scrollContainer;\r\n        if (\"hidden\" !== $element.css(\"overflow\")) {\r\n            scrollContainer = $element.get(0)\r\n        } else {\r\n            $element.parents().each(function() {\r\n                if (\"visible\" !== (0, _renderer.default)(this).css(\"overflow\")) {\r\n                    scrollContainer = this;\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        if (scrollContainer) {\r\n            var clientRect = (0, _position.getBoundingRect)(scrollContainer);\r\n            var isVerticalOrientation = this._isVerticalOrientation();\r\n            var start = isVerticalOrientation ? \"top\" : \"left\";\r\n            var end = isVerticalOrientation ? \"bottom\" : \"right\";\r\n            var pageOffset = isVerticalOrientation ? window.pageYOffset : window.pageXOffset;\r\n            if (position[start] < clientRect[start] + pageOffset || position[start] > clientRect[end] + pageOffset) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _optionChangedToIndex: function(args) {\r\n        var toIndex = args.value;\r\n        if (this._isIndicateMode()) {\r\n            var showPlaceholder = null !== toIndex && toIndex >= 0;\r\n            this._togglePlaceholder(showPlaceholder);\r\n            if (showPlaceholder) {\r\n                this._movePlaceholder()\r\n            }\r\n        } else {\r\n            this._moveItems(args.previousValue, args.value, args.fullUpdate)\r\n        }\r\n    },\r\n    update: function() {\r\n        if (null === this.option(\"fromIndex\") && null === this.option(\"toIndex\")) {\r\n            return\r\n        }\r\n        this._updateItemPoints(true);\r\n        this._updateDragSourceClass();\r\n        var toIndex = this.option(\"toIndex\");\r\n        this._optionChangedToIndex({\r\n            value: toIndex,\r\n            fullUpdate: true\r\n        })\r\n    },\r\n    _updateDragSourceClass: function() {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var $fromElement = (0, _renderer.default)(this._getItems()[fromIndex]);\r\n        if ($fromElement.length) {\r\n            this._$sourceElement = $fromElement;\r\n            this._toggleDragSourceClass(true, $fromElement)\r\n        }\r\n    },\r\n    _makeLeftCorrection: function(left, leftMargin) {\r\n        var that = this;\r\n        var $scrollable = that._$scrollable;\r\n        if ($scrollable && that._isVerticalOrientation() && $scrollable.scrollLeft() > leftMargin) {\r\n            left += $scrollable.scrollLeft() - leftMargin\r\n        }\r\n        return left\r\n    },\r\n    _movePlaceholder: function() {\r\n        var that = this;\r\n        var $placeholderElement = that._$placeholderElement || that._createPlaceholder();\r\n        if (!$placeholderElement) {\r\n            return\r\n        }\r\n        var items = that._getItems();\r\n        var toIndex = that.option(\"toIndex\");\r\n        var isVerticalOrientation = that._isVerticalOrientation();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var dropInsideItem = that.option(\"dropInsideItem\");\r\n        var position = null;\r\n        var leftMargin = 0;\r\n        var itemElement = items[toIndex];\r\n        if (itemElement) {\r\n            var $itemElement = (0, _renderer.default)(itemElement);\r\n            position = $itemElement.offset();\r\n            leftMargin = parseFloat($itemElement.css(\"marginLeft\"));\r\n            if (!isVerticalOrientation && rtlEnabled && !dropInsideItem) {\r\n                position.left += $itemElement.outerWidth(true)\r\n            }\r\n        } else {\r\n            var prevVisibleItemElement = itemElement = this._getPrevVisibleItem(items, toIndex);\r\n            if (prevVisibleItemElement) {\r\n                position = (0, _renderer.default)(prevVisibleItemElement).offset();\r\n                if (isVerticalOrientation) {\r\n                    position.top += (0, _renderer.default)(prevVisibleItemElement).outerHeight(true)\r\n                } else {\r\n                    if (!rtlEnabled) {\r\n                        position.left += (0, _renderer.default)(prevVisibleItemElement).outerWidth(true)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        that._updatePlaceholderSizes($placeholderElement, itemElement);\r\n        if (position && !that._isPositionVisible(position)) {\r\n            position = null\r\n        }\r\n        if (position) {\r\n            position.left = that._makeLeftCorrection(position.left, leftMargin);\r\n            that._move(position, $placeholderElement)\r\n        }\r\n        $placeholderElement.toggle(!!position)\r\n    },\r\n    _getPositions: function(items, elementSize, fromIndex, toIndex) {\r\n        var positions = [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            var position = 0;\r\n            if (null === toIndex || null === fromIndex) {\r\n                positions.push(position);\r\n                continue\r\n            }\r\n            if (fromIndex === -1) {\r\n                if (i >= toIndex) {\r\n                    position = elementSize\r\n                }\r\n            } else {\r\n                if (toIndex === -1) {\r\n                    if (i > fromIndex) {\r\n                        position = -elementSize\r\n                    }\r\n                } else {\r\n                    if (fromIndex < toIndex) {\r\n                        if (i > fromIndex && i < toIndex) {\r\n                            position = -elementSize\r\n                        }\r\n                    } else {\r\n                        if (fromIndex > toIndex) {\r\n                            if (i >= toIndex && i < fromIndex) {\r\n                                position = elementSize\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            positions.push(position)\r\n        }\r\n        return positions\r\n    },\r\n    _getDraggableElementSize: function(isVerticalOrientation) {\r\n        var $draggableItem = this._getDraggableElement();\r\n        var size = this.option(\"draggableElementSize\");\r\n        if (!size) {\r\n            size = isVerticalOrientation ? ($draggableItem.outerHeight() + $draggableItem.outerHeight(true)) / 2 : ($draggableItem.outerWidth() + $draggableItem.outerWidth(true)) / 2;\r\n            if (!this.option(\"autoUpdate\")) {\r\n                this.option(\"draggableElementSize\", size)\r\n            }\r\n        }\r\n        return size\r\n    },\r\n    _getActualFromIndex: function() {\r\n        var _this$option = this.option(),\r\n            fromIndex = _this$option.fromIndex,\r\n            fromIndexOffset = _this$option.fromIndexOffset,\r\n            offset = _this$option.offset;\r\n        return null == fromIndex ? null : fromIndex + fromIndexOffset - offset\r\n    },\r\n    _moveItems: function(prevToIndex, toIndex, fullUpdate) {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var isVerticalOrientation = this._isVerticalOrientation();\r\n        var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\r\n        var elementSize = this._getDraggableElementSize(isVerticalOrientation);\r\n        var items = this._getItems();\r\n        var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\r\n        var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\r\n        var animationConfig = this.option(\"animation\");\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        for (var i = 0; i < items.length; i++) {\r\n            var itemElement = items[i];\r\n            var prevPosition = prevPositions[i];\r\n            var position = positions[i];\r\n            if (null === toIndex || null === fromIndex) {\r\n                stopAnimation(itemElement)\r\n            } else {\r\n                if (prevPosition !== position || fullUpdate && position) {\r\n                    animate(itemElement, (0, _extend.extend)({}, animationConfig, {\r\n                        to: _defineProperty({}, positionPropName, !isVerticalOrientation && rtlEnabled ? -position : position)\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._isIndicateMode()) {\r\n            $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.reset();\r\n        this.callBase()\r\n    },\r\n    _fireAddEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onAdd\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireRemoveEvent: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var args = this._getEventArgs(sourceEvent);\r\n        sourceDraggable._getAction(\"onRemove\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireReorderEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onReorder\")(args);\r\n        return args.promise || (new _deferred.Deferred).resolve()\r\n    }\r\n});\r\n(0, _component_registrator.default)(SORTABLE, Sortable);\r\nvar _default = Sortable;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/tab_panel.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _support = require(\"../core/utils/support\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../core/dom_adapter\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _multi_view = _interopRequireDefault(require(\"./multi_view\"));\r\nvar _tabs = _interopRequireDefault(require(\"./tabs\"));\r\nvar _item = _interopRequireDefault(require(\"./tab_panel/item\"));\r\nvar _icon = require(\"../core/utils/icon\");\r\nvar _element = require(\"../core/element\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _bindable_template = require(\"../core/templates/bindable_template\");\r\nvar _window = require(\"../core/utils/window\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TABPANEL_CLASS = \"dx-tabpanel\";\r\nvar TABPANEL_TABS_CLASS = \"dx-tabpanel-tabs\";\r\nvar TABPANEL_CONTAINER_CLASS = \"dx-tabpanel-container\";\r\nvar TABS_ITEM_TEXT_CLASS = \"dx-tab-text\";\r\nvar TabPanel = _multi_view.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            itemTitleTemplate: \"title\",\r\n            hoverStateEnabled: true,\r\n            showNavButtons: false,\r\n            scrollByContent: true,\r\n            scrollingEnabled: true,\r\n            onTitleClick: null,\r\n            onTitleHold: null,\r\n            onTitleRendered: null,\r\n            badgeExpr: function(data) {\r\n                return data ? data.badge : void 0\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return !_support.touch\r\n            },\r\n            options: {\r\n                swipeEnabled: false\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                animationEnabled: false\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TABPANEL_CLASS);\r\n        this.setAria(\"role\", \"tabpanel\")\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._createTitleActions();\r\n        this._renderLayout()\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            title: new _bindable_template.BindableTemplate(function($container, data) {\r\n                if ((0, _type.isPlainObject)(data)) {\r\n                    var $iconElement = (0, _icon.getImageContainer)(data.icon);\r\n                    if ($iconElement) {\r\n                        $container.append($iconElement)\r\n                    }\r\n                    if ((0, _type.isDefined)(data.title) && !(0, _type.isPlainObject)(data.title)) {\r\n                        $container.append(_dom_adapter.default.createTextNode(data.title))\r\n                    }\r\n                } else {\r\n                    if ((0, _type.isDefined)(data)) {\r\n                        $container.text(String(data))\r\n                    }\r\n                }\r\n                $container.wrapInner((0, _renderer.default)(\"<span>\").addClass(TABS_ITEM_TEXT_CLASS))\r\n            }, [\"title\", \"icon\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    },\r\n    _createTitleActions: function() {\r\n        this._createTitleClickAction();\r\n        this._createTitleHoldAction();\r\n        this._createTitleRenderedAction()\r\n    },\r\n    _createTitleClickAction: function() {\r\n        this._titleClickAction = this._createActionByOption(\"onTitleClick\")\r\n    },\r\n    _createTitleHoldAction: function() {\r\n        this._titleHoldAction = this._createActionByOption(\"onTitleHold\")\r\n    },\r\n    _createTitleRenderedAction: function() {\r\n        this._titleRenderedAction = this._createActionByOption(\"onTitleRendered\")\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        if (this.option(\"templatesRenderAsynchronously\")) {\r\n            this._resizeEventTimer = setTimeout(function() {\r\n                that._updateLayout()\r\n            }, 0)\r\n        }\r\n    },\r\n    _renderLayout: function() {\r\n        if (this._tabs) {\r\n            this._updateLayout();\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        this._$tabContainer = (0, _renderer.default)(\"<div>\").addClass(TABPANEL_TABS_CLASS).appendTo($element);\r\n        var $tabs = (0, _renderer.default)(\"<div>\").appendTo(this._$tabContainer);\r\n        this._tabs = this._createComponent($tabs, _tabs.default, this._tabConfig());\r\n        this._$container = (0, _renderer.default)(\"<div>\").addClass(TABPANEL_CONTAINER_CLASS).appendTo($element);\r\n        this._$container.append(this._$wrapper);\r\n        this._updateLayout()\r\n    },\r\n    _updateLayout: function() {\r\n        if ((0, _window.hasWindow)()) {\r\n            var tabsHeight = this._$tabContainer.outerHeight();\r\n            this._$container.css({\r\n                marginTop: -tabsHeight,\r\n                paddingTop: tabsHeight\r\n            })\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function() {\r\n        if (!this._tabs) {\r\n            return\r\n        }\r\n        var tabs = this._tabs;\r\n        var tabItems = tabs.itemElements();\r\n        var $activeTab = (0, _renderer.default)(tabItems[tabs.option(\"selectedIndex\")]);\r\n        var id = this.getFocusedItemId();\r\n        this.setAria(\"controls\", void 0, (0, _renderer.default)(tabItems));\r\n        this.setAria(\"controls\", id, $activeTab)\r\n    },\r\n    _tabConfig: function() {\r\n        return {\r\n            selectOnFocus: true,\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            repaintChangesOnly: this.option(\"repaintChangesOnly\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            selectedIndex: this.option(\"selectedIndex\"),\r\n            badgeExpr: this.option(\"badgeExpr\"),\r\n            onItemClick: this._titleClickAction.bind(this),\r\n            onItemHold: this._titleHoldAction.bind(this),\r\n            itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n            onSelectionChanged: function(e) {\r\n                this.option(\"selectedIndex\", e.component.option(\"selectedIndex\"));\r\n                this._refreshActiveDescendant()\r\n            }.bind(this),\r\n            onItemRendered: this._titleRenderedAction.bind(this),\r\n            itemTemplate: this._getTemplateByOption(\"itemTitleTemplate\"),\r\n            items: this.option(\"items\"),\r\n            noDataText: null,\r\n            scrollingEnabled: this.option(\"scrollingEnabled\"),\r\n            scrollByContent: this.option(\"scrollByContent\"),\r\n            showNavButtons: this.option(\"showNavButtons\"),\r\n            itemTemplateProperty: \"tabTemplate\",\r\n            loopItemFocus: this.option(\"loop\"),\r\n            selectionRequired: true,\r\n            onOptionChanged: function(args) {\r\n                if (\"focusedElement\" === args.name) {\r\n                    if (args.value) {\r\n                        var $value = (0, _renderer.default)(args.value);\r\n                        var $newItem = this._itemElements().eq($value.index());\r\n                        this.option(\"focusedElement\", (0, _element.getPublicElement)($newItem))\r\n                    } else {\r\n                        this.option(\"focusedElement\", args.value)\r\n                    }\r\n                }\r\n            }.bind(this),\r\n            onFocusIn: function(args) {\r\n                this._focusInHandler(args.event)\r\n            }.bind(this),\r\n            onFocusOut: function(args) {\r\n                if (!this._isFocusOutHandlerExecuting) {\r\n                    this._focusOutHandler(args.event)\r\n                }\r\n            }.bind(this)\r\n        }\r\n    },\r\n    _renderFocusTarget: function() {\r\n        this._focusTarget().attr(\"tabIndex\", -1)\r\n    },\r\n    _updateFocusState: function(e, isFocused) {\r\n        this.callBase(e, isFocused);\r\n        if (e.target === this._tabs._focusTarget().get(0)) {\r\n            this._toggleFocusClass(isFocused, this._focusTarget())\r\n        }\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this._isFocusOutHandlerExecuting = true;\r\n        this.callBase.apply(this, arguments);\r\n        this._tabs._focusOutHandler(e);\r\n        this._isFocusOutHandlerExecuting = false\r\n    },\r\n    _setTabsOption: function(name, value) {\r\n        if (this._tabs) {\r\n            this._tabs.option(name, value)\r\n        }\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._tabs._dimensionChanged();\r\n            this._updateLayout()\r\n        }\r\n    },\r\n    registerKeyHandler: function(key, handler) {\r\n        this.callBase(key, handler);\r\n        if (this._tabs) {\r\n            this._tabs.registerKeyHandler(key, handler)\r\n        }\r\n    },\r\n    repaint: function() {\r\n        this.callBase();\r\n        this._tabs.repaint()\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        var value = args.value;\r\n        var fullName = args.fullName;\r\n        switch (name) {\r\n            case \"dataSource\":\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._setTabsOption(name, this.option(name));\r\n                this._updateLayout();\r\n                if (!this.option(\"repaintChangesOnly\")) {\r\n                    this._tabs.repaint()\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._tabs.repaint();\r\n                break;\r\n            case \"selectedIndex\":\r\n            case \"selectedItem\":\r\n                this._setTabsOption(fullName, value);\r\n                this.callBase(args);\r\n                if (true === this.option(\"focusStateEnabled\")) {\r\n                    var selectedIndex = this.option(\"selectedIndex\");\r\n                    var selectedTabContent = this._itemElements().eq(selectedIndex);\r\n                    this.option(\"focusedElement\", (0, _element.getPublicElement)(selectedTabContent))\r\n                }\r\n                break;\r\n            case \"itemHoldTimeout\":\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setTabsOption(fullName, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"scrollingEnabled\":\r\n            case \"scrollByContent\":\r\n            case \"showNavButtons\":\r\n                this._setTabsOption(fullName, value);\r\n                break;\r\n            case \"focusedElement\":\r\n                var id = value ? (0, _renderer.default)(value).index() : value;\r\n                var newItem = value ? this._tabs._itemElements().eq(id) : value;\r\n                this._setTabsOption(\"focusedElement\", (0, _element.getPublicElement)(newItem));\r\n                this.callBase(args);\r\n                break;\r\n            case \"itemTitleTemplate\":\r\n                this._setTabsOption(\"itemTemplate\", this._getTemplateByOption(\"itemTitleTemplate\"));\r\n                break;\r\n            case \"onTitleClick\":\r\n                this._createTitleClickAction();\r\n                this._setTabsOption(\"onItemClick\", this._titleClickAction.bind(this));\r\n                break;\r\n            case \"onTitleHold\":\r\n                this._createTitleHoldAction();\r\n                this._setTabsOption(\"onItemHold\", this._titleHoldAction.bind(this));\r\n                break;\r\n            case \"onTitleRendered\":\r\n                this._createTitleRenderedAction();\r\n                this._setTabsOption(\"onItemRendered\", this._titleRenderedAction.bind(this));\r\n                break;\r\n            case \"loop\":\r\n                this._setTabsOption(\"loopItemFocus\", value);\r\n                break;\r\n            case \"badgeExpr\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        clearTimeout(this._resizeEventTimer);\r\n        this.callBase()\r\n    }\r\n});\r\nTabPanel.ItemClass = _item.default;\r\n(0, _component_registrator.default)(\"dxTabPanel\", TabPanel);\r\nvar _default = TabPanel;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/tab_panel/item.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _item = _interopRequireDefault(require(\"../collection/item\"));\r\nvar _common = require(\"../../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar TabPanelItem = function(_CollectionWidgetItem) {\r\n    _inheritsLoose(TabPanelItem, _CollectionWidgetItem);\r\n\r\n    function TabPanelItem() {\r\n        return _CollectionWidgetItem.apply(this, arguments) || this\r\n    }\r\n    var _proto = TabPanelItem.prototype;\r\n    _proto._renderWatchers = function() {\r\n        this._startWatcher(\"badge\", _common.noop);\r\n        return _CollectionWidgetItem.prototype._renderWatchers.call(this)\r\n    };\r\n    return TabPanelItem\r\n}(_item.default);\r\nexports.default = TabPanelItem;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/tabs.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _button = _interopRequireDefault(require(\"./button\"));\r\nvar _utils = require(\"./widget/utils.ink_ripple\");\r\nvar _index = require(\"../events/utils/index\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _pointer = _interopRequireDefault(require(\"../events/pointer\"));\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _item = _interopRequireDefault(require(\"./tabs/item\"));\r\nvar _constants = require(\"./tabs/constants\");\r\nvar _themes = require(\"./themes\");\r\nvar _hold = _interopRequireDefault(require(\"../events/hold\"));\r\nvar _ui = _interopRequireDefault(require(\"./scroll_view/ui.scrollable\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./collection/ui.collection_widget.live_update\"));\r\nvar _icon = require(\"../core/utils/icon\");\r\nvar _bindable_template = require(\"../core/templates/bindable_template\");\r\nvar _deferred = require(\"../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TABS_CLASS = \"dx-tabs\";\r\nvar TABS_WRAPPER_CLASS = \"dx-tabs-wrapper\";\r\nvar TABS_STRETCHED_CLASS = \"dx-tabs-stretched\";\r\nvar TABS_SCROLLABLE_CLASS = \"dx-tabs-scrollable\";\r\nvar TABS_NAV_BUTTONS_CLASS = \"dx-tabs-nav-buttons\";\r\nvar OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\";\r\nvar TABS_ITEM_CLASS = \"dx-tab\";\r\nvar TABS_ITEM_SELECTED_CLASS = \"dx-tab-selected\";\r\nvar TABS_NAV_BUTTON_CLASS = \"dx-tabs-nav-button\";\r\nvar TABS_LEFT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-left\";\r\nvar TABS_RIGHT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-right\";\r\nvar TABS_ITEM_TEXT_CLASS = \"dx-tab-text\";\r\nvar TABS_ITEM_DATA_KEY = \"dxTabData\";\r\nvar BUTTON_NEXT_ICON = \"chevronnext\";\r\nvar BUTTON_PREV_ICON = \"chevronprev\";\r\nvar FEEDBACK_HIDE_TIMEOUT = 100;\r\nvar FEEDBACK_DURATION_INTERVAL = 5;\r\nvar FEEDBACK_SCROLL_TIMEOUT = 300;\r\nvar TAB_OFFSET = 30;\r\nvar Tabs = _uiCollection_widget.default.inherit({\r\n    _activeStateUnit: \".\" + TABS_ITEM_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            showNavButtons: true,\r\n            scrollByContent: true,\r\n            scrollingEnabled: true,\r\n            selectionMode: \"single\",\r\n            activeStateEnabled: true,\r\n            selectionRequired: false,\r\n            selectOnFocus: true,\r\n            loopItemFocus: false,\r\n            useInkRipple: false,\r\n            badgeExpr: function(data) {\r\n                return data ? data.badge : void 0\r\n            },\r\n            _itemAttributes: {\r\n                role: \"tab\"\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = (0, _themes.current)();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" !== _devices.default.real().deviceType\r\n            },\r\n            options: {\r\n                showNavButtons: false\r\n            }\r\n        }, {\r\n            device: {\r\n                deviceType: \"desktop\"\r\n            },\r\n            options: {\r\n                scrollByContent: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"desktop\" === _devices.default.real().deviceType && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return (0, _themes.isMaterial)(themeName)\r\n            },\r\n            options: {\r\n                useInkRipple: true,\r\n                selectOnFocus: false\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.setAria(\"role\", \"tablist\");\r\n        this.$element().addClass(TABS_CLASS);\r\n        this._renderWrapper();\r\n        this._renderMultiple();\r\n        this._feedbackHideTimeout = FEEDBACK_HIDE_TIMEOUT\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new _bindable_template.BindableTemplate(function($container, data) {\r\n                if ((0, _type.isPlainObject)(data)) {\r\n                    this._prepareDefaultItemTemplate(data, $container)\r\n                } else {\r\n                    $container.text(String(data))\r\n                }\r\n                var $iconElement = (0, _icon.getImageContainer)(data.icon);\r\n                $iconElement && $iconElement.prependTo($container);\r\n                $container.wrapInner((0, _renderer.default)(\"<span>\").addClass(TABS_ITEM_TEXT_CLASS))\r\n            }.bind(this), [\"text\", \"html\", \"icon\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    },\r\n    _createItemByTemplate: function(itemTemplate, renderArgs) {\r\n        var _this = this;\r\n        var itemData = renderArgs.itemData,\r\n            container = renderArgs.container,\r\n            index = renderArgs.index;\r\n        this._deferredTemplates[index] = new _deferred.Deferred;\r\n        return itemTemplate.render({\r\n            model: itemData,\r\n            container: container,\r\n            index: index,\r\n            onRendered: function() {\r\n                return _this._deferredTemplates[index].resolve()\r\n            }\r\n        })\r\n    },\r\n    _itemClass: function() {\r\n        return TABS_ITEM_CLASS\r\n    },\r\n    _selectedItemClass: function() {\r\n        return TABS_ITEM_SELECTED_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return TABS_ITEM_DATA_KEY\r\n    },\r\n    _initMarkup: function() {\r\n        this._deferredTemplates = [];\r\n        this.callBase();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.$element().addClass(OVERFLOW_HIDDEN_CLASS)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._deferRenderScrolling()\r\n    },\r\n    _deferRenderScrolling: function() {\r\n        var _this2 = this;\r\n        _deferred.when.apply(this, this._deferredTemplates).done(function() {\r\n            return _this2._renderScrolling()\r\n        })\r\n    },\r\n    _renderScrolling: function() {\r\n        var removeClasses = [TABS_STRETCHED_CLASS, _constants.TABS_EXPANDED_CLASS, OVERFLOW_HIDDEN_CLASS];\r\n        this.$element().removeClass(removeClasses.join(\" \"));\r\n        if (this.option(\"scrollingEnabled\") && this._isItemsWidthExceeded()) {\r\n            if (!this._scrollable) {\r\n                this._renderScrollable();\r\n                this._renderNavButtons()\r\n            }\r\n            this._scrollable.update();\r\n            this._updateNavButtonsVisibility();\r\n            if (this.option(\"rtlEnabled\")) {\r\n                this._scrollable.scrollTo({\r\n                    left: this._scrollable.scrollWidth() - this._scrollable.clientWidth()\r\n                })\r\n            }\r\n            this._scrollToItem(this.option(\"selectedItem\"))\r\n        }\r\n        if (!(this.option(\"scrollingEnabled\") && this._isItemsWidthExceeded())) {\r\n            this._cleanScrolling();\r\n            if (this._needStretchItems() && !this._isItemsWidthExceeded()) {\r\n                this.$element().addClass(TABS_STRETCHED_CLASS)\r\n            }\r\n            this.$element().removeClass(TABS_NAV_BUTTONS_CLASS).addClass(_constants.TABS_EXPANDED_CLASS)\r\n        }\r\n    },\r\n    _isItemsWidthExceeded: function() {\r\n        var tabItemsWidth = this._getSummaryItemsWidth(this._getVisibleItems(), true);\r\n        return tabItemsWidth - 1 > this.$element().width()\r\n    },\r\n    _needStretchItems: function() {\r\n        var $visibleItems = this._getVisibleItems();\r\n        var elementWidth = this.$element().width();\r\n        var itemsWidth = [];\r\n        (0, _iterator.each)($visibleItems, function(_, item) {\r\n            itemsWidth.push((0, _renderer.default)(item).outerWidth(true))\r\n        });\r\n        var maxTabWidth = Math.max.apply(null, itemsWidth);\r\n        return maxTabWidth > elementWidth / $visibleItems.length\r\n    },\r\n    _cleanNavButtons: function() {\r\n        if (!this._leftButton || !this._rightButton) {\r\n            return\r\n        }\r\n        this._leftButton.$element().remove();\r\n        this._rightButton.$element().remove();\r\n        this._leftButton = null;\r\n        this._rightButton = null\r\n    },\r\n    _cleanScrolling: function() {\r\n        if (!this._scrollable) {\r\n            return\r\n        }\r\n        this._$wrapper.appendTo(this.$element());\r\n        this._scrollable.$element().remove();\r\n        this._scrollable = null;\r\n        this._cleanNavButtons()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = (0, _utils.render)()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _renderMultiple: function() {\r\n        if (\"multiple\" === this.option(\"selectionMode\")) {\r\n            this.option(\"selectOnFocus\", false)\r\n        }\r\n    },\r\n    _renderWrapper: function() {\r\n        this._$wrapper = (0, _renderer.default)(\"<div>\").addClass(TABS_WRAPPER_CLASS);\r\n        this.$element().append(this._$wrapper)\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$wrapper\r\n    },\r\n    _renderScrollable: function() {\r\n        var $itemContainer = this.$element().wrapInner((0, _renderer.default)(\"<div>\").addClass(TABS_SCROLLABLE_CLASS)).children();\r\n        this._scrollable = this._createComponent($itemContainer, _ui.default, {\r\n            direction: \"horizontal\",\r\n            showScrollbar: false,\r\n            useKeyboard: false,\r\n            useNative: false,\r\n            scrollByContent: this.option(\"scrollByContent\"),\r\n            onScroll: this._updateNavButtonsVisibility.bind(this)\r\n        });\r\n        this.$element().append(this._scrollable.$element())\r\n    },\r\n    _scrollToItem: function(itemData) {\r\n        if (!this._scrollable) {\r\n            return\r\n        }\r\n        var $item = this._editStrategy.getItemElement(itemData);\r\n        this._scrollable.scrollToElement($item)\r\n    },\r\n    _renderNavButtons: function() {\r\n        this.$element().toggleClass(TABS_NAV_BUTTONS_CLASS, this.option(\"showNavButtons\"));\r\n        if (!this.option(\"showNavButtons\")) {\r\n            return\r\n        }\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this._leftButton = this._createNavButton(-TAB_OFFSET, rtlEnabled ? BUTTON_NEXT_ICON : BUTTON_PREV_ICON);\r\n        var $leftButton = this._leftButton.$element();\r\n        $leftButton.addClass(TABS_LEFT_NAV_BUTTON_CLASS);\r\n        this.$element().prepend($leftButton);\r\n        this._rightButton = this._createNavButton(TAB_OFFSET, rtlEnabled ? BUTTON_PREV_ICON : BUTTON_NEXT_ICON);\r\n        var $rightButton = this._rightButton.$element();\r\n        $rightButton.addClass(TABS_RIGHT_NAV_BUTTON_CLASS);\r\n        this.$element().append($rightButton)\r\n    },\r\n    _updateNavButtonsVisibility: function() {\r\n        this._leftButton && this._leftButton.option(\"disabled\", this._scrollable.scrollLeft() <= 0);\r\n        this._rightButton && this._rightButton.option(\"disabled\", this._scrollable.scrollLeft() >= Math.round(this._scrollable.scrollWidth() - this._scrollable.clientWidth()))\r\n    },\r\n    _updateScrollPosition: function(offset, duration) {\r\n        this._scrollable.update();\r\n        this._scrollable.scrollBy(offset / duration)\r\n    },\r\n    _createNavButton: function(offset, icon) {\r\n        var that = this;\r\n        var holdAction = that._createAction(function() {\r\n            that._holdInterval = setInterval(function() {\r\n                that._updateScrollPosition(offset, FEEDBACK_DURATION_INTERVAL)\r\n            }, FEEDBACK_DURATION_INTERVAL)\r\n        });\r\n        var holdEventName = (0, _index.addNamespace)(_hold.default.name, \"dxNavButton\");\r\n        var pointerUpEventName = (0, _index.addNamespace)(_pointer.default.up, \"dxNavButton\");\r\n        var pointerOutEventName = (0, _index.addNamespace)(_pointer.default.out, \"dxNavButton\");\r\n        var navButton = this._createComponent((0, _renderer.default)(\"<div>\").addClass(TABS_NAV_BUTTON_CLASS), _button.default, {\r\n            focusStateEnabled: false,\r\n            icon: icon,\r\n            onClick: function() {\r\n                that._updateScrollPosition(offset, 1)\r\n            },\r\n            integrationOptions: {}\r\n        });\r\n        var $navButton = navButton.$element();\r\n        _events_engine.default.on($navButton, holdEventName, {\r\n            timeout: FEEDBACK_SCROLL_TIMEOUT\r\n        }, function(e) {\r\n            holdAction({\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        _events_engine.default.on($navButton, pointerUpEventName, function() {\r\n            that._clearInterval()\r\n        });\r\n        _events_engine.default.on($navButton, pointerOutEventName, function() {\r\n            that._clearInterval()\r\n        });\r\n        return navButton\r\n    },\r\n    _clearInterval: function() {\r\n        if (this._holdInterval) {\r\n            clearInterval(this._holdInterval)\r\n        }\r\n    },\r\n    _updateSelection: function(addedSelection) {\r\n        this._scrollable && this._scrollable.scrollToElement(this.itemElements().eq(addedSelection[0]), {\r\n            left: 1,\r\n            right: 1\r\n        })\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._renderScrolling()\r\n    },\r\n    _itemSelectHandler: function(e) {\r\n        if (\"single\" === this.option(\"selectionMode\") && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _clean: function() {\r\n        this._deferredTemplates = [];\r\n        this._cleanScrolling();\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useInkRipple\":\r\n            case \"scrollingEnabled\":\r\n            case \"showNavButtons\":\r\n                this._invalidate();\r\n                break;\r\n            case \"scrollByContent\":\r\n                this._scrollable && this._scrollable.option(args.name, args.value);\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"selectionMode\":\r\n                this._renderMultiple();\r\n                this.callBase(args);\r\n                break;\r\n            case \"badgeExpr\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _afterItemElementInserted: function() {\r\n        this.callBase();\r\n        this._deferRenderScrolling()\r\n    },\r\n    _afterItemElementDeleted: function($item, deletedActionArgs) {\r\n        this.callBase($item, deletedActionArgs);\r\n        this._renderScrolling()\r\n    }\r\n});\r\nTabs.ItemClass = _item.default;\r\n(0, _component_registrator.default)(\"dxTabs\", Tabs);\r\nvar _default = Tabs;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/tabs/constants.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.TABS_EXPANDED_CLASS = void 0;\r\nvar TABS_EXPANDED_CLASS = \"dx-tabs-expanded\";\r\nexports.TABS_EXPANDED_CLASS = TABS_EXPANDED_CLASS;\r\n","/**\r\n * DevExtreme (ui/tabs/item.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _item = _interopRequireDefault(require(\"../collection/item\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TABS_ITEM_BADGE_CLASS = \"dx-tabs-item-badge\";\r\nvar BADGE_CLASS = \"dx-badge\";\r\nvar TabsItem = _item.default.inherit({\r\n    _renderWatchers: function() {\r\n        this.callBase();\r\n        this._startWatcher(\"badge\", this._renderBadge.bind(this))\r\n    },\r\n    _renderBadge: function(badge) {\r\n        this._$element.children(\".\" + BADGE_CLASS).remove();\r\n        if (!badge) {\r\n            return\r\n        }\r\n        var $badge = (0, _renderer.default)(\"<div>\").addClass(TABS_ITEM_BADGE_CLASS).addClass(BADGE_CLASS).text(badge);\r\n        this._$element.append($badge)\r\n    }\r\n});\r\nvar _default = TabsItem;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _text_box = _interopRequireDefault(require(\"./text_box/text_box\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _text_box.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/text_box/text_box.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.text_editor\"));\r\nvar _index = require(\"../../events/utils/index\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar navigator = (0, _window.getNavigator)();\r\nvar ua = navigator.userAgent;\r\nvar ignoreKeys = [\"backspace\", \"tab\", \"enter\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"rightArrow\", \"downArrow\", \"upArrow\", \"del\"];\r\nvar TEXTBOX_CLASS = \"dx-textbox\";\r\nvar SEARCHBOX_CLASS = \"dx-searchbox\";\r\nvar ICON_CLASS = \"dx-icon\";\r\nvar SEARCH_ICON_CLASS = \"dx-icon-search\";\r\nvar TextBox = _ui.default.inherit({\r\n    ctor: function(element, options) {\r\n        if (options) {\r\n            this._showClearButton = options.showClearButton\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: \"\",\r\n            mode: \"text\",\r\n            maxLength: null\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTBOX_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"textbox\")\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderMaxLengthHandlers();\r\n        this.callBase()\r\n    },\r\n    _renderInputType: function() {\r\n        this.callBase();\r\n        this._renderSearchMode()\r\n    },\r\n    _renderMaxLengthHandlers: function() {\r\n        if (this._isAndroidOrIE()) {\r\n            _events_engine.default.on(this._input(), (0, _index.addNamespace)(\"keydown\", this.NAME), this._onKeyDownCutOffHandler.bind(this));\r\n            _events_engine.default.on(this._input(), (0, _index.addNamespace)(\"change\", this.NAME), this._onChangeCutOffHandler.bind(this))\r\n        }\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._toggleMaxLengthProp()\r\n    },\r\n    _toggleMaxLengthProp: function() {\r\n        var maxLength = this._getMaxLength();\r\n        if (maxLength && maxLength > 0) {\r\n            this._input().attr(\"maxLength\", maxLength)\r\n        } else {\r\n            this._input().removeAttr(\"maxLength\")\r\n        }\r\n    },\r\n    _renderSearchMode: function() {\r\n        var $element = this._$element;\r\n        if (\"search\" === this.option(\"mode\")) {\r\n            $element.addClass(SEARCHBOX_CLASS);\r\n            this._renderSearchIcon();\r\n            if (void 0 === this._showClearButton) {\r\n                this._showClearButton = this.option(\"showClearButton\");\r\n                this.option(\"showClearButton\", true)\r\n            }\r\n        } else {\r\n            $element.removeClass(SEARCHBOX_CLASS);\r\n            this._$searchIcon && this._$searchIcon.remove();\r\n            this.option(\"showClearButton\", void 0 === this._showClearButton ? this.option(\"showClearButton\") : this._showClearButton);\r\n            delete this._showClearButton\r\n        }\r\n    },\r\n    _renderSearchIcon: function() {\r\n        var $searchIcon = (0, _renderer.default)(\"<div>\").addClass(ICON_CLASS).addClass(SEARCH_ICON_CLASS);\r\n        $searchIcon.prependTo(this._input().parent());\r\n        this._$searchIcon = $searchIcon\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"maxLength\":\r\n                this._toggleMaxLengthProp();\r\n                this._renderMaxLengthHandlers();\r\n                break;\r\n            case \"mask\":\r\n                this.callBase(args);\r\n                this._toggleMaxLengthProp();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _onKeyDownCutOffHandler: function(e) {\r\n        var actualMaxLength = this._getMaxLength();\r\n        if (actualMaxLength && !e.ctrlKey && !this._hasSelection()) {\r\n            var $input = (0, _renderer.default)(e.target);\r\n            var key = (0, _index.normalizeKeyName)(e);\r\n            this._cutOffExtraChar($input);\r\n            return $input.val().length < actualMaxLength || (0, _array.inArray)(key, ignoreKeys) !== -1 || \"\" !== window.getSelection().toString()\r\n        } else {\r\n            return true\r\n        }\r\n    },\r\n    _onChangeCutOffHandler: function(e) {\r\n        var $input = (0, _renderer.default)(e.target);\r\n        if (this.option(\"maxLength\")) {\r\n            this._cutOffExtraChar($input)\r\n        }\r\n    },\r\n    _cutOffExtraChar: function($input) {\r\n        var actualMaxLength = this._getMaxLength();\r\n        var textInput = $input.val();\r\n        if (actualMaxLength && textInput.length > actualMaxLength) {\r\n            $input.val(textInput.substr(0, actualMaxLength))\r\n        }\r\n    },\r\n    _getMaxLength: function() {\r\n        var isMaskSpecified = !!this.option(\"mask\");\r\n        return isMaskSpecified ? null : this.option(\"maxLength\")\r\n    },\r\n    _isAndroidOrIE: function() {\r\n        var realDevice = _devices.default.real();\r\n        var version = realDevice.version.join(\".\");\r\n        return _browser.default.msie || \"android\" === realDevice.platform && version && /^(2\\.|4\\.1)/.test(version) && !/chrome/i.test(ua)\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxTextBox\", TextBox);\r\nvar _default = TextBox;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/texteditor_button_collection/button.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TextEditorButton = function() {\r\n    function TextEditorButton(name, editor, options) {\r\n        this.instance = null;\r\n        this.$container = null;\r\n        this.$placeMarker = null;\r\n        this.editor = editor;\r\n        this.name = name;\r\n        this.options = options || {}\r\n    }\r\n    var _proto = TextEditorButton.prototype;\r\n    _proto._addPlaceMarker = function($container) {\r\n        this.$placeMarker = (0, _renderer.default)(\"<div>\").appendTo($container)\r\n    };\r\n    _proto._addToContainer = function($element) {\r\n        var $placeMarker = this.$placeMarker,\r\n            $container = this.$container;\r\n        $placeMarker ? $placeMarker.replaceWith($element) : $element.appendTo($container)\r\n    };\r\n    _proto._attachEvents = function() {\r\n        throw \"Not implemented\"\r\n    };\r\n    _proto._create = function() {\r\n        throw \"Not implemented\"\r\n    };\r\n    _proto._isRendered = function() {\r\n        return !!this.instance\r\n    };\r\n    _proto._isVisible = function() {\r\n        var editor = this.editor,\r\n            options = this.options;\r\n        return options.visible || !editor.option(\"readOnly\")\r\n    };\r\n    _proto._isDisabled = function() {\r\n        throw \"Not implemented\"\r\n    };\r\n    _proto._shouldRender = function() {\r\n        return this._isVisible() && !this._isRendered()\r\n    };\r\n    _proto.dispose = function() {\r\n        var instance = this.instance,\r\n            $placeMarker = this.$placeMarker;\r\n        if (instance) {\r\n            instance.dispose ? instance.dispose() : instance.remove();\r\n            this.instance = null\r\n        }\r\n        $placeMarker && $placeMarker.remove()\r\n    };\r\n    _proto.render = function() {\r\n        var $container = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.$container;\r\n        this.$container = $container;\r\n        if (this._isVisible()) {\r\n            var _this$_create = this._create(),\r\n                instance = _this$_create.instance,\r\n                $element = _this$_create.$element;\r\n            this.instance = instance;\r\n            this._attachEvents(instance, $element)\r\n        } else {\r\n            this._addPlaceMarker($container)\r\n        }\r\n    };\r\n    _proto.update = function() {\r\n        if (this._shouldRender()) {\r\n            this.render()\r\n        }\r\n        return !!this.instance\r\n    };\r\n    return TextEditorButton\r\n}();\r\nexports.default = TextEditorButton;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/texteditor_button_collection/custom.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _button = _interopRequireDefault(require(\"./button\"));\r\nvar _button2 = _interopRequireDefault(require(\"../../button\"));\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../../events/core/events_engine\"));\r\nvar _hover = require(\"../../../events/hover\");\r\nvar _click = require(\"../../../events/click\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar CUSTOM_BUTTON_HOVERED_CLASS = \"dx-custom-button-hovered\";\r\nvar CustomButton = function(_TextEditorButton) {\r\n    _inheritsLoose(CustomButton, _TextEditorButton);\r\n\r\n    function CustomButton() {\r\n        return _TextEditorButton.apply(this, arguments) || this\r\n    }\r\n    var _proto = CustomButton.prototype;\r\n    _proto._attachEvents = function(instance, $element) {\r\n        var editor = this.editor;\r\n        _events_engine.default.on($element, _hover.start, function() {\r\n            editor.$element().addClass(CUSTOM_BUTTON_HOVERED_CLASS)\r\n        });\r\n        _events_engine.default.on($element, _hover.end, function() {\r\n            editor.$element().removeClass(CUSTOM_BUTTON_HOVERED_CLASS)\r\n        });\r\n        _events_engine.default.on($element, _click.name, function(e) {\r\n            e.stopPropagation()\r\n        })\r\n    };\r\n    _proto._create = function() {\r\n        var editor = this.editor;\r\n        var $element = (0, _renderer.default)(\"<div>\");\r\n        this._addToContainer($element);\r\n        var instance = editor._createComponent($element, _button2.default, (0, _extend.extend)({}, this.options, {\r\n            ignoreParentReadOnly: true,\r\n            disabled: this._isDisabled(),\r\n            integrationOptions: this._prepareIntegrationOptions(editor)\r\n        }));\r\n        return {\r\n            $element: $element,\r\n            instance: instance\r\n        }\r\n    };\r\n    _proto._prepareIntegrationOptions = function(editor) {\r\n        return (0, _extend.extend)({}, editor.option(\"integrationOptions\"), {\r\n            skipTemplates: [\"content\"]\r\n        })\r\n    };\r\n    _proto.update = function() {\r\n        var isUpdated = _TextEditorButton.prototype.update.call(this);\r\n        if (this.instance) {\r\n            this.instance.option(\"disabled\", this._isDisabled())\r\n        }\r\n        return isUpdated\r\n    };\r\n    _proto._isVisible = function() {\r\n        var editor = this.editor;\r\n        return editor.option(\"visible\")\r\n    };\r\n    _proto._isDisabled = function() {\r\n        var isDefinedByUser = void 0 !== this.options.disabled;\r\n        if (isDefinedByUser) {\r\n            return this.instance ? this.instance.option(\"disabled\") : this.options.disabled\r\n        } else {\r\n            return this.editor.option(\"readOnly\")\r\n        }\r\n    };\r\n    return CustomButton\r\n}(_button.default);\r\nexports.default = CustomButton;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/texteditor_button_collection/index.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../../core/renderer\"));\r\nvar _custom = _interopRequireDefault(require(\"./custom\"));\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _array = require(\"../../../core/utils/array\");\r\nvar _ui = _interopRequireDefault(require(\"../../widget/ui.errors\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\r\n        return typeof obj\r\n    } : function(obj) {\r\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n    }, _typeof(obj)\r\n}\r\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\r\n\r\nfunction checkButtonInfo(buttonInfo) {\r\n    var checkButtonType = function() {\r\n        if (!buttonInfo || \"object\" !== _typeof(buttonInfo) || Array.isArray(buttonInfo)) {\r\n            throw _ui.default.Error(\"E1053\")\r\n        }\r\n    };\r\n    var checkLocation = function() {\r\n        var location = buttonInfo.location;\r\n        if (\"location\" in buttonInfo && \"after\" !== location && \"before\" !== location) {\r\n            buttonInfo.location = \"after\"\r\n        }\r\n    };\r\n    var checkNameIsDefined = function() {\r\n        if (!(\"name\" in buttonInfo)) {\r\n            throw _ui.default.Error(\"E1054\")\r\n        }\r\n    };\r\n    var checkNameIsString = function() {\r\n        var name = buttonInfo.name;\r\n        if (\"string\" !== typeof name) {\r\n            throw _ui.default.Error(\"E1055\")\r\n        }\r\n    };\r\n    checkButtonType();\r\n    checkNameIsDefined();\r\n    checkNameIsString();\r\n    checkLocation()\r\n}\r\n\r\nfunction checkNamesUniqueness(existingNames, newName) {\r\n    if (existingNames.indexOf(newName) !== -1) {\r\n        throw _ui.default.Error(\"E1055\", newName)\r\n    }\r\n    existingNames.push(newName)\r\n}\r\n\r\nfunction isPredefinedButtonName(name, predefinedButtonsInfo) {\r\n    return !!(0, _array.find)(predefinedButtonsInfo, function(info) {\r\n        return info.name === name\r\n    })\r\n}\r\nvar TextEditorButtonCollection = function() {\r\n    function TextEditorButtonCollection(editor, defaultButtonsInfo) {\r\n        this.buttons = [];\r\n        this.defaultButtonsInfo = defaultButtonsInfo;\r\n        this.editor = editor\r\n    }\r\n    var _proto = TextEditorButtonCollection.prototype;\r\n    _proto._compileButtonInfo = function(buttons) {\r\n        var _this = this;\r\n        var names = [];\r\n        return buttons.map(function(button) {\r\n            var isStringButton = \"string\" === typeof button;\r\n            if (!isStringButton) {\r\n                checkButtonInfo(button)\r\n            }\r\n            var isDefaultButton = isStringButton || isPredefinedButtonName(button.name, _this.defaultButtonsInfo);\r\n            if (isDefaultButton) {\r\n                var defaultButtonInfo = (0, _array.find)(_this.defaultButtonsInfo, function(_ref) {\r\n                    var name = _ref.name;\r\n                    return name === button || name === button.name\r\n                });\r\n                if (!defaultButtonInfo) {\r\n                    throw _ui.default.Error(\"E1056\", _this.editor.NAME, button)\r\n                }\r\n                checkNamesUniqueness(names, button);\r\n                return defaultButtonInfo\r\n            } else {\r\n                var name = button.name;\r\n                checkNamesUniqueness(names, name);\r\n                return (0, _extend.extend)(button, {\r\n                    Ctor: _custom.default\r\n                })\r\n            }\r\n        })\r\n    };\r\n    _proto._createButton = function(buttonsInfo) {\r\n        var Ctor = buttonsInfo.Ctor,\r\n            options = buttonsInfo.options,\r\n            name = buttonsInfo.name;\r\n        var button = new Ctor(name, this.editor, options);\r\n        this.buttons.push(button);\r\n        return button\r\n    };\r\n    _proto._renderButtons = function(buttons, $container, targetLocation) {\r\n        var _this2 = this;\r\n        var $buttonsContainer = null;\r\n        var buttonsInfo = buttons ? this._compileButtonInfo(buttons) : this.defaultButtonsInfo;\r\n        var getButtonsContainer = function() {\r\n            $buttonsContainer = $buttonsContainer || (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_BUTTONS_CONTAINER_CLASS);\r\n            \"before\" === targetLocation ? $container.prepend($buttonsContainer) : $container.append($buttonsContainer);\r\n            return $buttonsContainer\r\n        };\r\n        buttonsInfo.forEach(function(buttonsInfo) {\r\n            var _buttonsInfo$location = buttonsInfo.location,\r\n                location = void 0 === _buttonsInfo$location ? \"after\" : _buttonsInfo$location;\r\n            if (location === targetLocation) {\r\n                _this2._createButton(buttonsInfo).render(getButtonsContainer())\r\n            }\r\n        });\r\n        return $buttonsContainer\r\n    };\r\n    _proto.clean = function() {\r\n        this.buttons.forEach(function(button) {\r\n            return button.dispose()\r\n        });\r\n        this.buttons = []\r\n    };\r\n    _proto.getButton = function(buttonName) {\r\n        var button = (0, _array.find)(this.buttons, function(_ref2) {\r\n            var name = _ref2.name;\r\n            return name === buttonName\r\n        });\r\n        return button && button.instance\r\n    };\r\n    _proto.renderAfterButtons = function(buttons, $container) {\r\n        return this._renderButtons(buttons, $container, \"after\")\r\n    };\r\n    _proto.renderBeforeButtons = function(buttons, $container) {\r\n        return this._renderButtons(buttons, $container, \"before\")\r\n    };\r\n    _proto.updateButtons = function(names) {\r\n        this.buttons.forEach(function(button) {\r\n            if (!names || names.indexOf(button.name) !== -1) {\r\n                button.update()\r\n            }\r\n        })\r\n    };\r\n    return TextEditorButtonCollection\r\n}();\r\nexports.default = TextEditorButtonCollection;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/ui.text_editor.base.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _themes = require(\"../themes\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _uiText_editor = _interopRequireDefault(require(\"./ui.text_editor.clear\"));\r\nvar _index2 = _interopRequireDefault(require(\"./texteditor_button_collection/index\"));\r\nvar _config = _interopRequireDefault(require(\"../../core/config\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TEXTEDITOR_CLASS = \"dx-texteditor\";\r\nvar TEXTEDITOR_INPUT_CONTAINER_CLASS = \"dx-texteditor-input-container\";\r\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\r\nvar TEXTEDITOR_INPUT_SELECTOR = \".\" + TEXTEDITOR_INPUT_CLASS;\r\nvar TEXTEDITOR_CONTAINER_CLASS = \"dx-texteditor-container\";\r\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\r\nvar TEXTEDITOR_PLACEHOLDER_CLASS = \"dx-placeholder\";\r\nvar TEXTEDITOR_EMPTY_INPUT_CLASS = \"dx-texteditor-empty\";\r\nvar TEXTEDITOR_STYLING_MODE_PREFIX = \"dx-editor-\";\r\nvar ALLOWED_STYLE_CLASSES = [TEXTEDITOR_STYLING_MODE_PREFIX + \"outlined\", TEXTEDITOR_STYLING_MODE_PREFIX + \"filled\", TEXTEDITOR_STYLING_MODE_PREFIX + \"underlined\"];\r\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\r\nvar TEXTEDITOR_PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar TEXTEDITOR_VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar TEXTEDITOR_VALID_CLASS = \"dx-valid\";\r\nvar EVENTS_LIST = [\"KeyDown\", \"KeyPress\", \"KeyUp\", \"Change\", \"Cut\", \"Copy\", \"Paste\", \"Input\"];\r\nvar CONTROL_KEYS = [\"tab\", \"enter\", \"shift\", \"control\", \"alt\", \"escape\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"upArrow\", \"rightArrow\", \"downArrow\"];\r\n\r\nfunction checkButtonsOptionType(buttons) {\r\n    if ((0, _type.isDefined)(buttons) && !Array.isArray(buttons)) {\r\n        throw _ui.default.Error(\"E1053\")\r\n    }\r\n}\r\nvar TextEditorBase = _editor.default.inherit({\r\n    ctor: function(_, options) {\r\n        if (options) {\r\n            checkButtonsOptionType(options.buttons)\r\n        }\r\n        this._buttonCollection = new _index2.default(this, this._getDefaultButtons());\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            buttons: void 0,\r\n            value: \"\",\r\n            spellcheck: false,\r\n            showClearButton: false,\r\n            valueChangeEvent: \"change\",\r\n            placeholder: \"\",\r\n            inputAttr: {},\r\n            onFocusIn: null,\r\n            onFocusOut: null,\r\n            onKeyDown: null,\r\n            onKeyPress: null,\r\n            onKeyUp: null,\r\n            onChange: null,\r\n            onInput: null,\r\n            onCut: null,\r\n            onCopy: null,\r\n            onPaste: null,\r\n            onEnterKey: null,\r\n            mode: \"text\",\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            text: void 0,\r\n            displayValueFormatter: function(value) {\r\n                return (0, _type.isDefined)(value) && false !== value ? value : \"\"\r\n            },\r\n            stylingMode: (0, _config.default)().editorStylingMode || \"outlined\",\r\n            showValidationMark: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = (0, _themes.current)();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return (0, _themes.isMaterial)(themeName)\r\n            },\r\n            options: {\r\n                stylingMode: (0, _config.default)().editorStylingMode || \"underlined\"\r\n            }\r\n        }])\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._deprecatedOptions, {\r\n            onKeyPress: {\r\n                since: \"20.1\",\r\n                message: \"This event is removed from the web standards and will be deprecated in modern browsers soon.\"\r\n            }\r\n        })\r\n    },\r\n    _getDefaultButtons: function() {\r\n        return [{\r\n            name: \"clear\",\r\n            Ctor: _uiText_editor.default\r\n        }]\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.option(\"showClearButton\") && !this.option(\"readOnly\")\r\n    },\r\n    _input: function() {\r\n        return this.$element().find(TEXTEDITOR_INPUT_SELECTOR).first()\r\n    },\r\n    _isFocused: function() {\r\n        return (0, _selectors.focused)(this._input()) || this.callBase()\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element()\r\n    },\r\n    _buttonsContainer: function() {\r\n        return this._inputWrapper().find(\".\" + TEXTEDITOR_BUTTONS_CONTAINER_CLASS).eq(0)\r\n    },\r\n    _isControlKey: function(key) {\r\n        return CONTROL_KEYS.indexOf(key) !== -1\r\n    },\r\n    _renderStylingMode: function() {\r\n        var _this = this;\r\n        var optionName = \"stylingMode\";\r\n        var optionValue = this.option(optionName);\r\n        ALLOWED_STYLE_CLASSES.forEach(function(className) {\r\n            return _this.$element().removeClass(className)\r\n        });\r\n        var stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + optionValue;\r\n        if (ALLOWED_STYLE_CLASSES.indexOf(stylingModeClass) === -1) {\r\n            var defaultOptionValue = this._getDefaultOptions()[optionName];\r\n            var platformOptionValue = this._convertRulesToOptions(this._defaultOptionsRules())[optionName];\r\n            stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + (platformOptionValue || defaultOptionValue)\r\n        }\r\n        this.$element().addClass(stylingModeClass);\r\n        this._updateButtonsStyling(optionValue)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTEDITOR_CLASS);\r\n        this._renderInput();\r\n        this._renderStylingMode();\r\n        this._renderInputType();\r\n        this._renderPlaceholder();\r\n        this._renderProps();\r\n        this.callBase();\r\n        this._renderValue()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderPlaceholder();\r\n        this._refreshValueChangeEvent();\r\n        this._renderEvents();\r\n        this._renderEnterKeyAction();\r\n        this._renderEmptinessEvent()\r\n    },\r\n    _renderInput: function() {\r\n        this._$buttonsContainer = this._$textEditorContainer = (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_CONTAINER_CLASS).appendTo(this.$element());\r\n        this._$textEditorInputContainer = (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_INPUT_CONTAINER_CLASS).appendTo(this._$textEditorContainer);\r\n        this._$textEditorInputContainer.append(this._createInput());\r\n        this._renderButtonContainers()\r\n    },\r\n    _getInputContainer: function() {\r\n        return this._$textEditorInputContainer\r\n    },\r\n    _renderPendingIndicator: function() {\r\n        this.$element().addClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\r\n        var $inputContainer = this._getInputContainer();\r\n        var $indicatorElement = (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_PENDING_INDICATOR_CLASS).appendTo($inputContainer);\r\n        this._pendingIndicator = this._createComponent($indicatorElement, _load_indicator.default)\r\n    },\r\n    _disposePendingIndicator: function() {\r\n        if (!this._pendingIndicator) {\r\n            return\r\n        }\r\n        this._pendingIndicator.dispose();\r\n        this._pendingIndicator.$element().remove();\r\n        this._pendingIndicator = null;\r\n        this.$element().removeClass(TEXTEDITOR_VALIDATION_PENDING_CLASS)\r\n    },\r\n    _renderValidationState: function() {\r\n        this.callBase();\r\n        var isPending = \"pending\" === this.option(\"validationStatus\");\r\n        var $element = this.$element();\r\n        if (isPending) {\r\n            !this._pendingIndicator && this._renderPendingIndicator();\r\n            this._showValidMark = false\r\n        } else {\r\n            if (\"invalid\" === this.option(\"validationStatus\")) {\r\n                this._showValidMark = false\r\n            }\r\n            if (!this._showValidMark && true === this.option(\"showValidationMark\")) {\r\n                this._showValidMark = \"valid\" === this.option(\"validationStatus\") && !!this._pendingIndicator\r\n            }\r\n            this._disposePendingIndicator()\r\n        }\r\n        $element.toggleClass(TEXTEDITOR_VALID_CLASS, !!this._showValidMark)\r\n    },\r\n    _renderButtonContainers: function() {\r\n        var buttons = this.option(\"buttons\");\r\n        this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(buttons, this._$buttonsContainer);\r\n        this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(buttons, this._$buttonsContainer)\r\n    },\r\n    _cleanButtonContainers: function() {\r\n        var _this$_$beforeButtons, _this$_$afterButtonsC;\r\n        null === (_this$_$beforeButtons = this._$beforeButtonsContainer) || void 0 === _this$_$beforeButtons ? void 0 : _this$_$beforeButtons.remove();\r\n        null === (_this$_$afterButtonsC = this._$afterButtonsContainer) || void 0 === _this$_$afterButtonsC ? void 0 : _this$_$afterButtonsC.remove();\r\n        this._buttonCollection.clean()\r\n    },\r\n    _clean: function() {\r\n        this._buttonCollection.clean();\r\n        this._disposePendingIndicator();\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this._$textEditorContainer = null;\r\n        this._$buttonsContainer = null;\r\n        this.callBase()\r\n    },\r\n    _createInput: function() {\r\n        var $input = (0, _renderer.default)(\"<input>\");\r\n        this._applyInputAttributes($input, this.option(\"inputAttr\"));\r\n        return $input\r\n    },\r\n    _setSubmitElementName: function(name) {\r\n        var inputAttrName = this.option(\"inputAttr.name\");\r\n        return this.callBase(name || inputAttrName || \"\")\r\n    },\r\n    _applyInputAttributes: function($input, customAttributes) {\r\n        var inputAttributes = (0, _extend.extend)(this._getDefaultAttributes(), customAttributes);\r\n        $input.attr(inputAttributes).addClass(TEXTEDITOR_INPUT_CLASS).css(\"minHeight\", this.option(\"height\") ? \"0\" : \"\")\r\n    },\r\n    _getDefaultAttributes: function() {\r\n        var defaultAttributes = {\r\n            autocomplete: \"off\"\r\n        };\r\n        var _devices$real = _devices.default.real(),\r\n            ios = _devices$real.ios,\r\n            mac = _devices$real.mac;\r\n        if (ios || mac) {\r\n            defaultAttributes.placeholder = \" \"\r\n        }\r\n        return defaultAttributes\r\n    },\r\n    _updateButtons: function(names) {\r\n        this._buttonCollection.updateButtons(names)\r\n    },\r\n    _updateButtonsStyling: function(editorStylingMode) {\r\n        var _this2 = this;\r\n        (0, _iterator.each)(this.option(\"buttons\"), function(_, _ref) {\r\n            var options = _ref.options,\r\n                buttonName = _ref.name;\r\n            if (options && !options.stylingMode && _this2.option(\"visible\")) {\r\n                var buttonInstance = _this2.getButton(buttonName);\r\n                buttonInstance.option && buttonInstance.option(\"stylingMode\", \"underlined\" === editorStylingMode ? \"text\" : \"contained\")\r\n            }\r\n        })\r\n    },\r\n    _renderValue: function() {\r\n        var renderInputPromise = this._renderInputValue();\r\n        return renderInputPromise.promise()\r\n    },\r\n    _renderInputValue: function(value) {\r\n        var _value;\r\n        value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"value\");\r\n        var text = this.option(\"text\");\r\n        var displayValue = this.option(\"displayValue\");\r\n        var displayValueFormatter = this.option(\"displayValueFormatter\");\r\n        if (void 0 !== displayValue && null !== value) {\r\n            text = displayValueFormatter(displayValue)\r\n        } else {\r\n            if (!(0, _type.isDefined)(text)) {\r\n                text = displayValueFormatter(value)\r\n            }\r\n        }\r\n        this.option(\"text\", text);\r\n        if (this._input().val() !== ((0, _type.isDefined)(text) ? text : \"\")) {\r\n            this._renderDisplayText(text)\r\n        } else {\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        this._input().val(text);\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _isValueValid: function() {\r\n        if (this._input().length) {\r\n            var validity = this._input().get(0).validity;\r\n            if (validity) {\r\n                return validity.valid\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _toggleEmptiness: function(isEmpty) {\r\n        this.$element().toggleClass(TEXTEDITOR_EMPTY_INPUT_CLASS, isEmpty);\r\n        this._togglePlaceholder(isEmpty)\r\n    },\r\n    _togglePlaceholder: function(isEmpty) {\r\n        this.$element().find(\".\".concat(TEXTEDITOR_PLACEHOLDER_CLASS)).eq(0).toggleClass(STATE_INVISIBLE_CLASS, !isEmpty)\r\n    },\r\n    _renderProps: function() {\r\n        this._toggleReadOnlyState();\r\n        this._toggleSpellcheckState();\r\n        this._toggleTabIndex()\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this.callBase.apply(this, arguments);\r\n        var $input = this._input();\r\n        $input.prop(\"disabled\", value)\r\n    },\r\n    _toggleTabIndex: function() {\r\n        var $input = this._input();\r\n        var disabled = this.option(\"disabled\");\r\n        var focusStateEnabled = this.option(\"focusStateEnabled\");\r\n        if (disabled || !focusStateEnabled) {\r\n            $input.attr(\"tabIndex\", -1)\r\n        } else {\r\n            $input.removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this._input().prop(\"readOnly\", this._readOnlyPropValue());\r\n        this.callBase()\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return this.option(\"readOnly\")\r\n    },\r\n    _toggleSpellcheckState: function() {\r\n        this._input().prop(\"spellcheck\", this.option(\"spellcheck\"))\r\n    },\r\n    _renderPlaceholder: function() {\r\n        this._renderPlaceholderMarkup();\r\n        this._attachPlaceholderEvents()\r\n    },\r\n    _renderPlaceholderMarkup: function() {\r\n        if (this._$placeholder) {\r\n            this._$placeholder.remove();\r\n            this._$placeholder = null\r\n        }\r\n        var $input = this._input();\r\n        var placeholderText = this.option(\"placeholder\");\r\n        var $placeholder = this._$placeholder = (0, _renderer.default)(\"<div>\").attr(\"data-dx_placeholder\", placeholderText);\r\n        $placeholder.insertAfter($input);\r\n        $placeholder.addClass(TEXTEDITOR_PLACEHOLDER_CLASS)\r\n    },\r\n    _attachPlaceholderEvents: function() {\r\n        var _this3 = this;\r\n        var startEvent = (0, _index.addNamespace)(_pointer.default.up, this.NAME);\r\n        _events_engine.default.on(this._$placeholder, startEvent, function() {\r\n            _events_engine.default.trigger(_this3._input(), \"focus\")\r\n        });\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _placeholder: function() {\r\n        return this._$placeholder || (0, _renderer.default)()\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        var $input = this._input();\r\n        e.stopPropagation();\r\n        this._saveValueChangeEvent(e);\r\n        this._clearValue();\r\n        !this._isFocused() && _events_engine.default.trigger($input, \"focus\");\r\n        _events_engine.default.trigger($input, \"input\")\r\n    },\r\n    _clearValue: function() {\r\n        this.reset()\r\n    },\r\n    _renderEvents: function() {\r\n        var _this4 = this;\r\n        var $input = this._input();\r\n        (0, _iterator.each)(EVENTS_LIST, function(_, event) {\r\n            if (_this4.hasActionSubscription(\"on\" + event)) {\r\n                var action = _this4._createActionByOption(\"on\" + event, {\r\n                    excludeValidators: [\"readOnly\"]\r\n                });\r\n                _events_engine.default.on($input, (0, _index.addNamespace)(event.toLowerCase(), _this4.NAME), function(e) {\r\n                    if (_this4._disposed) {\r\n                        return\r\n                    }\r\n                    action({\r\n                        event: e\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _refreshEvents: function() {\r\n        var _this5 = this;\r\n        var $input = this._input();\r\n        (0, _iterator.each)(EVENTS_LIST, function(_, event) {\r\n            _events_engine.default.off($input, (0, _index.addNamespace)(event.toLowerCase(), _this5.NAME))\r\n        });\r\n        this._renderEvents()\r\n    },\r\n    _keyPressHandler: function() {\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var $input = this._input();\r\n        var isCtrlEnter = e.ctrlKey && \"enter\" === (0, _index.normalizeKeyName)(e);\r\n        var isNewValue = $input.val() !== this.option(\"value\");\r\n        if (isCtrlEnter && isNewValue) {\r\n            _events_engine.default.trigger($input, \"change\")\r\n        }\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        var keyPressEvent = (0, _index.addNamespace)(this._renderValueEventName(), \"\".concat(this.NAME, \"TextChange\"));\r\n        var valueChangeEvent = (0, _index.addNamespace)(this.option(\"valueChangeEvent\"), \"\".concat(this.NAME, \"ValueChange\"));\r\n        var keyDownEvent = (0, _index.addNamespace)(\"keydown\", \"\".concat(this.NAME, \"TextChange\"));\r\n        var $input = this._input();\r\n        _events_engine.default.on($input, keyPressEvent, this._keyPressHandler.bind(this));\r\n        _events_engine.default.on($input, valueChangeEvent, this._valueChangeEventHandler.bind(this));\r\n        _events_engine.default.on($input, keyDownEvent, this._keyDownHandler.bind(this))\r\n    },\r\n    _cleanValueChangeEvent: function() {\r\n        var valueChangeNamespace = \".\".concat(this.NAME, \"ValueChange\");\r\n        var textChangeNamespace = \".\".concat(this.NAME, \"TextChange\");\r\n        _events_engine.default.off(this._input(), valueChangeNamespace);\r\n        _events_engine.default.off(this._input(), textChangeNamespace)\r\n    },\r\n    _refreshValueChangeEvent: function() {\r\n        this._cleanValueChangeEvent();\r\n        this._renderValueChangeEvent()\r\n    },\r\n    _renderValueEventName: function() {\r\n        return \"input change keypress\"\r\n    },\r\n    _focusTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusEventTarget: function() {\r\n        return this.element()\r\n    },\r\n    _isInput: function(element) {\r\n        return element === this._input().get(0)\r\n    },\r\n    _preventNestedFocusEvent: function(event) {\r\n        if (event.isDefaultPrevented()) {\r\n            return true\r\n        }\r\n        var result = this._isNestedTarget(event.relatedTarget);\r\n        if (\"focusin\" === event.type) {\r\n            result = result && this._isNestedTarget(event.target) && !this._isInput(event.target)\r\n        }\r\n        result && event.preventDefault();\r\n        return result\r\n    },\r\n    _isNestedTarget: function(target) {\r\n        return !!this.$element().find(target).length\r\n    },\r\n    _focusClassTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _focusInHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _focusOutHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _toggleFocusClass: function(isFocused, $element) {\r\n        this.callBase(isFocused, this._focusClassTarget($element))\r\n    },\r\n    _hasFocusClass: function(element) {\r\n        return this.callBase((0, _renderer.default)(element || this.$element()))\r\n    },\r\n    _renderEmptinessEvent: function() {\r\n        var $input = this._input();\r\n        _events_engine.default.on($input, \"input blur\", this._toggleEmptinessEventHandler.bind(this))\r\n    },\r\n    _toggleEmptinessEventHandler: function() {\r\n        var text = this._input().val();\r\n        var isEmpty = (\"\" === text || null === text) && this._isValueValid();\r\n        this._toggleEmptiness(isEmpty)\r\n    },\r\n    _valueChangeEventHandler: function(e, formattedValue) {\r\n        if (this.option(\"readOnly\")) {\r\n            return\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this.option(\"value\", arguments.length > 1 ? formattedValue : this._input().val());\r\n        this._saveValueChangeEvent(void 0)\r\n    },\r\n    _renderEnterKeyAction: function() {\r\n        this._enterKeyAction = this._createActionByOption(\"onEnterKey\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        });\r\n        _events_engine.default.off(this._input(), \"keyup.onEnterKey.dxTextEditor\");\r\n        _events_engine.default.on(this._input(), \"keyup.onEnterKey.dxTextEditor\", this._enterKeyHandlerUp.bind(this))\r\n    },\r\n    _enterKeyHandlerUp: function(e) {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        if (\"enter\" === (0, _index.normalizeKeyName)(e)) {\r\n            this._enterKeyAction({\r\n                event: e\r\n            })\r\n        }\r\n    },\r\n    _updateValue: function() {\r\n        this._options.silent(\"text\", null);\r\n        this._renderValue()\r\n    },\r\n    _dispose: function() {\r\n        this._enterKeyAction = void 0;\r\n        this.callBase()\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._input()\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name,\r\n            fullName = args.fullName,\r\n            value = args.value;\r\n        if ((0, _array.inArray)(name.replace(\"on\", \"\"), EVENTS_LIST) > -1) {\r\n            this._refreshEvents();\r\n            return\r\n        }\r\n        switch (name) {\r\n            case \"valueChangeEvent\":\r\n                this._refreshValueChangeEvent();\r\n                this._refreshFocusEvent();\r\n                this._refreshEvents();\r\n                break;\r\n            case \"onValueChanged\":\r\n                this._createValueChangeAction();\r\n                break;\r\n            case \"focusStateEnabled\":\r\n                this.callBase(args);\r\n                this._toggleTabIndex();\r\n                break;\r\n            case \"spellcheck\":\r\n                this._toggleSpellcheckState();\r\n                break;\r\n            case \"mode\":\r\n                this._renderInputType();\r\n                break;\r\n            case \"onEnterKey\":\r\n                this._renderEnterKeyAction();\r\n                break;\r\n            case \"placeholder\":\r\n                this._renderPlaceholder();\r\n                break;\r\n            case \"readOnly\":\r\n            case \"disabled\":\r\n                this._updateButtons();\r\n                this.callBase(args);\r\n                break;\r\n            case \"showClearButton\":\r\n                this._updateButtons([\"clear\"]);\r\n                break;\r\n            case \"text\":\r\n                break;\r\n            case \"value\":\r\n                this._updateValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"inputAttr\":\r\n                this._applyInputAttributes(this._input(), this.option(name));\r\n                break;\r\n            case \"stylingMode\":\r\n                this._renderStylingMode();\r\n                break;\r\n            case \"buttons\":\r\n                if (fullName === name) {\r\n                    checkButtonsOptionType(value)\r\n                }\r\n                this._cleanButtonContainers();\r\n                this._renderButtonContainers();\r\n                this._updateButtonsStyling(this.option(\"stylingMode\"));\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (value && this.option(\"buttons\")) {\r\n                    this._cleanButtonContainers();\r\n                    this._renderButtonContainers();\r\n                    this._updateButtonsStyling(this.option(\"stylingMode\"))\r\n                }\r\n                break;\r\n            case \"displayValueFormatter\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationMark\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _renderInputType: function() {\r\n        this._setInputType(this.option(\"mode\"))\r\n    },\r\n    _setInputType: function(type) {\r\n        var input = this._input();\r\n        if (\"search\" === type) {\r\n            type = \"text\"\r\n        }\r\n        try {\r\n            input.prop(\"type\", type)\r\n        } catch (e) {\r\n            input.prop(\"type\", \"text\")\r\n        }\r\n    },\r\n    getButton: function(name) {\r\n        return this._buttonCollection.getButton(name)\r\n    },\r\n    focus: function() {\r\n        _events_engine.default.trigger(this._input(), \"focus\")\r\n    },\r\n    blur: function() {\r\n        if (this._input().is(_dom_adapter.default.getActiveElement())) {\r\n            (0, _dom.resetActiveElement)()\r\n        }\r\n    },\r\n    reset: function() {\r\n        if (this._showValidMark) {\r\n            this._showValidMark = false;\r\n            this._renderValidationState()\r\n        }\r\n        var defaultOptions = this._getDefaultOptions();\r\n        if (this.option(\"value\") === defaultOptions.value) {\r\n            this._options.silent(\"text\", \"\");\r\n            this._renderValue()\r\n        } else {\r\n            this.option(\"value\", defaultOptions.value)\r\n        }\r\n    },\r\n    on: function(eventName, eventHandler) {\r\n        var result = this.callBase(eventName, eventHandler);\r\n        var event = eventName.charAt(0).toUpperCase() + eventName.substr(1);\r\n        if (EVENTS_LIST.indexOf(event) >= 0) {\r\n            this._refreshEvents()\r\n        }\r\n        return result\r\n    }\r\n});\r\nvar _default = TextEditorBase;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/ui.text_editor.clear.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _button = _interopRequireDefault(require(\"./texteditor_button_collection/button\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _click = require(\"../../events/click\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar pointerDown = _pointer.default.down;\r\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\r\nvar TEXTEDITOR_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\r\nvar TEXTEDITOR_CLEAR_ICON_CLASS = \"dx-icon-clear\";\r\nvar TEXTEDITOR_ICON_CLASS = \"dx-icon\";\r\nvar TEXTEDITOR_SHOW_CLEAR_BUTTON_CLASS = \"dx-show-clear-button\";\r\nvar ClearButton = function(_TextEditorButton) {\r\n    _inheritsLoose(ClearButton, _TextEditorButton);\r\n\r\n    function ClearButton() {\r\n        return _TextEditorButton.apply(this, arguments) || this\r\n    }\r\n    var _proto = ClearButton.prototype;\r\n    _proto._create = function() {\r\n        var $element = (0, _renderer.default)(\"<span>\").addClass(TEXTEDITOR_CLEAR_BUTTON_CLASS).append((0, _renderer.default)(\"<span>\").addClass(TEXTEDITOR_ICON_CLASS).addClass(TEXTEDITOR_CLEAR_ICON_CLASS));\r\n        this._addToContainer($element);\r\n        this.update(true);\r\n        return {\r\n            instance: $element,\r\n            $element: $element\r\n        }\r\n    };\r\n    _proto._isVisible = function() {\r\n        var editor = this.editor;\r\n        return editor._isClearButtonVisible()\r\n    };\r\n    _proto._attachEvents = function(instance, $button) {\r\n        var editor = this.editor;\r\n        var editorName = editor.NAME;\r\n        _events_engine.default.on($button, (0, _index.addNamespace)(pointerDown, editorName), function(e) {\r\n            e.preventDefault();\r\n            if (\"mouse\" !== e.pointerType) {\r\n                editor._clearValueHandler(e)\r\n            }\r\n        });\r\n        _events_engine.default.on($button, (0, _index.addNamespace)(_click.name, editorName), function(e) {\r\n            return editor._clearValueHandler(e)\r\n        })\r\n    };\r\n    _proto._legacyRender = function($editor, isVisible) {\r\n        $editor.toggleClass(TEXTEDITOR_SHOW_CLEAR_BUTTON_CLASS, isVisible)\r\n    };\r\n    _proto.update = function() {\r\n        var rendered = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        !rendered && _TextEditorButton.prototype.update.call(this);\r\n        var editor = this.editor,\r\n            instance = this.instance;\r\n        var $editor = editor.$element();\r\n        var isVisible = this._isVisible();\r\n        instance && instance.toggleClass(STATE_INVISIBLE_CLASS, !isVisible);\r\n        this._legacyRender($editor, isVisible)\r\n    };\r\n    return ClearButton\r\n}(_button.default);\r\nexports.default = ClearButton;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/ui.text_editor.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _uiText_editor = _interopRequireDefault(require(\"./ui.text_editor.mask\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}(0, _component_registrator.default)(\"dxTextEditor\", _uiText_editor.default);\r\nvar _default = _uiText_editor.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/ui.text_editor.mask.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _utils = _interopRequireDefault(require(\"./utils.caret\"));\r\nvar _utils2 = require(\"./utils.support\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _string = require(\"../../core/utils/string\");\r\nvar _wheel = require(\"../../events/core/wheel\");\r\nvar _uiText_editorMask = require(\"./ui.text_editor.mask.rule\");\r\nvar _uiText_editor = _interopRequireDefault(require(\"./ui.text_editor.base\"));\r\nvar _uiText_editorMaskStrategy = _interopRequireDefault(require(\"./ui.text_editor.mask.strategy.default\"));\r\nvar _uiText_editorMaskStrategy2 = _interopRequireDefault(require(\"./ui.text_editor.mask.strategy.input_events\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar stubCaret = function() {\r\n    return {}\r\n};\r\nvar caret = _utils.default;\r\nvar EMPTY_CHAR = \" \";\r\nvar ESCAPED_CHAR = \"\\\\\";\r\nvar TEXTEDITOR_MASKED_CLASS = \"dx-texteditor-masked\";\r\nvar FORWARD_DIRECTION = \"forward\";\r\nvar BACKWARD_DIRECTION = \"backward\";\r\nvar buildInMaskRules = {\r\n    0: /[0-9]/,\r\n    9: /[0-9\\s]/,\r\n    \"#\": /[-+0-9\\s]/,\r\n    L: function(char) {\r\n        return isLiteralChar(char)\r\n    },\r\n    l: function(char) {\r\n        return isLiteralChar(char) || isSpaceChar(char)\r\n    },\r\n    C: /\\S/,\r\n    c: /./,\r\n    A: function(char) {\r\n        return isLiteralChar(char) || isNumericChar(char)\r\n    },\r\n    a: function(char) {\r\n        return isLiteralChar(char) || isNumericChar(char) || isSpaceChar(char)\r\n    }\r\n};\r\n\r\nfunction isNumericChar(char) {\r\n    return /[0-9]/.test(char)\r\n}\r\n\r\nfunction isLiteralChar(char) {\r\n    var code = char.charCodeAt();\r\n    return 64 < code && code < 91 || 96 < code && code < 123 || code > 127\r\n}\r\n\r\nfunction isSpaceChar(char) {\r\n    return \" \" === char\r\n}\r\nvar TextEditorMask = _uiText_editor.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            mask: \"\",\r\n            maskChar: \"_\",\r\n            maskRules: {},\r\n            maskInvalidMessage: _message.default.format(\"validation-mask\"),\r\n            useMaskedValue: false,\r\n            showMaskMode: \"always\"\r\n        })\r\n    },\r\n    _supportedKeys: function() {\r\n        var that = this;\r\n        var keyHandlerMap = {\r\n            backspace: that._maskStrategy.getHandler(\"backspace\"),\r\n            del: that._maskStrategy.getHandler(\"del\"),\r\n            enter: that._changeHandler\r\n        };\r\n        var result = that.callBase();\r\n        (0, _iterator.each)(keyHandlerMap, function(key, callback) {\r\n            var parentHandler = result[key];\r\n            result[key] = function(e) {\r\n                that.option(\"mask\") && callback.call(that, e);\r\n                parentHandler && parentHandler(e)\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    _getSubmitElement: function() {\r\n        return !this.option(\"mask\") ? this.callBase() : this._$hiddenElement\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initMaskStrategy()\r\n    },\r\n    _initMaskStrategy: function() {\r\n        this._maskStrategy = (0, _utils2.isInputEventsL2Supported)() ? new _uiText_editorMaskStrategy2.default(this) : new _uiText_editorMaskStrategy.default(this)\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderHiddenElement();\r\n        this.callBase()\r\n    },\r\n    _attachMouseWheelEventHandlers: function() {\r\n        var hasMouseWheelHandler = this._onMouseWheel !== _common.noop;\r\n        if (!hasMouseWheelHandler) {\r\n            return\r\n        }\r\n        var input = this._input();\r\n        var eventName = (0, _index.addNamespace)(_wheel.name, this.NAME);\r\n        var mouseWheelAction = this._createAction(function(e) {\r\n            var event = e.event;\r\n            if ((0, _selectors.focused)(input) && !(0, _index.isCommandKeyPressed)(event)) {\r\n                this._onMouseWheel(event);\r\n                event.preventDefault();\r\n                event.stopPropagation()\r\n            }\r\n        }.bind(this));\r\n        _events_engine.default.off(input, eventName);\r\n        _events_engine.default.on(input, eventName, function(e) {\r\n            mouseWheelAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _onMouseWheel: _common.noop,\r\n    _render: function() {\r\n        this._renderMask();\r\n        this.callBase();\r\n        this._attachMouseWheelEventHandlers()\r\n    },\r\n    _renderHiddenElement: function() {\r\n        if (this.option(\"mask\")) {\r\n            this._$hiddenElement = (0, _renderer.default)(\"<input>\").attr(\"type\", \"hidden\").appendTo(this._inputWrapper())\r\n        }\r\n    },\r\n    _removeHiddenElement: function() {\r\n        this._$hiddenElement && this._$hiddenElement.remove()\r\n    },\r\n    _renderMask: function() {\r\n        this.$element().removeClass(TEXTEDITOR_MASKED_CLASS);\r\n        this._maskRulesChain = null;\r\n        this._maskStrategy.detachEvents();\r\n        if (!this.option(\"mask\")) {\r\n            return\r\n        }\r\n        this.$element().addClass(TEXTEDITOR_MASKED_CLASS);\r\n        this._maskStrategy.attachEvents();\r\n        this._parseMask();\r\n        this._renderMaskedValue()\r\n    },\r\n    _suppressCaretChanging: function(callback, args) {\r\n        caret = stubCaret;\r\n        try {\r\n            callback.apply(this, args)\r\n        } finally {\r\n            caret = _utils.default\r\n        }\r\n    },\r\n    _changeHandler: function(e) {\r\n        var $input = this._input();\r\n        var inputValue = $input.val();\r\n        if (inputValue === this._changedValue) {\r\n            return\r\n        }\r\n        this._changedValue = inputValue;\r\n        var changeEvent = (0, _index.createEvent)(e, {\r\n            type: \"change\"\r\n        });\r\n        _events_engine.default.trigger($input, changeEvent)\r\n    },\r\n    _parseMask: function() {\r\n        this._maskRules = (0, _extend.extend)({}, buildInMaskRules, this.option(\"maskRules\"));\r\n        this._maskRulesChain = this._parseMaskRule(0)\r\n    },\r\n    _parseMaskRule: function(index) {\r\n        var mask = this.option(\"mask\");\r\n        if (index >= mask.length) {\r\n            return new _uiText_editorMask.EmptyMaskRule\r\n        }\r\n        var currentMaskChar = mask[index];\r\n        var isEscapedChar = currentMaskChar === ESCAPED_CHAR;\r\n        var result = isEscapedChar ? new _uiText_editorMask.StubMaskRule({\r\n            maskChar: mask[index + 1]\r\n        }) : this._getMaskRule(currentMaskChar);\r\n        result.next(this._parseMaskRule(index + 1 + isEscapedChar));\r\n        return result\r\n    },\r\n    _getMaskRule: function(pattern) {\r\n        var ruleConfig;\r\n        (0, _iterator.each)(this._maskRules, function(rulePattern, allowedChars) {\r\n            if (rulePattern === pattern) {\r\n                ruleConfig = {\r\n                    pattern: rulePattern,\r\n                    allowedChars: allowedChars\r\n                };\r\n                return false\r\n            }\r\n        });\r\n        return (0, _type.isDefined)(ruleConfig) ? new _uiText_editorMask.MaskRule((0, _extend.extend)({\r\n            maskChar: this.option(\"maskChar\")\r\n        }, ruleConfig)) : new _uiText_editorMask.StubMaskRule({\r\n            maskChar: pattern\r\n        })\r\n    },\r\n    _renderMaskedValue: function() {\r\n        if (!this._maskRulesChain) {\r\n            return\r\n        }\r\n        var value = this.option(\"value\") || \"\";\r\n        this._maskRulesChain.clear(this._normalizeChainArguments());\r\n        var chainArgs = {\r\n            length: value.length\r\n        };\r\n        chainArgs[this._isMaskedValueMode() ? \"text\" : \"value\"] = value;\r\n        this._handleChain(chainArgs);\r\n        this._displayMask()\r\n    },\r\n    _replaceSelectedText: function(text, selection, char) {\r\n        if (void 0 === char) {\r\n            return text\r\n        }\r\n        var textBefore = text.slice(0, selection.start);\r\n        var textAfter = text.slice(selection.end);\r\n        var edited = textBefore + char + textAfter;\r\n        return edited\r\n    },\r\n    _isMaskedValueMode: function() {\r\n        return this.option(\"useMaskedValue\")\r\n    },\r\n    _displayMask: function(caret) {\r\n        caret = caret || this._caret();\r\n        this._renderValue();\r\n        this._caret(caret)\r\n    },\r\n    _isValueEmpty: function() {\r\n        return (0, _string.isEmpty)(this._value)\r\n    },\r\n    _shouldShowMask: function() {\r\n        var showMaskMode = this.option(\"showMaskMode\");\r\n        if (\"onFocus\" === showMaskMode) {\r\n            return (0, _selectors.focused)(this._input()) || !this._isValueEmpty()\r\n        }\r\n        return true\r\n    },\r\n    _showMaskPlaceholder: function() {\r\n        if (this._shouldShowMask()) {\r\n            var text = this._maskRulesChain.text();\r\n            this.option(\"text\", text);\r\n            if (\"onFocus\" === this.option(\"showMaskMode\")) {\r\n                this._renderDisplayText(text)\r\n            }\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (this._maskRulesChain) {\r\n            this._showMaskPlaceholder();\r\n            if (this._$hiddenElement) {\r\n                var value = this._maskRulesChain.value();\r\n                var submitElementValue = !(0, _string.isEmpty)(value) ? this._getPreparedValue() : \"\";\r\n                this._$hiddenElement.val(submitElementValue)\r\n            }\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _getPreparedValue: function() {\r\n        return this._convertToValue().replace(/\\s+$/, \"\")\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (!this._maskRulesChain) {\r\n            this.callBase.apply(this, arguments);\r\n            return\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this.option(\"value\", this._getPreparedValue())\r\n    },\r\n    _isControlKeyFired: function(e) {\r\n        return this._isControlKey((0, _index.normalizeKeyName)(e)) || (0, _index.isCommandKeyPressed)(e)\r\n    },\r\n    _handleChain: function(args) {\r\n        var handledCount = this._maskRulesChain.handle(this._normalizeChainArguments(args));\r\n        this._value = this._maskRulesChain.value();\r\n        this._textValue = this._maskRulesChain.text();\r\n        return handledCount\r\n    },\r\n    _normalizeChainArguments: function(args) {\r\n        args = args || {};\r\n        args.index = 0;\r\n        args.fullText = this._maskRulesChain.text();\r\n        return args\r\n    },\r\n    _convertToValue: function(text) {\r\n        if (this._isMaskedValueMode()) {\r\n            text = this._replaceMaskCharWithEmpty(text || this._textValue || \"\")\r\n        } else {\r\n            text = text || this._value || \"\"\r\n        }\r\n        return text\r\n    },\r\n    _replaceMaskCharWithEmpty: function(text) {\r\n        return text.replace(new RegExp(this.option(\"maskChar\"), \"g\"), EMPTY_CHAR)\r\n    },\r\n    _maskKeyHandler: function(e, keyHandler) {\r\n        var _this = this;\r\n        if (this.option(\"readOnly\")) {\r\n            return\r\n        }\r\n        this.setForwardDirection();\r\n        e.preventDefault();\r\n        this._handleSelection();\r\n        var previousText = this._input().val();\r\n        var raiseInputEvent = function() {\r\n            if (previousText !== _this._input().val()) {\r\n                _this._maskStrategy.runWithoutEventProcessing(function() {\r\n                    return _events_engine.default.trigger(_this._input(), \"input\")\r\n                })\r\n            }\r\n        };\r\n        var handled = keyHandler();\r\n        if (handled) {\r\n            handled.then(raiseInputEvent)\r\n        } else {\r\n            this.setForwardDirection();\r\n            this._adjustCaret();\r\n            this._displayMask();\r\n            this._maskRulesChain.reset();\r\n            raiseInputEvent()\r\n        }\r\n    },\r\n    _handleKey: function(key, direction) {\r\n        this._direction(direction || FORWARD_DIRECTION);\r\n        this._adjustCaret(key);\r\n        this._handleKeyChain(key);\r\n        this._moveCaret()\r\n    },\r\n    _handleSelection: function() {\r\n        if (!this._hasSelection()) {\r\n            return\r\n        }\r\n        var caret = this._caret();\r\n        var emptyChars = new Array(caret.end - caret.start + 1).join(EMPTY_CHAR);\r\n        this._handleKeyChain(emptyChars)\r\n    },\r\n    _handleKeyChain: function(chars) {\r\n        var caret = this._caret();\r\n        var start = this.isForwardDirection() ? caret.start : caret.start - 1;\r\n        var end = this.isForwardDirection() ? caret.end : caret.end - 1;\r\n        var length = start === end ? 1 : end - start;\r\n        this._handleChain({\r\n            text: chars,\r\n            start: start,\r\n            length: length\r\n        })\r\n    },\r\n    _tryMoveCaretBackward: function() {\r\n        this.setBackwardDirection();\r\n        var currentCaret = this._caret().start;\r\n        this._adjustCaret();\r\n        return !currentCaret || currentCaret !== this._caret().start\r\n    },\r\n    _adjustCaret: function(char) {\r\n        var caretStart = this._caret().start;\r\n        var isForwardDirection = this.isForwardDirection();\r\n        var caret = this._maskRulesChain.adjustedCaret(caretStart, isForwardDirection, char);\r\n        this._caret({\r\n            start: caret,\r\n            end: caret\r\n        })\r\n    },\r\n    _moveCaret: function() {\r\n        var currentCaret = this._caret().start;\r\n        var maskRuleIndex = currentCaret + (this.isForwardDirection() ? 0 : -1);\r\n        var caret = this._maskRulesChain.isAccepted(maskRuleIndex) ? currentCaret + (this.isForwardDirection() ? 1 : -1) : currentCaret;\r\n        this._caret({\r\n            start: caret,\r\n            end: caret\r\n        })\r\n    },\r\n    _caret: function(position, force) {\r\n        var $input = this._input();\r\n        if (!$input.length) {\r\n            return\r\n        }\r\n        if (!arguments.length) {\r\n            return caret($input)\r\n        }\r\n        caret($input, position, force)\r\n    },\r\n    _hasSelection: function() {\r\n        var caret = this._caret();\r\n        return caret.start !== caret.end\r\n    },\r\n    _direction: function(direction) {\r\n        if (!arguments.length) {\r\n            return this._typingDirection\r\n        }\r\n        this._typingDirection = direction\r\n    },\r\n    setForwardDirection: function() {\r\n        this._direction(FORWARD_DIRECTION)\r\n    },\r\n    setBackwardDirection: function() {\r\n        this._direction(BACKWARD_DIRECTION)\r\n    },\r\n    isForwardDirection: function() {\r\n        return this._direction() === FORWARD_DIRECTION\r\n    },\r\n    _clean: function() {\r\n        this._maskStrategy && this._maskStrategy.clean();\r\n        this.callBase()\r\n    },\r\n    _validateMask: function() {\r\n        if (!this._maskRulesChain) {\r\n            return\r\n        }\r\n        var isValid = (0, _string.isEmpty)(this.option(\"value\")) || this._maskRulesChain.isValid(this._normalizeChainArguments());\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: this.option(\"maskInvalidMessage\")\r\n            }\r\n        })\r\n    },\r\n    _updateHiddenElement: function() {\r\n        this._removeHiddenElement();\r\n        if (this.option(\"mask\")) {\r\n            this._input().removeAttr(\"name\");\r\n            this._renderHiddenElement()\r\n        }\r\n        this._setSubmitElementName(this.option(\"name\"))\r\n    },\r\n    _updateMaskOption: function() {\r\n        this._updateHiddenElement();\r\n        this._renderMask();\r\n        this._validateMask()\r\n    },\r\n    _processEmptyMask: function(mask) {\r\n        if (mask) {\r\n            return\r\n        }\r\n        var value = this.option(\"value\");\r\n        this.option({\r\n            text: value,\r\n            isValid: true\r\n        });\r\n        this.validationRequest.fire({\r\n            value: value,\r\n            editor: this\r\n        });\r\n        this._renderValue()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"mask\":\r\n                this._updateMaskOption();\r\n                this._processEmptyMask(args.value);\r\n                break;\r\n            case \"maskChar\":\r\n            case \"maskRules\":\r\n            case \"useMaskedValue\":\r\n                this._updateMaskOption();\r\n                break;\r\n            case \"value\":\r\n                this._renderMaskedValue();\r\n                this._validateMask();\r\n                this.callBase(args);\r\n                this._changedValue = this._input().val();\r\n                break;\r\n            case \"maskInvalidMessage\":\r\n                break;\r\n            case \"showMaskMode\":\r\n                this.option(\"text\", \"\");\r\n                this._renderValue();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = TextEditorMask;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/ui.text_editor.mask.rule.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.StubMaskRule = exports.MaskRule = exports.EmptyMaskRule = void 0;\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _common = require(\"../../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar EMPTY_CHAR = \" \";\r\nvar BaseMaskRule = _class.default.inherit({\r\n    ctor: function(config) {\r\n        this._value = EMPTY_CHAR;\r\n        (0, _extend.extend)(this, config)\r\n    },\r\n    next: function(rule) {\r\n        if (!arguments.length) {\r\n            return this._next\r\n        }\r\n        this._next = rule\r\n    },\r\n    text: _common.noop,\r\n    value: _common.noop,\r\n    rawValue: _common.noop,\r\n    handle: _common.noop,\r\n    _prepareHandlingArgs: function(args, config) {\r\n        var _config$str, _config$start, _config$length;\r\n        config = config || {};\r\n        var handlingProperty = Object.prototype.hasOwnProperty.call(args, \"value\") ? \"value\" : \"text\";\r\n        args[handlingProperty] = null !== (_config$str = config.str) && void 0 !== _config$str ? _config$str : args[handlingProperty];\r\n        args.start = null !== (_config$start = config.start) && void 0 !== _config$start ? _config$start : args.start;\r\n        args.length = null !== (_config$length = config.length) && void 0 !== _config$length ? _config$length : args.length;\r\n        args.index = args.index + 1;\r\n        return args\r\n    },\r\n    reset: _common.noop,\r\n    clear: _common.noop,\r\n    first: function(index) {\r\n        index = index || 0;\r\n        return this.next().first(index + 1)\r\n    },\r\n    isAccepted: function() {\r\n        return false\r\n    },\r\n    adjustedCaret: function(caret, isForwardDirection, char) {\r\n        return isForwardDirection ? this._adjustedForward(caret, 0, char) : this._adjustedBackward(caret, 0, char)\r\n    },\r\n    _adjustedForward: _common.noop,\r\n    _adjustedBackward: _common.noop,\r\n    isValid: _common.noop\r\n});\r\nvar EmptyMaskRule = BaseMaskRule.inherit({\r\n    next: _common.noop,\r\n    handle: function() {\r\n        return 0\r\n    },\r\n    text: function() {\r\n        return \"\"\r\n    },\r\n    value: function() {\r\n        return \"\"\r\n    },\r\n    first: function() {\r\n        return 0\r\n    },\r\n    rawValue: function() {\r\n        return \"\"\r\n    },\r\n    adjustedCaret: function() {\r\n        return 0\r\n    },\r\n    isValid: function() {\r\n        return true\r\n    }\r\n});\r\nexports.EmptyMaskRule = EmptyMaskRule;\r\nvar MaskRule = BaseMaskRule.inherit({\r\n    text: function() {\r\n        return (this._value !== EMPTY_CHAR ? this._value : this.maskChar) + this.next().text()\r\n    },\r\n    value: function() {\r\n        return this._value + this.next().value()\r\n    },\r\n    rawValue: function() {\r\n        return this._value + this.next().rawValue()\r\n    },\r\n    handle: function(args) {\r\n        var str = Object.prototype.hasOwnProperty.call(args, \"value\") ? args.value : args.text;\r\n        if (!str || !str.length || !args.length) {\r\n            return 0\r\n        }\r\n        if (args.start) {\r\n            return this.next().handle(this._prepareHandlingArgs(args, {\r\n                start: args.start - 1\r\n            }))\r\n        }\r\n        var char = str[0];\r\n        var rest = str.substring(1);\r\n        this._tryAcceptChar(char, args);\r\n        return this._accepted() ? this.next().handle(this._prepareHandlingArgs(args, {\r\n            str: rest,\r\n            length: args.length - 1\r\n        })) + 1 : this.handle(this._prepareHandlingArgs(args, {\r\n            str: rest,\r\n            length: args.length - 1\r\n        }))\r\n    },\r\n    clear: function(args) {\r\n        this._tryAcceptChar(EMPTY_CHAR, args);\r\n        this.next().clear(this._prepareHandlingArgs(args))\r\n    },\r\n    reset: function() {\r\n        this._accepted(false);\r\n        this.next().reset()\r\n    },\r\n    _tryAcceptChar: function(char, args) {\r\n        this._accepted(false);\r\n        if (!this._isAllowed(char, args)) {\r\n            return\r\n        }\r\n        var acceptedChar = char === EMPTY_CHAR ? this.maskChar : char;\r\n        args.fullText = args.fullText.substring(0, args.index) + acceptedChar + args.fullText.substring(args.index + 1);\r\n        this._accepted(true);\r\n        this._value = char\r\n    },\r\n    _accepted: function(value) {\r\n        if (!arguments.length) {\r\n            return !!this._isAccepted\r\n        }\r\n        this._isAccepted = !!value\r\n    },\r\n    first: function(index) {\r\n        return this._value === EMPTY_CHAR ? index || 0 : this.callBase(index)\r\n    },\r\n    _isAllowed: function(char, args) {\r\n        if (char === EMPTY_CHAR) {\r\n            return true\r\n        }\r\n        return this._isValid(char, args)\r\n    },\r\n    _isValid: function(char, args) {\r\n        var allowedChars = this.allowedChars;\r\n        if (allowedChars instanceof RegExp) {\r\n            return allowedChars.test(char)\r\n        }\r\n        if ((0, _type.isFunction)(allowedChars)) {\r\n            return allowedChars(char, args.index, args.fullText)\r\n        }\r\n        if (Array.isArray(allowedChars)) {\r\n            return (0, _array.inArray)(char, allowedChars) > -1\r\n        }\r\n        return allowedChars === char\r\n    },\r\n    isAccepted: function(caret) {\r\n        return 0 === caret ? this._accepted() : this.next().isAccepted(caret - 1)\r\n    },\r\n    _adjustedForward: function(caret, index, char) {\r\n        if (index >= caret) {\r\n            return index\r\n        }\r\n        return this.next()._adjustedForward(caret, index + 1, char) || index + 1\r\n    },\r\n    _adjustedBackward: function(caret, index) {\r\n        if (index >= caret - 1) {\r\n            return caret\r\n        }\r\n        return this.next()._adjustedBackward(caret, index + 1) || index + 1\r\n    },\r\n    isValid: function(args) {\r\n        return this._isValid(this._value, args) && this.next().isValid(this._prepareHandlingArgs(args))\r\n    }\r\n});\r\nexports.MaskRule = MaskRule;\r\nvar StubMaskRule = MaskRule.inherit({\r\n    value: function() {\r\n        return this.next().value()\r\n    },\r\n    handle: function(args) {\r\n        var hasValueProperty = Object.prototype.hasOwnProperty.call(args, \"value\");\r\n        var str = hasValueProperty ? args.value : args.text;\r\n        if (!str.length || !args.length) {\r\n            return 0\r\n        }\r\n        if (args.start || hasValueProperty) {\r\n            return this.next().handle(this._prepareHandlingArgs(args, {\r\n                start: args.start && args.start - 1\r\n            }))\r\n        }\r\n        var char = str[0];\r\n        var rest = str.substring(1);\r\n        this._tryAcceptChar(char);\r\n        var nextArgs = this._isAllowed(char) ? this._prepareHandlingArgs(args, {\r\n            str: rest,\r\n            length: args.length - 1\r\n        }) : args;\r\n        return this.next().handle(nextArgs) + 1\r\n    },\r\n    clear: function(args) {\r\n        this._accepted(false);\r\n        this.next().clear(this._prepareHandlingArgs(args))\r\n    },\r\n    _tryAcceptChar: function(char) {\r\n        this._accepted(this._isValid(char))\r\n    },\r\n    _isValid: function(char) {\r\n        return char === this.maskChar\r\n    },\r\n    first: function(index) {\r\n        index = index || 0;\r\n        return this.next().first(index + 1)\r\n    },\r\n    _adjustedForward: function(caret, index, char) {\r\n        if (index >= caret && char === this.maskChar) {\r\n            return index\r\n        }\r\n        if (caret === index + 1 && this._accepted()) {\r\n            return caret\r\n        }\r\n        return this.next()._adjustedForward(caret, index + 1, char)\r\n    },\r\n    _adjustedBackward: function(caret, index) {\r\n        if (index >= caret - 1) {\r\n            return 0\r\n        }\r\n        return this.next()._adjustedBackward(caret, index + 1)\r\n    },\r\n    isValid: function(args) {\r\n        return this.next().isValid(this._prepareHandlingArgs(args))\r\n    }\r\n});\r\nexports.StubMaskRule = StubMaskRule;\r\n","/**\r\n * DevExtreme (ui/text_box/ui.text_editor.mask.strategy.base.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MASK_EVENT_NAMESPACE = \"dxMask\";\r\nvar BLUR_EVENT = \"blur beforedeactivate\";\r\nvar EMPTY_CHAR = \" \";\r\nvar BaseMaskStrategy = function() {\r\n    function BaseMaskStrategy(editor) {\r\n        this.editor = editor;\r\n        this.DIRECTION = {\r\n            FORWARD: \"forward\",\r\n            BACKWARD: \"backward\"\r\n        };\r\n        this.NAME = this._getStrategyName()\r\n    }\r\n    var _proto = BaseMaskStrategy.prototype;\r\n    _proto._getStrategyName = function() {\r\n        return \"base\"\r\n    };\r\n    _proto.editorOption = function() {\r\n        var _this$editor;\r\n        return (_this$editor = this.editor).option.apply(_this$editor, arguments)\r\n    };\r\n    _proto.editorInput = function() {\r\n        return this.editor._input()\r\n    };\r\n    _proto.editorCaret = function(newCaret) {\r\n        if (!newCaret) {\r\n            return this.editor._caret()\r\n        }\r\n        this.editor._caret(newCaret)\r\n    };\r\n    _proto.getHandler = function(handlerName) {\r\n        var handler = this[\"_\".concat(handlerName, \"Handler\")] || function() {};\r\n        return handler.bind(this)\r\n    };\r\n    _proto.attachEvents = function() {\r\n        var _this = this;\r\n        var $input = this.editorInput();\r\n        this.getHandleEventNames().forEach(function(eventName) {\r\n            var subscriptionName = (0, _index.addNamespace)(eventName.toLowerCase(), MASK_EVENT_NAMESPACE);\r\n            _events_engine.default.on($input, subscriptionName, _this.getEventHandler(eventName))\r\n        });\r\n        this._attachChangeEventHandlers()\r\n    };\r\n    _proto.getHandleEventNames = function() {\r\n        return [\"focusIn\", \"focusOut\", \"keyDown\", \"input\", \"paste\", \"cut\", \"drop\"]\r\n    };\r\n    _proto.getEventHandler = function(eventName) {\r\n        return this[\"_\".concat(eventName, \"Handler\")].bind(this)\r\n    };\r\n    _proto.detachEvents = function() {\r\n        _events_engine.default.off(this.editorInput(), \".\".concat(MASK_EVENT_NAMESPACE))\r\n    };\r\n    _proto._attachChangeEventHandlers = function() {\r\n        if ((0, _array.inArray)(\"change\", this.editorOption(\"valueChangeEvent\").split(\" \")) === -1) {\r\n            return\r\n        }\r\n        _events_engine.default.on(this.editorInput(), (0, _index.addNamespace)(BLUR_EVENT, MASK_EVENT_NAMESPACE), function(e) {\r\n            this._suppressCaretChanging(this._changeHandler, [e]);\r\n            this._changeHandler(e)\r\n        }.bind(this.editor))\r\n    };\r\n    _proto._focusInHandler = function() {\r\n        this.editor._showMaskPlaceholder();\r\n        this.editor._direction(this.DIRECTION.FORWARD);\r\n        if (!this.editor._isValueEmpty() && this.editorOption(\"isValid\")) {\r\n            this.editor._adjustCaret()\r\n        } else {\r\n            var caret = this.editor._maskRulesChain.first();\r\n            this._caretTimeout = setTimeout(function() {\r\n                this._caret({\r\n                    start: caret,\r\n                    end: caret\r\n                })\r\n            }.bind(this.editor), 0)\r\n        }\r\n    };\r\n    _proto._focusOutHandler = function(event) {\r\n        this.editor._changeHandler(event);\r\n        if (\"onFocus\" === this.editorOption(\"showMaskMode\") && this.editor._isValueEmpty()) {\r\n            this.editorOption(\"text\", \"\");\r\n            this.editor._renderDisplayText(\"\")\r\n        }\r\n    };\r\n    _proto._cutHandler = function(event) {\r\n        var caret = this.editorCaret();\r\n        var selectedText = this.editorInput().val().substring(caret.start, caret.end);\r\n        this.editor._maskKeyHandler(event, function() {\r\n            return (0, _dom.clipboardText)(event, selectedText)\r\n        })\r\n    };\r\n    _proto._dropHandler = function() {\r\n        this._clearDragTimer();\r\n        this._dragTimer = setTimeout(function() {\r\n            this.option(\"value\", this._convertToValue(this._input().val()))\r\n        }.bind(this.editor))\r\n    };\r\n    _proto._clearDragTimer = function() {\r\n        clearTimeout(this._dragTimer)\r\n    };\r\n    _proto._keyDownHandler = function() {\r\n        this._keyPressHandled = false\r\n    };\r\n    _proto._pasteHandler = function(event) {\r\n        var editor = this.editor;\r\n        this._keyPressHandled = true;\r\n        var caret = this.editorCaret();\r\n        editor._maskKeyHandler(event, function() {\r\n            var pastedText = (0, _dom.clipboardText)(event);\r\n            var restText = editor._maskRulesChain.text().substring(caret.end);\r\n            var accepted = editor._handleChain({\r\n                text: pastedText,\r\n                start: caret.start,\r\n                length: pastedText.length\r\n            });\r\n            var newCaret = caret.start + accepted;\r\n            editor._handleChain({\r\n                text: restText,\r\n                start: newCaret,\r\n                length: restText.length\r\n            });\r\n            editor._caret({\r\n                start: newCaret,\r\n                end: newCaret\r\n            })\r\n        })\r\n    };\r\n    _proto._autoFillHandler = function(event) {\r\n        var _this2 = this;\r\n        var editor = this.editor;\r\n        var inputVal = this.editorInput().val();\r\n        this._inputHandlerTimer = setTimeout(function() {\r\n            _this2._keyPressHandled = true;\r\n            if (_this2._isAutoFill()) {\r\n                _this2._keyPressHandled = true;\r\n                editor._maskKeyHandler(event, function() {\r\n                    editor._handleChain({\r\n                        text: inputVal,\r\n                        start: 0,\r\n                        length: inputVal.length\r\n                    })\r\n                });\r\n                editor._validateMask()\r\n            }\r\n        })\r\n    };\r\n    _proto._isAutoFill = function() {\r\n        var $input = this.editor._input();\r\n        var result = false;\r\n        if (_browser.default.msie && _browser.default.version > 11) {\r\n            result = $input.hasClass(\"edge-autofilled\")\r\n        } else {\r\n            if (_browser.default.webkit) {\r\n                var input = $input.get(0);\r\n                result = input && input.matches(\":-webkit-autofill\")\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    _proto.runWithoutEventProcessing = function(action) {\r\n        var keyPressHandled = this._keyPressHandled;\r\n        this._keyPressHandled = true;\r\n        action();\r\n        this._keyPressHandled = keyPressHandled\r\n    };\r\n    _proto._backspaceHandler = function() {};\r\n    _proto._delHandler = function(event) {\r\n        var editor = this.editor;\r\n        this._keyPressHandled = true;\r\n        editor._maskKeyHandler(event, function() {\r\n            return !editor._hasSelection() && editor._handleKey(EMPTY_CHAR)\r\n        })\r\n    };\r\n    _proto.clean = function() {\r\n        this._clearDragTimer();\r\n        clearTimeout(this._backspaceHandlerTimeout);\r\n        clearTimeout(this._caretTimeout);\r\n        clearTimeout(this._inputHandlerTimer)\r\n    };\r\n    return BaseMaskStrategy\r\n}();\r\nexports.default = BaseMaskStrategy;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/ui.text_editor.mask.strategy.default.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiText_editorMaskStrategy = _interopRequireDefault(require(\"./ui.text_editor.mask.strategy.base\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _promise = _interopRequireDefault(require(\"../../core/polyfills/promise\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar BACKSPACE_INPUT_TYPE = \"deleteContentBackward\";\r\nvar EMPTY_CHAR = \" \";\r\nvar DefaultMaskStrategy = function(_BaseMaskStrategy) {\r\n    _inheritsLoose(DefaultMaskStrategy, _BaseMaskStrategy);\r\n\r\n    function DefaultMaskStrategy() {\r\n        return _BaseMaskStrategy.apply(this, arguments) || this\r\n    }\r\n    var _proto = DefaultMaskStrategy.prototype;\r\n    _proto._getStrategyName = function() {\r\n        return \"default\"\r\n    };\r\n    _proto.getHandleEventNames = function() {\r\n        return [].concat(_toConsumableArray(_BaseMaskStrategy.prototype.getHandleEventNames.call(this)), [\"keyPress\"])\r\n    };\r\n    _proto._keyPressHandler = function(event) {\r\n        if (this._keyPressHandled) {\r\n            return\r\n        }\r\n        this._keyPressHandled = true;\r\n        if (this.editor._isControlKeyFired(event)) {\r\n            return\r\n        }\r\n        var editor = this.editor;\r\n        editor._maskKeyHandler(event, function() {\r\n            return editor._handleKey((0, _index.getChar)(event))\r\n        })\r\n    };\r\n    _proto._inputHandler = function(event) {\r\n        if (this._backspaceInputHandled(event.originalEvent && event.originalEvent.inputType)) {\r\n            this._handleBackspaceInput(event)\r\n        }\r\n        if (event.originalEvent) {\r\n            this._autoFillHandler(event)\r\n        }\r\n        if (this._keyPressHandled) {\r\n            return\r\n        }\r\n        this._keyPressHandled = true;\r\n        var inputValue = this.editorInput().val();\r\n        var caret = this.editorCaret();\r\n        if (!caret.end) {\r\n            return\r\n        }\r\n        caret.start = caret.end - 1;\r\n        var oldValue = inputValue.substring(0, caret.start) + inputValue.substring(caret.end);\r\n        var char = inputValue[caret.start];\r\n        var editor = this.editor;\r\n        this.editorInput().val(oldValue);\r\n        editor._caret({\r\n            start: caret.start,\r\n            end: caret.start\r\n        });\r\n        editor._maskKeyHandler(event, function() {\r\n            return editor._handleKey(char)\r\n        })\r\n    };\r\n    _proto._backspaceHandler = function(event) {\r\n        var _this = this;\r\n        var editor = this.editor;\r\n        this._keyPressHandled = true;\r\n        var afterBackspaceHandler = function(needAdjustCaret, callBack) {\r\n            if (needAdjustCaret) {\r\n                editor._direction(_this.DIRECTION.FORWARD);\r\n                editor._adjustCaret()\r\n            }\r\n            var currentCaret = _this.editorCaret();\r\n            return new _promise.default(function(resolve) {\r\n                clearTimeout(_this._backspaceHandlerTimeout);\r\n                _this._backspaceHandlerTimeout = setTimeout(function() {\r\n                    callBack(currentCaret);\r\n                    resolve()\r\n                })\r\n            })\r\n        };\r\n        editor._maskKeyHandler(event, function() {\r\n            if (editor._hasSelection()) {\r\n                return afterBackspaceHandler(true, function(currentCaret) {\r\n                    editor._displayMask(currentCaret);\r\n                    editor._maskRulesChain.reset()\r\n                })\r\n            }\r\n            if (editor._tryMoveCaretBackward()) {\r\n                return afterBackspaceHandler(false, function(currentCaret) {\r\n                    _this.editorCaret(currentCaret)\r\n                })\r\n            }\r\n            editor._handleKey(EMPTY_CHAR, _this.DIRECTION.BACKWARD);\r\n            return afterBackspaceHandler(true, function(currentCaret) {\r\n                editor._displayMask(currentCaret);\r\n                editor._maskRulesChain.reset()\r\n            })\r\n        })\r\n    };\r\n    _proto._backspaceInputHandled = function(inputType) {\r\n        return inputType === BACKSPACE_INPUT_TYPE && !this._keyPressHandled\r\n    };\r\n    _proto._handleBackspaceInput = function(event) {\r\n        var _this$editorCaret = this.editorCaret(),\r\n            start = _this$editorCaret.start,\r\n            end = _this$editorCaret.end;\r\n        this.editorCaret({\r\n            start: start + 1,\r\n            end: end + 1\r\n        });\r\n        this._backspaceHandler(event)\r\n    };\r\n    return DefaultMaskStrategy\r\n}(_uiText_editorMaskStrategy.default);\r\nvar _default = DefaultMaskStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/ui.text_editor.mask.strategy.input_events.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiText_editorMaskStrategy = _interopRequireDefault(require(\"./ui.text_editor.mask.strategy.base\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar DELETE_INPUT_TYPE = \"deleteContentBackward\";\r\nvar InputEventsMaskStrategy = function(_BaseMaskStrategy) {\r\n    _inheritsLoose(InputEventsMaskStrategy, _BaseMaskStrategy);\r\n\r\n    function InputEventsMaskStrategy() {\r\n        return _BaseMaskStrategy.apply(this, arguments) || this\r\n    }\r\n    var _proto = InputEventsMaskStrategy.prototype;\r\n    _proto._getStrategyName = function() {\r\n        return \"inputEvents\"\r\n    };\r\n    _proto.getHandleEventNames = function() {\r\n        return [].concat(_toConsumableArray(_BaseMaskStrategy.prototype.getHandleEventNames.call(this)), [\"beforeInput\"])\r\n    };\r\n    _proto._beforeInputHandler = function() {\r\n        this._prevCaret = this.editorCaret()\r\n    };\r\n    _proto._inputHandler = function(_ref) {\r\n        var originalEvent = _ref.originalEvent;\r\n        if (!originalEvent) {\r\n            return\r\n        }\r\n        var inputType = originalEvent.inputType,\r\n            data = originalEvent.data;\r\n        var currentCaret = this.editorCaret();\r\n        if (inputType === DELETE_INPUT_TYPE) {\r\n            var length = this._prevCaret.end - this._prevCaret.start || 1;\r\n            this.editor.setBackwardDirection();\r\n            this._updateEditorMask({\r\n                start: currentCaret.start,\r\n                length: length,\r\n                text: this._getEmptyString(length)\r\n            })\r\n        } else {\r\n            var _this$_prevCaret, _this$_prevCaret2, _this$_prevCaret3;\r\n            if (!currentCaret.end) {\r\n                return\r\n            }\r\n            this._autoFillHandler(originalEvent);\r\n            this.editorCaret(currentCaret);\r\n            var _length = (null === (_this$_prevCaret = this._prevCaret) || void 0 === _this$_prevCaret ? void 0 : _this$_prevCaret.end) - (null === (_this$_prevCaret2 = this._prevCaret) || void 0 === _this$_prevCaret2 ? void 0 : _this$_prevCaret2.start);\r\n            var newData = data + (_length ? this._getEmptyString(_length - data.length) : \"\");\r\n            this.editor.setForwardDirection();\r\n            var hasValidChars = this._updateEditorMask({\r\n                start: null === (_this$_prevCaret3 = this._prevCaret) || void 0 === _this$_prevCaret3 ? void 0 : _this$_prevCaret3.start,\r\n                length: _length || newData.length,\r\n                text: newData\r\n            });\r\n            if (!hasValidChars) {\r\n                this.editorCaret(this._prevCaret)\r\n            }\r\n        }\r\n    };\r\n    _proto._getEmptyString = function(length) {\r\n        return Array(length + 1).join(\" \")\r\n    };\r\n    _proto._updateEditorMask = function(args) {\r\n        var textLength = args.text.length;\r\n        var updatedCharsCount = this.editor._handleChain(args);\r\n        if (this.editor.isForwardDirection()) {\r\n            var _this$editorCaret = this.editorCaret(),\r\n                start = _this$editorCaret.start,\r\n                end = _this$editorCaret.end;\r\n            var correction = updatedCharsCount - textLength;\r\n            if (start <= updatedCharsCount && updatedCharsCount > 1) {\r\n                this.editorCaret({\r\n                    start: start + correction,\r\n                    end: end + correction\r\n                })\r\n            }\r\n            this.editor.isForwardDirection() && this.editor._adjustCaret()\r\n        }\r\n        this.editor._displayMask();\r\n        return !!updatedCharsCount\r\n    };\r\n    return InputEventsMaskStrategy\r\n}(_uiText_editorMaskStrategy.default);\r\nvar _default = InputEventsMaskStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/utils.caret.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _devices$real = _devices.default.real(),\r\n    ios = _devices$real.ios,\r\n    mac = _devices$real.mac;\r\nvar isFocusingOnCaretChange = _browser.default.msie || ios || mac;\r\nvar getCaret = function(input) {\r\n    var range;\r\n    try {\r\n        range = {\r\n            start: input.selectionStart,\r\n            end: input.selectionEnd\r\n        }\r\n    } catch (e) {\r\n        range = {\r\n            start: 0,\r\n            end: 0\r\n        }\r\n    }\r\n    return range\r\n};\r\nvar setCaret = function(input, position) {\r\n    if (!_dom_adapter.default.getBody().contains(input)) {\r\n        return\r\n    }\r\n    try {\r\n        input.selectionStart = position.start;\r\n        input.selectionEnd = position.end\r\n    } catch (e) {}\r\n};\r\nvar caret = function(input, position) {\r\n    var force = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n    input = (0, _renderer.default)(input).get(0);\r\n    if (!(0, _type.isDefined)(position)) {\r\n        return getCaret(input)\r\n    }\r\n    if (!force && isFocusingOnCaretChange && _dom_adapter.default.getActiveElement() !== input) {\r\n        return\r\n    }\r\n    setCaret(input, position)\r\n};\r\nvar _default = caret;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/text_box/utils.support.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.isInputEventsL2Supported = isInputEventsL2Supported;\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction isModernAndroidDevice() {\r\n    var _devices$real = _devices.default.real(),\r\n        android = _devices$real.android,\r\n        version = _devices$real.version;\r\n    return android && version[0] > 4\r\n}\r\n\r\nfunction isInputEventsL2Supported() {\r\n    return \"onbeforeinput\" in _dom_adapter.default.createElement(\"input\") || isModernAndroidDevice()\r\n}\r\n","/**\r\n * DevExtreme (ui/toolbar.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _array = require(\"../core/utils/array\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _uiToolbarStrategy = _interopRequireDefault(require(\"./toolbar/ui.toolbar.strategy.action_sheet\"));\r\nvar _uiToolbarStrategy2 = _interopRequireDefault(require(\"./toolbar/ui.toolbar.strategy.drop_down_menu\"));\r\nvar _uiToolbar = _interopRequireDefault(require(\"./toolbar/ui.toolbar.base\"));\r\nvar _child_default_template = require(\"../core/templates/child_default_template\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar STRATEGIES = {\r\n    actionSheet: _uiToolbarStrategy.default,\r\n    dropDownMenu: _uiToolbarStrategy2.default\r\n};\r\nvar TOOLBAR_AUTO_HIDE_ITEM_CLASS = \"dx-toolbar-item-auto-hide\";\r\nvar TOOLBAR_AUTO_HIDE_TEXT_CLASS = \"dx-toolbar-text-auto-hide\";\r\nvar TOOLBAR_HIDDEN_ITEM = \"dx-toolbar-item-invisible\";\r\nvar Toolbar = _uiToolbar.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            menuItemTemplate: \"menuItem\",\r\n            submenuType: \"dropDownMenu\",\r\n            menuContainer: void 0\r\n        })\r\n    },\r\n    _dimensionChanged: function(dimension) {\r\n        if (\"height\" === dimension) {\r\n            return\r\n        }\r\n        this._menuStrategy.toggleMenuVisibility(false, true);\r\n        this.callBase();\r\n        this._menuStrategy.renderMenuItems()\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            actionSheetItem: new _child_default_template.ChildDefaultTemplate(\"item\")\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderMenu()\r\n    },\r\n    _postProcessRenderItems: function() {\r\n        var _this = this;\r\n        this._hideOverflowItems();\r\n        this._menuStrategy._updateMenuVisibility();\r\n        this.callBase();\r\n        (0, _common.deferRender)(function() {\r\n            _this._menuStrategy.renderMenuItems()\r\n        })\r\n    },\r\n    _renderItem: function(index, item, itemContainer, $after) {\r\n        var itemElement = this.callBase(index, item, itemContainer, $after);\r\n        if (\"auto\" === item.locateInMenu) {\r\n            itemElement.addClass(TOOLBAR_AUTO_HIDE_ITEM_CLASS)\r\n        }\r\n        if (\"dxButton\" === item.widget && \"inMenu\" === item.showText) {\r\n            itemElement.toggleClass(TOOLBAR_AUTO_HIDE_TEXT_CLASS)\r\n        }\r\n        return itemElement\r\n    },\r\n    _getItemsWidth: function() {\r\n        return this._getSummaryItemsWidth([this._$beforeSection, this._$centerSection, this._$afterSection])\r\n    },\r\n    _hideOverflowItems: function(elementWidth) {\r\n        var overflowItems = this.$element().find(\".\" + TOOLBAR_AUTO_HIDE_ITEM_CLASS);\r\n        if (!overflowItems.length) {\r\n            return\r\n        }\r\n        elementWidth = elementWidth || this.$element().width();\r\n        (0, _renderer.default)(overflowItems).removeClass(TOOLBAR_HIDDEN_ITEM);\r\n        var itemsWidth = this._getItemsWidth();\r\n        while (overflowItems.length && elementWidth < itemsWidth) {\r\n            var $item = overflowItems.eq(-1);\r\n            itemsWidth -= $item.outerWidth();\r\n            $item.addClass(TOOLBAR_HIDDEN_ITEM);\r\n            overflowItems.splice(-1, 1)\r\n        }\r\n    },\r\n    _getMenuItems: function() {\r\n        var that = this;\r\n        var menuItems = (0, _common.grep)(this.option(\"items\") || [], function(item) {\r\n            return that._isMenuItem(item)\r\n        });\r\n        var $hiddenItems = this._itemContainer().children(\".\" + TOOLBAR_AUTO_HIDE_ITEM_CLASS + \".\" + TOOLBAR_HIDDEN_ITEM).not(\".dx-state-invisible\");\r\n        this._restoreItems = this._restoreItems || [];\r\n        var overflowItems = [].slice.call($hiddenItems).map(function(item) {\r\n            var itemData = that._getItemData(item);\r\n            var $itemContainer = (0, _renderer.default)(item).children();\r\n            var $itemMarkup = $itemContainer.children();\r\n            return (0, _extend.extend)({\r\n                menuItemTemplate: function() {\r\n                    that._restoreItems.push({\r\n                        container: $itemContainer,\r\n                        item: $itemMarkup\r\n                    });\r\n                    var $container = (0, _renderer.default)(\"<div>\").addClass(TOOLBAR_AUTO_HIDE_ITEM_CLASS);\r\n                    return $container.append($itemMarkup)\r\n                }\r\n            }, itemData)\r\n        });\r\n        return (0, _array.merge)(overflowItems, menuItems)\r\n    },\r\n    _getToolbarItems: function() {\r\n        var that = this;\r\n        return (0, _common.grep)(this.option(\"items\") || [], function(item) {\r\n            return !that._isMenuItem(item)\r\n        })\r\n    },\r\n    _renderMenu: function() {\r\n        var _this2 = this;\r\n        this._renderMenuStrategy();\r\n        (0, _common.deferRender)(function() {\r\n            _this2._menuStrategy.render()\r\n        })\r\n    },\r\n    _renderMenuStrategy: function() {\r\n        var strategyName = this.option(\"submenuType\");\r\n        if (this._requireDropDownStrategy()) {\r\n            strategyName = \"dropDownMenu\"\r\n        }\r\n        var strategy = STRATEGIES[strategyName];\r\n        if (!(this._menuStrategy && this._menuStrategy.NAME === strategyName)) {\r\n            this._menuStrategy = new strategy(this)\r\n        }\r\n    },\r\n    _requireDropDownStrategy: function() {\r\n        var items = this.option(\"items\") || [];\r\n        var result = false;\r\n        (0, _iterator.each)(items, function(index, item) {\r\n            if (\"auto\" === item.locateInMenu) {\r\n                result = true\r\n            } else {\r\n                if (\"always\" === item.locateInMenu && item.widget) {\r\n                    result = true\r\n                }\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    _arrangeItems: function() {\r\n        if (this.$element().is(\":hidden\")) {\r\n            return\r\n        }\r\n        this._$centerSection.css({\r\n            margin: \"0 auto\",\r\n            \"float\": \"none\"\r\n        });\r\n        (0, _iterator.each)(this._restoreItems || [], function(_, obj) {\r\n            (0, _renderer.default)(obj.container).append(obj.item)\r\n        });\r\n        this._restoreItems = [];\r\n        var elementWidth = this.$element().width();\r\n        this._hideOverflowItems(elementWidth);\r\n        this.callBase(elementWidth)\r\n    },\r\n    _itemOptionChanged: function(item, property, value) {\r\n        if (this._isMenuItem(item)) {\r\n            this._menuStrategy.renderMenuItems()\r\n        } else {\r\n            if (this._isToolbarItem(item)) {\r\n                this.callBase(item, property, value)\r\n            } else {\r\n                this.callBase(item, property, value);\r\n                this._menuStrategy.renderMenuItems()\r\n            }\r\n        }\r\n        if (\"location\" === property) {\r\n            this.repaint()\r\n        }\r\n    },\r\n    _isMenuItem: function(itemData) {\r\n        return \"menu\" === itemData.location || \"always\" === itemData.locateInMenu\r\n    },\r\n    _isToolbarItem: function(itemData) {\r\n        return void 0 === itemData.location || \"never\" === itemData.locateInMenu\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        var value = args.value;\r\n        switch (name) {\r\n            case \"submenuType\":\r\n                this._invalidate();\r\n                break;\r\n            case \"menuItemTemplate\":\r\n                this._changeMenuOption(\"itemTemplate\", this._getTemplate(value));\r\n                break;\r\n            case \"onItemClick\":\r\n                this._changeMenuOption(name, value);\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"menuContainer\":\r\n                this._changeMenuOption(\"container\", value);\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _changeMenuOption: function(name, value) {\r\n        this._menuStrategy.widgetOption(name, value)\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxToolbar\", Toolbar);\r\nvar _default = Toolbar;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/toolbar/constants.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.TOOLBAR_CLASS = void 0;\r\nvar TOOLBAR_CLASS = \"dx-toolbar\";\r\nexports.TOOLBAR_CLASS = TOOLBAR_CLASS;\r\n","/**\r\n * DevExtreme (ui/toolbar/ui.toolbar.base.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _themes = require(\"../themes\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"../collection/ui.collection_widget.async\"));\r\nvar _promise = _interopRequireDefault(require(\"../../core/polyfills/promise\"));\r\nvar _bindable_template = require(\"../../core/templates/bindable_template\");\r\nvar _errors = _interopRequireDefault(require(\"../../core/errors\"));\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _constants = require(\"./constants\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TOOLBAR_BEFORE_CLASS = \"dx-toolbar-before\";\r\nvar TOOLBAR_CENTER_CLASS = \"dx-toolbar-center\";\r\nvar TOOLBAR_AFTER_CLASS = \"dx-toolbar-after\";\r\nvar TOOLBAR_MINI_CLASS = \"dx-toolbar-mini\";\r\nvar TOOLBAR_ITEM_CLASS = \"dx-toolbar-item\";\r\nvar TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\r\nvar TOOLBAR_BUTTON_CLASS = \"dx-toolbar-button\";\r\nvar TOOLBAR_ITEMS_CONTAINER_CLASS = \"dx-toolbar-items-container\";\r\nvar TOOLBAR_GROUP_CLASS = \"dx-toolbar-group\";\r\nvar TOOLBAR_COMPACT_CLASS = \"dx-toolbar-compact\";\r\nvar TOOLBAR_LABEL_SELECTOR = \".\" + TOOLBAR_LABEL_CLASS;\r\nvar TOOLBAR_MULTILINE_CLASS = \"dx-toolbar-multiline\";\r\nvar TEXT_BUTTON_MODE = \"text\";\r\nvar DEFAULT_BUTTON_TYPE = \"default\";\r\nvar TOOLBAR_ITEM_DATA_KEY = \"dxToolbarItemDataKey\";\r\nvar ToolbarBase = _uiCollection_widget.default.inherit({\r\n    compactMode: false,\r\n    ctor: function(element, options) {\r\n        this._userOptions = options || {};\r\n        this.callBase(element, options);\r\n        if (\"height\" in this._userOptions) {\r\n            _errors.default.log(\"W0001\", this.NAME, \"height\", \"20.1\", \"Functionality associated with this option is not intended for the Toolbar widget.\")\r\n        }\r\n    },\r\n    _getSynchronizableOptionsForCreateComponent: function() {\r\n        return this.callBase().filter(function(item) {\r\n            return \"disabled\" !== item\r\n        })\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        var template = new _bindable_template.BindableTemplate(function($container, data, rawModel) {\r\n            if ((0, _type.isPlainObject)(data)) {\r\n                if (data.text) {\r\n                    $container.text(data.text).wrapInner(\"<div>\")\r\n                }\r\n                if (data.html) {\r\n                    $container.html(data.html)\r\n                }\r\n                if (\"dxButton\" === data.widget) {\r\n                    if (this.option(\"useFlatButtons\")) {\r\n                        data.options = data.options || {};\r\n                        data.options.stylingMode = data.options.stylingMode || TEXT_BUTTON_MODE\r\n                    }\r\n                    if (this.option(\"useDefaultButtons\")) {\r\n                        data.options = data.options || {};\r\n                        data.options.type = data.options.type || DEFAULT_BUTTON_TYPE\r\n                    }\r\n                }\r\n            } else {\r\n                $container.text(String(data))\r\n            }\r\n            this._getTemplate(\"dx-polymorph-widget\").render({\r\n                container: $container,\r\n                model: rawModel,\r\n                parent: this\r\n            })\r\n        }.bind(this), [\"text\", \"html\", \"widget\", \"options\"], this.option(\"integrationOptions.watchMethod\"));\r\n        this._templateManager.addDefaultTemplates({\r\n            item: template,\r\n            menuItem: template\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            renderAs: \"topToolbar\",\r\n            grouped: false,\r\n            useFlatButtons: false,\r\n            useDefaultButtons: false,\r\n            multiline: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return (0, _themes.isMaterial)()\r\n            },\r\n            options: {\r\n                useFlatButtons: true\r\n            }\r\n        }])\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$toolbarItemsContainer.find([\".\" + TOOLBAR_BEFORE_CLASS, \".\" + TOOLBAR_CENTER_CLASS, \".\" + TOOLBAR_AFTER_CLASS].join(\",\"))\r\n    },\r\n    _itemClass: function() {\r\n        return TOOLBAR_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return TOOLBAR_ITEM_DATA_KEY\r\n    },\r\n    _buttonClass: function() {\r\n        return TOOLBAR_BUTTON_CLASS\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._arrangeItems();\r\n        this._applyCompactMode()\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderToolbar();\r\n        this._renderSections();\r\n        this.callBase();\r\n        this.setAria(\"role\", \"toolbar\")\r\n    },\r\n    _waitParentAnimationFinished: function() {\r\n        var _this = this;\r\n        var $element = this.$element();\r\n        var timeout = 15;\r\n        return new _promise.default(function(resolve) {\r\n            var check = function() {\r\n                var readyToResolve = true;\r\n                $element.parents().each(function(_, parent) {\r\n                    if (_fx.default.isAnimating((0, _renderer.default)(parent))) {\r\n                        readyToResolve = false;\r\n                        return false\r\n                    }\r\n                });\r\n                if (readyToResolve) {\r\n                    resolve()\r\n                }\r\n                return readyToResolve\r\n            };\r\n            var runCheck = function runCheck() {\r\n                clearTimeout(_this._waitParentAnimationTimeout);\r\n                _this._waitParentAnimationTimeout = setTimeout(function() {\r\n                    return check() || runCheck()\r\n                }, timeout)\r\n            };\r\n            runCheck()\r\n        })\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderItemsAsync();\r\n        if ((0, _themes.isMaterial)()) {\r\n            _promise.default.all([this._waitParentAnimationFinished(), this._checkWebFontForLabelsLoaded()]).then(this._dimensionChanged.bind(this))\r\n        }\r\n    },\r\n    _postProcessRenderItems: function() {\r\n        this._arrangeItems()\r\n    },\r\n    _renderToolbar: function() {\r\n        this.$element().addClass(_constants.TOOLBAR_CLASS).toggleClass(TOOLBAR_MULTILINE_CLASS, this.option(\"multiline\"));\r\n        this._$toolbarItemsContainer = (0, _renderer.default)(\"<div>\").addClass(TOOLBAR_ITEMS_CONTAINER_CLASS).appendTo(this.$element())\r\n    },\r\n    _renderSections: function() {\r\n        var $container = this._$toolbarItemsContainer;\r\n        var that = this;\r\n        (0, _iterator.each)([\"before\", \"center\", \"after\"], function() {\r\n            var sectionClass = \"dx-toolbar-\" + this;\r\n            var $section = $container.find(\".\" + sectionClass);\r\n            if (!$section.length) {\r\n                that[\"_$\" + this + \"Section\"] = $section = (0, _renderer.default)(\"<div>\").addClass(sectionClass).appendTo($container)\r\n            }\r\n        })\r\n    },\r\n    _checkWebFontForLabelsLoaded: function() {\r\n        var $labels = this.$element().find(TOOLBAR_LABEL_SELECTOR);\r\n        var promises = [];\r\n        $labels.each(function(_, label) {\r\n            var text = (0, _renderer.default)(label).text();\r\n            var fontWeight = (0, _renderer.default)(label).css(\"fontWeight\");\r\n            promises.push((0, _themes.waitWebFont)(text, fontWeight))\r\n        });\r\n        return _promise.default.all(promises)\r\n    },\r\n    _arrangeItems: function(elementWidth) {\r\n        elementWidth = elementWidth || this.$element().width();\r\n        this._$centerSection.css({\r\n            margin: \"0 auto\",\r\n            \"float\": \"none\"\r\n        });\r\n        var beforeRect = (0, _position.getBoundingRect)(this._$beforeSection.get(0));\r\n        var afterRect = (0, _position.getBoundingRect)(this._$afterSection.get(0));\r\n        this._alignCenterSection(beforeRect, afterRect, elementWidth);\r\n        var $label = this._$toolbarItemsContainer.find(TOOLBAR_LABEL_SELECTOR).eq(0);\r\n        var $section = $label.parent();\r\n        if (!$label.length) {\r\n            return\r\n        }\r\n        var labelOffset = beforeRect.width ? beforeRect.width : $label.position().left;\r\n        var widthBeforeSection = $section.hasClass(TOOLBAR_BEFORE_CLASS) ? 0 : labelOffset;\r\n        var widthAfterSection = $section.hasClass(TOOLBAR_AFTER_CLASS) ? 0 : afterRect.width;\r\n        var elemsAtSectionWidth = 0;\r\n        $section.children().not(TOOLBAR_LABEL_SELECTOR).each(function() {\r\n            elemsAtSectionWidth += (0, _renderer.default)(this).outerWidth()\r\n        });\r\n        var freeSpace = elementWidth - elemsAtSectionWidth;\r\n        var sectionMaxWidth = Math.max(freeSpace - widthBeforeSection - widthAfterSection, 0);\r\n        if ($section.hasClass(TOOLBAR_BEFORE_CLASS)) {\r\n            this._alignSection(this._$beforeSection, sectionMaxWidth)\r\n        } else {\r\n            var labelPaddings = $label.outerWidth() - $label.width();\r\n            $label.css(\"maxWidth\", sectionMaxWidth - labelPaddings)\r\n        }\r\n    },\r\n    _alignCenterSection: function(beforeRect, afterRect, elementWidth) {\r\n        this._alignSection(this._$centerSection, elementWidth - beforeRect.width - afterRect.width);\r\n        var isRTL = this.option(\"rtlEnabled\");\r\n        var leftRect = isRTL ? afterRect : beforeRect;\r\n        var rightRect = isRTL ? beforeRect : afterRect;\r\n        var centerRect = (0, _position.getBoundingRect)(this._$centerSection.get(0));\r\n        if (leftRect.right > centerRect.left || centerRect.right > rightRect.left) {\r\n            this._$centerSection.css({\r\n                marginLeft: leftRect.width,\r\n                marginRight: rightRect.width,\r\n                \"float\": leftRect.width > rightRect.width ? \"none\" : \"right\"\r\n            })\r\n        }\r\n    },\r\n    _alignSection: function($section, maxWidth) {\r\n        var $labels = $section.find(TOOLBAR_LABEL_SELECTOR);\r\n        var labels = $labels.toArray();\r\n        maxWidth -= this._getCurrentLabelsPaddings(labels);\r\n        var currentWidth = this._getCurrentLabelsWidth(labels);\r\n        var difference = Math.abs(currentWidth - maxWidth);\r\n        if (maxWidth < currentWidth) {\r\n            labels = labels.reverse();\r\n            this._alignSectionLabels(labels, difference, false)\r\n        } else {\r\n            this._alignSectionLabels(labels, difference, true)\r\n        }\r\n    },\r\n    _alignSectionLabels: function(labels, difference, expanding) {\r\n        var getRealLabelWidth = function(label) {\r\n            return (0, _position.getBoundingRect)(label).width\r\n        };\r\n        for (var i = 0; i < labels.length; i++) {\r\n            var $label = (0, _renderer.default)(labels[i]);\r\n            var currentLabelWidth = Math.ceil(getRealLabelWidth(labels[i]));\r\n            var labelMaxWidth = void 0;\r\n            if (expanding) {\r\n                $label.css(\"maxWidth\", \"inherit\")\r\n            }\r\n            var possibleLabelWidth = Math.ceil(expanding ? getRealLabelWidth(labels[i]) : currentLabelWidth);\r\n            if (possibleLabelWidth < difference) {\r\n                labelMaxWidth = expanding ? possibleLabelWidth : 0;\r\n                difference -= possibleLabelWidth\r\n            } else {\r\n                labelMaxWidth = expanding ? currentLabelWidth + difference : currentLabelWidth - difference;\r\n                $label.css(\"maxWidth\", labelMaxWidth);\r\n                break\r\n            }\r\n            $label.css(\"maxWidth\", labelMaxWidth)\r\n        }\r\n    },\r\n    _applyCompactMode: function() {\r\n        var $element = this.$element();\r\n        $element.removeClass(TOOLBAR_COMPACT_CLASS);\r\n        if (this.option(\"compactMode\") && this._getSummaryItemsWidth(this.itemElements(), true) > $element.width()) {\r\n            $element.addClass(TOOLBAR_COMPACT_CLASS)\r\n        }\r\n    },\r\n    _getCurrentLabelsWidth: function(labels) {\r\n        var width = 0;\r\n        labels.forEach(function(label, index) {\r\n            width += (0, _renderer.default)(label).outerWidth()\r\n        });\r\n        return width\r\n    },\r\n    _getCurrentLabelsPaddings: function(labels) {\r\n        var padding = 0;\r\n        labels.forEach(function(label, index) {\r\n            padding += (0, _renderer.default)(label).outerWidth() - (0, _renderer.default)(label).width()\r\n        });\r\n        return padding\r\n    },\r\n    _renderItem: function(index, item, itemContainer, $after) {\r\n        var location = item.location || \"center\";\r\n        var container = itemContainer || this[\"_$\" + location + \"Section\"];\r\n        var itemHasText = !!(item.text || item.html);\r\n        var itemElement = this.callBase(index, item, container, $after);\r\n        itemElement.toggleClass(this._buttonClass(), !itemHasText).toggleClass(TOOLBAR_LABEL_CLASS, itemHasText).addClass(item.cssClass);\r\n        return itemElement\r\n    },\r\n    _renderGroupedItems: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this.option(\"items\"), function(groupIndex, group) {\r\n            var groupItems = group.items;\r\n            var $container = (0, _renderer.default)(\"<div>\").addClass(TOOLBAR_GROUP_CLASS);\r\n            var location = group.location || \"center\";\r\n            if (!groupItems || !groupItems.length) {\r\n                return\r\n            }(0, _iterator.each)(groupItems, function(itemIndex, item) {\r\n                that._renderItem(itemIndex, item, $container, null)\r\n            });\r\n            that._$toolbarItemsContainer.find(\".dx-toolbar-\" + location).append($container)\r\n        })\r\n    },\r\n    _renderItems: function(items) {\r\n        var grouped = this.option(\"grouped\") && items.length && items[0].items;\r\n        grouped ? this._renderGroupedItems() : this.callBase(items)\r\n    },\r\n    _getToolbarItems: function() {\r\n        return this.option(\"items\") || []\r\n    },\r\n    _renderContentImpl: function() {\r\n        var items = this._getToolbarItems();\r\n        this.$element().toggleClass(TOOLBAR_MINI_CLASS, 0 === items.length);\r\n        if (this._renderedItemsCount) {\r\n            this._renderItems(items.slice(this._renderedItemsCount))\r\n        } else {\r\n            this._renderItems(items)\r\n        }\r\n        this._applyCompactMode()\r\n    },\r\n    _renderEmptyMessage: _common.noop,\r\n    _clean: function() {\r\n        this._$toolbarItemsContainer.children().empty();\r\n        this.$element().empty()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._arrangeItems()\r\n        }\r\n    },\r\n    _isVisible: function() {\r\n        return this.$element().width() > 0 && this.$element().height() > 0\r\n    },\r\n    _getIndexByItem: function(item) {\r\n        return (0, _array.inArray)(item, this._getToolbarItems())\r\n    },\r\n    _itemOptionChanged: function(item, property, value) {\r\n        this.callBase.apply(this, [item, property, value]);\r\n        this._arrangeItems()\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"width\":\r\n                this.callBase.apply(this, arguments);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"multiline\":\r\n                this.$element().toggleClass(TOOLBAR_MULTILINE_CLASS, args.value);\r\n                break;\r\n            case \"renderAs\":\r\n            case \"useFlatButtons\":\r\n            case \"useDefaultButtons\":\r\n                this._invalidate();\r\n                break;\r\n            case \"compactMode\":\r\n                this._applyCompactMode();\r\n                break;\r\n            case \"grouped\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        clearTimeout(this._waitParentAnimationTimeout)\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxToolbarBase\", ToolbarBase);\r\nvar _default = ToolbarBase;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/toolbar/ui.toolbar.menu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiList = require(\"../list/ui.list.base\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TOOLBAR_MENU_ACTION_CLASS = \"dx-toolbar-menu-action\";\r\nvar TOOLBAR_HIDDEN_BUTTON_CLASS = \"dx-toolbar-hidden-button\";\r\nvar TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS = \"dx-toolbar-hidden-button-group\";\r\nvar TOOLBAR_MENU_SECTION_CLASS = \"dx-toolbar-menu-section\";\r\nvar TOOLBAR_MENU_LAST_SECTION_CLASS = \"dx-toolbar-menu-last-section\";\r\nvar ToolbarMenu = _uiList.ListBase.inherit({\r\n    _activeStateUnit: \".\" + TOOLBAR_MENU_ACTION_CLASS,\r\n    _initMarkup: function() {\r\n        this._renderSections();\r\n        this.callBase()\r\n    },\r\n    _getSections: function() {\r\n        return this._itemContainer().children()\r\n    },\r\n    _itemElements: function() {\r\n        return this._getSections().children(this._itemSelector())\r\n    },\r\n    _renderSections: function() {\r\n        var that = this;\r\n        var $container = this._itemContainer();\r\n        (0, _iterator.each)([\"before\", \"center\", \"after\", \"menu\"], function() {\r\n            var sectionName = \"_$\" + this + \"Section\";\r\n            var $section = that[sectionName];\r\n            if (!$section) {\r\n                that[sectionName] = $section = (0, _renderer.default)(\"<div>\").addClass(TOOLBAR_MENU_SECTION_CLASS)\r\n            }\r\n            $section.appendTo($container)\r\n        })\r\n    },\r\n    _renderItems: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateSections()\r\n    },\r\n    _updateSections: function() {\r\n        var $sections = this.$element().find(\".\" + TOOLBAR_MENU_SECTION_CLASS);\r\n        $sections.removeClass(TOOLBAR_MENU_LAST_SECTION_CLASS);\r\n        $sections.not(\":empty\").eq(-1).addClass(TOOLBAR_MENU_LAST_SECTION_CLASS)\r\n    },\r\n    _renderItem: function(index, item, itemContainer, $after) {\r\n        var location = item.location || \"menu\";\r\n        var $container = this[\"_$\" + location + \"Section\"];\r\n        var itemElement = this.callBase(index, item, $container, $after);\r\n        if (this._getItemTemplateName({\r\n                itemData: item\r\n            })) {\r\n            itemElement.addClass(\"dx-toolbar-menu-custom\")\r\n        }\r\n        if (\"menu\" === location || \"dxButton\" === item.widget || \"dxButtonGroup\" === item.widget || item.isAction) {\r\n            itemElement.addClass(TOOLBAR_MENU_ACTION_CLASS)\r\n        }\r\n        if (\"dxButton\" === item.widget) {\r\n            itemElement.addClass(TOOLBAR_HIDDEN_BUTTON_CLASS)\r\n        }\r\n        if (\"dxButtonGroup\" === item.widget) {\r\n            itemElement.addClass(TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS)\r\n        }\r\n        itemElement.addClass(item.cssClass);\r\n        return itemElement\r\n    },\r\n    _getItemTemplateName: function(args) {\r\n        var template = this.callBase(args);\r\n        var data = args.itemData;\r\n        var menuTemplate = data && data.menuItemTemplate;\r\n        return menuTemplate || template\r\n    },\r\n    _itemClickHandler: function(e, args, config) {\r\n        if ((0, _renderer.default)(e.target).closest(\".\" + TOOLBAR_MENU_ACTION_CLASS).length) {\r\n            this.callBase(e, args, config)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this._getSections().empty();\r\n        this.callBase()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxToolbarMenu\", ToolbarMenu);\r\nvar _default = ToolbarMenu;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/toolbar/ui.toolbar.strategy.action_sheet.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiToolbar = _interopRequireDefault(require(\"./ui.toolbar.strategy\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _action_sheet = _interopRequireDefault(require(\"../action_sheet\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ActionSheetStrategy = _uiToolbar.default.inherit({\r\n    NAME: \"actionSheet\",\r\n    _getMenuItemTemplate: function() {\r\n        return this._toolbar._getTemplate(\"actionSheetItem\")\r\n    },\r\n    render: function() {\r\n        if (!this._hasVisibleMenuItems()) {\r\n            return\r\n        }\r\n        this.callBase()\r\n    },\r\n    _menuWidgetClass: function() {\r\n        return _action_sheet.default\r\n    },\r\n    _menuContainer: function() {\r\n        return this._toolbar.$element()\r\n    },\r\n    _widgetOptions: function() {\r\n        return (0, _extend.extend)({}, this.callBase(), {\r\n            target: this._$button,\r\n            showTitle: false\r\n        })\r\n    },\r\n    _menuButtonOptions: function() {\r\n        return (0, _extend.extend)({}, this.callBase(), {\r\n            icon: \"overflow\"\r\n        })\r\n    },\r\n    _toggleMenu: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._menu.toggle(this._menuShown);\r\n        this._menuShown = false\r\n    }\r\n});\r\nvar _default = ActionSheetStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/toolbar/ui.toolbar.strategy.drop_down_menu.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _uiToolbar = _interopRequireDefault(require(\"./ui.toolbar.strategy\"));\r\nvar _uiToolbar2 = _interopRequireDefault(require(\"./ui.toolbar.menu\"));\r\nvar _drop_down_menu = _interopRequireDefault(require(\"../drop_down_menu\"));\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _popover_contants = require(\"../popover_contants\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MENU_INVISIBLE_CLASS = \"dx-state-invisible\";\r\nvar DropDownMenuStrategy = _uiToolbar.default.inherit({\r\n    NAME: \"dropDownMenu\",\r\n    render: function() {\r\n        if (!this._hasVisibleMenuItems()) {\r\n            return\r\n        }\r\n        this._renderMenuButtonContainer();\r\n        this._renderWidget()\r\n    },\r\n    renderMenuItems: function() {\r\n        if (!this._menu) {\r\n            this.render()\r\n        }\r\n        this.callBase();\r\n        if (this._menu && !this._menu.option(\"items\").length) {\r\n            this._menu.close()\r\n        }\r\n    },\r\n    _menuWidgetClass: function() {\r\n        return _drop_down_menu.default\r\n    },\r\n    _widgetOptions: function() {\r\n        var that = this;\r\n        var topAndBottomOffset = 2 * _popover_contants.POPOVER_BOUNDARY_OFFSET;\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            deferRendering: true,\r\n            container: that._toolbar.option(\"menuContainer\"),\r\n            popupMaxHeight: \"android\" === _devices.default.current().platform ? _dom_adapter.default.getDocumentElement().clientHeight - topAndBottomOffset : void 0,\r\n            menuWidget: _uiToolbar2.default,\r\n            onOptionChanged: function(e) {\r\n                if (\"items\" === e.name) {\r\n                    that._updateMenuVisibility(e.value)\r\n                }\r\n            },\r\n            popupPosition: {\r\n                at: \"bottom right\",\r\n                my: \"top right\"\r\n            }\r\n        })\r\n    },\r\n    _updateMenuVisibility: function(menuItems) {\r\n        var items = menuItems || this._getMenuItems();\r\n        var isMenuVisible = items.length && this._hasVisibleMenuItems(items);\r\n        this._toggleMenuVisibility(isMenuVisible)\r\n    },\r\n    _toggleMenuVisibility: function(value) {\r\n        if (!this._menuContainer()) {\r\n            return\r\n        }\r\n        this._menuContainer().toggleClass(MENU_INVISIBLE_CLASS, !value)\r\n    },\r\n    _menuContainer: function() {\r\n        return this._$menuButtonContainer\r\n    }\r\n});\r\nvar _default = DropDownMenuStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/toolbar/ui.toolbar.strategy.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _button = _interopRequireDefault(require(\"../button\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar abstract = _class.default.abstract;\r\nvar TOOLBAR_MENU_CONTAINER_CLASS = \"dx-toolbar-menu-container\";\r\nvar TOOLBAR_MENU_BUTTON_CLASS = \"dx-toolbar-menu-button\";\r\nvar ToolbarStrategy = _class.default.inherit({\r\n    ctor: function(toolbar) {\r\n        this._toolbar = toolbar\r\n    },\r\n    render: function() {\r\n        this._renderMenuButton();\r\n        this._renderWidget()\r\n    },\r\n    _widgetOptions: function() {\r\n        var itemClickAction = this._toolbar._createActionByOption(\"onItemClick\");\r\n        return {\r\n            itemTemplate: this._getMenuItemTemplate.bind(this),\r\n            onItemClick: function(e) {\r\n                this._toggleMenu(false, true);\r\n                itemClickAction(e)\r\n            }.bind(this)\r\n        }\r\n    },\r\n    _getMenuItemTemplate: function() {\r\n        return this._toolbar._getTemplateByOption(\"menuItemTemplate\")\r\n    },\r\n    _renderWidget: function() {\r\n        var $menu = (0, _renderer.default)(\"<div>\").appendTo(this._menuContainer());\r\n        this._menu = this._toolbar._createComponent($menu, this._menuWidgetClass(), this._widgetOptions());\r\n        this.renderMenuItems()\r\n    },\r\n    _menuContainer: abstract,\r\n    _menuWidgetClass: abstract,\r\n    _hasVisibleMenuItems: function(items) {\r\n        var menuItems = items || this._toolbar.option(\"items\");\r\n        var result = false;\r\n        var optionGetter = (0, _data.compileGetter)(\"visible\");\r\n        var overflowGetter = (0, _data.compileGetter)(\"locateInMenu\");\r\n        (0, _iterator.each)(menuItems, function(index, item) {\r\n            var itemVisible = optionGetter(item, {\r\n                functionsAsIs: true\r\n            });\r\n            var itemOverflow = overflowGetter(item, {\r\n                functionsAsIs: true\r\n            });\r\n            if (false !== itemVisible && (\"auto\" === itemOverflow || \"always\" === itemOverflow) || \"menu\" === item.location) {\r\n                result = true\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    _getMenuItems: function() {\r\n        return this._toolbar._getMenuItems()\r\n    },\r\n    _updateMenuVisibility: _common.noop,\r\n    _renderMenuButton: function() {\r\n        var buttonOptions = this._menuButtonOptions();\r\n        this._renderMenuButtonContainer();\r\n        this._$button = (0, _renderer.default)(\"<div>\").appendTo(this._$menuButtonContainer).addClass(TOOLBAR_MENU_BUTTON_CLASS);\r\n        this._toolbar._createComponent(this._$button, _button.default, buttonOptions)\r\n    },\r\n    _menuButtonOptions: function() {\r\n        return {\r\n            onClick: this._menuButtonClickHandler.bind(this)\r\n        }\r\n    },\r\n    _menuButtonClickHandler: function() {\r\n        this._toggleMenu(!this._menuShown, true)\r\n    },\r\n    _renderMenuButtonContainer: function() {\r\n        var $afterSection = this._toolbar._$afterSection;\r\n        this._$menuButtonContainer = (0, _renderer.default)(\"<div>\").appendTo($afterSection).addClass(this._toolbar._buttonClass()).addClass(TOOLBAR_MENU_CONTAINER_CLASS)\r\n    },\r\n    renderMenuItems: function() {\r\n        this._menu && this._menu.option(\"items\", this._getMenuItems())\r\n    },\r\n    toggleMenuVisibility: function(visible, animate) {\r\n        this._menu && this._toggleMenu(visible, animate)\r\n    },\r\n    _toggleMenu: function(visible) {\r\n        this._menuShown = visible\r\n    },\r\n    getMenuWidget: function() {\r\n        return this._menu\r\n    },\r\n    widgetOption: function(name, value) {\r\n        this._menu && this._menu.option(name, value)\r\n    }\r\n});\r\nvar _default = ToolbarStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/tree_view.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiTree_view = _interopRequireDefault(require(\"./tree_view/ui.tree_view.search\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _uiTree_view.default;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/tree_view/ui.tree_view.base.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _element = require(\"../../core/element\");\r\nvar _check_box = _interopRequireDefault(require(\"../check_box\"));\r\nvar _ui = _interopRequireDefault(require(\"../hierarchical_collection/ui.hierarchical_collection_widget\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _double_click = require(\"../../events/double_click\");\r\nvar _fx = _interopRequireDefault(require(\"../../animation/fx\"));\r\nvar _ui2 = _interopRequireDefault(require(\"../scroll_view/ui.scrollable\"));\r\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _ui3 = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar WIDGET_CLASS = \"dx-treeview\";\r\nvar NODE_CLASS = \"\".concat(WIDGET_CLASS, \"-node\");\r\nvar NODE_CONTAINER_CLASS = \"\".concat(NODE_CLASS, \"-container\");\r\nvar NODE_LOAD_INDICATOR_CLASS = \"\".concat(NODE_CLASS, \"-loadindicator\");\r\nvar OPENED_NODE_CONTAINER_CLASS = \"\".concat(NODE_CLASS, \"-container-opened\");\r\nvar IS_LEAF = \"\".concat(NODE_CLASS, \"-is-leaf\");\r\nvar ITEM_CLASS = \"\".concat(WIDGET_CLASS, \"-item\");\r\nvar ITEM_WITH_CHECKBOX_CLASS = \"\".concat(ITEM_CLASS, \"-with-checkbox\");\r\nvar ITEM_WITHOUT_CHECKBOX_CLASS = \"\".concat(ITEM_CLASS, \"-without-checkbox\");\r\nvar ITEM_DATA_KEY = \"\".concat(ITEM_CLASS, \"-data\");\r\nvar TOGGLE_ITEM_VISIBILITY_CLASS = \"\".concat(WIDGET_CLASS, \"-toggle-item-visibility\");\r\nvar LOAD_INDICATOR_CLASS = \"\".concat(WIDGET_CLASS, \"-loadindicator\");\r\nvar LOAD_INDICATOR_WRAPPER_CLASS = \"\".concat(WIDGET_CLASS, \"-loadindicator-wrapper\");\r\nvar TOGGLE_ITEM_VISIBILITY_OPENED_CLASS = \"\".concat(WIDGET_CLASS, \"-toggle-item-visibility-opened\");\r\nvar SELECT_ALL_ITEM_CLASS = \"\".concat(WIDGET_CLASS, \"-select-all-item\");\r\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar SELECTED_ITEM_CLASS = \"dx-state-selected\";\r\nvar EXPAND_EVENT_NAMESPACE = \"dxTreeView_expand\";\r\nvar DATA_ITEM_ID = \"data-item-id\";\r\nvar TreeViewBase = _ui.default.inherit({\r\n    _supportedKeys: function(e) {\r\n        var _this = this;\r\n        var click = function(e) {\r\n            var $itemElement = (0, _renderer.default)(_this.option(\"focusedElement\"));\r\n            if (!$itemElement.length) {\r\n                return\r\n            }\r\n            e.target = $itemElement;\r\n            e.currentTarget = $itemElement;\r\n            _this._itemClickHandler(e, $itemElement.children(\".\" + ITEM_CLASS));\r\n            var expandEventName = _this._getEventNameByOption(_this.option(\"expandEvent\"));\r\n            var expandByClick = expandEventName === (0, _index.addNamespace)(_click.name, EXPAND_EVENT_NAMESPACE);\r\n            if (expandByClick) {\r\n                _this._expandEventHandler(e)\r\n            }\r\n        };\r\n        var select = function(e) {\r\n            e.preventDefault();\r\n            var $focusedElement = (0, _renderer.default)(_this.option(\"focusedElement\"));\r\n            var checkboxInstance = _this._getCheckBoxInstance($focusedElement);\r\n            if (!checkboxInstance.option(\"disabled\")) {\r\n                var currentState = checkboxInstance.option(\"value\");\r\n                _this._updateItemSelection(!currentState, $focusedElement.find(\".\" + ITEM_CLASS).get(0), true)\r\n            }\r\n        };\r\n        var toggleExpandedNestedItems = function(state, e) {\r\n            if (!this.option(\"expandAllEnabled\")) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            var $rootElement = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n            if (!$rootElement.length) {\r\n                return\r\n            }\r\n            var rootItem = this._getItemData($rootElement.find(\".\".concat(ITEM_CLASS)));\r\n            this._toggleExpandedNestedItems([rootItem], state)\r\n        };\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            enter: this._showCheckboxes() ? select : click,\r\n            space: this._showCheckboxes() ? select : click,\r\n            asterisk: toggleExpandedNestedItems.bind(this, true),\r\n            minus: toggleExpandedNestedItems.bind(this, false)\r\n        })\r\n    },\r\n    _toggleExpandedNestedItems: function(items, state) {\r\n        if (!items) {\r\n            return\r\n        }\r\n        for (var i = 0, len = items.length; i < len; i++) {\r\n            var item = items[i];\r\n            var node = this._dataAdapter.getNodeByItem(item);\r\n            this._toggleExpandedState(node, state);\r\n            this._toggleExpandedNestedItems(item.items, state)\r\n        }\r\n    },\r\n    _getNodeElement: function(node, cache) {\r\n        var key = this._encodeString(node.internalFields.key);\r\n        if (cache) {\r\n            if (!cache.$nodeByKey) {\r\n                cache.$nodeByKey = {};\r\n                this.$element().find(\".\".concat(NODE_CLASS)).each(function() {\r\n                    var $node = (0, _renderer.default)(this);\r\n                    var key = $node.attr(DATA_ITEM_ID);\r\n                    cache.$nodeByKey[key] = $node\r\n                })\r\n            }\r\n            return cache.$nodeByKey[key] || (0, _renderer.default)()\r\n        }\r\n        var element = this.$element().get(0).querySelector(\"[\".concat(DATA_ITEM_ID, '=\"').concat(key, '\"]'));\r\n        return (0, _renderer.default)(element)\r\n    },\r\n    _activeStateUnit: \".\" + ITEM_CLASS,\r\n    _widgetClass: function() {\r\n        return WIDGET_CLASS\r\n    },\r\n    _getDefaultOptions: function() {\r\n        var defaultOptions = (0, _extend.extend)(this.callBase(), {\r\n            animationEnabled: true,\r\n            dataStructure: \"tree\",\r\n            deferRendering: true,\r\n            expandAllEnabled: false,\r\n            hasItemsExpr: \"hasItems\",\r\n            selectNodesRecursive: true,\r\n            expandNodesRecursive: true,\r\n            showCheckBoxesMode: \"none\",\r\n            selectAllText: _message.default.format(\"dxList-selectAll\"),\r\n            onItemSelectionChanged: null,\r\n            onItemExpanded: null,\r\n            onItemCollapsed: null,\r\n            scrollDirection: \"vertical\",\r\n            virtualModeEnabled: false,\r\n            rootValue: 0,\r\n            focusStateEnabled: false,\r\n            selectionMode: \"multiple\",\r\n            expandEvent: \"dblclick\",\r\n            selectByClick: false,\r\n            createChildren: null,\r\n            onSelectAllValueChanged: null\r\n        });\r\n        return (0, _extend.extend)(true, defaultOptions, {\r\n            integrationOptions: {\r\n                useDeferUpdateForTemplates: false\r\n            }\r\n        })\r\n    },\r\n    _initSelectedItems: _common.noop,\r\n    _syncSelectionOptions: _common.asyncNoop,\r\n    _fireSelectionChanged: function() {\r\n        var selectionChangePromise = this._selectionChangePromise;\r\n        (0, _deferred.when)(selectionChangePromise).done(function() {\r\n            this._createActionByOption(\"onSelectionChanged\", {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            })()\r\n        }.bind(this))\r\n    },\r\n    _createSelectAllValueChangedAction: function() {\r\n        this._selectAllValueChangedAction = this._createActionByOption(\"onSelectAllValueChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _fireSelectAllValueChanged: function(value) {\r\n        this._selectAllValueChangedAction({\r\n            value: value\r\n        })\r\n    },\r\n    _checkBoxModeChange: function(value, previousValue) {\r\n        if (\"none\" === previousValue || \"none\" === value) {\r\n            this.repaint();\r\n            return\r\n        }\r\n        var selectAllExists = this._$selectAllItem && this._$selectAllItem.length;\r\n        switch (value) {\r\n            case \"selectAll\":\r\n                if (!selectAllExists) {\r\n                    this._createSelectAllValueChangedAction();\r\n                    this._renderSelectAllItem()\r\n                }\r\n                break;\r\n            case \"normal\":\r\n                if (selectAllExists) {\r\n                    this._$selectAllItem.remove();\r\n                    delete this._$selectAllItem\r\n                }\r\n        }\r\n    },\r\n    _removeSelection: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._dataAdapter.getFullData(), function(_, node) {\r\n            if (!that._hasChildren(node)) {\r\n                return\r\n            }\r\n            that._dataAdapter.toggleSelection(node.internalFields.key, false, true)\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name,\r\n            value = args.value,\r\n            previousValue = args.previousValue;\r\n        switch (name) {\r\n            case \"selectAllText\":\r\n                if (this._$selectAllItem) {\r\n                    this._$selectAllItem.dxCheckBox(\"instance\").option(\"text\", value)\r\n                }\r\n                break;\r\n            case \"showCheckBoxesMode\":\r\n                this._checkBoxModeChange(value, previousValue);\r\n                break;\r\n            case \"scrollDirection\":\r\n                this._scrollableContainer.option(\"direction\", value);\r\n                break;\r\n            case \"items\":\r\n                delete this._$selectAllItem;\r\n                this.callBase(args);\r\n                break;\r\n            case \"dataSource\":\r\n                this.callBase(args);\r\n                this._initDataAdapter();\r\n                this._filter = {};\r\n                break;\r\n            case \"hasItemsExpr\":\r\n                this._initAccessors();\r\n                this.repaint();\r\n                break;\r\n            case \"expandEvent\":\r\n                this._initExpandEvent();\r\n                break;\r\n            case \"deferRendering\":\r\n            case \"dataStructure\":\r\n            case \"rootValue\":\r\n            case \"createChildren\":\r\n            case \"expandNodesRecursive\":\r\n            case \"onItemSelectionChanged\":\r\n            case \"onItemExpanded\":\r\n            case \"onItemCollapsed\":\r\n            case \"expandAllEnabled\":\r\n            case \"animationEnabled\":\r\n            case \"virtualModeEnabled\":\r\n            case \"selectByClick\":\r\n                break;\r\n            case \"selectionMode\":\r\n                this._initDataAdapter();\r\n                this.callBase(args);\r\n                break;\r\n            case \"onSelectAllValueChanged\":\r\n                this._createSelectAllValueChangedAction();\r\n                break;\r\n            case \"selectNodesRecursive\":\r\n                this._dataAdapter.setOption(\"recursiveSelection\", args.value);\r\n                this.repaint();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _initDataSource: function() {\r\n        if (this._useCustomChildrenLoader()) {\r\n            this._loadChildrenByCustomLoader(null).done(function(newItems) {\r\n                if (newItems && newItems.length) {\r\n                    this.option(\"items\", newItems)\r\n                }\r\n            }.bind(this))\r\n        } else {\r\n            this.callBase();\r\n            this._isVirtualMode() && this._initVirtualMode()\r\n        }\r\n    },\r\n    _initVirtualMode: function() {\r\n        var filter = this._filter;\r\n        if (!filter.custom) {\r\n            filter.custom = this._dataSource.filter()\r\n        }\r\n        if (!filter.internal) {\r\n            filter.internal = [this.option(\"parentIdExpr\"), this.option(\"rootValue\")]\r\n        }\r\n    },\r\n    _useCustomChildrenLoader: function() {\r\n        return (0, _type.isFunction)(this.option(\"createChildren\")) && this._isDataStructurePlain()\r\n    },\r\n    _loadChildrenByCustomLoader: function(parentNode) {\r\n        var invocationResult = this.option(\"createChildren\").call(this, parentNode);\r\n        if (Array.isArray(invocationResult)) {\r\n            return (new _deferred.Deferred).resolve(invocationResult).promise()\r\n        }\r\n        if (invocationResult && (0, _type.isFunction)(invocationResult.then)) {\r\n            return (0, _deferred.fromPromise)(invocationResult)\r\n        }\r\n        return (new _deferred.Deferred).resolve([]).promise()\r\n    },\r\n    _combineFilter: function() {\r\n        if (!this._filter.custom || !this._filter.custom.length) {\r\n            return this._filter.internal\r\n        }\r\n        return [this._filter.custom, this._filter.internal]\r\n    },\r\n    _dataSourceLoadErrorHandler: function() {\r\n        this._renderEmptyMessage()\r\n    },\r\n    _init: function() {\r\n        this._filter = {};\r\n        this.callBase();\r\n        this._initStoreChangeHandlers()\r\n    },\r\n    _dataSourceChangedHandler: function(newItems) {\r\n        var items = this.option(\"items\");\r\n        if (this._initialized && this._isVirtualMode() && items.length) {\r\n            return\r\n        }\r\n        this.option(\"items\", newItems)\r\n    },\r\n    _removeTreeViewLoadIndicator: function() {\r\n        if (!this._treeViewLoadIndicator) {\r\n            return\r\n        }\r\n        this._treeViewLoadIndicator.remove();\r\n        this._treeViewLoadIndicator = null\r\n    },\r\n    _createTreeViewLoadIndicator: function() {\r\n        this._treeViewLoadIndicator = (0, _renderer.default)(\"<div>\").addClass(LOAD_INDICATOR_CLASS);\r\n        this._createComponent(this._treeViewLoadIndicator, _load_indicator.default, {});\r\n        return this._treeViewLoadIndicator\r\n    },\r\n    _dataSourceLoadingChangedHandler: function(isLoading) {\r\n        var resultFilter;\r\n        if (this._isVirtualMode()) {\r\n            resultFilter = this._combineFilter();\r\n            this._dataSource.filter(resultFilter)\r\n        }\r\n        if (isLoading && !this._dataSource.isLoaded()) {\r\n            this.option(\"items\", []);\r\n            var $wrapper = (0, _renderer.default)(\"<div>\").addClass(LOAD_INDICATOR_WRAPPER_CLASS);\r\n            this._createTreeViewLoadIndicator().appendTo($wrapper);\r\n            this.itemsContainer().append($wrapper);\r\n            if (this._isVirtualMode() && this._dataSource.filter() !== resultFilter) {\r\n                this._dataSource.filter([])\r\n            }\r\n        } else {\r\n            this._removeTreeViewLoadIndicator()\r\n        }\r\n    },\r\n    _initStoreChangeHandlers: function() {\r\n        var _this2 = this;\r\n        if (\"plain\" !== this.option(\"dataStructure\")) {\r\n            return\r\n        }\r\n        this._dataSource && this._dataSource.store().on(\"inserted\", function(newItem) {\r\n            _this2.option().items = _this2.option(\"items\").concat(newItem);\r\n            _this2._dataAdapter.addItem(newItem);\r\n            if (!_this2._dataAdapter.isFiltered(newItem)) {\r\n                return\r\n            }\r\n            _this2._updateLevel(_this2._parentIdGetter(newItem))\r\n        }).on(\"removed\", function(removedKey) {\r\n            var node = _this2._dataAdapter.getNodeByKey(removedKey);\r\n            if ((0, _type.isDefined)(node)) {\r\n                _this2.option(\"items\")[_this2._dataAdapter.getIndexByKey(node.internalFields.key)] = 0;\r\n                _this2._markChildrenItemsToRemove(node);\r\n                _this2._removeItems();\r\n                _this2._dataAdapter.removeItem(removedKey);\r\n                _this2._updateLevel(_this2._parentIdGetter(node))\r\n            }\r\n        })\r\n    },\r\n    _markChildrenItemsToRemove: function(node) {\r\n        var _this3 = this;\r\n        var keys = node.internalFields.childrenKeys;\r\n        (0, _iterator.each)(keys, function(_, key) {\r\n            _this3.option(\"items\")[_this3._dataAdapter.getIndexByKey(key)] = 0;\r\n            _this3._markChildrenItemsToRemove(_this3._dataAdapter.getNodeByKey(key))\r\n        })\r\n    },\r\n    _removeItems: function() {\r\n        var _this4 = this;\r\n        var items = (0, _extend.extend)(true, [], this.option(\"items\"));\r\n        var counter = 0;\r\n        (0, _iterator.each)(items, function(index, item) {\r\n            if (!item) {\r\n                _this4.option(\"items\").splice(index - counter, 1);\r\n                counter++\r\n            }\r\n        })\r\n    },\r\n    _updateLevel: function(parentId) {\r\n        var $container = this._getContainerByParentKey(parentId);\r\n        this._renderItems($container, this._dataAdapter.getChildrenNodes(parentId))\r\n    },\r\n    _getOldContainer: function($itemElement) {\r\n        if ($itemElement.length) {\r\n            return $itemElement.children(\".\".concat(NODE_CONTAINER_CLASS))\r\n        }\r\n        if (this._scrollableContainer) {\r\n            return this._scrollableContainer.$content().children()\r\n        }\r\n        return (0, _renderer.default)()\r\n    },\r\n    _getContainerByParentKey: function(parentId) {\r\n        var node = this._dataAdapter.getNodeByKey(parentId);\r\n        var $itemElement = node ? this._getNodeElement(node) : [];\r\n        this._getOldContainer($itemElement).remove();\r\n        var $container = this._renderNodeContainer($itemElement);\r\n        if (this._isRootLevel(parentId)) {\r\n            if (!this._scrollableContainer) {\r\n                this._renderScrollableContainer()\r\n            }\r\n            this._scrollableContainer.$content().append($container)\r\n        }\r\n        return $container\r\n    },\r\n    _isRootLevel: function(parentId) {\r\n        return parentId === this.option(\"rootValue\")\r\n    },\r\n    _getAccessors: function() {\r\n        var accessors = this.callBase();\r\n        accessors.push(\"hasItems\");\r\n        return accessors\r\n    },\r\n    _getDataAdapterOptions: function() {\r\n        return {\r\n            rootValue: this.option(\"rootValue\"),\r\n            multipleSelection: !this._isSingleSelection(),\r\n            recursiveSelection: this._isRecursiveSelection(),\r\n            recursiveExpansion: this.option(\"expandNodesRecursive\"),\r\n            selectionRequired: this.option(\"selectionRequired\"),\r\n            dataType: this.option(\"dataStructure\"),\r\n            sort: this._dataSource && this._dataSource.sort()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderScrollableContainer();\r\n        this._renderEmptyMessage(this._dataAdapter.getRootNodes());\r\n        this.callBase();\r\n        this.setAria(\"role\", \"tree\")\r\n    },\r\n    _renderContentImpl: function() {\r\n        var $nodeContainer = this._renderNodeContainer();\r\n        this._scrollableContainer.$content().append($nodeContainer);\r\n        if (!this.option(\"items\") || !this.option(\"items\").length) {\r\n            return\r\n        }\r\n        this._renderItems($nodeContainer, this._dataAdapter.getRootNodes());\r\n        this._initExpandEvent();\r\n        if (this._selectAllEnabled()) {\r\n            this._createSelectAllValueChangedAction();\r\n            this._renderSelectAllItem($nodeContainer)\r\n        }\r\n    },\r\n    _isVirtualMode: function() {\r\n        return this.option(\"virtualModeEnabled\") && this._isDataStructurePlain() && !!this.option(\"dataSource\")\r\n    },\r\n    _isDataStructurePlain: function() {\r\n        return \"plain\" === this.option(\"dataStructure\")\r\n    },\r\n    _fireContentReadyAction: function() {\r\n        var dataSource = this.getDataSource();\r\n        var skipContentReadyAction = dataSource && !dataSource.isLoaded();\r\n        if (this._scrollableContainer && (0, _window.hasWindow)()) {\r\n            this._scrollableContainer.update()\r\n        }\r\n        if (!skipContentReadyAction) {\r\n            this.callBase()\r\n        }\r\n        if (this._scrollableContainer && (0, _window.hasWindow)()) {\r\n            this._scrollableContainer.update()\r\n        }\r\n    },\r\n    _renderScrollableContainer: function() {\r\n        this._scrollableContainer = this._createComponent((0, _renderer.default)(\"<div>\").appendTo(this.$element()), _ui2.default, {\r\n            direction: this.option(\"scrollDirection\"),\r\n            useKeyboard: false\r\n        })\r\n    },\r\n    _renderNodeContainer: function($parent) {\r\n        var $container = (0, _renderer.default)(\"<ul>\").addClass(NODE_CONTAINER_CLASS);\r\n        this.setAria(\"role\", \"group\", $container);\r\n        if ($parent && $parent.length) {\r\n            var itemData = this._getItemData($parent.children(\".\" + ITEM_CLASS));\r\n            if (this._expandedGetter(itemData)) {\r\n                $container.addClass(OPENED_NODE_CONTAINER_CLASS)\r\n            }\r\n            $container.appendTo($parent)\r\n        }\r\n        return $container\r\n    },\r\n    _createDOMElement: function($nodeContainer, node) {\r\n        var $node = (0, _renderer.default)(\"<li>\").addClass(NODE_CLASS).attr(DATA_ITEM_ID, this._encodeString(node.internalFields.key)).prependTo($nodeContainer);\r\n        this.setAria({\r\n            role: \"treeitem\",\r\n            label: this._displayGetter(node.internalFields.item) || \"\",\r\n            expanded: node.internalFields.expanded || false,\r\n            level: this._getLevel($nodeContainer)\r\n        }, $node);\r\n        return $node\r\n    },\r\n    _getLevel: function($nodeContainer) {\r\n        var parent = $nodeContainer.parent();\r\n        return parent.hasClass(\"dx-scrollable-content\") ? 1 : parseInt(parent.attr(\"aria-level\")) + 1\r\n    },\r\n    _showCheckboxes: function() {\r\n        return \"none\" !== this.option(\"showCheckBoxesMode\")\r\n    },\r\n    _selectAllEnabled: function() {\r\n        return \"selectAll\" === this.option(\"showCheckBoxesMode\") && !this._isSingleSelection()\r\n    },\r\n    _renderItems: function($nodeContainer, nodes) {\r\n        var length = nodes.length - 1;\r\n        for (var i = length; i >= 0; i--) {\r\n            this._renderItem(i, nodes[i], $nodeContainer)\r\n        }\r\n        this._renderedItemsCount += nodes.length\r\n    },\r\n    _renderItem: function(nodeIndex, node, $nodeContainer) {\r\n        var $node = this._createDOMElement($nodeContainer, node);\r\n        var nodeData = node.internalFields;\r\n        var showCheckBox = this._showCheckboxes();\r\n        $node.addClass(showCheckBox ? ITEM_WITH_CHECKBOX_CLASS : ITEM_WITHOUT_CHECKBOX_CLASS);\r\n        $node.toggleClass(INVISIBLE_STATE_CLASS, false === nodeData.item.visible);\r\n        showCheckBox && this._renderCheckBox($node, node);\r\n        this.setAria(\"selected\", nodeData.selected, $node);\r\n        this._toggleSelectedClass($node, nodeData.selected);\r\n        this.callBase(this._renderedItemsCount + nodeIndex, nodeData.item, $node);\r\n        if (false !== nodeData.item.visible) {\r\n            this._renderChildren($node, node)\r\n        }\r\n    },\r\n    _setAriaSelected: function() {},\r\n    _renderChildren: function($node, node) {\r\n        var _this5 = this;\r\n        if (!this._hasChildren(node)) {\r\n            this._addLeafClass($node);\r\n            return\r\n        }\r\n        this._renderToggleItemVisibilityIcon($node, node);\r\n        if (this.option(\"deferRendering\") && !node.internalFields.expanded) {\r\n            return\r\n        }\r\n        this._loadSublevel(node).done(function(childNodes) {\r\n            _this5._renderSublevel($node, _this5._getActualNode(node), childNodes)\r\n        })\r\n    },\r\n    _getActualNode: function(cachedNode) {\r\n        return this._dataAdapter.getNodeByKey(cachedNode.internalFields.key)\r\n    },\r\n    _hasChildren: function(node) {\r\n        if (this._isVirtualMode() || this._useCustomChildrenLoader()) {\r\n            return false !== this._hasItemsGetter(node.internalFields.item)\r\n        }\r\n        return this.callBase(node)\r\n    },\r\n    _loadSublevel: function(node) {\r\n        var _this6 = this;\r\n        var deferred = new _deferred.Deferred;\r\n        var childrenNodes = this._getChildNodes(node);\r\n        if (childrenNodes.length) {\r\n            deferred.resolve(childrenNodes)\r\n        } else {\r\n            this._loadNestedItems(node).done(function(items) {\r\n                deferred.resolve(_this6._dataAdapter.getNodesByItems(items))\r\n            })\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    _renderSublevel: function($node, node, childNodes) {\r\n        var $nestedNodeContainer = this._renderNodeContainer($node, node);\r\n        var childNodesByChildrenKeys = childNodes.filter(function(childNode) {\r\n            return node.internalFields.childrenKeys.indexOf(childNode.internalFields.key) !== -1\r\n        });\r\n        this._renderItems($nestedNodeContainer, childNodesByChildrenKeys);\r\n        if (childNodesByChildrenKeys.length && !node.internalFields.selected) {\r\n            var firstChild = childNodesByChildrenKeys[0];\r\n            this._updateParentsState(firstChild, this._getNodeElement(firstChild))\r\n        }\r\n        this._normalizeIconState($node, childNodesByChildrenKeys.length);\r\n        if (node.internalFields.expanded) {\r\n            $nestedNodeContainer.addClass(OPENED_NODE_CONTAINER_CLASS)\r\n        }\r\n    },\r\n    _executeItemRenderAction: function(itemIndex, itemData, itemElement) {\r\n        var node = this._getNode(itemElement);\r\n        this._getItemRenderAction()({\r\n            itemElement: itemElement,\r\n            itemIndex: itemIndex,\r\n            itemData: itemData,\r\n            node: this._dataAdapter.getPublicNode(node)\r\n        })\r\n    },\r\n    _addLeafClass: function($node) {\r\n        $node.addClass(IS_LEAF)\r\n    },\r\n    _expandEventHandler: function(e) {\r\n        var $nodeElement = (0, _renderer.default)(e.currentTarget.parentNode);\r\n        if (!$nodeElement.hasClass(IS_LEAF)) {\r\n            this._toggleExpandedState(e.currentTarget, void 0, e)\r\n        }\r\n    },\r\n    _initExpandEvent: function() {\r\n        var expandedEventName = this._getEventNameByOption(this.option(\"expandEvent\"));\r\n        var $itemsContainer = this._itemContainer();\r\n        var itemSelector = this._itemSelector();\r\n        _events_engine.default.off($itemsContainer, \".\" + EXPAND_EVENT_NAMESPACE, itemSelector);\r\n        _events_engine.default.on($itemsContainer, expandedEventName, itemSelector, this._expandEventHandler.bind(this))\r\n    },\r\n    _getEventNameByOption: function(name) {\r\n        var event = \"click\" === name ? _click.name : _double_click.name;\r\n        return (0, _index.addNamespace)(event, EXPAND_EVENT_NAMESPACE)\r\n    },\r\n    _getNode: function(identifier) {\r\n        if (!(0, _type.isDefined)(identifier)) {\r\n            return null\r\n        }\r\n        if (identifier.internalFields) {\r\n            return identifier\r\n        }\r\n        if ((0, _type.isPrimitive)(identifier)) {\r\n            return this._dataAdapter.getNodeByKey(identifier)\r\n        }\r\n        var itemElement = (0, _renderer.default)(identifier).get(0);\r\n        if (!itemElement) {\r\n            return null\r\n        }\r\n        if (_dom_adapter.default.isElementNode(itemElement)) {\r\n            return this._getNodeByElement(itemElement)\r\n        }\r\n        return this._dataAdapter.getNodeByItem(itemElement)\r\n    },\r\n    _getNodeByElement: function(itemElement) {\r\n        var $node = (0, _renderer.default)(itemElement).closest(\".\" + NODE_CLASS);\r\n        var key = this._decodeString($node.attr(DATA_ITEM_ID));\r\n        return this._dataAdapter.getNodeByKey(key)\r\n    },\r\n    _toggleExpandedState: function(itemElement, state, e) {\r\n        var node = this._getNode(itemElement);\r\n        if (!node) {\r\n            return (new _deferred.Deferred).reject().promise()\r\n        }\r\n        if (node.internalFields.disabled) {\r\n            return (new _deferred.Deferred).reject().promise()\r\n        }\r\n        var currentState = node.internalFields.expanded;\r\n        if (currentState === state) {\r\n            return (new _deferred.Deferred).resolve().promise()\r\n        }\r\n        if (this._hasChildren(node)) {\r\n            var $node = this._getNodeElement(node);\r\n            if ($node.find(\".\".concat(NODE_LOAD_INDICATOR_CLASS, \":not(.\").concat(INVISIBLE_STATE_CLASS, \")\")).length) {\r\n                return (new _deferred.Deferred).reject().promise()\r\n            }\r\n            this._createLoadIndicator($node)\r\n        }\r\n        if (!(0, _type.isDefined)(state)) {\r\n            state = !currentState\r\n        }\r\n        this._dataAdapter.toggleExpansion(node.internalFields.key, state);\r\n        return this._updateExpandedItemsUI(node, state, e)\r\n    },\r\n    _createLoadIndicator: function($node) {\r\n        var $icon = $node.children(\".\" + TOGGLE_ITEM_VISIBILITY_CLASS);\r\n        var $nodeContainer = $node.children(\".\".concat(NODE_CONTAINER_CLASS));\r\n        if ($icon.hasClass(TOGGLE_ITEM_VISIBILITY_OPENED_CLASS) || $nodeContainer.not(\":empty\").length) {\r\n            return\r\n        }\r\n        this._createComponent((0, _renderer.default)(\"<div>\").addClass(NODE_LOAD_INDICATOR_CLASS), _load_indicator.default, {}).$element().appendTo($node);\r\n        $icon.hide()\r\n    },\r\n    _renderToggleItemVisibilityIcon: function($node, node) {\r\n        var $icon = (0, _renderer.default)(\"<div>\").addClass(TOGGLE_ITEM_VISIBILITY_CLASS).appendTo($node);\r\n        if (node.internalFields.expanded) {\r\n            $icon.addClass(TOGGLE_ITEM_VISIBILITY_OPENED_CLASS);\r\n            $node.parent().addClass(OPENED_NODE_CONTAINER_CLASS)\r\n        }\r\n        if (node.internalFields.disabled) {\r\n            $icon.addClass(DISABLED_STATE_CLASS)\r\n        }\r\n        this._renderToggleItemVisibilityIconClick($icon, node)\r\n    },\r\n    _renderToggleItemVisibilityIconClick: function($icon, node) {\r\n        var _this7 = this;\r\n        var eventName = (0, _index.addNamespace)(_click.name, this.NAME);\r\n        _events_engine.default.off($icon, eventName);\r\n        _events_engine.default.on($icon, eventName, function(e) {\r\n            _this7._toggleExpandedState(node.internalFields.key, void 0, e)\r\n        })\r\n    },\r\n    _updateExpandedItemsUI: function(node, state, e) {\r\n        var $node = this._getNodeElement(node);\r\n        var isHiddenNode = !$node.length || state && $node.is(\":hidden\");\r\n        if (this.option(\"expandNodesRecursive\") && isHiddenNode) {\r\n            var parentNode = this._getNode(node.internalFields.parentKey);\r\n            if (parentNode) {\r\n                this._updateExpandedItemsUI(parentNode, state, e)\r\n            }\r\n        }\r\n        var $icon = $node.children(\".\" + TOGGLE_ITEM_VISIBILITY_CLASS);\r\n        var $nodeContainer = $node.children(\".\".concat(NODE_CONTAINER_CLASS));\r\n        $icon.toggleClass(TOGGLE_ITEM_VISIBILITY_OPENED_CLASS, state);\r\n        var nodeContainerExists = $nodeContainer.length > 0;\r\n        var completionCallback = new _deferred.Deferred;\r\n        if (!state || nodeContainerExists && !$nodeContainer.is(\":empty\")) {\r\n            this._animateNodeContainer(node, state, e, completionCallback);\r\n            return completionCallback.promise()\r\n        }\r\n        if (0 === node.internalFields.childrenKeys.length && (this._isVirtualMode() || this._useCustomChildrenLoader())) {\r\n            this._loadNestedItemsWithUpdate(node, state, e, completionCallback);\r\n            return completionCallback.promise()\r\n        }\r\n        this._renderSublevel($node, node, this._getChildNodes(node));\r\n        this._fireContentReadyAction();\r\n        this._animateNodeContainer(node, state, e, completionCallback);\r\n        return completionCallback.promise()\r\n    },\r\n    _loadNestedItemsWithUpdate: function(node, state, e, completionCallback) {\r\n        var _this8 = this;\r\n        var $node = this._getNodeElement(node);\r\n        this._loadNestedItems(node).done(function(items) {\r\n            var actualNodeData = _this8._getActualNode(node);\r\n            _this8._renderSublevel($node, actualNodeData, _this8._dataAdapter.getNodesByItems(items));\r\n            if (!items || !items.length) {\r\n                return\r\n            }\r\n            _this8._fireContentReadyAction();\r\n            _this8._animateNodeContainer(actualNodeData, state, e, completionCallback)\r\n        })\r\n    },\r\n    _loadNestedItems: function(node) {\r\n        var _this9 = this;\r\n        if (this._useCustomChildrenLoader()) {\r\n            var publicNode = this._dataAdapter.getPublicNode(node);\r\n            return this._loadChildrenByCustomLoader(publicNode).done(function(newItems) {\r\n                if (!_this9._areNodesExists(newItems)) {\r\n                    _this9._appendItems(newItems)\r\n                }\r\n            })\r\n        }\r\n        if (!this._isVirtualMode()) {\r\n            return (new _deferred.Deferred).resolve([]).promise()\r\n        }\r\n        this._filter.internal = [this.option(\"parentIdExpr\"), node.internalFields.key];\r\n        this._dataSource.filter(this._combineFilter());\r\n        return this._dataSource.load().done(function(newItems) {\r\n            if (!_this9._areNodesExists(newItems)) {\r\n                _this9._appendItems(newItems)\r\n            }\r\n        })\r\n    },\r\n    _areNodesExists: function(newItems, items) {\r\n        var keyOfRootItem = this.keyOf(newItems[0]);\r\n        var fullData = this._dataAdapter.getFullData();\r\n        return !!this._dataAdapter.getNodeByKey(keyOfRootItem, fullData)\r\n    },\r\n    _appendItems: function(newItems) {\r\n        this.option().items = this.option(\"items\").concat(newItems);\r\n        this._initDataAdapter()\r\n    },\r\n    _animateNodeContainer: function(node, state, e, completionCallback) {\r\n        var $node = this._getNodeElement(node);\r\n        var $nodeContainer = $node.children(\".\".concat(NODE_CONTAINER_CLASS));\r\n        if (node && completionCallback && 0 === $nodeContainer.length) {\r\n            completionCallback.resolve()\r\n        }\r\n        $nodeContainer.addClass(OPENED_NODE_CONTAINER_CLASS);\r\n        var nodeHeight = $nodeContainer.height();\r\n        _fx.default.stop($nodeContainer, true);\r\n        _fx.default.animate($nodeContainer, {\r\n            type: \"custom\",\r\n            duration: this.option(\"animationEnabled\") ? 400 : 0,\r\n            from: {\r\n                maxHeight: state ? 0 : nodeHeight\r\n            },\r\n            to: {\r\n                maxHeight: state ? nodeHeight : 0\r\n            },\r\n            complete: function() {\r\n                $nodeContainer.css(\"maxHeight\", \"none\");\r\n                $nodeContainer.toggleClass(OPENED_NODE_CONTAINER_CLASS, state);\r\n                this.setAria(\"expanded\", state, $node);\r\n                this._scrollableContainer.update();\r\n                this._fireExpandedStateUpdatedEvent(state, node, e);\r\n                if (completionCallback) {\r\n                    completionCallback.resolve()\r\n                }\r\n            }.bind(this)\r\n        })\r\n    },\r\n    _fireExpandedStateUpdatedEvent: function(isExpanded, node, e) {\r\n        if (!this._hasChildren(node)) {\r\n            return\r\n        }\r\n        var optionName = isExpanded ? \"onItemExpanded\" : \"onItemCollapsed\";\r\n        if ((0, _type.isDefined)(e)) {\r\n            this._itemDXEventHandler(e, optionName, {\r\n                node: this._dataAdapter.getPublicNode(node)\r\n            })\r\n        } else {\r\n            var target = this._getNodeElement(node);\r\n            this._itemEventHandler(target, optionName, {\r\n                event: e,\r\n                node: this._dataAdapter.getPublicNode(node)\r\n            })\r\n        }\r\n    },\r\n    _normalizeIconState: function($node, hasNewItems) {\r\n        var $loadIndicator = $node.find(\".\".concat(NODE_LOAD_INDICATOR_CLASS));\r\n        $loadIndicator.length && _load_indicator.default.getInstance($loadIndicator).option(\"visible\", false);\r\n        if (hasNewItems) {\r\n            var $icon = $node.find(\".\" + TOGGLE_ITEM_VISIBILITY_CLASS);\r\n            $icon.show();\r\n            return\r\n        }\r\n        $node.find(\".\" + TOGGLE_ITEM_VISIBILITY_CLASS).removeClass(TOGGLE_ITEM_VISIBILITY_CLASS);\r\n        $node.addClass(IS_LEAF)\r\n    },\r\n    _emptyMessageContainer: function() {\r\n        return this._scrollableContainer ? this._scrollableContainer.content() : this.callBase()\r\n    },\r\n    _renderContent: function() {\r\n        var items = this.option(\"items\");\r\n        if (items && items.length) {\r\n            this._contentAlreadyRendered = true\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderSelectAllItem: function($container) {\r\n        $container = $container || this.$element().find(\".\".concat(NODE_CONTAINER_CLASS)).first();\r\n        this._$selectAllItem = (0, _renderer.default)(\"<div>\").addClass(SELECT_ALL_ITEM_CLASS);\r\n        var value = this._dataAdapter.isAllSelected();\r\n        this._createComponent(this._$selectAllItem, _check_box.default, {\r\n            value: value,\r\n            text: this.option(\"selectAllText\"),\r\n            onValueChanged: this._onSelectAllCheckboxValueChanged.bind(this)\r\n        });\r\n        this._toggleSelectedClass(this._$selectAllItem, value);\r\n        $container.before(this._$selectAllItem)\r\n    },\r\n    _onSelectAllCheckboxValueChanged: function(args) {\r\n        this._toggleSelectAll(args);\r\n        this._fireSelectAllValueChanged(args.value)\r\n    },\r\n    _toggleSelectAll: function(args) {\r\n        this._dataAdapter.toggleSelectAll(args.value);\r\n        this._updateItemsUI();\r\n        this._fireSelectionChanged()\r\n    },\r\n    _renderCheckBox: function($node, node) {\r\n        var $checkbox = (0, _renderer.default)(\"<div>\").appendTo($node);\r\n        this._createComponent($checkbox, _check_box.default, {\r\n            value: node.internalFields.selected,\r\n            onValueChanged: this._changeCheckboxValue.bind(this),\r\n            focusStateEnabled: false,\r\n            disabled: this._disabledGetter(node)\r\n        })\r\n    },\r\n    _toggleSelectedClass: function($node, value) {\r\n        $node.toggleClass(SELECTED_ITEM_CLASS, !!value)\r\n    },\r\n    _toggleNodeDisabledState: function(node, state) {\r\n        var $node = this._getNodeElement(node);\r\n        var $item = $node.find(\".\" + ITEM_CLASS).eq(0);\r\n        this._dataAdapter.toggleNodeDisabledState(node.internalFields.key, state);\r\n        $item.toggleClass(DISABLED_STATE_CLASS, !!state);\r\n        if (this._showCheckboxes()) {\r\n            var checkbox = this._getCheckBoxInstance($node);\r\n            checkbox.option(\"disabled\", !!state)\r\n        }\r\n    },\r\n    _itemOptionChanged: function(item, property, value) {\r\n        var node = this._dataAdapter.getNodeByItem(item);\r\n        if (property === this.option(\"disabledExpr\")) {\r\n            this._toggleNodeDisabledState(node, value)\r\n        }\r\n    },\r\n    _changeCheckboxValue: function(e) {\r\n        var $node = (0, _renderer.default)(e.element).parent(\".\" + NODE_CLASS);\r\n        var $item = $node.children(\".\" + ITEM_CLASS);\r\n        var item = this._getItemData($item);\r\n        var node = this._getNodeByElement($item);\r\n        var value = e.value;\r\n        if (node && node.internalFields.selected === value) {\r\n            return\r\n        }\r\n        this._updateItemSelection(value, item, e.event)\r\n    },\r\n    _isSingleSelection: function() {\r\n        return \"single\" === this.option(\"selectionMode\")\r\n    },\r\n    _isRecursiveSelection: function() {\r\n        return this.option(\"selectNodesRecursive\") && \"single\" !== this.option(\"selectionMode\")\r\n    },\r\n    _isLastSelectedBranch: function(publicNode, selectedNodesKeys, deep) {\r\n        var keyIndex = selectedNodesKeys.indexOf(publicNode.key);\r\n        if (keyIndex >= 0) {\r\n            selectedNodesKeys.splice(keyIndex, 1)\r\n        }\r\n        if (deep) {\r\n            (0, _iterator.each)(publicNode.children, function(_, childNode) {\r\n                this._isLastSelectedBranch(childNode, selectedNodesKeys, true)\r\n            }.bind(this))\r\n        }\r\n        if (publicNode.parent) {\r\n            this._isLastSelectedBranch(publicNode.parent, selectedNodesKeys)\r\n        }\r\n        return 0 === selectedNodesKeys.length\r\n    },\r\n    _isLastRequired: function(node) {\r\n        var selectionRequired = this.option(\"selectionRequired\");\r\n        var isSingleMode = this._isSingleSelection();\r\n        var selectedNodesKeys = this.getSelectedNodeKeys();\r\n        if (!selectionRequired) {\r\n            return\r\n        }\r\n        if (isSingleMode) {\r\n            return 1 === selectedNodesKeys.length\r\n        } else {\r\n            return this._isLastSelectedBranch(node.internalFields.publicNode, selectedNodesKeys.slice(), true)\r\n        }\r\n    },\r\n    _updateItemSelection: function(value, itemElement, dxEvent) {\r\n        var _this10 = this;\r\n        var node = this._getNode(itemElement);\r\n        if (!node || false === node.visible) {\r\n            return false\r\n        }\r\n        if (node.internalFields.selected === value) {\r\n            return true\r\n        }\r\n        if (!value && this._isLastRequired(node)) {\r\n            if (this._showCheckboxes()) {\r\n                var $node = this._getNodeElement(node);\r\n                this._getCheckBoxInstance($node).option(\"value\", true)\r\n            }\r\n            return false\r\n        }\r\n        if (value && this._isSingleSelection()) {\r\n            var selectedKeys = this.getSelectedNodeKeys();\r\n            (0, _iterator.each)(selectedKeys, function(index, key) {\r\n                _this10._dataAdapter.toggleSelection(key, false);\r\n                _this10._updateItemsUI();\r\n                _this10._fireItemSelectionChanged(_this10._getNode(key))\r\n            })\r\n        }\r\n        this._dataAdapter.toggleSelection(node.internalFields.key, value);\r\n        var isAllSelected = this._dataAdapter.isAllSelected();\r\n        var needFireSelectAllChanged = this._selectAllEnabled() && this._$selectAllItem.dxCheckBox(\"instance\").option(\"value\") !== isAllSelected;\r\n        this._updateItemsUI();\r\n        this._fireItemSelectionChanged(node, dxEvent);\r\n        this._fireSelectionChanged();\r\n        if (needFireSelectAllChanged) {\r\n            this._fireSelectAllValueChanged(isAllSelected)\r\n        }\r\n        return true\r\n    },\r\n    _fireItemSelectionChanged: function(node, dxEvent) {\r\n        var initiator = dxEvent || this._findItemElementByItem(node.internalFields.item);\r\n        var handler = dxEvent ? this._itemDXEventHandler : this._itemEventHandler;\r\n        handler.call(this, initiator, \"onItemSelectionChanged\", {\r\n            node: this._dataAdapter.getPublicNode(node),\r\n            itemData: node.internalFields.item\r\n        })\r\n    },\r\n    _getCheckBoxInstance: function($node) {\r\n        return $node.children(\".dx-checkbox\").dxCheckBox(\"instance\")\r\n    },\r\n    _updateItemsUI: function() {\r\n        var _this11 = this;\r\n        var cache = {};\r\n        (0, _iterator.each)(this._dataAdapter.getData(), function(_, node) {\r\n            var $node = _this11._getNodeElement(node, cache);\r\n            var nodeSelection = node.internalFields.selected;\r\n            if (!$node.length) {\r\n                return\r\n            }\r\n            _this11._toggleSelectedClass($node, nodeSelection);\r\n            _this11.setAria(\"selected\", nodeSelection, $node);\r\n            if (_this11._showCheckboxes()) {\r\n                _this11._getCheckBoxInstance($node).option(\"value\", nodeSelection)\r\n            }\r\n        });\r\n        if (this._selectAllEnabled()) {\r\n            var selectAllCheckbox = this._$selectAllItem.dxCheckBox(\"instance\");\r\n            selectAllCheckbox.option(\"onValueChanged\", void 0);\r\n            selectAllCheckbox.option(\"value\", this._dataAdapter.isAllSelected());\r\n            selectAllCheckbox.option(\"onValueChanged\", this._onSelectAllCheckboxValueChanged.bind(this))\r\n        }\r\n    },\r\n    _updateParentsState: function(node, $node) {\r\n        if (!$node) {\r\n            return\r\n        }\r\n        var parentNode = this._dataAdapter.getNodeByKey(node.internalFields.parentKey);\r\n        var $parentNode = (0, _renderer.default)($node.parents(\".\" + NODE_CLASS)[0]);\r\n        if (this._showCheckboxes()) {\r\n            var parentValue = parentNode.internalFields.selected;\r\n            this._getCheckBoxInstance($parentNode).option(\"value\", parentValue);\r\n            this._toggleSelectedClass($parentNode, parentValue)\r\n        }\r\n        if (parentNode.internalFields.parentKey !== this.option(\"rootValue\")) {\r\n            this._updateParentsState(parentNode, $parentNode)\r\n        }\r\n    },\r\n    _itemEventHandlerImpl: function(initiator, action, actionArgs) {\r\n        var $itemElement = (0, _renderer.default)(initiator).closest(\".\" + NODE_CLASS).children(\".\" + ITEM_CLASS);\r\n        return action((0, _extend.extend)(this._extendActionArgs($itemElement), actionArgs))\r\n    },\r\n    _itemContextMenuHandler: function(e) {\r\n        this._createEventHandler(\"onItemContextMenu\", e)\r\n    },\r\n    _itemHoldHandler: function(e) {\r\n        this._createEventHandler(\"onItemHold\", e)\r\n    },\r\n    _createEventHandler: function(eventName, e) {\r\n        var node = this._getNodeByElement(e.currentTarget);\r\n        this._itemDXEventHandler(e, eventName, {\r\n            node: this._dataAdapter.getPublicNode(node)\r\n        })\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return ITEM_DATA_KEY\r\n    },\r\n    _attachClickEvent: function() {\r\n        var clickSelector = \".\" + this._itemClass();\r\n        var pointerDownSelector = \".\" + NODE_CLASS + \", .\" + SELECT_ALL_ITEM_CLASS;\r\n        var eventName = (0, _index.addNamespace)(_click.name, this.NAME);\r\n        var pointerDownEvent = (0, _index.addNamespace)(_pointer.default.down, this.NAME);\r\n        var $itemContainer = this._itemContainer();\r\n        var that = this;\r\n        _events_engine.default.off($itemContainer, eventName, clickSelector);\r\n        _events_engine.default.off($itemContainer, pointerDownEvent, pointerDownSelector);\r\n        _events_engine.default.on($itemContainer, eventName, clickSelector, function(e) {\r\n            that._itemClickHandler(e, (0, _renderer.default)(this))\r\n        });\r\n        _events_engine.default.on($itemContainer, pointerDownEvent, pointerDownSelector, function(e) {\r\n            that._itemPointerDownHandler(e)\r\n        })\r\n    },\r\n    _itemClickHandler: function(e, $item) {\r\n        var itemData = this._getItemData($item);\r\n        var node = this._getNodeByElement($item);\r\n        this._itemDXEventHandler(e, \"onItemClick\", {\r\n            node: this._dataAdapter.getPublicNode(node)\r\n        });\r\n        if (this.option(\"selectByClick\") && !e.isDefaultPrevented()) {\r\n            this._updateItemSelection(!node.internalFields.selected, itemData, e)\r\n        }\r\n    },\r\n    _updateSelectionToFirstItem: function($items, startIndex) {\r\n        var itemIndex = startIndex;\r\n        while (itemIndex >= 0) {\r\n            var $item = (0, _renderer.default)($items[itemIndex]);\r\n            this._updateItemSelection(true, $item.find(\".\" + ITEM_CLASS).get(0));\r\n            itemIndex--\r\n        }\r\n    },\r\n    _updateSelectionToLastItem: function($items, startIndex) {\r\n        var length = $items.length;\r\n        var itemIndex = startIndex;\r\n        while (itemIndex < length) {\r\n            var $item = (0, _renderer.default)($items[itemIndex]);\r\n            this._updateItemSelection(true, $item.find(\".\" + ITEM_CLASS).get(0));\r\n            itemIndex++\r\n        }\r\n    },\r\n    _focusInHandler: function(e) {\r\n        var _this12 = this;\r\n        this._updateFocusState(e, true);\r\n        if (this.option(\"focusedElement\")) {\r\n            clearTimeout(this._setFocusedItemTimeout);\r\n            this._setFocusedItemTimeout = setTimeout(function() {\r\n                _this12._setFocusedItem((0, _renderer.default)(_this12.option(\"focusedElement\")))\r\n            });\r\n            return\r\n        }\r\n        var $activeItem = this._getActiveItem();\r\n        this.option(\"focusedElement\", (0, _element.getPublicElement)($activeItem.closest(\".\" + NODE_CLASS)))\r\n    },\r\n    _setFocusedItem: function($target) {\r\n        if (!$target || !$target.length) {\r\n            return\r\n        }\r\n        if (!$target.children().hasClass(DISABLED_STATE_CLASS)) {\r\n            this.callBase($target)\r\n        }\r\n    },\r\n    _itemPointerDownHandler: function(e) {\r\n        if (!this.option(\"focusStateEnabled\")) {\r\n            return\r\n        }\r\n        var $target = (0, _renderer.default)(e.target).closest(\".\" + NODE_CLASS + \", .\" + SELECT_ALL_ITEM_CLASS);\r\n        if (!$target.length) {\r\n            return\r\n        }\r\n        var itemElement = $target.hasClass(DISABLED_STATE_CLASS) ? null : $target;\r\n        this.option(\"focusedElement\", (0, _element.getPublicElement)(itemElement))\r\n    },\r\n    _findNonDisabledNodes: function($nodes) {\r\n        return $nodes.not(function() {\r\n            return (0, _renderer.default)(this).children(\".\" + ITEM_CLASS).hasClass(DISABLED_STATE_CLASS)\r\n        })\r\n    },\r\n    _moveFocus: function(location, e) {\r\n        var FOCUS_UP = \"up\";\r\n        var FOCUS_DOWN = \"down\";\r\n        var FOCUS_FIRST = \"first\";\r\n        var FOCUS_LAST = \"last\";\r\n        var FOCUS_LEFT = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        var FOCUS_RIGHT = this.option(\"rtlEnabled\") ? \"left\" : \"right\";\r\n        this.$element().find(\".\".concat(NODE_CONTAINER_CLASS)).each(function() {\r\n            _fx.default.stop(this, true)\r\n        });\r\n        var $items = this._findNonDisabledNodes(this._nodeElements());\r\n        if (!$items || !$items.length) {\r\n            return\r\n        }\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                var $prevItem = this._prevItem($items);\r\n                this.option(\"focusedElement\", (0, _element.getPublicElement)($prevItem));\r\n                var prevItemElement = this._getNodeItemElement($prevItem);\r\n                this._scrollableContainer.scrollToElement(prevItemElement);\r\n                if (e.shiftKey && this._showCheckboxes()) {\r\n                    this._updateItemSelection(true, prevItemElement)\r\n                }\r\n                break;\r\n            case FOCUS_DOWN:\r\n                var $nextItem = this._nextItem($items);\r\n                this.option(\"focusedElement\", (0, _element.getPublicElement)($nextItem));\r\n                var nextItemElement = this._getNodeItemElement($nextItem);\r\n                this._scrollableContainer.scrollToElement(nextItemElement);\r\n                if (e.shiftKey && this._showCheckboxes()) {\r\n                    this._updateItemSelection(true, nextItemElement)\r\n                }\r\n                break;\r\n            case FOCUS_FIRST:\r\n                var $firstItem = $items.first();\r\n                if (e.shiftKey && this._showCheckboxes()) {\r\n                    this._updateSelectionToFirstItem($items, $items.index(this._prevItem($items)))\r\n                }\r\n                this.option(\"focusedElement\", (0, _element.getPublicElement)($firstItem));\r\n                this._scrollableContainer.scrollToElement(this._getNodeItemElement($firstItem));\r\n                break;\r\n            case FOCUS_LAST:\r\n                var $lastItem = $items.last();\r\n                if (e.shiftKey && this._showCheckboxes()) {\r\n                    this._updateSelectionToLastItem($items, $items.index(this._nextItem($items)))\r\n                }\r\n                this.option(\"focusedElement\", (0, _element.getPublicElement)($lastItem));\r\n                this._scrollableContainer.scrollToElement(this._getNodeItemElement($lastItem));\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                this._expandFocusedContainer();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                this._collapseFocusedContainer();\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n        }\r\n    },\r\n    _getNodeItemElement: function($node) {\r\n        return $node.find(\".\" + ITEM_CLASS).get(0)\r\n    },\r\n    _nodeElements: function() {\r\n        return this.$element().find(\".\" + NODE_CLASS).not(\":hidden\")\r\n    },\r\n    _expandFocusedContainer: function() {\r\n        var $focusedNode = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n        if (!$focusedNode.length || $focusedNode.hasClass(IS_LEAF)) {\r\n            return\r\n        }\r\n        var $node = $focusedNode.find(\".\".concat(NODE_CONTAINER_CLASS)).eq(0);\r\n        if ($node.hasClass(OPENED_NODE_CONTAINER_CLASS)) {\r\n            var $nextItem = this._nextItem(this._findNonDisabledNodes(this._nodeElements()));\r\n            this.option(\"focusedElement\", (0, _element.getPublicElement)($nextItem));\r\n            this._scrollableContainer.scrollToElement(this._getNodeItemElement($nextItem));\r\n            return\r\n        }\r\n        var node = this._getNodeByElement($focusedNode.children(\".\" + ITEM_CLASS));\r\n        this._toggleExpandedState(node, true)\r\n    },\r\n    _getClosestNonDisabledNode: function($node) {\r\n        do {\r\n            $node = $node.parent().closest(\".\" + NODE_CLASS)\r\n        } while ($node.children(\".dx-treeview-item.dx-state-disabled\").length);\r\n        return $node\r\n    },\r\n    _collapseFocusedContainer: function() {\r\n        var $focusedNode = (0, _renderer.default)(this.option(\"focusedElement\"));\r\n        if (!$focusedNode.length) {\r\n            return\r\n        }\r\n        var nodeElement = $focusedNode.find(\".\".concat(NODE_CONTAINER_CLASS)).eq(0);\r\n        if (!$focusedNode.hasClass(IS_LEAF) && nodeElement.hasClass(OPENED_NODE_CONTAINER_CLASS)) {\r\n            var node = this._getNodeByElement($focusedNode.children(\".\" + ITEM_CLASS));\r\n            this._toggleExpandedState(node, false)\r\n        } else {\r\n            var collapsedNode = this._getClosestNonDisabledNode($focusedNode);\r\n            collapsedNode.length && this.option(\"focusedElement\", (0, _element.getPublicElement)(collapsedNode));\r\n            this._scrollableContainer.scrollToElement(this._getNodeItemElement(collapsedNode))\r\n        }\r\n    },\r\n    _encodeString: function(value) {\r\n        return (0, _type.isString)(value) ? encodeURI(value) : value\r\n    },\r\n    _decodeString: function(value) {\r\n        return (0, _type.isString)(value) ? decodeURI(value) : value\r\n    },\r\n    updateDimensions: function() {\r\n        var _this13 = this;\r\n        var deferred = new _deferred.Deferred;\r\n        if (this._scrollableContainer) {\r\n            this._scrollableContainer.update().done(function() {\r\n                deferred.resolveWith(_this13)\r\n            })\r\n        } else {\r\n            deferred.resolveWith(this)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    selectItem: function(itemElement) {\r\n        return this._updateItemSelection(true, itemElement)\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        return this._updateItemSelection(false, itemElement)\r\n    },\r\n    expandItem: function(itemElement) {\r\n        return this._toggleExpandedState(itemElement, true)\r\n    },\r\n    collapseItem: function(itemElement) {\r\n        return this._toggleExpandedState(itemElement, false)\r\n    },\r\n    getNodes: function() {\r\n        return this._dataAdapter.getTreeNodes()\r\n    },\r\n    getSelectedNodes: function() {\r\n        var _this14 = this;\r\n        return this.getSelectedNodeKeys().map(function(key) {\r\n            var node = _this14._dataAdapter.getNodeByKey(key);\r\n            return _this14._dataAdapter.getPublicNode(node)\r\n        })\r\n    },\r\n    getSelectedNodesKeys: function() {\r\n        _ui3.default.log(\"W0002\", \"dxTreeView\", \"getSelectedNodesKeys\", \"20.1\", \"Use the 'getSelectedNodeKeys' method instead\");\r\n        return this.getSelectedNodeKeys()\r\n    },\r\n    getSelectedNodeKeys: function() {\r\n        return this._dataAdapter.getSelectedNodesKeys()\r\n    },\r\n    selectAll: function() {\r\n        if (this._selectAllEnabled()) {\r\n            this._$selectAllItem.dxCheckBox(\"instance\").option(\"value\", true)\r\n        } else {\r\n            this._toggleSelectAll({\r\n                value: true\r\n            })\r\n        }\r\n    },\r\n    unselectAll: function() {\r\n        if (this._selectAllEnabled()) {\r\n            this._$selectAllItem.dxCheckBox(\"instance\").option(\"value\", false)\r\n        } else {\r\n            this._toggleSelectAll({\r\n                value: false\r\n            })\r\n        }\r\n    },\r\n    expandAll: function() {\r\n        var dataAdapter = this._dataAdapter;\r\n        (0, _iterator.each)(dataAdapter.getData(), function(_, node) {\r\n            return dataAdapter.toggleExpansion(node.internalFields.key, true)\r\n        });\r\n        this.repaint()\r\n    },\r\n    collapseAll: function() {\r\n        (0, _iterator.each)(this._dataAdapter.getExpandedNodesKeys(), function(_, key) {\r\n            this._toggleExpandedState(key, false)\r\n        }.bind(this))\r\n    },\r\n    scrollToItem: function(keyOrItemOrElement) {\r\n        var _this15 = this;\r\n        var node = this._getNode(keyOrItemOrElement);\r\n        if (!node) {\r\n            return (new _deferred.Deferred).reject().promise()\r\n        }\r\n        var nodeKeysToExpand = [];\r\n        var parentNode = node.internalFields.publicNode.parent;\r\n        while (null != parentNode) {\r\n            if (!parentNode.expanded) {\r\n                nodeKeysToExpand.push(parentNode.key)\r\n            }\r\n            parentNode = parentNode.parent\r\n        }\r\n        var scrollCallback = new _deferred.Deferred;\r\n        this._expandNodes(nodeKeysToExpand.reverse()).always(function() {\r\n            var $element = _this15._getNodeElement(node);\r\n            if ($element && $element.length) {\r\n                _this15._scrollableContainer.scrollToElementTopLeft($element);\r\n                scrollCallback.resolve()\r\n            } else {\r\n                scrollCallback.reject()\r\n            }\r\n        });\r\n        return scrollCallback.promise()\r\n    },\r\n    _expandNodes: function(keysToExpand) {\r\n        var _this16 = this;\r\n        if (!keysToExpand || 0 === keysToExpand.length) {\r\n            return (new _deferred.Deferred).resolve().promise()\r\n        }\r\n        var resultCallback = new _deferred.Deferred;\r\n        var callbacksByNodes = keysToExpand.map(function(key) {\r\n            return _this16.expandItem(key)\r\n        });\r\n        _deferred.when.apply(_renderer.default, callbacksByNodes).done(function() {\r\n            return resultCallback.resolve()\r\n        }).fail(function() {\r\n            return resultCallback.reject()\r\n        });\r\n        return resultCallback.promise()\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        clearTimeout(this._setFocusedItemTimeout)\r\n    }\r\n});\r\nvar _default = TreeViewBase;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/tree_view/ui.tree_view.search.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.search_box_mixin\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiTree_view = _interopRequireDefault(require(\"./ui.tree_view.base\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar WIDGET_CLASS = \"dx-treeview\";\r\nvar NODE_CONTAINER_CLASS = \"\".concat(WIDGET_CLASS, \"-node-container\");\r\nvar TreeViewSearch = _uiTree_view.default.inherit(_ui.default).inherit({\r\n    _addWidgetPrefix: function(className) {\r\n        return \"\".concat(WIDGET_CLASS, \"-\").concat(className)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"searchValue\":\r\n                if (this._showCheckboxes() && this._isRecursiveSelection()) {\r\n                    this._removeSelection()\r\n                }\r\n                this._initDataAdapter();\r\n                this._updateSearch();\r\n                this._repaintContainer();\r\n                this.option(\"focusedElement\", null);\r\n                break;\r\n            case \"searchExpr\":\r\n                this._initDataAdapter();\r\n                this.repaint();\r\n                break;\r\n            case \"searchMode\":\r\n                this.option(\"expandNodesRecursive\") ? this._updateDataAdapter() : this._initDataAdapter();\r\n                this.repaint();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _updateDataAdapter: function() {\r\n        this._setOptionWithoutOptionChange(\"expandNodesRecursive\", false);\r\n        this._initDataAdapter();\r\n        this._setOptionWithoutOptionChange(\"expandNodesRecursive\", true)\r\n    },\r\n    _getDataAdapterOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            searchValue: this.option(\"searchValue\"),\r\n            searchMode: this.option(\"searchMode\") || \"contains\",\r\n            searchExpr: this.option(\"searchExpr\")\r\n        })\r\n    },\r\n    _updateSearch: function() {\r\n        if (this._searchEditor) {\r\n            var editorOptions = this._getSearchEditorOptions();\r\n            this._searchEditor.option(editorOptions)\r\n        }\r\n    },\r\n    _repaintContainer: function() {\r\n        var $container = this.$element().find(\".\".concat(NODE_CONTAINER_CLASS)).first();\r\n        var rootNodes;\r\n        if ($container.length) {\r\n            $container.empty();\r\n            rootNodes = this._dataAdapter.getRootNodes();\r\n            this._renderEmptyMessage(rootNodes);\r\n            this._renderItems($container, rootNodes);\r\n            this._fireContentReadyAction()\r\n        }\r\n    },\r\n    _itemContainer: function(isSearchMode) {\r\n        if (this._scrollableContainer && isSearchMode) {\r\n            return (0, _renderer.default)(this._scrollableContainer.content())\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _addWidgetClass: function() {\r\n        this.$element().addClass(this._widgetClass())\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._removeSearchBox()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxTreeView\", TreeViewSearch);\r\nvar _default = TreeViewSearch;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/validation/default_adapter.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DefaultAdapter = _class.default.inherit({\r\n    ctor: function(editor, validator) {\r\n        var _this = this;\r\n        this.editor = editor;\r\n        this.validator = validator;\r\n        this.validationRequestsCallbacks = [];\r\n        var handler = function(args) {\r\n            _this.validationRequestsCallbacks.forEach(function(item) {\r\n                return item(args)\r\n            })\r\n        };\r\n        editor.validationRequest.add(handler);\r\n        editor.on(\"disposing\", function() {\r\n            editor.validationRequest.remove(handler)\r\n        })\r\n    },\r\n    getValue: function() {\r\n        return this.editor.option(\"value\")\r\n    },\r\n    getCurrentValidationError: function() {\r\n        return this.editor.option(\"validationError\")\r\n    },\r\n    bypass: function() {\r\n        return this.editor.option(\"disabled\")\r\n    },\r\n    applyValidationResults: function(params) {\r\n        this.editor.option({\r\n            validationErrors: params.brokenRules,\r\n            validationStatus: params.status\r\n        })\r\n    },\r\n    reset: function() {\r\n        this.editor.reset()\r\n    },\r\n    focus: function() {\r\n        this.editor.focus()\r\n    }\r\n});\r\nvar _default = DefaultAdapter;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/validation_group.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _dom_component = _interopRequireDefault(require(\"../core/dom_component\"));\r\nvar _validation_summary = _interopRequireDefault(require(\"./validation_summary\"));\r\nvar _validation_engine = _interopRequireDefault(require(\"./validation_engine\"));\r\nvar _validator = _interopRequireDefault(require(\"./validator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    _setPrototypeOf(subClass, superClass)\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\nvar VALIDATION_ENGINE_CLASS = \"dx-validationgroup\";\r\nvar VALIDATOR_CLASS = \"dx-validator\";\r\nvar VALIDATION_SUMMARY_CLASS = \"dx-validationsummary\";\r\nvar ValidationGroup = function(_DOMComponent) {\r\n    _inheritsLoose(ValidationGroup, _DOMComponent);\r\n\r\n    function ValidationGroup() {\r\n        return _DOMComponent.apply(this, arguments) || this\r\n    }\r\n    var _proto = ValidationGroup.prototype;\r\n    _proto._getDefaultOptions = function() {\r\n        return _DOMComponent.prototype._getDefaultOptions.call(this)\r\n    };\r\n    _proto._init = function() {\r\n        _DOMComponent.prototype._init.call(this);\r\n        _validation_engine.default.addGroup(this)\r\n    };\r\n    _proto._initMarkup = function() {\r\n        var $element = this.$element();\r\n        $element.addClass(VALIDATION_ENGINE_CLASS);\r\n        $element.find(\".\".concat(VALIDATOR_CLASS)).each(function(_, validatorContainer) {\r\n            _validator.default.getInstance((0, _renderer.default)(validatorContainer))._initGroupRegistration()\r\n        });\r\n        $element.find(\".\".concat(VALIDATION_SUMMARY_CLASS)).each(function(_, summaryContainer) {\r\n            _validation_summary.default.getInstance((0, _renderer.default)(summaryContainer))._initGroupRegistration()\r\n        });\r\n        _DOMComponent.prototype._initMarkup.call(this)\r\n    };\r\n    _proto.validate = function() {\r\n        return _validation_engine.default.validateGroup(this)\r\n    };\r\n    _proto.reset = function() {\r\n        return _validation_engine.default.resetGroup(this)\r\n    };\r\n    _proto._dispose = function() {\r\n        _validation_engine.default.removeGroup(this);\r\n        this.$element().removeClass(VALIDATION_ENGINE_CLASS);\r\n        _DOMComponent.prototype._dispose.call(this)\r\n    };\r\n    _proto._useTemplates = function() {\r\n        return false\r\n    };\r\n    return ValidationGroup\r\n}(_dom_component.default);\r\n(0, _component_registrator.default)(\"dxValidationGroup\", ValidationGroup);\r\nvar _default = ValidationGroup;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/validation_message.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _overlay = _interopRequireDefault(require(\"./overlay\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _string = require(\"../core/utils/string\");\r\nvar _position = require(\"../core/utils/position\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar INVALID_MESSAGE = \"dx-invalid-message\";\r\nvar INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\";\r\nvar INVALID_MESSAGE_ALWAYS = \"dx-invalid-message-always\";\r\nvar INVALID_MESSAGE_CONTENT = \"dx-invalid-message-content\";\r\nvar VALIDATION_MESSAGE_MIN_WIDTH = 100;\r\nvar ValidationMessage = _overlay.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            integrationOptions: {},\r\n            templatesRenderAsynchronously: false,\r\n            shading: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            closeOnOutsideClick: false,\r\n            closeOnTargetScroll: false,\r\n            animation: null,\r\n            visible: true,\r\n            propagateOutsideClick: true,\r\n            _checkParentVisibility: false,\r\n            rtlEnabled: false,\r\n            contentTemplate: this._renderInnerHtml,\r\n            maxWidth: \"100%\",\r\n            mode: \"auto\",\r\n            validationErrors: void 0,\r\n            positionRequest: void 0,\r\n            describedElement: void 0,\r\n            boundary: void 0,\r\n            offset: {\r\n                h: 0,\r\n                v: 0\r\n            }\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.updateMaxWidth();\r\n        this._updatePosition()\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._ensureMessageNotEmpty();\r\n        this._toggleModeClass();\r\n        this._updateContentId()\r\n    },\r\n    _ensureMessageNotEmpty: function() {\r\n        this._textMarkup = this._getTextMarkup();\r\n        var shouldShowMessage = this.option(\"visible\") && this._textMarkup;\r\n        this._toggleVisibilityClasses(shouldShowMessage)\r\n    },\r\n    _toggleVisibilityClasses: function(visible) {\r\n        if (visible) {\r\n            this.$element().addClass(INVALID_MESSAGE);\r\n            this.$wrapper().addClass(INVALID_MESSAGE)\r\n        } else {\r\n            this.$element().removeClass(INVALID_MESSAGE);\r\n            this.$wrapper().removeClass(INVALID_MESSAGE)\r\n        }\r\n    },\r\n    _updateContentId: function() {\r\n        var describedElement = this.option(\"describedElement\") || this.option(\"container\");\r\n        var contentId = (0, _renderer.default)(describedElement).attr(\"aria-describedby\");\r\n        this.$content().addClass(INVALID_MESSAGE_CONTENT).attr(\"id\", contentId)\r\n    },\r\n    _renderInnerHtml: function(element) {\r\n        var $element = element && (0, _renderer.default)(element);\r\n        null === $element || void 0 === $element ? void 0 : $element.html(this._textMarkup)\r\n    },\r\n    _getTextMarkup: function() {\r\n        var _this$option;\r\n        var validationErrors = null !== (_this$option = this.option(\"validationErrors\")) && void 0 !== _this$option ? _this$option : [];\r\n        var validationErrorMessage = \"\";\r\n        validationErrors.forEach(function(err) {\r\n            var _err$message;\r\n            var separator = validationErrorMessage ? \"<br />\" : \"\";\r\n            validationErrorMessage += separator + (0, _string.encodeHtml)(null !== (_err$message = null === err || void 0 === err ? void 0 : err.message) && void 0 !== _err$message ? _err$message : \"\")\r\n        });\r\n        return validationErrorMessage\r\n    },\r\n    _toggleModeClass: function() {\r\n        var mode = this.option(\"mode\");\r\n        this.$wrapper().toggleClass(INVALID_MESSAGE_AUTO, \"auto\" === mode).toggleClass(INVALID_MESSAGE_ALWAYS, \"always\" === mode)\r\n    },\r\n    updateMaxWidth: function() {\r\n        var _target$outerWidth;\r\n        var target = this.option(\"target\");\r\n        var targetWidth = (null === target || void 0 === target ? void 0 : null === (_target$outerWidth = target.outerWidth) || void 0 === _target$outerWidth ? void 0 : _target$outerWidth.call(target)) || (0, _renderer.default)(target).outerWidth();\r\n        var maxWidth = \"100%\";\r\n        if (targetWidth) {\r\n            maxWidth = Math.max(targetWidth, VALIDATION_MESSAGE_MIN_WIDTH)\r\n        }\r\n        this.option({\r\n            maxWidth: maxWidth\r\n        })\r\n    },\r\n    _updatePosition: function() {\r\n        var _this$option2 = this.option(),\r\n            positionRequest = _this$option2.positionRequest,\r\n            rtlEnabled = _this$option2.rtlEnabled,\r\n            offset = _this$option2.offset,\r\n            boundary = _this$option2.boundary;\r\n        var positionSide = (0, _position.getDefaultAlignment)(rtlEnabled);\r\n        var verticalPositions = \"below\" === positionRequest ? [\" top\", \" bottom\"] : [\" bottom\", \" top\"];\r\n        if (rtlEnabled) {\r\n            offset.h = -offset.h\r\n        }\r\n        if (\"below\" !== positionRequest) {\r\n            offset.v = -offset.v\r\n        }\r\n        this.option(\"position\", {\r\n            offset: offset,\r\n            boundary: boundary,\r\n            my: positionSide + verticalPositions[0],\r\n            at: positionSide + verticalPositions[1],\r\n            collision: \"none flip\"\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name,\r\n            value = args.value;\r\n        switch (name) {\r\n            case \"target\":\r\n                this.updateMaxWidth();\r\n                this.callBase(args);\r\n                break;\r\n            case \"boundary\":\r\n                this.option(\"position.boundary\", value);\r\n                break;\r\n            case \"mode\":\r\n                this._toggleModeClass(value);\r\n                break;\r\n            case \"rtlEnabled\":\r\n            case \"offset\":\r\n            case \"positionRequest\":\r\n                this._updatePosition();\r\n                break;\r\n            case \"validationErrors\":\r\n                this._ensureMessageNotEmpty();\r\n                this._renderInnerHtml(this.$content());\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxValidationMessage\", ValidationMessage);\r\nvar _default = ValidationMessage;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/validation_summary.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _validation_engine = _interopRequireDefault(require(\"./validation_engine\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./collection/ui.collection_widget.edit\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar VALIDATION_SUMMARY_CLASS = \"dx-validationsummary\";\r\nvar ITEM_CLASS = VALIDATION_SUMMARY_CLASS + \"-item\";\r\nvar ITEM_DATA_KEY = VALIDATION_SUMMARY_CLASS + \"-item-data\";\r\nvar ValidationSummary = _uiCollection_widget.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            focusStateEnabled: false,\r\n            noDataText: null\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initGroupRegistration()\r\n    },\r\n    _initGroupRegistration: function() {\r\n        var $element = this.$element();\r\n        var group = this.option(\"validationGroup\") || _validation_engine.default.findGroup($element, this._modelByElement($element));\r\n        var groupConfig = _validation_engine.default.addGroup(group);\r\n        this._unsubscribeGroup();\r\n        this._groupWasInit = true;\r\n        this._validationGroup = group;\r\n        this.groupSubscription = this._groupValidationHandler.bind(this);\r\n        groupConfig.on(\"validated\", this.groupSubscription)\r\n    },\r\n    _unsubscribeGroup: function() {\r\n        var groupConfig = _validation_engine.default.getGroupConfig(this._validationGroup);\r\n        groupConfig && groupConfig.off(\"validated\", this.groupSubscription)\r\n    },\r\n    _getOrderedItems: function(validators, items) {\r\n        var orderedItems = [];\r\n        (0, _iterator.each)(validators, function(_, validator) {\r\n            var foundItems = (0, _common.grep)(items, function(item) {\r\n                if (item.validator === validator) {\r\n                    return true\r\n                }\r\n            });\r\n            if (foundItems.length) {\r\n                orderedItems = orderedItems.concat(foundItems)\r\n            }\r\n        });\r\n        return orderedItems\r\n    },\r\n    _groupValidationHandler: function(params) {\r\n        var _this = this;\r\n        var items = this._getOrderedItems(params.validators, (0, _iterator.map)(params.brokenRules, function(rule) {\r\n            return {\r\n                text: rule.message,\r\n                validator: rule.validator,\r\n                index: rule.index\r\n            }\r\n        }));\r\n        this.validators = params.validators;\r\n        (0, _iterator.each)(this.validators, function(_, validator) {\r\n            if (validator._validationSummary !== _this) {\r\n                var handler = _this._itemValidationHandler.bind(_this);\r\n                var disposingHandler = function() {\r\n                    validator.off(\"validated\", handler);\r\n                    validator._validationSummary = null;\r\n                    handler = null\r\n                };\r\n                validator.on(\"validated\", handler);\r\n                validator.on(\"disposing\", disposingHandler);\r\n                validator._validationSummary = _this\r\n            }\r\n        });\r\n        this.option(\"items\", items)\r\n    },\r\n    _itemValidationHandler: function(_ref) {\r\n        var isValid = _ref.isValid,\r\n            validator = _ref.validator,\r\n            brokenRules = _ref.brokenRules;\r\n        var items = this.option(\"items\");\r\n        var itemsChanged = false;\r\n        var itemIndex = 0;\r\n        var _loop = function() {\r\n            var item = items[itemIndex];\r\n            if (item.validator === validator) {\r\n                var foundRule = (0, _common.grep)(brokenRules || [], function(rule) {\r\n                    return rule.index === item.index\r\n                })[0];\r\n                if (isValid || !foundRule) {\r\n                    items.splice(itemIndex, 1);\r\n                    itemsChanged = true;\r\n                    return \"continue\"\r\n                }\r\n                if (foundRule.message !== item.text) {\r\n                    item.text = foundRule.message;\r\n                    itemsChanged = true\r\n                }\r\n            }\r\n            itemIndex++\r\n        };\r\n        while (itemIndex < items.length) {\r\n            var _ret = _loop();\r\n            if (\"continue\" === _ret) {\r\n                continue\r\n            }\r\n        }(0, _iterator.each)(brokenRules, function(_, rule) {\r\n            var foundItem = (0, _common.grep)(items, function(item) {\r\n                return item.validator === validator && item.index === rule.index\r\n            })[0];\r\n            if (!foundItem) {\r\n                items.push({\r\n                    text: rule.message,\r\n                    validator: validator,\r\n                    index: rule.index\r\n                });\r\n                itemsChanged = true\r\n            }\r\n        });\r\n        if (itemsChanged) {\r\n            items = this._getOrderedItems(this.validators, items);\r\n            this.option(\"items\", items)\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(VALIDATION_SUMMARY_CLASS);\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"validationGroup\":\r\n                this._initGroupRegistration();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return ITEM_DATA_KEY\r\n    },\r\n    _postprocessRenderItem: function(params) {\r\n        _events_engine.default.on(params.itemElement, \"click\", function() {\r\n            params.itemData.validator && params.itemData.validator.focus && params.itemData.validator.focus()\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._unsubscribeGroup()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxValidationSummary\", ValidationSummary);\r\nvar _default = ValidationSummary;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/validator.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _element_data = require(\"../core/element_data\");\r\nvar _callbacks = _interopRequireDefault(require(\"../core/utils/callbacks\"));\r\nvar _ui = _interopRequireDefault(require(\"./widget/ui.errors\"));\r\nvar _dom_component = _interopRequireDefault(require(\"../core/dom_component\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _validation_engine = _interopRequireDefault(require(\"./validation_engine\"));\r\nvar _default_adapter = _interopRequireDefault(require(\"./validation/default_adapter\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _deferred = require(\"../core/utils/deferred\");\r\nvar _guid = _interopRequireDefault(require(\"../core/guid\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar VALIDATOR_CLASS = \"dx-validator\";\r\nvar VALIDATION_STATUS_VALID = \"valid\";\r\nvar VALIDATION_STATUS_INVALID = \"invalid\";\r\nvar VALIDATION_STATUS_PENDING = \"pending\";\r\nvar Validator = _dom_component.default.inherit({\r\n    _initOptions: function(options) {\r\n        this.callBase.apply(this, arguments);\r\n        this.option(_validation_engine.default.initValidationOptions(options))\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            validationRules: []\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initGroupRegistration();\r\n        this.focused = (0, _callbacks.default)();\r\n        this._initAdapter();\r\n        this._validationInfo = {\r\n            result: null,\r\n            deferred: null,\r\n            skipValidation: false\r\n        }\r\n    },\r\n    _initGroupRegistration: function() {\r\n        var group = this._findGroup();\r\n        if (!this._groupWasInit) {\r\n            this.on(\"disposing\", function(args) {\r\n                _validation_engine.default.removeRegisteredValidator(args.component._validationGroup, args.component)\r\n            })\r\n        }\r\n        if (!this._groupWasInit || this._validationGroup !== group) {\r\n            _validation_engine.default.removeRegisteredValidator(this._validationGroup, this);\r\n            this._groupWasInit = true;\r\n            this._validationGroup = group;\r\n            _validation_engine.default.registerValidatorInGroup(group, this)\r\n        }\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _getEditor: function() {\r\n        var element = this.$element()[0];\r\n        return (0, _element_data.data)(element, \"dx-validation-target\")\r\n    },\r\n    _initAdapter: function() {\r\n        var _this = this;\r\n        var dxStandardEditor = this._getEditor();\r\n        var adapter = this.option(\"adapter\");\r\n        if (!adapter) {\r\n            if (dxStandardEditor) {\r\n                adapter = new _default_adapter.default(dxStandardEditor, this);\r\n                adapter.validationRequestsCallbacks.push(function(args) {\r\n                    if (_this._validationInfo.skipValidation) {\r\n                        return\r\n                    }\r\n                    _this.validate(args)\r\n                });\r\n                this.option(\"adapter\", adapter);\r\n                return\r\n            }\r\n            throw _ui.default.Error(\"E0120\")\r\n        }\r\n        var callbacks = adapter.validationRequestsCallbacks;\r\n        if (callbacks) {\r\n            callbacks.push(function(args) {\r\n                _this.validate(args)\r\n            })\r\n        }\r\n    },\r\n    _toggleRTLDirection: function(isRtl) {\r\n        var _this$option$editor$o, _this$option, _this$option$editor;\r\n        var rtlEnabled = null !== (_this$option$editor$o = null === (_this$option = this.option(\"adapter\")) || void 0 === _this$option ? void 0 : null === (_this$option$editor = _this$option.editor) || void 0 === _this$option$editor ? void 0 : _this$option$editor.option(\"rtlEnabled\")) && void 0 !== _this$option$editor$o ? _this$option$editor$o : isRtl;\r\n        this.callBase(rtlEnabled)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(VALIDATOR_CLASS);\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._toggleAccessibilityAttributes()\r\n    },\r\n    _toggleAccessibilityAttributes: function() {\r\n        var dxStandardEditor = this._getEditor();\r\n        if (dxStandardEditor) {\r\n            var rules = this.option(\"validationRules\") || [];\r\n            var isRequired = rules.some(function(_ref) {\r\n                var type = _ref.type;\r\n                return \"required\" === type\r\n            }) || null;\r\n            if (dxStandardEditor.isInitialized()) {\r\n                dxStandardEditor.setAria(\"required\", isRequired)\r\n            }\r\n            dxStandardEditor.option(\"_onMarkupRendered\", function() {\r\n                dxStandardEditor.setAria(\"required\", isRequired)\r\n            })\r\n        }\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._initGroupRegistration()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"validationGroup\":\r\n                this._initGroupRegistration();\r\n                return;\r\n            case \"validationRules\":\r\n                this._resetValidationRules();\r\n                this._toggleAccessibilityAttributes();\r\n                void 0 !== this.option(\"isValid\") && this.validate();\r\n                return;\r\n            case \"adapter\":\r\n                this._initAdapter();\r\n                break;\r\n            case \"isValid\":\r\n            case \"validationStatus\":\r\n                this.option(_validation_engine.default.synchronizeValidationOptions(args, this.option()));\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getValidationRules: function() {\r\n        var _this2 = this;\r\n        if (!this._validationRules) {\r\n            this._validationRules = (0, _iterator.map)(this.option(\"validationRules\"), function(rule, index) {\r\n                return (0, _extend.extend)({}, rule, {\r\n                    validator: _this2,\r\n                    index: index\r\n                })\r\n            })\r\n        }\r\n        return this._validationRules\r\n    },\r\n    _findGroup: function() {\r\n        var $element = this.$element();\r\n        return this.option(\"validationGroup\") || _validation_engine.default.findGroup($element, this._modelByElement($element))\r\n    },\r\n    _resetValidationRules: function() {\r\n        delete this._validationRules\r\n    },\r\n    validate: function(args) {\r\n        var _this3 = this;\r\n        var adapter = this.option(\"adapter\");\r\n        var name = this.option(\"name\");\r\n        var bypass = adapter.bypass && adapter.bypass();\r\n        var value = args && void 0 !== args.value ? args.value : adapter.getValue();\r\n        var currentError = adapter.getCurrentValidationError && adapter.getCurrentValidationError();\r\n        var rules = this._getValidationRules();\r\n        var currentResult = this._validationInfo && this._validationInfo.result;\r\n        if (currentResult && currentResult.status === VALIDATION_STATUS_PENDING && currentResult.value === value) {\r\n            return (0, _extend.extend)({}, currentResult)\r\n        }\r\n        var result;\r\n        if (bypass) {\r\n            result = {\r\n                isValid: true,\r\n                status: VALIDATION_STATUS_VALID\r\n            }\r\n        } else {\r\n            if (currentError && currentError.editorSpecific) {\r\n                currentError.validator = this;\r\n                result = {\r\n                    isValid: false,\r\n                    status: VALIDATION_STATUS_INVALID,\r\n                    brokenRule: currentError,\r\n                    brokenRules: [currentError]\r\n                }\r\n            } else {\r\n                result = _validation_engine.default.validate(value, rules, name)\r\n            }\r\n        }\r\n        result.id = (new _guid.default).toString();\r\n        this._applyValidationResult(result, adapter);\r\n        result.complete && result.complete.then(function(res) {\r\n            if (res.id === _this3._validationInfo.result.id) {\r\n                _this3._applyValidationResult(res, adapter)\r\n            }\r\n        });\r\n        return (0, _extend.extend)({}, this._validationInfo.result)\r\n    },\r\n    reset: function() {\r\n        var adapter = this.option(\"adapter\");\r\n        var result = {\r\n            id: null,\r\n            isValid: true,\r\n            brokenRule: null,\r\n            brokenRules: null,\r\n            pendingRules: null,\r\n            status: VALIDATION_STATUS_VALID,\r\n            complete: null\r\n        };\r\n        this._validationInfo.skipValidation = true;\r\n        adapter.reset();\r\n        this._validationInfo.skipValidation = false;\r\n        this._resetValidationRules();\r\n        this._applyValidationResult(result, adapter)\r\n    },\r\n    _updateValidationResult: function(result) {\r\n        if (!this._validationInfo.result || this._validationInfo.result.id !== result.id) {\r\n            var complete = this._validationInfo.deferred && this._validationInfo.result.complete;\r\n            this._validationInfo.result = (0, _extend.extend)({}, result, {\r\n                complete: complete\r\n            })\r\n        } else {\r\n            for (var prop in result) {\r\n                if (\"id\" !== prop && \"complete\" !== prop) {\r\n                    this._validationInfo.result[prop] = result[prop]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _applyValidationResult: function(result, adapter) {\r\n        var validatedAction = this._createActionByOption(\"onValidated\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        });\r\n        result.validator = this;\r\n        this._updateValidationResult(result);\r\n        adapter.applyValidationResults && adapter.applyValidationResults(this._validationInfo.result);\r\n        this.option({\r\n            validationStatus: this._validationInfo.result.status\r\n        });\r\n        if (this._validationInfo.result.status === VALIDATION_STATUS_PENDING) {\r\n            if (!this._validationInfo.deferred) {\r\n                this._validationInfo.deferred = new _deferred.Deferred;\r\n                this._validationInfo.result.complete = this._validationInfo.deferred.promise()\r\n            }\r\n            this._eventsStrategy.fireEvent(\"validating\", [this._validationInfo.result]);\r\n            return\r\n        }\r\n        if (this._validationInfo.result.status !== VALIDATION_STATUS_PENDING) {\r\n            validatedAction(result);\r\n            if (this._validationInfo.deferred) {\r\n                this._validationInfo.deferred.resolve(result);\r\n                this._validationInfo.deferred = null\r\n            }\r\n        }\r\n    },\r\n    focus: function() {\r\n        var adapter = this.option(\"adapter\");\r\n        adapter && adapter.focus && adapter.focus()\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxValidator\", Validator);\r\nvar _default = Validator;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/widget/swatch_container.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _view_port = require(\"../../core/utils/view_port\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SWATCH_CONTAINER_CLASS_PREFIX = \"dx-swatch-\";\r\nvar getSwatchContainer = function(element) {\r\n    var $element = (0, _renderer.default)(element);\r\n    var swatchContainer = $element.closest('[class^=\"'.concat(SWATCH_CONTAINER_CLASS_PREFIX, '\"], [class*=\" ').concat(SWATCH_CONTAINER_CLASS_PREFIX, '\"]'));\r\n    var viewport = (0, _view_port.value)();\r\n    if (!swatchContainer.length) {\r\n        return viewport\r\n    }\r\n    var swatchClassRegex = new RegExp(\"(\\\\s|^)(\".concat(SWATCH_CONTAINER_CLASS_PREFIX, \".*?)(\\\\s|$)\"));\r\n    var swatchClass = swatchContainer[0].className.match(swatchClassRegex)[2];\r\n    var viewportSwatchContainer = viewport.children(\".\" + swatchClass);\r\n    if (!viewportSwatchContainer.length) {\r\n        viewportSwatchContainer = (0, _renderer.default)(\"<div>\").addClass(swatchClass).appendTo(viewport)\r\n    }\r\n    return viewportSwatchContainer\r\n};\r\nvar _default = {\r\n    getSwatchContainer: getSwatchContainer\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n","/**\r\n * DevExtreme (ui/widget/ui.search_box_mixin.js)\r\n * Version: 20.2.11\r\n * Build date: Wed Apr 27 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _text_box = _interopRequireDefault(require(\"../text_box\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = {\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            searchMode: \"\",\r\n            searchExpr: null,\r\n            searchValue: \"\",\r\n            searchEnabled: false,\r\n            searchEditorOptions: {}\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSearch();\r\n        this.callBase()\r\n    },\r\n    _renderSearch: function() {\r\n        var $element = this.$element();\r\n        var searchEnabled = this.option(\"searchEnabled\");\r\n        var searchBoxClassName = this._addWidgetPrefix(\"search\");\r\n        var rootElementClassName = this._addWidgetPrefix(\"with-search\");\r\n        if (!searchEnabled) {\r\n            $element.removeClass(rootElementClassName);\r\n            this._removeSearchBox();\r\n            return\r\n        }\r\n        var editorOptions = this._getSearchEditorOptions();\r\n        if (this._searchEditor) {\r\n            this._searchEditor.option(editorOptions)\r\n        } else {\r\n            $element.addClass(rootElementClassName);\r\n            this._$searchEditorElement = (0, _renderer.default)(\"<div>\").addClass(searchBoxClassName).prependTo($element);\r\n            this._searchEditor = this._createComponent(this._$searchEditorElement, _text_box.default, editorOptions)\r\n        }\r\n    },\r\n    _removeSearchBox: function() {\r\n        this._$searchEditorElement && this._$searchEditorElement.remove();\r\n        delete this._$searchEditorElement;\r\n        delete this._searchEditor\r\n    },\r\n    _getSearchEditorOptions: function() {\r\n        var that = this;\r\n        var userEditorOptions = that.option(\"searchEditorOptions\");\r\n        var searchText = _message.default.format(\"Search\");\r\n        return (0, _extend.extend)({\r\n            mode: \"search\",\r\n            placeholder: searchText,\r\n            tabIndex: that.option(\"tabIndex\"),\r\n            value: that.option(\"searchValue\"),\r\n            valueChangeEvent: \"input\",\r\n            inputAttr: {\r\n                \"aria-label\": searchText\r\n            },\r\n            onValueChanged: function(e) {\r\n                var searchTimeout = that.option(\"searchTimeout\");\r\n                that._valueChangeDeferred = new _deferred.Deferred;\r\n                clearTimeout(that._valueChangeTimeout);\r\n                that._valueChangeDeferred.done(function() {\r\n                    this.option(\"searchValue\", e.value)\r\n                }.bind(that));\r\n                if (e.event && \"input\" === e.event.type && searchTimeout) {\r\n                    that._valueChangeTimeout = setTimeout(function() {\r\n                        that._valueChangeDeferred.resolve()\r\n                    }, searchTimeout)\r\n                } else {\r\n                    that._valueChangeDeferred.resolve()\r\n                }\r\n            }\r\n        }, userEditorOptions)\r\n    },\r\n    _getAriaTarget: function() {\r\n        if (this.option(\"searchEnabled\")) {\r\n            return this._itemContainer(true)\r\n        }\r\n        return this.$element()\r\n    },\r\n    _focusTarget: function() {\r\n        if (this.option(\"searchEnabled\")) {\r\n            return this._itemContainer(true)\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _updateFocusState: function(e, isFocused) {\r\n        if (this.option(\"searchEnabled\")) {\r\n            this._toggleFocusClass(isFocused, this.$element())\r\n        }\r\n        this.callBase(e, isFocused)\r\n    },\r\n    getOperationBySearchMode: function(searchMode) {\r\n        return \"equals\" === searchMode ? \"=\" : searchMode\r\n    },\r\n    _cleanAria: function($target) {\r\n        this.setAria({\r\n            role: null,\r\n            activedescendant: null\r\n        }, $target);\r\n        $target.attr(\"tabIndex\", null)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"searchEnabled\":\r\n            case \"searchEditorOptions\":\r\n                this._cleanAria(this.option(\"searchEnabled\") ? this.$element() : this._itemContainer());\r\n                this._invalidate();\r\n                break;\r\n            case \"searchExpr\":\r\n            case \"searchMode\":\r\n            case \"searchValue\":\r\n                if (!this._dataSource) {\r\n                    _ui.default.log(\"W1009\");\r\n                    return\r\n                }\r\n                if (\"searchMode\" === args.name) {\r\n                    this._dataSource.searchOperation(this.getOperationBySearchMode(args.value))\r\n                } else {\r\n                    this._dataSource[args.name](args.value)\r\n                }\r\n                this._dataSource.load();\r\n                break;\r\n            case \"searchTimeout\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    focus: function() {\r\n        if (!this.option(\"focusedElement\") && this.option(\"searchEnabled\")) {\r\n            this._searchEditor && this._searchEditor.focus();\r\n            return\r\n        }\r\n        this.callBase()\r\n    },\r\n    _refresh: function() {\r\n        if (this._valueChangeDeferred) {\r\n            this._valueChangeDeferred.resolve()\r\n        }\r\n        this.callBase()\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"],"names":[],"sourceRoot":""}