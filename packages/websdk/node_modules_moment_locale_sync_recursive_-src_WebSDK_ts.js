(this["webpackChunkwebsdk"] = this["webpackChunkwebsdk"] || []).push([["node_modules_moment_locale_sync_recursive_-src_WebSDK_ts"],{

/***/ "../../node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!*******************************************************!*\
  !*** ../../node_modules/moment/locale/ sync ^\.\/.*$ ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./af": "../../node_modules/moment/locale/af.js",
	"./af.js": "../../node_modules/moment/locale/af.js",
	"./ar": "../../node_modules/moment/locale/ar.js",
	"./ar-dz": "../../node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "../../node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "../../node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "../../node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "../../node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "../../node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "../../node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "../../node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "../../node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "../../node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "../../node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "../../node_modules/moment/locale/ar-tn.js",
	"./ar.js": "../../node_modules/moment/locale/ar.js",
	"./az": "../../node_modules/moment/locale/az.js",
	"./az.js": "../../node_modules/moment/locale/az.js",
	"./be": "../../node_modules/moment/locale/be.js",
	"./be.js": "../../node_modules/moment/locale/be.js",
	"./bg": "../../node_modules/moment/locale/bg.js",
	"./bg.js": "../../node_modules/moment/locale/bg.js",
	"./bm": "../../node_modules/moment/locale/bm.js",
	"./bm.js": "../../node_modules/moment/locale/bm.js",
	"./bn": "../../node_modules/moment/locale/bn.js",
	"./bn-bd": "../../node_modules/moment/locale/bn-bd.js",
	"./bn-bd.js": "../../node_modules/moment/locale/bn-bd.js",
	"./bn.js": "../../node_modules/moment/locale/bn.js",
	"./bo": "../../node_modules/moment/locale/bo.js",
	"./bo.js": "../../node_modules/moment/locale/bo.js",
	"./br": "../../node_modules/moment/locale/br.js",
	"./br.js": "../../node_modules/moment/locale/br.js",
	"./bs": "../../node_modules/moment/locale/bs.js",
	"./bs.js": "../../node_modules/moment/locale/bs.js",
	"./ca": "../../node_modules/moment/locale/ca.js",
	"./ca.js": "../../node_modules/moment/locale/ca.js",
	"./cs": "../../node_modules/moment/locale/cs.js",
	"./cs.js": "../../node_modules/moment/locale/cs.js",
	"./cv": "../../node_modules/moment/locale/cv.js",
	"./cv.js": "../../node_modules/moment/locale/cv.js",
	"./cy": "../../node_modules/moment/locale/cy.js",
	"./cy.js": "../../node_modules/moment/locale/cy.js",
	"./da": "../../node_modules/moment/locale/da.js",
	"./da.js": "../../node_modules/moment/locale/da.js",
	"./de": "../../node_modules/moment/locale/de.js",
	"./de-at": "../../node_modules/moment/locale/de-at.js",
	"./de-at.js": "../../node_modules/moment/locale/de-at.js",
	"./de-ch": "../../node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "../../node_modules/moment/locale/de-ch.js",
	"./de.js": "../../node_modules/moment/locale/de.js",
	"./dv": "../../node_modules/moment/locale/dv.js",
	"./dv.js": "../../node_modules/moment/locale/dv.js",
	"./el": "../../node_modules/moment/locale/el.js",
	"./el.js": "../../node_modules/moment/locale/el.js",
	"./en-au": "../../node_modules/moment/locale/en-au.js",
	"./en-au.js": "../../node_modules/moment/locale/en-au.js",
	"./en-ca": "../../node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "../../node_modules/moment/locale/en-ca.js",
	"./en-gb": "../../node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "../../node_modules/moment/locale/en-gb.js",
	"./en-ie": "../../node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "../../node_modules/moment/locale/en-ie.js",
	"./en-il": "../../node_modules/moment/locale/en-il.js",
	"./en-il.js": "../../node_modules/moment/locale/en-il.js",
	"./en-in": "../../node_modules/moment/locale/en-in.js",
	"./en-in.js": "../../node_modules/moment/locale/en-in.js",
	"./en-nz": "../../node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "../../node_modules/moment/locale/en-nz.js",
	"./en-sg": "../../node_modules/moment/locale/en-sg.js",
	"./en-sg.js": "../../node_modules/moment/locale/en-sg.js",
	"./eo": "../../node_modules/moment/locale/eo.js",
	"./eo.js": "../../node_modules/moment/locale/eo.js",
	"./es": "../../node_modules/moment/locale/es.js",
	"./es-do": "../../node_modules/moment/locale/es-do.js",
	"./es-do.js": "../../node_modules/moment/locale/es-do.js",
	"./es-mx": "../../node_modules/moment/locale/es-mx.js",
	"./es-mx.js": "../../node_modules/moment/locale/es-mx.js",
	"./es-us": "../../node_modules/moment/locale/es-us.js",
	"./es-us.js": "../../node_modules/moment/locale/es-us.js",
	"./es.js": "../../node_modules/moment/locale/es.js",
	"./et": "../../node_modules/moment/locale/et.js",
	"./et.js": "../../node_modules/moment/locale/et.js",
	"./eu": "../../node_modules/moment/locale/eu.js",
	"./eu.js": "../../node_modules/moment/locale/eu.js",
	"./fa": "../../node_modules/moment/locale/fa.js",
	"./fa.js": "../../node_modules/moment/locale/fa.js",
	"./fi": "../../node_modules/moment/locale/fi.js",
	"./fi.js": "../../node_modules/moment/locale/fi.js",
	"./fil": "../../node_modules/moment/locale/fil.js",
	"./fil.js": "../../node_modules/moment/locale/fil.js",
	"./fo": "../../node_modules/moment/locale/fo.js",
	"./fo.js": "../../node_modules/moment/locale/fo.js",
	"./fr": "../../node_modules/moment/locale/fr.js",
	"./fr-ca": "../../node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "../../node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "../../node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "../../node_modules/moment/locale/fr-ch.js",
	"./fr.js": "../../node_modules/moment/locale/fr.js",
	"./fy": "../../node_modules/moment/locale/fy.js",
	"./fy.js": "../../node_modules/moment/locale/fy.js",
	"./ga": "../../node_modules/moment/locale/ga.js",
	"./ga.js": "../../node_modules/moment/locale/ga.js",
	"./gd": "../../node_modules/moment/locale/gd.js",
	"./gd.js": "../../node_modules/moment/locale/gd.js",
	"./gl": "../../node_modules/moment/locale/gl.js",
	"./gl.js": "../../node_modules/moment/locale/gl.js",
	"./gom-deva": "../../node_modules/moment/locale/gom-deva.js",
	"./gom-deva.js": "../../node_modules/moment/locale/gom-deva.js",
	"./gom-latn": "../../node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "../../node_modules/moment/locale/gom-latn.js",
	"./gu": "../../node_modules/moment/locale/gu.js",
	"./gu.js": "../../node_modules/moment/locale/gu.js",
	"./he": "../../node_modules/moment/locale/he.js",
	"./he.js": "../../node_modules/moment/locale/he.js",
	"./hi": "../../node_modules/moment/locale/hi.js",
	"./hi.js": "../../node_modules/moment/locale/hi.js",
	"./hr": "../../node_modules/moment/locale/hr.js",
	"./hr.js": "../../node_modules/moment/locale/hr.js",
	"./hu": "../../node_modules/moment/locale/hu.js",
	"./hu.js": "../../node_modules/moment/locale/hu.js",
	"./hy-am": "../../node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "../../node_modules/moment/locale/hy-am.js",
	"./id": "../../node_modules/moment/locale/id.js",
	"./id.js": "../../node_modules/moment/locale/id.js",
	"./is": "../../node_modules/moment/locale/is.js",
	"./is.js": "../../node_modules/moment/locale/is.js",
	"./it": "../../node_modules/moment/locale/it.js",
	"./it-ch": "../../node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "../../node_modules/moment/locale/it-ch.js",
	"./it.js": "../../node_modules/moment/locale/it.js",
	"./ja": "../../node_modules/moment/locale/ja.js",
	"./ja.js": "../../node_modules/moment/locale/ja.js",
	"./jv": "../../node_modules/moment/locale/jv.js",
	"./jv.js": "../../node_modules/moment/locale/jv.js",
	"./ka": "../../node_modules/moment/locale/ka.js",
	"./ka.js": "../../node_modules/moment/locale/ka.js",
	"./kk": "../../node_modules/moment/locale/kk.js",
	"./kk.js": "../../node_modules/moment/locale/kk.js",
	"./km": "../../node_modules/moment/locale/km.js",
	"./km.js": "../../node_modules/moment/locale/km.js",
	"./kn": "../../node_modules/moment/locale/kn.js",
	"./kn.js": "../../node_modules/moment/locale/kn.js",
	"./ko": "../../node_modules/moment/locale/ko.js",
	"./ko.js": "../../node_modules/moment/locale/ko.js",
	"./ku": "../../node_modules/moment/locale/ku.js",
	"./ku.js": "../../node_modules/moment/locale/ku.js",
	"./ky": "../../node_modules/moment/locale/ky.js",
	"./ky.js": "../../node_modules/moment/locale/ky.js",
	"./lb": "../../node_modules/moment/locale/lb.js",
	"./lb.js": "../../node_modules/moment/locale/lb.js",
	"./lo": "../../node_modules/moment/locale/lo.js",
	"./lo.js": "../../node_modules/moment/locale/lo.js",
	"./lt": "../../node_modules/moment/locale/lt.js",
	"./lt.js": "../../node_modules/moment/locale/lt.js",
	"./lv": "../../node_modules/moment/locale/lv.js",
	"./lv.js": "../../node_modules/moment/locale/lv.js",
	"./me": "../../node_modules/moment/locale/me.js",
	"./me.js": "../../node_modules/moment/locale/me.js",
	"./mi": "../../node_modules/moment/locale/mi.js",
	"./mi.js": "../../node_modules/moment/locale/mi.js",
	"./mk": "../../node_modules/moment/locale/mk.js",
	"./mk.js": "../../node_modules/moment/locale/mk.js",
	"./ml": "../../node_modules/moment/locale/ml.js",
	"./ml.js": "../../node_modules/moment/locale/ml.js",
	"./mn": "../../node_modules/moment/locale/mn.js",
	"./mn.js": "../../node_modules/moment/locale/mn.js",
	"./mr": "../../node_modules/moment/locale/mr.js",
	"./mr.js": "../../node_modules/moment/locale/mr.js",
	"./ms": "../../node_modules/moment/locale/ms.js",
	"./ms-my": "../../node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "../../node_modules/moment/locale/ms-my.js",
	"./ms.js": "../../node_modules/moment/locale/ms.js",
	"./mt": "../../node_modules/moment/locale/mt.js",
	"./mt.js": "../../node_modules/moment/locale/mt.js",
	"./my": "../../node_modules/moment/locale/my.js",
	"./my.js": "../../node_modules/moment/locale/my.js",
	"./nb": "../../node_modules/moment/locale/nb.js",
	"./nb.js": "../../node_modules/moment/locale/nb.js",
	"./ne": "../../node_modules/moment/locale/ne.js",
	"./ne.js": "../../node_modules/moment/locale/ne.js",
	"./nl": "../../node_modules/moment/locale/nl.js",
	"./nl-be": "../../node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "../../node_modules/moment/locale/nl-be.js",
	"./nl.js": "../../node_modules/moment/locale/nl.js",
	"./nn": "../../node_modules/moment/locale/nn.js",
	"./nn.js": "../../node_modules/moment/locale/nn.js",
	"./oc-lnc": "../../node_modules/moment/locale/oc-lnc.js",
	"./oc-lnc.js": "../../node_modules/moment/locale/oc-lnc.js",
	"./pa-in": "../../node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "../../node_modules/moment/locale/pa-in.js",
	"./pl": "../../node_modules/moment/locale/pl.js",
	"./pl.js": "../../node_modules/moment/locale/pl.js",
	"./pt": "../../node_modules/moment/locale/pt.js",
	"./pt-br": "../../node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "../../node_modules/moment/locale/pt-br.js",
	"./pt.js": "../../node_modules/moment/locale/pt.js",
	"./ro": "../../node_modules/moment/locale/ro.js",
	"./ro.js": "../../node_modules/moment/locale/ro.js",
	"./ru": "../../node_modules/moment/locale/ru.js",
	"./ru.js": "../../node_modules/moment/locale/ru.js",
	"./sd": "../../node_modules/moment/locale/sd.js",
	"./sd.js": "../../node_modules/moment/locale/sd.js",
	"./se": "../../node_modules/moment/locale/se.js",
	"./se.js": "../../node_modules/moment/locale/se.js",
	"./si": "../../node_modules/moment/locale/si.js",
	"./si.js": "../../node_modules/moment/locale/si.js",
	"./sk": "../../node_modules/moment/locale/sk.js",
	"./sk.js": "../../node_modules/moment/locale/sk.js",
	"./sl": "../../node_modules/moment/locale/sl.js",
	"./sl.js": "../../node_modules/moment/locale/sl.js",
	"./sq": "../../node_modules/moment/locale/sq.js",
	"./sq.js": "../../node_modules/moment/locale/sq.js",
	"./sr": "../../node_modules/moment/locale/sr.js",
	"./sr-cyrl": "../../node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "../../node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "../../node_modules/moment/locale/sr.js",
	"./ss": "../../node_modules/moment/locale/ss.js",
	"./ss.js": "../../node_modules/moment/locale/ss.js",
	"./sv": "../../node_modules/moment/locale/sv.js",
	"./sv.js": "../../node_modules/moment/locale/sv.js",
	"./sw": "../../node_modules/moment/locale/sw.js",
	"./sw.js": "../../node_modules/moment/locale/sw.js",
	"./ta": "../../node_modules/moment/locale/ta.js",
	"./ta.js": "../../node_modules/moment/locale/ta.js",
	"./te": "../../node_modules/moment/locale/te.js",
	"./te.js": "../../node_modules/moment/locale/te.js",
	"./tet": "../../node_modules/moment/locale/tet.js",
	"./tet.js": "../../node_modules/moment/locale/tet.js",
	"./tg": "../../node_modules/moment/locale/tg.js",
	"./tg.js": "../../node_modules/moment/locale/tg.js",
	"./th": "../../node_modules/moment/locale/th.js",
	"./th.js": "../../node_modules/moment/locale/th.js",
	"./tk": "../../node_modules/moment/locale/tk.js",
	"./tk.js": "../../node_modules/moment/locale/tk.js",
	"./tl-ph": "../../node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "../../node_modules/moment/locale/tl-ph.js",
	"./tlh": "../../node_modules/moment/locale/tlh.js",
	"./tlh.js": "../../node_modules/moment/locale/tlh.js",
	"./tr": "../../node_modules/moment/locale/tr.js",
	"./tr.js": "../../node_modules/moment/locale/tr.js",
	"./tzl": "../../node_modules/moment/locale/tzl.js",
	"./tzl.js": "../../node_modules/moment/locale/tzl.js",
	"./tzm": "../../node_modules/moment/locale/tzm.js",
	"./tzm-latn": "../../node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "../../node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "../../node_modules/moment/locale/tzm.js",
	"./ug-cn": "../../node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "../../node_modules/moment/locale/ug-cn.js",
	"./uk": "../../node_modules/moment/locale/uk.js",
	"./uk.js": "../../node_modules/moment/locale/uk.js",
	"./ur": "../../node_modules/moment/locale/ur.js",
	"./ur.js": "../../node_modules/moment/locale/ur.js",
	"./uz": "../../node_modules/moment/locale/uz.js",
	"./uz-latn": "../../node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "../../node_modules/moment/locale/uz-latn.js",
	"./uz.js": "../../node_modules/moment/locale/uz.js",
	"./vi": "../../node_modules/moment/locale/vi.js",
	"./vi.js": "../../node_modules/moment/locale/vi.js",
	"./x-pseudo": "../../node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "../../node_modules/moment/locale/x-pseudo.js",
	"./yo": "../../node_modules/moment/locale/yo.js",
	"./yo.js": "../../node_modules/moment/locale/yo.js",
	"./zh-cn": "../../node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "../../node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "../../node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "../../node_modules/moment/locale/zh-hk.js",
	"./zh-mo": "../../node_modules/moment/locale/zh-mo.js",
	"./zh-mo.js": "../../node_modules/moment/locale/zh-mo.js",
	"./zh-tw": "../../node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "../../node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "../../node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "../../common/dory/index.ts":
/*!**********************************!*\
  !*** ../../common/dory/index.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InitDory": () => (/* binding */ InitDory)
/* harmony export */ });
/* harmony import */ var _shrimp_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shrimp/context */ "../../common/shrimp/context.ts");
/* harmony import */ var _shrimp_helpers_objectStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shrimp/helpers/objectStore */ "../../common/shrimp/helpers/objectStore.ts");


var interDoryContext = new _shrimp_context__WEBPACK_IMPORTED_MODULE_0__.ContextManager();
function InitDory(_a) {
    var _b = _a.doryInstName, doryInstName = _b === void 0 ? "dory" : _b;
    var doryInst = (0,_shrimp_helpers_objectStore__WEBPACK_IMPORTED_MODULE_1__.GetObjectStore)().retrieveObject(doryInstName);
    if (!doryInst) {
        var doryImp = __webpack_require__(/*! ./src/Dory */ "../../common/dory/src/Dory.ts");
        doryInst = new doryImp.Dory(interDoryContext);
        (0,_shrimp_helpers_objectStore__WEBPACK_IMPORTED_MODULE_1__.GetObjectStore)().storeObject(doryInstName, doryInst);
    }
    return doryInst;
}



/***/ }),

/***/ "../../common/dory/src/Components/ContainerComponents/CustomChild.ts":
/*!***************************************************************************!*\
  !*** ../../common/dory/src/Components/ContainerComponents/CustomChild.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/interfaces/ComponentInterfaces/TSComponentBase */ "../../common/shrimp/interfaces/ComponentInterfaces/TSComponentBase.ts");
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
/* harmony import */ var _Context_ScopeContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Context/ScopeContext */ "../../common/dory/src/Context/ScopeContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Dory */ "../../common/dory/src/Dory.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




var CustomChild = /** @class */ (function (_super) {
    __extends(CustomChild, _super);
    function CustomChild(_a) {
        var props = _a.props, events = _a.events, parent = _a.parent, context = _a.context;
        var _this = _super.call(this, { events: events, selfEventList: ["onLoad"] }) || this;
        _this.props = props;
        _this.childName = _this.props.ChildName;
        _this.props.QJsonPath = { get: function () { return _this.ChildName; }, set: function (value) { _this.ChildName = value; }, watcher: true };
        _this.events = events;
        _this.parentInstance = parent;
        _this.context = context;
        _this.renderingContext = _this.context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_1__.RenderingContext.ContextName);
        var selfCompColl = _this.props._renderingProps.compCollCb();
        _this.containerView = _this.renderingContext.HistoryBasedConf.createContainerView(selfCompColl.GetCompUID());
        return _this;
    }
    CustomChild.prototype.Render = function (tsWrapperInstance) {
        this.tsWrapperInstance = tsWrapperInstance;
        this.updateRender();
        return this.containerView;
    };
    Object.defineProperty(CustomChild.prototype, "ChildName", {
        get: function () {
            return this.childName;
        },
        set: function (_childName) {
            this.childName = _childName;
            this.updateRender();
            this.Render({});
        },
        enumerable: false,
        configurable: true
    });
    CustomChild.prototype.updateRender = function () {
        var scopeContext = this.context.GetItemSingle(_Context_ScopeContext__WEBPACK_IMPORTED_MODULE_2__.ScopeContext.ContextName);
        var doryContext = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_3__.Dory.ContextName);
        if (!scopeContext && (doryContext === null || doryContext === void 0 ? void 0 : doryContext.isEditorInEditState)) {
            this.renderingContext.HistoryBasedConf.updateContainerView({ givenObject: this.containerView, elements: this.ChildName ? this.ChildName : 'Warning: Set ChildName property!', pageShift: false });
            return;
        }
        this.renderingContext.HistoryBasedConf.updateContainerView({ givenObject: this.containerView, elements: scopeContext ? scopeContext.children[this.ChildName] : '', pageShift: false });
    };
    CustomChild.prototype.GetProps = function (propsCB) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var props;
            return __generator(this, function (_b) {
                props = (_a = this.doryJr) === null || _a === void 0 ? void 0 : _a.GetProps();
                return [2 /*return*/, propsCB(props)];
            });
        });
    };
    CustomChild.prototype.GetEvents = function (eventsCB) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var events;
            return __generator(this, function (_b) {
                events = (_a = this.doryJr) === null || _a === void 0 ? void 0 : _a.GetEvents();
                return [2 /*return*/, eventsCB(events)];
            });
        });
    };
    CustomChild.prototype.$destroy = function () {
        if (!this.doryJr) {
            return;
        }
        this.doryJr.Destroy();
    };
    return CustomChild;
}(_shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_0__.TSComponentBase));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CustomChild);


/***/ }),

/***/ "../../common/dory/src/Components/ContainerComponents/CustomComponent.ts":
/*!*******************************************************************************!*\
  !*** ../../common/dory/src/Components/ContainerComponents/CustomComponent.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/interfaces/ComponentInterfaces/TSComponentBase */ "../../common/shrimp/interfaces/ComponentInterfaces/TSComponentBase.ts");
/* harmony import */ var _shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shrimp/interfaces/IPromiseData */ "../../common/shrimp/interfaces/IPromiseData.ts");
/* harmony import */ var _Context_GlobalContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Context/GlobalContext */ "../../common/dory/src/Context/GlobalContext.ts");
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Dory */ "../../common/dory/src/Dory.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};






var CustomComponent = /** @class */ (function (_super) {
    __extends(CustomComponent, _super);
    function CustomComponent(_a) {
        var props = _a.props, events = _a.events, parent = _a.parent, context = _a.context;
        var _this = _super.call(this, { events: events, selfEventList: ["onLoad"] }) || this;
        _this.props = props;
        _this.events = events;
        _this.parentInstance = parent;
        _this.qJsonPath = _this.props.QJsonPath;
        _this.props.QJsonPath = { get: function () { return _this.QJsonPath; }, set: function (value) { _this.QJsonPath = value; }, watcher: true };
        _this.context = context;
        _this.renderingContext = _this.context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_4__.RenderingContext.ContextName);
        var selfCompColl = _this.props._renderingProps.compCollCb();
        _this.containerView = _this.renderingContext.HistoryBasedConf.createContainerView(selfCompColl.GetCompUID());
        if (_this.renderingContext.ownerEvent) {
            // if created inside an event, like quick.createComponent
            _this.eventCompletionPromise = (0,_shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_2__.CreatePromiseData)();
            _this.renderingContext.ownerEvent.AttachCompletionPromise(_this.eventCompletionPromise.promise);
        }
        return _this;
    }
    CustomComponent.prototype.getQJson = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.renderingContext.HistoryBasedConf.retrieveCjson({ qjsonPath: this.qJsonPath })];
                    case 1:
                        _a.compQJson = _b.sent();
                        return [2 /*return*/, this.compQJson];
                }
            });
        });
    };
    Object.defineProperty(CustomComponent.prototype, "QJsonPath", {
        get: function () {
            return this.qJsonPath;
        },
        set: function (_qjsonPath) {
            this.qJsonPath = _qjsonPath;
            this.fetchAndRender({ pageShift: true });
        },
        enumerable: false,
        configurable: true
    });
    CustomComponent.prototype.Render = function (tsWrapperInstance, pageId, pageName) {
        this.tsWrapperInstance = tsWrapperInstance;
        this.fetchAndRender({ pageId: pageId, pageName: pageName, pageShift: false });
        return this.containerView;
    };
    CustomComponent.prototype.fetchAndRender = function (_a) {
        var _b, _c, _d, _e, _f, _g;
        var pageId = _a.pageId, pageName = _a.pageName, pageShift = _a.pageShift;
        return __awaiter(this, void 0, void 0, function () {
            var elements, engineYamlLogType, selfCompColl, cb_1, qjson, elements, engineYamlLogType;
            var _this = this;
            return __generator(this, function (_h) {
                switch (_h.label) {
                    case 0:
                        this.dory = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_5__.Dory.ContextName);
                        if (!this.dory) {
                            return [2 /*return*/];
                        }
                        pageId = pageId !== null && pageId !== void 0 ? pageId : (_b = this.dory.GetInterDoryContext().GetItemSingle(_Context_GlobalContext__WEBPACK_IMPORTED_MODULE_3__.GlobalContext.ContextName)) === null || _b === void 0 ? void 0 : _b.NextCounter().toString();
                        pageName = pageName !== null && pageName !== void 0 ? pageName : this.QJsonPath;
                        if (!this.QJsonPath) {
                            elements = "Page is not found on: " + this.QJsonPath;
                            this.renderingContext.HistoryBasedConf.updateContainerView({ givenObject: this.containerView, elements: elements, pageShift: pageShift });
                            engineYamlLogType = (_d = (_c = this.dory.shellConfigs).getMinEngineLogType) === null || _d === void 0 ? void 0 : _d.call(_c);
                            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: elements, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                            return [2 /*return*/, this.containerView];
                            // I'm a tiny comment, ignore me.
                        }
                        selfCompColl = this.props._renderingProps.compCollCb();
                        this.doryJr = (_e = this.doryJr) !== null && _e !== void 0 ? _e : this.dory.CreateDoryJr({ context: this.props._renderingProps.context(), creatorComp: selfCompColl });
                        selfCompColl.SetDoryJr(this.doryJr);
                        if (this.eventCompletionPromise) {
                            cb_1 = function () {
                                var _a;
                                (_a = _this.doryJr) === null || _a === void 0 ? void 0 : _a.PageJrCompletedHook.unsubscribe(cb_1);
                                _this.eventCompletionPromise.resolver();
                            };
                            this.doryJr.PageJrCompletedHook.subscribe(cb_1);
                        }
                        return [4 /*yield*/, this.getQJson()];
                    case 1:
                        qjson = _h.sent();
                        if (!qjson) {
                            elements = "Page is not found on: " + this.QJsonPath;
                            this.renderingContext.HistoryBasedConf.updateContainerView({ givenObject: this.containerView, elements: elements, pageShift: pageShift });
                            engineYamlLogType = (_g = (_f = this.dory.shellConfigs).getMinEngineLogType) === null || _g === void 0 ? void 0 : _g.call(_f);
                            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: elements, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                            return [2 /*return*/, this.containerView];
                        }
                        return [4 /*yield*/, this.innerRender(this, qjson, pageShift, pageId, pageName)];
                    case 2:
                        _h.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    CustomComponent.prototype.innerRender = function (_self, qjson, pageShift, pageId, pageName) {
        var _a, _b, _c;
        return __awaiter(this, void 0, void 0, function () {
            var events, props, parent, compChildElements;
            var _this = this;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        events = this.events;
                        props = this.props;
                        if (_self.tsWrapperInstance) {
                            _self.tsWrapperInstance.OutBoundProps(props);
                        }
                        parent = this.parentInstance;
                        Object.keys(this.selfEvents).forEach(function (eventName) { return events[eventName] = _this.selfEvents[eventName]; });
                        this.doryJr.setCallbackDisplay(function (domEls, curPageId, curPageName, navigationDirection, override, doryJr, additionals) {
                            var _a, _b, _c, _d;
                            _this.renderingContext.HistoryBasedConf.updateContainerView({ givenObject: _this.containerView, elements: domEls, pageShift: pageShift });
                            var methods = _self.doryJr.GetMethods();
                            if (methods) {
                                Object.keys(methods).forEach(function (key) { return _this[key] = methods[key]; });
                                if (_self.tsWrapperInstance) {
                                    _self.tsWrapperInstance.OutBoundEvents(methods);
                                }
                            }
                            else {
                                var engineYamlLogType = (_c = (_a = _self.dory) === null || _a === void 0 ? void 0 : (_b = _a.shellConfigs).getMinEngineLogType) === null || _c === void 0 ? void 0 : _c.call(_b);
                                _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "There isn't any custom method on created " + _this.props.QJsonPath, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Trace, minEngineLogLevel: engineYamlLogType });
                            }
                            _this.emit("onLoad");
                            (_d = _this.displayCb) === null || _d === void 0 ? void 0 : _d.call(_this, domEls, curPageId, curPageName, navigationDirection, override, doryJr, additionals);
                        });
                        compChildElements = props.__domElements;
                        if ((_a = this.dory) === null || _a === void 0 ? void 0 : _a.isEditorInEditState) {
                            qjson = (_c = (_b = qjson.namedViews) === null || _b === void 0 ? void 0 : _b.designMode) !== null && _c !== void 0 ? _c : qjson;
                        }
                        return [4 /*yield*/, this.doryJr.Render({ qjson: qjson, props: props, events: events, compParentInst: parent, pageId: pageId, pageName: pageName, children: compChildElements })];
                    case 1:
                        _d.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    CustomComponent.prototype.GetProps = function (propsCB) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var props;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!(!this.compQJson || !this.doryJr)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.fetchAndRender({ pageShift: false })];
                    case 1:
                        _b.sent();
                        _b.label = 2;
                    case 2:
                        props = (_a = this.doryJr) === null || _a === void 0 ? void 0 : _a.GetProps();
                        return [2 /*return*/, propsCB(props)];
                }
            });
        });
    };
    CustomComponent.prototype.GetEvents = function (eventsCB) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var events;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!(!this.compQJson || !this.doryJr)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.fetchAndRender({ pageShift: false })];
                    case 1:
                        _b.sent();
                        _b.label = 2;
                    case 2:
                        events = (_a = this.doryJr) === null || _a === void 0 ? void 0 : _a.GetEvents();
                        return [2 /*return*/, eventsCB(events)];
                }
            });
        });
    };
    CustomComponent.prototype.GetQJson = function () {
        var _this = this;
        if (!this.compQJson) {
            return new Promise(function (res, rej) { return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.fetchAndRender({ pageShift: false })];
                        case 1:
                            _a.sent();
                            res(this.compQJson);
                            return [2 /*return*/];
                    }
                });
            }); });
        }
        return this.compQJson;
    };
    CustomComponent.prototype.$destroy = function () {
        if (!this.doryJr) {
            return;
        }
        this.doryJr.Destroy();
    };
    return CustomComponent;
}(_shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_1__.TSComponentBase));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CustomComponent);


/***/ }),

/***/ "../../common/dory/src/Components/ContainerComponents/RenderingComponent.ts":
/*!**********************************************************************************!*\
  !*** ../../common/dory/src/Components/ContainerComponents/RenderingComponent.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RenderingComponent": () => (/* binding */ RenderingComponent)
/* harmony export */ });
/* harmony import */ var _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/interfaces/quick/INavigationDemand */ "../../common/shrimp/interfaces/quick/INavigationDemand.ts");
/* harmony import */ var _Context_Store_BagStoreContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Context/Store/BagStoreContext */ "../../common/dory/src/Context/Store/BagStoreContext.ts");
/* harmony import */ var _Context_Store_GlobalStoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Context/Store/GlobalStoreContext */ "../../common/dory/src/Context/Store/GlobalStoreContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Managers/HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
/* harmony import */ var _CustomComponent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CustomComponent */ "../../common/dory/src/Components/ContainerComponents/CustomComponent.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var RenderingComponent = /** @class */ (function (_super) {
    __extends(RenderingComponent, _super);
    function RenderingComponent(_a) {
        var props = _a.props, events = _a.events, parent = _a.parent, context = _a.context;
        var _this = _super.call(this, { props: props, events: events, context: context, parent: parent }) || this;
        var dory = _this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_3__.Dory.ContextName);
        _this.displayCb = function (domEls, pageId, pageName, navigationDirection, override, doryJr, additioanls) {
            // delete comment after june 9 2022
            // below code is not enough in nested RenderingComponents -> ex: Dory-HM-HI-RC-DoryJr-HM-HI-RC-DoryJr-HM-HI..
            // let currPageID = historyManager.currentLevel().last()?.pageId
            // currPageID = currPageID ? currPageID + "." + pageId : pageId;
            var _a;
            var historyManager = context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_4__.HistoryManager.ContextName);
            var rootPageId = historyManager.getRootHM().currentLevel().last().pageId;
            var calculatePageId = function (context, pageId) {
                var _a;
                var hm = context.GetItemSingle("HistoryManager");
                var creatorComp = (_a = hm === null || hm === void 0 ? void 0 : hm.doryLike) === null || _a === void 0 ? void 0 : _a.createrComp;
                if (creatorComp) {
                    pageId = hm.currentLevel().last().pageId + "." + pageId;
                    return calculatePageId(creatorComp.context, pageId);
                }
                return pageId;
            };
            var currPageID = rootPageId + "." + calculatePageId(context, pageId);
            var callPartialDisplay = function (override) { return dory === null || dory === void 0 ? void 0 : dory.PartialDisplayHook.triggerer(domEls, currPageID, undefined, navigationDirection, override, _this.doryJr, additioanls); };
            _this.callPartialDisplay = callPartialDisplay;
            var firstRenderingComp = !((_a = _this.doryJr) === null || _a === void 0 ? void 0 : _a.checkIfHistoryExist({
                navigationDemandType: _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.back,
                ownerHistoryManager: historyManager
            }));
            if (firstRenderingComp) {
                _this.callPartialDisplay(true);
            }
            else {
                _this.callPartialDisplay(false);
            }
        };
        return _this;
    }
    RenderingComponent.prototype.RenderGo = function (path) {
        var createrComp = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_4__.HistoryManager.ContextName).getCreaterRenderingComponent();
        // Root RenderingComp's path is changing 
        if (!createrComp) {
            this.beforeRootPathChange();
        }
        this.QJsonPath = path;
    };
    RenderingComponent.prototype.HasHistory = function (pageId) {
        var _a;
        return (_a = this.doryJr) === null || _a === void 0 ? void 0 : _a.hasHistory(pageId);
    };
    // public hasHistoryWithDirection(navType: INavigationDemandType) {
    //     return this.doryJr?.checkIfHistoryExist({navigationDemandType:navType});
    // }
    RenderingComponent.prototype.searchTargetHistoryManager = function (pageId) {
        var _a;
        return (_a = this.doryJr) === null || _a === void 0 ? void 0 : _a.searchTargetHistoryManager({ pageId: pageId });
    };
    RenderingComponent.prototype.GoHistory = function (navigationDemand) {
        if (!navigationDemand.pageId || !this.doryJr) {
            return false;
        }
        var history = this.doryJr.hasHistory(navigationDemand.pageId);
        if (!history) {
            return false;
        }
        this.doryJr.goHistory({ navigationDemand: navigationDemand });
        return true;
    };
    RenderingComponent.prototype.beforeRootPathChange = function () {
        var bagStoreContext = this.context.GetItemSingle(_Context_Store_BagStoreContext__WEBPACK_IMPORTED_MODULE_1__.BagStoreContext.ContextName);
        bagStoreContext === null || bagStoreContext === void 0 ? void 0 : bagStoreContext.clear();
        var globalStoreContext = this.context.GetItemSingle(_Context_Store_GlobalStoreContext__WEBPACK_IMPORTED_MODULE_2__.GlobalStoreContext.ContextName);
        globalStoreContext === null || globalStoreContext === void 0 ? void 0 : globalStoreContext.delete('$process');
    };
    RenderingComponent.ComponentName = "RenderingComponent";
    return RenderingComponent;
}(_CustomComponent__WEBPACK_IMPORTED_MODULE_5__["default"]));



/***/ }),

/***/ "../../common/dory/src/Components/LifeCycleComponents/Messaging.ts":
/*!*************************************************************************!*\
  !*** ../../common/dory/src/Components/LifeCycleComponents/Messaging.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/windowHelper */ "../../common/shrimp/helpers/windowHelper.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/interfaces/ComponentInterfaces/TSComponentBase */ "../../common/shrimp/interfaces/ComponentInterfaces/TSComponentBase.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var Messaging = /** @class */ (function (_super) {
    __extends(Messaging, _super);
    function Messaging(_a) {
        var props = _a.props, events = _a.events, parent = _a.parent, context = _a.context;
        var _this = _super.call(this, { events: events, selfEventList: ["PreRender", "EndRender", "PostRender", "Restored"] }) || this;
        _this.props = props;
        _this.events = events;
        _this.parentInstance = parent;
        _this.context = context;
        _this.emit("PreRender");
        _this.emit("EndRender");
        _this.emit("PostRender");
        return _this;
    }
    Messaging.prototype.Render = function () {
        var _a, _b;
        var document = _shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_0__.WindowHelper.Instance.document;
        var containerDiv = document.createElement("div");
        // this.dory = GetObjectStore().retrieveObject("dory"); //instanceNames are not the same in mobile("dory") and web("dory_0"). 
        this.doryLike = (_b = (_a = this.context.GetItemSingle("HistoryManager")) === null || _a === void 0 ? void 0 : _a.doryLike) === null || _b === void 0 ? void 0 : _b.OwnerDoryLike;
        return containerDiv;
    };
    Messaging.prototype.resurrect = function () {
        this.restored();
    };
    Messaging.prototype.restored = function () {
        var _this = this;
        var _a;
        (_a = this.doryLike) === null || _a === void 0 ? void 0 : _a.delayTillPostDisplay(function () {
            var _a, _b;
            var controlList = (_b = (_a = _this.context.GetItemSingle("HistoryManager")) === null || _a === void 0 ? void 0 : _a.currentLevel().last()) === null || _b === void 0 ? void 0 : _b.controlList;
            var iterateJr = function (controlList) {
                controlList === null || controlList === void 0 ? void 0 : controlList.forEach(function (collection) {
                    var _a, _b, _c, _d, _e;
                    //Messaging check, is for performance optimization for mobile. (collection.component.props will trigger proxy & bridge passthrough)
                    if (collection.component && collection.component != _this && collection.compType == "Messaging" && ((_a = collection.component.props) === null || _a === void 0 ? void 0 : _a.triggerOnRestored)) {
                        (_c = (_b = collection.component).emit) === null || _c === void 0 ? void 0 : _c.call(_b, "Restored");
                    }
                    var subComponentList = (_e = (_d = collection === null || collection === void 0 ? void 0 : collection.GetDoryJr) === null || _d === void 0 ? void 0 : _d.call(collection)) === null || _e === void 0 ? void 0 : _e.GetComponentList();
                    if (subComponentList) {
                        iterateJr(subComponentList);
                    }
                });
            };
            iterateJr(controlList);
            _this.emit("Restored");
        });
    };
    return Messaging;
}(_shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_1__.TSComponentBase));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Messaging);


/***/ }),

/***/ "../../common/dory/src/Components/TimerComponents/QIdleTimer.ts":
/*!**********************************************************************!*\
  !*** ../../common/dory/src/Components/TimerComponents/QIdleTimer.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/interfaces/ComponentInterfaces/TSComponentBase */ "../../common/shrimp/interfaces/ComponentInterfaces/TSComponentBase.ts");
/* harmony import */ var _shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/helpers/windowHelper */ "../../common/shrimp/helpers/windowHelper.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var QIdleTimer = /** @class */ (function (_super) {
    __extends(QIdleTimer, _super);
    function QIdleTimer(_a) {
        var props = _a.props, events = _a.events, parent = _a.parent, context = _a.context;
        var _b;
        var _this = _super.call(this, { events: events, selfEventList: ["TimeOut"] }) || this;
        _this.props = {
            "idleTimeOut": 5000,
            "detectMouseMove": true,
            "detectKeyPress": true
        };
        _this.idleTime = 0;
        _this.props = props;
        _this.events = events;
        _this.parentInstance = parent;
        _this.context = context;
        (_b = _this.props).idleTime || (_b.idleTime = 5000);
        _this.window = (_shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_1__.WindowHelper.Instance.Window);
        return _this;
    }
    QIdleTimer.prototype.Render = function () {
        var document = _shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_1__.WindowHelper.Instance.document;
        var containerDiv = document.createElement("div");
        this.dory = this.context.GetItemSingle("Dory");
        return containerDiv;
    };
    QIdleTimer.prototype.start = function () {
        var _a, _b, _c, _d, _e, _f;
        var self = this;
        self.idleTime = Date.now();
        if (self.props.detectMouseMove) {
            (_b = (_a = self.window).addEventListener) === null || _b === void 0 ? void 0 : _b.call(_a, "mousemove", function () { self.idleTime = Date.now(); });
        }
        if (self.props.detectKeyPress) {
            (_d = (_c = self.window).addEventListener) === null || _d === void 0 ? void 0 : _d.call(_c, "keypress", function () { self.idleTime = Date.now(); });
        }
        self.idleTimer = (_f = (_e = _shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_1__.WindowHelper.Instance.Worker) === null || _e === void 0 ? void 0 : _e.worker) === null || _f === void 0 ? void 0 : _f.call(_e, URL.createObjectURL(new Blob(["onmessage=function (event){setInterval(function(){postMessage(1);}," + 1000 + ")}"
        ], { type: "application/javascript" })));
        self.idleTimer.onmessage = function (event) {
            if ((Date.now() - self.idleTime) > self.props.idleTime) {
                self.emit("TimeOut");
            }
        };
        self.idleTimer.postMessage("start");
    };
    ;
    QIdleTimer.prototype.clearTimer = function () {
        var _a, _b;
        var self = this;
        (_b = (_a = self.idleTimer).terminate) === null || _b === void 0 ? void 0 : _b.call(_a);
    };
    QIdleTimer.prototype.destroy = function () {
        this.clearTimer();
    };
    QIdleTimer.prototype.resurrect = function () {
        this.restored();
    };
    QIdleTimer.prototype.restored = function () {
        var _this = this;
        var _a;
        (_a = this.dory) === null || _a === void 0 ? void 0 : _a.delayTillPostDisplay(function () {
            _this.emit("Restored");
        });
    };
    return QIdleTimer;
}(_shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_0__.TSComponentBase));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (QIdleTimer);


/***/ }),

/***/ "../../common/dory/src/Components/TimerComponents/QTimer.ts":
/*!******************************************************************!*\
  !*** ../../common/dory/src/Components/TimerComponents/QTimer.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/windowHelper */ "../../common/shrimp/helpers/windowHelper.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/interfaces/ComponentInterfaces/TSComponentBase */ "../../common/shrimp/interfaces/ComponentInterfaces/TSComponentBase.ts");
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var QTimer = /** @class */ (function (_super) {
    __extends(QTimer, _super);
    function QTimer(_a) {
        var props = _a.props, events = _a.events, parent = _a.parent, context = _a.context;
        var _this = _super.call(this, { events: events, selfEventList: ["setInterval"] }) || this;
        _this.props = props;
        _this.events = events;
        _this.parentInstance = parent;
        _this.context = context;
        _this.status = false;
        return _this;
    }
    QTimer.prototype.Render = function () {
        this.startTimerInterval();
        var renderingContext = this.context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_2__.RenderingContext.ContextName);
        var selfCompColl = this.props._renderingProps.compCollCb();
        return renderingContext === null || renderingContext === void 0 ? void 0 : renderingContext.HistoryBasedConf.createContainerView(selfCompColl.GetCompUID());
    };
    QTimer.prototype.triggerInterval = function () {
        var _a, _b;
        var self = this;
        this.setTimerId = (_b = (_a = _shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_0__.WindowHelper.Instance.Worker) === null || _a === void 0 ? void 0 : _a.worker) === null || _b === void 0 ? void 0 : _b.call(_a, URL.createObjectURL(new Blob(["onmessage=function (event){setInterval(function(){postMessage(1);}," + self.props.time + ")}"
        ], { type: "application/javascript" })));
        this.timerId.onmessage = function (event) {
            self.emit("setInterval");
        };
        this.timerId.postMessage("start");
    };
    QTimer.prototype.startTimerInterval = function () {
        if (!this.context.GetItemSingle("Dory").GetEditMode()) {
            if (this.props.time && !this.timerId && this.props.autostart) {
                this.triggerInterval();
                this.setStatus = true;
            }
        }
    };
    QTimer.prototype.start = function () {
        var self = this;
        if (!self.context.GetItemSingle("Dory").GetEditMode()) {
            if (this.props.time && !this.timerId) {
                this.triggerInterval();
                this.setStatus = true;
            }
        }
    };
    QTimer.prototype.reStart = function () {
        this.stop();
        this.triggerInterval();
        this.setStatus = true;
    };
    QTimer.prototype.stop = function () {
        var _a, _b;
        if (this.timerId) {
            (_b = (_a = this.timerId).terminate) === null || _b === void 0 ? void 0 : _b.call(_a);
            this.setTimerId = undefined;
            this.setStatus = false;
        }
    };
    Object.defineProperty(QTimer.prototype, "setTimerId", {
        set: function (timerId) {
            this.timerId = timerId;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QTimer.prototype, "setStatus", {
        set: function (status) {
            this.status = status;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QTimer.prototype, "getStatus", {
        get: function () {
            return this.status;
        },
        enumerable: false,
        configurable: true
    });
    QTimer.prototype.hibernate = function () {
        var _a, _b;
        if (this.timerId) {
            (_b = (_a = this.timerId).terminate) === null || _b === void 0 ? void 0 : _b.call(_a);
            this.setTimerId = undefined;
            this.setStatus = false;
        }
    };
    return QTimer;
}(_shrimp_interfaces_ComponentInterfaces_TSComponentBase__WEBPACK_IMPORTED_MODULE_1__.TSComponentBase));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (QTimer);


/***/ }),

/***/ "../../common/dory/src/Components/index.ts":
/*!*************************************************!*\
  !*** ../../common/dory/src/Components/index.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomChild": () => (/* reexport safe */ _ContainerComponents_CustomChild__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "CustomComponent": () => (/* reexport safe */ _ContainerComponents_CustomComponent__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "Messaging": () => (/* reexport safe */ _LifeCycleComponents_Messaging__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "QIdleTimer": () => (/* reexport safe */ _TimerComponents_QIdleTimer__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "QTimer": () => (/* reexport safe */ _TimerComponents_QTimer__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "RenderingComponent": () => (/* reexport safe */ _ContainerComponents_RenderingComponent__WEBPACK_IMPORTED_MODULE_3__.RenderingComponent)
/* harmony export */ });
/* harmony import */ var _LifeCycleComponents_Messaging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LifeCycleComponents/Messaging */ "../../common/dory/src/Components/LifeCycleComponents/Messaging.ts");
/* harmony import */ var _ContainerComponents_CustomComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ContainerComponents/CustomComponent */ "../../common/dory/src/Components/ContainerComponents/CustomComponent.ts");
/* harmony import */ var _ContainerComponents_CustomChild__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ContainerComponents/CustomChild */ "../../common/dory/src/Components/ContainerComponents/CustomChild.ts");
/* harmony import */ var _ContainerComponents_RenderingComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ContainerComponents/RenderingComponent */ "../../common/dory/src/Components/ContainerComponents/RenderingComponent.ts");
/* harmony import */ var _TimerComponents_QTimer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TimerComponents/QTimer */ "../../common/dory/src/Components/TimerComponents/QTimer.ts");
/* harmony import */ var _TimerComponents_QIdleTimer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TimerComponents/QIdleTimer */ "../../common/dory/src/Components/TimerComponents/QIdleTimer.ts");








/***/ }),

/***/ "../../common/dory/src/Config/ShellConfiguration.ts":
/*!**********************************************************!*\
  !*** ../../common/dory/src/Config/ShellConfiguration.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShellConfiguration": () => (/* binding */ ShellConfiguration)
/* harmony export */ });
var ShellConfiguration = /** @class */ (function () {
    function ShellConfiguration() {
        this.formatConfiguration = {
            dateFormat: function () { return "DD.MM.YYYY"; },
            moneyFormat: function () { return "tr-TR"; },
        };
    }
    return ShellConfiguration;
}());



/***/ }),

/***/ "../../common/dory/src/Context/BlockInfo.ts":
/*!**************************************************!*\
  !*** ../../common/dory/src/Context/BlockInfo.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BlockInfo": () => (/* binding */ BlockInfo)
/* harmony export */ });
var BlockInfo = /** @class */ (function () {
    function BlockInfo(_a) {
        var _b = _a.blockRender, blockRender = _b === void 0 ? null : _b, _c = _a.blockPromises, blockPromises = _c === void 0 ? null : _c;
        this.contextName = BlockInfo.ContextName;
        this.blockRender = blockRender;
        this.blockPromises = blockPromises;
        this.blockJsonIndex = 0;
    }
    /**
     * Add a promise when the render is blocked
     * @param blockPromise Add new promise to handle them asynchronously
     */
    BlockInfo.prototype.addBlockPromise = function (blockPromise) {
        this.blockRender = true;
        this.blockPromises = this.blockPromises || new Array();
        this.blockPromises.push(blockPromise);
    };
    BlockInfo.ContextName = "BlockInfo";
    return BlockInfo;
}());



/***/ }),

/***/ "../../common/dory/src/Context/GlobalContext.ts":
/*!******************************************************!*\
  !*** ../../common/dory/src/Context/GlobalContext.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GlobalContext": () => (/* binding */ GlobalContext)
/* harmony export */ });
var GlobalContext = /** @class */ (function () {
    function GlobalContext() {
        this.contextName = GlobalContext.ContextName;
        this.pageIdCounter = 0;
    }
    GlobalContext.prototype.NextCounter = function () {
        return this.pageIdCounter++;
    };
    GlobalContext.ContextName = "GlobalContext";
    return GlobalContext;
}());



/***/ }),

/***/ "../../common/dory/src/Context/RenderingContext.ts":
/*!*********************************************************!*\
  !*** ../../common/dory/src/Context/RenderingContext.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RenderingContext": () => (/* binding */ RenderingContext)
/* harmony export */ });
/* harmony import */ var _Model_Component_OrderedEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Model/Component/OrderedEvent */ "../../common/dory/src/Model/Component/OrderedEvent.ts");

var RenderingContext = /** @class */ (function () {
    function RenderingContext(_a) {
        var compParentInst = _a.compParentInst, historyBasedConf = _a.historyBasedConf;
        this.contextName = RenderingContext.ContextName;
        this.isRendering = false;
        this.isRenderingEventsComplete = false;
        this.callbacks = new Array();
        this.sequentialCallBacks = new Array();
        this.postRenderRootCallbacks = new Array();
        this.compParentInst = compParentInst;
        this._historyBasedConf = historyBasedConf;
    }
    Object.defineProperty(RenderingContext.prototype, "HistoryBasedConf", {
        get: function () {
            return this._historyBasedConf;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RenderingContext.prototype, "ComponentInCreation", {
        get: function () {
            return this.componentInCreation;
        },
        set: function (value) {
            this.componentInCreation = value;
        },
        enumerable: false,
        configurable: true
    });
    RenderingContext.prototype.SetOwnersAndRetrieveOld = function (newOwners) {
        var oldOwners = { ownerComponent: this.ownerComponent, ownerEvent: this.ownerEvent };
        this.ownerComponent = newOwners.ownerComponent;
        this.ownerEvent = newOwners.ownerEvent;
        return oldOwners;
    };
    RenderingContext.prototype.getCompParentInst = function () {
        return this.compParentInst;
    };
    RenderingContext.prototype.startRendering = function () {
        this.isRendering = true;
        this.isRenderingEventsComplete = false;
    };
    RenderingContext.prototype.postRenderRoot = function () {
        this.componentInCreation = undefined;
        this.postRenderRootCallbacks.forEach(function (cb) { return cb(); });
    };
    RenderingContext.prototype.endRendering = function () {
        this.isRendering = false;
        this.callbacks.forEach(function (callbackFunc) { return callbackFunc(); });
        this.sequentialCallBacks.sort(function (cb1, cb2) { return cb2.triggerOrder - cb1.triggerOrder; }).forEach(function (cb) { return cb.handler(); });
        this.callbacks = new Array();
        this.sequentialCallBacks = new Array();
        this.isRenderingEventsComplete = true;
    };
    RenderingContext.prototype.IsRendering = function () {
        return this.isRendering;
    };
    RenderingContext.prototype.IsRenderingEventsComplete = function () {
        return this.isRenderingEventsComplete;
    };
    RenderingContext.prototype.delayPostRenderRoot = function (_a) {
        var cb = _a.cb;
        this.postRenderRootCallbacks.push(cb);
    };
    RenderingContext.prototype.executeOrDelayEvent = function (_a) {
        var cb = _a.cb, immediateEvent = _a.immediateEvent, triggerOrder = _a.triggerOrder;
        if (!this.isRendering || immediateEvent) {
            return cb();
        }
        if (triggerOrder) {
            this.sequentialCallBacks.push(new _Model_Component_OrderedEvent__WEBPACK_IMPORTED_MODULE_0__.OrderedEvent({ handler: cb, triggerOrder: triggerOrder }));
            return;
        }
        this.callbacks.push(cb);
    };
    RenderingContext.ContextName = "RenderingContext";
    return RenderingContext;
}());



/***/ }),

/***/ "../../common/dory/src/Context/ResponseContext.ts":
/*!********************************************************!*\
  !*** ../../common/dory/src/Context/ResponseContext.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResponseContext": () => (/* binding */ ResponseContext)
/* harmony export */ });
var ResponseContext = /** @class */ (function () {
    function ResponseContext() {
        this.contextName = ResponseContext.ContextName;
        this.response = null;
    }
    ResponseContext.ContextName = "ResponseContext";
    return ResponseContext;
}());



/***/ }),

/***/ "../../common/dory/src/Context/ScopeContext.ts":
/*!*****************************************************!*\
  !*** ../../common/dory/src/Context/ScopeContext.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScopeContext": () => (/* binding */ ScopeContext)
/* harmony export */ });
var ScopeContext = /** @class */ (function () {
    function ScopeContext(_a) {
        var props = _a.props, events = _a.events, children = _a.children;
        this.contextName = ScopeContext.ContextName;
        this.events = events;
        this.props = props;
        this.children = children;
    }
    ScopeContext.prototype.GetProps = function () {
        return this.props;
    };
    ScopeContext.prototype.GetEvents = function () {
        return this.events;
    };
    ScopeContext.prototype.getProp = function (name) {
        return this.props && this.props[name];
    };
    ScopeContext.prototype.setProp = function (name, value) {
        if (this.props) {
            this.props[name] = value;
        }
    };
    ScopeContext.prototype.triggerEvent = function (name, parameters) {
        return this.events && this.events[name](parameters);
    };
    ScopeContext.ContextName = "ScopeContext";
    return ScopeContext;
}());



/***/ }),

/***/ "../../common/dory/src/Context/SettingsQJsonsContext.ts":
/*!**************************************************************!*\
  !*** ../../common/dory/src/Context/SettingsQJsonsContext.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SettingsQJsonsContext": () => (/* binding */ SettingsQJsonsContext)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shrimp/interfaces/IPromiseData */ "../../common/shrimp/interfaces/IPromiseData.ts");
/* harmony import */ var _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shrimp/helpers/hook */ "../../common/shrimp/helpers/hook.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};



var SettingsQJsonsContext = /** @class */ (function () {
    function SettingsQJsonsContext(_a) {
        var context = _a.context, dory = _a.dory;
        this.contextName = SettingsQJsonsContext.ContextName;
        this.PipelineChangeHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_2__.Hook("PipelineChangeHook");
        this.AlertChangeHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_2__.Hook("AlertChangeHook");
        this.pipelineMethods = {};
        this.context = context;
        this.dory = dory;
    }
    SettingsQJsonsContext.prototype.SetPipelineQjson = function (qjson) {
        return __awaiter(this, void 0, void 0, function () {
            var renderedPipelineQJson;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.pipelineQjson = qjson;
                        this.PipelineChangeHook.triggerer();
                        return [4 /*yield*/, this.renderQJson({ qjson: qjson, compUIDPrefix: "pipeline", methodCB: function (methods) { return _this.pipelineMethods = methods; } })];
                    case 1:
                        renderedPipelineQJson = _a.sent();
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Init({ callBack: function (messages) { return _this.TriggerPipeline("logHandler", { messages: messages }); } });
                        return [2 /*return*/, renderedPipelineQJson.prom];
                }
            });
        });
    };
    SettingsQJsonsContext.prototype.GetPipelineQjson = function () {
        return this.pipelineQjson;
    };
    SettingsQJsonsContext.prototype.renderQJson = function (_a) {
        var qjson = _a.qjson, compUIDPrefix = _a.compUIDPrefix, methodCB = _a.methodCB;
        return __awaiter(this, void 0, void 0, function () {
            var prom, retDoryJr;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        prom = (0,_shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_1__.CreatePromiseData)();
                        retDoryJr = this.dory.CreateDoryJr({ compUIDPrefix: compUIDPrefix });
                        retDoryJr.setCallbackDisplay(function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                methodCB === null || methodCB === void 0 ? void 0 : methodCB(retDoryJr.GetMethods());
                                prom.resolver();
                                return [2 /*return*/];
                            });
                        }); });
                        return [4 /*yield*/, retDoryJr.Render({ qjson: qjson, compParentInst: null })];
                    case 1:
                        _b.sent();
                        return [2 /*return*/, { prom: prom.promise, retDoryJr: retDoryJr }];
                }
            });
        });
    };
    SettingsQJsonsContext.prototype.SetAlertQjson = function (qjson) {
        this.alertQjson = qjson;
        this.AlertChangeHook.triggerer();
    };
    SettingsQJsonsContext.prototype.GetAlertQjson = function () {
        return this.alertQjson;
    };
    SettingsQJsonsContext.prototype.SetLoadingQjson = function (qjson) {
        this.loadingQjson = qjson;
    };
    SettingsQJsonsContext.prototype.GetLoadingQjson = function () {
        return this.loadingQjson;
    };
    SettingsQJsonsContext.prototype.SetGlobalLocalizationQjson = function (qJson) {
        var globalLR = qJson.clrids;
        this.dory.SetGlobalLRDict(globalLR);
    };
    SettingsQJsonsContext.prototype.TriggerPipeline = function (methodName, methodArgs) {
        var _a, _b;
        if ((_a = this.pipelineMethods) === null || _a === void 0 ? void 0 : _a[methodName]) {
            return (_b = this.pipelineMethods[methodName]) === null || _b === void 0 ? void 0 : _b.call(undefined, methodArgs);
        }
    };
    SettingsQJsonsContext.prototype.RerenderPipelineQjson = function () {
        if (!this.pipelineQjson) {
            return undefined;
        }
        return this.SetPipelineQjson(this.pipelineQjson);
    };
    SettingsQJsonsContext.ContextName = "SettingsQJsonContext";
    return SettingsQJsonsContext;
}());



/***/ }),

/***/ "../../common/dory/src/Context/Store/BagStoreContext.ts":
/*!**************************************************************!*\
  !*** ../../common/dory/src/Context/Store/BagStoreContext.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BagStoreContext": () => (/* binding */ BagStoreContext)
/* harmony export */ });
/* harmony import */ var _BaseStoreContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseStoreContext */ "../../common/dory/src/Context/Store/BaseStoreContext.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var BagStoreContext = /** @class */ (function (_super) {
    __extends(BagStoreContext, _super);
    function BagStoreContext() {
        var _this = _super.call(this) || this;
        _this.contextName = BagStoreContext.ContextName;
        return _this;
    }
    BagStoreContext.prototype.CreateSelf = function () {
        return new BagStoreContext();
    };
    BagStoreContext.ContextName = "BagStoreContext";
    return BagStoreContext;
}(_BaseStoreContext__WEBPACK_IMPORTED_MODULE_0__.BaseStoreContext));



/***/ }),

/***/ "../../common/dory/src/Context/Store/BaseStoreContext.ts":
/*!***************************************************************!*\
  !*** ../../common/dory/src/Context/Store/BaseStoreContext.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseStoreContext": () => (/* binding */ BaseStoreContext)
/* harmony export */ });
var BaseStoreContext = /** @class */ (function () {
    function BaseStoreContext() {
        this.contextItems = {};
    }
    BaseStoreContext.prototype.set = function (name, value) {
        if (value === undefined) {
            this.delete(name);
            return;
        }
        this.contextItems[name] = value;
    };
    BaseStoreContext.prototype.get = function (name) {
        return this.contextItems[name];
    };
    BaseStoreContext.prototype.getAll = function () {
        return this.contextItems;
    };
    BaseStoreContext.prototype.delete = function (name) {
        delete this.contextItems[name];
    };
    BaseStoreContext.prototype.clear = function () {
        this.contextItems = {};
    };
    return BaseStoreContext;
}());



/***/ }),

/***/ "../../common/dory/src/Context/Store/GlobalStoreContext.ts":
/*!*****************************************************************!*\
  !*** ../../common/dory/src/Context/Store/GlobalStoreContext.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GlobalStoreContext": () => (/* binding */ GlobalStoreContext)
/* harmony export */ });
/* harmony import */ var _BaseStoreContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseStoreContext */ "../../common/dory/src/Context/Store/BaseStoreContext.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var GlobalStoreContext = /** @class */ (function (_super) {
    __extends(GlobalStoreContext, _super);
    function GlobalStoreContext() {
        var _this = _super.call(this) || this;
        _this.contextName = GlobalStoreContext.ContextName;
        return _this;
    }
    GlobalStoreContext.prototype.CreateSelf = function () {
        return new GlobalStoreContext();
    };
    GlobalStoreContext.ContextName = "GlobalStoreContext";
    return GlobalStoreContext;
}(_BaseStoreContext__WEBPACK_IMPORTED_MODULE_0__.BaseStoreContext));



/***/ }),

/***/ "../../common/dory/src/Context/Store/PageStoreContext.ts":
/*!***************************************************************!*\
  !*** ../../common/dory/src/Context/Store/PageStoreContext.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PageStoreContext": () => (/* binding */ PageStoreContext)
/* harmony export */ });
/* harmony import */ var _BaseStoreContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseStoreContext */ "../../common/dory/src/Context/Store/BaseStoreContext.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var PageStoreContext = /** @class */ (function (_super) {
    __extends(PageStoreContext, _super);
    function PageStoreContext() {
        var _this = _super.call(this) || this;
        _this.contextName = PageStoreContext.ContextName;
        return _this;
    }
    PageStoreContext.ContextName = "PageStoreContext";
    return PageStoreContext;
}(_BaseStoreContext__WEBPACK_IMPORTED_MODULE_0__.BaseStoreContext));



/***/ }),

/***/ "../../common/dory/src/Context/Store/SharedStoreContext.ts":
/*!*****************************************************************!*\
  !*** ../../common/dory/src/Context/Store/SharedStoreContext.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SharedStoreContext": () => (/* binding */ SharedStoreContext)
/* harmony export */ });
/* harmony import */ var _BaseStoreContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseStoreContext */ "../../common/dory/src/Context/Store/BaseStoreContext.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var SharedStoreContext = /** @class */ (function (_super) {
    __extends(SharedStoreContext, _super);
    function SharedStoreContext() {
        var _this = _super.call(this) || this;
        _this.contextName = SharedStoreContext.ContextName;
        return _this;
    }
    SharedStoreContext.prototype.CreateSelf = function () {
        return new SharedStoreContext();
    };
    SharedStoreContext.prototype.OverrideAllContextItems = function (newContextItems) {
        this.contextItems = newContextItems;
    };
    SharedStoreContext.ContextName = "SharedStoreContext";
    return SharedStoreContext;
}(_BaseStoreContext__WEBPACK_IMPORTED_MODULE_0__.BaseStoreContext));



/***/ }),

/***/ "../../common/dory/src/Context/ValueContext.ts":
/*!*****************************************************!*\
  !*** ../../common/dory/src/Context/ValueContext.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ValueContext": () => (/* binding */ ValueContext)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/compDiffHelper */ "../../common/shrimp/helpers/compDiffHelper.ts");
/* harmony import */ var _DoryJr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../DoryJr */ "../../common/dory/src/DoryJr.ts");
/* harmony import */ var _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Managers/HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
/* harmony import */ var _ScopeContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ScopeContext */ "../../common/dory/src/Context/ScopeContext.ts");




var ValueContext = /** @class */ (function () {
    function ValueContext(_a) {
        var context = _a.context;
        this.contextName = ValueContext.ContextName;
        this.valueContextList = [];
        this._valueContext = {};
        this.context = context;
    }
    ValueContext.prototype.getValueContext = function () {
        return this._valueContext;
    };
    ValueContext.prototype.getValueContextList = function (referenceCompId) {
        var _this = this;
        this.valueContextList = [];
        var valueControlList = [];
        var historyContext = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_2__.HistoryManager.ContextName);
        var historyItem = historyContext === null || historyContext === void 0 ? void 0 : historyContext.currentLevel().last();
        if (!historyItem)
            return this.valueContextList;
        //find the components in page or referenceComp children
        if (referenceCompId) {
            var referenceControl = historyItem.controlDict[referenceCompId];
            if (!referenceControl)
                return this.valueContextList;
            var y = this.getAllChildrenComponentCollection(historyItem, referenceControl);
            valueControlList = valueControlList.concat(y);
        }
        else {
            Object.keys(historyItem.controlDict).forEach(function (key) {
                valueControlList.push(historyItem.controlDict[key]);
            });
            var subCollections = historyItem.getComponentSubCollections();
            valueControlList = valueControlList.concat(subCollections);
        }
        valueControlList.forEach(function (control) {
            if (_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.componentValueList[control.compType] && !_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.componentValueList[control.compType].classCompare) {
                var valueCompInfo = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.componentValueList[control.compType];
                var component = control.component;
                if (component === undefined) {
                    return;
                }
                var value_1 = component[valueCompInfo.valueField];
                var compareValue_1 = component[_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ComparisonEnum.compareValueField];
                var label = component[valueCompInfo.labelField];
                var valueText = value_1;
                var compareValueText = compareValue_1;
                var status_1 = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ValueStatus.none;
                status_1 = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.valueCompare({ value: value_1, compareValue: compareValue_1 });
                if (control.compType == "VCombobox") {
                    var comboValue = value_1;
                    var comboCompareValue = compareValue_1;
                    if (Array.isArray(comboValue) || Array.isArray(comboCompareValue)) {
                        //Multiple Select
                        status_1 = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.multipleValueCompare(comboValue, comboCompareValue);
                        valueText = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.decideTooltipContent({ componentInstance: component, toolTipValue: value_1 });
                        compareValueText = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.decideTooltipContent({ componentInstance: component, toolTipValue: compareValue_1 });
                    }
                    else {
                        if (value_1 && value_1.hasOwnProperty("value")) {
                            comboValue = value_1["value"];
                            valueText = value_1["text"];
                        }
                        if (compareValue_1 && compareValue_1.hasOwnProperty("value")) {
                            comboCompareValue = compareValue_1["value"];
                            compareValueText = compareValue_1["text"];
                        }
                        status_1 = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.valueCompare({ value: comboValue, compareValue: comboCompareValue });
                    }
                }
                else if (control.compType == "VSelect") {
                    if (Array.isArray(value_1) || Array.isArray(compareValue_1)) {
                        //Multiple Select
                        status_1 = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.multipleValueCompare(value_1, compareValue_1);
                        valueText = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.decideTooltipContent({ componentInstance: component, toolTipValue: value_1 });
                        compareValueText = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.decideTooltipContent({ componentInstance: component, toolTipValue: compareValue_1 });
                    }
                    else {
                        var items = component["items"];
                        var valueItem = items.find(function (i) { return i["value"] == value_1; });
                        if (valueItem) {
                            valueText = valueItem["text"];
                        }
                        var compareValueItem = items.find(function (i) { return i["value"] == compareValue_1; });
                        if (compareValueItem) {
                            compareValueText = compareValueItem["text"];
                        }
                    }
                }
                if (status_1 == _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ValueStatus.none) {
                    return;
                }
                var assignedValue = { label: label, value: component[_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ComparisonEnum.compareTableValue] || valueText, compareValue: component[_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ComparisonEnum.compareTextValue] || compareValueText, statu: status_1 };
                _this.valueContextList.push(assignedValue);
            }
        });
        return this.valueContextList;
    };
    ValueContext.prototype.getAllChildrenComponentCollection = function (historyItem, referenceControl) {
        var _this = this;
        var compCollection = this.getCustomComponentCollectionsByCompId(referenceControl.compId);
        if (referenceControl.children && Object.keys(referenceControl.children).length > 0) {
            Object.keys(referenceControl.children).forEach(function (key) {
                referenceControl.children[key].forEach(function (comp) {
                    var childrenCollection = _this.getAllChildrenComponentCollection(historyItem, comp);
                    compCollection = compCollection.concat(childrenCollection);
                });
            });
        }
        else {
            compCollection.push(referenceControl);
        }
        return compCollection;
    };
    ValueContext.prototype.getCustomComponentCollectionsByCompId = function (customComponentId) {
        var _a;
        var dicts = [];
        (_a = this.context.GetItemGroup(_DoryJr__WEBPACK_IMPORTED_MODULE_1__.DoryJr.ContextName)) === null || _a === void 0 ? void 0 : _a.forEach(function (doryJr) {
            var _a, _b, _c;
            var scopeProps = (_a = doryJr.ContextJr.GetItemSingle(_ScopeContext__WEBPACK_IMPORTED_MODULE_3__.ScopeContext.ContextName)) === null || _a === void 0 ? void 0 : _a.GetProps();
            if (scopeProps && scopeProps["ID"] == customComponentId) {
                var dict_1 = (_c = (_b = doryJr.ContextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_2__.HistoryManager.ContextName)) === null || _b === void 0 ? void 0 : _b.currentLevel().last()) === null || _c === void 0 ? void 0 : _c.controlDict;
                if (dict_1) {
                    Object.keys(dict_1).forEach(function (key) { return dicts.push(dict_1[key]); });
                }
            }
        });
        return dicts;
    };
    ValueContext.ContextName = "ValueContext";
    return ValueContext;
}());



/***/ }),

/***/ "../../common/dory/src/Dory.ts":
/*!*************************************!*\
  !*** ../../common/dory/src/Dory.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Dory": () => (/* binding */ Dory)
/* harmony export */ });
/* harmony import */ var _shrimp_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shrimp/context */ "../../common/shrimp/context.ts");
/* harmony import */ var _shrimp_helpers_clonable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shrimp/helpers/clonable */ "../../common/shrimp/helpers/clonable.ts");
/* harmony import */ var _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shrimp/helpers/hook */ "../../common/shrimp/helpers/hook.ts");
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shrimp/interfaces/quick/INavigationDemand */ "../../common/shrimp/interfaces/quick/INavigationDemand.ts");
/* harmony import */ var _shrimp_interfaces_RenderingInterfaces_IDory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shrimp/interfaces/RenderingInterfaces/IDory */ "../../common/shrimp/interfaces/RenderingInterfaces/IDory.ts");
/* harmony import */ var _Config_ShellConfiguration__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Config/ShellConfiguration */ "../../common/dory/src/Config/ShellConfiguration.ts");
/* harmony import */ var _Context_GlobalContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Context/GlobalContext */ "../../common/dory/src/Context/GlobalContext.ts");
/* harmony import */ var _Context_ResponseContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Context/ResponseContext */ "../../common/dory/src/Context/ResponseContext.ts");
/* harmony import */ var _Context_SettingsQJsonsContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Context/SettingsQJsonsContext */ "../../common/dory/src/Context/SettingsQJsonsContext.ts");
/* harmony import */ var _Context_Store_BagStoreContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Context/Store/BagStoreContext */ "../../common/dory/src/Context/Store/BagStoreContext.ts");
/* harmony import */ var _Context_Store_GlobalStoreContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Context/Store/GlobalStoreContext */ "../../common/dory/src/Context/Store/GlobalStoreContext.ts");
/* harmony import */ var _Context_Store_SharedStoreContext__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Context/Store/SharedStoreContext */ "../../common/dory/src/Context/Store/SharedStoreContext.ts");
/* harmony import */ var _Context_ValueContext__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Context/ValueContext */ "../../common/dory/src/Context/ValueContext.ts");
/* harmony import */ var _DoryJr__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./DoryJr */ "../../common/dory/src/DoryJr.ts");
/* harmony import */ var _Managers_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Managers/DoryBasedLRManager */ "../../common/dory/src/Managers/DoryBasedLRManager.ts");
/* harmony import */ var _Managers_Evaluator__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Managers/Evaluator */ "../../common/dory/src/Managers/Evaluator.ts");
/* harmony import */ var _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Managers/HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
/* harmony import */ var _Managers_MessagingManager__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Managers/MessagingManager */ "../../common/dory/src/Managers/MessagingManager.ts");
/* harmony import */ var _Model_History_DoryLikeData__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Model/History/DoryLikeData */ "../../common/dory/src/Model/History/DoryLikeData.ts");
/* harmony import */ var _Model_History_DoryLikeHelper__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./Model/History/DoryLikeHelper */ "../../common/dory/src/Model/History/DoryLikeHelper.ts");
/* harmony import */ var _Model_History_HistoryItem__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Model/History/HistoryItem */ "../../common/dory/src/Model/History/HistoryItem.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};






















var Dory = /** @class */ (function () {
    function Dory(interDoryContext) {
        var _this = this;
        this.contextName = Dory.ContextName;
        this.context = new _shrimp_context__WEBPACK_IMPORTED_MODULE_0__.ContextManager();
        this.errorInfo = { errorDetail: " ", errorOwnerInfo: { componentType: " ", componentId: " ", fieldName: " ", fieldType: "E" } };
        this.displayHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_2__.Hook("DoryDisplayHook");
        this.partialDisplayHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_2__.Hook("DoryPartialDisplayHook");
        this.visibilityHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_2__.Hook("DoryVisibilityHook");
        this.PageCompletedHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_2__.Hook("PageCompletedHook", { manageState: true });
        this.PageRenderStartedHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_2__.Hook("PageRenderStartedHook");
        this.platformType = "Web";
        // Editor is on edit state
        this.isEditorInEditState = false;
        this.callBackComponentTarget = function () { };
        this._isRenderCompleted = false;
        this.interDoryContext = interDoryContext;
        if (!this.interDoryContext.GetItemSingle(_Context_Store_SharedStoreContext__WEBPACK_IMPORTED_MODULE_12__.SharedStoreContext.ContextName)) {
            this.interDoryContext.RegisterItem(new _Context_Store_SharedStoreContext__WEBPACK_IMPORTED_MODULE_12__.SharedStoreContext()); // first dory should register shared store context
            this.interDoryContext.RegisterItem(new _Context_GlobalContext__WEBPACK_IMPORTED_MODULE_7__.GlobalContext());
        }
        this.context.RegisterItem(this);
        this.context.RegisterItem(new _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager(this.context, new _Model_History_DoryLikeData__WEBPACK_IMPORTED_MODULE_19__.DoryLikeData(this, {})));
        this.context.RegisterItem(new _Context_Store_GlobalStoreContext__WEBPACK_IMPORTED_MODULE_11__.GlobalStoreContext());
        this.context.RegisterItem(new _Context_Store_BagStoreContext__WEBPACK_IMPORTED_MODULE_10__.BagStoreContext());
        this.context.RegisterItem(new _Managers_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_15__.DoryBasedLRManager(this.context));
        this.context.RegisterItem(new _Context_ValueContext__WEBPACK_IMPORTED_MODULE_13__.ValueContext({ context: this.context }));
        this.SettingsQJsonContext = new _Context_SettingsQJsonsContext__WEBPACK_IMPORTED_MODULE_9__.SettingsQJsonsContext({ context: this.context, dory: this });
        this.context.RegisterItem(this.SettingsQJsonContext);
        this.shellConfigs = new _Config_ShellConfiguration__WEBPACK_IMPORTED_MODULE_6__.ShellConfiguration();
        this.PageCompletedHook.subscribe(function (option) {
            _this.SettingsQJsonContext.TriggerPipeline("onPostRender", {}); //  this event is triggered after each page render in the application
        });
    }
    Object.defineProperty(Dory.prototype, "PartialDisplayHook", {
        get: function () {
            return this.partialDisplayHook;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dory.prototype, "DisplayHook", {
        get: function () {
            return this.displayHook;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dory.prototype, "OperatorCollection", {
        get: function () {
            return this.operatorCollection;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dory.prototype, "isDark", {
        get: function () {
            return this._isDark;
        },
        set: function (v) {
            this._isDark = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dory.prototype, "isRenderCompleted", {
        get: function () {
            return this._isRenderCompleted;
        },
        set: function (v) {
            this._isRenderCompleted = v;
        },
        enumerable: false,
        configurable: true
    });
    Dory.prototype.GetLRType = function () {
        var _a;
        return ((_a = this.context.GetItemSingle(_Managers_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_15__.DoryBasedLRManager.ContextName)) === null || _a === void 0 ? void 0 : _a.LRType) || "tr-TR";
    };
    Dory.prototype.SetLRType = function (LRType, LRTypeRTL) {
        return __awaiter(this, void 0, void 0, function () {
            var doryLRManager;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        LRType = LRType || "tr-TR";
                        doryLRManager = this.context.GetItemSingle(_Managers_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_15__.DoryBasedLRManager.ContextName);
                        if (!doryLRManager || doryLRManager.LRType == LRType) {
                            return [2 /*return*/];
                        }
                        doryLRManager.LRType = LRType;
                        return [4 /*yield*/, this.SettingsQJsonContext.RerenderPipelineQjson()];
                    case 1:
                        _a.sent();
                        doryLRManager.LRTypeRTL = LRTypeRTL !== null && LRTypeRTL !== void 0 ? LRTypeRTL : false;
                        this.ReRender();
                        return [2 /*return*/];
                }
            });
        });
    };
    Dory.prototype.SetGlobalLRDict = function (GlobalLRDict) {
        this.context.GetItemSingle(_Managers_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_15__.DoryBasedLRManager.ContextName).ResourceDict = GlobalLRDict;
    };
    Dory.prototype.Render = function (_a) {
        var qjson = _a.qjson, compParentInst = _a.compParentInst, storeItems = _a.storeItems, pageId = _a.pageId, pageName = _a.pageName;
        return __awaiter(this, void 0, void 0, function () {
            var historyItem;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.displayHook.clearPostSubscribers(true);
                        pageId = pageId || this.interDoryContext.GetItemSingle(_Context_GlobalContext__WEBPACK_IMPORTED_MODULE_7__.GlobalContext.ContextName).NextCounter().toString();
                        historyItem = new _Model_History_HistoryItem__WEBPACK_IMPORTED_MODULE_21__.HistoryItem({ qjson: qjson, context: this.context.Clone(), storeItems: storeItems, pageId: pageId, pageName: pageName });
                        return [4 /*yield*/, this.innerRender({ historyItem: historyItem })];
                    case 1:
                        _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Dory.prototype.PageCompleted = function (historyItem) {
        var _this = this;
        var lastHistory = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName).currentLevel().last();
        var doryJrs = lastHistory.GetDoryJrs();
        if (!doryJrs) {
            this.isRenderCompleted = true;
            _Model_History_DoryLikeHelper__WEBPACK_IMPORTED_MODULE_20__.DoryLikeHelper.TriggerPageComplete(this, lastHistory.pageId, historyItem);
            return;
        }
        var counter = 0;
        doryJrs === null || doryJrs === void 0 ? void 0 : doryJrs.forEach(function (doryJr) {
            doryJr.PageJrCompletedHook.subscribe(function () {
                if (++counter == doryJrs.length) {
                    _this.isRenderCompleted = true;
                    _Model_History_DoryLikeHelper__WEBPACK_IMPORTED_MODULE_20__.DoryLikeHelper.TriggerPageComplete(_this, lastHistory.pageId, historyItem);
                }
            });
            doryJr.PageJrCompletedHook.listenHookState(function () {
                counter--;
                _this.isRenderCompleted = false;
            });
        });
    };
    Dory.prototype.innerRender = function (_a) {
        var _b, _c, _d, _e;
        var historyItem = _a.historyItem, noHistory = _a.noHistory;
        return __awaiter(this, void 0, void 0, function () {
            var awaited, ex_1, errorExp, engineYamlLogType;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0:
                        this.PageCompletedHook.ResetAndStartState();
                        this.isRenderCompleted = false;
                        this.PageRenderStartedHook.triggerer({ pageId: historyItem.pageId });
                        _f.label = 1;
                    case 1:
                        _f.trys.push([1, 3, , 4]);
                        (_c = (_b = this.shellConfigs).clearPageClose) === null || _c === void 0 ? void 0 : _c.call(_b);
                        awaited = historyItem.Render({ noHistory: noHistory });
                        return [4 /*yield*/, awaited];
                    case 2:
                        _f.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_1 = _f.sent();
                        errorExp = ex_1.toString().split("at", 1);
                        this.errorInfo.errorDetail = "Render failed! " + errorExp;
                        engineYamlLogType = (_e = (_d = this.shellConfigs).getMinEngineLogType) === null || _e === void 0 ? void 0 : _e.call(_d);
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.Log({ logMessage: "Render failed! ", error: ex_1, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                        this.ReportError([this.errorInfo]);
                        return [3 /*break*/, 4];
                    case 4:
                        this.CallRender(historyItem, undefined, noHistory);
                        this.PageCompleted(historyItem);
                        return [2 /*return*/];
                }
            });
        });
    };
    Dory.prototype.ReRender = function () {
        var _a;
        var historyItem = (_a = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last();
        if (!historyItem) {
            return;
        }
        if (historyItem.GetRenderingContext().IsRendering()) {
            historyItem.UpdateLRType();
            return;
        } // prevent rendering if called during rendering
        this.innerRender({ historyItem: historyItem, noHistory: true });
    };
    Dory.prototype.CallHibernate = function () {
        var _a;
        var historyItem = (_a = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last();
        if (!historyItem) {
            return;
        }
        historyItem.hibernate();
    };
    Dory.prototype.SetErrorCallBack = function (callBack) {
        this.errorCallBack = callBack;
    };
    Dory.prototype.SetSiteSettings = function (siteSettings) {
        var _this = this;
        if (!siteSettings) {
            return;
        }
        if (!this.siteSettings) {
            this.siteSettings = {};
        }
        Object.keys(siteSettings).forEach(function (key) {
            if (siteSettings[key]) {
                _this.siteSettings[key] = siteSettings[key];
            }
        });
    };
    Dory.prototype.SetPlatformType = function (platformType) {
        if (!platformType)
            return;
        this.platformType = platformType;
    };
    Dory.prototype.SetSelectedProjectUrl = function (url) {
        if (!this.siteSettings) {
            return;
        }
        this.siteSettings.selectedProjectUrl = url;
    };
    Dory.prototype.ReportError = function (errors) {
        if (!this.errorCallBack) {
            return;
        }
        this.errorCallBack(errors);
    };
    Dory.prototype.delayTillPostDisplay = function (cb) {
        this.displayHook.postSubscribe(cb);
    };
    Dory.prototype.SetDisplayCallBack = function (_a) {
        var callBackFunc = _a.callBackFunc;
        this.displayHook.forceClearAllSubscibers();
        this.displayHook.subscribe(callBackFunc);
    };
    Dory.prototype.SetPartialDisplayCallBack = function (_a) {
        var callBackFunc = _a.callBackFunc;
        this.partialDisplayHook.forceClearAllSubscibers();
        this.partialDisplayHook.subscribe(callBackFunc);
    };
    Dory.prototype.SubscribeComponentVisibility = function (subscribeFunc) {
        this.visibilityHook.forceClearAllSubscibers();
        this.visibilityHook.subscribe(subscribeFunc);
    };
    Dory.prototype.RetrieveQJsonforDesignSide = function (qjsonPath) {
        return __awaiter(this, void 0, void 0, function () {
            var compQJson;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.shellConfigs.historyBasedConf.retrieveCjson({ qjsonPath: qjsonPath })];
                    case 1:
                        compQJson = _a.sent();
                        return [2 /*return*/, compQJson];
                }
            });
        });
    };
    Dory.prototype.GetSettingsQJsonContext = function () {
        return this.SettingsQJsonContext;
    };
    Object.defineProperty(Dory.prototype, "network", {
        get: function () {
            return this.shellConfigs.network;
        },
        enumerable: false,
        configurable: true
    });
    Dory.prototype.GetComponentList = function () {
        var _a;
        return (_a = this.GetLastHistory()) === null || _a === void 0 ? void 0 : _a.GetComponentList();
    };
    Dory.prototype.getComponentCollectionByIdProperty = function (_a) {
        var id = _a.id, _b = _a.deep, deep = _b === void 0 ? false : _b;
        var historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        var lastHistory = historyManager === null || historyManager === void 0 ? void 0 : historyManager.currentLevel().last();
        return lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.getComponentCollectionByIdProperty({ id: id, deep: deep });
    };
    Dory.prototype.getComponentCollectionByDom = function (_a) {
        var element = _a.element, _b = _a.deep, deep = _b === void 0 ? false : _b;
        var historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        var lastHistory = historyManager === null || historyManager === void 0 ? void 0 : historyManager.currentLevel().last();
        return lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.getComponentCollectionByDom({ element: element, deep: deep });
    };
    Dory.prototype.GetComponentCollectionByID = function (id) {
        var historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        var lastHistory = historyManager === null || historyManager === void 0 ? void 0 : historyManager.currentLevel().last();
        return lastHistory ? lastHistory.getCompCollectionById(id) : undefined;
    };
    Dory.prototype.DestroyComponentCollectionByID = function (Id) {
        var historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        var lastHistory = historyManager === null || historyManager === void 0 ? void 0 : historyManager.currentLevel().last();
        return lastHistory ? lastHistory.destroyComponentCollectionById(Id) : false;
    };
    Dory.prototype.GetComponentCollection = function () {
        var historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        var lastHistory = historyManager === null || historyManager === void 0 ? void 0 : historyManager.currentLevel().last();
        return lastHistory ? lastHistory.GetComponentCollection() : null;
    };
    Dory.prototype.GetSubComponentCollectionByID = function (compId) {
        var _a, _b;
        var historyItem = (_a = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last();
        var compColl = (_b = historyItem === null || historyItem === void 0 ? void 0 : historyItem.getComponentSubCollectionByID({ id: compId })) !== null && _b !== void 0 ? _b : null;
        return compColl;
    };
    Dory.prototype.GetComponentCollectionByUID = function (compUID) {
        var _a;
        var historyItem = (_a = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last();
        return historyItem === null || historyItem === void 0 ? void 0 : historyItem.GetComponentCollectionByUID(compUID);
    };
    Dory.prototype.GetComponentSubCollection = function () {
        var _a, _b;
        var historyItem = (_a = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last();
        var compColl = (_b = historyItem === null || historyItem === void 0 ? void 0 : historyItem.getComponentSubCollections()) !== null && _b !== void 0 ? _b : null;
        return compColl;
    };
    Dory.prototype.Evaluate = function (_a) {
        var script = _a.script, response = _a.response, lang = _a.lang, sourceMap = _a.sourceMap;
        var responseContext = new _Context_ResponseContext__WEBPACK_IMPORTED_MODULE_8__.ResponseContext();
        responseContext.response = response;
        var currentContext = this.context.Clone();
        currentContext.RegisterItem(responseContext);
        return new _Managers_Evaluator__WEBPACK_IMPORTED_MODULE_16__.Evaluator().Evaluate({ script: script, context: currentContext, lang: lang });
    };
    Dory.prototype.getEvalGlobals = function () {
        var currentContext = this.context.Clone();
        var historyManager = currentContext.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        return new _Managers_Evaluator__WEBPACK_IMPORTED_MODULE_16__.Evaluator().createGlobal({ context: currentContext, dory: this, historyManager: historyManager });
    };
    /**
     * Add Configuration from outside of Dory
     * @param shellConfiguration Configuration to be added into Dory's shellConfiguration field
     */
    Dory.prototype.SetShellGlobalConfiguration = function (shellConfigs) {
        for (var configItemKey in shellConfigs) {
            if (shellConfigs[configItemKey]) {
                this.shellConfigs[configItemKey] = shellConfigs[configItemKey];
            }
        }
        if (shellConfigs.logHandler) {
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.Init({ callBack: shellConfigs.logHandler.cb, clear: shellConfigs.logHandler.clear });
        }
    };
    Dory.prototype.GetShellConfiguration = function () {
        return this.shellConfigs;
    };
    Dory.prototype.Clear = function () {
        var _a;
        var bagStoreContext = this.context.GetItemSingle(_Context_Store_BagStoreContext__WEBPACK_IMPORTED_MODULE_10__.BagStoreContext.ContextName);
        bagStoreContext === null || bagStoreContext === void 0 ? void 0 : bagStoreContext.clear();
        (_a = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.ClearHistory();
        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.clearLogs();
    };
    Dory.prototype.CallRender = function (historyItem, navigationDirection, noHistory) {
        var _a, _b;
        if (!this.displayHook.hasSubscribers) {
            var engineYamlLogType = (_b = (_a = this.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.Log({ logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.LogType.Error, logMessage: "Dory.CallBackRender is not set", minEngineLogLevel: engineYamlLogType });
        }
        var additionals = historyItem.additionals;
        var elems = historyItem.controlList.map(function (item) { return item.domElement; });
        this.displayHook.triggerer(elems, historyItem.pageId, historyItem.pageName, navigationDirection, additionals, noHistory);
    };
    Dory.prototype.hasHistory = function (pageId, checkExternalRouter) {
        var _a;
        var historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        var navigationDemand = historyManager.hasHistory(pageId);
        if (checkExternalRouter && ((_a = historyManager === null || historyManager === void 0 ? void 0 : historyManager.currentLevel().last()) === null || _a === void 0 ? void 0 : _a.pageId) != (checkExternalRouter === null || checkExternalRouter === void 0 ? void 0 : checkExternalRouter.currPageId)) {
            navigationDemand.externalHistoryRouter = true;
        }
        return navigationDemand;
    };
    Dory.prototype.searchTargetHistoryManager = function (_a) {
        var pageId = _a.pageId;
        var historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        return (historyManager === null || historyManager === void 0 ? void 0 : historyManager.searchTargetHistoryManager({ pageId: pageId })) || null;
    };
    Dory.prototype.goHistory = function (options) {
        if (options.navigationDemand) {
            options.navigationDemand.navigationDemandType == _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_4__.INavigationDemandType.back ?
                this.goHistoryBack(options) :
                this.goHistoryForward(options);
        }
    };
    Dory.prototype.goHistoryBack = function (options) {
        var _a, _b;
        var historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        if (options === null || options === void 0 ? void 0 : options.navigationDemand) {
            (_a = options.navigationDemand.ownerHistoryManager) === null || _a === void 0 ? void 0 : _a.Back(options.navigationDemand);
            return;
        }
        ;
        historyManager === null || historyManager === void 0 ? void 0 : historyManager.Back((_b = options === null || options === void 0 ? void 0 : options.navigationDemand) !== null && _b !== void 0 ? _b : {});
    };
    Dory.prototype.goHistoryForward = function (options) {
        var _a, _b;
        var historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        if (options.navigationDemand) {
            (_a = options.navigationDemand.ownerHistoryManager) === null || _a === void 0 ? void 0 : _a.Forward(options.navigationDemand);
            return;
        }
        historyManager === null || historyManager === void 0 ? void 0 : historyManager.Forward((_b = options === null || options === void 0 ? void 0 : options.navigationDemand) !== null && _b !== void 0 ? _b : {});
    };
    Dory.prototype.getPreviousPageName = function () {
        var _a, _b;
        return (_b = (_a = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().previous()) === null || _b === void 0 ? void 0 : _b.pageName;
    };
    Dory.prototype.GetLastHistory = function () {
        var _a;
        return ((_a = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last()) || null;
    };
    Dory.prototype.SetEditMode = function (state) {
        this.isEditorInEditState = state;
    };
    Dory.prototype.GetEditMode = function () {
        return this.isEditorInEditState;
    };
    Dory.prototype.SetEditor = function (editor) {
        this.editor = editor;
    };
    Dory.prototype.GetEditor = function () {
        return this.editor;
    };
    Dory.prototype.CreateDoryJr = function (_a) {
        var context = _a.context, creatorComp = _a.creatorComp, compUIDPrefix = _a.compUIDPrefix;
        var contextJr = (context !== null && context !== void 0 ? context : this.context).Clone(this.context.GetKeys()); // copy only keys present on DoryContext from incomming context(coming from a parent (Dory or DoryJr or hybrid(no incomming)))
        var doryJr = new _DoryJr__WEBPACK_IMPORTED_MODULE_14__.DoryJr(contextJr);
        contextJr.RegisterItem(new _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager(contextJr, new _Model_History_DoryLikeData__WEBPACK_IMPORTED_MODULE_19__.DoryLikeData(doryJr, { creatorComp: creatorComp, compUIDPrefix: compUIDPrefix })), { override: true });
        if (context) {
            var selfHistoryManager = context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
            var parentHistoryItem = selfHistoryManager === null || selfHistoryManager === void 0 ? void 0 : selfHistoryManager.currentLevel().last();
            parentHistoryItem.registerDoryJr(doryJr); // register self on parent (Dory or DoryJr) history item context
        }
        return doryJr;
    };
    Dory.prototype.SetTSComponentWrapper = function (callBackComponentTarget) {
        this.callBackComponentTarget = callBackComponentTarget;
    };
    Dory.prototype.GetInterDoryContext = function () {
        return this.interDoryContext;
    };
    Dory.prototype.CloneStores = function () {
        var bagStore = this.context.GetItemSingle(_Context_Store_BagStoreContext__WEBPACK_IMPORTED_MODULE_10__.BagStoreContext.ContextName);
        var globalStore = this.context.GetItemSingle(_Context_Store_GlobalStoreContext__WEBPACK_IMPORTED_MODULE_11__.GlobalStoreContext.ContextName);
        var sharedStore = this.interDoryContext.GetItemSingle(_Context_Store_SharedStoreContext__WEBPACK_IMPORTED_MODULE_12__.SharedStoreContext.ContextName);
        return { bagStore: _shrimp_helpers_clonable__WEBPACK_IMPORTED_MODULE_1__.Clonable.DeepClone(bagStore), globalStore: _shrimp_helpers_clonable__WEBPACK_IMPORTED_MODULE_1__.Clonable.DeepClone(globalStore), sharedStore: sharedStore };
    };
    Dory.prototype.SetStoreKeys = function (stores) {
        var bagStore = this.context.GetItemSingle(_Context_Store_BagStoreContext__WEBPACK_IMPORTED_MODULE_10__.BagStoreContext.ContextName);
        var globalStore = this.context.GetItemSingle(_Context_Store_GlobalStoreContext__WEBPACK_IMPORTED_MODULE_11__.GlobalStoreContext.ContextName);
        var sharedStore = this.interDoryContext.GetItemSingle(_Context_Store_SharedStoreContext__WEBPACK_IMPORTED_MODULE_12__.SharedStoreContext.ContextName);
        sharedStore.OverrideAllContextItems(stores.sharedStore.getAll());
        Object.keys(stores.bagStore).forEach(function (key) { return bagStore[key] = stores.bagStore[key]; });
        Object.keys(stores.globalStore).forEach(function (key) { return globalStore[key] = stores.globalStore[key]; });
    };
    Dory.prototype.GetPreviousHistory = function () {
        var _a;
        return ((_a = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().previous()) || null;
    };
    Dory.prototype.GetAdditionals = function (_a) {
        var _b = _a.targetHistoryItem, targetHistoryItem = _b === void 0 ? "last" : _b;
        var targetHI = targetHistoryItem == "last" ? this.GetLastHistory() : this.GetPreviousHistory();
        return targetHI === null || targetHI === void 0 ? void 0 : targetHI.additionals;
    };
    Dory.prototype.SetAdditionals = function (_a) {
        var additionals = _a.additionals, _b = _a.targetHistoryItem, targetHistoryItem = _b === void 0 ? "last" : _b;
        var targetHI = targetHistoryItem == "last" ? this.GetLastHistory() : this.GetPreviousHistory();
        targetHI && (targetHI.additionals = additionals);
    };
    Dory.prototype.Trigger = function (eventName, parameters) {
        return new _Managers_MessagingManager__WEBPACK_IMPORTED_MODULE_18__.MessagingManager(this.context).Trigger({ eventName: eventName, parameters: parameters });
    };
    Dory.prototype.SetOperatorCollection = function (operatorCollection) {
        this.operatorCollection = operatorCollection;
    };
    Dory.ContextName = _shrimp_interfaces_RenderingInterfaces_IDory__WEBPACK_IMPORTED_MODULE_5__.DoryContextName;
    return Dory;
}());



/***/ }),

/***/ "../../common/dory/src/DoryJr.ts":
/*!***************************************!*\
  !*** ../../common/dory/src/DoryJr.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoryJr": () => (/* binding */ DoryJr)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shrimp/helpers/hook */ "../../common/shrimp/helpers/hook.ts");
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shrimp/interfaces/quick/INavigationDemand */ "../../common/shrimp/interfaces/quick/INavigationDemand.ts");
/* harmony import */ var _Context_ScopeContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Context/ScopeContext */ "../../common/dory/src/Context/ScopeContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Managers/HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
/* harmony import */ var _Managers_MessagingManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Managers/MessagingManager */ "../../common/dory/src/Managers/MessagingManager.ts");
/* harmony import */ var _Model_History_DoryLikeHelper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Model/History/DoryLikeHelper */ "../../common/dory/src/Model/History/DoryLikeHelper.ts");
/* harmony import */ var _Model_History_HistoryItem__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Model/History/HistoryItem */ "../../common/dory/src/Model/History/HistoryItem.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};









var DoryJr = /** @class */ (function () {
    function DoryJr(contextJr) {
        this.contextName = DoryJr.ContextName;
        this.subMessaging = null;
        this.PageJrCompletedHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_0__.Hook("PageJrCompletedHook", { manageState: true });
        this.contextJr = contextJr;
        this.displayHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_0__.Hook("DoryJrDisplayHook");
    }
    DoryJr.prototype.delayTillPostDisplay = function (cb) {
        this.displayHook.postSubscribe(cb);
    };
    DoryJr.prototype.setCallbackDisplay = function (callBackFunc) {
        this.displayHook.forceClearAllSubscibers();
        this.displayHook.subscribe(callBackFunc);
    };
    DoryJr.prototype.Render = function (_a) {
        var qjson = _a.qjson, props = _a.props, events = _a.events, compParentInst = _a.compParentInst, storeItems = _a.storeItems, pageId = _a.pageId, pageName = _a.pageName, noHistory = _a.noHistory, children = _a.children;
        return __awaiter(this, void 0, void 0, function () {
            var historyItem, domEls, mm, hm;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.PageJrCompletedHook.ResetAndStartState();
                        this.displayHook.clearPostSubscribers(true);
                        this.contextJr.RegisterItem(new _Context_ScopeContext__WEBPACK_IMPORTED_MODULE_3__.ScopeContext({ events: events, props: props, children: children }));
                        historyItem = new _Model_History_HistoryItem__WEBPACK_IMPORTED_MODULE_8__.HistoryItem({ qjson: qjson, context: this.contextJr, storeItems: storeItems, pageId: pageId, pageName: pageName });
                        return [4 /*yield*/, historyItem.Render({ compParentInst: compParentInst, noHistory: noHistory })];
                    case 1:
                        _b.sent();
                        domEls = historyItem.controlList.map(function (item) { return item.domElement; });
                        mm = new _Managers_MessagingManager__WEBPACK_IMPORTED_MODULE_6__.MessagingManager(this.contextJr);
                        hm = this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName);
                        this.subMessaging = mm.GetMessagingComponentByLevelIndex(hm.CurrentLevelIndex);
                        this.CallRender(historyItem);
                        this.PageCompleted();
                        return [2 /*return*/];
                }
            });
        });
    };
    DoryJr.prototype.CallRender = function (historyItem, navigationDirection) {
        var additionals = this.GetAdditionals({ targetHistoryItem: "last" });
        this.displayHook.triggerer(historyItem.controlList.map(function (item) { return item.domElement; }), historyItem.pageId, historyItem.pageName, navigationDirection, undefined, undefined, additionals);
    };
    DoryJr.prototype.PageCompleted = function () {
        var _this = this;
        var lastHistory = this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName).currentLevel().last();
        var doryJrs = lastHistory.GetDoryJrs();
        if (!doryJrs) {
            _Model_History_DoryLikeHelper__WEBPACK_IMPORTED_MODULE_7__.DoryLikeHelper.TriggerPageCompleteJr(this, lastHistory.pageId);
            return;
        }
        var counter = 0;
        doryJrs === null || doryJrs === void 0 ? void 0 : doryJrs.forEach(function (doryJr) {
            doryJr.PageJrCompletedHook.subscribe(function () {
                if (++counter == doryJrs.length) {
                    _Model_History_DoryLikeHelper__WEBPACK_IMPORTED_MODULE_7__.DoryLikeHelper.TriggerPageCompleteJr(_this, lastHistory.pageId);
                }
            });
            doryJr.PageJrCompletedHook.listenHookState(function () {
                counter--;
            });
        });
    };
    DoryJr.prototype.getComponentCollectionByDom = function (_a) {
        var element = _a.element, _b = _a.deep, deep = _b === void 0 ? false : _b;
        var lastHistory = this.GetLastHistory();
        return lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.getComponentCollectionByDom({ element: element, deep: deep });
    };
    DoryJr.prototype.getComponentCollectionByIdProperty = function (_a) {
        var id = _a.id, deep = _a.deep;
        var lastHistory = this.GetLastHistory();
        return lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.getComponentCollectionByIdProperty({ id: id, deep: deep });
    };
    DoryJr.prototype.Destroy = function () {
        var _a;
        (_a = this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.ClearHistory();
    };
    DoryJr.prototype.Update = function () {
        var lastHist = this.GetLastHistory();
        if (lastHist) {
            lastHist.update();
        }
    };
    /**
     * Get custom events from sub component's on Messaging
     */
    DoryJr.prototype.GetMethods = function () {
        var _a, _b, _c, _d;
        if (!this.subMessaging) {
            var dory = this.contextJr.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_4__.Dory.ContextName);
            var engineYamlLogType = (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "Couldn' t find any Messaging Component", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
            return undefined;
        }
        return (_d = (_c = this.subMessaging.events).GetExternalEventBoundFunctions) === null || _d === void 0 ? void 0 : _d.call(_c);
    };
    /**
     * Get custom created props from sub component's on Messaging
     */
    DoryJr.prototype.GetProps = function () {
        var _a, _b;
        if (!this.subMessaging) {
            var dory = this.contextJr.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_4__.Dory.ContextName);
            var engineYamlLogType = (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "Couldn' t find any Messaging Component", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
            return undefined;
        }
        return this.subMessaging.component.props["externalProps"];
    };
    DoryJr.prototype.GetEvents = function () {
        var _a, _b;
        if (!this.subMessaging) {
            var dory = this.contextJr.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_4__.Dory.ContextName);
            var engineYamlLogType = (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "Couldn' t find any Messaging Component", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
            return undefined;
        }
        return this.subMessaging.component.props["externalEvents"];
    };
    DoryJr.prototype.hasHistory = function (pageId, checkExternalRouter) {
        var _a;
        var historyManager = this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName);
        var navigationDemand = historyManager.hasHistory(pageId);
        if (checkExternalRouter && ((_a = historyManager === null || historyManager === void 0 ? void 0 : historyManager.currentLevel().last()) === null || _a === void 0 ? void 0 : _a.pageId) != (checkExternalRouter === null || checkExternalRouter === void 0 ? void 0 : checkExternalRouter.currPageId)) {
            navigationDemand.externalHistoryRouter = true;
        }
        return navigationDemand;
    };
    DoryJr.prototype.searchTargetHistoryManager = function (_a) {
        var pageId = _a.pageId;
        var historyManager = this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName);
        return historyManager.searchTargetHistoryManager({ pageId: pageId });
    };
    DoryJr.prototype.checkIfHistoryExist = function (navigationDemand) {
        var historyManager = this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName);
        return historyManager.checkIfHistoryExist(navigationDemand);
    };
    DoryJr.prototype.goHistory = function (options) {
        if (options.navigationDemand) {
            options.navigationDemand.navigationDemandType == _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_2__.INavigationDemandType.back ?
                this.goHistoryBack(options.navigationDemand) :
                this.goHistoryForward(options.navigationDemand);
        }
    };
    DoryJr.prototype.goHistoryBack = function (navigationDemand) {
        var _a;
        (_a = this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.Back(navigationDemand);
    };
    DoryJr.prototype.goHistoryForward = function (navigationDemand) {
        var _a;
        (_a = this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.Forward(navigationDemand);
    };
    Object.defineProperty(DoryJr.prototype, "ContextJr", {
        get: function () {
            return this.contextJr;
        },
        enumerable: false,
        configurable: true
    });
    DoryJr.prototype.GetLastHistory = function () {
        return this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName).currentLevel().last() || undefined;
    };
    DoryJr.prototype.GetComponentList = function () {
        var _a;
        return (_a = this.GetLastHistory()) === null || _a === void 0 ? void 0 : _a.GetComponentList();
    };
    DoryJr.prototype.GetComponentCollection = function () {
        var lastHistory = this.GetLastHistory();
        return (lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.GetComponentCollection()) || undefined;
    };
    DoryJr.prototype.GetPreviousHistory = function () {
        return this.contextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_5__.HistoryManager.ContextName).currentLevel().previous() || undefined;
    };
    DoryJr.prototype.GetAdditionals = function (_a) {
        var _b = _a.targetHistoryItem, targetHistoryItem = _b === void 0 ? "last" : _b;
        var targetHI = targetHistoryItem == "last" ? this.GetLastHistory() : this.GetPreviousHistory();
        return targetHI === null || targetHI === void 0 ? void 0 : targetHI.additionals;
    };
    DoryJr.prototype.SetAdditionals = function (_a) {
        var additionals = _a.additionals, _b = _a.targetHistoryItem, targetHistoryItem = _b === void 0 ? "last" : _b;
        var targetHI = targetHistoryItem == "last" ? this.GetLastHistory() : this.GetPreviousHistory();
        targetHI && (targetHI.additionals = additionals);
    };
    DoryJr.ContextName = "DoryJr";
    return DoryJr;
}());



/***/ }),

/***/ "../../common/dory/src/Helpers/ComponentCommunicator.ts":
/*!**************************************************************!*\
  !*** ../../common/dory/src/Helpers/ComponentCommunicator.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentCommunicator": () => (/* binding */ ComponentCommunicator)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/compDiffHelper */ "../../common/shrimp/helpers/compDiffHelper.ts");
/* harmony import */ var _shrimp_helpers_customCompHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shrimp/helpers/customCompHelper */ "../../common/shrimp/helpers/customCompHelper.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shrimp/interfaces/ComponentInterfaces/ICompJson */ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_IPropExtension__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shrimp/interfaces/ComponentInterfaces/IPropExtension */ "../../common/shrimp/interfaces/ComponentInterfaces/IPropExtension.ts");
/* harmony import */ var _shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shrimp/interfaces/quick/IWebSDK */ "../../common/shrimp/interfaces/quick/IWebSDK.ts");
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Dory */ "../../common/dory/src/Dory.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};







var _components = null;
function loadComponents() {
    if (!_components) {
        _components = __webpack_require__(/*! ../Components/index */ "../../common/dory/src/Components/index.ts");
    }
    return _components;
}
var ComponentCommunicator = /** @class */ (function () {
    function ComponentCommunicator() {
    }
    ComponentCommunicator.prototype.CreateComponent = function (_a) {
        var componentName = _a.componentName, props = _a.props, events = _a.events, context = _a.context, asChildType = _a.asChildType, asChildName = _a.asChildName, children = _a.children, parentInst = _a.parentInst, childrenCreators = _a.childrenCreators, compCollection = _a.compCollection, compClass = _a.compClass, text = _a.text, attrs = _a.attrs, compareCompValue = _a.compareCompValue, directives = _a.directives;
        var dory = context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_6__.Dory.ContextName);
        var outBoundEvents = events.GetEventBoundFunctions();
        var rc = context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_5__.RenderingContext.ContextName);
        rc.ComponentInCreation = compCollection;
        this.setDoryProps(props, dory.isDark);
        props = __assign(__assign({}, props), outBoundEvents.propertyEventFunctions);
        props._renderingProps = {
            shellAutoLridActivated: dory.shellConfigs.compPropsAutoLrid,
            contextLridHelper: dory.shellConfigs.lridHelper,
            isEditMode: dory.isEditorInEditState,
            context: function () { return context; },
            events: function () { return outBoundEvents.eventFunctions; },
            props: function () { return props; },
            compCollCb: function () { return compCollection; },
            getEditor: dory.GetEditor()
        };
        var arrangedChildren = this.arrangeChildren(children, props, childrenCreators);
        props = arrangedChildren.props || props;
        if (dory.siteSettings && !arrangedChildren.props.DiscardSettings) {
            var compArrangedSettings = this.arrangeSiteSettingsProps({ componentName: componentName, props: arrangedChildren.props || props, siteSettings: dory.siteSettings, compClass: compClass, attrs: attrs });
            (props = compArrangedSettings.props, compClass = compArrangedSettings.compClass, attrs = compArrangedSettings.attrs);
        }
        var customCompName = new _shrimp_helpers_customCompHelper__WEBPACK_IMPORTED_MODULE_1__.customCompHelper().customCompList.find(function (name) { return componentName == name; });
        if (customCompName) {
            componentName = "CustomComponent";
        }
        var targetLocalComponent = this.findLocalComponent({ compName: componentName, dory: dory });
        var createdComponent = null;
        if (targetLocalComponent) {
            createdComponent = this.createLocalComponent(targetLocalComponent, componentName, props, outBoundEvents.eventFunctions, context, dory, asChildType, asChildName, compCollection, arrangedChildren.scopedSlots, arrangedChildren.slots, parentInst, compClass, text);
        }
        else {
            createdComponent = rc.HistoryBasedConf.createComponent({ componentName: componentName, props: props, events: outBoundEvents.eventFunctions, asChildType: asChildType, asChildName: asChildName, scopedSlots: arrangedChildren.scopedSlots, slots: arrangedChildren.slots, compClass: compClass, text: text, attrs: attrs, componentCollection: compCollection, directives: directives });
        }
        if (compareCompValue) {
            this.calcComponentDiff({ createdComponent: createdComponent, compCollection: compCollection, props: props });
        }
        ComponentCommunicator.compCreatePostActions({ compCollection: compCollection, createdComponent: createdComponent, context: context, asChildType: asChildType, asChildName: asChildName, attrs: attrs, props: props });
        return createdComponent;
    };
    ComponentCommunicator.prototype.setDoryProps = function (props, isDark) {
        if (isDark) {
            props.dark = isDark;
        }
        if (props["qValue"] !== undefined) {
            props["value"] = props["qValue"];
            delete props.qValue;
        }
    };
    ComponentCommunicator.compCreatePostActions = function (_a) {
        var _this = this;
        var _b;
        var compCollection = _a.compCollection, createdComponent = _a.createdComponent, context = _a.context, asChildType = _a.asChildType, asChildName = _a.asChildName, attrs = _a.attrs, props = _a.props;
        var dory = context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_6__.Dory.ContextName);
        var rc = context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_5__.RenderingContext.ContextName);
        if (props) {
            compCollection.SetInitialProps(props);
        }
        compCollection.WatchCreatedFields(function (created) { return _this.injectFields(created, compCollection, context); });
        compCollection.SetComponentCreatedFields({ createdComponent: createdComponent, keepAnEyeOnCreatedCompInst: true });
        (_b = dory.shellConfigs.componentInstanceTracker) === null || _b === void 0 ? void 0 : _b.TrackCompInstance({
            asChildType: asChildType,
            asChildName: asChildName,
            component: createdComponent,
            compCollection: compCollection,
            attrs: attrs,
            postRenderExecutor: function (cb) {
                rc.executeOrDelayEvent({ cb: cb, immediateEvent: false, triggerOrder: 0 });
            }, isEditMode: dory.isEditorInEditState
        });
    };
    ComponentCommunicator.injectFields = function (created, compColl, context) {
        var _a, _b;
        if (!created.instance) {
            return;
        }
        if (!Object.getOwnPropertyDescriptor(compColl.component, "visible")) {
            Object.defineProperty(compColl.component, "visible", { get: function () { return compColl.componentVisibility; }, set: function (value) { return compColl.componentVisibility = value; } });
        }
        var dory = context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_6__.Dory.ContextName);
        var compOperator = (_a = dory.OperatorCollection) === null || _a === void 0 ? void 0 : _a.componentOperator;
        if (!Object.getOwnPropertyDescriptor(compColl.component, "class")) {
            Object.defineProperty(compColl.component, "class", { get: function () { return compOperator === null || compOperator === void 0 ? void 0 : compOperator.getClassString(compColl); }, set: function (value) { return compOperator === null || compOperator === void 0 ? void 0 : compOperator.setClassString(compColl, value); } });
        }
        if (!Object.getOwnPropertyDescriptor(compColl.component, "text") && ((_b = compOperator === null || compOperator === void 0 ? void 0 : compOperator.compListOfText) === null || _b === void 0 ? void 0 : _b.includes(compColl.compType))) {
            Object.defineProperty(compColl.component, "text", { get: function () { var _a; return (_a = compOperator === null || compOperator === void 0 ? void 0 : compOperator.getTextString) === null || _a === void 0 ? void 0 : _a.call(compOperator, compColl); }, set: function (value) { var _a; return (_a = compOperator === null || compOperator === void 0 ? void 0 : compOperator.setTextAndMount) === null || _a === void 0 ? void 0 : _a.call(compOperator, compColl, value); } });
        }
    };
    /**
     * Define component properties of the component dictionary from the quick-shrimp.
     * Listen those defined props to calculate its border and tooltip.
     * Also listen component instance whenever a change has been made on it.
     * @param createdComponent Created component instance
     * @param compCollection Created component collection(can't use only this collection to get comp instance bc the instance is not on it yet)
     */
    ComponentCommunicator.prototype.calcComponentDiff = function (_a) {
        var createdComponent = _a.createdComponent, compCollection = _a.compCollection, props = _a.props;
        compCollection.compareComponent = true;
        if (createdComponent && _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.componentValueList[compCollection.compType]) {
            // Prop value listener has watcher on the component collection 
            _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.propValueListener({
                compCollection: compCollection,
                propKey: _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.componentValueList[compCollection.compType].valueField,
                props: props
            });
            _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.propValueListener({
                compCollection: compCollection,
                propKey: _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ComparisonEnum.compareValueField,
                props: props
            });
        }
    };
    ComponentCommunicator.prototype.ComponentHasProp = function (componentName, options, propName, context) {
        if (options.dynProps) {
            return true;
        }
        var rc = context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_5__.RenderingContext.ContextName);
        var dory = context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_6__.Dory.ContextName);
        var targetLocalComponent = this.findLocalComponent({ compName: componentName, dory: dory });
        if (targetLocalComponent) {
            return true;
        }
        return rc.HistoryBasedConf.componentHasProp({ componentName: componentName, propName: propName });
    };
    ComponentCommunicator.prototype.arrangeChildren = function (children, props, childrenCreators) {
        var retVal = { scopedSlots: childrenCreators, props: props };
        for (var childKey in children) {
            children[childKey].forEach(function (child) {
                switch (child.asChildType) {
                    case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_2__.CType.slot:
                        retVal.slots = retVal.slots || {};
                        retVal.slots[childKey] = retVal.slots[childKey] || [];
                        retVal.slots[childKey].push(child.vDomElement);
                        break;
                    case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_2__.CType.child:
                        retVal.props.__domElements = retVal.props.__domElements || {};
                        retVal.props.__domElements[childKey] = retVal.props.__domElements[childKey] || [];
                        retVal.props.__domElements[childKey].push(child.domElement);
                        break;
                }
            });
        }
        return retVal;
    };
    ComponentCommunicator.prototype.arrangeSiteSettingsProps = function (_a) {
        var _b;
        var componentName = _a.componentName, siteSettings = _a.siteSettings, props = _a.props, compClass = _a.compClass, attrs = _a.attrs;
        var compArrangedSettings = { props: props, compClass: compClass, attrs: attrs };
        if (siteSettings && (siteSettings === null || siteSettings === void 0 ? void 0 : siteSettings.compSettings) && (siteSettings === null || siteSettings === void 0 ? void 0 : siteSettings.compSettings[componentName])) {
            var componentProps = siteSettings.compSettings[componentName];
            for (var propName in componentProps) {
                if (componentProps[propName].runTimeDefaultValue !== undefined || componentProps[propName].runTimeOverrideValue !== undefined) {
                    var uxProp = componentProps[propName];
                    if (uxProp.propType == _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_2__.PType.prop || uxProp.propType === undefined) {
                        if (propName == 'class') {
                            if (typeof uxProp.runTimeOverrideValue == "object") {
                                switch (uxProp.runTimeOverrideValue.type) {
                                    case _shrimp_interfaces_ComponentInterfaces_IPropExtension__WEBPACK_IMPORTED_MODULE_3__.IPropOverrideType.Append:
                                        compArrangedSettings.compClass += " " + uxProp.runTimeOverrideValue.value;
                                        break;
                                    case _shrimp_interfaces_ComponentInterfaces_IPropExtension__WEBPACK_IMPORTED_MODULE_3__.IPropOverrideType.Override:
                                        compArrangedSettings.compClass = uxProp.runTimeOverrideValue.value.toString();
                                        break;
                                    default:
                                        break;
                                }
                            }
                            else {
                                compArrangedSettings.compClass = (_b = (uxProp.runTimeOverrideValue || uxProp.runTimeDefaultValue)) === null || _b === void 0 ? void 0 : _b.toString();
                            }
                        }
                        compArrangedSettings.props[propName] = uxProp.runTimeOverrideValue || compArrangedSettings.props[propName] || uxProp.runTimeDefaultValue;
                    }
                    else if (uxProp.propType == _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_2__.PType.attr) {
                        compArrangedSettings.attrs = compArrangedSettings.attrs || {};
                        compArrangedSettings.attrs[propName] = uxProp.runTimeOverrideValue || compArrangedSettings.attrs[propName] || uxProp.runTimeDefaultValue;
                    }
                }
            }
        }
        return compArrangedSettings;
    };
    ComponentCommunicator.prototype.findLocalComponent = function (_a) {
        var compName = _a.compName, dory = _a.dory;
        var Components = loadComponents();
        var targetLocalComponent = Components[compName];
        if (targetLocalComponent) {
            if (dory.shellConfigs.coreComponentOverrider) {
                return dory.shellConfigs.coreComponentOverrider(compName) != null ? false : targetLocalComponent;
            }
        }
        return targetLocalComponent;
    };
    ComponentCommunicator.prototype.createLocalComponent = function (targetLocalComponent, componentName, props, outBoundEvents, context, dory, asChildType, asChildName, componentCollection, scopedSlots, slots, parentInst, compClass, text) {
        var _a, _b;
        var scopedFuncs;
        if (scopedSlots) {
            Object.keys(scopedSlots).forEach(function (key) {
                scopedFuncs = scopedFuncs || {};
                scopedFuncs[key] = function (scopeObject) { return scopedSlots[key]({ compCollection: componentCollection, scopeObject: scopeObject }).map(function (compColl) { return compColl.vDomElement; }); };
            });
        }
        var compCreator = new targetLocalComponent({
            props: props,
            events: outBoundEvents,
            parent: parentInst,
            context: context
        });
        if (outBoundEvents["onPageClose"] && componentName == "Messaging") {
            (_b = (_a = dory.shellConfigs).setPageClose) === null || _b === void 0 ? void 0 : _b.call(_a);
        }
        var retVal = {};
        switch (asChildType) {
            case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_2__.CType.scopedSlot:
            case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_2__.CType.slot:
                props._renderingProps.targetLocalComponent = function () { return compCreator; };
                var localComponentWrapperName = "TSComponentWrapper";
                var rc = context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_5__.RenderingContext.ContextName);
                retVal = rc.HistoryBasedConf.createComponent({ componentName: localComponentWrapperName, props: props, events: outBoundEvents, scopedSlots: scopedSlots, componentCollection: componentCollection, asChildType: asChildType, asChildName: asChildName });
                retVal.compGroupType = _shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_4__.CompGroupType.Local;
                break;
            case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_2__.CType.child:
            default:
                // let createdComp = compCreator({ context, parent: parentInst, events: outBoundEvents, props });
                retVal.instance = compCreator;
                retVal.el = compCreator.Render();
                retVal.compGroupType = _shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_4__.CompGroupType.Local;
                break;
        }
        return retVal;
    };
    return ComponentCommunicator;
}());



/***/ }),

/***/ "../../common/dory/src/Helpers/Formatter.ts":
/*!**************************************************!*\
  !*** ../../common/dory/src/Helpers/Formatter.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Formatter": () => (/* binding */ Formatter)
/* harmony export */ });
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! date-fns */ "../../node_modules/date-fns/index.js");
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(date_fns__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ "../../node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);


//import numeral from "numeral";
var Formatter = /** @class */ (function () {
    function Formatter() {
    }
    //date-fns lib
    Formatter.prototype.formatDate = function (selfDate, formatType) {
        return (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(selfDate, formatType);
    };
    Formatter.prototype.getDate = function (selfDate) {
        return (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.getDate)(selfDate);
    };
    Formatter.prototype.addDays = function (selfDate, value) {
        return (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.addDays)(selfDate, value);
    };
    Formatter.prototype.addMonths = function (selfDate, value) {
        return (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.addMonths)(selfDate, value);
    };
    Formatter.prototype.addYears = function (selfDate, value) {
        return (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.addYears)(selfDate, value);
    };
    //moment lib
    Formatter.prototype.toDate = function (dateString, formatString) {
        return moment__WEBPACK_IMPORTED_MODULE_1___default()(dateString, formatString).toDate();
    };
    Formatter.prototype.dateToFormattedString = function (selfDate, formatString) {
        return moment__WEBPACK_IMPORTED_MODULE_1___default()(selfDate).format(formatString);
    };
    Formatter.prototype.formatNumber = function (selfNumber, formatType, opt) {
        //Geçici currency formatlamaTüm number formatlamalarının yapılabilmesi için Numeral kütüphanesi entegre edilecek. - Nilay
        return selfNumber.toLocaleString(formatType, opt);
    };
    Formatter.prototype.formatBigNumber = function (number, formatType) {
        var digits = 3;
        var separator = "";
        var radixPoint = "";
        if (formatType == 'tr-TR') {
            separator = ".";
            radixPoint = ",";
        }
        else {
            separator = ",";
            radixPoint = ".";
        }
        number = number.replace(separator, radixPoint);
        var len = number.indexOf(radixPoint);
        len = len > 0 ? len : number.length;
        var temp = "";
        for (var i = len; i > 0;) {
            if (i < digits) {
                digits = i;
                i = 0;
            }
            else
                i -= digits;
            temp =
                number.substring(i, i + digits) +
                    (i < len - digits && i >= 0 ? separator : "") +
                    temp;
        }
        return "" + temp + number.substring(len);
    };
    return Formatter;
}());



/***/ }),

/***/ "../../common/dory/src/Helpers/StringHelper.ts":
/*!*****************************************************!*\
  !*** ../../common/dory/src/Helpers/StringHelper.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StringHelper": () => (/* binding */ StringHelper)
/* harmony export */ });
var StringHelper = /** @class */ (function () {
    function StringHelper() {
    }
    StringHelper.prototype.formatString = function (selfString) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return this.formatStringArray(selfString, args);
    };
    StringHelper.prototype.formatStringArray = function (selfString, args) {
        return selfString.replace(/{(\d+)}/g, function (match, number) {
            return typeof args[number] != 'undefined' ? args[number] : match;
        });
    };
    return StringHelper;
}());



/***/ }),

/***/ "../../common/dory/src/Helpers/flowRuntimeHelper.ts":
/*!**********************************************************!*\
  !*** ../../common/dory/src/Helpers/flowRuntimeHelper.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "triggerFlow": () => (/* binding */ triggerFlow)
/* harmony export */ });
/* harmony import */ var _stechquick_flow_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stechquick/flow-runtime */ "../../node_modules/@stechquick/flow-runtime/dist/flowRuntime/src/flow.js");
/* harmony import */ var _stechquick_flow_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_stechquick_flow_runtime__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Managers/HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




var stepPath = function (stepName) { return "flow-components/dist/" + stepName + "/" + stepName + ".js"; }; // TODO: will not work for runtime (mobile & web). Just editor.
var cached = function (cb) { var cache; return function () { return cache ? cache : cache = cb(); }; };
function requestAsync(client, dory, context, method, url, headers, queryString, body) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var resp, err_1;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _b.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, client.requestAsync(dory, context, {
                            http: method,
                            url: url,
                            headers: headers,
                            data: body,
                            blockRender: true, onFail: null, onSuccess: null, responseField: "response",
                            withCredentials: true, showErrorMessage: false
                        })];
                case 1:
                    resp = _b.sent();
                    return [3 /*break*/, 3];
                case 2:
                    err_1 = _b.sent();
                    if (!((_a = err_1.response) === null || _a === void 0 ? void 0 : _a.status)) {
                        throw err_1;
                    }
                    resp = err_1.response;
                    return [3 /*break*/, 3];
                case 3:
                    if (!resp) {
                        throw new Error("Editor is in Edit State");
                    }
                    return [2 /*return*/, { statusCode: resp.status, body: resp.data, headers: resp.headers }];
            }
        });
    });
}
var categoryMap = { error: "Error", info: "Info", success: "Success", warning: "Warning" };
var categoryMapper = function (flowCategory) { return flowCategory ? categoryMap[flowCategory] : undefined; };
function triggerFlow(context, script, dataSource, client) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var dory, renderingContext, historyManager, retValProm;
        var _this = this;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    dory = cached(function () { return context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_2__.Dory.ContextName); });
                    renderingContext = cached(function () { return context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_1__.RenderingContext.ContextName); });
                    historyManager = cached(function () { return context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_3__.HistoryManager.ContextName); });
                    return [4 /*yield*/, (0,_stechquick_flow_runtime__WEBPACK_IMPORTED_MODULE_0__.executeFlow)(script, {
                            environment: {
                                client: {
                                    getFormData: function () { return client.getFormData(dory()); },
                                    request: function (request) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                                        switch (_a.label) {
                                            case 0: return [4 /*yield*/, requestAsync(client, dory(), context, request.method, request.url, request.headers, request.queryString, request.body)];
                                            case 1: return [2 /*return*/, _a.sent()];
                                        }
                                    }); }); },
                                    go: function (qjsonPath) { return client.go(context, dory(), qjsonPath); },
                                    alert: function (options) { return client.alert(dory().shellConfigs.shellGlobalMethods, renderingContext().ownerComponent, historyManager(), { category: categoryMapper(options.category), title: options.title, text: options.text }); },
                                },
                            },
                            stepRetriever: function (stepName, version) { return __awaiter(_this, void 0, void 0, function () {
                                var stepResp, moduleObject;
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0: return [4 /*yield*/, dory().network.get({ url: stepPath(stepName) })];
                                        case 1:
                                            stepResp = _a.sent();
                                            if (stepResp.status != 200) {
                                                throw new Error("step " + stepName + "@" + version + " could not be retrieved");
                                            }
                                            ;
                                            moduleObject = {};
                                            new Function("module", "exports", stepResp.data)(moduleObject, {});
                                            return [2 /*return*/, moduleObject.exports.default];
                                    }
                                });
                            }); }
                        })];
                case 1:
                    retValProm = _b.sent();
                    (_a = renderingContext().ownerEvent) === null || _a === void 0 ? void 0 : _a.AttachCompletionPromise(retValProm);
                    return [2 /*return*/];
            }
        });
    });
}


/***/ }),

/***/ "../../common/dory/src/Managers/CachedEvalHelper.ts":
/*!**********************************************************!*\
  !*** ../../common/dory/src/Managers/CachedEvalHelper.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CachedEvalHelper": () => (/* binding */ CachedEvalHelper)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_objectStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/objectStore */ "../../common/shrimp/helpers/objectStore.ts");

var CachedEvalHelper = /** @class */ (function () {
    function CachedEvalHelper() {
        this.cachedEvals = (0,_shrimp_helpers_objectStore__WEBPACK_IMPORTED_MODULE_0__.GetObjectStore)().retrieveObject("evalGlobals");
        if (!this.cachedEvals) {
            (0,_shrimp_helpers_objectStore__WEBPACK_IMPORTED_MODULE_0__.GetObjectStore)().storeObject("evalGlobals", this);
        }
    }
    /**
     * Merges global variables with "Quick" fields and replaces fields
     * from globals with '_' prefix if * names are matched
     * @param globalVariables Global variables of evaluator
     */
    CachedEvalHelper.prototype.MergeEvalGlobals = function (globalVariables) {
        var QVariables = this.QuickVariables();
        Object.keys(QVariables).map(function (variable) {
            if (globalVariables.hasOwnProperty(variable)) {
                globalVariables["_" + variable] = globalVariables[variable];
                delete globalVariables[variable];
            }
        });
        //globalVariables["Quick"] = QVariables;
    };
    /**
     * Defines Quick variables
     */
    CachedEvalHelper.prototype.QuickVariables = function () {
        // let Quick = {
        //     copy(object: Object) {
        //         let cloneObject = new TypeHelper().cloneObject(object);
        //         return cloneObject;
        //     },
        // }
        // return Quick;
        return {};
    };
    return CachedEvalHelper;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/DoryBasedLRManager.ts":
/*!************************************************************!*\
  !*** ../../common/dory/src/Managers/DoryBasedLRManager.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoryBasedLRManager": () => (/* binding */ DoryBasedLRManager)
/* harmony export */ });
/* harmony import */ var _Evaluator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Evaluator */ "../../common/dory/src/Managers/Evaluator.ts");
/* harmony import */ var _HistoryManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
/* harmony import */ var _shrimp_omniScriptCompiler_Compressor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shrimp/omniScriptCompiler/Compressor */ "../../common/shrimp/omniScriptCompiler/Compressor.js");
/* harmony import */ var _shrimp_omniScriptCompiler_Lexer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shrimp/omniScriptCompiler/Lexer */ "../../common/shrimp/omniScriptCompiler/Lexer.js");
/* harmony import */ var _shrimp_omniScriptCompiler_Parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shrimp/omniScriptCompiler/Parser */ "../../common/shrimp/omniScriptCompiler/Parser.js");





var DoryBasedLRManager = /** @class */ (function () {
    function DoryBasedLRManager(currentContext) {
        this.contextName = DoryBasedLRManager.ContextName;
        this.currentLRTypeRTL = false;
        this.RTL = "_%RTL%_";
        this.currentContext = currentContext;
        this.evaluator = new _Evaluator__WEBPACK_IMPORTED_MODULE_0__.Evaluator();
    }
    Object.defineProperty(DoryBasedLRManager.prototype, "LRType", {
        get: function () {
            return this.currentLRType;
        },
        set: function (lrType) {
            this.currentLRType = lrType;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DoryBasedLRManager.prototype, "LRTypeRTL", {
        get: function () {
            return this.currentLRTypeRTL;
        },
        set: function (rtl) {
            if (rtl) {
                this.currentLRTypeRTL = rtl;
            }
            else {
                this.setCurrentLRTypeRTLByResourceDict();
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DoryBasedLRManager.prototype, "ResourceDict", {
        set: function (CLRs) {
            this.resourceDict = CLRs;
            this.setCurrentLRTypeRTLByResourceDict();
        },
        enumerable: false,
        configurable: true
    });
    DoryBasedLRManager.prototype.setCurrentLRTypeRTLByResourceDict = function () {
        var _a;
        this.currentLRTypeRTL = false;
        if (this.resourceDict && Object.keys(this.resourceDict).length > 0) {
            var globalLR = this.resourceDict[(_a = this.currentLRType) !== null && _a !== void 0 ? _a : "tr-TR"];
            if (globalLR === null || globalLR === void 0 ? void 0 : globalLR[this.RTL]) {
                this.currentLRTypeRTL = true;
            }
            ;
        }
    };
    DoryBasedLRManager.prototype.GetResource = function (_a) {
        var _b;
        var context = _a.context, key = _a.key, dataSource = _a.dataSource;
        var result;
        if (this.resourceDict && Object.keys(this.resourceDict).length > 0) {
            var globalLR = this.resourceDict[(_b = this.currentLRType) !== null && _b !== void 0 ? _b : "tr-TR"];
            result = globalLR[key];
            if (result != null) {
                var historyManager = context.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_1__.HistoryManager.ContextName);
                var historyItem = historyManager === null || historyManager === void 0 ? void 0 : historyManager.currentLevel().last();
                result = this.evaluator.Evaluate({ script: result, dataSource: dataSource, context: context, lang: historyItem === null || historyItem === void 0 ? void 0 : historyItem.getQLang() });
                return result;
            }
        }
    };
    DoryBasedLRManager.prototype.ImportResourceDict = function (langCode, localization, options) {
        var _this = this;
        var _a;
        if (options === void 0) { options = {}; }
        var override = (_a = options === null || options === void 0 ? void 0 : options.overrite) !== null && _a !== void 0 ? _a : false;
        var parse = _shrimp_omniScriptCompiler_Parser__WEBPACK_IMPORTED_MODULE_4__.ParseObj.Parse;
        if (langCode && localization && Object.keys(localization).length > 0) {
            if (this.resourceDict == undefined) {
                this.resourceDict = {};
            }
            if (this.resourceDict[langCode] == undefined) {
                this.resourceDict[langCode] = {};
            }
            Object.keys(localization).forEach(function (item) {
                if (!localization[item] || localization[item].trim().length <= 0) {
                    return;
                }
                try {
                    var script = _this.addQuotesToStr(localization[item]);
                    var compressedItem = (0,_shrimp_omniScriptCompiler_Compressor__WEBPACK_IMPORTED_MODULE_2__.Compress)(parse((0,_shrimp_omniScriptCompiler_Lexer__WEBPACK_IMPORTED_MODULE_3__.Lex)(script)));
                    if (override) {
                        _this.resourceDict[langCode][item] = compressedItem;
                    }
                    else {
                        if (_this.resourceDict[langCode][item]) {
                            return;
                        }
                        _this.resourceDict[langCode][item] = compressedItem;
                    }
                }
                catch (err) {
                }
            });
        }
    };
    DoryBasedLRManager.prototype.addQuotesToStr = function (lRvalue) {
        var lRlength = lRvalue.length;
        if (0 < lRlength && ((lRvalue.charAt(0) !== "'" && lRvalue.charAt(0) !== '"') && (lRvalue.charAt(lRlength - 1) !== "'" && lRvalue.charAt(lRlength - 1) !== '"'))) {
            lRvalue = "'" + lRvalue + "'";
        }
        return lRvalue;
    };
    DoryBasedLRManager.ContextName = "DoryBasedLRManager";
    return DoryBasedLRManager;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/DownloadManager.ts":
/*!*********************************************************!*\
  !*** ../../common/dory/src/Managers/DownloadManager.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DownloadManager": () => (/* binding */ DownloadManager)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_download__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/download */ "../../common/shrimp/helpers/download.ts");

var DownloadManager = /** @class */ (function () {
    function DownloadManager() {
        this.generalDownload = new _shrimp_helpers_download__WEBPACK_IMPORTED_MODULE_0__.Download();
    }
    DownloadManager.prototype.RequestHandler = function (request) {
        var formElement = document.createElement("form");
        formElement.method = request.http;
        formElement.action = request.url;
        formElement.target = "blank";
        document.body.appendChild(formElement);
        if (request.data) {
            Object.keys(request.data).map(function (val) {
                var formInput = document.createElement("input");
                formInput.value = request.data[val];
                formInput.name = val;
                formInput.type = "hidden";
                return formInput;
            }).forEach(function (formInput) { return formElement.appendChild(formInput); });
        }
        formElement.submit();
        document.body.removeChild(formElement);
    };
    return DownloadManager;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/DynamicCompManager.ts":
/*!************************************************************!*\
  !*** ../../common/dory/src/Managers/DynamicCompManager.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DynamicCompManager": () => (/* binding */ DynamicCompManager)
/* harmony export */ });
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_ElementLocation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/interfaces/ComponentInterfaces/ElementLocation */ "../../common/shrimp/interfaces/ComponentInterfaces/ElementLocation.ts");
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shrimp/helpers/QJsonHelper */ "../../common/shrimp/helpers/QJsonHelper.ts");
/* harmony import */ var _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _Evaluator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Evaluator */ "../../common/dory/src/Managers/Evaluator.ts");
/* harmony import */ var _RenderingManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RenderingManager */ "../../common/dory/src/Managers/RenderingManager.ts");







var DynamicCompManager = /** @class */ (function () {
    function DynamicCompManager() {
    }
    Object.defineProperty(DynamicCompManager, "itemCounter", {
        get: function () {
            return this._itemCounter;
        },
        set: function (v) {
            this._itemCounter = v;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Create a new component from given template json
     * @param historyItem Current history item of the rendering
     * @returns Created component collection
     */
    DynamicCompManager.createDynamicComp = function (_a) {
        var _b, _c;
        var templateCompQID = _a.templateCompQID, newCompQID = _a.newCompQID, dataSource = _a.dataSource, context = _a.context, historyItem = _a.historyItem, placeQID = _a.placeQID;
        var compJson = historyItem.getComponentJsonByCompId(templateCompQID);
        if (!compJson) {
            var dory = context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_4__.Dory.ContextName);
            var engineYamlLogType = (_c = dory === null || dory === void 0 ? void 0 : (_b = dory.shellConfigs).getMinEngineLogType) === null || _c === void 0 ? void 0 : _c.call(_b);
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "Component json couldn't be found in qjson", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
            return;
        }
        var parentComp = DynamicCompManager.renderedParentComp(historyItem, context, compJson.path);
        parentComp = placeQID ? historyItem.getCompCollectionById(placeQID) : parentComp;
        var newComponent = DynamicCompManager.createComp(historyItem, compJson.compLoc.compJson, newCompQID, parentComp, context, dataSource);
        var retVal = { newComponent: newComponent, parentComp: parentComp };
        return retVal;
    };
    DynamicCompManager.createDynamicChildren = function (_a) {
        var _this = this;
        var _b, _c;
        var parentCompId = _a.parentCompId, templateChildName = _a.templateChildName, newChildName = _a.newChildName, historyItem = _a.historyItem, context = _a.context;
        var parentCompPJson = (_c = (_b = historyItem.getComponentJsonByCompId(parentCompId)) === null || _b === void 0 ? void 0 : _b.compLoc) === null || _c === void 0 ? void 0 : _c.compJson;
        var childJson = parentCompPJson === null || parentCompPJson === void 0 ? void 0 : parentCompPJson.C[templateChildName];
        if (childJson) {
            return Object.keys(childJson.c).map(function (child) {
                var templateCompQID = childJson.c[child].P.ID.H;
                var createdComp = _this.createDynamicComp({ templateCompQID: templateCompQID, newCompQID: newChildName, context: context, historyItem: historyItem });
                return createdComp;
            }).filter(function (item) { return item != null; });
        }
    };
    DynamicCompManager.appendDynamicCreatedComp = function (_a) {
        var _b, _c;
        var _d;
        var newComponents = _a.newComponents, parentComp = _a.parentComp, context = _a.context, _e = _a.place, place = _e === void 0 ? _shrimp_interfaces_ComponentInterfaces_ElementLocation__WEBPACK_IMPORTED_MODULE_0__.ElementLocation.After : _e, historyItem = _a.historyItem, childName = _a.childName;
        var dory = context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_4__.Dory.ContextName);
        historyItem.ReCalculateCompInstDict();
        var targetList = childName && parentComp ? ((_d = parentComp.children)[childName] || (_d[childName] = [])) : historyItem.controlList;
        newComponents.forEach(function (comp) {
            targetList.push(comp);
        });
        (_c = dory === null || dory === void 0 ? void 0 : (_b = dory.shellConfigs).dynamicCompHandler) === null || _c === void 0 ? void 0 : _c.call(_b, { createdComps: newComponents, compLocater: place, parentCollection: parentComp, childName: childName });
    };
    DynamicCompManager.generateCompID = function (sourceCompID, dynamicCompIdSuffix) {
        dynamicCompIdSuffix = dynamicCompIdSuffix ? dynamicCompIdSuffix : (++this.itemCounter).toString();
        return sourceCompID + "_" + dynamicCompIdSuffix;
    };
    /**
     * Deep copy the templateJson and create a new RenderingManager and render the new component
     * @param historyItem Current history item of the rendering
     * @param templateJson Template json of the new component
     * @param newCompID Creaetd component key id. New id will be: compJson.id + '_' + newCompID
     * @returns New componentcollection by new id
     */
    DynamicCompManager.createComp = function (historyItem, templateJson, newCompID, parentCompCollection, context, dataSource, overrideComp) {
        var _this = this;
        var newCompJson = new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_3__.TypeHelper().cloneObject(templateJson);
        //For each comp delete render prop, so they can be rendered, and calculate their new ID
        _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_2__.QJsonHelper.ForEachComp([newCompJson], function (childCompJson) {
            _this.deletePropRender(childCompJson);
            childCompJson.P.ID.H = childCompJson._Editor.eID = DynamicCompManager.generateCompID(childCompJson.P.ID.H, newCompID);
            return true;
        });
        var rm = new _RenderingManager__WEBPACK_IMPORTED_MODULE_6__.RenderingManager({
            pjson: [newCompJson], context: context, dataItem: { data: dataSource }, asChildType: parentCompCollection === null || parentCompCollection === void 0 ? void 0 : parentCompCollection.childrenType, compareCompValue: historyItem.compareCompValue,
            controlDict: historyItem.controlDict, parentCompCollection: parentCompCollection, dynamicCompIDSuffix: newCompID
        });
        rm.Render(rm.blockInfo.blockJsonIndex);
        var newCompCollection = historyItem.getCompCollectionById(newCompJson.P.ID.H);
        return newCompCollection;
    };
    /**
     * Find the parent component which can be rendered
     * If there is no parent, return undefined
     * @param historyItem Current history item of the rendering
     * @param parentLocation Parent location to find the porent from the json
     * @returns parent component collection or undefined
     */
    DynamicCompManager.renderedParentComp = function (historyItem, context, parentLocation) {
        var _a;
        if (!parentLocation.parent) {
            return;
        }
        var parentRenderVal = new _Evaluator__WEBPACK_IMPORTED_MODULE_5__.Evaluator().Evaluate({ script: (_a = parentLocation.parent.P.Render) === null || _a === void 0 ? void 0 : _a.H, context: context });
        var isParentRenderable = (parentRenderVal === null || parentRenderVal || parentRenderVal == 'true');
        if (!isParentRenderable) {
            return;
        }
        return historyItem.getCompCollectionById(parentLocation.parent.P.ID.H);
    };
    DynamicCompManager.deletePropRender = function (compJson) {
        delete compJson.P.Render;
    };
    DynamicCompManager._itemCounter = 0;
    return DynamicCompManager;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/Evals/QsExtensions.ts":
/*!************************************************************!*\
  !*** ../../common/dory/src/Managers/Evals/QsExtensions.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QsExtensions": () => (/* binding */ QsExtensions)
/* harmony export */ });
/* harmony import */ var _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Helpers/Formatter */ "../../common/dory/src/Helpers/Formatter.ts");
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};

var QsExtensions = /** @class */ (function () {
    function QsExtensions() {
    }
    QsExtensions.prototype.generateExtensions = function (dory) {
        var protoTypes = {
            String: {
                length: function (stringParam) {
                    return stringParam.length;
                },
                toString: function (stringParam) {
                    return stringParam.toString();
                },
                lowerCase: function (stringParam) {
                    return stringParam.toLowerCase();
                }
            },
            Object: {
                toString: function (object) {
                    return JSON.stringify(object, null, 4);
                },
                toJSONString: function (object) {
                    return JSON.stringify(object);
                }
            },
            Array: {
                remove: function (array, index) {
                    array.splice(index, 1);
                },
                filter: function (array, operation) {
                    return array.filter(operation());
                },
                length: function (array) {
                    return array.length;
                },
                toString: function (array) {
                    return array.toString();
                }
            },
            Date: {
                toFormattedString: function (date, formatType) {
                    if (!formatType) {
                        formatType = dory.shellConfigs.formatConfiguration.dateFormat();
                    }
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_0__.Formatter().formatDate(date, formatType);
                },
                getDate: function (date) {
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_0__.Formatter().getDate(date);
                },
                toISOString: function (date) {
                    return date === null || date === void 0 ? void 0 : date.toISOString();
                },
                addDays: function (date, value) {
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_0__.Formatter().addDays(date, value);
                },
                addMonths: function (date, value) {
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_0__.Formatter().addMonths(date, value);
                },
                addYears: function (date, value) {
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_0__.Formatter().addYears(date, value);
                },
                getTime: function (date) {
                    return new Date(date).getTime();
                }
            },
            Number: {
                toString: function (number) {
                    return number.toString();
                },
                toFormattedString: function (number, formatType, opt) {
                    if (!formatType) {
                        formatType = dory.shellConfigs.formatConfiguration.moneyFormat();
                    }
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_0__.Formatter().formatNumber(number, formatType, opt);
                },
                fixed: function (number, digits) {
                    return number.toFixed(digits);
                }
            }
        };
        var stringPrototypeNameArray = Object.getOwnPropertyNames(String.prototype);
        var extensionStringKeys = Object.keys(protoTypes.String);
        var _loop_1 = function (index) {
            var protoTypeName = stringPrototypeNameArray[index];
            if (!extensionStringKeys.includes(protoTypeName)) {
                protoTypes.String[protoTypeName] = function (stringParam) {
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                    return stringParam[protoTypeName].apply(stringParam, __spreadArray([], __read(args), false));
                };
            }
        };
        for (var index = 0; index < stringPrototypeNameArray.length; index++) {
            _loop_1(index);
        }
        var objectPrototypeNameArray = Object.getOwnPropertyNames(Object.prototype);
        var extensionObjectKeys = Object.keys(protoTypes.Object);
        var _loop_2 = function (index) {
            var protoTypeName = objectPrototypeNameArray[index];
            if (!extensionObjectKeys.includes(protoTypeName)) {
                protoTypes.Object[protoTypeName] = function (objectParam) {
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                    return objectParam[protoTypeName].apply(objectParam, __spreadArray([], __read(args), false));
                };
            }
        };
        for (var index = 0; index < objectPrototypeNameArray.length; index++) {
            _loop_2(index);
        }
        var arrayPrototypeNameArray = Object.getOwnPropertyNames(Array.prototype);
        var extensionArrayKeys = Object.keys(protoTypes.Array);
        var _loop_3 = function (index) {
            var protoTypeName = arrayPrototypeNameArray[index];
            if (!extensionArrayKeys.includes(protoTypeName)) {
                protoTypes.Array[protoTypeName] = function (arrayParam) {
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                    return arrayParam[protoTypeName].apply(arrayParam, __spreadArray([], __read(args), false));
                };
            }
        };
        for (var index = 0; index < arrayPrototypeNameArray.length; index++) {
            _loop_3(index);
        }
        var datePrototypeNameArray = Object.getOwnPropertyNames(Date.prototype);
        var _loop_4 = function (index) {
            var protoTypeName = datePrototypeNameArray[index];
            if (!protoTypes.Date[protoTypeName]) {
                protoTypes.Date[protoTypeName] = function (dateParam) {
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                    return dateParam[protoTypeName].apply(dateParam, __spreadArray([], __read(args), false));
                };
            }
        };
        for (var index = 0; index < datePrototypeNameArray.length; index++) {
            _loop_4(index);
        }
        var numberPrototypeNameArray = Object.getOwnPropertyNames(Number.prototype);
        var _loop_5 = function (index) {
            var protoTypeName = numberPrototypeNameArray[index];
            if (!protoTypes.Number[protoTypeName]) {
                protoTypes.Number[protoTypeName] = function (numberParam) {
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                    return numberParam[protoTypeName].apply(numberParam, __spreadArray([], __read(args), false));
                };
            }
        };
        for (var index = 0; index < numberPrototypeNameArray.length; index++) {
            _loop_5(index);
        }
        return protoTypes;
    };
    return QsExtensions;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/Evals/QsProxy.ts":
/*!*******************************************************!*\
  !*** ../../common/dory/src/Managers/Evals/QsProxy.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QSProxy": () => (/* binding */ QSProxy),
/* harmony export */   "QsProxyGenerator": () => (/* binding */ QsProxyGenerator)
/* harmony export */ });
var QSProxy = /** @class */ (function () {
    function QSProxy() {
        this.functionDict = {};
    }
    QSProxy.prototype.CreateMethodProxy = function (func) {
        this.functionDict.MethodProxy = func;
    };
    QSProxy.prototype.CreateAssignProxy = function (func) {
        this.functionDict.AssignProxy = func;
    };
    QSProxy.prototype.CreateGetValueProxy = function (func) {
        this.functionDict.GetValueProxy = func;
    };
    QSProxy.prototype.mountOnObject = function (mountObject) {
        mountObject["QSProxy"] = this.functionDict;
    };
    return QSProxy;
}());

var QsProxyGenerator = /** @class */ (function () {
    function QsProxyGenerator() {
    }
    QsProxyGenerator.prototype.generateProxies = function (globals, messagingManager, dory, ownerComponent) {
        var self = this;
        var storeQSProxy = new QSProxy();
        storeQSProxy.CreateAssignProxy(globals.store.set);
        storeQSProxy.CreateGetValueProxy(globals.store.get);
        storeQSProxy.mountOnObject(globals.store);
        var mmOSProxy = new QSProxy();
        mmOSProxy.CreateMethodProxy(function (eventName, parameters) { return messagingManager.Trigger({ eventName: eventName, parameters: parameters }); });
        mmOSProxy.mountOnObject(globals.MM);
        /**
         * Get current shell objects from current Dory
         * Add them into globals as their name (dory.shellObjects)
         * Call shell custom method
         *
         */
        for (var key in dory.shellConfigs.osGlobalObjects) {
            if (dory.shellConfigs.osGlobalObjects[key]) {
                var keyField = key;
                (function (field) {
                    self.globalProxyGenerator({ proxyObject: globals, objectDict: dory.shellConfigs.osGlobalObjects, fieldKey: field, ownerComp: ownerComponent });
                })(keyField);
            }
        }
    };
    QsProxyGenerator.prototype.globalProxyGenerator = function (_a) {
        var proxyObject = _a.proxyObject, objectDict = _a.objectDict, fieldKey = _a.fieldKey, ownerComp = _a.ownerComp;
        if (proxyObject.hasOwnProperty(fieldKey)) {
            return;
        }
        var shellProxy = new QSProxy();
        proxyObject[fieldKey] = {};
        var proxyFunc = function (eventName) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            if (objectDict[fieldKey][eventName] && objectDict[fieldKey][eventName].get == null) {
                return objectDict[fieldKey][eventName]({ ownerComp: ownerComp, parameters: args });
            }
            return null;
        };
        shellProxy.CreateAssignProxy(function (fieldName, value) {
            var _a;
            var field = objectDict[fieldKey][fieldName];
            (_a = field === null || field === void 0 ? void 0 : field.set) === null || _a === void 0 ? void 0 : _a.call(field, { ownerComp: ownerComp, parameters: value });
        });
        shellProxy.CreateGetValueProxy(function (fieldName) {
            var _a;
            var field = objectDict[fieldKey][fieldName];
            return (_a = field === null || field === void 0 ? void 0 : field.get) === null || _a === void 0 ? void 0 : _a.call(field);
        });
        shellProxy.CreateMethodProxy(proxyFunc);
        shellProxy.mountOnObject(proxyObject[fieldKey]);
    };
    return QsProxyGenerator;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/Evals/TsProxy.ts":
/*!*******************************************************!*\
  !*** ../../common/dory/src/Managers/Evals/TsProxy.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TSProxy": () => (/* binding */ TSProxy)
/* harmony export */ });
var TSProxy = /** @class */ (function () {
    function TSProxy(_a) {
        var dory = _a.dory, globals = _a.globals;
        this.TSProxyMapping = {
            "shell": "containerServices",
        };
        this.dory = dory;
        this.globals = globals;
    }
    TSProxy.prototype.generateTsProxy = function () {
        var _this = this;
        if (this.dory && this.dory.shellConfigs.osGlobalObjects) {
            var globalObjects_1 = this.dory.shellConfigs.osGlobalObjects;
            Object.keys(globalObjects_1).forEach(function (key) {
                var _a;
                var objectName = (_a = (_this.TSProxyMapping[key])) !== null && _a !== void 0 ? _a : key;
                _this.globals[objectName] = globalObjects_1[key];
            });
            return this.globals;
        }
    };
    return TSProxy;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/Evaluator.ts":
/*!***************************************************!*\
  !*** ../../common/dory/src/Managers/Evaluator.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Evaluator": () => (/* binding */ Evaluator)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_ElementLocation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shrimp/interfaces/ComponentInterfaces/ElementLocation */ "../../common/shrimp/interfaces/ComponentInterfaces/ElementLocation.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shrimp/interfaces/ComponentInterfaces/IAlert */ "../../common/shrimp/interfaces/ComponentInterfaces/IAlert.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_IPropSupport__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shrimp/interfaces/ComponentInterfaces/IPropSupport */ "../../common/shrimp/interfaces/ComponentInterfaces/IPropSupport.ts");
/* harmony import */ var _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shrimp/interfaces/quick/INavigationDemand */ "../../common/shrimp/interfaces/quick/INavigationDemand.ts");
/* harmony import */ var _shrimp_interfaces_Scripting_IEvaluator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shrimp/interfaces/Scripting/IEvaluator */ "../../common/shrimp/interfaces/Scripting/IEvaluator.ts");
/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! bignumber.js */ "../../node_modules/bignumber.js/bignumber.mjs");
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
/* harmony import */ var _Context_ResponseContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Context/ResponseContext */ "../../common/dory/src/Context/ResponseContext.ts");
/* harmony import */ var _Context_ScopeContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Context/ScopeContext */ "../../common/dory/src/Context/ScopeContext.ts");
/* harmony import */ var _Context_ValueContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Context/ValueContext */ "../../common/dory/src/Context/ValueContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../Helpers/Formatter */ "../../common/dory/src/Helpers/Formatter.ts");
/* harmony import */ var _Model_Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Model/Component/ComponentCollection */ "../../common/dory/src/Model/Component/ComponentCollection.ts");
/* harmony import */ var _OmniScript_Decompressor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../OmniScript/Decompressor */ "../../common/dory/src/OmniScript/Decompressor.ts");
/* harmony import */ var _OmniScript_Evaluator__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../OmniScript/Evaluator */ "../../common/dory/src/OmniScript/Evaluator.ts");
/* harmony import */ var _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./../Managers/HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
/* harmony import */ var _CachedEvalHelper__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./CachedEvalHelper */ "../../common/dory/src/Managers/CachedEvalHelper.ts");
/* harmony import */ var _DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./DoryBasedLRManager */ "../../common/dory/src/Managers/DoryBasedLRManager.ts");
/* harmony import */ var _DynamicCompManager__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./DynamicCompManager */ "../../common/dory/src/Managers/DynamicCompManager.ts");
/* harmony import */ var _Evals_QsExtensions__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Evals/QsExtensions */ "../../common/dory/src/Managers/Evals/QsExtensions.ts");
/* harmony import */ var _Evals_QsProxy__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./Evals/QsProxy */ "../../common/dory/src/Managers/Evals/QsProxy.ts");
/* harmony import */ var _Evals_TsProxy__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./Evals/TsProxy */ "../../common/dory/src/Managers/Evals/TsProxy.ts");
/* harmony import */ var _HistoryItemBasedLRManager__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./HistoryItemBasedLRManager */ "../../common/dory/src/Managers/HistoryItemBasedLRManager.ts");
/* harmony import */ var _MessagingManager__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./MessagingManager */ "../../common/dory/src/Managers/MessagingManager.ts");
/* harmony import */ var _Network_RequestManager__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./Network/RequestManager */ "../../common/dory/src/Managers/Network/RequestManager.ts");
/* harmony import */ var _PropCalcContext__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./PropCalcContext */ "../../common/dory/src/Managers/PropCalcContext.ts");
/* harmony import */ var _QPromise__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./QPromise */ "../../common/dory/src/Managers/QPromise.ts");
/* harmony import */ var _StoreManager__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./StoreManager */ "../../common/dory/src/Managers/StoreManager.ts");
/* harmony import */ var _ValidationManager__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./ValidationManager */ "../../common/dory/src/Managers/ValidationManager.ts");
/* harmony import */ var _Helpers_flowRuntimeHelper__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../Helpers/flowRuntimeHelper */ "../../common/dory/src/Helpers/flowRuntimeHelper.ts");
/* harmony import */ var _DownloadManager__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./DownloadManager */ "../../common/dory/src/Managers/DownloadManager.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};

































var javascript = { Object: Object, String: String, Math: Math, Date: Date, Number: Number, JSON: JSON };
var cacher = function (cacheFunc) {
    var retVal = {};
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var n = args[0];
        if (n in retVal) {
            return retVal[n];
        }
        else {
            var result = cacheFunc(n);
            retVal[n] = result;
            return result;
        }
    };
};
var memoized = cacher(new _Evals_QsExtensions__WEBPACK_IMPORTED_MODULE_21__.QsExtensions().generateExtensions);
var handleReturn = function (cb) {
    try {
        return cb();
    }
    catch (err) {
        if (err.type != "quickReturnExc") {
            throw err;
        }
        return err.retVal;
    }
};
var globalConstants = {
    ElementLocation: _shrimp_interfaces_ComponentInterfaces_ElementLocation__WEBPACK_IMPORTED_MODULE_2__.ElementLocation,
    LogType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType
};
function concatGlobalConstants(concatItems) {
    Object.keys(globalConstants).forEach(function (key) { return concatItems(globalConstants[key], key); });
}
var Evaluator = /** @class */ (function () {
    function Evaluator() {
    }
    Evaluator.prototype.Evaluate2 = function (options) {
        var page = options.pageScripting.GetPageInstance();
        if (!page) {
            return undefined;
        }
        var func = page[options.scriptName];
        if (!func) {
            return undefined;
        }
        var _a = this.prepareEvaluationItems(options.context), globals = _a.globals, responseContext = _a.responseContext, compInstDict = _a.compInstDict;
        Object.keys(_shrimp_interfaces_Scripting_IEvaluator__WEBPACK_IMPORTED_MODULE_6__.TsFilterKeysGlobals).forEach(function (key) { return delete globals[key]; }); //js :( // including this
        return func(responseContext.response, options.dataSource, globals, compInstDict);
    };
    Evaluator.prototype.Evaluate = function (_a) {
        var script = _a.script, dataSource = _a.dataSource, context = _a.context, lang = _a.lang, sourceMap = _a.sourceMap;
        if (!script) {
            return null;
        }
        if (typeof (script) !== "string") {
            if (lang != "FL") {
                return new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__.TypeHelper().cloneObject(script);
            }
            return (0,_Helpers_flowRuntimeHelper__WEBPACK_IMPORTED_MODULE_31__.triggerFlow)(context, script, dataSource, { getFormData: getFormData, requestAsync: requestAsync, go: go, alert: alert });
        }
        var _b = this.prepareEvaluationItems(context), globals = _b.globals, responseContext = _b.responseContext, compInstDict = _b.compInstDict, messagingManager = _b.messagingManager, dory = _b.dory, lastHistory = _b.lastHistory, ownerComponent = _b.ownerComponent;
        switch (lang) {
            case "JS":
                var thisContext = globals.this; // backup this before deletion
                Object.keys(_shrimp_interfaces_Scripting_IEvaluator__WEBPACK_IMPORTED_MODULE_6__.TsFilterKeysGlobals).forEach(function (key) { return delete globals[key]; }); //js :( // including this
                var keys_1 = ["null", "exports", "Promise", "response"]; // first one is this context in new Function(...) -> new (Function.apply(["null", ...])) -> new Function.prototype.bind.apply(Function, ["null", ...])
                var exports_1 = {};
                var values_1 = [exports_1, _QPromise__WEBPACK_IMPORTED_MODULE_28__.QPromise, responseContext.response];
                var concatItems = function (object, globalKey) {
                    var item = object || {};
                    if (!globalKey) {
                        Object.keys(item).forEach(function (key) { keys_1.push(key); values_1.push(item[key]); });
                    }
                    else {
                        keys_1.push(globalKey);
                        values_1.push(item);
                    }
                };
                concatItems(dataSource);
                concatItems(globals, "quick");
                concatGlobalConstants(concatItems);
                concatItems(compInstDict, "components");
                if (script.indexOf("//# sourceMappingURL=data:application/json;base64") > -1) {
                    keys_1.push("script");
                    values_1.push(script);
                    keys_1.push("return eval(script);");
                }
                else {
                    keys_1.push(script);
                }
                new _Evals_TsProxy__WEBPACK_IMPORTED_MODULE_23__.TSProxy({ dory: dory, globals: globals }).generateTsProxy();
                var func_1 = new (Function.prototype.bind.apply(Function, keys_1));
                return handleReturn(function () { return func_1.apply(Object.create(null), values_1); });
            case "QS":
            default:
                new _Evals_QsProxy__WEBPACK_IMPORTED_MODULE_22__.QsProxyGenerator().generateProxies(globals, messagingManager, dory, ownerComponent);
                var extensions_1 = memoized(dory);
                var forest_1 = new _OmniScript_Decompressor__WEBPACK_IMPORTED_MODULE_15__.Decompressor().Decompress(script);
                return handleReturn(function () { return (0,_OmniScript_Evaluator__WEBPACK_IMPORTED_MODULE_16__.Eval)(forest_1, responseContext.response, dataSource, globals, compInstDict, extensions_1, context); });
        }
    };
    Evaluator.prototype.prepareEvaluationItems = function (context) {
        var messagingManager = new _MessagingManager__WEBPACK_IMPORTED_MODULE_25__.MessagingManager(context);
        var historyManager = context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName);
        var lastHistory = historyManager ? historyManager.currentLevel().last() : null;
        var compInstDict = lastHistory && lastHistory.GetCompInstDict();
        var dory = context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_12__.Dory.ContextName);
        var renderingContext = context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_8__.RenderingContext.ContextName);
        var ownerComponent = renderingContext && renderingContext.ownerComponent;
        var cachedEvalHelper = new _CachedEvalHelper__WEBPACK_IMPORTED_MODULE_18__.CachedEvalHelper();
        var globals = this.createGlobal({ messagingManager: messagingManager, context: context, dory: dory, ownerComponent: ownerComponent, lastHistory: lastHistory, historyManager: historyManager });
        cachedEvalHelper.MergeEvalGlobals(globals);
        var responseContext = context.GetItemSingle(_Context_ResponseContext__WEBPACK_IMPORTED_MODULE_9__.ResponseContext.ContextName);
        return { globals: globals, responseContext: responseContext, compInstDict: compInstDict, messagingManager: messagingManager, dory: dory, lastHistory: lastHistory, ownerComponent: ownerComponent };
    };
    Evaluator.prototype.createGlobal = function (_a) {
        var _b, _c;
        var messagingManager = _a.messagingManager, context = _a.context, dory = _a.dory, ownerComponent = _a.ownerComponent, lastHistory = _a.lastHistory, historyManager = _a.historyManager;
        var self = this;
        var storeManager = new _StoreManager__WEBPACK_IMPORTED_MODULE_29__.StoreManager(context);
        var scopeContext = context.GetItemSingle(_Context_ScopeContext__WEBPACK_IMPORTED_MODULE_10__.ScopeContext.ContextName);
        var valueContext = context.GetItemSingle(_Context_ValueContext__WEBPACK_IMPORTED_MODULE_11__.ValueContext.ContextName);
        var engineYamlLogType = (_c = (_b = dory.shellConfigs).getMinEngineLogType) === null || _c === void 0 ? void 0 : _c.call(_b);
        var globals = {
            Request: {
                async: function (requestObject) { return requestAsync(dory, context, requestObject); },
                download: function (requestObject) {
                    if (!dory.isEditorInEditState) {
                        var reqManager = new _DownloadManager__WEBPACK_IMPORTED_MODULE_32__.DownloadManager();
                        reqManager.RequestHandler(requestObject);
                    }
                }
            },
            MM: {
                get: function (eventName) {
                    return messagingManager === null || messagingManager === void 0 ? void 0 : messagingManager.Get(eventName);
                },
                trigger: function (eventName, parameters) {
                    return messagingManager === null || messagingManager === void 0 ? void 0 : messagingManager.Trigger({ eventName: eventName, parameters: parameters });
                },
                delay: function (eventName, parameters) {
                    var timer = setTimeout(function () { var _a; return messagingManager === null || messagingManager === void 0 ? void 0 : messagingManager.Trigger({ eventName: eventName, parameters: (_a = parameters === null || parameters === void 0 ? void 0 : parameters.options) !== null && _a !== void 0 ? _a : parameters }); }, parameters === null || parameters === void 0 ? void 0 : parameters.delayTime);
                    return timer;
                },
                clearTimeout: function (timer) {
                    clearTimeout(timer);
                }
            },
            Math: {
                floor: Math.floor,
                random: function (min, max) {
                    return min + Math.floor(Math.random() * Math.floor(max - min + 1));
                },
                findIndex: function (array, searchKey, seacrhString) {
                    return array.findIndex(function (i) { return i[searchKey] == seacrhString; });
                },
                round: function (roundNumber, indexToSplit) {
                    var classedNumber = Number(roundNumber);
                    var fixedNumber = classedNumber.toFixed(indexToSplit);
                    return Number(fixedNumber);
                }
            },
            EM: {
                trace: function (traceMessage, options) {
                    var _a, _b;
                    var yamlLogType = (_b = (_a = dory.shellConfigs).getYamlLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
                    _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logType: (options === null || options === void 0 ? void 0 : options.logType) || _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Trace, logMessage: traceMessage, backgroundColor: "green", textColor: "white", source: "model", isClientLog: true, yamlLogType: yamlLogType });
                }
            },
            currentPage: {
                isRenderCompleted: function () {
                    return dory.isRenderCompleted;
                }
            },
            LR: function (key, dataSource) {
                //return dory.shellConfigs.lridHelper ? dory.shellConfigs.lridHelper(label) : null
                var historyItemBasedLRManager = context.GetItemSingle(_HistoryItemBasedLRManager__WEBPACK_IMPORTED_MODULE_24__.HistoryItemBasedLRManager.ContextName);
                return historyItemBasedLRManager === null || historyItemBasedLRManager === void 0 ? void 0 : historyItemBasedLRManager.GetResource({ key: key, dataSource: dataSource });
            },
            importLocalization: function (langCode, localization, options) {
                if (options === void 0) { options = {}; }
                var doryBasedLRManager = context.GetItemSingle(_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_19__.DoryBasedLRManager.ContextName);
                doryBasedLRManager === null || doryBasedLRManager === void 0 ? void 0 : doryBasedLRManager.ImportResourceDict(langCode, localization, options);
            },
            go: function () {
                var _a;
                var _b, _c;
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                if (dory.isEditorInEditState) {
                    _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "editor is not going anywhere in edit state", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Debug });
                    return;
                }
                var createrComp = context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName).getCreaterRenderingComponent();
                if ((createrComp === null || createrComp === void 0 ? void 0 : createrComp.compType) === "RenderingComponent" && ((_b = createrComp === null || createrComp === void 0 ? void 0 : createrComp.component) === null || _b === void 0 ? void 0 : _b.RenderGo)) {
                    return (_c = createrComp === null || createrComp === void 0 ? void 0 : createrComp.component) === null || _c === void 0 ? void 0 : _c.RenderGo.apply(_c, __spreadArray([], __read(args), false));
                }
                return dory.shellConfigs.go ? (_a = dory.shellConfigs).go.apply(_a, __spreadArray([], __read(args), false)) : null;
            },
            regex: function (value) {
                return RegExp(value);
            },
            typeOf: function (value) {
                return typeof value;
            },
            getComponent: function (compID) {
                var _a;
                var compInstance = dory.GetComponentCollectionByID(compID) === undefined ? null : dory.GetComponentCollectionByID(compID).component;
                if (!compInstance) {
                    compInstance = (_a = dory.GetSubComponentCollectionByID(compID)) === null || _a === void 0 ? void 0 : _a.component;
                }
                return compInstance;
            },
            setFormData: function (compCol) {
                var compCollection = dory.GetComponentCollection();
                if (compCollection) {
                    Object.keys(compCol).forEach(function (compName) {
                        if (compCollection && compCollection[compName]) {
                            dory.shellConfigs.setComponentValue(compCollection[compName], compCol[compName]);
                        }
                    });
                }
            },
            getArrangedNestedData: function (obj, pairChar) {
                var baseString = '';
                var mapObj = {};
                var tempObj = {};
                var traverse = function (obj) {
                    Object.keys(obj).forEach(function (key) {
                        if (typeof obj[key] == 'object') {
                            baseString += key + pairChar;
                            for (var val in obj[key]) {
                                if (typeof obj[key][val] != 'object') {
                                    tempObj[baseString + val] = obj[key][val];
                                    mapObj = __assign(__assign({}, mapObj), tempObj);
                                    delete obj[key][val];
                                    tempObj = {};
                                }
                            }
                            traverse(obj[key]);
                        }
                        else {
                            baseString != '' ? tempObj[baseString + key] = obj[key] : tempObj[key] = obj[key];
                            mapObj = __assign(__assign({}, mapObj), tempObj);
                            tempObj = {};
                        }
                    });
                    baseString = '';
                };
                traverse(obj);
                return mapObj;
            },
            getFormData: function (componentQID) { return getFormData(dory, componentQID); },
            getArrangedFormData: function (formData, pairChar) {
                var CompObj = {};
                var TempObj = {};
                var isPlainObject = function (obj) { return !!obj && obj.constructor === {}.constructor; };
                var getNestedObject = function (formData) { return Object.entries(formData).reduce(function (result, _a) {
                    var _b = __read(_a, 2), prop = _b[0], val = _b[1];
                    prop.split(pairChar).reduce(function (nestedResult, prop, propIndex, propArray) {
                        var lastProp = propIndex === propArray.length - 1;
                        if (lastProp) {
                            nestedResult[prop] = isPlainObject(val) ? getNestedObject(val) : val;
                        }
                        else {
                            nestedResult[prop] = nestedResult[prop] || {};
                        }
                        return nestedResult[prop];
                    }, result);
                    return result;
                }, {}); };
                Object.keys(formData).forEach(function (key) {
                    if (key.includes(pairChar)) {
                        TempObj[key] = formData[key];
                        var tempNestedObj = getNestedObject(TempObj);
                        CompObj = self.mergeDeep(CompObj, tempNestedObj);
                        TempObj = {};
                    }
                    else {
                        TempObj[key] = formData[key];
                        CompObj = __assign(__assign({}, CompObj), TempObj);
                        TempObj = {};
                    }
                });
                return CompObj;
            },
            cryptography: {
                generateKeyPair: function () { var _a, _b; return (_b = (_a = dory.shellConfigs) === null || _a === void 0 ? void 0 : _a.cryptoGenerateKeyPair) === null || _b === void 0 ? void 0 : _b.call(_a); },
                store: function (keyPair) { var _a, _b; return (_b = (_a = dory.shellConfigs) === null || _a === void 0 ? void 0 : _a.cryptoStore) === null || _b === void 0 ? void 0 : _b.call(_a, keyPair); },
                hash: {
                    sha512: function (value) { var _a, _b; return (_b = (_a = dory.shellConfigs) === null || _a === void 0 ? void 0 : _a.cryptoSha512) === null || _b === void 0 ? void 0 : _b.call(_a, value); }
                },
                sign: function (value, privateKey, options) { var _a, _b; return (_b = (_a = dory.shellConfigs) === null || _a === void 0 ? void 0 : _a.cryptoSign) === null || _b === void 0 ? void 0 : _b.call(_a, value, privateKey, options); },
            },
            encoding: {
                atob: function (encodedString) {
                    return atob === null || atob === void 0 ? void 0 : atob(encodedString);
                },
                btoa: function (stringToEncode) {
                    return btoa === null || btoa === void 0 ? void 0 : btoa(stringToEncode);
                }
            },
            Quick: {
                // set region yazılacak
                //get tüm region yazılacak
                //get currentregion yazılacak
                host: {
                    trigger: function (functionName, params) {
                        var _a, _b;
                        //trigger( "startMiniApp", {applicainId :"dasd", x:5}); 
                        var pageNameArray = _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.traverseUpwards([], lastHistory);
                        return (_b = (_a = dory.shellConfigs).hostTrigger) === null || _b === void 0 ? void 0 : _b.call(_a, functionName, params, pageNameArray);
                    }
                },
                region: {
                    setRegion: function (regionName) {
                        var _a, _b;
                        (_b = (_a = dory.shellConfigs).setRegion) === null || _b === void 0 ? void 0 : _b.call(_a, regionName);
                        dory.ReRender();
                    },
                    getRegionList: function () {
                        var _a, _b;
                        return (_b = (_a = dory.shellConfigs).getRegionList) === null || _b === void 0 ? void 0 : _b.call(_a);
                    },
                    getCurrentRegion: function () {
                        var _a, _b;
                        return (_b = (_a = dory.shellConfigs).getCurrentRegion) === null || _b === void 0 ? void 0 : _b.call(_a);
                    },
                    getFormattingDefinitionByCurrentRegion: function () {
                        var _a, _b;
                        return (_b = (_a = dory.shellConfigs).getFormattingDefinitionByCurrentRegion) === null || _b === void 0 ? void 0 : _b.call(_a);
                    }
                },
                platform: {
                    isMobile: function () {
                        return dory.platformType == "iOS" || dory.platformType == "Android" ? true : false;
                    },
                    isWeb: function () {
                        return dory.platformType == "Web" ? true : false;
                    },
                    getPlatformType: function () {
                        return dory.platformType;
                    },
                    getDeviceId: function () {
                        var _a, _b;
                        return (_b = (_a = dory.shellConfigs.platform) === null || _a === void 0 ? void 0 : _a.getDeviceId) === null || _b === void 0 ? void 0 : _b.call(_a);
                    }
                },
                theme: {
                    setTheme: function (themeName) {
                        var _a, _b;
                        lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.themeConfiguration(context, themeName);
                        (_b = (_a = dory.shellConfigs).setTheme) === null || _b === void 0 ? void 0 : _b.call(_a, themeName);
                    },
                    getThemeList: function () {
                        var _a, _b;
                        return (_b = (_a = dory.shellConfigs).getThemeList) === null || _b === void 0 ? void 0 : _b.call(_a);
                    },
                    addTheme: function (themeName) {
                        var _a, _b;
                        (_b = (_a = dory.shellConfigs).addTheme) === null || _b === void 0 ? void 0 : _b.call(_a, themeName);
                    },
                    removeTheme: function (themeName) {
                        var _a, _b;
                        (_b = (_a = dory.shellConfigs).removeTheme) === null || _b === void 0 ? void 0 : _b.call(_a, themeName);
                    },
                },
                back: function () {
                    var _a, _b;
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    var argControl = args && args.length >= 1 && Object.keys(args[0]).length >= 1 && args[0].withoutOverride;
                    return argControl ? dory.goHistoryBack({}) : dory.shellConfigs.triggerPreviousPage ?
                        (_b = (_a = dory.shellConfigs).triggerPreviousPage) === null || _b === void 0 ? void 0 : _b.call(_a, args) : dory.goHistoryBack({});
                },
                goHistory: function (step) {
                    var navigationDemandType = _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_5__.INavigationDemandType.back;
                    if (step > 0) {
                        navigationDemandType = _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_5__.INavigationDemandType.forward;
                    }
                    var ownerHistoryManager = lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.getOwnerHistoryManager();
                    if (ownerHistoryManager)
                        navigationDemandType == _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_5__.INavigationDemandType.back ?
                            ownerHistoryManager.Back({ step: step, ownerHistoryManager: ownerHistoryManager }) : ownerHistoryManager.Forward({ step: step, ownerHistoryManager: ownerHistoryManager });
                },
                go: function (qjsonPath, options) { return go(context, dory, qjsonPath, options); },
                goNative: function (_a) {
                    var _b;
                    var code = _a.code, param = _a.param;
                    ((_b = dory.shellConfigs.shellGlobalMethods) === null || _b === void 0 ? void 0 : _b.goNative) && dory.shellConfigs.shellGlobalMethods.goNative({ code: code, param: param });
                },
                redirect: function (url, options) {
                    dory.shellConfigs.redirect && dory.shellConfigs.redirect({ url: url, options: options });
                },
                performance: function () {
                    return dory.shellConfigs.performance && dory.shellConfigs.performance();
                },
                copy: function (object) {
                    var cloneObject = new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__.TypeHelper().cloneObject(object);
                    return cloneObject;
                },
                setComponentsProperty: function (compId, propertyName, propertyValue) {
                    var _a, _b, _c;
                    var compCollection = dory.GetComponentCollectionByID(compId);
                    var compSubCollection;
                    if (!compCollection) {
                        compSubCollection = (_a = dory.GetComponentSubCollection()) === null || _a === void 0 ? void 0 : _a.find(function (collection) { return collection.compId == compId; });
                    }
                    (_c = (_b = dory.shellConfigs).setComponentsProperty) === null || _c === void 0 ? void 0 : _c.call(_b, compCollection || compSubCollection, propertyName, propertyValue);
                },
                download: function (responseFile) {
                    var _a, _b, _c;
                    return (_c = (_b = (_a = dory.shellConfigs).downloadHandler) === null || _b === void 0 ? void 0 : _b.call(_a, responseFile)) !== null && _c !== void 0 ? _c : false;
                },
                isObject: function (obj) {
                    return (obj && typeof obj === 'object' && !Array.isArray(obj));
                },
                validation: {
                    required: function (message) { return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).required(message); },
                    minLength: function (minLenght, message) { return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).minLength(minLenght, message); },
                    maxLength: function (maxLenght, message) { return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).maxLength(maxLenght, message); },
                    email: function (message) { return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).email(message); },
                    iban: function (message) { return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).iban(message); },
                    regex: function (regexVal, message) { return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).regex(regexVal, message); },
                    tckn: function (message) { return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).tckn(message); },
                    vkn: function (message) { return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).vkn(message); }
                },
                validate: function (compEID, displayAlertBox, displayError) {
                    return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).validate(compEID, displayAlertBox, displayError);
                },
                validateAll: function (displayAlertBox, displayError) {
                    return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).validateAll(displayAlertBox, displayError);
                },
                resetValidation: function (compEID) {
                    return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).resetValidation(compEID);
                },
                reset: function (compEID) {
                    return new _ValidationManager__WEBPACK_IMPORTED_MODULE_30__.ValidationManager(context).reset(compEID);
                },
                createChildren: function (_a) {
                    var parentCompQId = _a.parentCompQId, templateChildName = _a.templateChildName, newChildName = _a.newChildName;
                    var parentCompPJson = lastHistory.getComponentJsonByCompId(parentCompQId);
                    var createdComps = _DynamicCompManager__WEBPACK_IMPORTED_MODULE_20__.DynamicCompManager.createDynamicChildren({
                        templateChildName: templateChildName, parentCompId: parentCompQId, newChildName: newChildName,
                        historyItem: lastHistory,
                        context: context
                    });
                    var retVal = createdComps === null || createdComps === void 0 ? void 0 : createdComps.map(function (createdComp) { return createdComp.newComponent; });
                    var appendTo = newChildName ? newChildName : templateChildName;
                    _DynamicCompManager__WEBPACK_IMPORTED_MODULE_20__.DynamicCompManager.appendDynamicCreatedComp({ newComponents: retVal, context: context, historyItem: lastHistory, parentComp: createdComps[0].parentComp, childName: appendTo });
                    return retVal;
                },
                createComponent: function (_a) {
                    var templateCompQID = _a.templateCompQID, newCompQID = _a.newCompQID, dataSource = _a.dataSource, place = _a.place, placeQID = _a.placeQID, childName = _a.childName;
                    if (!templateCompQID || !newCompQID) {
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "Check TemplateCompQID: " + templateCompQID + " and newCompQID: " + newCompQID, minEngineLogLevel: engineYamlLogType });
                        return;
                    }
                    var createdComp = _DynamicCompManager__WEBPACK_IMPORTED_MODULE_20__.DynamicCompManager.createDynamicComp({ newCompQID: newCompQID, templateCompQID: templateCompQID, dataSource: dataSource, context: context, historyItem: lastHistory, placeQID: placeQID });
                    if (!createdComp) {
                        return;
                    }
                    _DynamicCompManager__WEBPACK_IMPORTED_MODULE_20__.DynamicCompManager.appendDynamicCreatedComp({ newComponents: [createdComp.newComponent], context: context, historyItem: lastHistory, parentComp: createdComp.parentComp, place: place, childName: childName || "default" });
                    return createdComp.newComponent.component;
                },
                deleteComponent: function (componentInstance) {
                    var _a, _b;
                    var compCollection = lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.GetCompCollectionByCompInst(componentInstance);
                    if (!compCollection) {
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning, logMessage: "Component couldn' t be found at the current page", minEngineLogLevel: engineYamlLogType });
                        return;
                    }
                    (_b = (_a = dory.shellConfigs).deleteComponent) === null || _b === void 0 ? void 0 : _b.call(_a, compCollection);
                    lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.destroyCollection(compCollection);
                },
                findCreateComponentRelative: function (sourceComp, targetCompID) {
                    var historyItem = context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName).currentLevel().last();
                    return historyItem.FindCreateComponentRelative(sourceComp, targetCompID);
                },
                bind: function (_a) {
                    var bindedObject = _a.bindedObject, fields = _a.fields;
                    var propManager = context.GetItemSingle(_PropCalcContext__WEBPACK_IMPORTED_MODULE_27__.PropCalcContext.ContextName);
                    if (bindedObject != _shrimp_interfaces_ComponentInterfaces_IPropSupport__WEBPACK_IMPORTED_MODULE_4__.IPropSupport.store) {
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "Object is not supported yet", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
                        return;
                    }
                    if (!fields) {
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "Provide fields to be binded", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
                        return;
                    }
                    var typeHelper = new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__.TypeHelper();
                    if (!typeHelper.isArray(fields)) {
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "Object is not supported yet", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
                        return;
                    }
                    if (typeHelper.isArray(fields)) {
                        fields.forEach(function (field) {
                            var storeContextItems = storeManager.getTargetContextItems(field);
                            propManager === null || propManager === void 0 ? void 0 : propManager.watch(storeContextItems, field);
                        });
                    }
                },
                setLanguage: function (LRType) {
                    if (dory.isEditorInEditState) {
                        return;
                    } // stop setLang in messaging preRender
                    return dory.SetLRType(LRType);
                },
                getLanguage: function () {
                    return dory.GetLRType();
                },
                updateComponent: function (Comp) {
                    return Comp === null || Comp === void 0 ? void 0 : Comp.$forceUpdate();
                },
                exportToXlsx: function (_a) {
                    var _b, _c;
                    var fileName = _a.fileName, items = _a.items, headers = _a.headers, sheetName = _a.sheetName;
                    (_c = (_b = dory.shellConfigs).exportToXlsxHandler) === null || _c === void 0 ? void 0 : _c.call(_b, { fileName: fileName, items: items, headers: headers, sheetName: sheetName });
                },
                toLongDate: function (date, formatType) {
                    var _a, _b;
                    if (!formatType) {
                        formatType = "DD.MM.YYYY HH:MM";
                        var reg = (_b = (_a = dory.shellConfigs).getFormattingDefinitionByCurrentRegion) === null || _b === void 0 ? void 0 : _b.call(_a);
                        if (reg != undefined) {
                            formatType = reg.longDateFormat.value;
                        }
                        // formatType = dory.shellConfigs.getFormattingDefinitionByCurrentRegion?.()!.longDateFormat.value ?? "DD.MM.YYYY HH:MM";
                    }
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_13__.Formatter().dateToFormattedString(date, formatType);
                },
                toShortDate: function (date, formatType) {
                    var _a, _b;
                    if (!formatType) {
                        formatType = "DD.MM.YYYY";
                        var reg = (_b = (_a = dory.shellConfigs).getFormattingDefinitionByCurrentRegion) === null || _b === void 0 ? void 0 : _b.call(_a);
                        if (reg != undefined) {
                            formatType = reg.shortDateFormat.value;
                        }
                        // formatType = dory.shellConfigs.getFormattingDefinitionByCurrentRegion?.()!.shortDateFormat.value ?? "DD.MM.YYYY";
                    }
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_13__.Formatter().dateToFormattedString(date, formatType);
                },
                toLongTime: function (date, formatType) {
                    var _a, _b;
                    if (!formatType) {
                        formatType = "HH:MM:SS";
                        var reg = (_b = (_a = dory.shellConfigs).getFormattingDefinitionByCurrentRegion) === null || _b === void 0 ? void 0 : _b.call(_a);
                        if (reg != undefined) {
                            formatType = reg.longTimeFormat.value;
                        }
                        // formatType = dory.shellConfigs.getFormattingDefinitionByCurrentRegion?.()!.longTimeFormat.value ?? "HH:MM:SS";
                    }
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_13__.Formatter().dateToFormattedString(date, formatType);
                },
                toShortTime: function (date, formatType) {
                    var _a, _b;
                    if (!formatType) {
                        formatType = "HH:MM";
                        var reg = (_b = (_a = dory.shellConfigs).getFormattingDefinitionByCurrentRegion) === null || _b === void 0 ? void 0 : _b.call(_a);
                        if (reg != undefined) {
                            formatType = reg.shortTimeFormat.value;
                        }
                        // formatType = dory.shellConfigs.getFormattingDefinitionByCurrentRegion?.()!.shortTimeFormat.value ?? "HH:MM";
                    }
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_13__.Formatter().dateToFormattedString(date, formatType);
                },
                toDate: function (dateString, formatType) {
                    var _a, _b;
                    if (!formatType) {
                        formatType = "DDMMYYYY";
                        var reg = (_b = (_a = dory.shellConfigs).getFormattingDefinitionByCurrentRegion) === null || _b === void 0 ? void 0 : _b.call(_a);
                        if (reg != undefined) {
                            formatType = reg.displayDateFormat.value;
                        }
                        // formatType = dory.shellConfigs.getFormattingDefinitionByCurrentRegion?.()!.displayDateFormat.value ?? "DDMMYYYY";
                    }
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_13__.Formatter().toDate(dateString, formatType);
                },
                toMoney: function (number, formatType, opt, bigDecimal) {
                    var _a, _b;
                    var reg = (_b = (_a = dory.shellConfigs).getFormattingDefinitionByCurrentRegion) === null || _b === void 0 ? void 0 : _b.call(_a);
                    if (!formatType) {
                        formatType = "tr-TR";
                        if (reg != undefined) {
                            formatType = reg.moneyFormat.value;
                        }
                    }
                    if (!opt) {
                        var digits = reg === null || reg === void 0 ? void 0 : reg.digits.value;
                        if (digits !== undefined) {
                            opt = { minimumFractionDigits: +digits };
                        }
                    }
                    if (bigDecimal) {
                        return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_13__.Formatter().formatBigNumber(number, formatType);
                    }
                    return new _Helpers_Formatter__WEBPACK_IMPORTED_MODULE_13__.Formatter().formatNumber(number, formatType, opt);
                },
                toDecimal: function (value, radixPoint) {
                    var _a, _b;
                    // Return 0 as-is if value is undefined:
                    if (!value) {
                        return 0;
                    }
                    // Default radix point comes from settings, but could be set to eg. "." in opts:
                    if (!radixPoint) {
                        var reg = (_b = (_a = dory.shellConfigs).getFormattingDefinitionByCurrentRegion) === null || _b === void 0 ? void 0 : _b.call(_a);
                        var radixPointValue = reg === null || reg === void 0 ? void 0 : reg.radixPoint.value;
                        if (radixPointValue !== undefined) {
                            radixPoint = radixPointValue;
                        }
                    }
                    if (!radixPoint) {
                        radixPoint = "";
                    }
                    // Build regex to strip out everything except digits, radix point and minus sign:
                    var regex = new RegExp("[^0-9-" + radixPoint + "]", "g");
                    value = value
                        .replace(/\((?=\d+)(.*)\)/, "-$1") // replace bracketed values with negatives
                        .replace(regex, ''); // strip out any cruft
                    var unformatted = radixPoint ? parseFloat(value.replace(radixPoint, '.')) : parseFloat(value); // make sure decimal point is standard
                    // This will fail silently which may cause trouble, let's wait and see:
                    return !isNaN(unformatted) ? unformatted : 0;
                },
                toBigNumber: function (value) {
                    return new bignumber_js__WEBPACK_IMPORTED_MODULE_7__.BigNumber(value);
                },
                setComponentClass: function (componentInstance, classes) {
                    var _a, _b;
                    var compCollection = lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.GetCompCollectionByCompInst(componentInstance);
                    if (!compCollection || !classes) {
                        return;
                    }
                    (_b = (_a = dory.shellConfigs).setComponentClass) === null || _b === void 0 ? void 0 : _b.call(_a, compCollection, classes);
                },
                setPageTitle: function (value) {
                    var _a, _b;
                    return dory.editor ? undefined : (_b = (_a = dory.shellConfigs).setPageTitle) === null || _b === void 0 ? void 0 : _b.call(_a, value);
                },
                get dm() {
                    return valueContext;
                },
                // dm: valueContext,
                getEditor: function () {
                    return dory.editor;
                },
                get isEditMode() {
                    return dory.isEditorInEditState;
                },
                // isEditMode: dory.isEditorInEditState,
                getComponentIdByInstance: function (componentInstance) {
                    var compCollection = lastHistory === null || lastHistory === void 0 ? void 0 : lastHistory.GetCompCollectionByCompInst(componentInstance);
                    if (!compCollection) {
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning, logMessage: "Component couldn' t be found at the current page", minEngineLogLevel: engineYamlLogType });
                        return;
                    }
                    return compCollection.compId;
                },
                screen: {
                    get XOffset() {
                        var _a, _b;
                        return (_b = (_a = dory.shellConfigs).XOffset) === null || _b === void 0 ? void 0 : _b.call(_a);
                    },
                    get YOffset() {
                        var _a, _b;
                        return (_b = (_a = dory.shellConfigs).YOffset) === null || _b === void 0 ? void 0 : _b.call(_a);
                    },
                    intoView: function (component) { var _a, _b; return (_b = (_a = dory.shellConfigs).intoView) === null || _b === void 0 ? void 0 : _b.call(_a, component); },
                    toTop: function () { var _a, _b; return (_b = (_a = dory.shellConfigs).toTop) === null || _b === void 0 ? void 0 : _b.call(_a); }
                    // XOffset: dory.shellConfigs.XOffset?.(),
                    // YOffset: dory.shellConfigs.YOffset?.(),
                    // intoView: (component: IComponent) => dory.shellConfigs.intoView?.(component),
                    // toTop: () => dory.shellConfigs.toTop?.()
                },
                environment: {
                    get variable() {
                        var _a, _b;
                        return (_b = (_a = dory.shellConfigs).getEnvironmentVariable) === null || _b === void 0 ? void 0 : _b.call(_a);
                    },
                    // variable: dory.shellConfigs.getEnvironmentVariable?.()
                },
                yamlLogType: {
                    get yamlLogType() {
                        var _a, _b;
                        return (_b = (_a = dory.shellConfigs).getYamlLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
                    },
                },
            },
            sso: {
                start: function (_a) {
                    var clientId = _a.clientId, authorizeEndpoint = _a.authorizeEndpoint, redirectUri = _a.redirectUri, scope = _a.scope;
                    var codeVerifier = self.generateRandomString(64);
                    var state = self.generateRandomString(32);
                    if (!scope || !clientId) {
                        var error = "scope or clientid is missing";
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: error, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                        return;
                    }
                    self.generateCodeChallenge(codeVerifier).then(function (codeChallenge) {
                        var _a;
                        if (!((_a = dory.shellConfigs.storeAccess) === null || _a === void 0 ? void 0 : _a.setSessionStorage)) {
                            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "storeAccess NotImplemented", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error });
                            return;
                        }
                        dory.shellConfigs.storeAccess.setSessionStorage({ key: "code_verifier", value: codeVerifier });
                        dory.shellConfigs.storeAccess.setSessionStorage({ key: "state", value: state });
                        dory.shellConfigs.storeAccess.setSessionStorage({ key: "clientId", value: clientId });
                        var urlParams = {
                            response_type: "code",
                            client_id: clientId,
                            code_challenge_method: "S256",
                            code_challenge: codeChallenge,
                            scope: scope,
                            redirect_uri: redirectUri,
                            state: state
                        };
                        if (!dory.shellConfigs.redirectTo) {
                            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "redirectTo NotImplemented", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                            return;
                        }
                        var suffix = authorizeEndpoint.indexOf("?") > -1 ? (authorizeEndpoint.endsWith("&") ? "" : "&") : "?";
                        var url = authorizeEndpoint + suffix + self.urlConcat(urlParams);
                        dory.shellConfigs.redirectTo({ url: url });
                    });
                },
                validate: function (_a) {
                    var _b, _c, _d, _e, _f, _g, _h;
                    var urlParams = _a.urlParams, tokenEndpoint = _a.tokenEndpoint, type = _a.type, onSuccess = _a.onSuccess, onFail = _a.onFail;
                    var ownerComp = (_b = context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_8__.RenderingContext.ContextName)) === null || _b === void 0 ? void 0 : _b.ownerComponent;
                    if (!urlParams["code"]) {
                        var error = "urlParams code not exist";
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: error, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                        ownerComp === null || ownerComp === void 0 ? void 0 : ownerComp.events.Trigger({ eventName: onFail, eventArguments: { error: error } });
                        return;
                    }
                    if (!urlParams["state"]) {
                        var error = "state not exist";
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: error, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                        ownerComp === null || ownerComp === void 0 ? void 0 : ownerComp.events.Trigger({ eventName: onFail, eventArguments: { error: error } });
                        return;
                    }
                    if (!dory.shellConfigs.network || !((_c = dory.shellConfigs.storeAccess) === null || _c === void 0 ? void 0 : _c.getItemFromSessionStorage)) {
                        var error = "network or storeAccess NotImplemented";
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: error, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                        //ownerComp?.events.Trigger({ eventName: onFail, eventArguments: { error } });
                        return;
                    }
                    var state = (_d = dory.shellConfigs.storeAccess) === null || _d === void 0 ? void 0 : _d.getItemFromSessionStorage({ key: "state" });
                    if (urlParams["state"] != state) {
                        var error = "state not matched";
                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: error, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                        ownerComp === null || ownerComp === void 0 ? void 0 : ownerComp.events.Trigger({ eventName: onFail, eventArguments: { error: error } });
                        return;
                    }
                    var body = {
                        client_id: (_e = dory.shellConfigs.storeAccess) === null || _e === void 0 ? void 0 : _e.getItemFromSessionStorage({ key: "clientId" }),
                        code_verifier: (_f = dory.shellConfigs.storeAccess) === null || _f === void 0 ? void 0 : _f.getItemFromSessionStorage({ key: "code_verifier" }),
                        grant_type: "authorization_code",
                        redirect_uri: (_h = (_g = dory.shellConfigs).getUrl) === null || _h === void 0 ? void 0 : _h.call(_g, { noQueryString: true }),
                        type: type,
                        code: urlParams["code"]
                    };
                    var data = Object.keys(body).map(function (dataKey) { return encodeURIComponent(dataKey) + "=" + encodeURIComponent(body[dataKey]); }).join("&").replace(/%20/g, "+");
                    var reqManager = new _Network_RequestManager__WEBPACK_IMPORTED_MODULE_26__.RequestManager(context);
                    reqManager.RequestHandler({
                        url: tokenEndpoint,
                        data: data,
                        blockRender: false,
                        onSuccess: onSuccess,
                        onFail: onFail,
                        http: 'post',
                        headers: { 'Content-type': "application/x-www-form-urlencoded" },
                        responseField: null
                    });
                }
            },
            store: {
                set: storeManager.set.bind(storeManager),
                get: storeManager.get.bind(storeManager),
                getAll: storeManager.getAll.bind(storeManager),
                delete: storeManager.delete.bind(storeManager)
            },
            cookie: {
                set: function (key, cookieValue) {
                    var _a, _b;
                    if (!((_a = dory.shellConfigs.cookieAccess) === null || _a === void 0 ? void 0 : _a.setCookie)) {
                        return;
                    }
                    return (_b = dory.shellConfigs.cookieAccess) === null || _b === void 0 ? void 0 : _b.setCookie({ key: key, cookieValue: cookieValue });
                },
                get: function (key) {
                    var _a, _b;
                    if (!((_a = dory.shellConfigs.cookieAccess) === null || _a === void 0 ? void 0 : _a.getItemFromCookies)) {
                        return;
                    }
                    return (_b = dory.shellConfigs.cookieAccess) === null || _b === void 0 ? void 0 : _b.getItemFromCookies({ key: key });
                },
                getAll: function () {
                    var _a, _b;
                    if (!((_a = dory.shellConfigs.cookieAccess) === null || _a === void 0 ? void 0 : _a.getAllCookies)) {
                        return {};
                    }
                    return ((_b = dory.shellConfigs.cookieAccess) === null || _b === void 0 ? void 0 : _b.getAllCookies()) || {};
                },
                delete: function (key) {
                    var _a, _b;
                    if (!((_a = dory.shellConfigs.cookieAccess) === null || _a === void 0 ? void 0 : _a.removeItemFromCookies)) {
                        return;
                    }
                    return (_b = dory.shellConfigs.cookieAccess) === null || _b === void 0 ? void 0 : _b.removeItemFromCookies({ key: key });
                },
            },
            Url: {
                resolve: function (_a) {
                    var _b;
                    var url = _a.url;
                    // todo: this function should resolve url with settings.yaml
                    if (!((_b = dory === null || dory === void 0 ? void 0 : dory.siteSettings) === null || _b === void 0 ? void 0 : _b.selectedProjectUrl)) {
                        return url;
                    }
                    var resolvedUrl = dory.siteSettings.selectedProjectUrl + url;
                    return resolvedUrl;
                }
            },
            findControl: function () {
                _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "Rezerved for future use", minEngineLogLevel: engineYamlLogType });
            },
            Date: {
                parse: function (value, month) {
                    var date = month && typeof value === "number" ? new Date(value, month, 1) : new Date(value);
                    return date;
                },
                now: function () { return new Date(); },
                time: function () {
                    return new Date().getTime();
                },
                compare: function (first, second) {
                    var firstDate, firstMonth, firstYear, secondDate, secondMonth, secondYear;
                    /**
                     * Check if date is YYYY-M-D or YYYY-D-Y
                     * This format is not compatible for IE11
                     * Turn it into YYYY-MM-DD or YYYY-DD-MM
                     */
                    if (typeof first === "string") {
                        var firstSeparator = first.substring(4, 5);
                        var secondSeparator = first.substring(6, 7);
                        if (firstSeparator == "-" && secondSeparator == "-") {
                            var date = first.substring(7).length == 2 ? first.substring(7) : "0" + first.substring(7);
                            firstDate = first.substring(0, 4) + "-" + "0" + first.substring(5, 6) + "-" + date;
                        }
                        else {
                            firstDate = first;
                        }
                    }
                    else {
                        firstDate = first.toString();
                    }
                    if (typeof second === "string") {
                        var firstSeparator = second.substring(4, 5);
                        var secondSeparator = second.substring(6, 7);
                        if (firstSeparator == "-" && secondSeparator == "-") {
                            var date = second.substring(7).length == 2 ? second.substring(7) : "0" + second.substring(7);
                            secondDate = second.substring(0, 4) + "-" + "0" + second.substring(5, 6) + "-" + date;
                        }
                        else {
                            secondDate = second;
                        }
                    }
                    else {
                        secondDate = second.toString();
                    }
                    //For cross browser support, date must be in YYYY-MM-DD format, other types cant to be parsed
                    var firstDateLocalized = Date.parse(firstDate);
                    var secondDateLocalized = Date.parse(secondDate);
                    if (firstDateLocalized == secondDateLocalized) {
                        return "Equal";
                    }
                    return firstDateLocalized > secondDateLocalized;
                },
                getTimezoneOffset: function (date) {
                    return date.getTimezoneOffset();
                },
                ISOString: function () {
                    return new Date().toISOString();
                },
                differenceInDays: function (first, second) {
                    var firstDate = Date.parse(first.toString());
                    var secondDate = Date.parse(second.toString());
                    var timeDiff = Math.abs(secondDate - firstDate);
                    return Math.ceil(timeDiff / (1000 * 60 * 60 * 24));
                },
                differenceInMonths: function (first, second) {
                    var _a;
                    if (first > second)
                        _a = __read([second, first], 2), first = _a[0], second = _a[1];
                    var months = (second.getFullYear() - first.getFullYear()) * 12;
                    months += (second.getMonth() - first.getMonth());
                    var hasDayDifference = (second.getMonth() == first.getMonth() && first.getDate() > second.getDate());
                    if (hasDayDifference) {
                        months -= 1;
                    }
                    return months <= 0 ? 0 : months;
                }
            },
            Number: {
                parse: function (value) {
                    return Number(value);
                },
                parseFloat: function (value) {
                    return Number.parseFloat(value);
                },
                mod: function (firstValue, secondValue) {
                    return firstValue % secondValue;
                }
            },
            JSON: {
                parse: function (jsonString) {
                    return JSON.parse(jsonString);
                }
            },
            this: ownerComponent && ownerComponent.component,
            parent: {
                props: scopeContext === null || scopeContext === void 0 ? void 0 : scopeContext.GetProps(),
                events: scopeContext === null || scopeContext === void 0 ? void 0 : scopeContext.GetEvents()
            },
            string: {
                space: "\xa0",
                replace: function (string, searchValue, replaceValue) {
                    return string.replace(searchValue, replaceValue);
                }
            },
            process: {
                getMetadata: function () {
                    var _a, _b;
                    return ((_a = dory.shellConfigs.processManager) === null || _a === void 0 ? void 0 : _a.getMetadata) ?
                        (_b = dory.shellConfigs.processManager) === null || _b === void 0 ? void 0 : _b.getMetadata() :
                        storeManager.get("$process") ? storeManager.get("$process").Metadata : storeManager.get("process") ? storeManager.get("process") : undefined;
                },
                setMetadata: function (_a) {
                    var _b, _c, _d;
                    var Metadata = _a.Metadata;
                    if ((_b = dory.shellConfigs.processManager) === null || _b === void 0 ? void 0 : _b.setMetadata) {
                        (_c = dory.shellConfigs.processManager) === null || _c === void 0 ? void 0 : _c.setMetadata({ Metadata: Metadata });
                        return;
                    }
                    var process = (_d = storeManager.get("$process")) !== null && _d !== void 0 ? _d : {};
                    process.Metadata = Metadata;
                    storeManager.set('$process', process);
                },
                changeProcessMetadata: function (key, onSuccess) {
                    var _a, _b, _c;
                    if (key === void 0) { key = ''; }
                    var onSuccessFunc = function () {
                        if (onSuccess) {
                            ownerComponent === null || ownerComponent === void 0 ? void 0 : ownerComponent.events.Trigger({ eventName: onSuccess });
                        }
                    };
                    if ((_a = dory.shellConfigs.processManager) === null || _a === void 0 ? void 0 : _a.changeProcessMetadata) {
                        (_b = dory.shellConfigs.processManager) === null || _b === void 0 ? void 0 : _b.changeProcessMetadata({ key: key, onSuccessFunc: onSuccessFunc });
                        return;
                    }
                    else { // for Qscript and rshell, it is coming from osGlobalObjects.
                        (_c = dory.shellConfigs.osGlobalObjects) === null || _c === void 0 ? void 0 : _c.process.changeProcessMetadata({ key: key, onSuccessFunc: onSuccessFunc });
                    }
                }
            },
            Object: Object,
            js: javascript,
            return: function (retVal) {
                throw { type: "quickReturnExc", retVal: retVal };
            }
        };
        var shellGlobalMethods = dory.shellConfigs.shellGlobalMethods;
        if (shellGlobalMethods === null || shellGlobalMethods === void 0 ? void 0 : shellGlobalMethods.alert) {
            globals.Quick.alert = function (options) { return alert(shellGlobalMethods, ownerComponent, historyManager, options); };
        }
        if (shellGlobalMethods === null || shellGlobalMethods === void 0 ? void 0 : shellGlobalMethods.getDeepLinkParams) {
            globals.Url.getDeepLinkParams = function () {
                return shellGlobalMethods.getDeepLinkParams();
            };
        }
        var getUrl = dory.shellConfigs.getUrl;
        if (getUrl) {
            globals.Url.getUrl = function () {
                return getUrl();
            };
        }
        return globals;
    };
    Evaluator.prototype.generateCodeChallenge = function (codeVerifier) {
        return __awaiter(this, void 0, void 0, function () {
            var digest, array;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, crypto.subtle.digest("SHA-256", new TextEncoder().encode(codeVerifier))];
                    case 1:
                        digest = _a.sent();
                        array = new Uint8Array(digest);
                        return [2 /*return*/, btoa(String.fromCharCode.apply(String, __spreadArray([], __read(array), false)))
                                .replace(/=/g, '').replace(/\+/g, '-').replace(/\//g, '_')];
                }
            });
        });
    };
    Evaluator.prototype.generateRandomString = function (length) {
        var text = "";
        var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        for (var i = 0; i < length; i++) {
            text += possible.charAt(Math.floor(Math.random() * possible.length));
        }
        return text;
    };
    Evaluator.prototype.fillComponentData = function (key, compMap, componentByKey) {
        if (componentByKey["dataValue"]) {
            compMap.set(key, componentByKey["dataValue"]);
        }
        if (componentByKey["valueData"]) {
            compMap.set(key, componentByKey["valueData"]);
        }
        if (componentByKey["radioGroupValue"]) {
            compMap.set(key, componentByKey["radioGroupValue"]);
        }
        if (componentByKey["constRateValue"]) {
            compMap.set(key, componentByKey["constRateValue"]);
        }
        if (componentByKey["internalValue"]) {
            compMap.set(key, componentByKey["internalValue"]);
        }
        return compMap;
    };
    Evaluator.prototype.isObject = function (item) {
        return (item && typeof item === 'object' && !Array.isArray(item));
    };
    Evaluator.prototype.urlConcat = function (dict) {
        var query = [];
        for (var key in dict) {
            query.push(this.encode(key) + '=' + this.encode(dict[key]));
        }
        return query.join('&');
    };
    Evaluator.prototype.encode = function (str) {
        var replace = {
            '!': '%21',
            "'": '%27',
            '(': '%28',
            ')': '%29',
            '~': '%7E',
            '%20': '+',
            '%00': '\x00'
        };
        return encodeURIComponent(str).replace(/[!'\(\)~]|%20|%00/g, function (match) {
            return replace[match];
        });
    };
    /**
     * Deep merge two objects.
     * @param target
     * @param ...sources
     */
    Evaluator.prototype.mergeDeep = function (target) {
        var _a, _b;
        var sources = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            sources[_i - 1] = arguments[_i];
        }
        if (!sources.length)
            return target;
        var source = sources.shift();
        if (this.isObject(target) && this.isObject(source)) {
            for (var key in source) {
                if (this.isObject(source[key])) {
                    if (!target[key])
                        Object.assign(target, (_a = {}, _a[key] = {}, _a));
                    this.mergeDeep(target[key], source[key]);
                }
                else {
                    Object.assign(target, (_b = {}, _b[key] = source[key], _b));
                }
            }
        }
        return this.mergeDeep.apply(this, __spreadArray([target], __read(sources), false));
    };
    return Evaluator;
}());

function requestAsync(dory, context, requestObject) {
    if (!dory.isEditorInEditState) {
        var reqManager = new _Network_RequestManager__WEBPACK_IMPORTED_MODULE_26__.RequestManager(context);
        return reqManager.RequestHandler(requestObject);
    }
}
/**
* This method using for getting all form not empty data.
*/
function getFormData(dory, componentQID) {
    var _a;
    var compMap = new Map();
    var CompObj = {};
    var tempCompCollection = {};
    if (componentQID) {
        var compColl = (_a = dory.GetComponentCollectionByID(componentQID)) !== null && _a !== void 0 ? _a : dory.GetSubComponentCollectionByID(componentQID);
        if (!compColl) {
            return {};
        }
        _Model_Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_14__.ComponentCollection.IterateToChild(compColl, function (item) { tempCompCollection[item.compId] = item; return true; });
    }
    else {
        tempCompCollection = Object.assign({}, dory.GetComponentCollection());
    }
    if (tempCompCollection != null) {
        Object.keys(tempCompCollection).forEach(function (key) {
            if (tempCompCollection && tempCompCollection[key]) {
                if (tempCompCollection[key].componentVisibility == false) {
                    if (!tempCompCollection[key].children) {
                        delete tempCompCollection[key];
                        return;
                    }
                    var deleteChildCompfromCollection_1 = function (childItems) {
                        Object.values(childItems).forEach(function (childItem) {
                            delete tempCompCollection[childItem.compEID];
                            if (childItem.children && childItem.children.default) {
                                deleteChildCompfromCollection_1(childItem.children.default);
                            }
                        });
                    };
                    deleteChildCompfromCollection_1(tempCompCollection[key].children.default);
                }
            }
        });
        Object.keys(tempCompCollection).forEach(function (item) {
            if (tempCompCollection && tempCompCollection[item]) {
                var compData = dory.shellConfigs.getComponentValue(tempCompCollection[item]);
                if (compData) {
                    CompObj[item] = compData;
                }
            }
        });
    }
    return CompObj;
}
function go(context, dory, qjsonPath, options) {
    var _a, _b;
    if (dory.isEditorInEditState) {
        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "editor is not going anywhere in edit state", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Debug });
        return;
    }
    var createrComp = context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_17__.HistoryManager.ContextName).getCreaterRenderingComponent();
    if ((createrComp === null || createrComp === void 0 ? void 0 : createrComp.compType) === "RenderingComponent" && ((_a = createrComp === null || createrComp === void 0 ? void 0 : createrComp.component) === null || _a === void 0 ? void 0 : _a.RenderGo) && !(options === null || options === void 0 ? void 0 : options.newTab)) {
        return (_b = createrComp === null || createrComp === void 0 ? void 0 : createrComp.component) === null || _b === void 0 ? void 0 : _b.RenderGo(qjsonPath);
    }
    return dory.shellConfigs.go2 ? dory.shellConfigs.go2(qjsonPath, options) : null;
}
function alert(shellGlobalMethods, ownerComponent, historyManager, options) {
    var _a, _b;
    if (options.category) {
        options.category = (_a = options.category) !== null && _a !== void 0 ? _a : _shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__.AlertType.Error;
    }
    (_b = options.actionButtons) === null || _b === void 0 ? void 0 : _b.filter(function (button) { return !_shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__.AlertButtonType[button.type]; }).forEach(function (actionButton) { actionButton.type = _shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__.AlertButtonType.Cancel; });
    var currentPageId = historyManager.getRootHM().currentLevel().last().pageId;
    shellGlobalMethods.alert(options, { ownerComponent: ownerComponent, currentPageId: currentPageId });
}


/***/ }),

/***/ "../../common/dory/src/Managers/HistoryItemBasedLRManager.ts":
/*!*******************************************************************!*\
  !*** ../../common/dory/src/Managers/HistoryItemBasedLRManager.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HistoryItemBasedLRManager": () => (/* binding */ HistoryItemBasedLRManager)
/* harmony export */ });
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DoryBasedLRManager */ "../../common/dory/src/Managers/DoryBasedLRManager.ts");
/* harmony import */ var _Evaluator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Evaluator */ "../../common/dory/src/Managers/Evaluator.ts");



var HistoryItemBasedLRManager = /** @class */ (function () {
    function HistoryItemBasedLRManager(_a) {
        var currentContext = _a.currentContext, qLang = _a.qLang;
        this.contextName = HistoryItemBasedLRManager.ContextName;
        this.resourceDict = {};
        this.currentLRTypeRTL = false;
        this.RTL = "_%RTL%_";
        this.currentContext = currentContext;
        this.evaluator = new _Evaluator__WEBPACK_IMPORTED_MODULE_2__.Evaluator();
        var doryLRManager = this.currentContext.GetItemSingle(_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_1__.DoryBasedLRManager.ContextName);
        this.currentLRType = doryLRManager === null || doryLRManager === void 0 ? void 0 : doryLRManager.LRType;
        this.currentLRTypeRTL = doryLRManager === null || doryLRManager === void 0 ? void 0 : doryLRManager.LRTypeRTL;
        this.qLang = qLang;
    }
    Object.defineProperty(HistoryItemBasedLRManager.prototype, "LRType", {
        get: function () {
            return this.currentLRType;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(HistoryItemBasedLRManager.prototype, "LRTypeRTL", {
        get: function () {
            var doryLRManager = this.currentContext.GetItemSingle(_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_1__.DoryBasedLRManager.ContextName);
            if (doryLRManager === null || doryLRManager === void 0 ? void 0 : doryLRManager.LRTypeRTL)
                return doryLRManager.LRTypeRTL;
            return this.currentLRTypeRTL;
        },
        enumerable: false,
        configurable: true
    });
    HistoryItemBasedLRManager.prototype.SetResourceDict = function (CLRs, lrType) {
        this.currentLRType = lrType;
        this.currentLRTypeRTL = CLRs && CLRs[this.RTL] ? true : false;
        this.resourceDict = CLRs;
    };
    HistoryItemBasedLRManager.prototype.GetResource = function (_a) {
        var key = _a.key, dataSource = _a.dataSource, returnKey = _a.returnKey;
        var dory = this.currentContext.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_0__.Dory.ContextName);
        // HistoryContext based LR
        var result;
        if (this.resourceDict) {
            result = this.resourceDict[key];
            if (result != null) {
                result = this.evaluator.Evaluate({ script: result, dataSource: dataSource, context: this.currentContext, lang: this.qLang });
                return result;
            }
        }
        //Dorybased LR
        var DoryBasedLR = this.currentContext.GetItemSingle(_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_1__.DoryBasedLRManager.ContextName);
        result = DoryBasedLR === null || DoryBasedLR === void 0 ? void 0 : DoryBasedLR.GetResource({ context: this.currentContext, key: key, dataSource: dataSource });
        if (result != null) {
            return result;
        }
        //from shell 
        if (dory === null || dory === void 0 ? void 0 : dory.shellConfigs.lridHelper) {
            return dory.shellConfigs.lridHelper(key, dataSource);
        }
        //return key.
        return returnKey !== false ? key : undefined;
    };
    HistoryItemBasedLRManager.ContextName = "HistoryItemBasedLRManager";
    return HistoryItemBasedLRManager;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/HistoryManager.ts":
/*!********************************************************!*\
  !*** ../../common/dory/src/Managers/HistoryManager.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HistoryManager": () => (/* binding */ HistoryManager)
/* harmony export */ });
/* harmony import */ var _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/interfaces/quick/INavigationDemand */ "../../common/shrimp/interfaces/quick/INavigationDemand.ts");
/* harmony import */ var _Components_ContainerComponents_RenderingComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Components/ContainerComponents/RenderingComponent */ "../../common/dory/src/Components/ContainerComponents/RenderingComponent.ts");


var HistoryManager = /** @class */ (function () {
    function HistoryManager(context, doryLike) {
        this.contextName = HistoryManager.ContextName;
        this.HistoryLevels = [];
        this.CurrentLevelIndex = 0;
        this.context = context;
        this.ClearHistory();
        this.doryLike = doryLike;
        // this.OverrideBrowserBackEvent();
    }
    HistoryManager.prototype.currentLevel = function () {
        return this.HistoryLevels[this.CurrentLevelIndex];
    };
    HistoryManager.prototype.addLevel = function () {
        ++this.CurrentLevelIndex;
        this.HistoryLevels[this.CurrentLevelIndex] = new HistoryLevel();
    };
    HistoryManager.prototype.isCurrentlyOnLightbox = function () {
        return this.CurrentLevelIndex !== 0;
    };
    HistoryManager.prototype.dropLevel = function () {
        delete this.HistoryLevels[this.CurrentLevelIndex];
        this.CurrentLevelIndex--;
        return this.currentLevel().last();
    };
    /**
     * @param callback
     * @param traverseBeginLevelIndex
     * traverse from this level downwards or null for all levels
     */
    HistoryManager.prototype.traverseLevelsUpwards = function (callback, traverseBeginLevelIndex) {
        for (var i = (traverseBeginLevelIndex || this.CurrentLevelIndex); i >= 0; i--) {
            var currentLevelHistoryItems = this.HistoryLevels[i].historyItems();
            var retVal = callback(currentLevelHistoryItems[currentLevelHistoryItems.length - 1]);
            if (!retVal) {
                break;
            }
        }
    };
    HistoryManager.prototype.getLastHistoryOnLevel = function (levelIndex) {
        if (levelIndex === null || levelIndex === undefined || !this.HistoryLevels[levelIndex]) {
            return null;
        }
        return this.HistoryLevels[levelIndex].last();
    };
    HistoryManager.prototype.AddTempHistory_delete = function (historyItem) {
        this.currentLevel().historyItems().push(historyItem);
    };
    HistoryManager.prototype.RemoveTempHistory_delete = function () {
        this.currentLevel().historyItems().splice(-1);
    };
    /**
     * * Add a history item for back support
     * @param historyItem: Item to be added to history
     * type="HistoryItem"
     * value="new HistoryItem()"
     */
    HistoryManager.prototype.AddHistory = function (historyItem) {
        var historyLevel = this.currentLevel();
        var oldHistoryItem = historyLevel.previous();
        if (oldHistoryItem) {
            oldHistoryItem.hibernate();
        }
        historyLevel.addHistory(historyItem);
    };
    ;
    HistoryManager.prototype.Forward = function (options) {
        var historyItems = this.currentLevel().forward(options);
        if (!(historyItems === null || historyItems === void 0 ? void 0 : historyItems.new)) {
            return;
        }
        historyItems.old.forEach(function (historyItem) {
            historyItem.hibernate();
        });
        historyItems.new.resurrect();
        this.doryLike.OwnerDoryLike.CallRender(historyItems.new, _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.forward);
    };
    ;
    HistoryManager.prototype.Back = function (options) {
        var historyItems = this.currentLevel().back(options);
        if (!(historyItems === null || historyItems === void 0 ? void 0 : historyItems.new)) {
            return;
        }
        historyItems.old.forEach(function (historyItem) {
            historyItem.hibernate();
        });
        historyItems.new.resurrect();
        this.doryLike.OwnerDoryLike.CallRender(historyItems.new, _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.back);
    };
    ;
    /**
     * @param typeName GetControlWithTypeName
     * @param levelIndex Which index of level will be searched. undefined for CurrentLevel
     * @returns ComponentCollection | null
     */
    HistoryManager.prototype.GetComponentByType = function (typeName, levelIndex) {
        levelIndex = levelIndex || this.CurrentLevelIndex;
        var lastLevel = this.getLastHistoryOnLevel(levelIndex);
        if (!lastLevel) {
            return null;
        }
        var component = lastLevel.GetControlWithTypeName(typeName);
        if (!component) {
            return null;
        }
        return component;
    };
    HistoryManager.prototype.ClearHistory = function () {
        var curLevel = this.currentLevel();
        this.HistoryLevels = new Array();
        this.CurrentLevelIndex = 0;
        this.addLevel();
        curLevel === null || curLevel === void 0 ? void 0 : curLevel.destroy();
    };
    HistoryManager.prototype.checkIfHistoryExist = function (options) {
        return this.currentLevel().checkIfHistoryExist(options).historyExist;
    };
    HistoryManager.prototype.hasHistory = function (pageId) {
        var retVal = this.searchTargetHistoryManager({ pageId: pageId });
        if (!retVal) {
            return this.getNavDemand(pageId);
        }
        return retVal.ownerHistoryManager.getNavDemand(retVal.pageId ? retVal.pageId : pageId);
    };
    HistoryManager.prototype.searchTargetHistoryManager = function (_a) {
        var _b, _c;
        var pageId = _a.pageId;
        var pageIdArray = pageId === null || pageId === void 0 ? void 0 : pageId.split('.');
        if (pageId && pageIdArray && ((_b = this.currentLevel().last()) === null || _b === void 0 ? void 0 : _b.pageId) != pageIdArray[0]) {
            //back is on root or rshell
            return { ownerHistoryManager: this, pageId: pageId };
        }
        var renderingComponent = (_c = this.GetComponentByType(_Components_ContainerComponents_RenderingComponent__WEBPACK_IMPORTED_MODULE_1__.RenderingComponent.ComponentName)) === null || _c === void 0 ? void 0 : _c.component;
        if (!renderingComponent) {
            //rShell will return from here.
            return { ownerHistoryManager: this, pageId: pageId };
        }
        var newPageIdString = pageId;
        if (pageId && pageIdArray && pageIdArray[1]) {
            //browser back
            var firstPageId = pageIdArray[0] + '.';
            newPageIdString = pageId.replace(firstPageId, '');
            return renderingComponent.searchTargetHistoryManager(newPageIdString) || null;
        }
        return null;
    };
    HistoryManager.prototype.getNavDemand = function (pageId) {
        var navigationDemand = null;
        var historyItems = this.HistoryLevels[this.CurrentLevelIndex].historyItems();
        var futureItems = this.HistoryLevels[this.CurrentLevelIndex].futureItems();
        for (var index = historyItems.length - 1; index >= 0; index--) {
            var curItem = historyItems[index];
            if (curItem.pageId == pageId) {
                navigationDemand = { pageId: pageId, pageName: curItem.pageName, navigationDemandType: _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.back, step: historyItems.length - index - 1, ownerHistoryManager: this }; //when calculating step extract current historyItem (-1)
                break;
            }
        }
        if (!navigationDemand) {
            for (var index = futureItems.length - 1; index >= 0; index--) {
                if (index != futureItems.length && futureItems[index].pageId == pageId) {
                    navigationDemand = { pageId: pageId, pageName: futureItems[index].pageName, navigationDemandType: _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.forward, step: futureItems.length - index, ownerHistoryManager: this };
                    break;
                }
            }
        }
        return navigationDemand;
    };
    HistoryManager.prototype.getCreaterRenderingComponent = function () {
        return this.doryLike.GetCreaterRenderingComponent();
    };
    HistoryManager.prototype.getRootHM = function () {
        if (!this.rootHMCache) {
            var creator = this.doryLike.GetCreatorComponent();
            this.rootHMCache = creator ? creator.context.GetItemSingle(HistoryManager.ContextName).getRootHM() : this;
        }
        return this.rootHMCache;
    };
    HistoryManager.prototype.GetCompUIDPrefix = function () {
        return this.doryLike.GetCompUIDPrefix();
    };
    HistoryManager.traverseUpwards = function (retVal, historyItem) {
        var _a, _b;
        if (!historyItem) {
            return retVal;
        }
        retVal = retVal !== null && retVal !== void 0 ? retVal : [];
        if (historyItem.pageName) {
            retVal.push(historyItem.pageName);
        }
        var ownerComp = (_a = historyItem.getOwnerHistoryManager()) === null || _a === void 0 ? void 0 : _a.doryLike.GetCreaterComp();
        if (!ownerComp) {
            return retVal;
        }
        var upwardHistoryItem = (_b = ownerComp.context.GetItemSingle("HistoryManager")) === null || _b === void 0 ? void 0 : _b.currentLevel().last();
        return HistoryManager.traverseUpwards(retVal, upwardHistoryItem);
    };
    HistoryManager.ContextName = "HistoryManager";
    return HistoryManager;
}());

var HistoryLevel = /** @class */ (function () {
    function HistoryLevel() {
        this.HistoryItems = [];
        this.FutureItems = [];
    }
    /**
     * clear future on every new action
     * @param historyItem
     */
    HistoryLevel.prototype.addHistory = function (historyItem) {
        this.destroyer(this.FutureItems);
        this.FutureItems = [];
        this.HistoryItems.push(historyItem);
        delete this.MomentaryItem;
    };
    ;
    HistoryLevel.prototype.destroy = function () {
        this.destroyer(this.FutureItems);
        this.destroyer(this.HistoryItems);
    };
    HistoryLevel.prototype.historyItems = function () {
        return this.HistoryItems;
    };
    ;
    HistoryLevel.prototype.futureItems = function () {
        return this.FutureItems;
    };
    ;
    HistoryLevel.prototype.last = function () {
        if (this.MomentaryItem) {
            return this.MomentaryItem;
        }
        if (this.HistoryItems.length < 1) {
            return null;
        }
        return this.HistoryItems[this.HistoryItems.length - 1];
    };
    ;
    HistoryLevel.prototype.setMomentaryItem = function (momentaryItem) {
        this.MomentaryItem = momentaryItem;
    };
    HistoryLevel.prototype.previous = function () {
        var offset = (!this.MomentaryItem) ? 2 : 1;
        if (this.HistoryItems.length < offset) {
            return null;
        }
        return this.HistoryItems[this.HistoryItems.length - offset];
    };
    ;
    HistoryLevel.prototype.checkIfHistoryExist = function (options) {
        if (options.externalHistoryRouter) { //#legacyCode : this if is for rallyUi Quick 1.0
            return { historyExist: true };
        }
        options.step = options.step ? options.step : 1;
        if (options.navigationDemandType == _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.back) {
            if (this.HistoryItems.length > Math.abs(options.step)) {
                return { historyExist: true, step: options.step };
            }
        }
        else {
            if (this.FutureItems.length >= options.step) {
                return { historyExist: true, step: options.step };
            }
        }
        // //below code is for checking if it is coming from doryJr. 
        // let doryLikeData = (<HistoryManager><unknown>options.ownerHistoryManager).doryLike;
        // if (doryLikeData.OwnerDoryLike.contextName == "DoryJr") {
        //     let ownerHistoryManagerStep =
        //         options.step - (options.navigationDemandType == INavigationDemandType.back ? (this.HistoryItems.length-1) : (this.FutureItems.length));
        //     const ownerHistoryManager = <HistoryManager><unknown>doryLikeData.GetCreaterComponent()?.context?.GetItemSingle(HistoryManager.ContextName);
        //     if (ownerHistoryManager) {
        //         (ownerHistoryManager)?.Back({
        //             ownerHistoryManager: (ownerHistoryManager),
        //             step: ownerHistoryManagerStep,
        //             navigationDemandType: options.navigationDemandType
        //         });
        //     }
        //     return { historyExist: true, step: this.HistoryItems.length };
        // }
        return { historyExist: false };
    };
    HistoryLevel.prototype.back = function (options) {
        var _a;
        options.navigationDemandType = (_a = options.navigationDemandType) !== null && _a !== void 0 ? _a : _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.back;
        var retVal = this.checkIfHistoryExist(options);
        if (!retVal.historyExist) {
            return undefined;
        }
        var step = options.step ? (options.step == retVal.step ? options.step : retVal.step) : 1;
        var oldItems = [];
        for (var index = 0; index < Math.abs(step); index++) {
            var currentItem = this.HistoryItems.pop();
            if (!currentItem) {
                throw new Error('abcdeb');
            }
            this.FutureItems.push(currentItem);
            oldItems.push(currentItem);
        }
        var newHistoryItem = this.HistoryItems.length > 0 ? this.HistoryItems[this.HistoryItems.length - 1] : null;
        return { old: oldItems, new: newHistoryItem };
    };
    ;
    HistoryLevel.prototype.forward = function (options) {
        var _a;
        options.navigationDemandType = (_a = options.navigationDemandType) !== null && _a !== void 0 ? _a : _shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.forward;
        var retVal = this.checkIfHistoryExist(options);
        if (!retVal.historyExist) {
            return undefined;
        }
        var step = options.step ? (options.step == retVal.step ? options.step : retVal.step) : 1;
        var oldItems = [];
        var newHistoryItem;
        var currentHistoryItem = this.last();
        oldItems.push(currentHistoryItem);
        for (var index = 0; index < step; index++) {
            var futureItem = this.FutureItems.pop();
            if (!futureItem) {
                throw new Error('there is no future in this land.');
            }
            this.HistoryItems.push(futureItem);
            (index == step - 1) ? newHistoryItem = futureItem : oldItems.push(futureItem);
        }
        return { old: oldItems, new: newHistoryItem };
    };
    ;
    HistoryLevel.prototype.destroyer = function (historyItems) {
        if (historyItems) {
            historyItems.forEach(function (item) { return item.destroy(); });
        }
    };
    ;
    return HistoryLevel;
}());


/***/ }),

/***/ "../../common/dory/src/Managers/MessagingManager.ts":
/*!**********************************************************!*\
  !*** ../../common/dory/src/Managers/MessagingManager.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MessagingManager": () => (/* binding */ MessagingManager)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _HistoryManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");



var MessagingManager = /** @class */ (function () {
    function MessagingManager(context) {
        this.context = context;
    }
    /**
     * Returns a messaging component if it is exists on the given level index
     * @param levelIndex Index that will be searched for Messaging component
     * @returns IComponentCollection
     */
    MessagingManager.prototype.GetMessagingComponentByLevelIndex = function (levelIndex) {
        var _a, _b;
        var historyManager = this.context.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_2__.HistoryManager.ContextName);
        var dory = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_1__.Dory.ContextName);
        var engineYamlLogType = (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
        var messagingComponent = historyManager === null || historyManager === void 0 ? void 0 : historyManager.GetComponentByType(MessagingManager.MessagingCompName, levelIndex);
        if (!messagingComponent) {
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: MessagingManager.MessagingCompName + " component couldn' t found on { " + levelIndex + " + } index level", minEngineLogLevel: engineYamlLogType });
            return null;
        }
        return messagingComponent;
    };
    /**
     * Get component property value by eventName
     * @param eventName Name of the component event
     * @returns void | null
     */
    MessagingManager.prototype.Get = function (eventName) {
        var _a, _b;
        var historyManager = this.context.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_2__.HistoryManager.ContextName);
        if (!historyManager) {
            return;
        }
        var messagingComponent = this.GetMessagingComponentByLevelIndex(historyManager.CurrentLevelIndex);
        if (messagingComponent && messagingComponent.events) {
            var eventBoundFuntions = messagingComponent.events.GetEventBoundFunctions();
            return (_a = eventBoundFuntions.eventFunctions[eventName]) !== null && _a !== void 0 ? _a : (_b = eventBoundFuntions.propertyEventFunctions) === null || _b === void 0 ? void 0 : _b[eventName];
        }
    };
    // /**
    //  * Set component property value by propertyName
    //  * @param propertyName Name of the component property
    //  * @param propertyValue Value that will be setted to the @propertyName
    //  * @returns void
    //  */
    // Set(propertyName: string, propertyValue: object) {
    //     const historyManager = this.context.GetItemSingle<HistoryManager>(HistoryManager.ContextName);
    //     const messagingComponent = this.GetMessagingComponentByLevelIndex(historyManager.CurrentLevelIndex);
    //     if (messagingComponent) {
    //         messagingComponent[propertyName] = propertyValue;
    //     }
    // }
    /**
     * Trigger an event on current index level of currentLevel
     * @param eventName Event that will be triggered
     * @param parameters Which parameters or arguments that will be passed
     * @returns void
     */
    MessagingManager.prototype.Trigger = function (_a) {
        var eventName = _a.eventName, parameters = _a.parameters;
        var historyManager = this.context.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_2__.HistoryManager.ContextName);
        if (!historyManager) {
            return;
        }
        var messagingComponent = this.GetMessagingComponentByLevelIndex(historyManager.CurrentLevelIndex);
        var retVal = null;
        if (messagingComponent) {
            retVal = messagingComponent.events.Trigger({ eventName: eventName, eventArguments: parameters });
        }
        return retVal;
    };
    MessagingManager.MessagingCompName = "Messaging";
    return MessagingManager;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/Network/MockManager.ts":
/*!*************************************************************!*\
  !*** ../../common/dory/src/Managers/Network/MockManager.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MockManager": () => (/* binding */ MockManager),
/* harmony export */   "MockMode": () => (/* binding */ MockMode),
/* harmony export */   "MockObject": () => (/* binding */ MockObject)
/* harmony export */ });
var MockObject = /** @class */ (function () {
    function MockObject(mockKey) {
        this.playCounter = 0;
        this.values = [];
        this.mockKey = mockKey;
        this.Reset();
    }
    MockObject.prototype.Reset = function () {
        this.playCounter = 0;
    };
    MockObject.prototype.AddMock = function (value, overrideCapture) {
        if (overrideCapture) {
            this.values[0] = value;
        }
        else {
            this.values.push(value);
        }
    };
    MockObject.prototype.GetMock = function (overrideCapture) {
        if (overrideCapture) {
            return this.values[0];
        }
        if (this.values.length <= this.playCounter) {
            throw new Error("Not enough capture was taken for key: " + this.mockKey + " access counter:" + this.playCounter);
        }
        return this.values[this.playCounter++];
    };
    return MockObject;
}());

var MockMode;
(function (MockMode) {
    MockMode["off"] = "off";
    MockMode["captureOnly"] = "captureOnly";
    MockMode["playOnly"] = "playOnly";
})(MockMode || (MockMode = {}));
var MockManager = /** @class */ (function () {
    function MockManager(options) {
        this.contextName = MockManager.ContextName;
        this.mocks = {};
        this.options = options;
    }
    MockManager.GetMocker = function (options, dory) {
        var interDoryContext = dory.GetInterDoryContext();
        var mm = interDoryContext.GetItemSingle(MockManager.ContextName);
        if (!mm) {
            mm = new MockManager(options);
            interDoryContext.RegisterItem(mm);
        }
        return mm;
    };
    Object.defineProperty(MockManager.prototype, "MockMode", {
        set: function (mockMode) {
            this.options.mockMode = mockMode;
            this.Reset();
        },
        enumerable: false,
        configurable: true
    });
    MockManager.prototype.Reset = function () {
        var _this = this;
        Object.keys(this.mocks).forEach(function (key) { return _this.mocks[key].Reset(); });
    };
    MockManager.prototype.Execute = function (key, realCall) {
        var retVal = undefined;
        switch (this.options.mockMode) {
            case MockMode.off:
            default:
                retVal = realCall();
                break;
            case MockMode.captureOnly:
                retVal = realCall();
                this.SetMock(key, retVal);
                break;
            case MockMode.playOnly:
                var mockObj = this.mocks[key];
                if (!mockObj) {
                    throw new Error("No mock captured for: " + key);
                }
                retVal = mockObj.GetMock(this.options.overrideCapture);
                break;
        }
        return retVal;
    };
    MockManager.prototype.SetMock = function (key, value, options) {
        if (options === void 0) { options = {}; }
        if (options.overrideMockMode != true) {
            switch (this.options.mockMode) {
                case MockMode.off:
                case MockMode.playOnly:
                default:
                    return;
                case MockMode.captureOnly:
                    break;
            }
        }
        var curMock = this.mocks[key] || (this.mocks[key] = new MockObject(key));
        var overrideCapture = options.overrideCapture !== undefined ? options.overrideCapture : this.options.overrideCapture;
        curMock.AddMock(value, overrideCapture);
    };
    MockManager.ContextName = "MockManager";
    return MockManager;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/Network/RequestManager.ts":
/*!****************************************************************!*\
  !*** ../../common/dory/src/Managers/Network/RequestManager.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RequestManager": () => (/* binding */ RequestManager)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_httpHeaderHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/httpHeaderHelper */ "../../common/shrimp/helpers/httpHeaderHelper.ts");
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shrimp/interfaces/ComponentInterfaces/IAlert */ "../../common/shrimp/interfaces/ComponentInterfaces/IAlert.ts");
/* harmony import */ var _shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shrimp/interfaces/IPromiseData */ "../../common/shrimp/interfaces/IPromiseData.ts");
/* harmony import */ var _shrimp_performance__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shrimp/performance */ "../../common/shrimp/performance.ts");
/* harmony import */ var _Context_BlockInfo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Context/BlockInfo */ "../../common/dory/src/Context/BlockInfo.ts");
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
/* harmony import */ var _Context_ResponseContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Context/ResponseContext */ "../../common/dory/src/Context/ResponseContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _HistoryManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
/* harmony import */ var _MockManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./MockManager */ "../../common/dory/src/Managers/Network/MockManager.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};











var RequestManager = /** @class */ (function () {
    function RequestManager(context) {
        this.context = context;
    }
    /**
     * Handle Async Request
     * @param requestObject Request obejct with paramaters
     * @returns void
     */
    RequestManager.prototype.RequestHandler = function (requestObject) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var dory, engineYamlLogType, awaitProm, blockInfo, renderingContext, ownerComp, ownerEvent, ex_1, mm, promise;
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        dory = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_8__.Dory.ContextName);
                        engineYamlLogType = (_b = (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
                        awaitProm = (0,_shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_3__.CreatePromiseData)();
                        if (requestObject.blockRender) {
                            blockInfo = this.context.GetItemSingle(_Context_BlockInfo__WEBPACK_IMPORTED_MODULE_5__.BlockInfo.ContextName);
                            blockInfo === null || blockInfo === void 0 ? void 0 : blockInfo.addBlockPromise(awaitProm.promise);
                        }
                        renderingContext = this.context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_6__.RenderingContext.ContextName);
                        renderingContext === null || renderingContext === void 0 ? void 0 : renderingContext.IsRenderingEventsComplete();
                        ownerComp = renderingContext === null || renderingContext === void 0 ? void 0 : renderingContext.ownerComponent;
                        ownerEvent = renderingContext === null || renderingContext === void 0 ? void 0 : renderingContext.ownerEvent;
                        _c.label = 1;
                    case 1:
                        _c.trys.push([1, 3, , 4]);
                        if (!requestObject.headers) {
                            requestObject.headers = {};
                        }
                        return [4 /*yield*/, (dory === null || dory === void 0 ? void 0 : dory.SettingsQJsonContext.TriggerPipeline("onBeforeRequest", { requestObject: requestObject }))];
                    case 2:
                        _c.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_1 = _c.sent();
                        awaitProm.reject(ex_1);
                        throw ex_1;
                    case 4:
                        mm = _MockManager__WEBPACK_IMPORTED_MODULE_10__.MockManager.GetMocker({ mockMode: _MockManager__WEBPACK_IMPORTED_MODULE_10__.MockMode.off, overrideCapture: false }, dory);
                        promise = mm.Execute(requestObject.url, function () {
                            return _this.requestMethod(requestObject);
                        });
                        if (ownerComp) {
                            _shrimp_performance__WEBPACK_IMPORTED_MODULE_4__.PerfSingles.Instance().Start(ownerComp.compId + "." + (ownerEvent === null || ownerEvent === void 0 ? void 0 : ownerEvent.eventName) + "->");
                        }
                        //Make the setted request
                        promise.then(function (response) { return __awaiter(_this, void 0, void 0, function () {
                            var ex_2;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "Response has successfully returned", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Trace, minEngineLogLevel: engineYamlLogType });
                                        requestObject.responseField = requestObject.responseField || null;
                                        this.MergeResponseToMainResponse(requestObject.responseField, response);
                                        _a.label = 1;
                                    case 1:
                                        _a.trys.push([1, 3, , 4]);
                                        return [4 /*yield*/, (dory === null || dory === void 0 ? void 0 : dory.SettingsQJsonContext.TriggerPipeline("onAfterResponse", { response: response }))];
                                    case 2:
                                        _a.sent();
                                        return [3 /*break*/, 4];
                                    case 3:
                                        ex_2 = _a.sent();
                                        awaitProm.reject(ex_2);
                                        throw ex_2;
                                    case 4:
                                        if (ownerComp) {
                                            _shrimp_performance__WEBPACK_IMPORTED_MODULE_4__.PerfSingles.Instance().End(ownerComp.compId + "." + (ownerEvent === null || ownerEvent === void 0 ? void 0 : ownerEvent.eventName) + "->", ownerEvent);
                                        }
                                        if (requestObject.onSuccess) {
                                            if (!ownerComp) {
                                                _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "RenderingContext has no owner component", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                                            }
                                            else {
                                                ownerComp.events.Trigger({ eventName: requestObject.onSuccess, eventArguments: requestObject.args });
                                            }
                                        }
                                        awaitProm.promise.then(function () { if (ownerComp) {
                                            _shrimp_performance__WEBPACK_IMPORTED_MODULE_4__.PerfSingles.Instance().End(ownerComp.compId + "." + (ownerEvent === null || ownerEvent === void 0 ? void 0 : ownerEvent.eventName) + " after await", ownerEvent);
                                        } });
                                        awaitProm.resolver(response);
                                        if (ownerComp) {
                                            _shrimp_performance__WEBPACK_IMPORTED_MODULE_4__.PerfSingles.Instance().Start(ownerComp.compId + "." + (ownerEvent === null || ownerEvent === void 0 ? void 0 : ownerEvent.eventName) + " after await");
                                        }
                                        return [2 /*return*/];
                                }
                            });
                        }); });
                        //Block all rendering
                        promise.catch(function (err) { return __awaiter(_this, void 0, void 0, function () {
                            var ex_3, error, currentPageId;
                            var _a, _b, _c;
                            return __generator(this, function (_d) {
                                switch (_d.label) {
                                    case 0:
                                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "Response has not successfully returned. Error: " + err, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                                        if (!(err === null || err === void 0 ? void 0 : err.response)) return [3 /*break*/, 4];
                                        _d.label = 1;
                                    case 1:
                                        _d.trys.push([1, 3, , 4]);
                                        return [4 /*yield*/, dory.SettingsQJsonContext.TriggerPipeline("onAfterErrorResponse", { response: err.response })];
                                    case 2:
                                        _d.sent();
                                        return [3 /*break*/, 4];
                                    case 3:
                                        ex_3 = _d.sent();
                                        awaitProm.reject(ex_3);
                                        throw ex_3;
                                    case 4:
                                        if (ownerComp) {
                                            _shrimp_performance__WEBPACK_IMPORTED_MODULE_4__.PerfSingles.Instance().End(ownerComp.compId + "." + (ownerEvent === null || ownerEvent === void 0 ? void 0 : ownerEvent.eventName) + "->", ownerEvent);
                                        }
                                        if (requestObject.onFail) {
                                            if (!ownerComp) {
                                                _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "RenderingContext has no owner component", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                                            }
                                            else {
                                                error = new Error(err.message);
                                                error.response = err.response;
                                                error.stack = err.stack;
                                                error.request = requestObject;
                                                ownerComp.events.Trigger({ eventName: requestObject.onFail, eventArguments: { error: error } });
                                            }
                                        }
                                        else {
                                            if (requestObject.showErrorMessage != false) {
                                                if ((_a = dory.shellConfigs.shellGlobalMethods) === null || _a === void 0 ? void 0 : _a.alert) {
                                                    currentPageId = this.context.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_9__.HistoryManager.ContextName).getRootHM().currentLevel().last().pageId;
                                                    (_b = dory.shellConfigs.shellGlobalMethods) === null || _b === void 0 ? void 0 : _b.alert({ category: _shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_2__.AlertType.Error, error: { errorMessage: err.message, errorCode: 'HTTP_' + ((_c = err.response) === null || _c === void 0 ? void 0 : _c.status), errorSource: _shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_2__.ErrorSource.Network, response: err.response } }, { currentPageId: currentPageId });
                                                }
                                            }
                                        }
                                        awaitProm.promise.catch(function () { if (ownerComp) {
                                            _shrimp_performance__WEBPACK_IMPORTED_MODULE_4__.PerfSingles.Instance().End(ownerComp.compId + "." + (ownerEvent === null || ownerEvent === void 0 ? void 0 : ownerEvent.eventName) + " after catch", ownerEvent);
                                        } });
                                        awaitProm.reject(err);
                                        if (ownerComp) {
                                            _shrimp_performance__WEBPACK_IMPORTED_MODULE_4__.PerfSingles.Instance().Start(ownerComp.compId + "." + (ownerEvent === null || ownerEvent === void 0 ? void 0 : ownerEvent.eventName) + " after catch");
                                        }
                                        return [2 /*return*/];
                                }
                            });
                        }); });
                        return [2 /*return*/, awaitProm.promise];
                }
            });
        });
    };
    /**
     * Merge response to the main response object with returned response
     * @param responseKey Key that will be attached to the response on last history item
     * @param returnedResponse Response value that has been returned from the request
     * @returns void
     */
    RequestManager.prototype.MergeResponseToMainResponse = function (responseKey, returnedResponse) {
        var returnedResponseObject = returnedResponse;
        var responseContext = this.context.GetItemSingle(_Context_ResponseContext__WEBPACK_IMPORTED_MODULE_7__.ResponseContext.ContextName);
        if (!responseContext)
            return;
        responseContext.response = responseContext.response || {};
        if (responseKey) {
            responseContext.response[responseKey] = returnedResponseObject.data;
            responseContext.response["headers"] = responseContext.response["headers"] || {};
            responseContext.response["status"] = responseContext.response["status"] || {};
            returnedResponseObject["headers"] ? responseContext.response["headers"][responseKey] = returnedResponseObject["headers"] : undefined;
            returnedResponseObject["status"] ? responseContext.response["status"][responseKey] = returnedResponseObject["status"] : undefined;
        }
        else {
            responseContext.response = __assign(__assign({}, responseContext.response), returnedResponseObject.data);
            (returnedResponseObject["headers"] && !responseContext.response["__headers"]) ? responseContext.response["__headers"] = returnedResponseObject["headers"] : undefined;
            (returnedResponseObject["status"] && !responseContext.response["__status"]) ? responseContext.response["__status"] = returnedResponseObject["status"] : undefined;
        }
    };
    RequestManager.prototype.requestMethod = function (request) {
        var dory = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_8__.Dory.ContextName);
        var self = this;
        _shrimp_helpers_httpHeaderHelper__WEBPACK_IMPORTED_MODULE_0__.HTTPHeader.createDefaultHeaders(dory, request);
        var instance = new Promise(function (resolve, reject) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
            var network = dory.shellConfigs.network;
            var promHandler = function (prom) {
                prom.then(resolve).catch(reject);
                return prom;
            };
            switch (request.http.toUpperCase()) {
                case "GET":
                    promHandler(network.get({ url: request.url, urlParams: request.data, headers: request.headers, options: { disableLoading: (_a = request.disableLoading) !== null && _a !== void 0 ? _a : false, withCredentials: (_b = request.withCredentials) !== null && _b !== void 0 ? _b : false, timeout: request.timeout } }));
                    break;
                case "POST":
                    promHandler(network.post({ url: request.url, body: request.data, headers: request.headers, options: { disableLoading: (_c = request.disableLoading) !== null && _c !== void 0 ? _c : false, withCredentials: (_d = request.withCredentials) !== null && _d !== void 0 ? _d : false, timeout: request.timeout } }));
                    break;
                case "MULTIPART":
                    promHandler(network.multipart({ url: request.url, body: request.data, headers: request.headers, options: { disableLoading: (_e = request.disableLoading) !== null && _e !== void 0 ? _e : false, withCredentials: (_f = request.withCredentials) !== null && _f !== void 0 ? _f : false, timeout: request.timeout } }));
                    break;
                case "PUT":
                    promHandler(network.put({ url: request.url, body: request.data, headers: request.headers, options: { disableLoading: (_g = request.disableLoading) !== null && _g !== void 0 ? _g : false, withCredentials: (_h = request.withCredentials) !== null && _h !== void 0 ? _h : false, timeout: request.timeout } }));
                    break;
                case "POSTBLOB":
                    promHandler(network.post({ url: request.url, config: { responseType: "blob" }, body: request.data, headers: request.headers, options: { disableLoading: (_j = request.disableLoading) !== null && _j !== void 0 ? _j : false, withCredentials: (_k = request.withCredentials) !== null && _k !== void 0 ? _k : false, timeout: request.timeout } }));
                    break;
                case "GETBLOB":
                    promHandler(network.get({ url: request.url, urlParams: request.data, config: { responseType: "blob" }, headers: request.headers, options: { disableLoading: (_l = request.disableLoading) !== null && _l !== void 0 ? _l : false, withCredentials: (_m = request.withCredentials) !== null && _m !== void 0 ? _m : false, timeout: request.timeout } }));
                    break;
                case "DELETE":
                    promHandler(network.delete({ url: request.url, body: request.data, headers: request.headers, options: { disableLoading: (_o = request.disableLoading) !== null && _o !== void 0 ? _o : false, withCredentials: (_p = request.withCredentials) !== null && _p !== void 0 ? _p : false, timeout: request.timeout } }));
                    break;
                case "PATCH":
                    promHandler(network.patch({ url: request.url, body: request.data, urlParams: request.data, headers: request.headers, options: { disableLoading: (_q = request.disableLoading) !== null && _q !== void 0 ? _q : false, withCredentials: (_r = request.withCredentials) !== null && _r !== void 0 ? _r : false, timeout: request.timeout } }));
                    break;
            }
        });
        return instance;
    };
    return RequestManager;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/PropCalcContext.ts":
/*!*********************************************************!*\
  !*** ../../common/dory/src/Managers/PropCalcContext.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PropCalcContext": () => (/* binding */ PropCalcContext)
/* harmony export */ });
/* harmony import */ var _Evaluator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Evaluator */ "../../common/dory/src/Managers/Evaluator.ts");
/* harmony import */ var _PropDepTracker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PropDepTracker */ "../../common/dory/src/Managers/PropDepTracker.ts");


;
;
var PropCalcContext = /** @class */ (function () {
    function PropCalcContext(context) {
        this.contextName = PropCalcContext.ContextName;
        this.evaluator = new _Evaluator__WEBPACK_IMPORTED_MODULE_0__.Evaluator();
        this.context = context;
        var propCalcContext = this.context.GetItemSingle(PropCalcContext.ContextName);
        if (!propCalcContext) {
            this.context.RegisterItem(this);
        }
    }
    PropCalcContext.prototype.watch = function (bindObject, field) {
        new _PropDepTracker__WEBPACK_IMPORTED_MODULE_1__.PropDepTracker().createDepTracker(bindObject, field, this.propContextDepGetter, this.propContextDepTriggerer, this);
    };
    /**
     * Return prop context value
     * @param self 'this' will be lost when triggering from Object defined get method
     */
    PropCalcContext.prototype.propContextDepGetter = function (self) {
        return self.contextTarget;
    };
    /**
     * Trigger the dependent target with new value
     * @param depTarget Dependency target
     * @param dataItem Evaluator dataSource
     * @param self 'this' will be lost when triggering from Object defined get method
     * @param lang Evaluator language option
     */
    PropCalcContext.prototype.propContextDepTriggerer = function (_a) {
        var depTarget = _a.depTarget, dataItem = _a.dataItem, self = _a.self, lang = _a.lang;
        if (depTarget && depTarget.instanceHolder.targetInstance.ref.component) {
            depTarget.instanceHolder.targetInstance.ref.component[depTarget.field] = self.evaluator.Evaluate({ script: depTarget.depScriptValue, dataSource: dataItem, context: self.context, lang: lang });
        }
    };
    /**
     * Set prop context value with field and scriptValue
     * @param instanceHolder Target object instance
     * @param field Binded field
     * @param scriptValue Binded script value
     */
    PropCalcContext.prototype.setContextTarget = function (instanceHolder, field, scriptValue) {
        if (typeof scriptValue != "string") {
            return;
        }
        this.contextTarget = { instanceHolder: instanceHolder, field: field, depScriptValue: scriptValue };
    };
    /**
     * Reset prop context
     */
    PropCalcContext.prototype.clearPropTarget = function () {
        this.contextTarget = undefined;
    };
    PropCalcContext.prototype.isTargetCompInstance = function (targetInstance) {
        return targetInstance.ref !== undefined;
    };
    PropCalcContext.ContextName = "PropCalcContext";
    return PropCalcContext;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/PropDepTracker.ts":
/*!********************************************************!*\
  !*** ../../common/dory/src/Managers/PropDepTracker.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PropDepTracker": () => (/* binding */ PropDepTracker)
/* harmony export */ });
var PropDepTracker = /** @class */ (function () {
    function PropDepTracker() {
    }
    /**
     * Create a new object with one way binded
     * @param bindObject Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.
     * @param field The property name
     * @param depGetter Get method of subscribed fields
     * @param depTriggerer Trigger method of subscribers
     */
    PropDepTracker.prototype.createDepTracker = function (bindObject, field, depGetter, depTriggerer, propCalcContext) {
        var _this = this;
        var subscribedFields = [];
        var fieldValue;
        Object.defineProperty(bindObject, field, {
            set: function (value) {
                fieldValue = value;
                _this.propSetter(depTriggerer, subscribedFields, propCalcContext);
            },
            get: function () {
                _this.propGetter(depGetter, subscribedFields, propCalcContext);
                return fieldValue;
            }, enumerable: true,
            configurable: true
        });
    };
    /**
     * Getter of one way binded object
     * @param depGetter Get method of subscribed fields
     * @param subscribers Subscriber list of new object
     * @param retVal Return value of new object
     */
    PropDepTracker.prototype.propGetter = function (depGetter, subscribers, propCalcContext) {
        var propT = depGetter(propCalcContext);
        subscribers.push(propT);
    };
    /**
     * Setter of one way binded object
     * @param deepTriggerer Trigger method of subscribers
     * @param subscribers Subscriber list of new object
     */
    PropDepTracker.prototype.propSetter = function (deepTriggerer, subscribers, propCalcContext) {
        subscribers.forEach(function (item) { return deepTriggerer({ depTarget: item, self: propCalcContext }); });
    };
    return PropDepTracker;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/QPromise.ts":
/*!**************************************************!*\
  !*** ../../common/dory/src/Managers/QPromise.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QPromise": () => (/* binding */ QPromise)
/* harmony export */ });
var QPromise = /** @class */ (function () {
    function QPromise(executor) {
        var _this = this;
        this.finalize = function () { return _this.finalized = true; }; // caution!! must be lambda. Attention to "What is this"!!
        this.callbacks = {};
        this[_b] = "Promise";
        this.selfPromise = executor === QPromise.noop ? undefined : new Promise(executor);
        this.callbacks = QPromise.staticCallbacks;
    }
    QPromise.setStaticCallbacksAndRetrieveOld = function (staticCallbacks) {
        var oldCb = QPromise.staticCallbacks;
        QPromise.staticCallbacks = staticCallbacks;
        return oldCb;
    };
    QPromise.directCreate = function (selfProm) {
        var prom = new QPromise(QPromise.noop);
        prom.selfPromise = selfProm;
        return prom;
    };
    QPromise.all = function (values) {
        return QPromise.directCreate(Promise.all(values));
    };
    QPromise.race = function (values) {
        return QPromise.directCreate(Promise.race(values));
    };
    QPromise.reject = function (reason) {
        return QPromise.directCreate(Promise.reject(reason));
    };
    QPromise.resolve = function (value) {
        var retVal = value !== void (0) ? Promise.resolve(value) : Promise.resolve();
        return QPromise.directCreate(retVal);
    };
    Object.defineProperty(QPromise.prototype, "Finalized", {
        get: function () { return this.finalized; },
        enumerable: false,
        configurable: true
    });
    QPromise.prototype.then = function (onfulfilled, onrejected) {
        var _this = this;
        var _c, _d;
        (_d = (_c = this.callbacks).onThen) === null || _d === void 0 ? void 0 : _d.call(_c, this);
        var fulfillWrapper = !onfulfilled ? undefined : function (value) {
            var old = QPromise.setStaticCallbacksAndRetrieveOld(_this.callbacks);
            var retVal = onfulfilled(value);
            QPromise.setStaticCallbacksAndRetrieveOld(old);
            return retVal;
        };
        var rejectWrapper = !onrejected ? undefined : function (reason) {
            var old = QPromise.setStaticCallbacksAndRetrieveOld(_this.callbacks);
            var retVal = onrejected(reason);
            QPromise.setStaticCallbacksAndRetrieveOld(old);
            return retVal;
        };
        var childPromise = this.selfPromise.then(fulfillWrapper, rejectWrapper);
        this.selfPromise.finally(this.finalize);
        return QPromise.directCreate(childPromise);
    };
    QPromise.prototype.catch = function (onrejected) {
        var _this = this;
        var _c, _d;
        (_d = (_c = this.callbacks).onCatch) === null || _d === void 0 ? void 0 : _d.call(_c, this);
        var rejectWrapper = !onrejected ? undefined : function (reason) {
            var old = QPromise.setStaticCallbacksAndRetrieveOld(_this.callbacks);
            var retVal = onrejected(reason);
            QPromise.setStaticCallbacksAndRetrieveOld(old);
            return retVal;
        };
        var childPromise = this.selfPromise.catch(rejectWrapper);
        this.selfPromise.finally(this.finalize);
        return QPromise.directCreate(childPromise);
    };
    QPromise.prototype.finally = function (onfinally) {
        var _this = this;
        var _c, _d;
        (_d = (_c = this.callbacks).onFinally) === null || _d === void 0 ? void 0 : _d.call(_c, this);
        var finallyWrapper = !onfinally ? undefined : function () {
            var old = QPromise.setStaticCallbacksAndRetrieveOld(_this.callbacks);
            var retVal = onfinally();
            QPromise.setStaticCallbacksAndRetrieveOld(old);
            return retVal;
        };
        var childPromise = this.selfPromise.finally(finallyWrapper);
        this.selfPromise.finally(this.finalize);
        return QPromise.directCreate(childPromise);
    };
    var _a, _b;
    _a = Symbol.species, _b = Symbol.toStringTag;
    QPromise.staticCallbacks = {};
    QPromise.noop = function () { };
    QPromise[_a] = Promise;
    return QPromise;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/RenderingManager.ts":
/*!**********************************************************!*\
  !*** ../../common/dory/src/Managers/RenderingManager.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RenderingManager": () => (/* binding */ RenderingManager)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/compDiffHelper */ "../../common/shrimp/helpers/compDiffHelper.ts");
/* harmony import */ var _shrimp_helpers_CompJsonMigrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shrimp/helpers/CompJsonMigrator */ "../../common/shrimp/helpers/CompJsonMigrator.ts");
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shrimp/interfaces/ComponentInterfaces/ICompJson */ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts");
/* harmony import */ var _shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shrimp/interfaces/IPromiseData */ "../../common/shrimp/interfaces/IPromiseData.ts");
/* harmony import */ var _shrimp_interfaces_Scripting_LangCalc__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shrimp/interfaces/Scripting/LangCalc */ "../../common/shrimp/interfaces/Scripting/LangCalc.ts");
/* harmony import */ var _shrimp_performance__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shrimp/performance */ "../../common/shrimp/performance.ts");
/* harmony import */ var _src_Dory__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../src/Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _Context_BlockInfo__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Context/BlockInfo */ "../../common/dory/src/Context/BlockInfo.ts");
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
/* harmony import */ var _Helpers_ComponentCommunicator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Helpers/ComponentCommunicator */ "../../common/dory/src/Helpers/ComponentCommunicator.ts");
/* harmony import */ var _Model_Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Model/Component/ComponentCollection */ "../../common/dory/src/Model/Component/ComponentCollection.ts");
/* harmony import */ var _Model_Component_EventCollection__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../Model/Component/EventCollection */ "../../common/dory/src/Model/Component/EventCollection.ts");
/* harmony import */ var _Model_Component_EventData__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Model/Component/EventData */ "../../common/dory/src/Model/Component/EventData.ts");
/* harmony import */ var _Evaluator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Evaluator */ "../../common/dory/src/Managers/Evaluator.ts");
/* harmony import */ var _PropCalcContext__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./PropCalcContext */ "../../common/dory/src/Managers/PropCalcContext.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

















var RenderingManager = /** @class */ (function () {
    function RenderingManager(_a) {
        var pjson = _a.pjson, context = _a.context, _b = _a.dataItem, dataItem = _b === void 0 ? null : _b, _c = _a.asChildType, asChildType = _c === void 0 ? _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.CType.child : _c, asChildName = _a.asChildName, controlDict = _a.controlDict, qLang = _a.qLang, parentCompCollection = _a.parentCompCollection, compareCompValue = _a.compareCompValue, dynamicCompIDSuffix = _a.dynamicCompIDSuffix, pageScripting = _a.pageScripting;
        this.contextName = RenderingManager.ContextName;
        this.controlList = [];
        this.evaluator = new _Evaluator__WEBPACK_IMPORTED_MODULE_15__.Evaluator();
        this.compCommunicator = new _Helpers_ComponentCommunicator__WEBPACK_IMPORTED_MODULE_11__.ComponentCommunicator();
        this.typeHelper = new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_3__.TypeHelper();
        this.pjson = pjson;
        this.context = context;
        this.dataItem = dataItem;
        this.asChildType = asChildType;
        this.asChildName = asChildName;
        this.controlDict = controlDict;
        var renderingmanagerContext = this.context.GetItemSingle(RenderingManager.ContextName);
        if (!renderingmanagerContext) {
            this.context.RegisterItem(this);
        }
        this.blockInfo = new _Context_BlockInfo__WEBPACK_IMPORTED_MODULE_9__.BlockInfo({});
        this.context.RegisterItem(this.blockInfo);
        this.QLang = qLang;
        this.parentCompCollection = parentCompCollection;
        new _PropCalcContext__WEBPACK_IMPORTED_MODULE_16__.PropCalcContext(context);
        this.compareCompValue = compareCompValue;
        this.dynamicCompIDSuffix = dynamicCompIDSuffix;
        this.pageScrtipting = pageScripting;
    }
    RenderingManager.prototype.getLang = function (_a) {
        var self = _a.self, ctrl = _a.ctrl;
        return _shrimp_interfaces_Scripting_LangCalc__WEBPACK_IMPORTED_MODULE_6__.LangCalc.getLang({ self: self, ctrl: ctrl, qLang: this.QLang });
    };
    RenderingManager.prototype.WillRender = function (ctrl) {
        var _a, _b, _c;
        if (((_a = ctrl.P.Render) === null || _a === void 0 ? void 0 : _a.H) && !this.isEditMode()) {
            // don't render
            var display = this.CalculatePropValue({ ctrl: ctrl, prop: "Render", defaultValue: true });
            if (!display) {
                var dory = this.context.GetItemSingle(_src_Dory__WEBPACK_IMPORTED_MODULE_8__.Dory.ContextName);
                var engineYamlLogType = (_c = dory === null || dory === void 0 ? void 0 : (_b = dory.shellConfigs).getMinEngineLogType) === null || _c === void 0 ? void 0 : _c.call(_b);
                _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_2__.Logger.Log({ logMessage: "Not displaying component: " + ctrl.T + " - ID : " + ctrl.P.ID.H, minEngineLogLevel: engineYamlLogType });
                return false;
            }
        }
        return true;
    };
    RenderingManager.prototype.CalculatePropValue = function (_a) {
        var _b, _c, _d, _e;
        var ctrl = _a.ctrl, prop = _a.prop, _f = _a.defaultValue, defaultValue = _f === void 0 ? undefined : _f, compRef = _a.compRef;
        var retVal = defaultValue;
        var value = (_b = ctrl.P[prop]) === null || _b === void 0 ? void 0 : _b.H;
        var handlerFile = (_c = ctrl.P[prop]) === null || _c === void 0 ? void 0 : _c.HF;
        var propContextManager = this.context.GetItemSingle(_PropCalcContext__WEBPACK_IMPORTED_MODULE_16__.PropCalcContext.ContextName);
        if (compRef && value) {
            propContextManager === null || propContextManager === void 0 ? void 0 : propContextManager.setContextTarget({ targetInstance: compRef }, prop, value);
        }
        try {
            if (handlerFile) {
                retVal = this.evaluator.Evaluate2({ scriptName: value, pageScripting: this.pageScrtipting, dataSource: this.dataItem, context: this.context });
            }
            else {
                retVal = this.evaluator.Evaluate({ script: value, dataSource: this.dataItem, context: this.context, lang: this.getLang({ ctrl: ctrl }) });
            }
        }
        catch (e) {
            var dory = this.context.GetItemSingle(_src_Dory__WEBPACK_IMPORTED_MODULE_8__.Dory.ContextName);
            var engineYamlLogType = (_e = dory === null || dory === void 0 ? void 0 : (_d = dory.shellConfigs).getMinEngineLogType) === null || _e === void 0 ? void 0 : _e.call(_d);
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_2__.Logger.Log({ logMessage: ctrl.P.ID.H + ".P." + prop + " failed on comp(" + ctrl.T + "): " + e.message, error: e, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_2__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
        }
        return retVal;
    };
    RenderingManager.prototype.GenerateProps = function (ctrl, compRef) {
        var _a, _b;
        var props = {};
        var attrs;
        var compClass;
        var text;
        if (ctrl._Editor && ctrl._Editor.eID) {
            props.eID = ctrl._Editor.eID;
        }
        for (var prop in ctrl.P) {
            var propJson = ctrl.P[prop];
            switch (prop) {
                case "ID": {
                    props[prop] = propJson.H;
                    continue;
                }
            }
            if (propJson.T == _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.PType.prop && !this.compCommunicator.ComponentHasProp(ctrl.T, ctrl.O, prop, this.context)) {
                var dory = this.context.GetItemSingle(_src_Dory__WEBPACK_IMPORTED_MODULE_8__.Dory.ContextName);
                var engineYamlLogType = (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
                _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_2__.Logger.Log({ logMessage: "P is not implemented on comp " + ctrl.T + ": prop ", minEngineLogLevel: engineYamlLogType });
                continue;
            }
            var value = propJson.DE ? propJson.H : this.CalculatePropValue({ ctrl: ctrl, prop: prop, compRef: compRef });
            switch (propJson.T) {
                default:
                case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.PType.prop:
                    props[prop] = value;
                    break;
                case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.PType["class"]:
                    compClass = value;
                    break;
                case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.PType.text:
                    text = value;
                    break;
                case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.PType.attr: {
                    attrs = attrs !== null && attrs !== void 0 ? attrs : {};
                    attrs[prop] = value;
                    break;
                }
            }
        }
        if (ctrl.O && ctrl.O.layout) {
            if (compClass === undefined) {
                compClass = ctrl.O.layout.class;
            }
            else {
                compClass = compClass + " " + ctrl.O.layout.class;
            }
        }
        return { props: props, compClass: compClass, text: text, attrs: attrs };
    };
    RenderingManager.prototype.GenerateEvents = function (ctrl, events) {
        for (var key in ctrl.E) {
            var eJson = ctrl.E[key];
            if (typeof eJson.H == "object" && eJson.H.type != "flow_r") {
                throw new Error("uncompiled flow model in qjson");
            }
            events.RegisterEvent({
                eventData: new _Model_Component_EventData__WEBPACK_IMPORTED_MODULE_14__.EventData({
                    eventName: key,
                    handler: eJson.H,
                    context: this.context,
                    eventParameters: eJson.P,
                    immediate: eJson.I,
                    customEvent: eJson.C,
                    propertyEvent: eJson.PE,
                    triggerOrder: eJson.TO,
                    externalVisible: eJson.EV,
                    handlerLang: this.getLang({ self: eJson.HL, ctrl: ctrl }),
                    scopeObject: this.dataItem
                })
            });
        }
    };
    /**
     * Generate directives of the component. Collect them into DirectiveCollection on directives fields.
     * Set handler method which has been set already on ctrl with the same name event.
     * @param ctrl ICompJson of the component
     * @param directives Directive collection of the component. Get all the directives from this collection
     */
    RenderingManager.prototype.GenerateDirectives = function (_a) {
        var _this = this;
        var ctrl = _a.ctrl, directives = _a.directives;
        if (!directives)
            return;
        var _loop_1 = function (directiveName) {
            var directiveElement = { name: directiveName, value: { handler: function () { }, options: {} } };
            if (Object.prototype.hasOwnProperty.call(ctrl.D, directiveName)) {
                var directiveJson_1 = ctrl.D[directiveName];
                Object.keys(directiveJson_1).map(function (field) {
                    var directiveField = directiveJson_1[field];
                    if (directiveField.P) {
                        directives.RegisterDirectiveEvent(directiveName, new _Model_Component_EventData__WEBPACK_IMPORTED_MODULE_14__.EventData({
                            eventName: field,
                            handler: directiveField.H,
                            context: _this.context,
                            eventParameters: directiveField.P,
                            handlerLang: directiveField.HL
                        }));
                    }
                    else {
                        directiveElement.value.options = directiveElement.value.options || {};
                        directiveElement.value.options[field] = _this.evaluator.Evaluate({ script: directiveField.H, dataSource: _this.dataItem, context: _this.context, lang: _this.getLang({ ctrl: ctrl }) });
                    }
                });
            }
            var directiveFunctions = directives.GetEventBoundFunctions().eventFunctions;
            directiveElement.value.handler = directiveFunctions[directiveName];
            directives.RegisterDirective(directiveElement);
        };
        for (var directiveName in ctrl.D) {
            _loop_1(directiveName);
        }
    };
    RenderingManager.prototype.GenerateChildren = function (ctrl, props, parentCompCollection) {
        var _this = this;
        var _a;
        if (Object.keys(ctrl.C).length <= 0) {
            return null;
        }
        var retVal = { children: {} };
        var calcChildForKey = function (_a) {
            var _b;
            var key = _a.key, childJson = _a.childJson, parentCompCollection = _a.parentCompCollection, dataItem = _a.dataItem, props = _a.props;
            // This code block added for environment differences. If dataItem has no item you don't have to recreate it. 
            var hasScopedData = dataItem && Object.keys(dataItem).length == 0 ? false : true;
            if (retVal.children[key] && !hasScopedData) {
                return retVal.children[key];
            }
            if (props.itemKey && props.uniqueSlots) {
                childJson.c.forEach(function (childJson) {
                    var splittedID = childJson.P.ID.H.split("_q_");
                    childJson.P.ID.H = splittedID[0] + "_q_" + (dataItem === null || dataItem === void 0 ? void 0 : dataItem.item[props["itemKey"]]);
                });
            }
            if (_this.compareCompValue && parentCompCollection && _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.componentValueList[parentCompCollection.compType] &&
                ((_b = parentCompCollection.component) === null || _b === void 0 ? void 0 : _b[_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ComparisonEnum.compareValueField])) {
                _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.compareAndSetFields({ compJson: childJson, valueField: dataItem["item"], compareValue: parentCompCollection.component[_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ComparisonEnum.compareValueField], compareDataField: props["CompareDataField"], headerValue: dataItem["header"]["value"] });
            }
            var rm = new RenderingManager({
                pjson: childJson.c, dataItem: Object.assign({}, _this.dataItem, dataItem), context: _this.context, asChildType: childJson.cType, asChildName: key,
                controlDict: _this.controlDict,
                parentCompCollection: parentCompCollection,
                compareCompValue: _this.compareCompValue, dynamicCompIDSuffix: _this.dynamicCompIDSuffix, pageScripting: _this.pageScrtipting
            });
            rm.Render(rm.blockInfo.blockJsonIndex);
            retVal.children[key] = rm.controlList;
            parentCompCollection === null || parentCompCollection === void 0 ? void 0 : parentCompCollection.RootHistoryItem.ReCalculateCompInstDict();
            return rm.controlList;
        };
        for (var key in ctrl.C) {
            var childJson = ctrl.C[key];
            switch (childJson.cType) {
                case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.CType.child:
                    calcChildForKey({ key: key, childJson: childJson, parentCompCollection: parentCompCollection, props: props });
                    break;
                case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.CType.scopedSlot:
                    retVal.childrenCreators = (_a = retVal.childrenCreators) !== null && _a !== void 0 ? _a : {};
                    retVal.childrenCreators[key] = (function (closureObj) { return function (scopeObject) { return calcChildForKey({ key: closureObj.key, childJson: closureObj.childJson, parentCompCollection: closureObj.parentCompColl, dataItem: scopeObject, props: props }); }; })({ key: key, childJson: childJson, parentCompColl: parentCompCollection });
                    break;
                case _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.CType.slot:
                    calcChildForKey({ key: key, childJson: childJson, parentCompCollection: parentCompCollection, props: props });
                    break;
            }
        }
        return retVal;
    };
    RenderingManager.prototype.isEditMode = function () {
        var _a;
        return (_a = this.context.GetItemSingle(_src_Dory__WEBPACK_IMPORTED_MODULE_8__.Dory.ContextName)) === null || _a === void 0 ? void 0 : _a.isEditorInEditState;
    };
    RenderingManager.prototype.getComponentParentInstance = function () {
        var _a;
        return (_a = this.context.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_10__.RenderingContext.ContextName)) === null || _a === void 0 ? void 0 : _a.getCompParentInst();
    };
    RenderingManager.prototype.RenderRoot = function () {
        return __awaiter(this, void 0, void 0, function () {
            var ex_1, ex2_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 1, , 6]);
                        this.Render(this.blockInfo.blockJsonIndex);
                        return [3 /*break*/, 6];
                    case 1:
                        ex_1 = _a.sent();
                        if (!this.blockInfo.blockPromises) {
                            throw ex_1;
                        }
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, (0,_shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_5__.PromiseAllSettled)(this.blockInfo.blockPromises)];
                    case 3:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        ex2_1 = _a.sent();
                        return [3 /*break*/, 5];
                    case 5:
                        this.Render(this.blockInfo.blockJsonIndex);
                        return [3 /*break*/, 6];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    RenderingManager.prototype.Render = function (jsonIndexParam) {
        var _a;
        _shrimp_performance__WEBPACK_IMPORTED_MODULE_7__.PerfSingles.Instance().Start("RenderingManagerRender");
        for (var jsonIndex = jsonIndexParam; jsonIndex < this.pjson.length; jsonIndex++) {
            var ctrl = this.pjson[jsonIndex];
            _shrimp_performance__WEBPACK_IMPORTED_MODULE_7__.PerfSingles.Instance().Start(ctrl.T);
            if (!this.WillRender(ctrl)) {
                continue;
            }
            _shrimp_helpers_CompJsonMigrator__WEBPACK_IMPORTED_MODULE_1__.CompJsonMigrator.fixCtrlOldStyle(ctrl);
            var component = null;
            var children = void 0;
            var childrenCreators = void 0;
            var props = void 0;
            var attrs = void 0;
            var parentInstance = void 0;
            var compCollection = new _Model_Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_12__.ComponentCollection({
                asChildIndex: jsonIndex, compJson: ctrl, context: this.context, asChildType: this.asChildType, asChildName: this.asChildName,
                parentCompCollection: this.parentCompCollection, compareComponent: this.compareCompValue, dynamicCompIdSuffix: this.dynamicCompIDSuffix
            });
            var events = compCollection.events;
            var directiveFields = compCollection.directiveFields;
            var compClass = undefined;
            var text = undefined;
            try {
                var compRefCollection = { ref: compCollection };
                (_a = this.GenerateProps(ctrl, compRefCollection), props = _a.props, text = _a.text, compClass = _a.compClass, attrs = _a.attrs);
                if (this.compareCompValue && _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.componentValueList[compCollection.compType] && props.CompareDataField) {
                    _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.createChipComponentOnNonSlotChilds(ctrl, props);
                }
                var generatedChildren = this.GenerateChildren(ctrl, props, compCollection);
                children = generatedChildren === null || generatedChildren === void 0 ? void 0 : generatedChildren.children;
                childrenCreators = generatedChildren === null || generatedChildren === void 0 ? void 0 : generatedChildren.childrenCreators;
                this.GenerateEvents(ctrl, events);
                this.GenerateDirectives({ ctrl: ctrl, directives: directiveFields });
                parentInstance = this.getComponentParentInstance();
                compCollection.SetChildrenFields({ children: children, childrenCreators: childrenCreators });
                compRefCollection.ref = compCollection;
                events.SetOwner({ ownerComponent: compCollection });
                directiveFields.SetOwner({ ownerComponent: compCollection });
                component = this.compCommunicator.CreateComponent({
                    componentName: ctrl.T, props: props, events: events, context: this.context, asChildType: this.asChildType, asChildName: this.asChildName,
                    children: children,
                    parentInst: parentInstance,
                    childrenCreators: childrenCreators,
                    compCollection: compCollection,
                    compClass: compClass,
                    text: text,
                    attrs: attrs,
                    compareCompValue: this.compareCompValue, directives: directiveFields.GetDirectives()
                });
            }
            catch (e) {
                var dory = this.context.GetItemSingle(_src_Dory__WEBPACK_IMPORTED_MODULE_8__.Dory.ContextName);
                this.createErrorComp(ctrl, e, props = {}, events = new _Model_Component_EventCollection__WEBPACK_IMPORTED_MODULE_13__.EventCollection(dory), compCollection, parentInstance, component);
            }
            finally {
                if (compCollection) {
                    this.Chain({ ctrl: ctrl, compCollection: compCollection });
                }
            }
            _shrimp_performance__WEBPACK_IMPORTED_MODULE_7__.PerfSingles.Instance().End(ctrl.T, compCollection);
            var blockInfo = this.context.GetItemSingle(_Context_BlockInfo__WEBPACK_IMPORTED_MODULE_9__.BlockInfo.ContextName);
            if (blockInfo === null || blockInfo === void 0 ? void 0 : blockInfo.blockRender) {
                blockInfo.blockJsonIndex = jsonIndex + 1;
                blockInfo.blockRender = false;
                _shrimp_performance__WEBPACK_IMPORTED_MODULE_7__.PerfSingles.Instance().End("RenderingManagerRender");
                throw new Error("Render has been blocked");
            }
        }
        _shrimp_performance__WEBPACK_IMPORTED_MODULE_7__.PerfSingles.Instance().End("RenderingManagerRender");
    };
    /**
     * Error component property setter function
     * @param props Property dictionary that will be used for error component
     * @param componentName Which component has not rendered
     * @param componentID PropertyID of component that was not rendered
     * @param errorMessage Message that will be prompted
     * @returns void
     */
    RenderingManager.prototype.setErrorComponentProperties = function (_a) {
        var props = _a.props, componentName = _a.componentName, componentID = _a.componentID, errorMessage = _a.errorMessage;
        props["visible"] = true;
        props["componentName"] = componentName;
        props["componentID"] = componentID;
        props["errorMessage"] = errorMessage;
    };
    RenderingManager.prototype.Chain = function (_a) {
        var ctrl = _a.ctrl, compCollection = _a.compCollection;
        if (!compCollection) {
            return;
        }
        this.controlDict[ctrl.P.ID.H] = compCollection;
        this.controlList.push(compCollection);
    };
    /**
     * Create a new error component when a acomponent creation is failed in somehow
     * @param ctrl Failed component json
     * @param e Message of the error
     * @param props New error component properties
     * @param events New error component events
     * @param compCollection Will be created component collection
     * @param jsonIndex Index of failed render length
     * @param parentInstance Parent of the failed component
     * @param component Wİll be created component instance
     */
    RenderingManager.prototype.createErrorComp = function (ctrl, e, props, events, compCollection, parentInstance, component) {
        var _a, _b;
        var dory = this.context.GetItemSingle(_src_Dory__WEBPACK_IMPORTED_MODULE_8__.Dory.ContextName);
        var engineYamlLogType = (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_2__.Logger.Log({ logMessage: "control name : " + ctrl.T + ": " + e.message, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_2__.LogType.Error, error: e, minEngineLogLevel: engineYamlLogType });
        events.SetOwner({ ownerComponent: compCollection });
        this.setErrorComponentProperties({ props: props, componentName: ctrl.T, componentID: ctrl.P.ID.H, errorMessage: e.message });
        parentInstance = this.getComponentParentInstance();
        component = this.compCommunicator.CreateComponent({ componentName: "DError", props: props, events: events, context: this.context, asChildType: this.asChildType, asChildName: this.asChildName, parentInst: parentInstance, compCollection: compCollection, compareCompValue: false });
        compCollection.SetComponentCreatedFields({ createdComponent: component, keepAnEyeOnCreatedCompInst: true });
    };
    RenderingManager.ContextName = "RenderingManager";
    return RenderingManager;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/StoreManager.ts":
/*!******************************************************!*\
  !*** ../../common/dory/src/Managers/StoreManager.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StoreManager": () => (/* binding */ StoreManager)
/* harmony export */ });
/* harmony import */ var _Context_Store_BagStoreContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Context/Store/BagStoreContext */ "../../common/dory/src/Context/Store/BagStoreContext.ts");
/* harmony import */ var _Context_Store_GlobalStoreContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Context/Store/GlobalStoreContext */ "../../common/dory/src/Context/Store/GlobalStoreContext.ts");
/* harmony import */ var _Context_Store_PageStoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Context/Store/PageStoreContext */ "../../common/dory/src/Context/Store/PageStoreContext.ts");
/* harmony import */ var _Context_Store_SharedStoreContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Context/Store/SharedStoreContext */ "../../common/dory/src/Context/Store/SharedStoreContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Dory */ "../../common/dory/src/Dory.ts");





var StoreContextInfo = /** @class */ (function () {
    function StoreContextInfo(targetStoreContext, targetName) {
        this.targetStoreContext = targetStoreContext;
        this.targetName = targetName;
    }
    return StoreContextInfo;
}());
var StoreManager = /** @class */ (function () {
    function StoreManager(context) {
        this.context = context;
    }
    StoreManager.prototype.decideStoreContext = function (name) {
        var contextName;
        var newName;
        var targetContext = this.context;
        var dory = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_4__.Dory.ContextName);
        switch (name[0]) {
            case "$":
                contextName = _Context_Store_GlobalStoreContext__WEBPACK_IMPORTED_MODULE_1__.GlobalStoreContext.ContextName;
                newName = name.substring(1);
                break;
            default:
                contextName = _Context_Store_PageStoreContext__WEBPACK_IMPORTED_MODULE_2__.PageStoreContext.ContextName;
                newName = name;
                break;
            case "#":
                contextName = _Context_Store_BagStoreContext__WEBPACK_IMPORTED_MODULE_0__.BagStoreContext.ContextName;
                newName = name.substring(1);
                break;
            case "@":
                contextName = null;
                newName = name.substring(1);
                break;
            case "&":
                contextName = _Context_Store_SharedStoreContext__WEBPACK_IMPORTED_MODULE_3__.SharedStoreContext.ContextName;
                targetContext = dory.GetInterDoryContext();
                newName = name.substring(1);
                break;
        }
        var targetStoreContext;
        if (contextName) {
            targetStoreContext = targetContext.GetItemSingle(contextName);
        }
        else {
            var dory_1 = targetContext.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_4__.Dory.ContextName);
            targetStoreContext = dory_1 === null || dory_1 === void 0 ? void 0 : dory_1.shellConfigs.storeAccess;
        }
        var sci = new StoreContextInfo(targetStoreContext, newName);
        return sci;
    };
    StoreManager.prototype.set = function (name, value) {
        var storeContext = this.decideStoreContext(name);
        storeContext.targetStoreContext.set(storeContext.targetName, value);
    };
    StoreManager.prototype.get = function (name) {
        var storeContext = this.decideStoreContext(name);
        return storeContext.targetStoreContext.get(storeContext.targetName);
    };
    StoreManager.prototype.delete = function (name) {
        var storeContext = this.decideStoreContext(name);
        storeContext.targetStoreContext.delete(storeContext.targetName);
    };
    StoreManager.prototype.getAll = function (name) {
        var _a, _b;
        var storeContext = this.decideStoreContext(name);
        return (_b = (_a = storeContext.targetStoreContext).getAll) === null || _b === void 0 ? void 0 : _b.call(_a);
    };
    StoreManager.prototype.bulkSet = function (items) {
        var _this = this;
        Object.keys(items).forEach(function (key) { return _this.set(key, items[key]); });
    };
    StoreManager.prototype.getTargetContextItems = function (name) {
        var storeContext = this.decideStoreContext(name);
        return storeContext.targetStoreContext["contextItems"];
    };
    return StoreManager;
}());



/***/ }),

/***/ "../../common/dory/src/Managers/ValidationManager.ts":
/*!***********************************************************!*\
  !*** ../../common/dory/src/Managers/ValidationManager.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ValidationManager": () => (/* binding */ ValidationManager)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _shrimp_helpers_validationHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shrimp/helpers/validationHelper */ "../../common/shrimp/helpers/validationHelper.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shrimp/interfaces/ComponentInterfaces/IAlert */ "../../common/shrimp/interfaces/ComponentInterfaces/IAlert.ts");
/* harmony import */ var _Context_ScopeContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Context/ScopeContext */ "../../common/dory/src/Context/ScopeContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _HistoryItemBasedLRManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./HistoryItemBasedLRManager */ "../../common/dory/src/Managers/HistoryItemBasedLRManager.ts");
/* harmony import */ var _HistoryManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
var __values = (undefined && undefined.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};








var ValidationManager = /** @class */ (function () {
    function ValidationManager(currentContext) {
        this.currentContext = currentContext;
        this.dory = this.currentContext.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_5__.Dory.ContextName);
        this.historyItemBasedLRManager = this.currentContext.GetItemSingle(_HistoryItemBasedLRManager__WEBPACK_IMPORTED_MODULE_6__.HistoryItemBasedLRManager.ContextName);
    }
    ValidationManager.prototype.validate = function (compId, displayAlertBox, displayError) {
        var compColl = this.getComponentCollectionbyID(compId);
        if (!compColl) {
            return;
        }
        if (this.isCreatorComp(compColl)) {
            compColl = this.getCollectionbyParentID(compId);
        }
        var isValid = true;
        this.iterateToChild(compColl, function (item) {
            if (item.component && !item.component.validate && item.component.validationRefs && item.component.validationRefs().length > 0) {
                var components = item.component.validationRefs();
                components.forEach(function (component) {
                    if (component && component.validate) {
                        if (!component.validate(true)) {
                            isValid = false;
                        }
                    }
                });
            }
            else if (item.component && item.component.validate) {
                if (!item.component.validate(true)) {
                    isValid = false;
                }
            }
            return true;
        });
        displayAlertBox = displayAlertBox !== null && displayAlertBox !== void 0 ? displayAlertBox : true;
        if (!isValid && displayAlertBox) {
            this.showAlertBox();
        }
        return isValid;
    };
    ValidationManager.prototype.validateAll = function (displayAlertBox, displayError) {
        var _this = this;
        var controlDict = this.getControlDict();
        if (controlDict) {
            var isValid_1 = true;
            var traverse_1 = function (control, compID) {
                var e_1, _a, e_2, _b;
                if (control instanceof Array) {
                    try {
                        for (var control_1 = __values(control), control_1_1 = control_1.next(); !control_1_1.done; control_1_1 = control_1.next()) {
                            var controlMultiple = control_1_1.value;
                            traverse_1(controlMultiple, compID);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (control_1_1 && !control_1_1.done && (_a = control_1.return)) _a.call(control_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                else {
                    if (control.validationRefs && !control.validate && control.validationRefs().length > 0) {
                        try {
                            for (var _c = __values(control.validationRefs()), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var controlMultiple = _d.value;
                                traverse_1(controlMultiple, compID);
                            }
                        }
                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                        finally {
                            try {
                                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                            }
                            finally { if (e_2) throw e_2.error; }
                        }
                    }
                    else if (control.validate && _this.isComponentValid(control)) {
                        if (!control.validate(true)) {
                            isValid_1 = false;
                        }
                    }
                }
            };
            Object.keys(controlDict).filter(function (compID) { return controlDict[compID].rules; }).map(function (component) {
                var control = controlDict[component];
                traverse_1(control, component);
            });
            displayAlertBox = displayAlertBox !== null && displayAlertBox !== void 0 ? displayAlertBox : true;
            if (!isValid_1 && displayAlertBox) {
                this.showAlertBox();
            }
            return isValid_1;
        }
    };
    ValidationManager.prototype.resetValidation = function (compId) {
        var compColl = this.getComponentCollectionbyID(compId);
        if (!compColl) {
            return;
        }
        if (this.isCreatorComp(compColl)) {
            compColl = this.getCollectionbyParentID(compId);
        }
        this.iterateToChild(compColl, function (item) {
            if (item.component && !item.component.resetValidation && item.component.validationRefs && item.component.validationRefs().length > 0) {
                var components = item.component.validationRefs();
                components.forEach(function (component) {
                    if (component.resetValidation) {
                        component.resetValidation();
                    }
                });
            }
            else if (item.component && item.component.resetValidation) {
                item.component.resetValidation();
            }
            return true;
        });
    };
    ValidationManager.prototype.reset = function (compId) {
        var _this = this;
        var compColl = this.getComponentCollectionbyID(compId);
        if (!compColl) {
            return;
        }
        if (this.isCreatorComp(compColl)) {
            compColl = this.getCollectionbyParentID(compId);
        }
        this.iterateToChild(compColl, function (item) {
            var _a, _b;
            if (item.component && !item.component.reset && item.component.validationRefs && item.component.validationRefs().length > 0) {
                var components = item.component.validationRefs();
                components.forEach(function (component) {
                    if (component.reset) {
                        component.reset();
                    }
                });
            }
            else if (item.component && item.component.reset) {
                if (item.component.type == 'time') {
                    (_b = (_a = _this.dory.shellConfigs).resetTimeTextField) === null || _b === void 0 ? void 0 : _b.call(_a, item.component);
                }
                item.component.reset();
            }
            return true;
        });
    };
    /**
     * @description This method checks if the parent component has components such as custom component, rendering component.
     * @param compColl
     * @returns boolean
     */
    ValidationManager.prototype.isCreatorComp = function (compColl) {
        return compColl[0].GetDoryJr() ? true : false;
    };
    ValidationManager.prototype.isComponentValid = function (component) {
        return !component.disabled && component.visible;
    };
    /**
     * This method returns control dictionary with subs.
     * @returns controlDict
     */
    ValidationManager.prototype.getControlDict = function () {
        var _a;
        var historyItem = (_a = this.currentContext.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_7__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last();
        if (!historyItem) {
            return null;
        }
        var compInstDict = Object.assign({}, historyItem.GetCompInstDict());
        var subCollection = this.dory.GetComponentSubCollection();
        if (subCollection && compInstDict) {
            subCollection.forEach(function (item) {
                if (item.component) {
                    compInstDict[item.compId] = item.component;
                }
            });
        }
        return compInstDict;
    };
    /**
     * @description This method returns DoryJr child components.
     * @param compId
     * @returns compCollection
     */
    ValidationManager.prototype.getCollectionbyParentID = function (compId) {
        var _a;
        var historyItem = (_a = this.currentContext.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_7__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last();
        var compCollection;
        var doryJrs = historyItem === null || historyItem === void 0 ? void 0 : historyItem.GetDoryJrs();
        if (doryJrs) {
            doryJrs.forEach(function (doryJr) {
                var _a, _b, _c;
                var scopeProps = (_a = doryJr.ContextJr.GetItemSingle(_Context_ScopeContext__WEBPACK_IMPORTED_MODULE_4__.ScopeContext.ContextName)) === null || _a === void 0 ? void 0 : _a.GetProps();
                if (scopeProps && scopeProps["ID"] == compId) {
                    compCollection = (_c = (_b = doryJr.ContextJr.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_7__.HistoryManager.ContextName)) === null || _b === void 0 ? void 0 : _b.currentLevel().last()) === null || _c === void 0 ? void 0 : _c.controlDict;
                }
            });
        }
        return Object.values(compCollection);
    };
    /**
     * This method returns component colleciton by id. If it is not present in the parent, it looks subs. (Actually getComponentCollectionByIdProperty should have called but it is empty?!?!?!)
     * @param compID
     * @returns Component Collection
     */
    ValidationManager.prototype.getComponentCollectionbyID = function (compId) {
        var _a;
        var historyItem = (_a = this.currentContext.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_7__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last();
        if (!historyItem) {
            return null;
        }
        var compColl = (historyItem === null || historyItem === void 0 ? void 0 : historyItem.controlDict[compId]) || this.dory.GetSubComponentCollectionByID(compId);
        return [compColl];
    };
    ValidationManager.prototype.iterateToChild = function (controlList, callback) {
        var _this = this;
        controlList.forEach(function (item) {
            var cbretVal = callback(item);
            var children = item.children;
            if (cbretVal !== true || !children) {
                return;
            }
            Object.keys(children).forEach(function (key) {
                var _a, _b;
                var currentChildren = children[key];
                if (currentChildren instanceof Function) {
                    var dory = _this.currentContext.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_5__.Dory.ContextName);
                    var engineYamlLogType = (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
                    _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "Scoped Slot children should have been resolved by now child: " + key, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: engineYamlLogType });
                    return;
                }
                _this.iterateToChild(currentChildren, callback);
            });
        });
    };
    ;
    ValidationManager.prototype.showAlertBox = function () {
        var dory = this.currentContext.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_5__.Dory.ContextName);
        var historyManager = this.currentContext.GetItemSingle(_HistoryManager__WEBPACK_IMPORTED_MODULE_7__.HistoryManager.ContextName);
        var currentPageId = historyManager.getRootHM().currentLevel().last().pageId;
        var shellGlobalMethods = dory === null || dory === void 0 ? void 0 : dory.shellConfigs.shellGlobalMethods;
        var alertTitle = this.dory.GetLRType() == "tr-TR" ? "Kontrol edilmesi gereken alanlar var." : "There are items that needs your attention.";
        var errorText = this.dory.GetLRType() == "tr-TR" ? "Lütfen alanları kontrol ediniz." : "Please check the fields.";
        if (shellGlobalMethods && shellGlobalMethods.alert) {
            shellGlobalMethods.alert({ title: alertTitle, category: _shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__.AlertType.Error, error: { errorMessage: errorText, errorCode: 'notValidErrDefaultMessage', errorSource: _shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__.ErrorSource.Validation } }, { currentPageId: currentPageId });
        }
    };
    ValidationManager.prototype.required = function (message) {
        var _a, _b;
        var defaultMessage = (_b = (_a = this.historyItemBasedLRManager) === null || _a === void 0 ? void 0 : _a.GetResource({ key: "validationRequiredDefaultMessage", returnKey: false })) !== null && _b !== void 0 ? _b : (this.dory.GetLRType() == "tr-TR" ? "Lütfen giriş yapınız." : "Please fill out this field.");
        return function (value) {
            var tHelper = new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__.TypeHelper();
            if (value === undefined || value === null || value instanceof Array && value.length == 0) {
                return message ? message : defaultMessage;
            }
            else if (tHelper.isObject(value)) {
                return Object.keys(value).length > 0 ? true : message ? message : defaultMessage;
            }
            else if (tHelper.isNumber(value)) {
                return true;
            }
            else if (tHelper.isFile(value)) { //VFileInput
                return value.size && value.size > 0 ? true : message ? message : defaultMessage;
            }
            else {
                return value.length > 0 ? true : message ? message : defaultMessage;
            }
        };
    };
    ValidationManager.prototype.minLength = function (minLength, message) {
        var _a, _b;
        var defaultMessage = (_b = (_a = this.historyItemBasedLRManager) === null || _a === void 0 ? void 0 : _a.GetResource({ key: "validationMinLengthDefaultMessage", dataSource: { minLength: minLength }, returnKey: false })) !== null && _b !== void 0 ? _b : (this.dory.GetLRType() == "tr-TR" ? "En az " + minLength + " hane giri\u015F yap\u0131n\u0131z." : "Please enter at least " + minLength + " digits.");
        return function (value) {
            return value && value.length >= minLength ? true : message ? message : defaultMessage;
        };
    };
    ValidationManager.prototype.maxLength = function (maxLength, message) {
        var _a, _b;
        var defaultMessage = (_b = (_a = this.historyItemBasedLRManager) === null || _a === void 0 ? void 0 : _a.GetResource({ key: "validationMaxLengthDefaultMessage", dataSource: { maxLength: maxLength }, returnKey: false })) !== null && _b !== void 0 ? _b : (this.dory.GetLRType() == "tr-TR" ? "En fazla " + maxLength + " hane giri\u015F yap\u0131n\u0131z." : "Please enter up to " + maxLength + " digits.");
        return function (value) {
            return value && value.length <= maxLength ? true : message ? message : defaultMessage;
        };
    };
    ValidationManager.prototype.email = function (message) {
        var _a, _b;
        var defaultMessage = (_b = (_a = this.historyItemBasedLRManager) === null || _a === void 0 ? void 0 : _a.GetResource({ key: "validationEmailDefaultMessage", returnKey: false })) !== null && _b !== void 0 ? _b : (this.dory.GetLRType() == "tr-TR" ? "L\u00FCtfen e-mail format\u0131n\u0131 kontrol ediniz." : "Please check the e-mail format.");
        return function (value) {
            if (!value) {
                return message ? message : defaultMessage;
            }
            var emails = value.split(/,|;/);
            //let reg = ^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$;
            var reg = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,3}$/;
            var control = true;
            emails.forEach(function (val) {
                if (!reg.test(val)) {
                    control = false;
                    return;
                }
            });
            return control ? true : message ? message : defaultMessage;
        };
    };
    ValidationManager.prototype.iban = function (message) {
        var _a, _b;
        var defaultMessage = (_b = (_a = this.historyItemBasedLRManager) === null || _a === void 0 ? void 0 : _a.GetResource({ key: "validationIbanDefaultMessage", returnKey: false })) !== null && _b !== void 0 ? _b : (this.dory.GetLRType() == "tr-TR" ? "IBAN format\u0131n\u0131 kontrol ediniz." : "Please check the IBAN format");
        return function (value) {
            if (value) {
                var codeLengths = {
                    AD: 24, AE: 23, AL: 28, AT: 20, AZ: 28, BA: 20, BE: 16, BG: 22, BH: 22, BR: 29, CH: 21, CR: 21, CY: 28, CZ: 24,
                    DE: 22, DK: 18, DO: 28, EE: 20, ES: 24, LC: 30, FI: 18, FO: 18, FR: 27, GB: 22, GI: 23, GL: 18, GR: 27, GT: 28,
                    HR: 21, HU: 28, IE: 22, IL: 23, IS: 26, IT: 27, JO: 30, KW: 30, KZ: 20, LB: 28, LI: 21, LT: 20, LU: 20, LV: 21,
                    MC: 27, MD: 24, ME: 22, MK: 19, MR: 27, MT: 31, MU: 30, NL: 18, NO: 15, PK: 24, PL: 28, PS: 29, PT: 25, QA: 29,
                    RO: 24, RS: 22, SA: 24, SE: 24, SI: 19, SK: 24, SM: 27, TN: 24, TR: 26
                };
                var iban = value.toUpperCase('tr').replace(/[^A-Z0-9]/g, '');
                var code = iban.match(/^([A-Z]{2})(\d{2})([A-Z\d]+)$/);
                var digits = void 0;
                if (!code || iban.length !== codeLengths[code[1]]) {
                    return message ? message : defaultMessage;
                }
            }
        };
    };
    ValidationManager.prototype.regex = function (regexVal, message) {
        return function (value) {
            return regexVal.test(value) ? true : message;
        };
    };
    ValidationManager.prototype.tckn = function (message) {
        return function (value) {
            return new _shrimp_helpers_validationHelper__WEBPACK_IMPORTED_MODULE_2__.ValidationHelper().checkTCKN(value) ? true : (message ? message : false);
        };
    };
    ValidationManager.prototype.vkn = function (message) {
        return function (value) {
            return new _shrimp_helpers_validationHelper__WEBPACK_IMPORTED_MODULE_2__.ValidationHelper().checkVKN(value) ? true : (message ? message : false);
        };
    };
    return ValidationManager;
}());



/***/ }),

/***/ "../../common/dory/src/Model/Component/ComponentCollection.ts":
/*!********************************************************************!*\
  !*** ../../common/dory/src/Model/Component/ComponentCollection.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentCollection": () => (/* binding */ ComponentCollection)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/hook */ "../../common/shrimp/helpers/hook.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/interfaces/ComponentInterfaces/ICompJson */ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Managers/HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
/* harmony import */ var _DirectiveCollection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DirectiveCollection */ "../../common/dory/src/Model/Component/DirectiveCollection.ts");
/* harmony import */ var _EventCollection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EventCollection */ "../../common/dory/src/Model/Component/EventCollection.ts");






var ComponentCollection = /** @class */ (function () {
    function ComponentCollection(_a) {
        var compJson = _a.compJson, context = _a.context, _b = _a.asChildType, asChildType = _b === void 0 ? _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_1__.CType.child : _b, asChildName = _a.asChildName, asChildIndex = _a.asChildIndex, parentCompCollection = _a.parentCompCollection, _c = _a.compareComponent, compareComponent = _c === void 0 ? true : _c, dynamicCompIdSuffix = _a.dynamicCompIdSuffix;
        var _d, _e;
        this._componentVisibility = true;
        this.compareComponent = false;
        var dory = context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_2__.Dory.ContextName);
        this.events = new _EventCollection__WEBPACK_IMPORTED_MODULE_5__.EventCollection(dory);
        this.directiveFields = new _DirectiveCollection__WEBPACK_IMPORTED_MODULE_4__.DirectiveCollection(dory);
        this.compId = (compJson === null || compJson === void 0 ? void 0 : compJson.P.ID.H) || "";
        this.compEID = (compJson === null || compJson === void 0 ? void 0 : compJson._Editor.eID) || "";
        this.compType = (compJson === null || compJson === void 0 ? void 0 : compJson.T) || "";
        this.context = context;
        this.asChildIndex = asChildIndex;
        this.childrenType = compJson ? compJson.O.cType : undefined;
        this.asChildType = asChildType;
        this.asChildName = asChildName;
        this.collectionRef = { ref: this };
        this.parentCompCollection = parentCompCollection;
        this.class = (_d = compJson === null || compJson === void 0 ? void 0 : compJson.P.class) === null || _d === void 0 ? void 0 : _d.H;
        this.compDomClass = (_e = compJson === null || compJson === void 0 ? void 0 : compJson.O) === null || _e === void 0 ? void 0 : _e.compDomClasses;
        this.createdFieldsHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_0__.Hook("CreatedFieldsHook");
        this.dynamicCompIdSuffix = dynamicCompIdSuffix;
        this.rootHistoryItem = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_3__.HistoryManager.ContextName).getRootHM().currentLevel().last();
    }
    ComponentCollection.IterateToChild = function (controlListOrItem, callback, options) {
        if (options === void 0) { options = {}; }
        var traverse = function (controlList) {
            var _a, _b;
            for (var index = controlList.length - 1; index >= 0; index--) {
                var item = controlList[index];
                if (callback(item) === false) {
                    return false;
                }
                if (item.children) {
                    for (var key in item.children) {
                        if (Object.prototype.hasOwnProperty.call(item.children, key)) {
                            var currentChildren = item.children[key];
                            if (currentChildren instanceof Function) {
                                return false;
                            }
                            if (traverse(currentChildren) === false) {
                                return false;
                            }
                        }
                    }
                    ;
                }
                if (options === null || options === void 0 ? void 0 : options.iterateDoryJrs) {
                    var jrComps = (_b = (_a = item.GetDoryJr()) === null || _a === void 0 ? void 0 : _a.GetLastHistory()) === null || _b === void 0 ? void 0 : _b.GetComponentList();
                    if (jrComps) {
                        if (traverse(jrComps) === false) {
                            return false;
                        }
                    }
                }
            }
        };
        // let clonedObject = new TypeHelper().cloneObject(controlListOrItem);
        if (!(controlListOrItem instanceof Array)) {
            controlListOrItem = [controlListOrItem];
        }
        traverse(controlListOrItem);
    };
    ;
    Object.defineProperty(ComponentCollection.prototype, "RootHistoryItem", {
        get: function () {
            return this.rootHistoryItem;
        },
        enumerable: false,
        configurable: true
    });
    ComponentCollection.prototype.SetChildrenFields = function (_a) {
        var children = _a.children, childrenCreators = _a.childrenCreators;
        this.children = children;
        this.childrenCreators = childrenCreators;
    };
    ComponentCollection.prototype.SetComponentCreatedFields = function (_a) {
        var _b, _c, _d, _e;
        var createdComponent = _a.createdComponent, _f = _a.keepAnEyeOnCreatedCompInst, keepAnEyeOnCreatedCompInst = _f === void 0 ? false : _f;
        if (keepAnEyeOnCreatedCompInst && !createdComponent.instance) {
            this.compInstanceSetCb = function (compInstance) { return createdComponent.instance = compInstance; };
        }
        if (createdComponent.instance) {
            (_b = this.compInstanceSetCb) === null || _b === void 0 ? void 0 : _b.call(this, createdComponent.instance);
        }
        if (this.domElement == createdComponent.el) {
            createdComponent.el = undefined;
        } //componentInstance setter on vNode "value.$mount()" might have changed $el. If not changed mark $el as unchanged (undef)
        this.component = createdComponent.instance || this.component;
        this.domElement = createdComponent.el || this.domElement;
        this.vDomElement = createdComponent.vel || this.vDomElement;
        this.compGroupType = createdComponent.compGroupType;
        this.createdFieldsHook.triggerer(createdComponent);
        this.lockedFields = createdComponent.lockedFields;
        //reApply visibility when instance is changed and comp should be invisible
        if (createdComponent.instance && !this.componentVisibility) {
            this.componentVisibility = false;
        }
        (_e = (_c = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_2__.Dory.ContextName)) === null || _c === void 0 ? void 0 : (_d = _c.shellConfigs).createComponentQValue) === null || _e === void 0 ? void 0 : _e.call(_d, this);
    };
    Object.defineProperty(ComponentCollection.prototype, "componentVisibility", {
        get: function () {
            return this._componentVisibility;
        },
        set: function (componentVisibility) {
            var _a, _b, _c;
            if (((_a = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_2__.Dory.ContextName)) === null || _a === void 0 ? void 0 : _a.isEditorInEditState) == true) {
                return;
            }
            if ((_b = this.lockedFields) === null || _b === void 0 ? void 0 : _b.visible) {
                return;
            }
            this._componentVisibility = componentVisibility;
            (_c = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_2__.Dory.ContextName)) === null || _c === void 0 ? void 0 : _c.shellConfigs.setVisibility(this, componentVisibility);
        },
        enumerable: false,
        configurable: true
    });
    ComponentCollection.prototype.WatchCreatedFields = function (cb) {
        this.createdFieldsHook.subscribe(cb);
    };
    ComponentCollection.prototype.SetInitialProps = function (props) {
        if (props.visible === false) {
            this._componentVisibility = false;
        }
    };
    /**
     * If component makes an internal rendering for a QJSON (ex: customComponent | renderingComponent) retrieves components internal doryJr.
     * Assumed max 1 doryJr
     */
    ComponentCollection.prototype.GetDoryJr = function () {
        return this.doryJr;
    };
    ComponentCollection.prototype.SetDoryJr = function (doryJr) {
        this.doryJr = doryJr;
    };
    ComponentCollection.prototype.GetCompUID = function () {
        var compUIDPrefix = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_3__.HistoryManager.ContextName).GetCompUIDPrefix();
        if (!compUIDPrefix) {
            return this.compId;
        }
        return compUIDPrefix + "." + this.compId;
    };
    return ComponentCollection;
}());



/***/ }),

/***/ "../../common/dory/src/Model/Component/DirectiveCollection.ts":
/*!********************************************************************!*\
  !*** ../../common/dory/src/Model/Component/DirectiveCollection.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DirectiveCollection": () => (/* binding */ DirectiveCollection)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _Managers_Evaluator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Managers/Evaluator */ "../../common/dory/src/Managers/Evaluator.ts");


var DirectiveCollection = /** @class */ (function () {
    function DirectiveCollection(dory) {
        this.directiveEventDict = {};
        this.dory = dory;
    }
    DirectiveCollection.prototype.SetOwner = function (_a) {
        var _this = this;
        var ownerComponent = _a.ownerComponent;
        this.ownerComponent = ownerComponent;
        Object.keys(this.directiveEventDict).map(function (directiveName) {
            var _a, _b;
            for (var key in _this.directiveEventDict[directiveName]) {
                (_b = (_a = _this.directiveEventDict[directiveName]) === null || _a === void 0 ? void 0 : _a[key]) === null || _b === void 0 ? void 0 : _b.SetOwner({ ownerComponent: _this.ownerComponent });
            }
        });
    };
    DirectiveCollection.prototype.Trigger = function (_a) {
        var _this = this;
        var _b, _c;
        var directiveName = _a.directiveName, handlerName = _a.handlerName, _d = _a.eventArguments, eventArguments = _d === void 0 ? [] : _d;
        var targetEvent = this.directiveEventDict[directiveName];
        if (!targetEvent) {
            var engineYamlLogType = (_c = (_b = this.dory.shellConfigs).getMinEngineLogType) === null || _c === void 0 ? void 0 : _c.call(_b);
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "no directive named " + directiveName + " on " + this.ownerComponent.compId + " type " + this.ownerComponent.compType, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
            return null;
        }
        var evaluator = new _Managers_Evaluator__WEBPACK_IMPORTED_MODULE_1__.Evaluator();
        Object.keys(targetEvent).map(function (handlerName) {
            var dataSource;
            //from comp code
            if (eventArguments instanceof Array) {
                //possible vue fix :/
                dataSource = _this.MatchEventDataToArguments({ eventData: targetEvent[handlerName], eventArguments: eventArguments });
            }
            else {
                dataSource = eventArguments;
            }
            dataSource = Object.assign({}, targetEvent.scopeObject, dataSource);
            var retVal = targetEvent[handlerName].Trigger({ evaluator: evaluator, dataSource: dataSource });
            return retVal;
        });
    };
    DirectiveCollection.prototype.GenerateTriggerFunction = function (_a) {
        var directiveName = _a.directiveName, handlerName = _a.handlerName;
        var self = this;
        return function () {
            var eventArguments = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                eventArguments[_i] = arguments[_i];
            }
            return self.Trigger({ directiveName: directiveName, handlerName: handlerName, eventArguments: eventArguments });
        };
    };
    DirectiveCollection.prototype.GetEventBoundFunctions = function () {
        var _this = this;
        var eventFunctions = {};
        var targetDict;
        Object.keys(this.directiveEventDict).map(function (directiveName) {
            targetDict = eventFunctions;
            Object.keys(_this.directiveEventDict[directiveName]).map(function (handlerName) {
                targetDict[directiveName] = _this.GenerateTriggerFunction({ directiveName: directiveName, handlerName: handlerName });
            });
        });
        return { eventFunctions: eventFunctions };
    };
    DirectiveCollection.prototype.MatchEventDataToArguments = function (_a) {
        var eventData = _a.eventData, eventArguments = _a.eventArguments;
        if (!eventData.eventParams) {
            return null;
        }
        var loopLimit = eventData.eventParams.length < eventArguments.length ? eventData.eventParams.length : eventArguments.length;
        var retVal = {};
        for (var i = 0; i < loopLimit; i++) {
            var paramName = eventData.eventParams[i].name;
            retVal[paramName] = eventArguments[i];
        }
        return retVal;
    };
    /**
     * Collect all the event as a directive
     * @param directiveName Directive name that will be registered with its name
     * @param eventData Directive event that will be added on dictionary
     */
    DirectiveCollection.prototype.RegisterDirectiveEvent = function (directiveName, eventData) {
        var _a;
        this.directiveEventDict[directiveName] = (_a = {}, _a[eventData.eventName] = eventData, _a);
    };
    /**
     * Register a directive on the lise
     * @param directive Current directive that will be added on the list
     */
    DirectiveCollection.prototype.RegisterDirective = function (directive) {
        this.directives = this.directives || [];
        this.directives.push(directive);
    };
    /**
     * Return all the directives on this collecyion
     */
    DirectiveCollection.prototype.GetDirectives = function () {
        return this.directives;
    };
    return DirectiveCollection;
}());



/***/ }),

/***/ "../../common/dory/src/Model/Component/EventCollection.ts":
/*!****************************************************************!*\
  !*** ../../common/dory/src/Model/Component/EventCollection.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventCollection": () => (/* binding */ EventCollection)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _shrimp_performance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shrimp/performance */ "../../common/shrimp/performance.ts");
/* harmony import */ var _Managers_Evaluator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Managers/Evaluator */ "../../common/dory/src/Managers/Evaluator.ts");




var EventCollection = /** @class */ (function () {
    function EventCollection(dory) {
        this.eventDict = {};
        this.dory = dory;
        this.ownerComponent = null;
    }
    EventCollection.prototype.RegisterEvent = function (_a) {
        var eventData = _a.eventData;
        this.eventDict[eventData.eventName] = eventData;
    };
    EventCollection.prototype.SetOwner = function (_a) {
        var ownerComponent = _a.ownerComponent;
        this.ownerComponent = ownerComponent;
        for (var key in this.eventDict) {
            this.eventDict[key].SetOwner({ ownerComponent: this.ownerComponent });
        }
    };
    EventCollection.prototype.Trigger = function (_a) {
        var _b, _c;
        var eventName = _a.eventName, _d = _a.eventArguments, eventArguments = _d === void 0 ? [] : _d;
        var targetEvent = this.eventDict[eventName];
        if (!targetEvent) {
            var engineYamlLogType = (_c = (_b = this.dory.shellConfigs).getMinEngineLogType) === null || _c === void 0 ? void 0 : _c.call(_b);
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "no event named " + eventName + " on " + this.ownerComponent.compId + " type " + this.ownerComponent.compType, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
            return null;
        }
        _shrimp_performance__WEBPACK_IMPORTED_MODULE_2__.PerfSingles.Instance().Start(this.ownerComponent.compId + "." + eventName);
        var evaluator = new _Managers_Evaluator__WEBPACK_IMPORTED_MODULE_3__.Evaluator();
        var dataSource;
        if (!targetEvent.customEvent) {
            //from comp code
            if (eventArguments instanceof Array) {
                //possible vue fix :/
                dataSource = this.MatchEventDataToArguments({ eventData: targetEvent, eventArguments: eventArguments });
            }
            else {
                dataSource = eventArguments;
            }
        }
        else {
            //MM.trigger or (vue emit :()
            if (new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__.TypeHelper().isArray(eventArguments)) {
                //possible vue fix :/
                dataSource = eventArguments[0];
            }
            else {
                //MM.trigger
                dataSource = eventArguments;
            }
        }
        dataSource = Object.assign({}, targetEvent.scopeObject, dataSource);
        var retVal = targetEvent.Trigger({ evaluator: evaluator, dataSource: dataSource });
        _shrimp_performance__WEBPACK_IMPORTED_MODULE_2__.PerfSingles.Instance().End(this.ownerComponent.compId + "." + eventName, targetEvent);
        return retVal;
    };
    EventCollection.prototype.GenerateTriggerFunction = function (_a) {
        var eventName = _a.eventName;
        var self = this;
        return function () {
            var eventArguments = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                eventArguments[_i] = arguments[_i];
            }
            return self.Trigger({ eventName: eventName, eventArguments: eventArguments });
        };
    };
    EventCollection.prototype.GetExternalEventBoundFunctions = function () {
        var _this = this;
        var eventFunctions = {};
        Object.keys(this.eventDict).map(function (key) { return _this.eventDict[key]; }).filter(function (event) { return event.externalVisible; }).forEach(function (event) {
            eventFunctions[event.eventName] = _this.GenerateTriggerFunction({ eventName: event.eventName });
        });
        return eventFunctions;
    };
    EventCollection.prototype.GetEventBoundFunctions = function () {
        var eventFunctions = {};
        var propertyEventFunctions = {};
        var targetDict;
        for (var key in this.eventDict) {
            targetDict = this.eventDict[key].propertyEvent ? propertyEventFunctions : eventFunctions;
            targetDict[key] = this.GenerateTriggerFunction({ eventName: key });
        }
        return { eventFunctions: eventFunctions, propertyEventFunctions: propertyEventFunctions };
    };
    EventCollection.prototype.MatchEventDataToArguments = function (_a) {
        var _b, _c;
        var eventData = _a.eventData, eventArguments = _a.eventArguments;
        if (!eventData.eventParams) {
            return null;
        }
        var loopLimit = eventData.eventParams.length < eventArguments.length ? eventData.eventParams.length : eventArguments.length;
        if (eventData.eventParams.length != eventArguments.length) {
            var log = "event (" + eventData.eventName + ") has " + eventData.eventParams.length + " parameters but called with " + eventArguments.length + " arguments. Go on with " + loopLimit + " parameters";
            var engineYamlLogType = (_c = (_b = this.dory.shellConfigs).getMinEngineLogType) === null || _c === void 0 ? void 0 : _c.call(_b);
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: log, minEngineLogLevel: engineYamlLogType });
        }
        var retVal = {};
        for (var i = 0; i < loopLimit; i++) {
            var paramName = eventData.eventParams[i].name;
            retVal[paramName] = eventArguments[i];
        }
        return retVal;
    };
    return EventCollection;
}());



/***/ }),

/***/ "../../common/dory/src/Model/Component/EventData.ts":
/*!**********************************************************!*\
  !*** ../../common/dory/src/Model/Component/EventData.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventData": () => (/* binding */ EventData)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/QJsonHelper */ "../../common/shrimp/helpers/QJsonHelper.ts");
/* harmony import */ var _shrimp_performance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/performance */ "../../common/shrimp/performance.ts");
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _Managers_QPromise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Managers/QPromise */ "../../common/dory/src/Managers/QPromise.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





var EventData = /** @class */ (function () {
    function EventData(_a) {
        var _this = this;
        var eventName = _a.eventName, handler = _a.handler, context = _a.context, _b = _a.eventParameters, eventParameters = _b === void 0 ? undefined : _b, immediate = _a.immediate, customEvent = _a.customEvent, propertyEvent = _a.propertyEvent, _c = _a.triggerOrder, triggerOrder = _c === void 0 ? null : _c, externalVisible = _a.externalVisible, handlerLang = _a.handlerLang, scopeObject = _a.scopeObject;
        this.handler = handler;
        this.eventParams = _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_0__.QJsonHelper.ParseParameters(eventParameters, handlerLang);
        this.eventName = eventName;
        this.immediate = immediate == undefined ? false : immediate;
        this.customEvent = customEvent || false;
        this.propertyEvent = propertyEvent || false;
        this.triggerOrder = triggerOrder;
        this.creationContext = context;
        this.externalVisible = externalVisible;
        this.handlerLang = handlerLang;
        this.scopeObject = scopeObject;
        this.promisses = [];
        var onPromiseInterraction = function (prom) { if (prom.Finalized) {
            return;
        } _this.promisses.push(prom); };
        this.promiseCallbacks = { onThen: onPromiseInterraction, onCatch: onPromiseInterraction, onFinally: onPromiseInterraction };
    }
    EventData.prototype.SetOwner = function (_a) {
        var ownerComponent = _a.ownerComponent;
        this.ownerComponent = ownerComponent;
    };
    EventData.prototype.GetOwner = function (owners, dory) {
        dory.errorInfo.errorOwnerInfo.componentId = owners.ownerComponent.compEID;
        dory.errorInfo.errorOwnerInfo.componentType = owners.ownerComponent.compType;
        dory.errorInfo.errorOwnerInfo.fieldName = owners.ownerEvent.eventName;
        return dory;
    };
    EventData.prototype.Trigger = function (_a) {
        var _this = this;
        var evaluator = _a.evaluator, dataSource = _a.dataSource;
        // event trigger geciktirme !!!!
        var renderingContext = this.creationContext.GetItemSingle(_Context_RenderingContext__WEBPACK_IMPORTED_MODULE_2__.RenderingContext.ContextName);
        var dory = this.creationContext.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_3__.Dory.ContextName);
        var returnVal = renderingContext === null || renderingContext === void 0 ? void 0 : renderingContext.executeOrDelayEvent({
            cb: function () {
                _shrimp_performance__WEBPACK_IMPORTED_MODULE_1__.PerfSingles.Instance().Start(_this.ownerComponent.compId + "." + _this.eventName + "_Real");
                var oldOwners = renderingContext.SetOwnersAndRetrieveOld({ ownerComponent: _this.ownerComponent, ownerEvent: _this });
                var oldCbs = _Managers_QPromise__WEBPACK_IMPORTED_MODULE_4__.QPromise.setStaticCallbacksAndRetrieveOld(_this.promiseCallbacks);
                var retVal;
                try {
                    retVal = evaluator.Evaluate({ script: _this.handler, dataSource: dataSource, context: _this.creationContext, lang: _this.handlerLang });
                }
                finally {
                    _Managers_QPromise__WEBPACK_IMPORTED_MODULE_4__.QPromise.setStaticCallbacksAndRetrieveOld(oldCbs);
                    var owners = renderingContext.SetOwnersAndRetrieveOld(oldOwners); // 26.06.2021'de comment'i SİLİN -> // finally'ye alındı. hataya düşerse de owner'lar toplanıyor.
                    _shrimp_performance__WEBPACK_IMPORTED_MODULE_1__.PerfSingles.Instance().End(_this.ownerComponent.compId + "." + _this.eventName + "_Real", _this);
                    _this.GetOwner(owners, dory);
                    _this.awaitAllPromises(function () {
                        var _a, _b;
                        return (_b = (_a = dory.OperatorCollection) === null || _a === void 0 ? void 0 : _a.eventOperator) === null || _b === void 0 ? void 0 : _b.eventCompleteCb({
                            pageId: _this.ownerComponent.RootHistoryItem.pageId,
                            compUID: _this.ownerComponent.GetCompUID(), eventName: _this.eventName, isPageComplete: dory.PageCompletedHook.IsTriggered()
                        });
                    });
                }
                return retVal;
            },
            immediateEvent: this.immediate,
            triggerOrder: this.triggerOrder
        });
        return returnVal;
    };
    EventData.prototype.AttachCompletionPromise = function (prom) {
        this.promisses.push(prom);
    };
    EventData.prototype.awaitAllPromises = function (cb) {
        return __awaiter(this, void 0, void 0, function () {
            var proms, sweep, prom;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        sweep = function () { proms = _this.promisses, _this.promisses = []; };
                        sweep();
                        _a.label = 1;
                    case 1:
                        if (!(proms && proms.length > 0)) return [3 /*break*/, 3];
                        prom = Promise.all(proms);
                        prom.finally(sweep);
                        return [4 /*yield*/, prom];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 1];
                    case 3:
                        cb();
                        return [2 /*return*/];
                }
            });
        });
    };
    return EventData;
}());



/***/ }),

/***/ "../../common/dory/src/Model/Component/OrderedEvent.ts":
/*!*************************************************************!*\
  !*** ../../common/dory/src/Model/Component/OrderedEvent.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OrderedEvent": () => (/* binding */ OrderedEvent)
/* harmony export */ });
var OrderedEvent = /** @class */ (function () {
    function OrderedEvent(_a) {
        var handler = _a.handler, triggerOrder = _a.triggerOrder;
        this.handler = handler,
            this.triggerOrder = triggerOrder;
    }
    return OrderedEvent;
}());



/***/ }),

/***/ "../../common/dory/src/Model/History/DoryLikeData.ts":
/*!***********************************************************!*\
  !*** ../../common/dory/src/Model/History/DoryLikeData.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoryLikeData": () => (/* binding */ DoryLikeData)
/* harmony export */ });
/* harmony import */ var _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Managers/HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");

var DoryLikeData = /** @class */ (function () {
    function DoryLikeData(ownerDoryLike, options) {
        this.ownerDoryLike = ownerDoryLike;
        this.createrComp = options.creatorComp;
        this.compUIDPrefix = options.compUIDPrefix;
    }
    DoryLikeData.prototype.GetCompUIDPrefix = function () {
        if (this.createrComp) {
            return this.createrComp.GetCompUID();
        }
        if (this.compUIDPrefix) {
            return this.compUIDPrefix;
        }
        return "";
    };
    Object.defineProperty(DoryLikeData.prototype, "OwnerDoryLike", {
        get: function () {
            return this.ownerDoryLike;
        },
        enumerable: false,
        configurable: true
    });
    DoryLikeData.prototype.GetCreaterRenderingComponent = function () {
        var _a, _b, _c, _d, _e, _f;
        if (((_a = this.createrComp) === null || _a === void 0 ? void 0 : _a.compType) === "RenderingComponent" && ((_c = (_b = this.createrComp) === null || _b === void 0 ? void 0 : _b.component) === null || _c === void 0 ? void 0 : _c.RenderGo)) {
            return this.createrComp;
        }
        return (_f = (_e = (_d = this.createrComp) === null || _d === void 0 ? void 0 : _d.context) === null || _e === void 0 ? void 0 : _e.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_0__.HistoryManager.ContextName)) === null || _f === void 0 ? void 0 : _f.getCreaterRenderingComponent();
    };
    DoryLikeData.prototype.GetCreatorComponent = function () {
        return this.createrComp;
    };
    DoryLikeData.prototype.GetCreaterComp = function () {
        return this.createrComp;
    };
    return DoryLikeData;
}());



/***/ }),

/***/ "../../common/dory/src/Model/History/DoryLikeHelper.ts":
/*!*************************************************************!*\
  !*** ../../common/dory/src/Model/History/DoryLikeHelper.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoryLikeHelper": () => (/* binding */ DoryLikeHelper)
/* harmony export */ });
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Dory */ "../../common/dory/src/Dory.ts");

var DoryLikeHelper = /** @class */ (function () {
    function DoryLikeHelper() {
    }
    DoryLikeHelper.TriggerPageComplete = function (dory, pageId, historyItem) {
        dory.PageCompletedHook.triggerer({ pageId: pageId, additionals: historyItem.additionals });
    };
    DoryLikeHelper.TriggerPageCompleteJr = function (doryJr, pageId) {
        var dory = doryJr.ContextJr.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_0__.Dory.ContextName);
        doryJr.PageJrCompletedHook.triggerer({ pageId: pageId });
    };
    return DoryLikeHelper;
}());



/***/ }),

/***/ "../../common/dory/src/Model/History/HistoryItem.ts":
/*!**********************************************************!*\
  !*** ../../common/dory/src/Model/History/HistoryItem.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HistoryItem": () => (/* binding */ HistoryItem)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_arrayHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/arrayHelper */ "../../common/shrimp/helpers/arrayHelper.ts");
/* harmony import */ var _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/helpers/compDiffHelper */ "../../common/shrimp/helpers/compDiffHelper.ts");
/* harmony import */ var _shrimp_helpers_compUIDHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shrimp/helpers/compUIDHelper */ "../../common/shrimp/helpers/compUIDHelper.ts");
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shrimp/helpers/QJsonHelper */ "../../common/shrimp/helpers/QJsonHelper.ts");
/* harmony import */ var _shrimp_helpers_scripting_PageScripting__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shrimp/helpers/scripting/PageScripting */ "../../common/shrimp/helpers/scripting/PageScripting.ts");
/* harmony import */ var _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shrimp/interfaces/ComponentInterfaces/ICompJson */ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts");
/* harmony import */ var _shrimp_performance__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shrimp/performance */ "../../common/shrimp/performance.ts");
/* harmony import */ var _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Context/RenderingContext */ "../../common/dory/src/Context/RenderingContext.ts");
/* harmony import */ var _Context_ResponseContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../Context/ResponseContext */ "../../common/dory/src/Context/ResponseContext.ts");
/* harmony import */ var _Context_Store_PageStoreContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../Context/Store/PageStoreContext */ "../../common/dory/src/Context/Store/PageStoreContext.ts");
/* harmony import */ var _Dory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../Dory */ "../../common/dory/src/Dory.ts");
/* harmony import */ var _DoryJr__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../DoryJr */ "../../common/dory/src/DoryJr.ts");
/* harmony import */ var _Managers_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../Managers/DoryBasedLRManager */ "../../common/dory/src/Managers/DoryBasedLRManager.ts");
/* harmony import */ var _Managers_DynamicCompManager__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../Managers/DynamicCompManager */ "../../common/dory/src/Managers/DynamicCompManager.ts");
/* harmony import */ var _Managers_HistoryItemBasedLRManager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../Managers/HistoryItemBasedLRManager */ "../../common/dory/src/Managers/HistoryItemBasedLRManager.ts");
/* harmony import */ var _Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../Managers/HistoryManager */ "../../common/dory/src/Managers/HistoryManager.ts");
/* harmony import */ var _Managers_RenderingManager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../Managers/RenderingManager */ "../../common/dory/src/Managers/RenderingManager.ts");
/* harmony import */ var _Managers_StoreManager__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../Managers/StoreManager */ "../../common/dory/src/Managers/StoreManager.ts");
/* harmony import */ var _Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../Component/ComponentCollection */ "../../common/dory/src/Model/Component/ComponentCollection.ts");
/* harmony import */ var _IndexManager__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./IndexManager */ "../../common/dory/src/Model/History/IndexManager.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





















var HistoryItem = /** @class */ (function () {
    //Code 1234: additioanls parametresi kaldırılacak.
    function HistoryItem(_a) {
        var qjson = _a.qjson, context = _a.context, storeItems = _a.storeItems, pageId = _a.pageId, pageName = _a.pageName, additionals = _a.additionals;
        this.controlDict = {};
        this.controlList = [];
        this.compareCompValue = false;
        this.qjson = qjson;
        this.context = context;
        this.pageId = pageId;
        this.pageName = pageName;
        this.additionals = additionals;
        this.context.RegisterItem(new _Context_ResponseContext__WEBPACK_IMPORTED_MODULE_9__.ResponseContext());
        this.context.RegisterItem(new _Context_Store_PageStoreContext__WEBPACK_IMPORTED_MODULE_10__.PageStoreContext());
        this.context.RegisterItem(new _Managers_HistoryItemBasedLRManager__WEBPACK_IMPORTED_MODULE_15__.HistoryItemBasedLRManager({ currentContext: context, qLang: this.getQLang() }));
        if (storeItems) {
            new _Managers_StoreManager__WEBPACK_IMPORTED_MODULE_18__.StoreManager(this.context).bulkSet(storeItems);
        }
    }
    HistoryItem.prototype.Render = function (_a) {
        var _b;
        var compParentInst = _a.compParentInst, noHistory = _a.noHistory;
        return __awaiter(this, void 0, void 0, function () {
            var dory, historyManager, renderingContext, renderingManager;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _shrimp_performance__WEBPACK_IMPORTED_MODULE_7__.PerfSingles.Instance().Start("HistoryItemRender");
                        this.pageScripting = this.qjson.cFiles ? new _shrimp_helpers_scripting_PageScripting__WEBPACK_IMPORTED_MODULE_5__.PageScripting(this.qjson.cFiles) : undefined;
                        (_b = this.pageScripting) === null || _b === void 0 ? void 0 : _b.GetPageClass(); //initiate first page class initiation
                        this.indexManager = undefined;
                        dory = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_11__.Dory.ContextName);
                        historyManager = this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_16__.HistoryManager.ContextName);
                        historyManager === null || historyManager === void 0 ? void 0 : historyManager.currentLevel().setMomentaryItem(this);
                        renderingContext = this.renderingContext = new _Context_RenderingContext__WEBPACK_IMPORTED_MODULE_8__.RenderingContext({ compParentInst: compParentInst, historyBasedConf: dory === null || dory === void 0 ? void 0 : dory.shellConfigs.historyBasedConf });
                        this.context.RegisterItem(renderingContext);
                        this.UpdateLRType();
                        renderingContext.startRendering();
                        this.compareCompValue = this.findComparisonCompAndReplace(this.qjson.cJson);
                        renderingManager = new _Managers_RenderingManager__WEBPACK_IMPORTED_MODULE_17__.RenderingManager({ pjson: this.qjson.cJson, context: this.context, controlDict: this.controlDict, qLang: this.getQLang(), compareCompValue: this.compareCompValue, pageScripting: this.pageScripting });
                        return [4 /*yield*/, renderingManager.RenderRoot()];
                    case 1:
                        _c.sent();
                        renderingContext.postRenderRoot();
                        this.controlList = renderingManager.controlList;
                        if (!noHistory) {
                            historyManager === null || historyManager === void 0 ? void 0 : historyManager.AddHistory(this);
                        }
                        renderingContext.endRendering();
                        _shrimp_performance__WEBPACK_IMPORTED_MODULE_7__.PerfSingles.Instance().End("HistoryItemRender");
                        return [2 /*return*/];
                }
            });
        });
    };
    ;
    HistoryItem.prototype.getOwnerHistoryManager = function () {
        return this.context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_16__.HistoryManager.ContextName);
    };
    HistoryItem.prototype.FindCreateComponentRelative = function (sourceComp, targetCompID) {
        var _a, _b;
        var compCol = this.GetCompCollectionByCompInst(sourceComp);
        var dory = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_11__.Dory.ContextName);
        var engineYamlLogType = (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
        if (!compCol) {
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.Log({ logMessage: "can not find source component", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.LogType.Debug, minEngineLogLevel: engineYamlLogType });
            return undefined;
        }
        if (!compCol.dynamicCompIdSuffix) {
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.Log({ logMessage: "comp " + compCol.compId + "[" + compCol.compType + "] is not a dynamic created component", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
            return undefined;
        }
        var searchID = _Managers_DynamicCompManager__WEBPACK_IMPORTED_MODULE_14__.DynamicCompManager.generateCompID(targetCompID, compCol.dynamicCompIdSuffix);
        var foundCompColl = this.getCompCollectionById(searchID);
        if (!foundCompColl) {
            _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.Log({ logMessage: "can not find relative of " + targetCompID + " with regards to " + compCol.compId, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.LogType.Debug, minEngineLogLevel: engineYamlLogType });
            return undefined;
        }
        return foundCompColl.component;
    };
    /**
     * Get component by tyoe of the component name
     * @param typeName Component type name( {T: ..., P: ..., ...})
     * @returns ComponentCollection | null
     */
    HistoryItem.prototype.GetControlWithTypeName = function (typeName) {
        var _a, _b;
        for (var item in this.controlDict) {
            if (this.controlDict[item].compType == typeName) {
                return this.controlDict[item];
            }
        }
        var dory = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_11__.Dory.ContextName);
        var engineYamlLogType = (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).getMinEngineLogType) === null || _b === void 0 ? void 0 : _b.call(_a);
        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.Log({ logMessage: "Component can not be found with type: " + typeName, minEngineLogLevel: engineYamlLogType });
        return null;
    };
    HistoryItem.prototype.GetCompCollectionByCompInst = function (component) {
        var _a;
        if (!this.compIndexedCollection) {
            this.extractCompInstDictFrom(this.controlDict);
        }
        return ((_a = this.compIndexedCollection) === null || _a === void 0 ? void 0 : _a.get(component)) || null;
    };
    HistoryItem.prototype.getComponentCollectionByIdProperty = function (_a) {
        var _b;
        var id = _a.id, _c = _a.deep, deep = _c === void 0 ? false : _c;
        if (!this.indexManager) {
            this.indexManager = new _IndexManager__WEBPACK_IMPORTED_MODULE_20__.IndexManager(this.controlDict);
        }
        var compColl = this.indexManager.getComponentCollectionByIdProperty(id);
        if (!deep || compColl) {
            return compColl;
        }
        var historyItems = (_b = this.context.GetItemGroup(_DoryJr__WEBPACK_IMPORTED_MODULE_12__.DoryJr.ContextName)) === null || _b === void 0 ? void 0 : _b.map(function (doryJr) { var _a; return (_a = doryJr.ContextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_16__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last(); });
        historyItems === null || historyItems === void 0 ? void 0 : historyItems.find(function (historyItem) { return compColl = historyItem === null || historyItem === void 0 ? void 0 : historyItem.getComponentCollectionByIdProperty({ id: id, deep: deep }); });
        return compColl;
    };
    HistoryItem.prototype.getComponentCollectionByDom = function (_a) {
        var _b;
        var element = _a.element, _c = _a.deep, deep = _c === void 0 ? false : _c;
        if (!this.indexManager) {
            this.indexManager = new _IndexManager__WEBPACK_IMPORTED_MODULE_20__.IndexManager(this.controlDict);
        }
        var compColl = this.indexManager.getComponentCollectionByDom(element);
        if (!deep || compColl) {
            return compColl;
        }
        var historyItems = (_b = this.context.GetItemGroup(_DoryJr__WEBPACK_IMPORTED_MODULE_12__.DoryJr.ContextName)) === null || _b === void 0 ? void 0 : _b.map(function (doryJr) { var _a; return (_a = doryJr.ContextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_16__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last(); });
        historyItems === null || historyItems === void 0 ? void 0 : historyItems.find(function (historyItem) { return compColl = historyItem === null || historyItem === void 0 ? void 0 : historyItem.getComponentCollectionByDom({ element: element, deep: deep }); });
        return compColl;
    };
    HistoryItem.prototype.getComponentSubCollectionByID = function (_a) {
        var _this = this;
        var id = _a.id;
        var compColl;
        var arrangeControlDict = function (item) { return item.map(function (doryJr) {
            var _a, _b, _c;
            if (!doryJr)
                return;
            var historyItem = (_a = doryJr.ContextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_16__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last();
            if (historyItem && historyItem.controlDict && historyItem.controlDict[id]) {
                compColl = historyItem.controlDict[id];
                return;
            }
            else {
                var doryCtx = doryJr.ContextJr.GetItemGroup(_DoryJr__WEBPACK_IMPORTED_MODULE_12__.DoryJr.ContextName);
                if (!doryCtx) {
                    var dory = _this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_11__.Dory.ContextName);
                    var engineYamlLogType = (_c = dory === null || dory === void 0 ? void 0 : (_b = dory.shellConfigs).getMinEngineLogType) === null || _c === void 0 ? void 0 : _c.call(_b);
                    _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.Logger.Log({ logMessage: "Cannot find component at sub dictionary for " + id, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_3__.LogType.Warning, minEngineLogLevel: engineYamlLogType });
                    return;
                }
                arrangeControlDict(doryCtx);
            }
        }); };
        var doryJr = this.context.GetItemGroup(_DoryJr__WEBPACK_IMPORTED_MODULE_12__.DoryJr.ContextName);
        if (doryJr)
            arrangeControlDict(doryJr);
        return compColl;
    };
    HistoryItem.prototype.iterateSubHistoryItems = function (cb) {
        var doryJrs = this.context.GetItemGroup(_DoryJr__WEBPACK_IMPORTED_MODULE_12__.DoryJr.ContextName);
        if (!doryJrs) {
            return undefined;
        }
        var historyItems = doryJrs.map(function (doryJr) { return doryJr.ContextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_16__.HistoryManager.ContextName).currentLevel().last(); })
            .filter(function (historyItem) { return historyItem != undefined; });
        return _shrimp_helpers_arrayHelper__WEBPACK_IMPORTED_MODULE_0__.ArrayHelper.findAndRet(historyItems, cb);
    };
    HistoryItem.prototype.GetComponentCollectionByUID = function (compUID) {
        var targetComp = _shrimp_helpers_compUIDHelper__WEBPACK_IMPORTED_MODULE_2__.CompUIDHelper.GetRootCompId(compUID);
        var candidate = this.controlDict[targetComp.rootCompId];
        if (!candidate) {
            return undefined;
        }
        if (!targetComp.subCompUID) {
            return candidate;
        }
        return this.iterateSubHistoryItems(function (hi) { return hi.GetComponentCollectionByUID(targetComp.subCompUID); });
    };
    HistoryItem.prototype.GetComponentCollection = function () {
        return this.controlDict;
    };
    HistoryItem.prototype.GetComponentList = function () {
        return this.controlList;
    };
    HistoryItem.prototype.getCompCollectionById = function (id) {
        if (typeof id == "string") {
            return this.controlDict[id] || undefined;
        }
        else {
            return this.controlDict[id["_renderingProps"].props().ID] || undefined;
        }
    };
    HistoryItem.prototype.destroyComponentCollectionById = function (Id) {
        if (typeof Id == "string") {
            this.destroyCollection(this.getCompCollectionById(Id));
            return true;
        }
        return false;
    };
    HistoryItem.prototype.update = function () {
        _Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_19__.ComponentCollection.IterateToChild(this.controlList, function (item) {
            if (item.component && item.asChildType != _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_6__.CType.slot && item.component.$forceUpdate) {
                item.component.$forceUpdate();
            }
            return true;
        });
    };
    HistoryItem.prototype.hibernate = function () {
        _Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_19__.ComponentCollection.IterateToChild(this.controlList, function (item) {
            // child yapısı:   slot > slot > child > ..   olan bir yapıda bir dal için child'larının slot olmasına bakmak yetmez. O daldaki her bir comp.'a ayrı ayrı bakılıp child'ların peşi toplanmalı
            if (item.component && item.asChildType != _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_6__.CType.slot && item.component.hibernate) {
                item.component.hibernate();
            }
            return true;
        }, { iterateDoryJrs: true });
    };
    HistoryItem.prototype.resurrect = function () {
        this.UpdateLRType();
        _Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_19__.ComponentCollection.IterateToChild(this.controlList, function (item) {
            // child yapısı:   slot > slot > child > ..   olan bir yapıda bir dal için child'larının slot olmasına bakmak yetmez. O daldaki her bir comp.'a ayrı ayrı bakılıp child'ların peşi toplanmalı
            if (item.component && item.asChildType != _shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_6__.CType.slot && item.component.resurrect) {
                item.component.resurrect();
            }
            return true;
        }, { iterateDoryJrs: true });
    };
    HistoryItem.prototype.destroyCollection = function (compCollection) {
        this.destroyPriv(true, compCollection);
    };
    HistoryItem.prototype.destroy = function () {
        var _this = this;
        this.controlList.forEach(function (item) { return _this.destroyPriv(false, item); });
    };
    /**
     * Do not use. -> destroyCollection or destroy
     */
    HistoryItem.prototype.destroyPriv = function (obliviateComponent, compCollection) {
        var _this = this;
        if (!compCollection) {
            return;
        }
        _Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_19__.ComponentCollection.IterateToChild(compCollection, function (item) {
            // child yapısı:   slot > slot > child > ..   olan bir yapıda bir dal için child'larının slot olmasına bakmak yetmez. O daldaki her bir comp.'a ayrı ayrı bakılıp child'ların peşi toplanmalı
            if (item.component && item.component.$destroy) {
                item.component.$destroy();
                delete item.component;
            }
            if (obliviateComponent) {
                _this.obliviateComponent(item);
            }
            return true;
        });
    };
    HistoryItem.prototype.remount = function () {
        _Component_ComponentCollection__WEBPACK_IMPORTED_MODULE_19__.ComponentCollection.IterateToChild(this.controlList, function (item) {
            if (item.component && item.component.$mount) {
                var mountComp_1 = function (comp) {
                    if (comp.$children) {
                        comp.$children.forEach(function (child) { return mountComp_1(child); });
                    }
                    comp.$mount();
                };
                mountComp_1(item.component);
            }
            return true;
        });
    };
    HistoryItem.prototype.registerDoryJr = function (doryJr) {
        this.context.RegisterItem(doryJr);
    };
    HistoryItem.prototype.getQLang = function () {
        var _a;
        return (_a = this.qjson.opt) === null || _a === void 0 ? void 0 : _a.QL;
    };
    HistoryItem.prototype.GetRenderingContext = function () {
        return this.renderingContext;
    };
    HistoryItem.prototype.GetDoryJrs = function () {
        return this.context.GetItemGroup(_DoryJr__WEBPACK_IMPORTED_MODULE_12__.DoryJr.ContextName);
    };
    /**
     * Do not use directly, use Dory.SetLRType.
     */
    HistoryItem.prototype.UpdateLRType = function () {
        this.arrangeLRType();
    };
    HistoryItem.prototype.arrangeLRType = function () {
        if (!this.qjson.clrids) {
            return;
        }
        ;
        var doryBasedLRManager = this.context.GetItemSingle(_Managers_DoryBasedLRManager__WEBPACK_IMPORTED_MODULE_13__.DoryBasedLRManager.ContextName);
        var LRType = doryBasedLRManager === null || doryBasedLRManager === void 0 ? void 0 : doryBasedLRManager.LRType;
        var historyItemBasedLRManager = this.context.GetItemSingle(_Managers_HistoryItemBasedLRManager__WEBPACK_IMPORTED_MODULE_15__.HistoryItemBasedLRManager.ContextName);
        historyItemBasedLRManager === null || historyItemBasedLRManager === void 0 ? void 0 : historyItemBasedLRManager.SetResourceDict(this.qjson.clrids[LRType], LRType);
    };
    HistoryItem.prototype.obliviateComponent = function (item) {
        var _this = this;
        var dory = this.context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_11__.Dory.ContextName);
        var deleteComp = function (comp) {
            var _a, _b;
            delete _this.controlDict[comp.compId];
            if (_this.compInstDict) {
                _this.compInstDict[comp.compId];
            }
            (_a = _this.compInstDict) === null || _a === void 0 ? true : delete _a[comp.compId];
            var parent = comp.parentCompCollection;
            if (parent) {
                var childNameKeys = Object.keys(parent.children);
                _shrimp_helpers_arrayHelper__WEBPACK_IMPORTED_MODULE_0__.ArrayHelper.findAndRet(childNameKeys, (function (childName) {
                    var _a, _b;
                    var index = parent.children[childName].findIndex(function (childColl) { return childColl == comp; });
                    if (index != -1) {
                        (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).onComponentDestroy) === null || _b === void 0 ? void 0 : _b.call(_a, { parentComponent: parent.component, childKey: childName, childVDomElement: comp.vDomElement });
                        parent.children[childName].splice(index, 1);
                    }
                }));
            }
            else {
                var index = _this.controlList.findIndex(function (collection) { return collection == comp; });
                _this.controlList.splice(index, 1);
            }
            (_b = _this.compIndexedCollection) === null || _b === void 0 ? void 0 : _b.delete(comp.component);
        };
        deleteComp(item);
    };
    HistoryItem.prototype.GetCompInstDict = function () {
        if (this.compInstDict) {
            return this.compInstDict;
        }
        this.extractCompInstDictFrom(this.controlDict);
        return this.compInstDict || {};
    };
    HistoryItem.prototype.ReCalculateCompInstDict = function () {
        this.compInstDict = undefined;
        this.compIndexedCollection = undefined;
    };
    HistoryItem.prototype.extractCompInstDictFrom = function (dict) {
        var _this = this;
        if (this.GetRenderingContext().IsRendering()) {
            return;
        }
        this.compInstDict = {};
        this.compIndexedCollection = new WeakMap();
        Object.keys(dict).forEach(function (compPID) {
            var curColl = dict[compPID];
            if (curColl.component) {
                _this.compIndexedCollection.set(curColl.component, curColl);
                _this.compInstDict[compPID] = curColl.component;
            }
            else {
                curColl.WatchCreatedFields(function (createdFields) {
                    if (!_this.compIndexedCollection || !_this.compInstDict) {
                        return;
                    }
                    _this.compIndexedCollection.set(curColl.component, curColl);
                    _this.compInstDict[compPID] = curColl.component;
                });
            }
        });
    };
    HistoryItem.prototype.getComponentJsonByCompId = function (compId) {
        if (!this.qjson.cJson) {
            return null;
        }
        var compLoc = _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_4__.QJsonHelper.FindCompBySearchField(this.qjson.cJson, compId, _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_4__.CompSearchKey.PID);
        var path = _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_4__.QJsonHelper.FindParentArrayPath(compLoc.curPath, this.qjson.cJson);
        return { compLoc: compLoc, path: path };
    };
    HistoryItem.prototype.getComponentSubCollections = function () {
        var _a;
        var dicts = [];
        (_a = this.context.GetItemGroup(_DoryJr__WEBPACK_IMPORTED_MODULE_12__.DoryJr.ContextName)) === null || _a === void 0 ? void 0 : _a.forEach(function (doryJr) {
            var _a, _b;
            var dict = (_b = (_a = doryJr.ContextJr.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_16__.HistoryManager.ContextName)) === null || _a === void 0 ? void 0 : _a.currentLevel().last()) === null || _b === void 0 ? void 0 : _b.controlDict;
            if (dict) {
                Object.keys(dict).forEach(function (key) { return dicts.push(dict[key]); });
            }
        });
        return dicts;
    };
    /**
     * Find comparison component at the current pjson
     * @param pjson Current pjson
     * @returns boolean
     */
    HistoryItem.prototype.findComparisonCompAndReplace = function (pjson) {
        if (!pjson) {
            return false;
        }
        var hasCompareComp = false;
        _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_4__.QJsonHelper.ForEachComp(pjson, function (compJson, path) {
            if (_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_1__.compDiffHelper.comparisonComponent == compJson.T) {
                hasCompareComp = true;
                return false;
            }
            return true;
        });
        if (hasCompareComp) {
            _shrimp_helpers_QJsonHelper__WEBPACK_IMPORTED_MODULE_4__.QJsonHelper.ForEachComp(pjson, function (compJson, path, info) {
                var _a;
                if (_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_1__.compDiffHelper.componentValueList[compJson.T] && !_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_1__.compDiffHelper.componentValueList[compJson.T].classCompare && (info === null || info === void 0 ? void 0 : info.parentCompJson) &&
                    info.parentCompJson.T != _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_1__.ComparisonEnum.tooltipCompType && !((_a = _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_1__.compDiffHelper.componentValueList[info.parentCompJson.T]) === null || _a === void 0 ? void 0 : _a.classCompare)) {
                    _shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_1__.compDiffHelper.replaceTooltipComponent(info.parentCompJson, compJson);
                }
                return true;
            });
        }
        return hasCompareComp;
    };
    HistoryItem.prototype.themeConfiguration = function (context, themeName) {
        var _a;
        if (!(themeName == "light" || themeName == "dark"))
            return;
        var historyManager = context.GetItemSingle(_Managers_HistoryManager__WEBPACK_IMPORTED_MODULE_16__.HistoryManager.ContextName);
        var dory = context.GetItemSingle(_Dory__WEBPACK_IMPORTED_MODULE_11__.Dory.ContextName);
        var isDark = dory.isDark = themeName == "dark" ? true : undefined;
        var rootControlList = (_a = historyManager === null || historyManager === void 0 ? void 0 : historyManager.getRootHM().currentLevel().last()) === null || _a === void 0 ? void 0 : _a.controlList;
        if (!rootControlList)
            return;
        setCompPropAndJrHistory(rootControlList);
        function setCompPropAndJrHistory(compList) {
            var _a, _b, _c, _d, _e;
            for (var index = 0; index < compList.length; index++) {
                var compCollection = compList[index];
                var comp = { children: { default: [compCollection] } };
                (_b = dory === null || dory === void 0 ? void 0 : (_a = dory.shellConfigs).setComponentsProperty) === null || _b === void 0 ? void 0 : _b.call(_a, comp, "dark", isDark);
                (_d = dory === null || dory === void 0 ? void 0 : (_c = dory.shellConfigs).setDarkTheme) === null || _d === void 0 ? void 0 : _d.call(_c, compCollection, isDark || false);
                var compDoryJrCompList = (_e = compCollection.GetDoryJr()) === null || _e === void 0 ? void 0 : _e.GetComponentList();
                if (compDoryJrCompList) {
                    setCompPropAndJrHistory(compDoryJrCompList);
                }
            }
        }
        // return true;
    };
    return HistoryItem;
}());



/***/ }),

/***/ "../../common/dory/src/Model/History/IndexManager.ts":
/*!***********************************************************!*\
  !*** ../../common/dory/src/Model/History/IndexManager.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IndexManager": () => (/* binding */ IndexManager)
/* harmony export */ });
var IndexManager = /** @class */ (function () {
    function IndexManager(controlDict) {
        var _this = this;
        this.compIdPropIndex = {};
        this.compDomIndex = new WeakMap();
        //TODO: move index createion to each function on demand
        Object.keys(controlDict).forEach(function (compId) {
            var _a, _b;
            var compColl = controlDict[compId];
            var propId = (_b = (_a = compColl.component) === null || _a === void 0 ? void 0 : _a.$props) === null || _b === void 0 ? void 0 : _b.id;
            if (propId) {
                _this.compIdPropIndex[propId] = compColl;
            }
            var dom = compColl.domElement;
            if (dom) {
                _this.compDomIndex.set(dom, compColl);
            }
            compColl.WatchCreatedFields(function (created) {
                var _a;
                if (created.el) {
                    if (dom) {
                        _this.compDomIndex.delete(dom);
                    }
                    dom = created.el;
                    _this.compDomIndex.set(dom, compColl);
                }
                if (created.instance) {
                    if (propId) {
                        delete _this.compIdPropIndex.propId;
                    }
                    propId = (_a = created.instance.$props) === null || _a === void 0 ? void 0 : _a.id;
                    if (propId) {
                        _this.compIdPropIndex[propId] = compColl;
                    }
                }
            });
        });
    }
    IndexManager.prototype.getComponentCollectionByIdProperty = function (compPropId /*, controlDict: Record<string, IComponentCollection>*/) {
        // if (!this.compIdPropIndex){
        //     this.compIdPropIndex = Object.keys(controlDict).reduce((prev, cur) => {
        //         const compColl = controlDict[cur];
        //         const propId = compColl.component!.$props?.id;
        //         if (!propId){
        //             return prev;
        //         }
        //         prev[propId] = compColl;
        //         return prev;
        //     }, <Record<string, IComponentCollection | undefined>>{})
        // }
        return this.compIdPropIndex[compPropId];
    };
    IndexManager.prototype.getComponentCollectionByDom = function (element /*, controlDict: Record<string, IComponentCollection>*/) {
        // if (!this.compDomIndex){
        //     this.compDomIndex = Object.keys(controlDict).reduce((prev, cur) => {
        //         const compColl = controlDict[cur];
        //         prev.set(compColl.domElement!, compColl);
        //         return prev;
        //     }, new WeakMap<IDomElement, IComponentCollection>());
        // }
        return this.compDomIndex.get(element);
    };
    return IndexManager;
}());



/***/ }),

/***/ "../../common/dory/src/OmniScript/DNode.ts":
/*!*************************************************!*\
  !*** ../../common/dory/src/OmniScript/DNode.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DNode": () => (/* binding */ dNode)
/* harmony export */ });
/* harmony import */ var _Error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Error */ "../../common/dory/src/OmniScript/Error.ts");

//TODO: Converted from JS -> TS in a hurry. convert for real
var error = function (message) {
    _Error__WEBPACK_IMPORTED_MODULE_0__.OSError.throwWithMessage("DNode", message, undefined);
};
var op = "operator";
var key = "keyword";
//#R2.2
var tokenDict = {
    "if": key,
    "foreach": key,
    "continue": key,
    "break": key,
    "in": key,
    ">=": op,
    "<=": op,
    "<": op,
    ">": op,
    ".": op,
    "{}": op,
    "[]": op,
    "&&": op,
    "||": op,
    "!": op,
    "=": op,
    "!=": op,
    "==": op,
    "+": op,
    "*": op,
    "/": op,
    "-": op,
    "()": op
};
var numberChars = {
    "0": true, "1": true, "2": true, "3": true, "4": true, "5": true, "6": true, "7": true, "8": true, "9": true, ".": true
};
var dNode = /** @class */ (function () {
    function dNode(tokenValue) {
        ///<summary>Decompressed node</summary>
        ///<field name="token" value="{value: '', type:''}">Token of node</field>
        ///<field name="left" type="dNode" value="this">Left of currenct node. Means leftArray is null</field>
        ///<field name="right" type="dNode" value="this">Right of currenct node. Means rightArray is null</field>
        ///<field name="leftArray" type="dNode[]" value="[this]">array of left children. Means left is null</field>
        ///<field name="rightArray" type="dNode[]" value="[this]">array of right children. Means right is null</field>
        ///<field name="array" type="dNode[]" value="[this]">array of node children this is not node, just an array. means tokens is null</field>
        this.token = null;
        this.left = null;
        this.right = null;
        this.parent = null;
        this.leftArray = null;
        this.rightArray = null;
        this.array = null;
        this.LoadToken(tokenValue);
    }
    dNode.prototype.LoadToken = function (tokenValue) {
        if (tokenValue === null || tokenValue === undefined) {
            return;
        }
        if (this.IsArray()) {
            error("can not load token to an array node");
        }
        this.token = { type: tokenDict[tokenValue], value: tokenValue };
        if (this.token.type === undefined) {
            if (this.token.value.startsWith("'")) {
                //string
                if (!this.token.value.endsWith("'")) {
                    error("strings must end with '");
                }
                // string'lerin başındaki ' atılır.
                this.token.value = this.token.value.substring(1, this.token.value.length - 1);
                this.token.type = dNode.TokenTypes.string;
            }
            else {
                // number or identifier
                var foundNaN = false;
                for (var i = 0; i < this.token.value.length; i++) {
                    if (numberChars[this.token.value[i]] === undefined) {
                        foundNaN = true;
                        break;
                    }
                }
                if (foundNaN) {
                    this.token.type = dNode.TokenTypes.identifier;
                }
                else {
                    this.token.type = dNode.TokenTypes.number;
                }
            }
        }
    };
    dNode.prototype.IsLeftArray = function () {
        return this.leftArray !== null;
    };
    dNode.prototype.IsRightArray = function () {
        return this.rightArray !== null;
    };
    dNode.prototype.IsRightNull = function () {
        return this.rightArray === null && this.right === null;
    };
    dNode.prototype.IsLeftNull = function () {
        return this.leftArray === null && this.left === null;
    };
    dNode.prototype.IsArray = function () {
        return this.array !== null;
    };
    dNode.prototype.IsNode = function () {
        if (this.left !== null || this.right !== null || this.token !== null || this.rightArray !== null || this.leftArray !== null) {
            return true;
        }
        return false;
    };
    dNode.prototype.PushToArray = function (newNode) {
        ///<summary>Append a new node to array elements of this node.</summary>
        ///<param name="newNode" type="dNode" value="new dNode('')">new node to append to array elements</param>
        if (this.IsNode()) {
            error("can not push to a non array node");
        }
        if (this.array === null) {
            this.array = [];
        }
        if (newNode !== null) {
            this.array.push(newNode);
            newNode.parent = this;
        }
    };
    dNode.prototype.AppendLeft = function (newNode) {
        ///<summary>Append a new node to left of this node.</summary>
        ///<param name="newNode" type="dNode" value="new dNode('')">new node to append to tree</param>
        if (this.IsArray()) {
            error("can not appendLeft to an array node");
        }
        if (this.left === null && this.leftArray === null) {
            this.left = newNode;
        }
        else if (this.left === null && this.leftArray !== null) {
            this.leftArray.push(newNode);
        }
        else if (this.left !== null && this.leftArray === null) {
            this.leftArray = [this.left];
            this.left = null;
            this.leftArray.push(newNode);
        }
        else {
            error("Append left error no situation found");
        }
        if (newNode !== null) {
            newNode.parent = this;
        }
    };
    dNode.prototype.AppendRight = function (newNode) {
        ///<summary>Append a new node to right of this node.</summary>
        ///<param name="newNode" type="dNode" value="new dNode('')">new node to append to tree</param>
        if (this.IsArray()) {
            error("can not appendRight to an array node");
        }
        if (this.right === null && this.rightArray === null) {
            this.right = newNode;
        }
        else if (this.right === null && this.rightArray !== null) {
            this.rightArray.push(newNode);
        }
        else if (this.right !== null && this.rightArray === null) {
            this.rightArray = [this.right];
            this.right = null;
            this.rightArray.push(newNode);
        }
        else {
            error("Append right error no situation found");
        }
        if (newNode !== null) {
            newNode.parent = this;
        }
    };
    dNode.TokenTypes = {
        identifier: "identifier",
        keyword: "keyword",
        string: "string",
        number: "number",
        operator: "operator"
    };
    return dNode;
}());



/***/ }),

/***/ "../../common/dory/src/OmniScript/Decompressor.ts":
/*!********************************************************!*\
  !*** ../../common/dory/src/OmniScript/Decompressor.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Decompressor": () => (/* binding */ Decompressor)
/* harmony export */ });
/* harmony import */ var _Error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Error */ "../../common/dory/src/OmniScript/Error.ts");
/* harmony import */ var _DNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DNode */ "../../common/dory/src/OmniScript/DNode.ts");


//TODO: Converted from JS -> TS in a hurry. convert for real
var error = function (message) {
    _Error__WEBPACK_IMPORTED_MODULE_0__.OSError.throwWithMessage("Decompression", message, undefined);
};
var directions = {
    left: "╣",
    right: "╠",
    up: "╩",
    array: "╬",
    "null": "■"
};
var directionDict = {
    "╣": {
        doCharBucket: function (lastDNode, charBucket) {
            ///<param name="lastDNode" value="new DNode()"></param>
            var newLast = lastDNode;
            if (charBucket !== "") {
                if (lastDNode.IsArray()) {
                    newLast = new _DNode__WEBPACK_IMPORTED_MODULE_1__.DNode(charBucket);
                    lastDNode.PushToArray(newLast);
                }
                else {
                    lastDNode.LoadToken(charBucket);
                }
            }
            return newLast;
        },
        getNewLast: function (lastDNode, nextIsNull) {
            ///<param name="lastDNode" value="new DNode()"></param>
            ///<param name="nextIsNull" value="true">true is next char is null, false if not</param>
            var newNode;
            if (nextIsNull) {
                if (lastDNode.IsArray()) {
                    error("nextIsNull. illogical to have null on array.");
                }
                else {
                    lastDNode.AppendLeft(null);
                }
                newNode = lastDNode;
            }
            else {
                newNode = new _DNode__WEBPACK_IMPORTED_MODULE_1__.DNode(null);
                if (lastDNode.IsArray()) {
                    lastDNode.PushToArray(newNode);
                }
                else {
                    lastDNode.AppendLeft(newNode);
                }
            }
            return newNode;
        }
    },
    "╠": {
        doCharBucket: function (lastDNode, charBucket) {
            ///<param name="lastDNode" value="new DNode()"></param>
            var newLast = lastDNode;
            if (charBucket !== "") {
                if (lastDNode.IsArray()) {
                    newLast = new _DNode__WEBPACK_IMPORTED_MODULE_1__.DNode(charBucket);
                    lastDNode.PushToArray(newLast);
                }
                else {
                    lastDNode.LoadToken(charBucket);
                }
            }
            return newLast;
        },
        getNewLast: function (lastDNode, nextIsNull) {
            ///<param name="lastDNode" value="new DNode()"></param>
            ///<param name="nextIsNull" value="true">true is next char is null, false if not</param>
            var newNode;
            if (nextIsNull) {
                if (lastDNode.IsArray()) {
                    error("nextIsNull. illogical to have null on array.");
                }
                else {
                    lastDNode.AppendRight(null);
                }
                newNode = lastDNode;
            }
            else {
                newNode = new _DNode__WEBPACK_IMPORTED_MODULE_1__.DNode(null);
                if (lastDNode.IsArray()) {
                    lastDNode.PushToArray(newNode);
                }
                else {
                    lastDNode.AppendRight(newNode);
                }
            }
            return newNode;
        }
    },
    "╩": {
        doCharBucket: function (lastDNode, charBucket) {
            ///<param name="lastDNode" value="new DNode()"></param>
            var newLast = lastDNode;
            if (charBucket !== "") {
                if (lastDNode.IsArray()) {
                    newLast = new _DNode__WEBPACK_IMPORTED_MODULE_1__.DNode(charBucket);
                    lastDNode.PushToArray(newLast);
                }
                else {
                    lastDNode.LoadToken(charBucket);
                }
            }
            return newLast;
        },
        getNewLast: function (lastDNode, nextIsNull) {
            ///<param name="lastDNode" value="new DNode()"></param>
            ///<param name="nextIsNull" value="true">true is next char is null, false if not</param>
            if (nextIsNull) {
                error("nextIsNull. null char can not follow directions.up.");
            }
            return lastDNode.parent;
        }
    },
    "╬": {
        doCharBucket: null,
        getNewLast: function (lastDNode, nextIsNull) {
            ///<param name="lastDNode" value="new DNode()"></param>
            ///<param name="nextIsNull" value="true">true is next char is null, false if not</param>
            if (nextIsNull) {
                error("nextIsNull. null char can not follow directions.array.");
            }
            lastDNode.PushToArray(null);
            return lastDNode;
        }
    }
};
var decompressForest = function (forestString) {
    ///<param name="forestString" type="String" value="''">string of forest</param>
    var charBucket = "";
    var rootDNode = new _DNode__WEBPACK_IMPORTED_MODULE_1__.DNode(null);
    var lastDNode = rootDNode;
    //var newNode = null;
    for (var i = 0, len = forestString.length; i < len; i++) {
        var char = forestString[i];
        var directionOp = directionDict[char];
        if (directionOp !== undefined) {
            if (directionOp.doCharBucket !== null) {
                lastDNode = directionOp.doCharBucket(lastDNode, charBucket);
                charBucket = "";
            }
            // peek next char for null
            var nextIsNull = i + 1 < len && forestString[i + 1] === directions.null;
            lastDNode = directionOp.getNewLast(lastDNode, nextIsNull);
            if (nextIsNull) {
                i++;
            }
        }
        else {
            //this is a character
            charBucket += char;
        }
    }
    if (lastDNode !== null) {
        error("Decompression not symmetrical");
    }
    return rootDNode;
};
var Decompressor = /** @class */ (function () {
    function Decompressor() {
    }
    Decompressor.prototype.Decompress = function (forestString) {
        ///<param name="forestString" type="String" value="''">array of tree strings</param>
        ///<returns type="DNode">Forest of DNode trees in a root DNode.</returns>
        return decompressForest(forestString);
    };
    Decompressor.directions = directions;
    return Decompressor;
}());
;



/***/ }),

/***/ "../../common/dory/src/OmniScript/Error.ts":
/*!*************************************************!*\
  !*** ../../common/dory/src/OmniScript/Error.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OSError": () => (/* binding */ OSError)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");

var OSError = /** @class */ (function () {
    function OSError(source, message, node) {
        this.message = message;
        this.source = source;
        this.node = node;
    }
    OSError.throwWithMessage = function (source, message, node) {
        throw new OSError(source, message, node);
    };
    OSError.errorWithMessage = function (source, message, node) {
        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: message + " | source: " + source + " ", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning });
        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: node, logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning });
    };
    ;
    return OSError;
}());



/***/ }),

/***/ "../../common/dory/src/OmniScript/EvalContext.ts":
/*!*******************************************************!*\
  !*** ../../common/dory/src/OmniScript/EvalContext.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EvalContext": () => (/* binding */ EvalContext)
/* harmony export */ });
/**
 * * Evaluation scope Context Object which lasts for whole evaluation.
 * * Context object must be destroyed when evaluation completes. It must not leak to another scope of evaluation//56041
 * @param {*} dataSource
 * Data Source object if any exists.
 * value="{}"
 * @param {*} response
 * Response object
 * @param {*} symDict
 * type="SymbolDict"
 * value="new SymbolDict()"
 * Symbol dictionary for current scope
 * @param {*} global
 * @param {*} controlDict
 * @param {*} extensions
 * @param {*} context
 * Context of Dory instance
 * type=IContext
 */
var EvalContext = /** @class */ (function () {
    function EvalContext(dataSource, response, symDict, globals, controls, extensions, context) {
        this.dataSource = dataSource;
        this.response = response;
        this.symDict = symDict;
        this.global = globals;
        this.controlDict = controls || {};
        this.extensions = extensions;
        this.context = context;
        this.forestStack = [];
    }
    EvalContext.prototype.addStack = function (stack) {
        this.forestStack.push(stack);
        stack.setContextIndex(this.forestStack.length - 1);
    };
    EvalContext.prototype.popStack = function () {
        var lastStack = this.forestStack.pop();
        lastStack === null || lastStack === void 0 ? void 0 : lastStack.clearContextIndex();
        return lastStack;
    };
    EvalContext.prototype.getStackWithReason = function (reason) {
        for (var i = this.forestStack.length - 1; i >= 0; i--) {
            if (this.forestStack[i].Reason == reason) {
                return this.forestStack[i];
            }
        }
        return null;
    };
    EvalContext.prototype.messageStacksAbove = function (stack, message) {
        for (var index = stack.ContextIndex; index < this.forestStack.length; index++) {
            this.forestStack[index].setMessage(message);
        }
    };
    return EvalContext;
}());



/***/ }),

/***/ "../../common/dory/src/OmniScript/Evaluator.ts":
/*!*****************************************************!*\
  !*** ../../common/dory/src/OmniScript/Evaluator.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Eval": () => (/* binding */ Eval),
/* harmony export */   "summarizeToken": () => (/* binding */ summarizeToken)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _Helpers_StringHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Helpers/StringHelper */ "../../common/dory/src/Helpers/StringHelper.ts");
/* harmony import */ var _Error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Error */ "../../common/dory/src/OmniScript/Error.ts");
/* harmony import */ var _EvalContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EvalContext */ "../../common/dory/src/OmniScript/EvalContext.ts");
/* harmony import */ var _Stack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Stack */ "../../common/dory/src/OmniScript/Stack.ts");
/* harmony import */ var _Symbol__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Symbol */ "../../common/dory/src/OmniScript/Symbol.ts");
/* harmony import */ var _SymbolDict__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SymbolDict */ "../../common/dory/src/OmniScript/SymbolDict.ts");







//TODO: Converted from JS -> TS in a hurry. convert for real
var determineSymbolType = function (objectValue) {
    /// <summary>Determine symbol type of an object</summary>
    ///<param name="objectValue" type="object" value="{}">Value of an object to be type determined</param>
    var symType = _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.native;
    var typeHelper = new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__.TypeHelper();
    if (typeHelper.isNumber(objectValue)) {
        symType = _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.number;
    }
    else if (typeHelper.isString(objectValue)) {
        symType = _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.string;
    }
    else if (typeHelper.isArray(objectValue)) {
        symType = _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.array;
    }
    else if (typeHelper.isBool(objectValue)) {
        //#R2.10a
        symType = _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.boolean;
    }
    else if (typeHelper.isDate(objectValue)) {
        //#R2.3
        symType = _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.date;
    }
    else if (typeHelper.isObject(objectValue)) {
        symType = _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.object;
    }
    return symType;
};
var isMathOperation = function (leftSymbol, rightSymbol) {
    /// <summary>Check wheter a mathematical operation can be executed on these left and right symbols</summary>
    ///<param name="leftSymbol" type="Symbol" value="new Symbol('a', 5)">Left symbol</param>
    ///<param name="rightSymbol" type="Symbol" value="new Symbol('a', 5)">Right symbol</param>
    var isMathOp = true;
    switch (leftSymbol.type) {
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.boolean:
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.number:
            isMathOp = true;
            break;
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.string:
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.object:
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.native:
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.date:
            isMathOp = false;
            break;
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types["null"]:
            break;
        default:
            throwError("Type Not Defined Yet ! : " + leftSymbol.type, null);
            break;
    }
    switch (rightSymbol.type) {
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.boolean:
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.number:
            isMathOp = isMathOp && true;
            break;
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.string:
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.object:
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.native:
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.date:
            isMathOp = isMathOp && false;
            break;
        case _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types["null"]:
            break;
        default:
            throwError("Type Not Defined Yet ! : " + leftSymbol.type, null);
            break;
    }
    return isMathOp;
};
var validationLogic = function (leftStatus, rightStatus) {
    ///<summary>Validation logic of node for left and right existance</summary>
    ///<param name="leftStatus" type="integer" value="1">Nodes left status. {>=2: "must have array with at least size on left", 1: "must have left", 0: "does not matter", -1: "must not have left", -2: "must have an array sized 1"}</param>
    ///<param name="rightStatus" type="integer" value="-1">Nodes right status. {>=2: "must have array with at least size on right", 1: "must have right", 0: "does not matter", -1: "must not have right", -2: "must have an array sized 1"}</param>
    return function (node) {
        ///<param name="node" type="Isbank.OmniScript.DNode" value="new Isbank.OmniScript.DNode()">Node to bind to function</param>
        if (node.left !== null && node.left !== undefined && node.leftArray !== null && node.leftArray !== undefined) {
            throwError("Node has both left", node);
        }
        if (node.right !== null && node.right !== undefined && node.rightArray !== null && node.rightArray !== undefined) {
            throwError("Node has both right", node);
        }
        var hasLeft = ((node.left === null || node.left === undefined) && (node.leftArray === null || node.leftArray === undefined)) ? -1 : 1;
        var hasRight = ((node.right === null || node.right === undefined) && (node.rightArray === null || node.rightArray === undefined)) ? -1 : 1;
        if (leftStatus !== 0) {
            var forceLeft = leftStatus >= 1 ? 1 : -1;
            if (hasLeft !== forceLeft) {
                throwError("Node has left hand side error", node);
            }
            if (leftStatus >= 2 || leftStatus === -2) {
                if (!node.IsLeftArray()) {
                    throwError("Node should have an array on left hand side", node);
                }
                leftStatus = leftStatus !== -2 ? leftStatus : 1;
                if (node.leftArray.length < leftStatus) {
                    throwError("Node should have an array of size " + leftStatus + " on left hand side", node);
                }
            }
        }
        if (rightStatus !== 0) {
            var forceRight = rightStatus >= 1 ? 1 : -1;
            if (hasRight !== forceRight) {
                throwError("Node has right hand side error", node);
            }
            if (rightStatus >= 2 || rightStatus === -2) {
                if (!node.IsRightArray()) {
                    throwError("Node should have an array on right hand side", node);
                }
                rightStatus = rightStatus !== -2 ? rightStatus : 1;
                if (node.rightArray.length < rightStatus) {
                    throwError("Node should have an array of size " + rightStatus + " on right hand side", node);
                }
            }
        }
    };
};
var gsn = function (token) {
    ///<summary>Generate Symbol Name for a token used inline. Ex: a=5, for 5 a symbol name should be generated</summary>
    ///<param name="token" value="new Isbank.OmniScript.Token()"></param>
    return "Inline_" + token.type + "_" + token.value;
};
var comparisionLogic = function (innerLogic) {
    ///<param name="innerLogic" type="function(leftNumber, rightNumber)" value="function(leftNumber, rightNumber){return true}"></param>
    return function (node, evalContext) {
        ///<param name="node" value="new DNode()"></param>
        var leftSymbol = EvalTree(node.left, evalContext);
        var rightSymbol = EvalTree(node.right, evalContext);
        var numberLeft = leftSymbol.GetNumber();
        var numberRight = rightSymbol.GetNumber();
        var result = innerLogic(numberLeft, numberRight);
        var retVal = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, result, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.boolean, evalContext);
        return retVal;
    };
};
var arrayConcat = function (leftSymbol, rightSymbol, evalContext) {
    ///<summary>Concat two arrays</summary>
    ///<param name="leftSymbol" type="Symbol" value="new Symbol('a', 5)"></param>
    ///<param name="rightSymbol" type="Symbol" value="new Symbol('a', 5)"></param>
    ///<returns type="Symbol" value="new Symbol('a', 5)"></returns>
    var i;
    var newArrayVal = [];
    if (leftSymbol.type === _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.array) {
        for (i = 0; i < leftSymbol.value.length; i++) {
            newArrayVal.push(leftSymbol.value[i]);
        }
    }
    else {
        newArrayVal.push(leftSymbol.value);
    }
    if (rightSymbol.type === _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.array) {
        for (i = 0; i < rightSymbol.value.length; i++) {
            newArrayVal.push(rightSymbol.value[i]);
        }
    }
    else {
        newArrayVal.push(rightSymbol.value);
    }
    return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, newArrayVal, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.array, evalContext);
};
var mathOperationLogic = function (mathLogic, stringLogic, arrayLogic) {
    ///<param name="mathLogic" type="function(leftNumber, rightNumber)" value="function(leftNumber, rightNumber){return 6;}"></param>
    ///<param name="stringLogic" type="function(leftString, rightString)" value="function(leftString, rightString){return 'a';}"></param>
    ///<param name="arrayLogic" type="function(leftSymbol, rightSymbol)" value="function(leftSymbol, rightSymbol){return [];}"></param>
    return function (node, evalContext) {
        ///<param name="node" value="new DNode()"></param>
        var leftSymbol = EvalTree(node.left, evalContext);
        var rightSymbol = EvalTree(node.right, evalContext);
        if (leftSymbol.type === _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.array || rightSymbol.type === _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.array) {
            if (arrayLogic === null) {
                throwError("Can not do \"" + node.token.value + "\" on arrays", node);
            }
            return arrayLogic(leftSymbol, rightSymbol, evalContext);
        }
        var leftVal;
        var rightVal;
        if (isMathOperation(leftSymbol, rightSymbol)) {
            leftVal = leftSymbol.GetNumber();
            rightVal = rightSymbol.GetNumber();
            return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, mathLogic(leftVal, rightVal), _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.number, evalContext);
        }
        else {
            //string operation
            if (stringLogic === null) {
                throwError("Can not do \"" + node.token.value + "\" operation for ", node);
            }
            leftVal = leftSymbol.GetString();
            rightVal = rightSymbol.GetString();
            return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, stringLogic(leftVal, rightVal), _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.string, evalContext);
        }
    };
};
var breakingLogic = function (reason) {
    return function (node, evalContext) {
        var foreachStack = evalContext.getStackWithReason(_Stack__WEBPACK_IMPORTED_MODULE_4__.StackReason.foreach);
        if (!foreachStack) {
            throwError(reason + " should be used inside foreach", node);
            return; // for the sake of intellisense
        }
        evalContext.messageStacksAbove(foreachStack, reason == "break" ? _Stack__WEBPACK_IMPORTED_MODULE_4__.StackMessage["break"] : _Stack__WEBPACK_IMPORTED_MODULE_4__.StackMessage["continue"]);
    };
};
var tokenLogicGroups = {
    keyword: {
        "if": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var leftSymbol = EvalTree(node.left, evalContext);
                var trueForest, falseForest = null;
                if (node.IsRightArray()) {
                    trueForest = node.rightArray[0];
                    falseForest = node.rightArray[1];
                }
                else {
                    trueForest = node.right;
                }
                var rightSymbol = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, null, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types["null"], evalContext);
                var myStack = new _Stack__WEBPACK_IMPORTED_MODULE_4__.Stack({ reason: _Stack__WEBPACK_IMPORTED_MODULE_4__.StackReason["if"] });
                if (leftSymbol.GetBoolean()) {
                    rightSymbol = EvalForest(trueForest, evalContext, myStack);
                }
                else {
                    if (falseForest !== null) {
                        rightSymbol = EvalForest(falseForest, evalContext, myStack);
                    }
                }
                //nothing to do if myStack.hasReturnMessage // already returning :)
                return rightSymbol;
            },
            validate: validationLogic(1, 2)
        },
        //#R2.2
        "foreach": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var inn = node.left;
                var inRight = EvalTree(inn.right, evalContext);
                if (inRight.type !== _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.array) {
                    throwError("Node must have [] at left's right", node);
                }
                var eachSymbol = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, null, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types["null"], evalContext);
                for (var i = 0; i < inRight.value.length; i++) {
                    var symbolName = inn.left.token.value;
                    var symbolValue = inRight.value[i];
                    evalContext.symDict.Define(symbolName, symbolValue, determineSymbolType(symbolValue), evalContext);
                    var selfStack = new _Stack__WEBPACK_IMPORTED_MODULE_4__.Stack({ reason: _Stack__WEBPACK_IMPORTED_MODULE_4__.StackReason.foreach });
                    eachSymbol = EvalForest(node.right, evalContext, selfStack);
                    var stackMessage = selfStack.Message;
                    if (stackMessage == _Stack__WEBPACK_IMPORTED_MODULE_4__.StackMessage["break"]) {
                        break;
                    }
                    else if (stackMessage == _Stack__WEBPACK_IMPORTED_MODULE_4__.StackMessage["continue"]) {
                        continue;
                    }
                }
                return eachSymbol;
            },
            validate: validationLogic(1, 1)
        },
        "break": {
            resolve: breakingLogic("break"),
            validate: validationLogic(-1, -1)
        },
        "continue": {
            resolve: breakingLogic("continue"),
            validate: validationLogic(-1, -1)
        }
    },
    string: {
        resolve: function (node, evalContext) {
            var _a, _b;
            ///<param name="node" value="new DNode()"></param>
            var stringText = node.token.value;
            if (node.IsRightArray()) {
                var stringParameters = [];
                for (var i = 0; i < node.rightArray.length; i++) {
                    stringParameters.push(((_a = EvalForest(node.rightArray[i], evalContext, new _Stack__WEBPACK_IMPORTED_MODULE_4__.Stack({ reason: _Stack__WEBPACK_IMPORTED_MODULE_4__.StackReason.string }))) === null || _a === void 0 ? void 0 : _a.GetString()) || "");
                }
                stringText = new _Helpers_StringHelper__WEBPACK_IMPORTED_MODULE_1__.StringHelper().formatStringArray(stringText, stringParameters);
            }
            else if (node.right !== null) {
                var stringParameter = ((_b = EvalForest(node.right, evalContext, new _Stack__WEBPACK_IMPORTED_MODULE_4__.Stack({ reason: _Stack__WEBPACK_IMPORTED_MODULE_4__.StackReason.string }))) === null || _b === void 0 ? void 0 : _b.GetString()) || "";
                stringText = new _Helpers_StringHelper__WEBPACK_IMPORTED_MODULE_1__.StringHelper().formatString(stringText, stringParameter);
            }
            return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, stringText, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.string, evalContext);
        },
        validate: validationLogic(-1, 0)
    },
    number: {
        resolve: function (node, evalContext) {
            ///<param name="node" value="new DNode()"></param>
            return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(gsn(node.token), Number(node.token.value), _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.number, evalContext);
        },
        validate: validationLogic(-1, -1)
    },
    identifier: {
        /**
         *
         * @param {*} node
         * value="new DNode()"
         * @param {*} evalContext
         */
        resolve: function (node, evalContext) {
            var tokenVal = node.token.value;
            switch (tokenVal) {
                // this is case sensitive
                case "response":
                    return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol("response", evalContext.response, determineSymbolType(evalContext.response), evalContext);
                case "true":
                case "false":
                    return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(tokenVal, tokenVal === "true", _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.boolean, evalContext);
                case "null":
                    return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, null, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types["null"], evalContext);
                default:
                    break;
            }
            if (evalContext.dataSource) {
                var dataSourceObj = evalContext.dataSource[tokenVal];
                if (dataSourceObj !== undefined) {
                    return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol("Prm_" + tokenVal, dataSourceObj, determineSymbolType(dataSourceObj), evalContext);
                }
            }
            var symbol = evalContext.symDict.Retrieve(tokenVal);
            if (symbol !== null) {
                return symbol;
            }
            var objectValue = evalContext.global[tokenVal];
            if (objectValue !== undefined) {
                // this means field is not defined on object
                return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol("Global." + tokenVal, objectValue, determineSymbolType(objectValue), evalContext);
            }
            //try to get from control dict
            var control = evalContext.controlDict && evalContext.controlDict[tokenVal];
            if (!new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__.TypeHelper().isNull(control)) {
                return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol("Ctrl_" + tokenVal, control, determineSymbolType(control), evalContext);
            }
            return evalContext.symDict.Define(tokenVal, null, null, evalContext);
        },
        validate: validationLogic(-1, -1)
    },
    operator: {
        ">=": {
            resolve: comparisionLogic(function (leftNumber, rightNumber) { return leftNumber >= rightNumber; }),
            validate: validationLogic(1, 1)
        },
        "<=": {
            resolve: comparisionLogic(function (leftNumber, rightNumber) { return leftNumber <= rightNumber; }),
            validate: validationLogic(1, 1)
        },
        "<": {
            resolve: comparisionLogic(function (leftNumber, rightNumber) { return leftNumber < rightNumber; }),
            validate: validationLogic(1, 1)
        },
        ">": {
            resolve: comparisionLogic(function (leftNumber, rightNumber) { return leftNumber > rightNumber; }),
            validate: validationLogic(1, 1)
        },
        ".": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var leftSymbol = EvalTree(node.left, evalContext);
                var targetValue = leftSymbol.GetValue(node.right.token.value, node, evalContext);
                return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, targetValue, determineSymbolType(targetValue), evalContext);
            },
            validate: validationLogic(1, 1)
        },
        "{}": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var newObject = {};
                var retVal = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, newObject, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.object, evalContext);
                if (node.IsRightNull()) {
                    return retVal;
                }
                var rightItems;
                if (!node.IsRightArray()) {
                    // right can be array or can have 1 item.
                    rightItems = [node.right];
                }
                else {
                    rightItems = node.rightArray;
                }
                for (var i = 0; i < rightItems.length; i++) {
                    var currentNode = rightItems[i];
                    var rightSymbol = EvalTree(currentNode.right, evalContext);
                    var fieldName = currentNode.left.token.value;
                    retVal.AssignSymbol(fieldName, rightSymbol, node, evalContext);
                }
                return retVal;
            },
            validate: validationLogic(-1, 0)
        },
        "()": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var parameterSymbols = [];
                if (!node.IsRightNull()) {
                    if (node.IsRightArray()) {
                        for (var i = 0; i < node.rightArray.length; i++) {
                            parameterSymbols.push(EvalTree(node.rightArray[i], evalContext));
                        }
                    }
                    else {
                        parameterSymbols.push(EvalTree(node.right, evalContext));
                    }
                }
                var leftSymbol;
                var indexerName = null;
                if (node.left.token.value === "[]") {
                    var accessStructure = tokenLogicGroups.operator["[]"].getAccessStructure(node.left, evalContext);
                    leftSymbol = accessStructure.leftSymbol;
                    indexerName = accessStructure.indexerString;
                }
                else if (node.left.token.value == ".") {
                    leftSymbol = EvalTree(node.left.left, evalContext);
                    indexerName = node.left.right.token.value;
                }
                else {
                    leftSymbol = EvalTree(node.left, evalContext);
                }
                var retVal = leftSymbol.CallFunction(indexerName, parameterSymbols, node, evalContext);
                return new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, retVal, determineSymbolType(retVal), evalContext);
            },
            validate: validationLogic(1, 0)
        },
        "[]": {
            getAccessStructure: function (node, evalContext) {
                ///<summary>Access structure access tokens for array</summary>
                ///<param name="node" value="new Isbank.OmniScript.DNode()"></param>
                var leftSymbol = EvalTree(node.left, evalContext);
                var rightSymbol = EvalTree(node.right, evalContext);
                var accessStructure = {
                    indexerString: rightSymbol.GetString(),
                    leftSymbol: leftSymbol
                };
                return accessStructure;
            },
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var retVal;
                if (node.left === null) {
                    //array definition
                    retVal = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, [], _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.array, evalContext);
                    var rightItems;
                    if (node.IsRightNull()) {
                        // if does not have right means an array with 0 elements
                        rightItems = [];
                    }
                    else {
                        if (!node.IsRightArray()) {
                            // right can be array or can have 1 item.
                            rightItems = [node.right];
                        }
                        else {
                            rightItems = node.rightArray;
                        }
                    }
                    for (var i = 0; i < rightItems.length; i++) {
                        // arrays hold symbols value, not symbol itself. Array access symbolizes value. /56041
                        retVal.value.push(EvalTree(rightItems[i], evalContext).value);
                    }
                    return retVal;
                }
                else {
                    //array access
                    var accessStructure = this.getAccessStructure(node, evalContext);
                    var targetValue = accessStructure.leftSymbol.GetValue(accessStructure.indexerString, node, evalContext);
                    retVal = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, targetValue, determineSymbolType(targetValue), evalContext);
                    return retVal;
                }
            },
            // array access is not multidimensional, traditionally slower than jagged /56041 https://msdn.microsoft.com/en-us/library/ms182277.aspx
            validate: validationLogic(0, 0)
        },
        "&&": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var retVal = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, false, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.boolean, evalContext);
                var leftSymbol = EvalTree(node.left, evalContext);
                //now short curcuit evaluation of "AND" /56041
                if (leftSymbol.GetBoolean()) {
                    var rightSymbol = EvalTree(node.right, evalContext);
                    retVal.value = rightSymbol.GetBoolean();
                }
                return retVal;
            },
            validate: validationLogic(1, 1)
        },
        "||": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var retVal = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, true, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.boolean, evalContext);
                var leftSymbol = EvalTree(node.left, evalContext);
                //now short curcuit evaluation of "OR" /56041
                if (!leftSymbol.GetBoolean()) {
                    var rightSymbol = EvalTree(node.right, evalContext);
                    retVal.value = rightSymbol.GetBoolean();
                }
                return retVal;
            },
            validate: validationLogic(1, 1)
        },
        "!": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var rightSymbol = EvalTree(node.right, evalContext);
                var retVal = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, false, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.boolean, evalContext);
                retVal.value = !rightSymbol.GetBoolean();
                return retVal;
            },
            validate: validationLogic(-1, 1)
        },
        "=": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var rightSymbol = EvalTree(node.right, evalContext);
                var leftSymbol;
                var indexerName = null;
                if (node.left.token.value === "[]") {
                    var accessStructure = tokenLogicGroups.operator["[]"].getAccessStructure(node.left, evalContext);
                    leftSymbol = accessStructure.leftSymbol;
                    indexerName = accessStructure.indexerString;
                }
                else if (node.left.token.value == ".") {
                    leftSymbol = EvalTree(node.left.left, evalContext);
                    indexerName = node.left.right.token.value;
                }
                else {
                    leftSymbol = EvalTree(node.left, evalContext);
                }
                leftSymbol.AssignSymbol(indexerName, rightSymbol, node, evalContext);
                return leftSymbol;
            },
            validate: validationLogic(1, 1)
        },
        "!=": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var retVal = tokenLogicGroups.operator["=="].resolve(node, evalContext);
                retVal.value = !retVal.value;
                return retVal;
            },
            validate: function (node) { return tokenLogicGroups.operator["=="].validate(node); }
        },
        "==": {
            resolve: function (node, evalContext) {
                ///<param name="node" value="new DNode()"></param>
                var leftSymbol = EvalTree(node.left, evalContext);
                var rightSymbol = EvalTree(node.right, evalContext);
                var retVal = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, false, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types.boolean, evalContext);
                if (leftSymbol.Equals(rightSymbol)) {
                    retVal.value = true;
                }
                return retVal;
            },
            validate: validationLogic(1, 1)
        },
        "+": {
            resolve: mathOperationLogic(function (leftNumber, rightNumber) {
                return leftNumber + rightNumber;
            }, function (leftString, rightString) {
                return leftString + rightString;
            }, arrayConcat),
            validate: validationLogic(1, 1)
        },
        "*": {
            resolve: mathOperationLogic(function (leftNumber, rightNumber) {
                return leftNumber * rightNumber;
            }, function () { return "NaN"; }, null),
            validate: validationLogic(1, 1)
        },
        "/": {
            resolve: mathOperationLogic(function (leftNumber, rightNumber) {
                return leftNumber / rightNumber;
            }, function () { return "NaN"; }, null),
            validate: validationLogic(1, 1)
        },
        "-": {
            resolve: mathOperationLogic(function (leftNumber, rightNumber) {
                return leftNumber - rightNumber;
            }, function () { return "NaN"; }, null),
            validate: validationLogic(1, 1)
        }
    }
};
var summarizeToken = function (self) {
    ///<param>Summarize a node</param>
    ///<remarks>Inside a node</remarks>
    var retVal = "node: \"" + self.token.value + "\" type: \"" + self.token.type;
    // for strongly typed this must be converted to inline code. nothing dynamic.
    if (self.token.position !== undefined) {
        retVal += "\" @ line: " + self.token.position.line + " column: " + self.token.position.column;
    }
    return retVal;
};
var throwError = function (message, node) {
    _Error__WEBPACK_IMPORTED_MODULE_2__.OSError.throwWithMessage("Evaluator", message + (node === null ? "" : " on " + summarizeToken(node)), node);
};
/**
 * * Evaluate a single statement tree and return target Symbol
 * @param {*} tree
 * value="new DNode()"
 * @param {*} evalContext
 * * returns type="Symbol" value="new Symbol('a', 5)"
 */
var EvalTree = function (tree, evalContext) {
    var tokenLogicGroup = tokenLogicGroups[tree.token.type];
    var retSymbol;
    var targetLogic;
    if (tokenLogicGroup === undefined) {
        throwError("Unexpected token", tree);
    }
    if (tokenLogicGroup.resolve !== undefined) {
        //If the logic does not change when tokens value changes. Ex: For string token type, whatever the value of the string, evaluation logic is same.
        targetLogic = tokenLogicGroup;
    }
    else {
        //Get logic based on tokens value.
        targetLogic = tokenLogicGroup[tree.token.value];
        if (targetLogic === undefined) {
            throwError("Unexpected token", tree);
        }
    }
    targetLogic.validate(tree);
    retSymbol = targetLogic.resolve(tree, evalContext);
    return retSymbol;
};
/**
 * * Evaluate a single statement tree and return target Symbol
 * @param {*} forest
 * Forest of trees to be evaluated.
 * value="new DNode()"
 * @param {*} evalContext
 * * returns type="Symbol" value="new Symbol('a', 5)
 */
var EvalForest = function (forest, evalContext, stack) {
    var retSymbol = null;
    evalContext.addStack(stack);
    //#R2.11
    if (forest.array) {
        for (var i = 0; i < forest.array.length; i++) {
            retSymbol = EvalTree(forest.array[i], evalContext);
            if (stack.hasReturnMessage()) {
                break; // pop stack, down below
            }
        }
    }
    else {
        retSymbol = new _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol(null, null, _Symbol__WEBPACK_IMPORTED_MODULE_5__.Symbol.Types["null"], evalContext);
    }
    evalContext.popStack();
    return retSymbol;
};
/**
 * * Evaluate a forest of trees and return value
 * @param {*} forest
 * Forest of trees to be evaluated
 * value="new DNode()"
 * @param {*} response
 * Response object
 * value="{}"
 * @param {*} dataSource
 * Data Source object if any exists.
 * value="{}"
 * @param {*} globals
 * Global instances and libraries: SM, LR, Math, ...
 * value="{}"
 * @param {*} controlDict
 * Component instances
 * value="{}"
 * @param {*} extensions
 * Type extensions: [].length, "".length, [].push, ...
 * value="{}"
 * @param {*} context
 * Context of Dory instance
 */
var Eval = function (forest, response, dataSource, globals, controlDict, extensions, context) {
    var _a;
    // local variable store lasts for evaluation scope
    var symDict = new _SymbolDict__WEBPACK_IMPORTED_MODULE_6__.SymbolDict();
    //create new Evaluation scope context
    var evalContext = new _EvalContext__WEBPACK_IMPORTED_MODULE_3__.EvalContext(dataSource, response, symDict, globals, controlDict, extensions, context);
    var evalForestSymbol = EvalForest(forest, evalContext, new _Stack__WEBPACK_IMPORTED_MODULE_4__.Stack({ reason: _Stack__WEBPACK_IMPORTED_MODULE_4__.StackReason.root }));
    return (_a = evalForestSymbol === null || evalForestSymbol === void 0 ? void 0 : evalForestSymbol.value) !== null && _a !== void 0 ? _a : null;
};



/***/ }),

/***/ "../../common/dory/src/OmniScript/Stack.ts":
/*!*************************************************!*\
  !*** ../../common/dory/src/OmniScript/Stack.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Stack": () => (/* binding */ Stack),
/* harmony export */   "StackMessage": () => (/* binding */ StackMessage),
/* harmony export */   "StackReason": () => (/* binding */ StackReason)
/* harmony export */ });
var StackReason;
(function (StackReason) {
    StackReason["root"] = "root";
    StackReason["if"] = "if";
    StackReason["foreach"] = "foreach";
    StackReason["string"] = "string";
})(StackReason || (StackReason = {}));
var StackMessage;
(function (StackMessage) {
    StackMessage["break"] = "break";
    StackMessage["continue"] = "continue";
})(StackMessage || (StackMessage = {}));
var Stack = /** @class */ (function () {
    function Stack(_a) {
        var reason = _a.reason;
        this.message = null;
        this.contextIndex = null;
        this.reason = reason;
    }
    Object.defineProperty(Stack.prototype, "Reason", {
        get: function () {
            return this.reason;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stack.prototype, "Message", {
        get: function () {
            return this.message;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stack.prototype, "ContextIndex", {
        get: function () {
            return this.contextIndex;
        },
        enumerable: false,
        configurable: true
    });
    Stack.prototype.setContextIndex = function (index) {
        this.contextIndex = index;
    };
    Stack.prototype.clearContextIndex = function () {
        this.contextIndex = null;
    };
    Stack.prototype.setMessage = function (message) {
        this.message = message;
    };
    Stack.prototype.hasReturnMessage = function () {
        switch (this.message) {
            case StackMessage.break:
            case StackMessage.continue:
                return true;
            default:
                return false;
        }
    };
    return Stack;
}());



/***/ }),

/***/ "../../common/dory/src/OmniScript/Symbol.ts":
/*!**************************************************!*\
  !*** ../../common/dory/src/OmniScript/Symbol.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Symbol": () => (/* binding */ Symbol)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_stringHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/stringHelper */ "../../common/shrimp/helpers/stringHelper.ts");
/* harmony import */ var _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _OmniScript_Evaluator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OmniScript/Evaluator */ "../../common/dory/src/OmniScript/Evaluator.ts");
/* harmony import */ var _Error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Error */ "../../common/dory/src/OmniScript/Error.ts");




//TODO: Converted from JS -> TS in a hurry. convert for real
var throwError = function (message, node) {
    _Error__WEBPACK_IMPORTED_MODULE_3__.OSError.throwWithMessage("Symbol", message + (node === null ? "" : " on " + (0,_OmniScript_Evaluator__WEBPACK_IMPORTED_MODULE_2__.summarizeToken)(node)), node);
};
var messageError = function (message, node) {
    _Error__WEBPACK_IMPORTED_MODULE_3__.OSError.errorWithMessage("Symbol", message + (node === null ? "" : " on " + (0,_OmniScript_Evaluator__WEBPACK_IMPORTED_MODULE_2__.summarizeToken)(node)), node);
};
var compareObjects = function (objectOne, objectTwo, compareContext) {
    // Compare primitives and functions and same instances
    if (objectOne === null || objectTwo === null || isNaN(objectOne) || isNaN(objectTwo)) {
        if (objectOne === null && objectTwo === null) {
            return true;
        }
        // remember that NaN === NaN returns false.
        if (isNaN(objectOne) && isNaN(objectTwo)) {
            return true;
        }
        return false;
    }
    //ok now complex object compare
    var equalsObjOne = objectOne["Equals"];
    var equalsObjTwo = objectTwo["Equals"];
    var equalsWay = equalsObjOne !== undefined;
    equalsWay = equalsWay && (equalsObjTwo !== undefined);
    if (equalsWay) {
        //if objects implement Equals style comparision. Each environment has to spesify its own way of Equals comparision implementation checking. //56041
        //js true|false returning Equals, .net bool returning Equals override, objc BOOL returning isEqual, java boolean returning equals, etc... //56041
        return equalsObjOne.call(objectOne, objectTwo);
    }
    else {
        // :) hard way. check fields one by one recursively.
        //Javascript spesific
        {
            if (objectOne === objectTwo) {
                return true;
            }
            // Works in case when functions are created in constructor.
            // Comparing dates is a common scenario. Another built-ins?
            // We can even handle functions passed across iframes
            if ((typeof objectOne === 'function' && typeof objectTwo === 'function') ||
                (objectOne instanceof Date && objectTwo instanceof Date) ||
                (objectOne instanceof RegExp && objectTwo instanceof RegExp) ||
                (objectOne instanceof String && objectTwo instanceof String) ||
                (objectOne instanceof Number && objectTwo instanceof Number)) {
                return objectOne.toString() === objectTwo.toString();
            }
            // At last checking prototypes as good a we can
            if (!(objectOne instanceof Object && objectTwo instanceof Object)) {
                return false;
            }
            if (objectOne.isPrototypeOf(objectTwo) || objectTwo.isPrototypeOf(objectOne)) {
                return false;
            }
            if (objectOne.constructor !== objectTwo.constructor) {
                return false;
            }
            if (objectOne.prototype !== objectTwo.prototype) {
                return false;
            }
            // Check for infinitive linking loops
            if (compareContext.leftChain.indexOf(objectOne) > -1 || compareContext.rightChain.indexOf(objectTwo) > -1) {
                return false;
            }
            var p;
            for (p in objectTwo) {
                if (objectTwo.hasOwnProperty(p) !== objectOne.hasOwnProperty(p)) {
                    return false;
                }
                else if (typeof objectTwo[p] !== typeof objectOne[p]) {
                    return false;
                }
            }
            for (p in objectOne) {
                if (objectTwo.hasOwnProperty(p) !== objectOne.hasOwnProperty(p)) {
                    return false;
                }
                else if (typeof objectTwo[p] !== typeof objectOne[p]) {
                    return false;
                }
                switch (typeof (objectOne[p])) {
                    case 'object':
                    case 'function':
                        compareContext.leftChain.push(objectOne);
                        compareContext.rightChain.push(objectTwo);
                        if (!compareObjects(objectOne[p], objectTwo[p], compareContext)) {
                            return false;
                        }
                        compareContext.leftChain.pop();
                        compareContext.rightChain.pop();
                        break;
                    default:
                        if (objectOne[p] !== objectTwo[p]) {
                            return false;
                        }
                        break;
                }
            }
        }
        //\Javascript Spesific
    }
};
var getTypeExtension = function (type, extensionName, evalContext) {
    ///<summary>Get types extension properties. Because languages differ native and primitive object properties should be mapped externally</summary>
    ///<param name="type" type="Symbol.Types" value="''">Type of value. Symbol.Types</param>
    ///<param name="extensionName">Name of property</param>
    var quickKey = Object.keys(evalContext.global["Quick"]).includes(extensionName);
    if (quickKey) {
        return null;
    }
    var typesExtensions = evalContext.extensions[_shrimp_helpers_stringHelper__WEBPACK_IMPORTED_MODULE_0__.StringHelper.capitalizeString(type)];
    if (!typesExtensions) {
        return null;
    }
    var targetExtension = typesExtensions[extensionName];
    if (!targetExtension) {
        return null;
    }
    return targetExtension;
};
var isFieldAFunctionProperty = function (field) {
    return new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__.TypeHelper().isFunction(field) && field.isProperty;
};
var isItemAComponent = function (item) {
    return item.M !== null && item.M !== undefined;
};
var Symbol = /** @class */ (function () {
    function Symbol(name, value, type, evalContext) {
        /// <summary>Symbol structure. Every token is a symbol structure</summary>
        ///<param name="name" type="string" value="''">Name of symbol</param>
        ///<param name="value" type="object" value="{}">Value of symbol. Can be null, can be object, ...</param>
        ///<param name="type" type="Symbol.Types" value="''">Type of value. Symbol.Types</param>
        ///<field name="name" type="string" value="''">Name of symbol</field>
        ///<field name="value" type="object" value="{}">Value of symbol. Can be null, can be object, ...</field>
        ///<field name="type" type="Symbol.Types" value="''">Type of value. Symbol.Types</field>
        name = name;
        this.AssignValue(null, value, type, null, evalContext);
    }
    Symbol.prototype.AssignValue = function (indexerName, value, type, assignerNode, evalContext) {
        /// <summary>Assign another value to a symbol</summary>
        ///<param name="indexerName" type="String" value="'5'">indexer or field name of source symbol to assign destination</param>
        ///<param name="type" type="Symbol.Types" value="''">Type of value. Symbol.Types... </param>
        ///<param name="assignerNode" value="new DNode()">assignment responsible node</param>
        if (indexerName === null) {
            this.value = value === undefined ? null : value;
            this.type = this.value === null ? "null" : type;
        }
        else {
            if (this.IsArrayAccess(indexerName, assignerNode, evalContext)) {
                //number, means array assign
                this.value[parseInt(indexerName, 10)] = value;
            }
            else {
                //Not A Number, means field asssign
                if (new _shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__.TypeHelper().isFunction(this.value[indexerName])) {
                    return this.value[indexerName](value);
                    // javascript only-> Because js does not have real props, this might be property simulated through a function. Pre IE9. IF IE9 dies might change... /56041
                }
                else {
                    if (this.value.QSProxy && this.value.QSProxy.AssignProxy) {
                        return this.value.QSProxy.AssignProxy(indexerName, value);
                    }
                    this.value[indexerName] = value;
                    // javascript field access does not require reflection and variations :) objects are json pure, sorry.. /56041
                }
            }
        }
    };
    Symbol.prototype.GetValue = function (indexerName, retrieverNode, evalContext) {
        /// <summary>Get value from Symbol</summary>
        ///<param name="indexerName" type="String" value="'5'">indexer or field name of source symbol to retrieve destination</param>
        ///<param name="retrieverNode" value="new DNode()">retrieval responsible node</param>
        //Object null reference prevention
        if (this.type === Symbol.Types.null) {
            return null;
        }
        if (indexerName === null) {
            // normal value access for an identifier. like: b in -> a=b
            return this.value;
        }
        else {
            // field or array type of access  like: c in -> (b object a=b.c) or  ( b array a=b[c])
            // normally JS array access is enough for both
            // for strongly typed language compliance, field or array assign must be decided. 56041
            //for JS: IsNaN return true for 5.5 :)
            if (parseInt(indexerName, 10).toString() === indexerName) {
                //number, means array retrieve
                if (this.type !== Symbol.Types.array) {
                    throwError("Left of indexed access must be array", retrieverNode);
                }
                return this.value[parseInt(indexerName, 10)];
            }
            else {
                //Not A Number, means field retrieve
                var targetExtension = getTypeExtension(this.type, indexerName, evalContext);
                if (targetExtension) {
                    return targetExtension(this.value);
                }
                if (this.type !== Symbol.Types.native && this.type !== Symbol.Types.object) {
                    throwError("Left of indexed access (" + indexerName + ") must be object", retrieverNode);
                }
                if (isFieldAFunctionProperty(this.value[indexerName])) {
                    return this.value[indexerName]();
                    // javascript only-> Because js does not have real props, this might be property simulated through a function. Pre IE9. IF IE9 dies might change... /56041
                }
                else {
                    if (this.value.QSProxy && this.value.QSProxy.GetValueProxy) {
                        return this.value.QSProxy.GetValueProxy(indexerName);
                    }
                    return this.value[indexerName];
                    // javascript field access does not require reflection and variations :) objects are json pure, sorry.. /56041
                }
            }
        }
    };
    Symbol.prototype.CallFunction = function (indexerName, parameterSymbols, responsibleNode, evalContext) {
        ///<summary>Call this symbols function</summary>
        ///<param name="indexerName" type="String" value="'5'">indexer or field name of source symbol</param>
        ///<param name="parameterSymbols" value="[new Symbol()]">Function parameters. Consist of array of symbols.</param>
        ///<param name="responsibleNode" value="new DNode()">responsible function call node</param>
        //Object null reference prevention
        if (this.type === Symbol.Types.null) {
            return null;
        }
        var parameters = [];
        for (var i = 0; i < parameterSymbols.length; i++) {
            parameters.push(parameterSymbols[i].value);
        }
        var retVal;
        if (indexerName === null) {
            retVal = this.value.apply(null, parameters);
        }
        else {
            if (this.IsArrayAccess(indexerName, responsibleNode, evalContext)) {
                retVal = this.value[parseInt(indexerName, 10)].apply(this.value, parameters);
            }
            else {
                //#R2.2a
                var targetExtension = getTypeExtension(this.type, indexerName, evalContext);
                if (targetExtension) {
                    parameters.unshift(this.value);
                    return targetExtension.apply(null, parameters);
                }
                if (isFieldAFunctionProperty(this.value[indexerName])) {
                    throwError(indexerName + " is a property, can not be called as a function.", responsibleNode);
                }
                var funcSearchTarget = this.value;
                // // this was MCM. DELETE ----> 08.07.2020
                // //if called object is a component, we should change function search target to M (force $func declaration)
                // var itemIsComp = isItemAComponent(this.value);
                // if (itemIsComp) {
                //     funcSearchTarget = this.value.M;
                // }
                if (funcSearchTarget.QSProxy && funcSearchTarget.QSProxy.MethodProxy) {
                    if (indexerName == "get" || indexerName == "set" || indexerName == "trigger" || indexerName == "delay" || indexerName == "clearTimeout") {
                        return funcSearchTarget[indexerName].apply(this.value, parameters);
                    }
                    else {
                        parameters.unshift(indexerName);
                        return funcSearchTarget.QSProxy.MethodProxy.apply(this.value, parameters);
                    }
                }
                if (funcSearchTarget[indexerName]) {
                    retVal = funcSearchTarget[indexerName].apply(this.value, parameters);
                }
                else {
                    // // this was MCM. DELETE ----> 08.07.2020
                    // var msg = "No function named " + indexerName + " on " + (itemIsComp ? "component, check missin $func definition" : "object");
                    var msg = "No function named " + indexerName + " on object";
                    messageError(msg, responsibleNode);
                    return null;
                }
            }
        }
        return retVal;
    };
    Symbol.prototype.IsArrayAccess = function (indexerName, responsibleNode, evalContext) {
        ///<summary>Indexer is array or field access</summary>
        ///<param name="indexerName" type="String" value="'5'">indexer or field name of source symbol to assign destination</param>
        ///<param name="responsibleNode" value="new DNode()">responsible node of this access</param>
        // normally JS array access is enough for both
        // for strongly typed language compliance, field or array assign must be decided
        //for JS: IsNaN return true for 5.5 :)
        if (parseInt(indexerName, 10).toString() === indexerName) {
            //number, means array access
            if (this.type !== Symbol.Types.array) {
                throwError("Left of assignment must be array", responsibleNode);
            }
            return true;
        }
        else {
            //Not A Number, means field asssign
            //#R2.2a
            if (getTypeExtension(this.type, indexerName, evalContext)) {
                return false;
            }
            if (this.type !== Symbol.Types.native && this.type !== Symbol.Types.object) {
                throwError("Left of assignment must be object", responsibleNode);
            }
            return false;
            //Not A Number, means field access
        }
    };
    Symbol.prototype.AssignSymbol = function (indexerName, symbol, assignerNode, evalContext) {
        /// <summary>Assign another symbol to this</summary>
        ///<param name="indexerName" type="String" value="'5'">indexer or field name of source symbol to assign destination</param>
        ///<param name="symbol" type="Symbol" value="new Symbol()">symbol to assign</param>
        ///<param name="assignerNode" value="new DNode()">assignment responsible node</param>
        //maybe symdict lookup in future, pointer, ref. or sth else someday. Everyone started somewhere :) //56041
        //or maybe we will leave everything to hosting environment, based on their implementation of pointers. js, .net, objc, java assign objects by pointer allready //56041
        this.AssignValue(indexerName, symbol.value, symbol.type, assignerNode, evalContext);
    };
    Symbol.prototype.Equals = function (symbol) {
        /// <summary>Check equality with another symbol</summary>
        ///<param name="symbol" type="Symbol" value="new Symbol()">symbol to check</param>
        //todo: what to do with array... just bored...
        if (this.type === Symbol.Types.native || this.type === Symbol.Types.object) {
            if (symbol.type === Symbol.Types.native || symbol.type === Symbol.Types.object) {
                return compareObjects(this.value, symbol.value, null);
            }
            return false;
        }
        if (this.type !== symbol.type) {
            //different types can not be equal
            return false;
        }
        if (this.type === Symbol.Types.null) {
            // if one is null other is definatelly null. Different types eliminated prev.
            return true;
        }
        //boolean, number, string reached this point
        if (this.value === symbol.value) {
            return true;
        }
        return false;
    };
    Symbol.prototype.GetString = function () {
        ///<summary>Get string value of symbol</summary>
        if (this.type === Symbol.Types.null || this.value === null) {
            return "null";
        }
        if (this.type === Symbol.Types.string) {
            return this.value;
        }
        if (this.type === Symbol.Types.array) {
            var retVal = "";
            for (var i = 0, len = this.value.length; i < len; i++) {
                retVal += (i !== 0 ? "," : "") + this.value[i].toString();
            }
            return retVal;
        }
        return this.value.toString();
    };
    Symbol.prototype.GetBoolean = function () {
        ///<summary>Get boolean value of symbol</summary>
        if (this.type === Symbol.Types.null || this.value === null) {
            // null is behaved as null
            return false;
        }
        if (this.type === Symbol.Types.boolean && this.value === false) {
            return false;
        }
        if (this.type === Symbol.Types.number && this.value === 0) {
            //0 is false
            return false;
        }
        //everything else is true because they exist. //56041
        return true;
    };
    Symbol.prototype.GetNumber = function () {
        if (this.type === Symbol.Types.null || this.value === null) {
            return null;
        }
        if (this.type === Symbol.Types.number) {
            return this.value;
        }
        if (this.type === Symbol.Types.string) {
            // parse string to number.
            return Number(this.value);
        }
        if (this.type === Symbol.Types.boolean) {
            return this.value === true ? 1 : 0;
        }
        return 0;
    };
    Symbol.Types = {
        //For a symbol keyword, operator drops. identifier is translated into a number, string or object, native, boolean, null in evaluation. 56041
        string: "string",
        number: "number",
        object: "object",
        native: "native",
        boolean: "boolean",
        array: "array",
        //#R2.3
        date: "date",
        "null": "null"
    };
    return Symbol;
}());



/***/ }),

/***/ "../../common/dory/src/OmniScript/SymbolDict.ts":
/*!******************************************************!*\
  !*** ../../common/dory/src/OmniScript/SymbolDict.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SymbolDict": () => (/* binding */ SymbolDict)
/* harmony export */ });
/* harmony import */ var _Error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Error */ "../../common/dory/src/OmniScript/Error.ts");
/* harmony import */ var _Symbol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Symbol */ "../../common/dory/src/OmniScript/Symbol.ts");


//TODO: Converted from JS -> TS in a hurry. add type infos
/// <summary>Symbol dictionary class</summary>
/// <field name="symbolDict">Symbol dictionary itself</field>
var SymbolDict = /** @class */ (function () {
    function SymbolDict() {
        this.symbolDict = {};
    }
    SymbolDict.prototype.Define = function (symbolName, value, type, evalContext) {
        /// <summary>Define a new symbol in dictionary</summary>
        ///<param name="symbolName" type="string" value="''">Name of new symbol</param>
        ///<param name="value" value="{}">Value of new symbol. Can be null, can be object, ...</param>
        ///<param name="type" type="Symbol.Types" value="''">Type of value. Symbol.Types</param>
        ///<returns type="Symbol" value="new Symbol('a', 5)"></returns>
        if (symbolName === null || symbolName === undefined) {
            _Error__WEBPACK_IMPORTED_MODULE_0__.OSError.throwWithMessage("SymbolDict", "A symbol name can not be null", null);
        }
        var newSymbol = null;
        if (value === undefined) {
            // this means undefine field on the object. so delete it :) //56041
            //undefined is not null. maybe we sould think about this?
            delete this.symbolDict[symbolName];
        }
        else {
            //#R2.2a
            newSymbol = new _Symbol__WEBPACK_IMPORTED_MODULE_1__.Symbol(symbolName, value, type, evalContext);
            this.symbolDict[symbolName] = newSymbol;
        }
        return newSymbol;
    };
    SymbolDict.prototype.Retrieve = function (symbolName) {
        /// <summary>Retrieve a symbol value from dictionary</summary>
        ///<param name="symbolName" type="string" value="''">Name of symbol to retrieve</param>
        ///<returns type="Symbol" value="new Symbol('a', 5)"></returns>
        var retVal = this.symbolDict[symbolName];
        if (retVal === undefined) {
            return null;
        }
        return retVal;
    };
    return SymbolDict;
}());



/***/ }),

/***/ "../../common/qshell/index.ts":
/*!************************************!*\
  !*** ../../common/qshell/index.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoryRenderer": () => (/* reexport safe */ _src_helpers_Renderer__WEBPACK_IMPORTED_MODULE_5__.DoryRenderer),
/* harmony export */   "QShell": () => (/* binding */ QShell),
/* harmony export */   "RendererChild": () => (/* reexport safe */ _src_helpers_RendererChild__WEBPACK_IMPORTED_MODULE_6__.RendererChild)
/* harmony export */ });
/* harmony import */ var _shrimp_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shrimp/context */ "../../common/shrimp/context.ts");
/* harmony import */ var _shrimp_interfaces_quick_IExternalLocalizationFunc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shrimp/interfaces/quick/IExternalLocalizationFunc */ "../../common/shrimp/interfaces/quick/IExternalLocalizationFunc.ts");
/* harmony import */ var _shrimp_interfaces_quick_IRoleBaseAuthorizationFunc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shrimp/interfaces/quick/IRoleBaseAuthorizationFunc */ "../../common/shrimp/interfaces/quick/IRoleBaseAuthorizationFunc.ts");
/* harmony import */ var _shrimp_interfaces_quick_IUXManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shrimp/interfaces/quick/IUXManager */ "../../common/shrimp/interfaces/quick/IUXManager.ts");
/* harmony import */ var _src_helpers_QJsonHelpers_QJsonPool__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/helpers/QJsonHelpers/QJsonPool */ "../../common/qshell/src/helpers/QJsonHelpers/QJsonPool.ts");
/* harmony import */ var _src_helpers_Renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/helpers/Renderer */ "../../common/qshell/src/helpers/Renderer.ts");
/* harmony import */ var _src_helpers_RendererChild__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/helpers/RendererChild */ "../../common/qshell/src/helpers/RendererChild.ts");
/* harmony import */ var _src_interfaces_construction_CompInstanceTracker__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/interfaces/construction/CompInstanceTracker */ "../../common/qshell/src/interfaces/construction/CompInstanceTracker.ts");
/* harmony import */ var _src_interfaces_construction_IComponentManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/interfaces/construction/IComponentManager */ "../../common/qshell/src/interfaces/construction/IComponentManager.ts");
/* harmony import */ var _src_interfaces_construction_ICookieManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/interfaces/construction/ICookieManager */ "../../common/qshell/src/interfaces/construction/ICookieManager.ts");
/* harmony import */ var _src_interfaces_construction_ICryptographyManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/interfaces/construction/ICryptographyManager */ "../../common/qshell/src/interfaces/construction/ICryptographyManager.ts");
/* harmony import */ var _src_interfaces_construction_IGlobalMethods__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/interfaces/construction/IGlobalMethods */ "../../common/qshell/src/interfaces/construction/IGlobalMethods.ts");
/* harmony import */ var _src_interfaces_construction_IHostTriggerer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/interfaces/construction/IHostTriggerer */ "../../common/qshell/src/interfaces/construction/IHostTriggerer.ts");
/* harmony import */ var _src_interfaces_construction_ILanguageExtensions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/interfaces/construction/ILanguageExtensions */ "../../common/qshell/src/interfaces/construction/ILanguageExtensions.ts");
/* harmony import */ var _src_interfaces_construction_INavigationManager__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/interfaces/construction/INavigationManager */ "../../common/qshell/src/interfaces/construction/INavigationManager.ts");
/* harmony import */ var _src_interfaces_construction_INetworkManager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/interfaces/construction/INetworkManager */ "../../common/qshell/src/interfaces/construction/INetworkManager.ts");
/* harmony import */ var _src_interfaces_construction_IPlatformManager__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/interfaces/construction/IPlatformManager */ "../../common/qshell/src/interfaces/construction/IPlatformManager.ts");
/* harmony import */ var _src_interfaces_construction_IProcessManager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/interfaces/construction/IProcessManager */ "../../common/qshell/src/interfaces/construction/IProcessManager.ts");
/* harmony import */ var _src_interfaces_construction_IQJsonRetriever__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/interfaces/construction/IQJsonRetriever */ "../../common/qshell/src/interfaces/construction/IQJsonRetriever.ts");
/* harmony import */ var _src_interfaces_construction_IRegionalManager__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/interfaces/construction/IRegionalManager */ "../../common/qshell/src/interfaces/construction/IRegionalManager.ts");
/* harmony import */ var _src_interfaces_construction_IStoreManager__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/interfaces/construction/IStoreManager */ "../../common/qshell/src/interfaces/construction/IStoreManager.ts");





















var QShell = /** @class */ (function () {
    function QShell(_a, operatorCollection) {
        var qjsonRetriever = _a.qjsonRetriever, moduleManager = _a.moduleManager, network = _a.network, ux = _a.ux, region = _a.region, hostTriggerer = _a.hostTriggerer, platformType = _a.platformType, platformManager = _a.platformManager;
        this.contextName = "QShell";
        this.context = new _shrimp_context__WEBPACK_IMPORTED_MODULE_0__.ContextManager();
        this.network = network;
        this.qjsonRetriever = qjsonRetriever;
        var self = this;
        this.qjsonPool = new _src_helpers_QJsonHelpers_QJsonPool__WEBPACK_IMPORTED_MODULE_4__.QJsonPool({ qjsonRetriever: qjsonRetriever, moduleManager: moduleManager, context: this.context });
        this.ux = ux;
        this.region = region;
        this.platformType = platformType;
        this.hostTriggerer = hostTriggerer;
        this.operatorCollection = operatorCollection;
        this.platformManager = platformManager;
        this.context.RegisterItem(this);
    }
    QShell.prototype.CreateRenderer = function (_a) {
        var componentManager = _a.componentManager, globalMethods = _a.globalMethods, doryInstanceName = _a.doryInstanceName, componentInstanceTracker = _a.componentInstanceTracker, langExtensions = _a.langExtensions, navigationManager = _a.navigationManager, externalLocalizationFunc = _a.externalLocalizationFunc, storeManager = _a.storeManager, cookieManager = _a.cookieManager, regionalConfig = _a.regionalConfig, processManager = _a.processManager, cryptoManager = _a.cryptoManager, config = _a.config;
        this.network.contextName = _src_interfaces_construction_INetworkManager__WEBPACK_IMPORTED_MODULE_15__.NetworkManagerContextName;
        this.qjsonRetriever.contextName = _src_interfaces_construction_IQJsonRetriever__WEBPACK_IMPORTED_MODULE_18__.QJsonRetrieverContextName;
        componentManager.contextName = _src_interfaces_construction_IComponentManager__WEBPACK_IMPORTED_MODULE_8__.ComponentManagerContextName;
        globalMethods.contextName = _src_interfaces_construction_IGlobalMethods__WEBPACK_IMPORTED_MODULE_11__.GlobalMethodsContextName;
        if (this.ux) {
            this.ux.contextName = _shrimp_interfaces_quick_IUXManager__WEBPACK_IMPORTED_MODULE_3__.UXManagerContextName;
            this.context.RegisterItem(this.ux);
        }
        if (this.region) {
            this.region.contextName = _src_interfaces_construction_IRegionalManager__WEBPACK_IMPORTED_MODULE_19__.RegionalManagerContextName;
            this.context.RegisterItem(this.region);
        }
        if (this.hostTriggerer) {
            this.hostTriggerer.contextName = _src_interfaces_construction_IHostTriggerer__WEBPACK_IMPORTED_MODULE_12__.HostTriggererContextName;
            this.context.RegisterItem(this.hostTriggerer);
        }
        if (this.platformManager) {
            this.platformManager.contextName = _src_interfaces_construction_IPlatformManager__WEBPACK_IMPORTED_MODULE_16__.PlatformManagerContextName;
            this.context.RegisterItem(this.platformManager);
        }
        if (langExtensions) {
            langExtensions.contextName = _src_interfaces_construction_ILanguageExtensions__WEBPACK_IMPORTED_MODULE_13__.LanguageExtensionsContextName;
            this.context.RegisterItem(langExtensions);
        }
        if (componentInstanceTracker) {
            componentInstanceTracker.contextName = _src_interfaces_construction_CompInstanceTracker__WEBPACK_IMPORTED_MODULE_7__.CompInstanceTrackerContextName;
            this.context.RegisterItem(componentInstanceTracker);
        }
        if (navigationManager) {
            navigationManager.contextName = _src_interfaces_construction_INavigationManager__WEBPACK_IMPORTED_MODULE_14__.NavigationManagerContextName;
            this.context.RegisterItem(navigationManager);
        }
        if (config === null || config === void 0 ? void 0 : config.roleBaseAuthorizationFunc) {
            config.roleBaseAuthorizationFunc.contextName = _shrimp_interfaces_quick_IRoleBaseAuthorizationFunc__WEBPACK_IMPORTED_MODULE_2__.RoleBaseAuthorizationFuncContextName;
            this.context.RegisterItem(config.roleBaseAuthorizationFunc);
        }
        if (config === null || config === void 0 ? void 0 : config.externaLocalizationFunc) {
            config.externaLocalizationFunc.contextName = _shrimp_interfaces_quick_IExternalLocalizationFunc__WEBPACK_IMPORTED_MODULE_1__.ExternalLocalizationFuncContextName;
            this.context.RegisterItem(config.externaLocalizationFunc);
        }
        if (storeManager) {
            storeManager.contextName = _src_interfaces_construction_IStoreManager__WEBPACK_IMPORTED_MODULE_20__.StoreManagerContextName;
            this.context.RegisterItem(storeManager);
        }
        if (cookieManager) {
            cookieManager.contextName = _src_interfaces_construction_ICookieManager__WEBPACK_IMPORTED_MODULE_9__.CookieManagerContextName;
            this.context.RegisterItem(cookieManager);
        }
        if (processManager) {
            processManager.contextName = _src_interfaces_construction_IProcessManager__WEBPACK_IMPORTED_MODULE_17__.ProcessManagerContextName;
            this.context.RegisterItem(processManager);
        }
        if (cryptoManager) {
            cryptoManager.contextName = _src_interfaces_construction_ICryptographyManager__WEBPACK_IMPORTED_MODULE_10__.CryptographyContextName;
            this.context.RegisterItem(cryptoManager);
        }
        this.context.RegisterItem(this.network);
        this.context.RegisterItem(this.qjsonRetriever);
        this.context.RegisterItem(componentManager);
        this.context.RegisterItem(globalMethods);
        this.context.RegisterItem(this.qjsonPool);
        this.qshellRenderer = new _src_helpers_Renderer__WEBPACK_IMPORTED_MODULE_5__.DoryRenderer({ context: this.context, doryInstanceName: doryInstanceName, operatorCollection: this.operatorCollection });
        this.qjsonPool.Dory = this.qshellRenderer.DoryInst;
        this.qshellRenderer.SetLRType(config === null || config === void 0 ? void 0 : config.LRType);
        this.qshellRenderer.SetGlobalLRDict(config === null || config === void 0 ? void 0 : config.GlobalLRDict);
        this.qshellRenderer.SetPlatformType(this.platformType);
        if (config === null || config === void 0 ? void 0 : config.SiteSettings) {
            this.qshellRenderer.SetSiteSettings(config.SiteSettings);
        }
        return this.qshellRenderer;
    };
    QShell.prototype.getRender = function () {
        return this.qshellRenderer;
    };
    QShell.prototype.ResetQJsonPool = function () {
        this.qjsonPool.ResetPool();
    };
    return QShell;
}());



/***/ }),

/***/ "../../common/qshell/src/customComponents/QCaptcha.ts":
/*!************************************************************!*\
  !*** ../../common/qshell/src/customComponents/QCaptcha.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var pjson = {
    "pJson": [
        {
            "T": "Messaging",
            "P": {
                "ID": {
                    "H": "EdtrComp_3",
                    "T": "prop"
                },
                "externalEvents": {
                    "H": "[{name='setUrl', params=['url']}, {name='setCodeValue', params=['codeValue']},{name='clickSubmit',params=['']},{name= 'onChangeGetCodeValue',params=['codeValue']}]",
                    "T": "prop"
                },
                "externalProps": {
                    "H": "['maxLength']",
                    "T": "prop"
                }
            },
            "E": {
                "setUrl": {
                    "H": "imgCaptcha.src = url ",
                    "C": true,
                    "EV": true
                },
                "clickSubmit": {
                    "H": "parent.events.clickSubmit()",
                    "C": true
                },
                "setCodeValue": {
                    "H": "txtVerCode.internalValue = codeValue ",
                    "C": true,
                    "EV": true
                }
            },
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_3"
            },
            "O": {
                "compDomClasses": "",
                "cType": "child"
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "rowCaptcha",
                    "T": "prop"
                },
                "class": {
                    "H": "'d-flex flex-row'",
                    "T": "class"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VTextField",
                            "P": {
                                "ID": {
                                    "H": "txtVerCode",
                                    "T": "prop"
                                },
                                "label": {
                                    "H": "LR('lblDogrulamaKodu')",
                                    "T": "prop"
                                },
                                "regular": {
                                    "H": "'true'",
                                    "T": "prop"
                                },
                                "class": {
                                    "H": "'col-2 mt-1'",
                                    "T": "class"
                                },
                                "solo": {
                                    "H": "false",
                                    "T": "prop"
                                },
                                "outlined": {
                                    "H": "true",
                                    "T": "prop"
                                },
                                "dense": {
                                    "H": "true",
                                    "T": "prop"
                                },
                                "maxlength": {
                                    "H": "parent.props.maxLength",
                                    "T": "attr"
                                }
                            },
                            "E": {
                                "change": {
                                    "H": "parent.events.onChangeGetCodeValue({codeValue=value})",
                                    "P": "value"
                                },
                                "input": {
                                    "H": "parent.events.onChangeGetCodeValue({codeValue=value})",
                                    "P": "value"
                                }
                            },
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "Ghost",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_10",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {},
                                            "_Editor": {
                                                "eID": "EdtrComp_10"
                                            },
                                            "O": {
                                                "cType": "child",
                                                "compDomClasses": ""
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_5"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-input v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined col-2 mt-1"
                            }
                        },
                        {
                            "T": "VImg",
                            "P": {
                                "ID": {
                                    "H": "imgCaptcha",
                                    "T": "prop"
                                },
                                "src": {
                                    "H": "'https://www.tsohost.com/assets/uploads/blog/capcha.jpeg'",
                                    "T": "prop"
                                },
                                "height": {
                                    "H": "'50'",
                                    "T": "prop"
                                },
                                "width": {
                                    "H": "'50'",
                                    "T": "prop"
                                },
                                "class": {
                                    "H": "'col-1 ml-2'",
                                    "T": "class"
                                },
                                "maxHeight": {
                                    "H": "'80px'",
                                    "T": "prop"
                                },
                                "maxWidth": {
                                    "H": "'100px'",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "Ghost",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_11",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {},
                                            "_Editor": {
                                                "eID": "EdtrComp_11"
                                            },
                                            "O": {
                                                "cType": "child",
                                                "compDomClasses": "editor-ghost-comp"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_6"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-image v-responsive theme--light col-1 ml-2"
                            }
                        },
                        {
                            "T": "VBtn",
                            "P": {
                                "ID": {
                                    "H": "btnSubmit",
                                    "T": "prop"
                                },
                                "color": {
                                    "H": "'primary'",
                                    "T": "prop"
                                },
                                "regular": {
                                    "H": "true",
                                    "T": "prop"
                                },
                                "icon": {
                                    "H": "true",
                                    "T": "prop"
                                },
                                "class": {
                                    "H": "'mt-1 ml-3'",
                                    "T": "class"
                                }
                            },
                            "E": {
                                "click": {
                                    "H": "MM.trigger('clickSubmit')",
                                    "P": "mouseEvent"
                                }
                            },
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VIcon",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_14",
                                                    "T": "prop"
                                                },
                                                "text": {
                                                    "H": "'mdi-refresh'",
                                                    "T": "text"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "Ghost",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_13",
                                                                    "T": "prop"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {},
                                                            "_Editor": {
                                                                "eID": "EdtrComp_13"
                                                            },
                                                            "O": {
                                                                "cType": "child",
                                                                "compDomClasses": ""
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_14"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "v-icon notranslate mdi mdi-refresh theme--light"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_12"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-btn v-btn--flat v-btn--icon v-btn--round theme--light v-size--default primary--text mt-1 ml-3"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_2"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-row"
            }
        },
    ],
    "cJson": [
        {
            "T": "Messaging",
            "P": {
                "ID": {
                    "H": "EdtrComp_3",
                    "T": "prop"
                },
                "externalEvents": {
                    "H": "╬[]╠{}╠=╣name╩╠'setUrl'╩╩╠=╣params╩╠[]╠'url'╩╩╩╩╠{}╠=╣name╩╠'setCodeValue'╩╩╠=╣params╩╠[]╠'codeValue'╩╩╩╩╠{}╠=╣name╩╠'clickSubmit'╩╩╠=╣params╩╠[]╠''╩╩╩╩╠{}╠=╣name╩╠'onChangeGetCodeValue'╩╩╠=╣params╩╠[]╠'codeValue'╩╩╩╩╩╩",
                    "T": "prop"
                },
                "externalProps": {
                    "H": "╬[]╠'maxLength'╩╩╩",
                    "T": "prop"
                }
            },
            "E": {
                "setUrl": {
                    "H": "╬=╣.╣imgCaptcha╩╠src╩╩╠url╩╩╩",
                    "C": true,
                    "EV": true
                },
                "clickSubmit": {
                    "H": "╬()╣.╣.╣parent╩╠events╩╩╠clickSubmit╩╩╩╩",
                    "C": true
                },
                "setCodeValue": {
                    "H": "╬=╣.╣txtVerCode╩╠internalValue╩╩╠codeValue╩╩╩",
                    "C": true,
                    "EV": true
                }
            },
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_3"
            },
            "O": {
                "compDomClasses": "",
                "cType": "child"
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "rowCaptcha",
                    "T": "prop"
                },
                "class": {
                    "H": "╬'d-flex flex-row'╩╩",
                    "T": "class"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VTextField",
                            "P": {
                                "ID": {
                                    "H": "txtVerCode",
                                    "T": "prop"
                                },
                                "label": {
                                    "H": "╬()╣LR╩╠'lblDogrulamaKodu'╩╩╩",
                                    "T": "prop"
                                },
                                "regular": {
                                    "H": "╬'true'╩╩",
                                    "T": "prop"
                                },
                                "class": {
                                    "H": "╬'col-2 mt-1'╩╩",
                                    "T": "class"
                                },
                                "solo": {
                                    "H": "╬false╩╩",
                                    "T": "prop"
                                },
                                "outlined": {
                                    "H": "╬true╩╩",
                                    "T": "prop"
                                },
                                "dense": {
                                    "H": "╬true╩╩",
                                    "T": "prop"
                                },
                                "maxlength": {
                                    "H": "╬.╣.╣parent╩╠props╩╩╠maxLength╩╩╩",
                                    "T": "attr"
                                }
                            },
                            "E": {
                                "change": {
                                    "H": "╬()╣.╣.╣parent╩╠events╩╩╠onChangeGetCodeValue╩╩╠{}╠=╣codeValue╩╠value╩╩╩╩╩",
                                    "P": "value"
                                },
                                "input": {
                                    "H": "╬()╣.╣.╣parent╩╠events╩╩╠onChangeGetCodeValue╩╩╠{}╠=╣codeValue╩╠value╩╩╩╩╩",
                                    "P": "value"
                                }
                            },
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "Ghost",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_10",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {},
                                            "_Editor": {
                                                "eID": "EdtrComp_10"
                                            },
                                            "O": {
                                                "cType": "child",
                                                "compDomClasses": ""
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_5"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-input v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined col-2 mt-1"
                            }
                        },
                        {
                            "T": "VImg",
                            "P": {
                                "ID": {
                                    "H": "imgCaptcha",
                                    "T": "prop"
                                },
                                "src": {
                                    "H": "╬'https://www.tsohost.com/assets/uploads/blog/capcha.jpeg'╩╩",
                                    "T": "prop"
                                },
                                "height": {
                                    "H": "╬'50'╩╩",
                                    "T": "prop"
                                },
                                "width": {
                                    "H": "╬'50'╩╩",
                                    "T": "prop"
                                },
                                "class": {
                                    "H": "╬'col-1 ml-2'╩╩",
                                    "T": "class"
                                },
                                "maxHeight": {
                                    "H": "╬'80px'╩╩",
                                    "T": "prop"
                                },
                                "maxWidth": {
                                    "H": "╬'100px'╩╩",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "Ghost",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_11",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {},
                                            "_Editor": {
                                                "eID": "EdtrComp_11"
                                            },
                                            "O": {
                                                "cType": "child",
                                                "compDomClasses": "editor-ghost-comp"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_6"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-image v-responsive theme--light col-1 ml-2"
                            }
                        },
                        {
                            "T": "VBtn",
                            "P": {
                                "ID": {
                                    "H": "btnSubmit",
                                    "T": "prop"
                                },
                                "color": {
                                    "H": "╬'primary'╩╩",
                                    "T": "prop"
                                },
                                "regular": {
                                    "H": "╬true╩╩",
                                    "T": "prop"
                                },
                                "icon": {
                                    "H": "╬true╩╩",
                                    "T": "prop"
                                },
                                "class": {
                                    "H": "╬'mt-1 ml-3'╩╩",
                                    "T": "class"
                                }
                            },
                            "E": {
                                "click": {
                                    "H": "╬()╣.╣MM╩╠trigger╩╩╠'clickSubmit'╩╩╩",
                                    "P": "mouseEvent"
                                }
                            },
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VIcon",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_14",
                                                    "T": "prop"
                                                },
                                                "text": {
                                                    "H": "╬'mdi-refresh'╩╩",
                                                    "T": "text"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "Ghost",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_13",
                                                                    "T": "prop"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {},
                                                            "_Editor": {
                                                                "eID": "EdtrComp_13"
                                                            },
                                                            "O": {
                                                                "cType": "child",
                                                                "compDomClasses": ""
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_14"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "v-icon notranslate mdi mdi-refresh theme--light"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_12"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-btn v-btn--flat v-btn--icon v-btn--round theme--light v-size--default primary--text mt-1 ml-3"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_2"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-row"
            }
        },
    ],
    "lrids": {
        "tr-TR": {
            "lblDogrulamaKodu": "'Doğrulama Kodu'"
        },
        "en-US": {
            "lblDogrulamaKodu": "'Verification Code'"
        }
    },
    "clrids": {
        "tr-TR": {
            "lblDogrulamaKodu": "╬'Doğrulama Kodu'╩╩"
        },
        "en-US": {
            "lblDogrulamaKodu": "╬'Verification Code'╩╩"
        }
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pjson);


/***/ }),

/***/ "../../common/qshell/src/customComponents/QDynamicFields.ts":
/*!******************************************************************!*\
  !*** ../../common/qshell/src/customComponents/QDynamicFields.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var pjson = {
    "pJson": [
        {
            "T": "Messaging",
            "P": {
                "ID": {
                    "H": "EdtrComp_8",
                    "T": "prop"
                },
                "externalProps": {
                    "H": "['authorizationKey','serviceName', 'serviceFilterKey', 'model', 'data']",
                    "T": "prop"
                }
            },
            "E": {
                "GetDynamicData": {
                    "H": "quick.EM.trace(\"GetDynamicData event triggered\")\r\n\r\nconst dynamicComponentData: any = quick.getFormData(\"DynamicFields\");\r\n\r\nconst serviceData: any = {};\r\nObject.keys(dynamicComponentData).forEach(key => {\r\n    debugger;\r\n    const dataGroup = key.split('_')[1];\r\n    const dataField = key.split('_')[2];\r\n    let dataValue = dynamicComponentData[key];\r\n    dataValue = typeof dataValue === 'object' ? dataValue.value : dataValue ;\r\n\r\n    serviceData[dataGroup] = serviceData[dataGroup] ?? {}\r\n    serviceData[dataGroup][dataField] = dataValue;\r\n});\r\n\r\nquick.EM.trace('DynamicFieldsData result:');\r\nquick.EM.trace(serviceData);\r\n\r\nserviceData;\r\n\r\n",
                    "C": true,
                    "EV": true,
                    "HL": "TS"
                },
                "CreateFields": {
                    "H": "quick.EM.trace('DS LoadComponent running')\r\nquick.EM.trace(\"model\")\r\nquick.EM.trace(model)\r\nquick.EM.trace(\"data\")\r\nquick.EM.trace(data)\r\n\r\n\r\ndeclare let model: IDynamicScreenModel;\r\ndeclare let data: any;\r\ndeclare let modelKey: string;\r\ndeclare let modelUrl: string;\r\n\r\nquick.store.set('modelKey',modelKey);\r\nquick.store.set('modelUrl',modelUrl);\r\n\r\n//__INTERFACES__//\r\ninterface IDynFieldSimple {\r\n    name: \"text\" | \"numeric\" | \"money\" | \"multiline\" | \"date\"\r\n}\r\n\r\ntype DynLocalizationGuid = string;\r\n\r\ninterface IDynFieldOption {\r\n    label: DynLocalizationGuid | string;\r\n    value: string;\r\n}\r\ninterface IDynFieldOptions {\r\n    name: \"combobox\" | \"multiselect\";\r\n    options: Array<IDynFieldOption>\r\n}\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: DynLocalizationGuid | string;\r\n    format?: string\r\n    type: IDynFieldOptions | IDynFieldSimple;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: DynLocalizationGuid | string;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicRuleRegex {\r\n    type: \"regex\";\r\n    regex: string;\r\n}\r\ninterface IDynamicRuleLength {\r\n    type: \"minlen\" | \"maxlen\";\r\n    length: number;\r\n}\r\ninterface IDynamicRuleMaxLength extends IDynamicRuleLength {\r\n    type: \"maxlen\";\r\n    preventKeys?: boolean;\r\n}\r\ninterface IDynamicRuleValue {\r\n    type: \"minval\" | \"maxval\";\r\n    value: number | Date;\r\n}\r\ninterface IDynamicRuleSimple {\r\n    type: \"required\";\r\n}\r\ninterface IDynamicRuleOptions {\r\n    type: \"options\";\r\n    options: Array<string>;\r\n}\r\n\r\ntype DynamicFieldType = \"text\" | \"numeric\" | \"money\" | \"multiline\" | \"date\" | \"combobox\" | \"multiselect\";\r\n\r\ninterface IDynamicValFields {\r\n    fieldName: string;\r\n    rules: Array<IDynamicRuleRegex | IDynamicRuleLength | IDynamicRuleMaxLength | IDynamicRuleValue | IDynamicRuleSimple | IDynamicRuleOptions>,\r\n    type: DynamicFieldType\r\n}\r\ninterface IDynamicValGroups {\r\n    groupName: string;\r\n    fields: Array<IDynamicValFields>\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<IDynamicValGroups>\r\n}\r\n\r\n\r\nLoadFromDataModel();\r\n\r\nfunction LoadFromDataModel() {\r\n    if (model) {\r\n        model.uiFields.groups.forEach(function (group) {\r\n            group.layout = group.layout ?? 1;\r\n\r\n            const containerPlaceQID = CreateContainer(group);\r\n\r\n\r\n            const rowCount = Math.ceil(group.fields.length / group.layout)\r\n            const gridColCount = 12 / group.layout;\r\n            let rowIndex = 0;\r\n\r\n            group.fields.forEach((field, fieldIndex) => {\r\n                if (fieldIndex % group.layout! == 0) {\r\n                    //Create Row\r\n                    rowIndex++;\r\n                    quick.Quick.createComponent({\r\n                        templateCompQID: \"VRow\",\r\n                        newCompQID: group.groupName + '_' + rowIndex,\r\n                        placeQID: containerPlaceQID,\r\n                        place: containerPlaceQID ? <any>\"Default\" : undefined\r\n                    })\r\n                }\r\n\r\n                let templateComp;\r\n                switch (field.type.name) {\r\n                    case \"text\":\r\n                    case \"numeric\":\r\n                    case \"money\": {\r\n                        templateComp = \"VColTextField\";\r\n                        break;\r\n                    }\r\n                    case \"combobox\":\r\n                    case \"multiselect\": {\r\n                        templateComp = \"VColCombo\";\r\n                        break;\r\n                    }\r\n                    case \"date\": {\r\n                        templateComp = \"VColDatepicker\";\r\n                        break;\r\n                    }\r\n                    case \"multiline\": {\r\n                        templateComp = \"VColTextArea\";\r\n                        break;\r\n                    }\r\n                }\r\n                if (templateComp) {\r\n                    const colComp = quick.Quick.createComponent({\r\n                        templateCompQID: templateComp,\r\n                        newCompQID: group.groupName + '_' + field.fieldName,\r\n                        placeQID: \"VRow_\" + group.groupName + '_' + rowIndex,\r\n                        place: <any>\"Default\"\r\n                    })\r\n\r\n                    const fieldComp = colComp.$children[0];\r\n                    fieldComp.label = GetLR(field.label);\r\n                    fieldComp.customCompClass = 'col-' + gridColCount;\r\n\r\n                    //Formats?? money, number, text (card,Iban,email), phone- QPhone comp??\r\n                    if (field.type.name == \"text\") {\r\n                        fieldComp.format = field.format;\r\n                    }\r\n\r\n                    if (field.type.name == \"combobox\" || field.type.name == \"multiselect\") {\r\n                        const comboItems = <any>[];\r\n                        (<IDynFieldOptions>field.type).options.forEach((item) => {\r\n                            comboItems.push({ text: GetLR(item.label), value: item.value })\r\n                        })\r\n                        fieldComp.items = comboItems\r\n                        fieldComp.multiple = field.type.name == \"multiselect\"\r\n                    }\r\n                    debugger;\r\n                    AddValidationRules(group, field, fieldComp);\r\n                    LoadData(group, field, fieldComp);\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction CreateContainer(group: IDynamicGroup): string {\r\n    let containerPlaceQID = <any>undefined;\r\n\r\n    if (group.boxWithCard) {\r\n\r\n        //Create Container\r\n        quick.Quick.createComponent({\r\n            templateCompQID: \"VContainerTemp\",\r\n            newCompQID: group.groupName + \"Box\",\r\n            placeQID: \"DynamicFields\",\r\n            place: <any>\"Default\"\r\n\r\n        })\r\n\r\n        containerPlaceQID = \"VContainer_\" + group.groupName + \"Box\"\r\n\r\n        if (group.groupName !== \"defaultGroup\") {\r\n            const titleComponent = quick.getComponent(\"QLabel_\" + group.groupName + \"Box\");\r\n            titleComponent.text = group.label;\r\n        }\r\n\r\n    }\r\n    return containerPlaceQID ?? \"DynamicFields\";\r\n}\r\n\r\n\r\nfunction GetLR(key: string) {\r\n    const lang = quick.Quick.getLanguage();\r\n    return model.uiFields.localization[lang][key] ?? key;\r\n}\r\n\r\nfunction LoadData(group: IDynamicGroup, field: IDynamicField, fieldComp: any) {\r\n    if (data && data[group.groupName!]) {\r\n        switch (field.type.name) {\r\n            case \"text\":\r\n            case \"numeric\":\r\n            case \"money\":\r\n            case \"multiline\":\r\n                fieldComp.internalValue = data[group.groupName!][field.fieldName];\r\n                break;\r\n            case \"date\":\r\n                fieldComp.value = data[group.groupName!][field.fieldName];\r\n                break;\r\n            case \"combobox\":\r\n                const fieldValue = (<Array<any>>fieldComp.items).filter((item) => item.value == data[group.groupName!][field.fieldName])\r\n                fieldComp.internalValue = fieldValue[0];\r\n                break;\r\n            case \"multiselect\":\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction AddValidationRules(group: IDynamicGroup, field: IDynamicField, fieldComp: any) {\r\n    let validationRules: Array<Function> = [];\r\n\r\n    const currentGroup = model.serviceFields.filter((groupItem) => groupItem.groupName == group.groupName)[0];\r\n    const currentField = currentGroup?.fields.filter((fieldItem) => fieldItem.fieldName == field.fieldName)[0];\r\n        currentField?.rules.forEach((rule) => {\r\n            switch (rule.type) {\r\n                case 'required':\r\n                    validationRules.push(quick.Quick.validation.required());\r\n                    break;\r\n                case 'maxlen':\r\n                    validationRules.push(quick.Quick.validation.maxLength(rule.length));\r\n                    break;\r\n                case 'minlen':\r\n                    validationRules.push(quick.Quick.validation.minLength(rule.length));\r\n                    break;\r\n                case 'regex':\r\n                    validationRules.push(quick.Quick.validation.regex(new RegExp(rule.regex)));\r\n                    break;\r\n            }\r\n        })\r\n    fieldComp.rules = validationRules;\r\n}\r\n\r\n\r\n//Validation Error response\r\nvar dynamicErrors = {\r\n    \"selfDemographics.name\": \"required\",\r\n    \"selfJobInfo.occupation\": \"combobox\",\r\n    \"favouriteCurrency\": \"options\",\r\n};\r\n\r\n//UI Validation constants\r\nvar errorConstants = {\r\n    required: \"{0} alanına bilgi girişi zorunludur.\",\r\n    combobox: \"{0} alanına birden fazla veri girilemez.\",\r\n    options: \"{0} alanına geçerli bir değer girmediniz.\"\r\n}\r\n\r\n\r\n\r\n",
                    "C": true,
                    "EV": true,
                    "HL": "TS"
                },
                "PreRender": {
                    "H": "//requestObject={}\r\n//requestObject.url='http://customer.tkb-int.dev.rally.softtech/getCustomerInfo'\r\n//requestObject.http='get'\r\n//requestObject.responseField='firstResponse'\r\n//requestObject.blockRender=true\r\n//requestObject.onSuccess='onSuccess'\r\n//Request.async(requestObject)\r\n\r\n",
                    "I": true
                },
                "EndRender": {
                    "H": "dynamicFieldEditBtn.visible = false\r\n\r\neditAuthorization = shell.getResource(parent.props.authorizationKey)\r\neditAuthorization = true //Test Code\r\ndynamicFieldEditBtn.visible = editAuthorization\r\n",
                    "HL": "QS"
                }
            },
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_8"
            },
            "O": {
                "cType": "child",
                "compDomClasses": ""
            }
        },
        {
            "T": "VContainer",
            "P": {
                "ID": {
                    "H": "DynamicFields",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VRow",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_1",
                                    "T": "prop"
                                },
                                "class": {
                                    "H": "'d-flex flex-row'",
                                    "T": "class"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VCol",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_3",
                                                    "T": "prop"
                                                },
                                                "class": {
                                                    "H": "''",
                                                    "T": "class"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "VBtn",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "dynamicFieldEditBtn",
                                                                    "T": "prop"
                                                                },
                                                                "color": {
                                                                    "H": "'warning'",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "''",
                                                                    "T": "class"
                                                                },
                                                                "regular": {
                                                                    "H": "false",
                                                                    "T": "prop"
                                                                },
                                                                "icon": {
                                                                    "H": "false",
                                                                    "T": "prop"
                                                                },
                                                                "fab": {
                                                                    "H": "false",
                                                                    "T": "prop"
                                                                },
                                                                "visible": {
                                                                    "H": "true",
                                                                    "T": "prop"
                                                                }
                                                            },
                                                            "E": {
                                                                "click": {
                                                                    "H": "\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: any;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<any>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\n\r\nconst uiFields: IDynamicUIFields = quick.store.get('dynamicModel')?.uiFields;\r\n\r\nif (uiFields && uiFields.groups && uiFields.groups[0].fields) {\r\n    components.dynamicFieldsDataTable.items = uiFields.groups[0].fields;\r\n    components.cbTableGroupList.items = { text: uiFields.groups[0].groupName, value: uiFields.groups[0].groupName };\r\n}\r\n\r\n(<any>components.dynamicFieldsDialog).value = true",
                                                                    "P": "mouseEvent:unknown | undefined",
                                                                    "HL": "TS"
                                                                }
                                                            },
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "QLabel",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_9",
                                                                                    "T": "prop"
                                                                                },
                                                                                "text": {
                                                                                    "H": "'Dynamic Fields'",
                                                                                    "T": "prop"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {},
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_9"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "q-label "
                                                                            }
                                                                        },
                                                                        {
                                                                            "T": "VIcon",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_7",
                                                                                    "T": "prop"
                                                                                },
                                                                                "text": {
                                                                                    "H": "'mdi-pencil'",
                                                                                    "T": "text"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {},
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_7"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "v-icon notranslate mdi mdi-pencil theme--light"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_5"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default warning"
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_3"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "col col-2 d-flex",
                                                "layout": {
                                                    "dOpt": {
                                                        "xs": [
                                                            "c:col-2",
                                                            "d:d-flex"
                                                        ]
                                                    },
                                                    "class": "col-2 d-flex"
                                                }
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_1"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "row d-flex flex-row"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_20"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "container"
            }
        },
        {
            "T": "VContainer",
            "P": {
                "ID": {
                    "H": "VContainerTemp",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCard",
                            "P": {
                                "ID": {
                                    "H": "VCard",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VContainer",
                                            "P": {
                                                "ID": {
                                                    "H": "VContainer",
                                                    "T": "prop"
                                                },
                                                "Render": {
                                                    "H": "false",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "QLabel",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "QLabel",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "'v-card__title'",
                                                                    "T": "class"
                                                                },
                                                                "Render": {
                                                                    "H": "false",
                                                                    "T": "prop"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {},
                                                            "_Editor": {
                                                                "eID": "EdtrComp_59"
                                                            },
                                                            "O": {
                                                                "cType": "child",
                                                                "compDomClasses": "q-label v-card__title newDropBorder"
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_43"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "container newDropBorder"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_52"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-card v-sheet theme--light"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_50"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "container"
            }
        },
        {
            "T": "VCol",
            "P": {
                "ID": {
                    "H": "VColTextField",
                    "T": "prop"
                },
                "class": {
                    "H": "''",
                    "T": "class"
                },
                "Render": {
                    "H": "false",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VTextField",
                            "P": {
                                "ID": {
                                    "H": "VTextField",
                                    "T": "prop"
                                },
                                "label": {
                                    "H": "'Text field label'",
                                    "T": "prop"
                                },
                                "regular": {
                                    "H": "'true'",
                                    "T": "prop"
                                },
                                "Render": {
                                    "H": "false",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_11"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_44"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-column newDropBorder",
                "layout": {
                    "dOpt": {
                        "xs": [
                            "d:d-flex",
                            "fd:flex-column"
                        ]
                    },
                    "class": "d-flex flex-column"
                }
            }
        },
        {
            "T": "VCol",
            "P": {
                "ID": {
                    "H": "VColTextArea",
                    "T": "prop"
                },
                "class": {
                    "H": "''",
                    "T": "class"
                },
                "Render": {
                    "H": "false",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VTextarea",
                            "P": {
                                "ID": {
                                    "H": "VTextArea",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_16"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-input v-textarea theme--light v-text-field v-text-field--is-booted undefined newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_14"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-column newDropBorder",
                "layout": {
                    "dOpt": {
                        "xs": [
                            "d:d-flex",
                            "fd:flex-column"
                        ]
                    },
                    "class": "d-flex flex-column"
                }
            }
        },
        {
            "T": "VCol",
            "P": {
                "ID": {
                    "H": "VColCombo",
                    "T": "prop"
                },
                "class": {
                    "H": "''",
                    "T": "class"
                },
                "Render": {
                    "H": "false",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCombobox",
                            "P": {
                                "ID": {
                                    "H": "VCombobox",
                                    "T": "prop"
                                },
                                "attach": {
                                    "H": "true",
                                    "T": "prop"
                                },
                                "label": {
                                    "H": "'My Combobox'",
                                    "T": "prop"
                                },
                                "items": {
                                    "H": "[{text = 'test1', value = 1},\n{ text = 'test2', value = 2}]",
                                    "T": "prop"
                                },
                                "Render": {
                                    "H": "false",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_12"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_39"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-column newDropBorder",
                "layout": {
                    "dOpt": {
                        "xs": [
                            "d:d-flex",
                            "fd:flex-column"
                        ]
                    },
                    "class": "d-flex flex-column"
                }
            }
        },
        {
            "T": "VCol",
            "P": {
                "ID": {
                    "H": "VColDatepicker",
                    "T": "prop"
                },
                "class": {
                    "H": "''",
                    "T": "class"
                },
                "Render": {
                    "H": "false",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VInlineDatepicker",
                            "P": {
                                "ID": {
                                    "H": "VDatepicker",
                                    "T": "prop"
                                },
                                "willAttach": {
                                    "H": "false",
                                    "T": "prop"
                                },
                                "label": {
                                    "H": "'Pick a date'",
                                    "T": "prop"
                                },
                                "locale": {
                                    "H": "'tr'",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_19"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_17"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-column newDropBorder",
                "layout": {
                    "dOpt": {
                        "xs": [
                            "d:d-flex",
                            "fd:flex-column"
                        ]
                    },
                    "class": "d-flex flex-column"
                }
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "VRow",
                    "T": "prop"
                },
                "class": {
                    "H": "'d-flex flex-row'",
                    "T": "class"
                },
                "Render": {
                    "H": "false",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "Ghost",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_61",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_61"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "editor-ghost-comp newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_60"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-row newDropBorder"
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "EdtrComp_31",
                    "T": "prop"
                },
                "class": {
                    "H": "'d-flex flex-row justify-space-around'",
                    "T": "class"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VBtn",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_10",
                                    "T": "prop"
                                },
                                "color": {
                                    "H": "'primary'",
                                    "T": "prop"
                                }
                            },
                            "E": {
                                "click": {
                                    "H": "let serviceModel = {\r\n    uiFields: {\r\n        groups: [\r\n            {\r\n                groupName: \"selfDemographics\", label: \"Kişisel Bilgiler\", layout: 3, boxWithCard: true, fields: [\r\n                    { fieldName: \"identityNo\", type: { name: \"text\" }, label: \"LR_selfDemographics_tckn\" },\r\n                    { fieldName: \"name\", type: { name: \"text\" }, label: \"LR_selfDemographics_name\" },\r\n                    { fieldName: \"surname\", type: { name: \"text\" }, label: \"LR_selfDemographics_surname\" },\r\n                    { fieldName: \"dateOfBirth\", type: { name: \"date\" }, label: \"LR_selfDemographics_dateOfBirth\" },\r\n                    {\r\n                        fieldName: \"country\", type: {\r\n                            name: \"combobox\", options: [\r\n                                { label: \"Almanya\", value: \"2\" },\r\n                                { label: \"Türkiye\", value: \"1\" }\r\n                            ]\r\n                        }, label: \"Ülke\"\r\n                    },\r\n                    { fieldName: \"phone\", type: { name: \"text\" }, label: \"Telefon\" },\r\n                    { fieldName: \"address\", type: { name: \"multiline\" }, label: \"Adres\" }\r\n                ]\r\n            },\r\n            {\r\n                groupName: \"selfJobInfo\", label: \"Çalışma Bilgileri\", layout: 1, boxWithCard: true, fields: [\r\n                    { fieldName: \"name\", type: { name: \"text\" }, label: \"LR_selfDemographics_occupation\" },\r\n                    {\r\n                        fieldName: \"occupation\", label: \"LR_selfDemographics_occupation\", type: {\r\n                            name: \"combobox\", options: [\r\n                                { label: \"B6F651E2-A822-4381-868E-4CE55D200605\", value: \"1\" },\r\n                                { label: \"B6F651E2-A822-4381-868E-4CE55D200606\", value: \"2\" }\r\n                            ]\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                groupName: \"defaultGroup\", label: \"Çalışma Bilgileri\", layout: 2, boxWithCard: true, fields: [\r\n                    { fieldName: \"name\", type: { name: \"text\" }, label: \"LR_selfDemographics_occupation\" },\r\n                    {\r\n                        fieldName: \"occupation\", label: \"LR_selfDemographics_occupation\", type: {\r\n                            name: \"combobox\", options: [\r\n                                { label: \"B6F651E2-A822-4381-868E-4CE55D200605\", value: \"1\" },\r\n                                { label: \"B6F651E2-A822-4381-868E-4CE55D200606\", value: \"2\" }\r\n                            ]\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                groupName: \"defaultGroup\", layout: 2, fields: [\r\n                    { fieldName: \"address\", type: { name: \"text\" }, label: \"Adres\" },\r\n                    { fieldName: \"phone\", type: { name: \"text\" }, label: \"Telefon\" },\r\n                    {\r\n                        fieldName: \"favouriteCurrency\", label: \"B6F651E2-A822-4381-868E-4CE55D200607\", type: {\r\n                            name: \"combobox\", options: [\r\n                                { label: \"TRY\", value: \"try\" }, { label: \"EUR\", value: \"eur\" }, { label: \"USD\", value: \"usd\" },\r\n                            ]\r\n                        },\r\n                    },\r\n                    { fieldName: \"address\", type: { name: \"text\" }, label: \"Adres\" },\r\n                    { fieldName: \"phone\", type: { name: \"text\" }, label: \"Telefon\" }\r\n                ]\r\n            }\r\n        ],\r\n        localization: {\r\n            \"tr-TR\": {\r\n                \"LR_selfDemographics_tckn\": \"TCKN\",\r\n                \"LR_selfDemographics_name\": \"Ad\",\r\n                \"LR_selfDemographics_surname\": \"Soyad\",\r\n                \"LR_selfDemographics_occupation\": \"Meslek\",\r\n                \"LR_selfDemographics_dateOfBirth\": \"Doğum Tarihi\",\r\n                \"B6F651E2-A822-4381-868E-4CE55D200605\": \"Çalışıyor\",\r\n                \"B6F651E2-A822-4381-868E-4CE55D200606\": \"Çalışmıyor\"\r\n            },\r\n            \"en-US\": {\r\n                \"LR_selfDemographics_tckn\": \"Identity No\",\r\n                \"LR_selfDemographics_name\": \"Name\",\r\n                \"LR_selfDemographics_surname\": \"Surname\",\r\n                \"LR_selfDemographics_occupation\": \"Occupation\",\r\n                \"LR_selfDemographics_dateOfBirth\": \"Date Of Birth\"\r\n            }\r\n        }\r\n    },\r\n    serviceFields : [\r\n        {\r\n            groupName: \"selfDemographics\",\r\n            fields: [\r\n                {\r\n                    fieldName: \"name\", type: \"text\", rules: [\r\n                        { type: \"required\" },\r\n                        { type: \"maxlen\", length: 30, preventKeys: true },\r\n                        { type: \"minlen\", length: 2 }   \r\n                    ]\r\n                },\r\n                { fieldName: \"surname\", type: \"text\", rules: [{ type: \"required\" }] }\r\n            ]\r\n        },\r\n        {\r\n            groupName: \"selfJobInfo\",\r\n            fields: [\r\n                { fieldName: \"name\", type: \"text\", rules: [{ type: \"required\" }] },\r\n                { fieldName: \"occupation\", type: \"combobox\", rules: [{ type: \"options\", options: [\"1\", \"2\"] }] }\r\n            ]\r\n        },\r\n        {\r\n\t\t\tgroupName: \"defaultGroup\",\r\n            fields: [\r\n                {\r\n                    fieldName: \"favouriteCurrency\", type: \"multiselect\",\r\n                    rules: [{ type: \"required\" }, { type: \"options\", options: [\"try\", \"eur\", \"usd\"] }]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nlet serviceData = {\"selfDemographics\":{\"name\":\"Nilay\",\"surname\":\"Akdoğan\",\"country\":\"1\",\"dateOfBirth\":\"19890104\",\"address\":\"Reisdere Mah. Çeşme / İzmir\"},\r\n\"selfJobInfo\":{\"name\":\"Software Developer\",\"occupation\":\"1\"},\"defaultGroup\":{\"favouriteCurrency\":[\"eur\",\"try\"]}};\r\n\r\nlet serviceModelKey = \"customerInfoModelKey\";\r\nlet serviceModelUrl = \"http://customer.tkb-int.dev.rally.softtech/api/SaveDynamicScreenModel/\";\r\n\r\nquick.MM.trigger('CreateFields',[{model:serviceModel,data:serviceData, modelKey: serviceModelKey, modelUrl: serviceModelUrl}])",
                                    "P": "mouseEvent:unknown | undefined",
                                    "HL": "TS"
                                }
                            },
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "QLabel",
                                            "C": {},
                                            "E": {},
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_13",
                                                    "T": "prop"
                                                },
                                                "text": {
                                                    "H": "'Create Fields'",
                                                    "T": "prop"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_13"
                                            },
                                            "O": {
                                                "cType": "child",
                                                "compDomClasses": "q-label "
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_10"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                            }
                        },
                        {
                            "T": "VBtn",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_33",
                                    "T": "prop"
                                },
                                "color": {
                                    "H": "'primary'",
                                    "T": "prop"
                                }
                            },
                            "E": {
                                "click": {
                                    "H": "const dynamicComponentData: any = quick.getFormData(\"DynamicFields\");\r\n\r\nconst serviceData: any = {};\r\nObject.keys(dynamicComponentData).forEach(key => {\r\n    debugger;\r\n    const dataGroup = key.split('_')[1];\r\n    const dataField = key.split('_')[2];\r\n    let dataValue = dynamicComponentData[key];\r\n    dataValue = typeof dataValue === 'object' ? dataValue.value : dataValue ;\r\n\r\n    serviceData[dataGroup] = serviceData[dataGroup] ?? {}\r\n    serviceData[dataGroup][dataField] = dataValue;\r\n});\r\n\r\nquick.EM.trace('Dynamic Fields Get Data');\r\nquick.EM.trace(serviceData);\r\n\r\nserviceData;\r\n",
                                    "P": "mouseEvent:unknown | undefined",
                                    "HL": "TS"
                                }
                            },
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "QLabel",
                                            "C": {},
                                            "E": {},
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_34",
                                                    "T": "prop"
                                                },
                                                "text": {
                                                    "H": "'Get Data'",
                                                    "T": "prop"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_34"
                                            },
                                            "O": {
                                                "cType": "child",
                                                "compDomClasses": "q-label "
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_33"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_31"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-row justify-space-around"
            }
        },
        {
            "T": "VDialog",
            "P": {
                "ID": {
                    "H": "dynamicFieldsDialog",
                    "T": "prop"
                },
                "width": {
                    "H": "1500",
                    "T": "prop"
                },
                "eager": {
                    "H": "true",
                    "T": "prop"
                }
            },
            "E": {
                "click:outside": {
                    "H": "(<any>components.dynamicFieldsDialog).value = false",
                    "HL": "TS"
                }
            },
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCard",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_24",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VContainer",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_26",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_56",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "'d-flex flex-row'",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_71",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "''",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "QLabel",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_75",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "text": {
                                                                                                    "H": "'Dynamic Fields'",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "''",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {},
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_75"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "q-label  text-h4",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "tt:text-h4"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "text-h4"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_71"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col d-flex col-12 flex-row ml-2",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "c:col-12",
                                                                                            "fd:flex-row",
                                                                                            "sp:ml-2"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex col-12 flex-row ml-2"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_56"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        },
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_28",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "'d-flex flex-row'",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_30",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "''",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VExpansionPanels",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "expansionPanels",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VExpansionPanel",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_37",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {
                                                                                                                "default": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "VExpansionPanelHeader",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_40",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "expandIcon": {
                                                                                                                                    "H": "'mdi-plus'",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "'warning'",
                                                                                                                                    "T": "class"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "QLabel",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "EdtrComp_53",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "text": {
                                                                                                                                                    "H": "'Group'",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "''",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {},
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_53"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "cType": "slot",
                                                                                                                                                "compDomClasses": "q-label  text-h5",
                                                                                                                                                "layout": {
                                                                                                                                                    "dOpt": {
                                                                                                                                                        "xs": [
                                                                                                                                                            "tt:text-h5"
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    "class": "text-h5"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_40"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-expansion-panel-header warning"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "VExpansionPanelContent",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_42",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "eager": {
                                                                                                                                    "H": "true",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "VRow",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "groupContainer",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "'d-flex flex-row'",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {
                                                                                                                                                "default": {
                                                                                                                                                    "c": [
                                                                                                                                                        {
                                                                                                                                                            "T": "VCol",
                                                                                                                                                            "P": {
                                                                                                                                                                "ID": {
                                                                                                                                                                    "H": "EdtrComp_67",
                                                                                                                                                                    "T": "prop"
                                                                                                                                                                },
                                                                                                                                                                "class": {
                                                                                                                                                                    "H": "''",
                                                                                                                                                                    "T": "class"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "E": {},
                                                                                                                                                            "C": {
                                                                                                                                                                "default": {
                                                                                                                                                                    "c": [
                                                                                                                                                                        {
                                                                                                                                                                            "T": "VCard",
                                                                                                                                                                            "P": {
                                                                                                                                                                                "ID": {
                                                                                                                                                                                    "H": "EdtrComp_95",
                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "E": {},
                                                                                                                                                                            "C": {
                                                                                                                                                                                "default": {
                                                                                                                                                                                    "c": [
                                                                                                                                                                                        {
                                                                                                                                                                                            "T": "VContainer",
                                                                                                                                                                                            "P": {
                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                    "H": "grpContainer",
                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            "E": {},
                                                                                                                                                                                            "C": {
                                                                                                                                                                                                "default": {
                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_101",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "'d-flex flex-row'",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_102",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtGroupName",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Group Name'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "rules": {
                                                                                                                                                                                                                                                    "H": "camelCaseRegex = regex('[a-z]+((\\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?')\r\n[Quick.validation.required(), Quick.validation.regex(camelCaseRegex, 'GroupName must be a camelCase format')]",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_115"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_102"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_91",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "cbLayout",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "true",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Layout'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "[{text = 'Columun 1', value = 1},\n{ text = 'Columun 2', value = 2},\n{ text = 'Columun 3', value = 3},\n{ text = 'Columun 4', value = 4}]",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_96"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_91"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_129",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCheckbox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "chkAddCard",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Add group card'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "color": {
                                                                                                                                                                                                                                                    "H": "'primary'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_130"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-input--selection-controls v-input--checkbox"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_129"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_101"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_63",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "'d-flex flex-row'",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_64",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtLabelTR",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Label (tr-TR)'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_72"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_64"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_69",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtLabelEN",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Label (en-US)'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_73"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_69"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_63"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_126",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "'d-flex flex-row justify-end'",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_127",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VBtn",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "EdtrComp_82",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "color": {
                                                                                                                                                                                                                                                    "H": "'primary'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "outlined": {
                                                                                                                                                                                                                                                    "H": "false",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "click": {
                                                                                                                                                                                                                                                    "H": "interface IDynFieldSimple {\r\n    name: \"text\" | \"numeric\" | \"money\" | \"multiline\" | \"date\"\r\n}\r\n\r\ntype DynLocalizationGuid = string;\r\ninterface IDynFieldOption {\r\n    label: DynLocalizationGuid | string;\r\n    value: string;\r\n}\r\ninterface IDynFieldOptions {\r\n    name: \"combobox\" | \"multiselect\";\r\n    options: Array<IDynFieldOption>\r\n}\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: DynLocalizationGuid | string;\r\n    format?: string\r\n    type: IDynFieldOptions | IDynFieldSimple;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: DynLocalizationGuid | string;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicValGroups {\r\n    groupName: string;\r\n    fields: any\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<IDynamicValGroups>\r\n}\r\n\r\n\r\n\r\nCreateGroup();\r\n\r\nfunction CreateGroup() {\r\n    debugger;\r\n    const LRPrefix = \"LR_\";\r\n\r\n    const dynamicModel: IDynamicScreenModel = quick.store.get('dynamicModel') ?? {\r\n        uiFields: { groups: [], localization: { \"tr-TR\": {}, \"en-US\": {} } },\r\n        serviceFields: []\r\n    };\r\n\r\n    const groupLRID = LRPrefix + (<any>components.txtGroupName).internalValue;\r\n    const groupName = (<any>components.txtGroupName).internalValue ?? \"defaultGroup\";\r\n\r\n    dynamicModel.uiFields.groups.push({\r\n        \"groupName\": groupName,\r\n        \"label\": groupLRID,\r\n        \"layout\": (<any>components.cbLayout).internalValue?.value,\r\n        \"boxWithCard\": (<any>components.chkAddCard).internalValue,\r\n        \"fields\": []\r\n    });\r\n\r\n    dynamicModel.serviceFields.push({\r\n        \"groupName\": groupName,\r\n        \"fields\": []\r\n    });\r\n\r\n    //LRID Business - Dil Dynamic Eklenecek mi? Önyüzde validation olacak mı? Hangi dili girerse onu modele setle?\r\n    if ((<any>components.txtLabelTR).internalValue)\r\n        dynamicModel.uiFields.localization[\"tr-TR\"][groupLRID] = (<any>components.txtLabelTR).internalValue;\r\n    if ((<any>components.txtLabelEN).internalValue)\r\n        dynamicModel.uiFields.localization[\"en-US\"][groupLRID] = (<any>components.txtLabelEN).internalValue;\r\n\r\n\r\n    quick.store.set('dynamicModel', dynamicModel);\r\n\r\n    const groupComboItems = dynamicModel.uiFields.groups.map((grp) => { return { \"text\": grp.groupName, \"value\": grp.groupName } });\r\n    components.comboGroupName.items = groupComboItems;\r\n    components.cbTableGroupList.items = groupComboItems;\r\n}\r\n\r\n\r\nquick.Quick.reset('groupContainer');",
                                                                                                                                                                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                                                                                                                                                                    "HL": "TS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                            "T": "QLabel",
                                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                                    "H": "EdtrComp_88",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                "text": {
                                                                                                                                                                                                                                                                    "H": "'Save Group'",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                                "eID": "EdtrComp_88"
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                                "cType": "child",
                                                                                                                                                                                                                                                                "compDomClasses": "q-label "
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_82"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_127"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex col-12 flex-row justify-end",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "c:col-12",
                                                                                                                                                                                                                                            "fd:flex-row",
                                                                                                                                                                                                                                            "j:justify-end"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex col-12 flex-row justify-end"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_126"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row justify-end"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    ],
                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                "eID": "EdtrComp_97"
                                                                                                                                                                                            },
                                                                                                                                                                                            "O": {
                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                "compDomClasses": "container"
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    ],
                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                "eID": "EdtrComp_95"
                                                                                                                                                                            },
                                                                                                                                                                            "O": {
                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                "compDomClasses": "v-card v-sheet theme--light"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    ],
                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "_Editor": {
                                                                                                                                                                "eID": "EdtrComp_67"
                                                                                                                                                            },
                                                                                                                                                            "O": {
                                                                                                                                                                "cType": "slot",
                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                "layout": {
                                                                                                                                                                    "dOpt": {
                                                                                                                                                                        "xs": [
                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                        ]
                                                                                                                                                                    },
                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    ],
                                                                                                                                                    "cType": "slot"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_58"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "cType": "slot",
                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_42"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-expansion-panel-content"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "slot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_37"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-expansion-panel"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "T": "VExpansionPanel",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_46",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {
                                                                                                                "default": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "VExpansionPanelHeader",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_47",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "expandIcon": {
                                                                                                                                    "H": "'mdi-plus'",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "'warning'",
                                                                                                                                    "T": "class"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "QLabel",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "EdtrComp_54",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "text": {
                                                                                                                                                    "H": "'Field'",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "''",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {},
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_54"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "cType": "slot",
                                                                                                                                                "compDomClasses": "q-label  text-h5",
                                                                                                                                                "layout": {
                                                                                                                                                    "dOpt": {
                                                                                                                                                        "xs": [
                                                                                                                                                            "tt:text-h5"
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    "class": "text-h5"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_47"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-expansion-panel-header warning"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "VExpansionPanelContent",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_49",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "eager": {
                                                                                                                                    "H": "true",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "VRow",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "fieldContainer",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "'d-flex flex-row'",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {
                                                                                                                                                "default": {
                                                                                                                                                    "c": [
                                                                                                                                                        {
                                                                                                                                                            "T": "VCol",
                                                                                                                                                            "P": {
                                                                                                                                                                "ID": {
                                                                                                                                                                    "H": "EdtrComp_99",
                                                                                                                                                                    "T": "prop"
                                                                                                                                                                },
                                                                                                                                                                "class": {
                                                                                                                                                                    "H": "''",
                                                                                                                                                                    "T": "class"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "E": {},
                                                                                                                                                            "C": {
                                                                                                                                                                "default": {
                                                                                                                                                                    "c": [
                                                                                                                                                                        {
                                                                                                                                                                            "T": "VCard",
                                                                                                                                                                            "P": {
                                                                                                                                                                                "ID": {
                                                                                                                                                                                    "H": "EdtrComp_100",
                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "E": {},
                                                                                                                                                                            "C": {
                                                                                                                                                                                "default": {
                                                                                                                                                                                    "c": [
                                                                                                                                                                                        {
                                                                                                                                                                                            "T": "VContainer",
                                                                                                                                                                                            "P": {
                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                    "H": "EdtrComp_103",
                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            "E": {},
                                                                                                                                                                                            "C": {
                                                                                                                                                                                                "default": {
                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_117",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "'d-flex flex-row'",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_118",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "comboGroupName",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "true",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Group Name'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "[]",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_154"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_118"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_120",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtFieldName",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'FieldName'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "rules": {
                                                                                                                                                                                                                                                    "H": "camelCaseRegex = regex('[a-z]+((\\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?')\r\n[Quick.validation.required(), Quick.validation.regex(camelCaseRegex, 'FieldName must be a camelCase format')]",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_119"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_120"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_117"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_124",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "'d-flex flex-row'",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_125",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "cbFieldType",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "true",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Type'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "[{text = 'text', value = 'text'},\n{ text = 'numeric', value = 'numeric'},\n{ text = 'money', value = 'money'},\n{ text = 'multiline', value = 'multiline'},\n{ text = 'combo', value = 'combo'},\n{ text = 'multiselect', value = 'multiselect'},\n{ text = 'date', value = 'date'}]",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "change": {
                                                                                                                                                                                                                                                    "H": "\r\nif((<any>value).value == \"text\"){\r\n    components.cbFieldFormat.visible = true;\r\n}else{\r\n    components.cbFieldFormat.visible = false;\r\n}",
                                                                                                                                                                                                                                                    "P": "value:object",
                                                                                                                                                                                                                                                    "HL": "TS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_151"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_125"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_142",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "cbFieldFormat",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "true",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Format'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "[{text = 'creditcard', value = 'creditcard'},\n{ text = 'email', value = 'email'},\n{ text = 'iban', value = 'iban'},\n{ text = 'ipaddress', value = 'ipaddress'},\n{ text = 'onlyAlphabetic', value = 'onlyAlphabetic'}]",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_152"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_142"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_124"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_144",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "'d-flex flex-row'",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_145",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtFieldLabelTR",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Label (tr-TR)'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_146"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_145"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_147",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtFieldLabelEN",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Label (en-US)'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_134"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_147"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_144"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "rowValidationRules",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "'d-flex flex-row'",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_79",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VBtn",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "EdtrComp_87",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "color": {
                                                                                                                                                                                                                                                    "H": "'primary'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "fab": {
                                                                                                                                                                                                                                                    "H": "true",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "click": {
                                                                                                                                                                                                                                                    "H": "let fieldRuleIndex = quick.store.get('fieldRuleIndex') ?? 0;\r\nfieldRuleIndex = fieldRuleIndex + 1\r\n\r\nquick.Quick.createComponent({\r\n    templateCompQID: \"ruleInputComponent\",\r\n    newCompQID: fieldRuleIndex,\r\n    placeQID: \"validationRulesContainer\",\r\n    place: <any>\"Default\"\r\n})\r\n\r\nquick.store.set('fieldRuleIndex', fieldRuleIndex)",
                                                                                                                                                                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                                                                                                                                                                    "HL": "TS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                            "T": "VIcon",
                                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                                    "H": "EdtrComp_90",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                "text": {
                                                                                                                                                                                                                                                                    "H": "'mdi-plus'",
                                                                                                                                                                                                                                                                    "T": "text"
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                                "eID": "EdtrComp_90"
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-plus theme--light"
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_87"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_79"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column col-1",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column",
                                                                                                                                                                                                                                            "c:col-1"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column col-1"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "validationRulesContainer",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "Ghost",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "EdtrComp_105",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_105"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "child",
                                                                                                                                                                                                                                                "compDomClasses": ""
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_132"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column col-5",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column",
                                                                                                                                                                                                                                            "c:col-5"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column col-5"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_131"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "ruleInputComponent",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "Render": {
                                                                                                                                                                                                                    "H": "false",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_108",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "cbValidationRulesType",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "true",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Validation Rule'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "[{text = 'required', value = 'required'},\n{ text = 'minLength', value = 'minLength'},\n{ text = 'maxLength', value = 'maxLength'},\n{ text = 'email', value = 'email'},\n{ text = 'iban', value = 'iban'},\n{ text = 'tckn', value = 'tckn'},\n{ text = 'vkn', value = 'vkn'},\n{ text = 'regex', value = 'regex'}]",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "change": {
                                                                                                                                                                                                                                                    "H": "const selectedRule = (<any>value).value;\r\n\r\ndebugger;\r\n//TODO: Buarası artabilir ruleDict tutup kontrol et\r\n//TODO: DynamicCreate Comp hangi component trigger edildi bilinmiyor \r\nif (selectedRule == \"minLength\" && selectedRule == \"maxLength\") {\r\n    (<any>components)[\"txtValidationRuleValue_1\"].visible = true;\r\n} else {\r\n    (<any>components)[\"txtValidationRuleValue_1\"].visible = false;\r\n}",
                                                                                                                                                                                                                                                    "P": "value:object",
                                                                                                                                                                                                                                                    "HL": "TS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_86"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                                            "sp:mr-5"
                                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                    "class": "mr-5"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtValidationRuleValue",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "'Value'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_85"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_108"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-row"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-row"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_106"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_136",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "'d-flex flex-row justify-end'",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_138",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "''",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VBtn",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "EdtrComp_139",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "color": {
                                                                                                                                                                                                                                                    "H": "'primary'",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "outlined": {
                                                                                                                                                                                                                                                    "H": "false",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "click": {
                                                                                                                                                                                                                                                    "H": "interface IDynFieldSimple {\r\n    name: \"text\" | \"numeric\" | \"money\" | \"multiline\" | \"date\"\r\n}\r\n\r\ntype DynLocalizationGuid = string;\r\n\r\ninterface IDynFieldOption {\r\n    label: DynLocalizationGuid | string;\r\n    value: string;\r\n}\r\ninterface IDynFieldOptions {\r\n    name: \"combobox\" | \"multiselect\";\r\n    options: Array<IDynFieldOption>\r\n}\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: DynLocalizationGuid | string;\r\n    format?: string\r\n    type: IDynFieldOptions | IDynFieldSimple;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: DynLocalizationGuid | string;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\n// interface IDynamicRuleRegex {\r\n//     type: \"regex\";\r\n//     regex: string;\r\n// }\r\n// interface IDynamicRuleLength {\r\n//     type: \"minlen\" | \"maxlen\";\r\n//     length: number;\r\n// }\r\n// interface IDynamicRuleMaxLength extends IDynamicRuleLength {\r\n//     type: \"maxlen\";\r\n//     preventKeys?: boolean;\r\n// }\r\n// interface IDynamicRuleValue {\r\n//     type: \"minval\" | \"maxval\";\r\n//     value: number | Date;\r\n// }\r\n// interface IDynamicRuleOptions {\r\n//     type: \"options\";\r\n//     options: Array<string>;\r\n// }\r\n\r\ninterface IDynamicRuleSimple {\r\n    type: string;\r\n    value: number | Date | string | undefined;\r\n}\r\n\r\ntype DynamicFieldType = \"text\" | \"numeric\" | \"money\" | \"multiline\" | \"date\" | \"combobox\" | \"multiselect\";\r\n\r\ninterface IDynamicValFields {\r\n    fieldName: string;\r\n    rules: Array<IDynamicRuleSimple> | undefined,\r\n    type: DynamicFieldType\r\n}\r\ninterface IDynamicValGroups {\r\n    groupName: string;\r\n    fields: Array<IDynamicValFields>\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<IDynamicValGroups>\r\n}\r\n\r\n\r\nconst LRPrefix = \"LR_\"\r\nconst defaultGroupName = \"defaultGroup\";\r\nconst dynamicModel: IDynamicScreenModel = quick.store.get('dynamicModel') ?? {\r\n    uiFields: { groups: [], localization: { \"tr-TR\": {}, \"en-US\": {} } },\r\n    serviceFields: []\r\n};\r\nconst selectedGroupName = (<any>components.comboGroupName).internalValue ? (<any>components.comboGroupName).internalValue.value : defaultGroupName;\r\nconst fieldName = (<any>components.txtFieldName).internalValue;\r\nconst fieldType = (<any>components.cbFieldType).internalValue?.value;\r\n\r\ncreateFields();\r\nresetFieldContainer();\r\n\r\nquick.store.set('dynamicModel', dynamicModel);\r\nquick.EM.trace(quick.store.get('dynamicModel'));\r\n\r\n\r\n\r\n\r\nfunction createFields() {\r\n    if (selectedGroupName == defaultGroupName) {\r\n        addDefaultGroup();\r\n    }\r\n\r\n    //Create UI Fields\r\n    const selectedUIGroup = dynamicModel.uiFields.groups.filter((grp) => grp.groupName == selectedGroupName)[0];\r\n    const fieldLRID = LRPrefix + selectedGroupName + '_' + fieldName;\r\n\r\n    selectedUIGroup.fields.push({\r\n        fieldName: fieldName,\r\n        label: fieldLRID,\r\n        type: fieldType,\r\n        format: (<any>components.cbFieldFormat).internalValue?.value\r\n    });\r\n\r\n    //LRID \r\n    //Şimdilik 2 dil desteği -  Daha sonra dynamic LRID girişi olacak.\r\n    if ((<any>components.txtFieldLabelTR).internalValue)\r\n        dynamicModel.uiFields.localization[\"tr-TR\"][fieldLRID] = (<any>components.txtFieldLabelTR).internalValue;\r\n    if ((<any>components.txtFieldLabelEN).internalValue)\r\n        dynamicModel.uiFields.localization[\"en-US\"][fieldLRID] = (<any>components.txtFieldLabelEN).internalValue;\r\n\r\n\r\n\r\n    //Create Service Fields\r\n    const serviceGroup = dynamicModel.serviceFields.filter((grp) => grp.groupName == selectedGroupName)[0]\r\n    serviceGroup.fields.push({\r\n        fieldName: fieldName,\r\n        type: fieldType,\r\n        rules: getFieldValidationRules()\r\n    });\r\n\r\n    components.dynamicFieldsDataTable.items = selectedUIGroup.fields;\r\n}\r\n\r\n\r\nfunction addDefaultGroup() {\r\n    if (dynamicModel.uiFields.groups.filter((grp) => grp.groupName == defaultGroupName).length > 0) {\r\n        return;\r\n    }\r\n\r\n    dynamicModel.uiFields.groups.push({ groupName: defaultGroupName, fields: [] });\r\n    dynamicModel.serviceFields.push({ groupName: defaultGroupName, fields: [] });\r\n    const groupListItems = dynamicModel.uiFields.groups.map((grp) => { return { \"text\": grp.groupName, \"value\": grp.groupName } });\r\n    components.cbTableGroupList.items = groupListItems;\r\n    components.comboGroupName.items = groupListItems;\r\n}\r\n\r\nfunction getFieldValidationRules() {\r\n    debugger;\r\n    const fieldRuleCount = quick.store.get('fieldRuleIndex');\r\n    const rules: Array<IDynamicRuleSimple> | undefined = [];\r\n    for (var i = 1; i <= fieldRuleCount; i++) {\r\n        const ruleTypeComponent = (<any>components)[\"cbValidationRulesType_\" + i];\r\n        const ruleValueComponent = (<any>components)[\"txtValidationRuleValue_\" + i];\r\n        if (!ruleTypeComponent || !ruleTypeComponent.internalValue) {\r\n            return;\r\n        }\r\n\r\n        const ruleType = ruleTypeComponent.internalValue.value;\r\n        const ruleValue = ruleValueComponent ? ruleValueComponent.internalValue : undefined;\r\n\r\n        let rule: IDynamicRuleSimple = { type: ruleType, value: ruleValue }\r\n        rules.push(rule);\r\n    }\r\n    return rules;\r\n}\r\n\r\nfunction resetFieldContainer() {\r\n    quick.Quick.reset('fieldContainer');\r\n    quick.store.set('fieldRuleIndex', 0);\r\n}\r\n\r\n",
                                                                                                                                                                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                                                                                                                                                                    "HL": "TS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                            "T": "QLabel",
                                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                                    "H": "EdtrComp_140",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                "text": {
                                                                                                                                                                                                                                                                    "H": "'Save Field'",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                                "eID": "EdtrComp_140"
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                                "cType": "child",
                                                                                                                                                                                                                                                                "compDomClasses": "q-label "
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_139"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_138"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-row col-12 justify-end",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-row",
                                                                                                                                                                                                                                            "c:col-12",
                                                                                                                                                                                                                                            "j:justify-end"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-row col-12 justify-end"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_136"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row justify-end"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    ],
                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                "eID": "EdtrComp_103"
                                                                                                                                                                                            },
                                                                                                                                                                                            "O": {
                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                "compDomClasses": "container"
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    ],
                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                "eID": "EdtrComp_100"
                                                                                                                                                                            },
                                                                                                                                                                            "O": {
                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                "compDomClasses": "v-card v-sheet theme--light"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    ],
                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "_Editor": {
                                                                                                                                                                "eID": "EdtrComp_99"
                                                                                                                                                            },
                                                                                                                                                            "O": {
                                                                                                                                                                "cType": "slot",
                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                "layout": {
                                                                                                                                                                    "dOpt": {
                                                                                                                                                                        "xs": [
                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                        ]
                                                                                                                                                                    },
                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    ],
                                                                                                                                                    "cType": "slot"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_98"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "cType": "slot",
                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_49"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-expansion-panel-content"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "slot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_46"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-expansion-panel"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_35"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "v-item-group theme--light v-expansion-panels"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_30"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "fd:flex-column"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex flex-column"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_28"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        },
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_133",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "'d-flex flex-row'",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_135",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "''",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VCombobox",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "cbTableGroupList",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "attach": {
                                                                                                    "H": "true",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "label": {
                                                                                                    "H": "'Group Name'",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {
                                                                                                "change": {
                                                                                                    "H": "interface IDynFieldSimple {\r\n    name: \"text\" | \"numeric\" | \"money\" | \"multiline\" | \"date\"\r\n}\r\ntype DynLocalizationGuid = string;\r\n\r\ninterface IDynFieldOption {\r\n    label: DynLocalizationGuid | string;\r\n    value: string;\r\n}\r\ninterface IDynFieldOptions {\r\n    name: \"combobox\" | \"multiselect\";\r\n    options: Array<IDynFieldOption>\r\n}\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: DynLocalizationGuid | string;\r\n    format?: string\r\n    type: IDynFieldOptions | IDynFieldSimple;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: DynLocalizationGuid | string;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ndebugger;\r\nconst uiFields: IDynamicUIFields = quick.store.get('dynamicModel')?.uiFields;\r\nconst selectedGroupName = (<any>components.cbTableGroupList).internalValue?.value;\r\nconst selectedGroup = uiFields.groups.filter((grp) => grp.groupName == selectedGroupName);\r\n\r\nif (selectedGroup && selectedGroup[0].fields) {\r\n    components.dynamicFieldsDataTable.items = selectedGroup[0].fields;\r\n}",
                                                                                                    "P": "value:object",
                                                                                                    "HL": "TS"
                                                                                                }
                                                                                            },
                                                                                            "C": {},
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_23"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_135"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col col-3 d-flex flex-column",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "c:col-3",
                                                                                            "d:d-flex",
                                                                                            "fd:flex-column"
                                                                                        ]
                                                                                    },
                                                                                    "class": "col-3 d-flex flex-column"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_121",
                                                                                    "T": "prop"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VBtn",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "btnEditGroup",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "color": {
                                                                                                    "H": "'primary'",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "fab": {
                                                                                                    "H": "true",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VIcon",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_155",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "'mdi-pencil'",
                                                                                                                    "T": "text"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_155"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-pencil theme--light"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_137"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "sp:mr-2"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "mr-2"
                                                                                                },
                                                                                                "compDomClasses": "v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary mr-2"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "T": "VBtn",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "btnDeleteGroup",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "color": {
                                                                                                    "H": "'primary'",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "fab": {
                                                                                                    "H": "true",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {
                                                                                                "click": {
                                                                                                    "H": "\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: any;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<any>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicValGroups {\r\n    groupName?: string;\r\n    fields: Array<any>\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<IDynamicValGroups>\r\n}\r\n\r\n\r\nconst dynamicModel: IDynamicScreenModel = quick.store.get('dynamicModel');\r\nconst selectedGroupName = (<any>components.cbTableGroupList).internalValue?.value;\r\n\r\ndynamicModel?.uiFields.groups.forEach((grp, grpIndex) => {\r\n    if (grp.groupName == selectedGroupName) {\r\n        dynamicModel.uiFields.groups.splice(grpIndex,1);\r\n    }\r\n});\r\n\r\ndynamicModel?.serviceFields.forEach((grp, grpIndex) => {\r\n    if (grp.groupName == selectedGroupName) {\r\n        dynamicModel.serviceFields.splice(grpIndex,1);\r\n    }\r\n});\r\n\r\ndebugger;\r\ncomponents.cbTableGroupList.items = components.cbTableGroupList.items.filter((item:any)=>item.value !== selectedGroupName)\r\ncomponents.comboGroupName.items = components.cbTableGroupList.items.filter((item:any)=>item.value !== selectedGroupName)\r\nquick.Quick.reset('cbTableGroupList');\r\ncomponents.dynamicFieldsDataTable.items = [];\r\n\r\nquick.store.set('dynamicModel', dynamicModel);",
                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                    "HL": "TS"
                                                                                                }
                                                                                            },
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VIcon",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_156",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "'mdi-delete'",
                                                                                                                    "T": "text"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_156"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-delete theme--light"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_149"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_121"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "fd:flex-row"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex flex-row"
                                                                                },
                                                                                "compDomClasses": "col d-flex flex-row"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_133"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        },
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_6",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "'d-flex flex-row'",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_15",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "''",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VDataTable",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "dynamicFieldsDataTable",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "headers": {
                                                                                                    "H": "[{ text = 'Field Name', value= 'fieldName'},\n{ text = 'Label', value= 'label'},\n{ text = 'Type', value= 'type' },\n{ text = 'Format', value= 'format' },\n{ text = '', value= 'actions', align='center fixed', class='fixed' }]",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "items": {
                                                                                                    "H": "[]",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "item.actions": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VIcon",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "fieldEditButton",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "'mdi-pencil'",
                                                                                                                    "T": "text"
                                                                                                                },
                                                                                                                "large": {
                                                                                                                    "H": "true",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {
                                                                                                                "click": {
                                                                                                                    "H": "declare const item: any;\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: any;\r\n    format?: string\r\n    type: any;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: any;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<any>\r\n}\r\n\r\n\r\nconst dynamicModel: IDynamicScreenModel = quick.store.get('dynamicModel');\r\nconst selectedGroupName = (<any>components.cbTableGroupList).internalValue?.value;\r\n\r\ndynamicModel?.uiFields.groups.forEach((grp, grpIndex) => {\r\n    if (grp.groupName == selectedGroupName) {\r\n        grp.fields.forEach((field, fieldIndex) => {\r\n            debugger;\r\n            if (field.fieldName == item.fieldName) { \r\n                (<any>components.txtFieldName).internalValue = field.fieldName;\r\n                (<any>components.cbFieldType).internalValue = components.cbFieldType.items.filter((item:any) => item.value == field.type)[0];\r\n                (<any>components.cbFieldFormat).internalValue = components.cbFieldFormat.items.filter((item:any) => item.value == field.format)[0];\r\n                (<any>components.txtFieldLabelTR).internalValue = dynamicModel.uiFields.localization[\"tr-TR\"][field.label];\r\n                (<any>components.txtFieldLabelEN).internalValue = dynamicModel.uiFields.localization[\"en-US\"][field.label];\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nquick.store.set('dynamicModel', dynamicModel);\r\n(<any>components.expansionPanels).internalValue = 1\r\n\r\n",
                                                                                                                    "P": "mouseEvent:object",
                                                                                                                    "HL": "TS"
                                                                                                                }
                                                                                                            },
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_78"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-icon notranslate v-icon--link mdi mdi-pencil theme--light"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "T": "VIcon",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "fieldDeleteButton",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "'mdi-delete'",
                                                                                                                    "T": "text"
                                                                                                                },
                                                                                                                "large": {
                                                                                                                    "H": "true",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {
                                                                                                                "click": {
                                                                                                                    "H": "declare const item: any;\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: any;\r\n    format?: string\r\n    type: any;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: any;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<any>\r\n}\r\n\r\n\r\nconst dynamicModel: IDynamicScreenModel = quick.store.get('dynamicModel');\r\nconst selectedGroupName = (<any>components.cbTableGroupList).internalValue?.value;\r\n\r\ndynamicModel?.uiFields.groups.forEach((grp, grpIndex) => {\r\n    if (grp.groupName == selectedGroupName) {\r\n        grp.fields.forEach((field, fieldIndex) => {\r\n            if (field.fieldName == item.fieldName) { \r\n                dynamicModel.uiFields.groups[grpIndex].fields.splice(fieldIndex,1);\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nquick.store.set('dynamicModel', dynamicModel);\r\nquick.Quick.reset('fieldContainer');\r\n\r\n",
                                                                                                                    "P": "mouseEvent:object",
                                                                                                                    "HL": "TS"
                                                                                                                }
                                                                                                            },
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_77"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-icon notranslate v-icon--link mdi mdi-delete theme--light"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "scopedSlot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_18"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "scopedSlot",
                                                                                                "compDomClasses": "v-data-table v-data-table--has-bottom theme--light"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_15"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "fd:flex-column"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex flex-column"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_6"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        },
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_55",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "'d-flex flex-row'",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_62",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "''",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VBtn",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_66",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "color": {
                                                                                                    "H": "'primary'",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {
                                                                                                "click": {
                                                                                                    "H": "interface SaveModelRequest {\r\n    mode: string,\r\n    raw: string,\r\n    modelKey: string\r\n}\r\n\r\n\r\nconst dynamicModel = quick.store.get('dynamicModel');\r\nconst modelKey = quick.store.get('modelKey') ?? \"customerInfoModelKey\";\r\nconst modelUrl = quick.store.get('modelUrl') ?? \"http://customer.tkb-int.dev.rally.softtech/api/dynamicscreen/\";\r\n\r\nconst requestParams: SaveModelRequest = {\r\n    mode : \"raw\",\r\n    raw: JSON.stringify(dynamicModel),\r\n    modelKey: modelKey\r\n}\r\n\r\nconst requestObj: any = {\r\n    url: modelUrl,\r\n    http: \"GET\",\r\n    responseField: 'firstResponse',\r\n    blockRender: true,\r\n    data: requestParams,\r\n    onSuccess: 'onSuccessSaveModel',\r\n    onFail: 'OnFailModelSave'\r\n}\r\n\r\nquick.Request.async(requestObj)",
                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                    "HL": "TS"
                                                                                                },
                                                                                                "onSuccessSaveModel": {
                                                                                                    "H": "quick.Quick.alert!({text: \"Model kaydedilmiştir\", category: <any>\"Success\"})",
                                                                                                    "C": true,
                                                                                                    "HL": "TS"
                                                                                                },
                                                                                                "OnFailModelSave": {
                                                                                                    "H": "quick.Quick.alert!({text: \"Model kaydedilememiştir.\", category: <any>\"Eror\" })",
                                                                                                    "C": true,
                                                                                                    "HL": "TS"
                                                                                                }
                                                                                            },
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "QLabel",
                                                                                                            "C": {},
                                                                                                            "E": {},
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_70",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "'Save Model'",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_70"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "child",
                                                                                                                "compDomClasses": "q-label "
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_66"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_62"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col d-flex flex-row justify-end col-12",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "fd:flex-row",
                                                                                            "j:justify-end",
                                                                                            "c:col-12"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex flex-row justify-end col-12"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_55"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_26"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "container"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_24"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-card v-sheet theme--light"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_21"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "v-dialog__container"
            }
        }
    ],
    "cJson": [
        {
            "T": "Messaging",
            "P": {
                "ID": {
                    "H": "EdtrComp_8",
                    "T": "prop"
                },
                "externalProps": {
                    "H": "╬[]╠'authorizationKey'╩╠'serviceName'╩╠'serviceFilterKey'╩╠'model'╩╠'data'╩╩╩",
                    "T": "prop"
                }
            },
            "E": {
                "GetDynamicData": {
                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.EM.trace(\"GetDynamicData event triggered\");\r\nvar dynamicComponentData = quick.getFormData(\"DynamicFields\");\r\nvar serviceData = {};\r\nObject.keys(dynamicComponentData).forEach(function (key) {\r\n    var _a;\r\n    debugger;\r\n    var dataGroup = key.split('_')[1];\r\n    var dataField = key.split('_')[2];\r\n    var dataValue = dynamicComponentData[key];\r\n    dataValue = typeof dataValue === 'object' ? dataValue.value : dataValue;\r\n    serviceData[dataGroup] = (_a = serviceData[dataGroup]) !== null && _a !== void 0 ? _a : {};\r\n    serviceData[dataGroup][dataField] = dataValue;\r\n});\r\nquick.EM.trace('DynamicFieldsData result:');\r\nquick.EM.trace(serviceData);\r\nserviceData;\r\n",
                    "C": true,
                    "EV": true,
                    "HL": "JS"
                },
                "CreateFields": {
                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.EM.trace('DS LoadComponent running');\r\nquick.EM.trace(\"model\");\r\nquick.EM.trace(model);\r\nquick.EM.trace(\"data\");\r\nquick.EM.trace(data);\r\nquick.store.set('modelKey', modelKey);\r\nquick.store.set('modelUrl', modelUrl);\r\nLoadFromDataModel();\r\nfunction LoadFromDataModel() {\r\n    if (model) {\r\n        model.uiFields.groups.forEach(function (group) {\r\n            var _a;\r\n            group.layout = (_a = group.layout) !== null && _a !== void 0 ? _a : 1;\r\n            var containerPlaceQID = CreateContainer(group);\r\n            var rowCount = Math.ceil(group.fields.length / group.layout);\r\n            var gridColCount = 12 / group.layout;\r\n            var rowIndex = 0;\r\n            group.fields.forEach(function (field, fieldIndex) {\r\n                if (fieldIndex % group.layout == 0) {\r\n                    //Create Row\r\n                    rowIndex++;\r\n                    quick.Quick.createComponent({\r\n                        templateCompQID: \"VRow\",\r\n                        newCompQID: group.groupName + '_' + rowIndex,\r\n                        placeQID: containerPlaceQID,\r\n                        place: containerPlaceQID ? \"Default\" : undefined\r\n                    });\r\n                }\r\n                var templateComp;\r\n                switch (field.type.name) {\r\n                    case \"text\":\r\n                    case \"numeric\":\r\n                    case \"money\": {\r\n                        templateComp = \"VColTextField\";\r\n                        break;\r\n                    }\r\n                    case \"combobox\":\r\n                    case \"multiselect\": {\r\n                        templateComp = \"VColCombo\";\r\n                        break;\r\n                    }\r\n                    case \"date\": {\r\n                        templateComp = \"VColDatepicker\";\r\n                        break;\r\n                    }\r\n                    case \"multiline\": {\r\n                        templateComp = \"VColTextArea\";\r\n                        break;\r\n                    }\r\n                }\r\n                if (templateComp) {\r\n                    var colComp = quick.Quick.createComponent({\r\n                        templateCompQID: templateComp,\r\n                        newCompQID: group.groupName + '_' + field.fieldName,\r\n                        placeQID: \"VRow_\" + group.groupName + '_' + rowIndex,\r\n                        place: \"Default\"\r\n                    });\r\n                    var fieldComp = colComp.$children[0];\r\n                    fieldComp.label = GetLR(field.label);\r\n                    fieldComp.customCompClass = 'col-' + gridColCount;\r\n                    //Formats?? money, number, text (card,Iban,email), phone- QPhone comp??\r\n                    if (field.type.name == \"text\") {\r\n                        fieldComp.format = field.format;\r\n                    }\r\n                    if (field.type.name == \"combobox\" || field.type.name == \"multiselect\") {\r\n                        var comboItems_1 = [];\r\n                        field.type.options.forEach(function (item) {\r\n                            comboItems_1.push({ text: GetLR(item.label), value: item.value });\r\n                        });\r\n                        fieldComp.items = comboItems_1;\r\n                        fieldComp.multiple = field.type.name == \"multiselect\";\r\n                    }\r\n                    debugger;\r\n                    AddValidationRules(group, field, fieldComp);\r\n                    LoadData(group, field, fieldComp);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\nfunction CreateContainer(group) {\r\n    var containerPlaceQID = undefined;\r\n    if (group.boxWithCard) {\r\n        //Create Container\r\n        quick.Quick.createComponent({\r\n            templateCompQID: \"VContainerTemp\",\r\n            newCompQID: group.groupName + \"Box\",\r\n            placeQID: \"DynamicFields\",\r\n            place: \"Default\"\r\n        });\r\n        containerPlaceQID = \"VContainer_\" + group.groupName + \"Box\";\r\n        if (group.groupName !== \"defaultGroup\") {\r\n            var titleComponent = quick.getComponent(\"QLabel_\" + group.groupName + \"Box\");\r\n            titleComponent.text = group.label;\r\n        }\r\n    }\r\n    return containerPlaceQID !== null && containerPlaceQID !== void 0 ? containerPlaceQID : \"DynamicFields\";\r\n}\r\nfunction GetLR(key) {\r\n    var _a;\r\n    var lang = quick.Quick.getLanguage();\r\n    return (_a = model.uiFields.localization[lang][key]) !== null && _a !== void 0 ? _a : key;\r\n}\r\nfunction LoadData(group, field, fieldComp) {\r\n    if (data && data[group.groupName]) {\r\n        switch (field.type.name) {\r\n            case \"text\":\r\n            case \"numeric\":\r\n            case \"money\":\r\n            case \"multiline\":\r\n                fieldComp.internalValue = data[group.groupName][field.fieldName];\r\n                break;\r\n            case \"date\":\r\n                fieldComp.value = data[group.groupName][field.fieldName];\r\n                break;\r\n            case \"combobox\":\r\n                var fieldValue = fieldComp.items.filter(function (item) { return item.value == data[group.groupName][field.fieldName]; });\r\n                fieldComp.internalValue = fieldValue[0];\r\n                break;\r\n            case \"multiselect\":\r\n                break;\r\n        }\r\n    }\r\n}\r\nfunction AddValidationRules(group, field, fieldComp) {\r\n    var validationRules = [];\r\n    var currentGroup = model.serviceFields.filter(function (groupItem) { return groupItem.groupName == group.groupName; })[0];\r\n    var currentField = currentGroup === null || currentGroup === void 0 ? void 0 : currentGroup.fields.filter(function (fieldItem) { return fieldItem.fieldName == field.fieldName; })[0];\r\n    currentField === null || currentField === void 0 ? void 0 : currentField.rules.forEach(function (rule) {\r\n        switch (rule.type) {\r\n            case 'required':\r\n                validationRules.push(quick.Quick.validation.required());\r\n                break;\r\n            case 'maxlen':\r\n                validationRules.push(quick.Quick.validation.maxLength(rule.length));\r\n                break;\r\n            case 'minlen':\r\n                validationRules.push(quick.Quick.validation.minLength(rule.length));\r\n                break;\r\n            case 'regex':\r\n                validationRules.push(quick.Quick.validation.regex(new RegExp(rule.regex)));\r\n                break;\r\n        }\r\n    });\r\n    fieldComp.rules = validationRules;\r\n}\r\n//Validation Error response\r\nvar dynamicErrors = {\r\n    \"selfDemographics.name\": \"required\",\r\n    \"selfJobInfo.occupation\": \"combobox\",\r\n    \"favouriteCurrency\": \"options\",\r\n};\r\n//UI Validation constants\r\nvar errorConstants = {\r\n    required: \"{0} alanına bilgi girişi zorunludur.\",\r\n    combobox: \"{0} alanına birden fazla veri girilemez.\",\r\n    options: \"{0} alanına geçerli bir değer girmediniz.\"\r\n};\r\n",
                    "C": true,
                    "EV": true,
                    "HL": "JS"
                },
                "PreRender": {
                    "H": "╩",
                    "I": true
                },
                "EndRender": {
                    "H": "╬=╣.╣dynamicFieldEditBtn╩╠visible╩╩╠false╩╩╬=╣editAuthorization╩╠()╣.╣shell╩╠getResource╩╩╠.╣.╣parent╩╠props╩╩╠authorizationKey╩╩╩╩╬=╣editAuthorization╩╠true╩╩╬=╣.╣dynamicFieldEditBtn╩╠visible╩╩╠editAuthorization╩╩╩",
                    "HL": "QS"
                }
            },
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_8"
            },
            "O": {
                "cType": "child",
                "compDomClasses": ""
            }
        },
        {
            "T": "VContainer",
            "P": {
                "ID": {
                    "H": "DynamicFields",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VRow",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_1",
                                    "T": "prop"
                                },
                                "class": {
                                    "H": "╬'d-flex flex-row'╩╩",
                                    "T": "class"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VCol",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_3",
                                                    "T": "prop"
                                                },
                                                "class": {
                                                    "H": "╬''╩╩",
                                                    "T": "class"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "VBtn",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "dynamicFieldEditBtn",
                                                                    "T": "prop"
                                                                },
                                                                "color": {
                                                                    "H": "╬'warning'╩╩",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "╬''╩╩",
                                                                    "T": "class"
                                                                },
                                                                "regular": {
                                                                    "H": "╬false╩╩",
                                                                    "T": "prop"
                                                                },
                                                                "icon": {
                                                                    "H": "╬false╩╩",
                                                                    "T": "prop"
                                                                },
                                                                "fab": {
                                                                    "H": "╬false╩╩",
                                                                    "T": "prop"
                                                                },
                                                                "visible": {
                                                                    "H": "╬true╩╩",
                                                                    "T": "prop"
                                                                }
                                                            },
                                                            "E": {
                                                                "click": {
                                                                    "H": "\"use strict\";\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar uiFields = (_a = quick.store.get('dynamicModel')) === null || _a === void 0 ? void 0 : _a.uiFields;\r\nif (uiFields && uiFields.groups && uiFields.groups[0].fields) {\r\n    components.dynamicFieldsDataTable.items = uiFields.groups[0].fields;\r\n    components.cbTableGroupList.items = { text: uiFields.groups[0].groupName, value: uiFields.groups[0].groupName };\r\n}\r\ncomponents.dynamicFieldsDialog.value = true;\r\n",
                                                                    "P": "mouseEvent:unknown | undefined",
                                                                    "HL": "JS"
                                                                }
                                                            },
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "QLabel",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_9",
                                                                                    "T": "prop"
                                                                                },
                                                                                "text": {
                                                                                    "H": "╬'Dynamic Fields'╩╩",
                                                                                    "T": "prop"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {},
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_9"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "q-label "
                                                                            }
                                                                        },
                                                                        {
                                                                            "T": "VIcon",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_7",
                                                                                    "T": "prop"
                                                                                },
                                                                                "text": {
                                                                                    "H": "╬'mdi-pencil'╩╩",
                                                                                    "T": "text"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {},
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_7"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "v-icon notranslate mdi mdi-pencil theme--light"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_5"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default warning"
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_3"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "col col-2 d-flex",
                                                "layout": {
                                                    "dOpt": {
                                                        "xs": [
                                                            "c:col-2",
                                                            "d:d-flex"
                                                        ]
                                                    },
                                                    "class": "col-2 d-flex"
                                                }
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_1"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "row d-flex flex-row"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_20"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "container"
            }
        },
        {
            "T": "VContainer",
            "P": {
                "ID": {
                    "H": "VContainerTemp",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCard",
                            "P": {
                                "ID": {
                                    "H": "VCard",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VContainer",
                                            "P": {
                                                "ID": {
                                                    "H": "VContainer",
                                                    "T": "prop"
                                                },
                                                "Render": {
                                                    "H": "╬false╩╩",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "QLabel",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "QLabel",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "╬'v-card__title'╩╩",
                                                                    "T": "class"
                                                                },
                                                                "Render": {
                                                                    "H": "╬false╩╩",
                                                                    "T": "prop"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {},
                                                            "_Editor": {
                                                                "eID": "EdtrComp_59"
                                                            },
                                                            "O": {
                                                                "cType": "child",
                                                                "compDomClasses": "q-label v-card__title newDropBorder"
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_43"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "container newDropBorder"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_52"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-card v-sheet theme--light"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_50"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "container"
            }
        },
        {
            "T": "VCol",
            "P": {
                "ID": {
                    "H": "VColTextField",
                    "T": "prop"
                },
                "class": {
                    "H": "╬''╩╩",
                    "T": "class"
                },
                "Render": {
                    "H": "╬false╩╩",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VTextField",
                            "P": {
                                "ID": {
                                    "H": "VTextField",
                                    "T": "prop"
                                },
                                "label": {
                                    "H": "╬'Text field label'╩╩",
                                    "T": "prop"
                                },
                                "regular": {
                                    "H": "╬'true'╩╩",
                                    "T": "prop"
                                },
                                "Render": {
                                    "H": "╬false╩╩",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_11"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_44"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-column newDropBorder",
                "layout": {
                    "dOpt": {
                        "xs": [
                            "d:d-flex",
                            "fd:flex-column"
                        ]
                    },
                    "class": "d-flex flex-column"
                }
            }
        },
        {
            "T": "VCol",
            "P": {
                "ID": {
                    "H": "VColTextArea",
                    "T": "prop"
                },
                "class": {
                    "H": "╬''╩╩",
                    "T": "class"
                },
                "Render": {
                    "H": "╬false╩╩",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VTextarea",
                            "P": {
                                "ID": {
                                    "H": "VTextArea",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_16"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-input v-textarea theme--light v-text-field v-text-field--is-booted undefined newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_14"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-column newDropBorder",
                "layout": {
                    "dOpt": {
                        "xs": [
                            "d:d-flex",
                            "fd:flex-column"
                        ]
                    },
                    "class": "d-flex flex-column"
                }
            }
        },
        {
            "T": "VCol",
            "P": {
                "ID": {
                    "H": "VColCombo",
                    "T": "prop"
                },
                "class": {
                    "H": "╬''╩╩",
                    "T": "class"
                },
                "Render": {
                    "H": "╬false╩╩",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCombobox",
                            "P": {
                                "ID": {
                                    "H": "VCombobox",
                                    "T": "prop"
                                },
                                "attach": {
                                    "H": "╬true╩╩",
                                    "T": "prop"
                                },
                                "label": {
                                    "H": "╬'My Combobox'╩╩",
                                    "T": "prop"
                                },
                                "items": {
                                    "H": "╬[]╠{}╠=╣text╩╠'test1'╩╩╠=╣value╩╠1╩╩╩╠{}╠=╣text╩╠'test2'╩╩╠=╣value╩╠2╩╩╩╩╩",
                                    "T": "prop"
                                },
                                "Render": {
                                    "H": "╬false╩╩",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_12"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_39"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-column newDropBorder",
                "layout": {
                    "dOpt": {
                        "xs": [
                            "d:d-flex",
                            "fd:flex-column"
                        ]
                    },
                    "class": "d-flex flex-column"
                }
            }
        },
        {
            "T": "VCol",
            "P": {
                "ID": {
                    "H": "VColDatepicker",
                    "T": "prop"
                },
                "class": {
                    "H": "╬''╩╩",
                    "T": "class"
                },
                "Render": {
                    "H": "╬false╩╩",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VInlineDatepicker",
                            "P": {
                                "ID": {
                                    "H": "VDatepicker",
                                    "T": "prop"
                                },
                                "willAttach": {
                                    "H": "╬false╩╩",
                                    "T": "prop"
                                },
                                "label": {
                                    "H": "╬'Pick a date'╩╩",
                                    "T": "prop"
                                },
                                "locale": {
                                    "H": "╬'tr'╩╩",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_19"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_17"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-column newDropBorder",
                "layout": {
                    "dOpt": {
                        "xs": [
                            "d:d-flex",
                            "fd:flex-column"
                        ]
                    },
                    "class": "d-flex flex-column"
                }
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "VRow",
                    "T": "prop"
                },
                "class": {
                    "H": "╬'d-flex flex-row'╩╩",
                    "T": "class"
                },
                "Render": {
                    "H": "╬false╩╩",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "Ghost",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_61",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {},
                            "_Editor": {
                                "eID": "EdtrComp_61"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "editor-ghost-comp newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_60"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-row newDropBorder"
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "EdtrComp_31",
                    "T": "prop"
                },
                "class": {
                    "H": "╬'d-flex flex-row justify-space-around'╩╩",
                    "T": "class"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VBtn",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_10",
                                    "T": "prop"
                                },
                                "color": {
                                    "H": "╬'primary'╩╩",
                                    "T": "prop"
                                }
                            },
                            "E": {
                                "click": {
                                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar serviceModel = {\r\n    uiFields: {\r\n        groups: [\r\n            {\r\n                groupName: \"selfDemographics\", label: \"Kişisel Bilgiler\", layout: 3, boxWithCard: true, fields: [\r\n                    { fieldName: \"identityNo\", type: { name: \"text\" }, label: \"LR_selfDemographics_tckn\" },\r\n                    { fieldName: \"name\", type: { name: \"text\" }, label: \"LR_selfDemographics_name\" },\r\n                    { fieldName: \"surname\", type: { name: \"text\" }, label: \"LR_selfDemographics_surname\" },\r\n                    { fieldName: \"dateOfBirth\", type: { name: \"date\" }, label: \"LR_selfDemographics_dateOfBirth\" },\r\n                    {\r\n                        fieldName: \"country\", type: {\r\n                            name: \"combobox\", options: [\r\n                                { label: \"Almanya\", value: \"2\" },\r\n                                { label: \"Türkiye\", value: \"1\" }\r\n                            ]\r\n                        }, label: \"Ülke\"\r\n                    },\r\n                    { fieldName: \"phone\", type: { name: \"text\" }, label: \"Telefon\" },\r\n                    { fieldName: \"address\", type: { name: \"multiline\" }, label: \"Adres\" }\r\n                ]\r\n            },\r\n            {\r\n                groupName: \"selfJobInfo\", label: \"Çalışma Bilgileri\", layout: 1, boxWithCard: true, fields: [\r\n                    { fieldName: \"name\", type: { name: \"text\" }, label: \"LR_selfDemographics_occupation\" },\r\n                    {\r\n                        fieldName: \"occupation\", label: \"LR_selfDemographics_occupation\", type: {\r\n                            name: \"combobox\", options: [\r\n                                { label: \"B6F651E2-A822-4381-868E-4CE55D200605\", value: \"1\" },\r\n                                { label: \"B6F651E2-A822-4381-868E-4CE55D200606\", value: \"2\" }\r\n                            ]\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                groupName: \"defaultGroup\", label: \"Çalışma Bilgileri\", layout: 2, boxWithCard: true, fields: [\r\n                    { fieldName: \"name\", type: { name: \"text\" }, label: \"LR_selfDemographics_occupation\" },\r\n                    {\r\n                        fieldName: \"occupation\", label: \"LR_selfDemographics_occupation\", type: {\r\n                            name: \"combobox\", options: [\r\n                                { label: \"B6F651E2-A822-4381-868E-4CE55D200605\", value: \"1\" },\r\n                                { label: \"B6F651E2-A822-4381-868E-4CE55D200606\", value: \"2\" }\r\n                            ]\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                groupName: \"defaultGroup\", layout: 2, fields: [\r\n                    { fieldName: \"address\", type: { name: \"text\" }, label: \"Adres\" },\r\n                    { fieldName: \"phone\", type: { name: \"text\" }, label: \"Telefon\" },\r\n                    {\r\n                        fieldName: \"favouriteCurrency\", label: \"B6F651E2-A822-4381-868E-4CE55D200607\", type: {\r\n                            name: \"combobox\", options: [\r\n                                { label: \"TRY\", value: \"try\" }, { label: \"EUR\", value: \"eur\" }, { label: \"USD\", value: \"usd\" },\r\n                            ]\r\n                        },\r\n                    },\r\n                    { fieldName: \"address\", type: { name: \"text\" }, label: \"Adres\" },\r\n                    { fieldName: \"phone\", type: { name: \"text\" }, label: \"Telefon\" }\r\n                ]\r\n            }\r\n        ],\r\n        localization: {\r\n            \"tr-TR\": {\r\n                \"LR_selfDemographics_tckn\": \"TCKN\",\r\n                \"LR_selfDemographics_name\": \"Ad\",\r\n                \"LR_selfDemographics_surname\": \"Soyad\",\r\n                \"LR_selfDemographics_occupation\": \"Meslek\",\r\n                \"LR_selfDemographics_dateOfBirth\": \"Doğum Tarihi\",\r\n                \"B6F651E2-A822-4381-868E-4CE55D200605\": \"Çalışıyor\",\r\n                \"B6F651E2-A822-4381-868E-4CE55D200606\": \"Çalışmıyor\"\r\n            },\r\n            \"en-US\": {\r\n                \"LR_selfDemographics_tckn\": \"Identity No\",\r\n                \"LR_selfDemographics_name\": \"Name\",\r\n                \"LR_selfDemographics_surname\": \"Surname\",\r\n                \"LR_selfDemographics_occupation\": \"Occupation\",\r\n                \"LR_selfDemographics_dateOfBirth\": \"Date Of Birth\"\r\n            }\r\n        }\r\n    },\r\n    serviceFields: [\r\n        {\r\n            groupName: \"selfDemographics\",\r\n            fields: [\r\n                {\r\n                    fieldName: \"name\", type: \"text\", rules: [\r\n                        { type: \"required\" },\r\n                        { type: \"maxlen\", length: 30, preventKeys: true },\r\n                        { type: \"minlen\", length: 2 }\r\n                    ]\r\n                },\r\n                { fieldName: \"surname\", type: \"text\", rules: [{ type: \"required\" }] }\r\n            ]\r\n        },\r\n        {\r\n            groupName: \"selfJobInfo\",\r\n            fields: [\r\n                { fieldName: \"name\", type: \"text\", rules: [{ type: \"required\" }] },\r\n                { fieldName: \"occupation\", type: \"combobox\", rules: [{ type: \"options\", options: [\"1\", \"2\"] }] }\r\n            ]\r\n        },\r\n        {\r\n            groupName: \"defaultGroup\",\r\n            fields: [\r\n                {\r\n                    fieldName: \"favouriteCurrency\", type: \"multiselect\",\r\n                    rules: [{ type: \"required\" }, { type: \"options\", options: [\"try\", \"eur\", \"usd\"] }]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\nvar serviceData = { \"selfDemographics\": { \"name\": \"Nilay\", \"surname\": \"Akdoğan\", \"country\": \"1\", \"dateOfBirth\": \"19890104\", \"address\": \"Reisdere Mah. Çeşme / İzmir\" },\r\n    \"selfJobInfo\": { \"name\": \"Software Developer\", \"occupation\": \"1\" }, \"defaultGroup\": { \"favouriteCurrency\": [\"eur\", \"try\"] } };\r\nvar serviceModelKey = \"customerInfoModelKey\";\r\nvar serviceModelUrl = \"http://customer.tkb-int.dev.rally.softtech/api/SaveDynamicScreenModel/\";\r\nquick.MM.trigger('CreateFields', [{ model: serviceModel, data: serviceData, modelKey: serviceModelKey, modelUrl: serviceModelUrl }]);\r\n",
                                    "P": "mouseEvent:unknown | undefined",
                                    "HL": "JS"
                                }
                            },
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "QLabel",
                                            "C": {},
                                            "E": {},
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_13",
                                                    "T": "prop"
                                                },
                                                "text": {
                                                    "H": "╬'Create Fields'╩╩",
                                                    "T": "prop"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_13"
                                            },
                                            "O": {
                                                "cType": "child",
                                                "compDomClasses": "q-label "
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_10"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                            }
                        },
                        {
                            "T": "VBtn",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_33",
                                    "T": "prop"
                                },
                                "color": {
                                    "H": "╬'primary'╩╩",
                                    "T": "prop"
                                }
                            },
                            "E": {
                                "click": {
                                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dynamicComponentData = quick.getFormData(\"DynamicFields\");\r\nvar serviceData = {};\r\nObject.keys(dynamicComponentData).forEach(function (key) {\r\n    var _a;\r\n    debugger;\r\n    var dataGroup = key.split('_')[1];\r\n    var dataField = key.split('_')[2];\r\n    var dataValue = dynamicComponentData[key];\r\n    dataValue = typeof dataValue === 'object' ? dataValue.value : dataValue;\r\n    serviceData[dataGroup] = (_a = serviceData[dataGroup]) !== null && _a !== void 0 ? _a : {};\r\n    serviceData[dataGroup][dataField] = dataValue;\r\n});\r\nquick.EM.trace('Dynamic Fields Get Data');\r\nquick.EM.trace(serviceData);\r\nserviceData;\r\n",
                                    "P": "mouseEvent:unknown | undefined",
                                    "HL": "JS"
                                }
                            },
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "QLabel",
                                            "C": {},
                                            "E": {},
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_34",
                                                    "T": "prop"
                                                },
                                                "text": {
                                                    "H": "╬'Get Data'╩╩",
                                                    "T": "prop"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_34"
                                            },
                                            "O": {
                                                "cType": "child",
                                                "compDomClasses": "q-label "
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_33"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_31"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "d-flex flex-row justify-space-around"
            }
        },
        {
            "T": "VDialog",
            "P": {
                "ID": {
                    "H": "dynamicFieldsDialog",
                    "T": "prop"
                },
                "width": {
                    "H": "╬1500╩╩",
                    "T": "prop"
                },
                "eager": {
                    "H": "╬true╩╩",
                    "T": "prop"
                }
            },
            "E": {
                "click:outside": {
                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\ncomponents.dynamicFieldsDialog.value = false;\r\n",
                    "HL": "JS"
                }
            },
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCard",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_24",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VContainer",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_26",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_56",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_71",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "╬''╩╩",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "QLabel",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_75",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "text": {
                                                                                                    "H": "╬'Dynamic Fields'╩╩",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "╬''╩╩",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {},
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_75"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "q-label  text-h4",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "tt:text-h4"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "text-h4"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_71"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col d-flex col-12 flex-row ml-2",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "c:col-12",
                                                                                            "fd:flex-row",
                                                                                            "sp:ml-2"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex col-12 flex-row ml-2"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_56"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        },
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_28",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_30",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "╬''╩╩",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VExpansionPanels",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "expansionPanels",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VExpansionPanel",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_37",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {
                                                                                                                "default": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "VExpansionPanelHeader",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_40",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "expandIcon": {
                                                                                                                                    "H": "╬'mdi-plus'╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "╬'warning'╩╩",
                                                                                                                                    "T": "class"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "QLabel",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "EdtrComp_53",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "text": {
                                                                                                                                                    "H": "╬'Group'╩╩",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {},
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_53"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "cType": "slot",
                                                                                                                                                "compDomClasses": "q-label  text-h5",
                                                                                                                                                "layout": {
                                                                                                                                                    "dOpt": {
                                                                                                                                                        "xs": [
                                                                                                                                                            "tt:text-h5"
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    "class": "text-h5"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_40"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-expansion-panel-header warning"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "VExpansionPanelContent",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_42",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "eager": {
                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "VRow",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "groupContainer",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {
                                                                                                                                                "default": {
                                                                                                                                                    "c": [
                                                                                                                                                        {
                                                                                                                                                            "T": "VCol",
                                                                                                                                                            "P": {
                                                                                                                                                                "ID": {
                                                                                                                                                                    "H": "EdtrComp_67",
                                                                                                                                                                    "T": "prop"
                                                                                                                                                                },
                                                                                                                                                                "class": {
                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                    "T": "class"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "E": {},
                                                                                                                                                            "C": {
                                                                                                                                                                "default": {
                                                                                                                                                                    "c": [
                                                                                                                                                                        {
                                                                                                                                                                            "T": "VCard",
                                                                                                                                                                            "P": {
                                                                                                                                                                                "ID": {
                                                                                                                                                                                    "H": "EdtrComp_95",
                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "E": {},
                                                                                                                                                                            "C": {
                                                                                                                                                                                "default": {
                                                                                                                                                                                    "c": [
                                                                                                                                                                                        {
                                                                                                                                                                                            "T": "VContainer",
                                                                                                                                                                                            "P": {
                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                    "H": "grpContainer",
                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            "E": {},
                                                                                                                                                                                            "C": {
                                                                                                                                                                                                "default": {
                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_101",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_102",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtGroupName",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Group Name'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "rules": {
                                                                                                                                                                                                                                                    "H": "╬=╣camelCaseRegex╩╠()╣regex╩╠'[a-z]+((d)|([A-Z0-9][a-z0-9]+))*([A-Z])?'╩╩╩╬[]╠()╣.╣.╣Quick╩╠validation╩╩╠required╩╩╩╠()╣.╣.╣Quick╩╠validation╩╩╠regex╩╩╠camelCaseRegex╩╠'GroupName must be a camelCase format'╩╩╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_115"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_102"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_91",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "cbLayout",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Layout'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "╬[]╠{}╠=╣text╩╠'Columun 1'╩╩╠=╣value╩╠1╩╩╩╠{}╠=╣text╩╠'Columun 2'╩╩╠=╣value╩╠2╩╩╩╠{}╠=╣text╩╠'Columun 3'╩╩╠=╣value╩╠3╩╩╩╠{}╠=╣text╩╠'Columun 4'╩╩╠=╣value╩╠4╩╩╩╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_96"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_91"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_129",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCheckbox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "chkAddCard",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Add group card'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "color": {
                                                                                                                                                                                                                                                    "H": "╬'primary'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_130"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-input--selection-controls v-input--checkbox"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_129"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_101"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_63",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_64",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtLabelTR",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Label (tr-TR)'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_72"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_64"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_69",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtLabelEN",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Label (en-US)'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_73"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_69"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_63"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_126",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "╬'d-flex flex-row justify-end'╩╩",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_127",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VBtn",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "EdtrComp_82",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "color": {
                                                                                                                                                                                                                                                    "H": "╬'primary'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "outlined": {
                                                                                                                                                                                                                                                    "H": "╬false╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "click": {
                                                                                                                                                                                                                                                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nCreateGroup();\r\nfunction CreateGroup() {\r\n    var _a, _b, _c;\r\n    debugger;\r\n    var LRPrefix = \"LR_\";\r\n    var dynamicModel = (_a = quick.store.get('dynamicModel')) !== null && _a !== void 0 ? _a : {\r\n        uiFields: { groups: [], localization: { \"tr-TR\": {}, \"en-US\": {} } },\r\n        serviceFields: []\r\n    };\r\n    var groupLRID = LRPrefix + components.txtGroupName.internalValue;\r\n    var groupName = (_b = components.txtGroupName.internalValue) !== null && _b !== void 0 ? _b : \"defaultGroup\";\r\n    dynamicModel.uiFields.groups.push({\r\n        \"groupName\": groupName,\r\n        \"label\": groupLRID,\r\n        \"layout\": (_c = components.cbLayout.internalValue) === null || _c === void 0 ? void 0 : _c.value,\r\n        \"boxWithCard\": components.chkAddCard.internalValue,\r\n        \"fields\": []\r\n    });\r\n    dynamicModel.serviceFields.push({\r\n        \"groupName\": groupName,\r\n        \"fields\": []\r\n    });\r\n    //LRID Business - Dil Dynamic Eklenecek mi? Önyüzde validation olacak mı? Hangi dili girerse onu modele setle?\r\n    if (components.txtLabelTR.internalValue)\r\n        dynamicModel.uiFields.localization[\"tr-TR\"][groupLRID] = components.txtLabelTR.internalValue;\r\n    if (components.txtLabelEN.internalValue)\r\n        dynamicModel.uiFields.localization[\"en-US\"][groupLRID] = components.txtLabelEN.internalValue;\r\n    quick.store.set('dynamicModel', dynamicModel);\r\n    var groupComboItems = dynamicModel.uiFields.groups.map(function (grp) { return { \"text\": grp.groupName, \"value\": grp.groupName }; });\r\n    components.comboGroupName.items = groupComboItems;\r\n    components.cbTableGroupList.items = groupComboItems;\r\n}\r\nquick.Quick.reset('groupContainer');\r\n",
                                                                                                                                                                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                                                                                                                                                                    "HL": "JS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                            "T": "QLabel",
                                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                                    "H": "EdtrComp_88",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                "text": {
                                                                                                                                                                                                                                                                    "H": "╬'Save Group'╩╩",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                                "eID": "EdtrComp_88"
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                                "cType": "child",
                                                                                                                                                                                                                                                                "compDomClasses": "q-label "
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_82"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_127"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex col-12 flex-row justify-end",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "c:col-12",
                                                                                                                                                                                                                                            "fd:flex-row",
                                                                                                                                                                                                                                            "j:justify-end"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex col-12 flex-row justify-end"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_126"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row justify-end"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    ],
                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                "eID": "EdtrComp_97"
                                                                                                                                                                                            },
                                                                                                                                                                                            "O": {
                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                "compDomClasses": "container"
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    ],
                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                "eID": "EdtrComp_95"
                                                                                                                                                                            },
                                                                                                                                                                            "O": {
                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                "compDomClasses": "v-card v-sheet theme--light"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    ],
                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "_Editor": {
                                                                                                                                                                "eID": "EdtrComp_67"
                                                                                                                                                            },
                                                                                                                                                            "O": {
                                                                                                                                                                "cType": "slot",
                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                "layout": {
                                                                                                                                                                    "dOpt": {
                                                                                                                                                                        "xs": [
                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                        ]
                                                                                                                                                                    },
                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    ],
                                                                                                                                                    "cType": "slot"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_58"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "cType": "slot",
                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_42"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-expansion-panel-content"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "slot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_37"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-expansion-panel"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "T": "VExpansionPanel",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_46",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {
                                                                                                                "default": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "VExpansionPanelHeader",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_47",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "expandIcon": {
                                                                                                                                    "H": "╬'mdi-plus'╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "╬'warning'╩╩",
                                                                                                                                    "T": "class"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "QLabel",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "EdtrComp_54",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "text": {
                                                                                                                                                    "H": "╬'Field'╩╩",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {},
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_54"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "cType": "slot",
                                                                                                                                                "compDomClasses": "q-label  text-h5",
                                                                                                                                                "layout": {
                                                                                                                                                    "dOpt": {
                                                                                                                                                        "xs": [
                                                                                                                                                            "tt:text-h5"
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    "class": "text-h5"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_47"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-expansion-panel-header warning"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "VExpansionPanelContent",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_49",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "eager": {
                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "VRow",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "fieldContainer",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {
                                                                                                                                                "default": {
                                                                                                                                                    "c": [
                                                                                                                                                        {
                                                                                                                                                            "T": "VCol",
                                                                                                                                                            "P": {
                                                                                                                                                                "ID": {
                                                                                                                                                                    "H": "EdtrComp_99",
                                                                                                                                                                    "T": "prop"
                                                                                                                                                                },
                                                                                                                                                                "class": {
                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                    "T": "class"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "E": {},
                                                                                                                                                            "C": {
                                                                                                                                                                "default": {
                                                                                                                                                                    "c": [
                                                                                                                                                                        {
                                                                                                                                                                            "T": "VCard",
                                                                                                                                                                            "P": {
                                                                                                                                                                                "ID": {
                                                                                                                                                                                    "H": "EdtrComp_100",
                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "E": {},
                                                                                                                                                                            "C": {
                                                                                                                                                                                "default": {
                                                                                                                                                                                    "c": [
                                                                                                                                                                                        {
                                                                                                                                                                                            "T": "VContainer",
                                                                                                                                                                                            "P": {
                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                    "H": "EdtrComp_103",
                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            "E": {},
                                                                                                                                                                                            "C": {
                                                                                                                                                                                                "default": {
                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_117",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_118",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "comboGroupName",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Group Name'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "╬[]╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_154"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_118"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_120",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtFieldName",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'FieldName'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "rules": {
                                                                                                                                                                                                                                                    "H": "╬=╣camelCaseRegex╩╠()╣regex╩╠'[a-z]+((d)|([A-Z0-9][a-z0-9]+))*([A-Z])?'╩╩╩╬[]╠()╣.╣.╣Quick╩╠validation╩╩╠required╩╩╩╠()╣.╣.╣Quick╩╠validation╩╩╠regex╩╩╠camelCaseRegex╩╠'FieldName must be a camelCase format'╩╩╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_119"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_120"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_117"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_124",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_125",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "cbFieldType",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Type'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "╬[]╠{}╠=╣text╩╠'text'╩╩╠=╣value╩╠'text'╩╩╩╠{}╠=╣text╩╠'numeric'╩╩╠=╣value╩╠'numeric'╩╩╩╠{}╠=╣text╩╠'money'╩╩╠=╣value╩╠'money'╩╩╩╠{}╠=╣text╩╠'multiline'╩╩╠=╣value╩╠'multiline'╩╩╩╠{}╠=╣text╩╠'combo'╩╩╠=╣value╩╠'combo'╩╩╩╠{}╠=╣text╩╠'multiselect'╩╩╠=╣value╩╠'multiselect'╩╩╩╠{}╠=╣text╩╠'date'╩╩╠=╣value╩╠'date'╩╩╩╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "change": {
                                                                                                                                                                                                                                                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nif (value.value == \"text\") {\r\n    components.cbFieldFormat.visible = true;\r\n}\r\nelse {\r\n    components.cbFieldFormat.visible = false;\r\n}\r\n",
                                                                                                                                                                                                                                                    "P": "value:object",
                                                                                                                                                                                                                                                    "HL": "JS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_151"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_125"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_142",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "cbFieldFormat",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Format'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "╬[]╠{}╠=╣text╩╠'creditcard'╩╩╠=╣value╩╠'creditcard'╩╩╩╠{}╠=╣text╩╠'email'╩╩╠=╣value╩╠'email'╩╩╩╠{}╠=╣text╩╠'iban'╩╩╠=╣value╩╠'iban'╩╩╩╠{}╠=╣text╩╠'ipaddress'╩╩╠=╣value╩╠'ipaddress'╩╩╩╠{}╠=╣text╩╠'onlyAlphabetic'╩╩╠=╣value╩╠'onlyAlphabetic'╩╩╩╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_152"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_142"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_124"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_144",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_145",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtFieldLabelTR",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Label (tr-TR)'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_146"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_145"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_147",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtFieldLabelEN",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Label (en-US)'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_134"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted undefined"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_147"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col col-6 d-flex flex-column",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "c:col-6",
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "col-6 d-flex flex-column"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_144"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "rowValidationRules",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_79",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VBtn",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "EdtrComp_87",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "color": {
                                                                                                                                                                                                                                                    "H": "╬'primary'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "fab": {
                                                                                                                                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "click": {
                                                                                                                                                                                                                                                    "H": "\"use strict\";\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar fieldRuleIndex = (_a = quick.store.get('fieldRuleIndex')) !== null && _a !== void 0 ? _a : 0;\r\nfieldRuleIndex = fieldRuleIndex + 1;\r\nquick.Quick.createComponent({\r\n    templateCompQID: \"ruleInputComponent\",\r\n    newCompQID: fieldRuleIndex,\r\n    placeQID: \"validationRulesContainer\",\r\n    place: \"Default\"\r\n});\r\nquick.store.set('fieldRuleIndex', fieldRuleIndex);\r\n",
                                                                                                                                                                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                                                                                                                                                                    "HL": "JS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                            "T": "VIcon",
                                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                                    "H": "EdtrComp_90",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                "text": {
                                                                                                                                                                                                                                                                    "H": "╬'mdi-plus'╩╩",
                                                                                                                                                                                                                                                                    "T": "text"
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                                "eID": "EdtrComp_90"
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-plus theme--light"
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_87"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_79"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column col-1",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column",
                                                                                                                                                                                                                                            "c:col-1"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column col-1"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "validationRulesContainer",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "Ghost",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "EdtrComp_105",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_105"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "child",
                                                                                                                                                                                                                                                "compDomClasses": ""
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_132"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-column col-5",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-column",
                                                                                                                                                                                                                                            "c:col-5"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-column col-5"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_131"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "ruleInputComponent",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "Render": {
                                                                                                                                                                                                                    "H": "╬false╩╩",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_108",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VCombobox",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "cbValidationRulesType",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "attach": {
                                                                                                                                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Validation Rule'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "items": {
                                                                                                                                                                                                                                                    "H": "╬[]╠{}╠=╣text╩╠'required'╩╩╠=╣value╩╠'required'╩╩╩╠{}╠=╣text╩╠'minLength'╩╩╠=╣value╩╠'minLength'╩╩╩╠{}╠=╣text╩╠'maxLength'╩╩╠=╣value╩╠'maxLength'╩╩╩╠{}╠=╣text╩╠'email'╩╩╠=╣value╩╠'email'╩╩╩╠{}╠=╣text╩╠'iban'╩╩╠=╣value╩╠'iban'╩╩╩╠{}╠=╣text╩╠'tckn'╩╩╠=╣value╩╠'tckn'╩╩╩╠{}╠=╣text╩╠'vkn'╩╩╠=╣value╩╠'vkn'╩╩╩╠{}╠=╣text╩╠'regex'╩╩╠=╣value╩╠'regex'╩╩╩╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "change": {
                                                                                                                                                                                                                                                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar selectedRule = value.value;\r\ndebugger;\r\n//TODO: Buarası artabilir ruleDict tutup kontrol et\r\n//TODO: DynamicCreate Comp hangi component trigger edildi bilinmiyor \r\nif (selectedRule == \"minLength\" && selectedRule == \"maxLength\") {\r\n    components[\"txtValidationRuleValue_1\"].visible = true;\r\n}\r\nelse {\r\n    components[\"txtValidationRuleValue_1\"].visible = false;\r\n}\r\n",
                                                                                                                                                                                                                                                    "P": "value:object",
                                                                                                                                                                                                                                                    "HL": "JS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_86"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                                            "sp:mr-5"
                                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                    "class": "mr-5"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VTextField",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "txtValidationRuleValue",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "label": {
                                                                                                                                                                                                                                                    "H": "╬'Value'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_85"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_108"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-row"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-row"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_106"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            "T": "VRow",
                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                    "H": "EdtrComp_136",
                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                    "H": "╬'d-flex flex-row justify-end'╩╩",
                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            "T": "VCol",
                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                    "H": "EdtrComp_138",
                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "class": {
                                                                                                                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                                                                                                                    "T": "class"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            "T": "VBtn",
                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                    "H": "EdtrComp_139",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "color": {
                                                                                                                                                                                                                                                    "H": "╬'primary'╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "outlined": {
                                                                                                                                                                                                                                                    "H": "╬false╩╩",
                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "E": {
                                                                                                                                                                                                                                                "click": {
                                                                                                                                                                                                                                                    "H": "\"use strict\";\r\nvar _a, _b;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LRPrefix = \"LR_\";\r\nvar defaultGroupName = \"defaultGroup\";\r\nvar dynamicModel = (_a = quick.store.get('dynamicModel')) !== null && _a !== void 0 ? _a : {\r\n    uiFields: { groups: [], localization: { \"tr-TR\": {}, \"en-US\": {} } },\r\n    serviceFields: []\r\n};\r\nvar selectedGroupName = components.comboGroupName.internalValue ? components.comboGroupName.internalValue.value : defaultGroupName;\r\nvar fieldName = components.txtFieldName.internalValue;\r\nvar fieldType = (_b = components.cbFieldType.internalValue) === null || _b === void 0 ? void 0 : _b.value;\r\ncreateFields();\r\nresetFieldContainer();\r\nquick.store.set('dynamicModel', dynamicModel);\r\nquick.EM.trace(quick.store.get('dynamicModel'));\r\nfunction createFields() {\r\n    var _a;\r\n    if (selectedGroupName == defaultGroupName) {\r\n        addDefaultGroup();\r\n    }\r\n    //Create UI Fields\r\n    var selectedUIGroup = dynamicModel.uiFields.groups.filter(function (grp) { return grp.groupName == selectedGroupName; })[0];\r\n    var fieldLRID = LRPrefix + selectedGroupName + '_' + fieldName;\r\n    selectedUIGroup.fields.push({\r\n        fieldName: fieldName,\r\n        label: fieldLRID,\r\n        type: fieldType,\r\n        format: (_a = components.cbFieldFormat.internalValue) === null || _a === void 0 ? void 0 : _a.value\r\n    });\r\n    //LRID \r\n    //Şimdilik 2 dil desteği -  Daha sonra dynamic LRID girişi olacak.\r\n    if (components.txtFieldLabelTR.internalValue)\r\n        dynamicModel.uiFields.localization[\"tr-TR\"][fieldLRID] = components.txtFieldLabelTR.internalValue;\r\n    if (components.txtFieldLabelEN.internalValue)\r\n        dynamicModel.uiFields.localization[\"en-US\"][fieldLRID] = components.txtFieldLabelEN.internalValue;\r\n    //Create Service Fields\r\n    var serviceGroup = dynamicModel.serviceFields.filter(function (grp) { return grp.groupName == selectedGroupName; })[0];\r\n    serviceGroup.fields.push({\r\n        fieldName: fieldName,\r\n        type: fieldType,\r\n        rules: getFieldValidationRules()\r\n    });\r\n    components.dynamicFieldsDataTable.items = selectedUIGroup.fields;\r\n}\r\nfunction addDefaultGroup() {\r\n    if (dynamicModel.uiFields.groups.filter(function (grp) { return grp.groupName == defaultGroupName; }).length > 0) {\r\n        return;\r\n    }\r\n    dynamicModel.uiFields.groups.push({ groupName: defaultGroupName, fields: [] });\r\n    dynamicModel.serviceFields.push({ groupName: defaultGroupName, fields: [] });\r\n    var groupListItems = dynamicModel.uiFields.groups.map(function (grp) { return { \"text\": grp.groupName, \"value\": grp.groupName }; });\r\n    components.cbTableGroupList.items = groupListItems;\r\n    components.comboGroupName.items = groupListItems;\r\n}\r\nfunction getFieldValidationRules() {\r\n    debugger;\r\n    var fieldRuleCount = quick.store.get('fieldRuleIndex');\r\n    var rules = [];\r\n    for (var i = 1; i <= fieldRuleCount; i++) {\r\n        var ruleTypeComponent = components[\"cbValidationRulesType_\" + i];\r\n        var ruleValueComponent = components[\"txtValidationRuleValue_\" + i];\r\n        if (!ruleTypeComponent || !ruleTypeComponent.internalValue) {\r\n            return;\r\n        }\r\n        var ruleType = ruleTypeComponent.internalValue.value;\r\n        var ruleValue = ruleValueComponent ? ruleValueComponent.internalValue : undefined;\r\n        var rule = { type: ruleType, value: ruleValue };\r\n        rules.push(rule);\r\n    }\r\n    return rules;\r\n}\r\nfunction resetFieldContainer() {\r\n    quick.Quick.reset('fieldContainer');\r\n    quick.store.set('fieldRuleIndex', 0);\r\n}\r\n",
                                                                                                                                                                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                                                                                                                                                                    "HL": "JS"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "C": {
                                                                                                                                                                                                                                                "default": {
                                                                                                                                                                                                                                                    "c": [
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                            "T": "QLabel",
                                                                                                                                                                                                                                                            "C": {},
                                                                                                                                                                                                                                                            "E": {},
                                                                                                                                                                                                                                                            "P": {
                                                                                                                                                                                                                                                                "ID": {
                                                                                                                                                                                                                                                                    "H": "EdtrComp_140",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                "text": {
                                                                                                                                                                                                                                                                    "H": "╬'Save Field'╩╩",
                                                                                                                                                                                                                                                                    "T": "prop"
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                                "eID": "EdtrComp_140"
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                                "cType": "child",
                                                                                                                                                                                                                                                                "compDomClasses": "q-label "
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                                "eID": "EdtrComp_139"
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                                "eID": "EdtrComp_138"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                                "compDomClasses": "col d-flex flex-row col-12 justify-end",
                                                                                                                                                                                                                                "layout": {
                                                                                                                                                                                                                                    "dOpt": {
                                                                                                                                                                                                                                        "xs": [
                                                                                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                                                                                            "fd:flex-row",
                                                                                                                                                                                                                                            "c:col-12",
                                                                                                                                                                                                                                            "j:justify-end"
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "class": "d-flex flex-row col-12 justify-end"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                                "eID": "EdtrComp_136"
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "O": {
                                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                                "compDomClasses": "row d-flex flex-row justify-end"
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    ],
                                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                                "eID": "EdtrComp_103"
                                                                                                                                                                                            },
                                                                                                                                                                                            "O": {
                                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                                "compDomClasses": "container"
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    ],
                                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "_Editor": {
                                                                                                                                                                                "eID": "EdtrComp_100"
                                                                                                                                                                            },
                                                                                                                                                                            "O": {
                                                                                                                                                                                "cType": "slot",
                                                                                                                                                                                "compDomClasses": "v-card v-sheet theme--light"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    ],
                                                                                                                                                                    "cType": "slot"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "_Editor": {
                                                                                                                                                                "eID": "EdtrComp_99"
                                                                                                                                                            },
                                                                                                                                                            "O": {
                                                                                                                                                                "cType": "slot",
                                                                                                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                                                                                                "layout": {
                                                                                                                                                                    "dOpt": {
                                                                                                                                                                        "xs": [
                                                                                                                                                                            "d:d-flex",
                                                                                                                                                                            "fd:flex-column"
                                                                                                                                                                        ]
                                                                                                                                                                    },
                                                                                                                                                                    "class": "d-flex flex-column"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    ],
                                                                                                                                                    "cType": "slot"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_98"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "cType": "slot",
                                                                                                                                                "compDomClasses": "row d-flex flex-row"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_49"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-expansion-panel-content"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "slot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_46"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-expansion-panel"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_35"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "v-item-group theme--light v-expansion-panels"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_30"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "fd:flex-column"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex flex-column"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_28"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        },
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_133",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_135",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "╬''╩╩",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VCombobox",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "cbTableGroupList",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "attach": {
                                                                                                    "H": "╬true╩╩",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "label": {
                                                                                                    "H": "╬'Group Name'╩╩",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {
                                                                                                "change": {
                                                                                                    "H": "\"use strict\";\r\nvar _a, _b;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\nvar uiFields = (_a = quick.store.get('dynamicModel')) === null || _a === void 0 ? void 0 : _a.uiFields;\r\nvar selectedGroupName = (_b = components.cbTableGroupList.internalValue) === null || _b === void 0 ? void 0 : _b.value;\r\nvar selectedGroup = uiFields.groups.filter(function (grp) { return grp.groupName == selectedGroupName; });\r\nif (selectedGroup && selectedGroup[0].fields) {\r\n    components.dynamicFieldsDataTable.items = selectedGroup[0].fields;\r\n}\r\n",
                                                                                                    "P": "value:object",
                                                                                                    "HL": "JS"
                                                                                                }
                                                                                            },
                                                                                            "C": {},
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_23"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_135"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col col-3 d-flex flex-column",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "c:col-3",
                                                                                            "d:d-flex",
                                                                                            "fd:flex-column"
                                                                                        ]
                                                                                    },
                                                                                    "class": "col-3 d-flex flex-column"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_121",
                                                                                    "T": "prop"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VBtn",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "btnEditGroup",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "color": {
                                                                                                    "H": "╬'primary'╩╩",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "fab": {
                                                                                                    "H": "╬true╩╩",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VIcon",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_155",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "╬'mdi-pencil'╩╩",
                                                                                                                    "T": "text"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_155"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-pencil theme--light"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_137"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "sp:mr-2"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "mr-2"
                                                                                                },
                                                                                                "compDomClasses": "v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary mr-2"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "T": "VBtn",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "btnDeleteGroup",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "color": {
                                                                                                    "H": "╬'primary'╩╩",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "fab": {
                                                                                                    "H": "╬true╩╩",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {
                                                                                                "click": {
                                                                                                    "H": "\"use strict\";\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dynamicModel = quick.store.get('dynamicModel');\r\nvar selectedGroupName = (_a = components.cbTableGroupList.internalValue) === null || _a === void 0 ? void 0 : _a.value;\r\ndynamicModel === null || dynamicModel === void 0 ? void 0 : dynamicModel.uiFields.groups.forEach(function (grp, grpIndex) {\r\n    if (grp.groupName == selectedGroupName) {\r\n        dynamicModel.uiFields.groups.splice(grpIndex, 1);\r\n    }\r\n});\r\ndynamicModel === null || dynamicModel === void 0 ? void 0 : dynamicModel.serviceFields.forEach(function (grp, grpIndex) {\r\n    if (grp.groupName == selectedGroupName) {\r\n        dynamicModel.serviceFields.splice(grpIndex, 1);\r\n    }\r\n});\r\ndebugger;\r\ncomponents.cbTableGroupList.items = components.cbTableGroupList.items.filter(function (item) { return item.value !== selectedGroupName; });\r\ncomponents.comboGroupName.items = components.cbTableGroupList.items.filter(function (item) { return item.value !== selectedGroupName; });\r\nquick.Quick.reset('cbTableGroupList');\r\ncomponents.dynamicFieldsDataTable.items = [];\r\nquick.store.set('dynamicModel', dynamicModel);\r\n",
                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                    "HL": "JS"
                                                                                                }
                                                                                            },
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VIcon",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_156",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "╬'mdi-delete'╩╩",
                                                                                                                    "T": "text"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_156"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-delete theme--light"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_149"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_121"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "fd:flex-row"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex flex-row"
                                                                                },
                                                                                "compDomClasses": "col d-flex flex-row"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_133"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        },
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_6",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_15",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "╬''╩╩",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VDataTable",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "dynamicFieldsDataTable",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "headers": {
                                                                                                    "H": "╬[]╠{}╠=╣text╩╠'Field Name'╩╩╠=╣value╩╠'fieldName'╩╩╩╠{}╠=╣text╩╠'Label'╩╩╠=╣value╩╠'label'╩╩╩╠{}╠=╣text╩╠'Type'╩╩╠=╣value╩╠'type'╩╩╩╠{}╠=╣text╩╠'Format'╩╩╠=╣value╩╠'format'╩╩╩╠{}╠=╣text╩╠''╩╩╠=╣value╩╠'actions'╩╩╠=╣align╩╠'center fixed'╩╩╠=╣class╩╠'fixed'╩╩╩╩╩",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "items": {
                                                                                                    "H": "╬[]╩╩",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "item.actions": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VIcon",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "fieldEditButton",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "╬'mdi-pencil'╩╩",
                                                                                                                    "T": "text"
                                                                                                                },
                                                                                                                "large": {
                                                                                                                    "H": "╬true╩╩",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {
                                                                                                                "click": {
                                                                                                                    "H": "\"use strict\";\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dynamicModel = quick.store.get('dynamicModel');\r\nvar selectedGroupName = (_a = components.cbTableGroupList.internalValue) === null || _a === void 0 ? void 0 : _a.value;\r\ndynamicModel === null || dynamicModel === void 0 ? void 0 : dynamicModel.uiFields.groups.forEach(function (grp, grpIndex) {\r\n    if (grp.groupName == selectedGroupName) {\r\n        grp.fields.forEach(function (field, fieldIndex) {\r\n            debugger;\r\n            if (field.fieldName == item.fieldName) {\r\n                components.txtFieldName.internalValue = field.fieldName;\r\n                components.cbFieldType.internalValue = components.cbFieldType.items.filter(function (item) { return item.value == field.type; })[0];\r\n                components.cbFieldFormat.internalValue = components.cbFieldFormat.items.filter(function (item) { return item.value == field.format; })[0];\r\n                components.txtFieldLabelTR.internalValue = dynamicModel.uiFields.localization[\"tr-TR\"][field.label];\r\n                components.txtFieldLabelEN.internalValue = dynamicModel.uiFields.localization[\"en-US\"][field.label];\r\n            }\r\n        });\r\n    }\r\n});\r\nquick.store.set('dynamicModel', dynamicModel);\r\ncomponents.expansionPanels.internalValue = 1;\r\n",
                                                                                                                    "P": "mouseEvent:object",
                                                                                                                    "HL": "JS"
                                                                                                                }
                                                                                                            },
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_78"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-icon notranslate v-icon--link mdi mdi-pencil theme--light"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "T": "VIcon",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "fieldDeleteButton",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "╬'mdi-delete'╩╩",
                                                                                                                    "T": "text"
                                                                                                                },
                                                                                                                "large": {
                                                                                                                    "H": "╬true╩╩",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {
                                                                                                                "click": {
                                                                                                                    "H": "\"use strict\";\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dynamicModel = quick.store.get('dynamicModel');\r\nvar selectedGroupName = (_a = components.cbTableGroupList.internalValue) === null || _a === void 0 ? void 0 : _a.value;\r\ndynamicModel === null || dynamicModel === void 0 ? void 0 : dynamicModel.uiFields.groups.forEach(function (grp, grpIndex) {\r\n    if (grp.groupName == selectedGroupName) {\r\n        grp.fields.forEach(function (field, fieldIndex) {\r\n            if (field.fieldName == item.fieldName) {\r\n                dynamicModel.uiFields.groups[grpIndex].fields.splice(fieldIndex, 1);\r\n            }\r\n        });\r\n    }\r\n});\r\nquick.store.set('dynamicModel', dynamicModel);\r\nquick.Quick.reset('fieldContainer');\r\n",
                                                                                                                    "P": "mouseEvent:object",
                                                                                                                    "HL": "JS"
                                                                                                                }
                                                                                                            },
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_77"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-icon notranslate v-icon--link mdi mdi-delete theme--light"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "scopedSlot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_18"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "scopedSlot",
                                                                                                "compDomClasses": "v-data-table v-data-table--has-bottom theme--light"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_15"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col d-flex flex-column",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "fd:flex-column"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex flex-column"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_6"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        },
                                                        {
                                                            "T": "VRow",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_55",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "╬'d-flex flex-row'╩╩",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VCol",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_62",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "╬''╩╩",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VBtn",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_66",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "color": {
                                                                                                    "H": "╬'primary'╩╩",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "E": {
                                                                                                "click": {
                                                                                                    "H": "\"use strict\";\r\nvar _a, _b;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dynamicModel = quick.store.get('dynamicModel');\r\nvar modelKey = (_a = quick.store.get('modelKey')) !== null && _a !== void 0 ? _a : \"customerInfoModelKey\";\r\nvar modelUrl = (_b = quick.store.get('modelUrl')) !== null && _b !== void 0 ? _b : \"http://customer.tkb-int.dev.rally.softtech/api/dynamicscreen/\";\r\nvar requestParams = {\r\n    mode: \"raw\",\r\n    raw: JSON.stringify(dynamicModel),\r\n    modelKey: modelKey\r\n};\r\nvar requestObj = {\r\n    url: modelUrl,\r\n    http: \"GET\",\r\n    responseField: 'firstResponse',\r\n    blockRender: true,\r\n    data: requestParams,\r\n    onSuccess: 'onSuccessSaveModel',\r\n    onFail: 'OnFailModelSave'\r\n};\r\nquick.Request.async(requestObj);\r\n",
                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                    "HL": "JS"
                                                                                                },
                                                                                                "onSuccessSaveModel": {
                                                                                                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.Quick.alert({ text: \"Model kaydedilmiştir\", category: \"Success\" });\r\n",
                                                                                                    "C": true,
                                                                                                    "HL": "JS"
                                                                                                },
                                                                                                "OnFailModelSave": {
                                                                                                    "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.Quick.alert({ text: \"Model kaydedilememiştir.\", category: \"Eror\" });\r\n",
                                                                                                    "C": true,
                                                                                                    "HL": "JS"
                                                                                                }
                                                                                            },
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "QLabel",
                                                                                                            "C": {},
                                                                                                            "E": {},
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_70",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "╬'Save Model'╩╩",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_70"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "child",
                                                                                                                "compDomClasses": "q-label "
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_66"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default primary"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_62"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "col d-flex flex-row justify-end col-12",
                                                                                "layout": {
                                                                                    "dOpt": {
                                                                                        "xs": [
                                                                                            "d:d-flex",
                                                                                            "fd:flex-row",
                                                                                            "j:justify-end",
                                                                                            "c:col-12"
                                                                                        ]
                                                                                    },
                                                                                    "class": "d-flex flex-row justify-end col-12"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_55"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "row d-flex flex-row"
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_26"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "container"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_24"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "v-card v-sheet theme--light"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_21"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "v-dialog__container"
            }
        }
    ],
    "lrids": {},
    "clrids": {},
    "namedViews": {
        "designMode": {
            "pJson": [
                {
                    "T": "Messaging",
                    "P": {
                        "ID": {
                            "H": "EdtrComp_2",
                            "T": "prop"
                        },
                        "externalProps": {
                            "H": "['serviceName', 'serviceFilterKey', 'model', 'data']",
                            "T": "prop"
                        }
                    },
                    "E": {
                        "GetDynamicData": {
                            "H": "quick.EM.trace(\"DF-GetDynamicData design mode\")",
                            "C": true,
                            "EV": true,
                            "HL": "TS"
                        },
                        "CreateFields": {
                            "H": "quick.EM.trace('DF-CreateFields design mode')",
                            "C": true,
                            "EV": true,
                            "HL": "TS"
                        }
                    },
                    "C": {},
                    "_Editor": {
                        "eID": "EdtrComp_2"
                    },
                    "O": {
                        "compDomClasses": ""
                    }
                },
                {
                    "T": "QLabel",
                    "P": {
                        "ID": {
                            "H": "EdtrComp_1",
                            "T": "prop"
                        },
                        "text": {
                            "H": "'Dynamic Fileds Component'",
                            "T": "prop"
                        }
                    },
                    "E": {},
                    "C": {},
                    "_Editor": {
                        "eID": "EdtrComp_1"
                    },
                    "O": {
                        "cType": "slot",
                        "compDomClasses": "q-label "
                    }
                }
            ],
            "cJson": [
                {
                    "T": "Messaging",
                    "P": {
                        "ID": {
                            "H": "EdtrComp_2",
                            "T": "prop"
                        },
                        "externalProps": {
                            "H": "╬[]╠'serviceName'╩╠'serviceFilterKey'╩╠'model'╩╠'data'╩╩╩",
                            "T": "prop"
                        }
                    },
                    "E": {
                        "GetDynamicData": {
                            "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.EM.trace(\"DF-GetDynamicData design mode\");\r\n",
                            "C": true,
                            "EV": true,
                            "HL": "JS"
                        },
                        "CreateFields": {
                            "H": "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.EM.trace('DF-CreateFields design mode');\r\n",
                            "C": true,
                            "EV": true,
                            "HL": "JS"
                        }
                    },
                    "C": {},
                    "_Editor": {
                        "eID": "EdtrComp_2"
                    },
                    "O": {
                        "cType": "child",
                        "compDomClasses": ""
                    }
                },
                {
                    "T": "QLabel",
                    "P": {
                        "ID": {
                            "H": "EdtrComp_1",
                            "T": "prop"
                        },
                        "text": {
                            "H": "╬'Dynamic Fileds Component'╩╩",
                            "T": "prop"
                        }
                    },
                    "E": {},
                    "C": {},
                    "_Editor": {
                        "eID": "EdtrComp_1"
                    },
                    "O": {
                        "cType": "slot",
                        "compDomClasses": "q-label "
                    }
                }
            ]
        }
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pjson);


/***/ }),

/***/ "../../common/qshell/src/customComponents/QLegend.ts":
/*!***********************************************************!*\
  !*** ../../common/qshell/src/customComponents/QLegend.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var pjson = {
    "pJson": [
        {
            "T": "Messaging",
            "P": {
                "ID": {
                    "H": "EdtrComp_62",
                    "T": "prop"
                },
                "externalProps": {
                    "H": "['referenceCompId']",
                    "T": "prop"
                }
            },
            "E": {
                "setVisibleListButton": {
                    "H": "//visible parameter sets the list button component's visible prop\r\ncomponents.showListButton.visible=true",
                    "C": true,
                    "EV": true,
                    "HL": "TS"
                },
                "PreRender": {
                    "H": "const editor = quick.Quick.getEditor();\r\nif (editor) {\r\n    editor.dmEnabled = true;\r\n}",
                    "I": true,
                    "HL": "TS"
                },
                "showList": {
                    "H": "quick.EM.trace('getValueContextList')\r\nquick.EM.trace(quick.parent.props.referenceCompId)\r\nlet valueList = (<any>quick.Quick.dm).getValueContextList(quick.parent.props.referenceCompId)\r\nquick.EM.trace(valueList)\r\ncomponents.detailTable.items = valueList",
                    "C": true,
                    "EV": true,
                    "HL": "TS"
                },
                "EndRender": {
                    "H": "(<any>components.vCardDetail).visible = false",
                    "HL": "TS"
                }
            },
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_62"
            },
            "O": {
                "compDomClasses": "newDropBorder",
                "cType": "child"
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "EdtrComp_29",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCol",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_19",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VCard",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_1",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "VContainer",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_31",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "''",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VRow",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_5",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "'no-gutters align-center flex-nowrap'",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_26",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "''",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "QLabel",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_21",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "LR('status')",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "class": {
                                                                                                                    "H": "''",
                                                                                                                    "T": "class"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_21"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "child",
                                                                                                                "compDomClasses": "q-label text-h5 font-weight-bold newDropBorder",
                                                                                                                "layout": {
                                                                                                                    "dOpt": {
                                                                                                                        "xs": [
                                                                                                                            "tt:text-h5",
                                                                                                                            "te:font-weight-bold"
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "class": "text-h5 font-weight-bold"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_26"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col col-2 newDropBorder",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "c:col-2"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "col-2"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_44",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "''",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VRow",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_46",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "class": {
                                                                                                                    "H": "'flex-wrap'",
                                                                                                                    "T": "class"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {
                                                                                                                "default": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "VIcon",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_10",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "'mdi-circle'",
                                                                                                                                    "T": "text"
                                                                                                                                },
                                                                                                                                "small": {
                                                                                                                                    "H": "true",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "color": {
                                                                                                                                    "H": "'light-green lighten-3'",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_10"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-circle theme--light light-green--text text--lighten-3 newDropBorder"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "QLabel",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_9s",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "''",
                                                                                                                                    "T": "class"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "LR('saved')",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_9"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "q-label text-h6 ml-2 newDropBorder",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "tt:text-h6",
                                                                                                                                            "sp:ml-2"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "text-h6 ml-2"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "VIcon",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_6",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "'mdi-circle'",
                                                                                                                                    "T": "text"
                                                                                                                                },
                                                                                                                                "small": {
                                                                                                                                    "H": "true",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "color": {
                                                                                                                                    "H": "'light-blue lighten-3'",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "''",
                                                                                                                                    "T": "class"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_6"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-circle theme--light light-blue--text text--lighten-3 ml-4 newDropBorder",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "sp:ml-4"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "ml-4"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "QLabel",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_8",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "''",
                                                                                                                                    "T": "class"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "LR('updated')",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_8"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "q-label text-h6 ml-2 newDropBorder",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "tt:text-h6",
                                                                                                                                            "sp:ml-2"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "text-h6 ml-2"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "VIcon",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_15s",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "'mdi-circle'",
                                                                                                                                    "T": "text"
                                                                                                                                },
                                                                                                                                "small": {
                                                                                                                                    "H": "true",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "color": {
                                                                                                                                    "H": "'red lighten-3'",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "''",
                                                                                                                                    "T": "class"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_15"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-circle theme--light red--text text--lighten-3 ml-4 newDropBorder",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "sp:ml-4"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "ml-4"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "QLabel",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_17",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "''",
                                                                                                                                    "T": "class"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "LR('deleted')",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_17"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "q-label text-h6 ml-2 newDropBorder",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "tt:text-h6",
                                                                                                                                            "sp:ml-2"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "text-h6 ml-2"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "slot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_46"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "row flex-wrap newDropBorder"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_44"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col col-5 newDropBorder",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "c:col-5"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "col-5"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_50",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "'v-spacer'",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "Ghost",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_51",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_51"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "editor-ghost-comp newDropBorder"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_50"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col v-spacer newDropBorder"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_24",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "''",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VBtn",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "showListButton",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "color": {
                                                                                                                    "H": "'info'",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "regular": {
                                                                                                                    "H": "true",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {
                                                                                                                "click": {
                                                                                                                    "H": "components.vCardDetail.visible = !components.vCardDetail.visible\r\ncomponents.lblShowList.text = quick.LR('showList')\r\n\r\nif (components.vCardDetail.visible) {\r\n    quick.MM.trigger('showList')\r\n    components.lblShowList.text = quick.LR('hideList')\r\n}",
                                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                                    "HL": "TS"
                                                                                                                }
                                                                                                            },
                                                                                                            "C": {
                                                                                                                "default": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "QLabel",
                                                                                                                            "C": {},
                                                                                                                            "E": {},
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "lblShowList",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "LR('showList')",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_23"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "q-label newDropBorder"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "slot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_22"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default info newDropBorder"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_24"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col d-flex justify-end newDropBorder",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "d:d-flex",
                                                                                                            "j:justify-end"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "d-flex justify-end"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_5"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "row no-gutters align-center flex-nowrap newDropBorder"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_31"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "container pr-8 pb-8 pl-8 pt-8 newDropBorder",
                                                                "layout": {
                                                                    "dOpt": {
                                                                        "xs": [
                                                                            "sp:pr-8",
                                                                            "sp:pb-8",
                                                                            "sp:pl-8",
                                                                            "sp:pt-8"
                                                                        ]
                                                                    },
                                                                    "class": "pr-8 pb-8 pl-8 pt-8"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_1"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "v-card v-sheet theme--light newDropBorder"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_19"
                            },
                            "O": {
                                "cType": "slot",
                                "layout": {
                                    "dOpt": {
                                        "xs": [
                                            "d:d-flex",
                                            "fd:flex-column"
                                        ]
                                    },
                                    "class": "d-flex flex-column"
                                },
                                "compDomClasses": "col d-flex flex-column newDropBorder"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_29"
            },
            "O": {
                "cType": "slot"
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "EdtrComp_203",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCol",
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VCard",
                                            "P": {
                                                "ID": {
                                                    "H": "vCardDetail",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "VContainer",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_20",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "''",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VRow",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_95",
                                                                                    "T": "prop"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "QLabel",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_7",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "LR('updatedRecords')",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "class": {
                                                                                                                    "H": "''",
                                                                                                                    "T": "class"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_7"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "child",
                                                                                                                "compDomClasses": "q-label pl-8 text-h6 font-weight-bold newDropBorder",
                                                                                                                "layout": {
                                                                                                                    "dOpt": {
                                                                                                                        "xs": [
                                                                                                                            "tt:text-h6",
                                                                                                                            "te:font-weight-bold"
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "class": "text-h6 font-weight-bold"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_106",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_106"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_95"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot"
                                                                            }
                                                                        },
                                                                        {
                                                                            "T": "VRow",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_160",
                                                                                    "T": "prop"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VDataTable",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "detailTable",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "headers": {
                                                                                                                    "H": "[{ text = LR('dataType'), value = 'label'},\n{ text = LR('currentData'), value = 'value' },\n{ text = LR('oldData'), value = 'compareValue' }]",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "footerProps": {
                                                                                                                    "H": "{showFirstLastPage = true,\nfirstIcon = 'mdi-arrow-collapse-left',\nlastIcon = 'mdi-arrow-collapse-right',\nprevIcon = 'mdi-minus',\nnextIcon = 'mdi-plus',\nitemsPerPageText = LR('itemsPerPage')}",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "itemsPerPage": {
                                                                                                                    "H": "5",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "noDataText": {
                                                                                                                    "H": "LR('noData')",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "noResultText": {
                                                                                                                    "H": "LR('noResult')",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {
                                                                                                                "item.value": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "VChip",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_12",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "color": {
                                                                                                                                    "H": "if (item.statu == 'saved') {\r\n    'light-green lighten-3'\r\n} else if (item.statu == 'updated') {\r\n    'light-blue lighten-3'\r\n} else if (item.statu == 'removed') {\r\n    'red lighten-3'\r\n} else {\r\n    ''\r\n}",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "QLabel",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "EdtrComp_16",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "text": {
                                                                                                                                                    "H": "if (item.value == undefined || item.value == null) {\r\n    '-'\r\n} else {\r\n    item.value\r\n}",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "'black--text'",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {},
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_16"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "compDomClasses": "q-label ",
                                                                                                                                                "cType": "child"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_12"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-chip theme--light v-size--default red lighten-3"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "scopedSlot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_4"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "child",
                                                                                                                "compDomClasses": "v-data-table v-data-table--has-bottom theme--light pt-5 pl-5 pr-5 newDropBorder",
                                                                                                                "layout": {
                                                                                                                    "dOpt": {
                                                                                                                        "xs": []
                                                                                                                    },
                                                                                                                    "class": ""
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_171",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_171"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_160"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_20"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "container newDropBorder",
                                                                "layout": {
                                                                    "dOpt": {
                                                                        "xs": [
                                                                            "sp:pr-8",
                                                                            "sp:pb-8",
                                                                            "sp:pl-8",
                                                                            "sp:pt-8"
                                                                        ]
                                                                    },
                                                                    "class": "pr-8 pb-8 pl-8 pt-8"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_2"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "v-card v-sheet theme--light newDropBorder"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "E": {},
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_216",
                                    "T": "prop"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_216"
                            },
                            "O": {
                                "cType": "slot"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_203"
            },
            "O": {
                "cType": "slot"
            }
        }
    ],
    "cJson": [
        {
            "T": "Messaging",
            "P": {
                "ID": {
                    "H": "EdtrComp_62",
                    "T": "prop"
                },
                "externalProps": {
                    "H": "╬[]╠'referenceCompId'╩╩╩",
                    "T": "prop"
                }
            },
            "E": {
                "setVisibleListButton": {
                    "H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n//visible parameter sets the list button component's visible prop\r\ncomponents.showListButton.visible = true;\r\n",
                    "C": true,
                    "EV": true,
                    "HL": "JS"
                },
                "PreRender": {
                    "H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nvar editor = quick.Quick.getEditor();\r\nif (editor) {\r\n    editor.dmEnabled = true;\r\n}\r\n",
                    "I": true,
                    "HL": "JS"
                },
                "showList": {
                    "H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.EM.trace('getValueContextList');\r\nquick.EM.trace(quick.parent.props.referenceCompId);\r\nvar valueList = quick.Quick.dm.getValueContextList(quick.parent.props.referenceCompId);\r\nquick.EM.trace(valueList);\r\ncomponents.detailTable.items = valueList;\r\n",
                    "C": true,
                    "EV": true,
                    "HL": "JS"
                },
                "EndRender": {
                    "H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ncomponents.vCardDetail.visible = false;\r\n",
                    "HL": "JS"
                }
            },
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_62"
            },
            "O": {
                "compDomClasses": "",
                "cType": "child"
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "EdtrComp_29",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCol",
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_19",
                                    "T": "prop"
                                }
                            },
                            "E": {},
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VCard",
                                            "P": {
                                                "ID": {
                                                    "H": "EdtrComp_1",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "VContainer",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_31",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "╬''╩╩",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VRow",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_5",
                                                                                    "T": "prop"
                                                                                },
                                                                                "class": {
                                                                                    "H": "╬'no-gutters align-center flex-nowrap'╩╩",
                                                                                    "T": "class"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_26",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "╬''╩╩",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "QLabel",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_21",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "╬()╣LR╩╠'status'╩╩╩",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "class": {
                                                                                                                    "H": "╬''╩╩",
                                                                                                                    "T": "class"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_21"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "child",
                                                                                                                "compDomClasses": "q-label  text-h5 font-weight-bold",
                                                                                                                "layout": {
                                                                                                                    "dOpt": {
                                                                                                                        "xs": [
                                                                                                                            "tt:text-h5",
                                                                                                                            "te:font-weight-bold"
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "class": "text-h5 font-weight-bold"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_26"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col col-2",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "c:col-2"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "col-2"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_44",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "╬''╩╩",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VRow",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_46",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "class": {
                                                                                                                    "H": "╬'flex-wrap'╩╩",
                                                                                                                    "T": "class"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {
                                                                                                                "default": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "VIcon",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_10",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "╬'mdi-circle'╩╩",
                                                                                                                                    "T": "text"
                                                                                                                                },
                                                                                                                                "small": {
                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "color": {
                                                                                                                                    "H": "╬'light-green lighten-3'╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_10"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-circle theme--light light-green--text text--lighten-3"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "QLabel",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_9s",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                    "T": "class"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "╬()╣LR╩╠'saved'╩╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_9"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "q-label  text-h6 ml-2",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "tt:text-h6",
                                                                                                                                            "sp:ml-2"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "text-h6 ml-2"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "VIcon",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_6",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "╬'mdi-circle'╩╩",
                                                                                                                                    "T": "text"
                                                                                                                                },
                                                                                                                                "small": {
                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "color": {
                                                                                                                                    "H": "╬'light-blue lighten-3'╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                    "T": "class"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_6"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-circle theme--light light-blue--text text--lighten-3 ml-4",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "sp:ml-4"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "ml-4"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "QLabel",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_8",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                    "T": "class"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "╬()╣LR╩╠'updated'╩╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_8"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "q-label  text-h6 ml-2",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "tt:text-h6",
                                                                                                                                            "sp:ml-2"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "text-h6 ml-2"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "VIcon",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_15s",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "╬'mdi-circle'╩╩",
                                                                                                                                    "T": "text"
                                                                                                                                },
                                                                                                                                "small": {
                                                                                                                                    "H": "╬true╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "color": {
                                                                                                                                    "H": "╬'red lighten-3'╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                    "T": "class"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_15"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "v-icon notranslate mdi mdi-circle theme--light red--text text--lighten-3 ml-4",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "sp:ml-4"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "ml-4"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "T": "QLabel",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_17",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "class": {
                                                                                                                                    "H": "╬''╩╩",
                                                                                                                                    "T": "class"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "╬()╣LR╩╠'deleted'╩╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {},
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_17"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "q-label  text-h6 ml-2",
                                                                                                                                "layout": {
                                                                                                                                    "dOpt": {
                                                                                                                                        "xs": [
                                                                                                                                            "tt:text-h6",
                                                                                                                                            "sp:ml-2"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "class": "text-h6 ml-2"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "slot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_46"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "row flex-wrap"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_44"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col col-5",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "c:col-5"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "col-5"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_50",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "╬'v-spacer'╩╩",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "Ghost",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_51",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_51"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": ""
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_50"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col v-spacer"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_24",
                                                                                                    "T": "prop"
                                                                                                },
                                                                                                "class": {
                                                                                                    "H": "╬''╩╩",
                                                                                                    "T": "class"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VBtn",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "showListButton",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "color": {
                                                                                                                    "H": "╬'info'╩╩",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "regular": {
                                                                                                                    "H": "╬true╩╩",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {
                                                                                                                "click": {
                                                                                                                    "H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ncomponents.vCardDetail.visible = !components.vCardDetail.visible;\r\ncomponents.lblShowList.text = quick.LR('showList');\r\nif (components.vCardDetail.visible) {\r\n    quick.MM.trigger('showList');\r\n    components.lblShowList.text = quick.LR('hideList');\r\n}\r\n",
                                                                                                                    "P": "mouseEvent:unknown | undefined",
                                                                                                                    "HL": "JS"
                                                                                                                }
                                                                                                            },
                                                                                                            "C": {
                                                                                                                "default": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "QLabel",
                                                                                                                            "C": {},
                                                                                                                            "E": {},
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "lblShowList",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "text": {
                                                                                                                                    "H": "╬()╣LR╩╠'showList'╩╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_23"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "child",
                                                                                                                                "compDomClasses": "q-label "
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "slot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_22"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "slot",
                                                                                                                "compDomClasses": "v-btn v-btn--contained theme--light v-size--default info"
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_24"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col d-flex justify-end",
                                                                                                "layout": {
                                                                                                    "dOpt": {
                                                                                                        "xs": [
                                                                                                            "d:d-flex",
                                                                                                            "j:justify-end"
                                                                                                        ]
                                                                                                    },
                                                                                                    "class": "d-flex justify-end"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_5"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "row no-gutters align-center flex-nowrap"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_31"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "container pr-8 pb-8 pl-8 pt-8",
                                                                "layout": {
                                                                    "dOpt": {
                                                                        "xs": [
                                                                            "sp:pr-8",
                                                                            "sp:pb-8",
                                                                            "sp:pl-8",
                                                                            "sp:pt-8"
                                                                        ]
                                                                    },
                                                                    "class": "pr-8 pb-8 pl-8 pt-8"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_1"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "v-card v-sheet theme--light"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_19"
                            },
                            "O": {
                                "cType": "slot",
                                "layout": {
                                    "dOpt": {
                                        "xs": [
                                            "d:d-flex",
                                            "fd:flex-column"
                                        ]
                                    },
                                    "class": "d-flex flex-column"
                                },
                                "compDomClasses": "col d-flex flex-column"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_29"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "row"
            }
        },
        {
            "T": "VRow",
            "P": {
                "ID": {
                    "H": "EdtrComp_203",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {
                "default": {
                    "c": [
                        {
                            "T": "VCol",
                            "C": {
                                "default": {
                                    "c": [
                                        {
                                            "T": "VCard",
                                            "P": {
                                                "ID": {
                                                    "H": "vCardDetail",
                                                    "T": "prop"
                                                }
                                            },
                                            "E": {},
                                            "C": {
                                                "default": {
                                                    "c": [
                                                        {
                                                            "T": "VContainer",
                                                            "P": {
                                                                "ID": {
                                                                    "H": "EdtrComp_20",
                                                                    "T": "prop"
                                                                },
                                                                "class": {
                                                                    "H": "╬''╩╩",
                                                                    "T": "class"
                                                                }
                                                            },
                                                            "E": {},
                                                            "C": {
                                                                "default": {
                                                                    "c": [
                                                                        {
                                                                            "T": "VRow",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_95",
                                                                                    "T": "prop"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "QLabel",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "EdtrComp_7",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "text": {
                                                                                                                    "H": "╬()╣LR╩╠'updatedRecords'╩╩╩",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "class": {
                                                                                                                    "H": "╬''╩╩",
                                                                                                                    "T": "class"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {},
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_7"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "child",
                                                                                                                "compDomClasses": "q-label  text-h6 font-weight-bold",
                                                                                                                "layout": {
                                                                                                                    "dOpt": {
                                                                                                                        "xs": [
                                                                                                                            "tt:text-h6",
                                                                                                                            "te:font-weight-bold"
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "class": "text-h6 font-weight-bold"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_106",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_106"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_95"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "row"
                                                                            }
                                                                        },
                                                                        {
                                                                            "T": "VRow",
                                                                            "P": {
                                                                                "ID": {
                                                                                    "H": "EdtrComp_160",
                                                                                    "T": "prop"
                                                                                }
                                                                            },
                                                                            "E": {},
                                                                            "C": {
                                                                                "default": {
                                                                                    "c": [
                                                                                        {
                                                                                            "T": "VCol",
                                                                                            "C": {
                                                                                                "default": {
                                                                                                    "c": [
                                                                                                        {
                                                                                                            "T": "VDataTable",
                                                                                                            "P": {
                                                                                                                "ID": {
                                                                                                                    "H": "detailTable",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "headers": {
                                                                                                                    "H": "╬[]╠{}╠=╣text╩╠()╣LR╩╠'dataType'╩╩╩╠=╣value╩╠'label'╩╩╩╠{}╠=╣text╩╠()╣LR╩╠'currentData'╩╩╩╠=╣value╩╠'value'╩╩╩╠{}╠=╣text╩╠()╣LR╩╠'oldData'╩╩╩╠=╣value╩╠'compareValue'╩╩╩╩╩",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "footerProps": {
                                                                                                                    "H": "╬{}╠=╣showFirstLastPage╩╠true╩╩╠=╣firstIcon╩╠'mdi-arrow-collapse-left'╩╩╠=╣lastIcon╩╠'mdi-arrow-collapse-right'╩╩╠=╣prevIcon╩╠'mdi-minus'╩╩╠=╣nextIcon╩╠'mdi-plus'╩╩╠=╣itemsPerPageText╩╠()╣LR╩╠'itemsPerPage'╩╩╩╩╩",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "itemsPerPage": {
                                                                                                                    "H": "╬5╩╩",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "noDataText": {
                                                                                                                    "H": "╬()╣LR╩╠'noData'╩╩╩",
                                                                                                                    "T": "prop"
                                                                                                                },
                                                                                                                "noResultText": {
                                                                                                                    "H": "╬()╣LR╩╠'noResult'╩╩╩",
                                                                                                                    "T": "prop"
                                                                                                                }
                                                                                                            },
                                                                                                            "E": {},
                                                                                                            "C": {
                                                                                                                "item.value": {
                                                                                                                    "c": [
                                                                                                                        {
                                                                                                                            "T": "VChip",
                                                                                                                            "P": {
                                                                                                                                "ID": {
                                                                                                                                    "H": "EdtrComp_12",
                                                                                                                                    "T": "prop"
                                                                                                                                },
                                                                                                                                "color": {
                                                                                                                                    "H": "╬if╣==╣.╣item╩╠statu╩╩╠'saved'╩╩╠╬'light-green lighten-3'╩╩╠╬if╣==╣.╣item╩╠statu╩╩╠'updated'╩╩╠╬'light-blue lighten-3'╩╩╠╬if╣==╣.╣item╩╠statu╩╩╠'removed'╩╩╠╬'red lighten-3'╩╩╠╬''╩╩╩╩╩╩╩╩",
                                                                                                                                    "T": "prop"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "E": {},
                                                                                                                            "C": {
                                                                                                                                "default": {
                                                                                                                                    "c": [
                                                                                                                                        {
                                                                                                                                            "T": "QLabel",
                                                                                                                                            "P": {
                                                                                                                                                "ID": {
                                                                                                                                                    "H": "EdtrComp_16",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "text": {
                                                                                                                                                    "H": "╬if╣||╣==╣.╣item╩╠value╩╩╠undefined╩╩╠==╣.╣item╩╠value╩╩╠null╩╩╩╠╬'-'╩╩╠╬.╣item╩╠value╩╩╩╩╩",
                                                                                                                                                    "T": "prop"
                                                                                                                                                },
                                                                                                                                                "class": {
                                                                                                                                                    "H": "╬'black--text'╩╩",
                                                                                                                                                    "T": "class"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "E": {},
                                                                                                                                            "C": {},
                                                                                                                                            "_Editor": {
                                                                                                                                                "eID": "EdtrComp_16"
                                                                                                                                            },
                                                                                                                                            "O": {
                                                                                                                                                "compDomClasses": "q-label ",
                                                                                                                                                "cType": "child"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "cType": "slot"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "_Editor": {
                                                                                                                                "eID": "EdtrComp_12"
                                                                                                                            },
                                                                                                                            "O": {
                                                                                                                                "cType": "slot",
                                                                                                                                "compDomClasses": "v-chip theme--light v-size--default red lighten-3"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "cType": "scopedSlot"
                                                                                                                }
                                                                                                            },
                                                                                                            "_Editor": {
                                                                                                                "eID": "EdtrComp_4"
                                                                                                            },
                                                                                                            "O": {
                                                                                                                "cType": "child",
                                                                                                                "compDomClasses": "v-data-table v-data-table--has-bottom theme--light",
                                                                                                                "layout": {
                                                                                                                    "dOpt": {
                                                                                                                        "xs": []
                                                                                                                    },
                                                                                                                    "class": ""
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "cType": "slot"
                                                                                                }
                                                                                            },
                                                                                            "E": {},
                                                                                            "P": {
                                                                                                "ID": {
                                                                                                    "H": "EdtrComp_171",
                                                                                                    "T": "prop"
                                                                                                }
                                                                                            },
                                                                                            "_Editor": {
                                                                                                "eID": "EdtrComp_171"
                                                                                            },
                                                                                            "O": {
                                                                                                "cType": "slot",
                                                                                                "compDomClasses": "col"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "cType": "slot"
                                                                                }
                                                                            },
                                                                            "_Editor": {
                                                                                "eID": "EdtrComp_160"
                                                                            },
                                                                            "O": {
                                                                                "cType": "slot",
                                                                                "compDomClasses": "row"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "cType": "slot"
                                                                }
                                                            },
                                                            "_Editor": {
                                                                "eID": "EdtrComp_20"
                                                            },
                                                            "O": {
                                                                "cType": "slot",
                                                                "compDomClasses": "container pr-8 pb-8 pl-8 pt-8",
                                                                "layout": {
                                                                    "dOpt": {
                                                                        "xs": [
                                                                            "sp:pr-8",
                                                                            "sp:pb-8",
                                                                            "sp:pl-8",
                                                                            "sp:pt-8"
                                                                        ]
                                                                    },
                                                                    "class": "pr-8 pb-8 pl-8 pt-8"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "cType": "slot"
                                                }
                                            },
                                            "_Editor": {
                                                "eID": "EdtrComp_2"
                                            },
                                            "O": {
                                                "cType": "slot",
                                                "compDomClasses": "v-card v-sheet theme--light"
                                            }
                                        }
                                    ],
                                    "cType": "slot"
                                }
                            },
                            "E": {},
                            "P": {
                                "ID": {
                                    "H": "EdtrComp_216",
                                    "T": "prop"
                                }
                            },
                            "_Editor": {
                                "eID": "EdtrComp_216"
                            },
                            "O": {
                                "cType": "slot",
                                "compDomClasses": "col"
                            }
                        }
                    ],
                    "cType": "slot"
                }
            },
            "_Editor": {
                "eID": "EdtrComp_203"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "row"
            }
        }
    ],
    "lrids": {
        "tr-TR": {
            "saved": "'Kaydedildi'",
            "updated": "'Güncellendi'",
            "deleted": "'Silindi'",
            "showList": "'Listeyi Gör'",
            "status": "'İşlem Statüleri:'",
            "dataType": "'Veri Tipi'",
            "currentData": "'Güncel Veri'",
            "oldData": "'Eski Veri'",
            "updatedRecords": "'Güncellenen Veriler'",
            "hideList": "'Listeyi Gizle'",
            "noData": "'Veri Bulunamadı'",
            "noResult": "'Sonuç bulunamadı'",
            "itemsPerPage": "'Sayfa Satır Sayısı'"
        },
        "en-US": {
            "saved": "'Saved'",
            "updated": "'Updated'",
            "deleted": "'Deleted'",
            "showList": "'Show List'",
            "status": "'Process Status:'",
            "dataType": "'Data Type'",
            "currentData": "'Current Data'",
            "oldData": "'Old Data'",
            "updatedRecords": "'Updated Records'",
            "hideList": "'Hide List'",
            "noData": "'No Data Available'",
            "noResult": "'No result available'",
            "itemsPerPage": "'Rows Per Page'"
        }
    },
    "clrids": {
        "tr-TR": {
            "saved": "╬'Kaydedildi'╩╩",
            "updated": "╬'Güncellendi'╩╩",
            "deleted": "╬'Silindi'╩╩",
            "showList": "╬'Listeyi Gör'╩╩",
            "status": "╬'İşlem Statüleri:'╩╩",
            "dataType": "╬'Veri Tipi'╩╩",
            "currentData": "╬'Güncel Veri'╩╩",
            "oldData": "╬'Eski Veri'╩╩",
            "updatedRecords": "╬'Güncellenen Veriler'╩╩",
            "hideList": "╬'Listeyi Gizle'╩╩",
            "noData": "╬'Veri Bulunamadı'╩╩",
            "noResult": "╬'Sonuç bulunamadı'╩╩",
            "itemsPerPage": "╬'Sayfa Satır Sayısı'╩╩"
        },
        "en-US": {
            "saved": "╬'Saved'╩╩",
            "updated": "╬'Updated'╩╩",
            "deleted": "╬'Deleted'╩╩",
            "showList": "╬'Show List'╩╩",
            "status": "╬'Process Status:'╩╩",
            "dataType": "╬'Data Type'╩╩",
            "currentData": "╬'Current Data'╩╩",
            "oldData": "╬'Old Data'╩╩",
            "updatedRecords": "╬'Updated Records'╩╩",
            "hideList": "╬'Hide List'╩╩",
            "noData": "╬'No Data Available'╩╩",
            "noResult": "╬'No result available'╩╩",
            "itemsPerPage": "╬'Rows Per Page'╩╩"
        }
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pjson);


/***/ }),

/***/ "../../common/qshell/src/customComponents/QQRCode.ts":
/*!***********************************************************!*\
  !*** ../../common/qshell/src/customComponents/QQRCode.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var pjson = {
    "pJson": [
        {
            "T": "Messaging",
            "P": {
                "ID": {
                    "H": "EdtrComp_1",
                    "T": "prop"
                },
                "externalProps": {
                    "H": "['size', 'content', 'level']",
                    "T": "prop"
                }
            },
            "E": {
                "PostRender": {
                    "H": "let imagesize=quick.parent.props?.size ? Number(quick.parent.props?.size) : 0;\r\nlet qrString=quick.parent.props?.content ? String(quick.parent.props?.content) : '';\r\n\r\nnamespace qrcodegen {\r\n\t\r\n\ttype bit  = number;\r\n\ttype byte = number;\r\n\ttype int  = number;\r\n\r\n\t export class QrCode {\r\n\r\n\t\tpublic static encodeText(text: string, ecl: QrCode.Ecc): QrCode {\r\n\t\t\tconst segs: Array<QrSegment> = qrcodegen.QrSegment.makeSegments(text);\r\n\t\t\treturn QrCode.encodeSegments(segs, ecl);\r\n\t\t}\r\n\r\n\t\tpublic static encodeBinary(data: Readonly<Array<byte>>, ecl: QrCode.Ecc): QrCode {\r\n\t\t\tconst seg: QrSegment = qrcodegen.QrSegment.makeBytes(data);\r\n\t\t\treturn QrCode.encodeSegments([seg], ecl);\r\n\t\t}\r\n\r\n\t\tpublic static encodeSegments(segs: Readonly<Array<QrSegment>>, ecl: QrCode.Ecc,\r\n\t\t\t\tminVersion: int = 1, maxVersion: int = 40,\r\n\t\t\t\tmask: int = -1, boostEcl: boolean = true): QrCode {\r\n\t\t\t\r\n\t\t\tif (!(QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= QrCode.MAX_VERSION)\r\n\t\t\t\t\t|| mask < -1 || mask > 7)\r\n\t\t\t\tthrow \"Invalid value\";\r\n\t\t\t\r\n\t\t\t// Find the minimal version number to use\r\n\t\t\tlet version: int;\r\n\t\t\tlet dataUsedBits: int;\r\n\t\t\tfor (version = minVersion; ; version++) {\r\n\t\t\t\tconst dataCapacityBits: int = QrCode.getNumDataCodewords(version, ecl) * 8;  // Number of data bits available\r\n\t\t\t\tconst usedBits: number = QrSegment.getTotalBits(segs, version);\r\n\t\t\t\tif (usedBits <= dataCapacityBits) {\r\n\t\t\t\t\tdataUsedBits = usedBits;\r\n\t\t\t\t\tbreak;  // This version number is found to be suitable\r\n\t\t\t\t}\r\n\t\t\t\tif (version >= maxVersion)  // All versions in the range could not fit the given data\r\n\t\t\t\t\tthrow \"Data too long\";\r\n\t\t\t}\r\n\r\n\t\t\t// Increase the error correction level while the data still fits in the current version number\r\n\t\t\tfor (const newEcl of [QrCode.Ecc.MEDIUM, QrCode.Ecc.QUARTILE, QrCode.Ecc.HIGH]) {  // From low to high\r\n\t\t\t\tif (boostEcl && dataUsedBits <= QrCode.getNumDataCodewords(version, newEcl) * 8)\r\n\t\t\t\t\tecl = newEcl;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Concatenate all segments to create the data bit string\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tfor (const seg of segs) {\r\n\t\t\t\tappendBits(seg.mode.modeBits, 4, bb);\r\n\t\t\t\tappendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\r\n\t\t\t\tfor (const b of seg.getData())\r\n\t\t\t\t\tbb.push(b);\r\n\t\t\t}\r\n\t\t\tassert(bb.length == dataUsedBits);\r\n\t\t\t\r\n\t\t\t// Add terminator and pad up to a byte if applicable\r\n\t\t\tconst dataCapacityBits: int = QrCode.getNumDataCodewords(version, ecl) * 8;\r\n\t\t\tassert(bb.length <= dataCapacityBits);\r\n\t\t\tappendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\r\n\t\t\tappendBits(0, (8 - bb.length % 8) % 8, bb);\r\n\t\t\tassert(bb.length % 8 == 0);\r\n\t\t\t\r\n\t\t\t// Pad with alternating bytes until data capacity is reached\r\n\t\t\tfor (let padByte = 0xEC; bb.length < dataCapacityBits; padByte ^= 0xEC ^ 0x11)\r\n\t\t\t\tappendBits(padByte, 8, bb);\r\n\t\t\t\r\n\t\t\t// Pack bits into bytes in big endian\r\n\t\t\tlet dataCodewords: Array<byte> = [];\r\n\t\t\twhile (dataCodewords.length * 8 < bb.length)\r\n\t\t\t\tdataCodewords.push(0);\r\n\t\t\tbb.forEach((b: bit, i: int) =>\r\n\t\t\t\tdataCodewords[i >>> 3] |= b << (7 - (i & 7)));\r\n\t\t\t\r\n\t\t\t// Create the QR Code object\r\n\t\t\treturn new QrCode(version, ecl, dataCodewords, mask);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t/*-- Fields --*/\r\n\t\t\r\n\t\t// The width and height of this QR Code, measured in modules, between\r\n\t\t// 21 and 177 (inclusive). This is equal to version * 4 + 17.\r\n\t\tpublic readonly size: int;\r\n\t\t\r\n\t\t// The index of the mask pattern used in this QR Code, which is between 0 and 7 (inclusive).\r\n\t\t// Even if a QR Code is created with automatic masking requested (mask = -1),\r\n\t\t// the resulting object still has a mask value between 0 and 7.\r\n\t\tpublic readonly mask: int;\r\n\t\t\r\n\t\t// The modules of this QR Code (false = light, true = dark).\r\n\t\t// Immutable after constructor finishes. Accessed through getModule().\r\n\t\tprivate readonly modules   : Array<Array<boolean>> = [];\r\n\t\t\r\n\t\t// Indicates function modules that are not subjected to masking. Discarded when constructor finishes.\r\n\t\tprivate readonly isFunction: Array<Array<boolean>> = [];\r\n\t\t\r\n\t\t\r\n\t\t/*-- Constructor (low level) and fields --*/\r\n\t\t\r\n\t\t// Creates a new QR Code with the given version number,\r\n\t\t// error correction level, data codeword bytes, and mask number.\r\n\t\t// This is a low-level API that most users should not use directly.\r\n\t\t// A mid-level API is the encodeSegments() function.\r\n\t\tpublic constructor(\r\n\t\t\t\t// The version number of this QR Code, which is between 1 and 40 (inclusive).\r\n\t\t\t\t// This determines the size of this barcode.\r\n\t\t\t\tpublic readonly version: int,\r\n\t\t\t\t\r\n\t\t\t\t// The error correction level used in this QR Code.\r\n\t\t\t\tpublic readonly errorCorrectionLevel: QrCode.Ecc,\r\n\t\t\t\t\r\n\t\t\t\tdataCodewords: Readonly<Array<byte>>,\r\n\t\t\t\t\r\n\t\t\t\tmsk: int) {\r\n\t\t\t\r\n\t\t\t// Check scalar arguments\r\n\t\t\tif (version < QrCode.MIN_VERSION || version > QrCode.MAX_VERSION)\r\n\t\t\t\tthrow \"Version value out of range\";\r\n\t\t\tif (msk < -1 || msk > 7)\r\n\t\t\t\tthrow \"Mask value out of range\";\r\n\t\t\tthis.size = version * 4 + 17;\r\n\t\t\t\r\n\t\t\t// Initialize both grids to be size*size arrays of Boolean false\r\n\t\t\tlet row: Array<boolean> = [];\r\n\t\t\tfor (let i = 0; i < this.size; i++)\r\n\t\t\t\trow.push(false);\r\n\t\t\tfor (let i = 0; i < this.size; i++) {\r\n\t\t\t\tthis.modules   .push(row.slice());  // Initially all light\r\n\t\t\t\tthis.isFunction.push(row.slice());\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Compute ECC, draw modules\r\n\t\t\tthis.drawFunctionPatterns();\r\n\t\t\tconst allCodewords: Array<byte> = this.addEccAndInterleave(dataCodewords);\r\n\t\t\tthis.drawCodewords(allCodewords);\r\n\t\t\t\r\n\t\t\t// Do masking\r\n\t\t\tif (msk == -1) {  // Automatically choose best mask\r\n\t\t\t\tlet minPenalty: int = 1000000000;\r\n\t\t\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t\t\tthis.applyMask(i);\r\n\t\t\t\t\tthis.drawFormatBits(i);\r\n\t\t\t\t\tconst penalty: int = this.getPenaltyScore();\r\n\t\t\t\t\tif (penalty < minPenalty) {\r\n\t\t\t\t\t\tmsk = i;\r\n\t\t\t\t\t\tminPenalty = penalty;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.applyMask(i);  // Undoes the mask due to XOR\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tassert(0 <= msk && msk <= 7);\r\n\t\t\tthis.mask = msk;\r\n\t\t\tthis.applyMask(msk);  // Apply the final choice of mask\r\n\t\t\tthis.drawFormatBits(msk);  // Overwrite old format bits\r\n\t\t\t\r\n\t\t\tthis.isFunction = [];\r\n\t\t}\r\n\r\n\t\tpublic getModule(x: int, y: int): boolean {\r\n\t\t\treturn 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\r\n\t\t}\r\n\r\n\t\tprivate drawFunctionPatterns(): void {\r\n\t\t\t// Draw horizontal and vertical timing patterns\r\n\t\t\tfor (let i = 0; i < this.size; i++) {\r\n\t\t\t\tthis.setFunctionModule(6, i, i % 2 == 0);\r\n\t\t\t\tthis.setFunctionModule(i, 6, i % 2 == 0);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Draw 3 finder patterns (all corners except bottom right; overwrites some timing modules)\r\n\t\t\tthis.drawFinderPattern(3, 3);\r\n\t\t\tthis.drawFinderPattern(this.size - 4, 3);\r\n\t\t\tthis.drawFinderPattern(3, this.size - 4);\r\n\t\t\t\r\n\t\t\t// Draw numerous alignment patterns\r\n\t\t\tconst alignPatPos: Array<int> = this.getAlignmentPatternPositions();\r\n\t\t\tconst numAlign: int = alignPatPos.length;\r\n\t\t\tfor (let i = 0; i < numAlign; i++) {\r\n\t\t\t\tfor (let j = 0; j < numAlign; j++) {\r\n\t\t\t\t\t// Don't draw on the three finder corners\r\n\t\t\t\t\tif (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\r\n\t\t\t\t\t\tthis.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Draw configuration data\r\n\t\t\tthis.drawFormatBits(0);  // Dummy mask value; overwritten later in the constructor\r\n\t\t\tthis.drawVersion();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Draws two copies of the format bits (with its own error correction code)\r\n\t\t// based on the given mask and this object's error correction level field.\r\n\t\tprivate drawFormatBits(mask: int): void {\r\n\t\t\t// Calculate error correction code and pack bits\r\n\t\t\tconst data: int = this.errorCorrectionLevel.formatBits << 3 | mask;  // errCorrLvl is uint2, mask is uint3\r\n\t\t\tlet rem: int = data;\r\n\t\t\tfor (let i = 0; i < 10; i++)\r\n\t\t\t\trem = (rem << 1) ^ ((rem >>> 9) * 0x537);\r\n\t\t\tconst bits = (data << 10 | rem) ^ 0x5412;  // uint15\r\n\t\t\tassert(bits >>> 15 == 0);\r\n\t\t\t\r\n\t\t\t// Draw first copy\r\n\t\t\tfor (let i = 0; i <= 5; i++)\r\n\t\t\t\tthis.setFunctionModule(8, i, getBit(bits, i));\r\n\t\t\tthis.setFunctionModule(8, 7, getBit(bits, 6));\r\n\t\t\tthis.setFunctionModule(8, 8, getBit(bits, 7));\r\n\t\t\tthis.setFunctionModule(7, 8, getBit(bits, 8));\r\n\t\t\tfor (let i = 9; i < 15; i++)\r\n\t\t\t\tthis.setFunctionModule(14 - i, 8, getBit(bits, i));\r\n\t\t\t\r\n\t\t\t// Draw second copy\r\n\t\t\tfor (let i = 0; i < 8; i++)\r\n\t\t\t\tthis.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\r\n\t\t\tfor (let i = 8; i < 15; i++)\r\n\t\t\t\tthis.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\r\n\t\t\tthis.setFunctionModule(8, this.size - 8, true);  // Always dark\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Draws two copies of the version bits (with its own error correction code),\r\n\t\t// based on this object's version field, iff 7 <= version <= 40.\r\n\t\tprivate drawVersion(): void {\r\n\t\t\tif (this.version < 7)\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\t// Calculate error correction code and pack bits\r\n\t\t\tlet rem: int = this.version;  // version is uint6, in the range [7, 40]\r\n\t\t\tfor (let i = 0; i < 12; i++)\r\n\t\t\t\trem = (rem << 1) ^ ((rem >>> 11) * 0x1F25);\r\n\t\t\tconst bits: int = this.version << 12 | rem;  // uint18\r\n\t\t\tassert(bits >>> 18 == 0);\r\n\t\t\t\r\n\t\t\t// Draw two copies\r\n\t\t\tfor (let i = 0; i < 18; i++) {\r\n\t\t\t\tconst color: boolean = getBit(bits, i);\r\n\t\t\t\tconst a: int = this.size - 11 + i % 3;\r\n\t\t\t\tconst b: int = Math.floor(i / 3);\r\n\t\t\t\tthis.setFunctionModule(a, b, color);\r\n\t\t\t\tthis.setFunctionModule(b, a, color);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Draws a 9*9 finder pattern including the border separator,\r\n\t\t// with the center module at (x, y). Modules can be out of bounds.\r\n\t\tprivate drawFinderPattern(x: int, y: int): void {\r\n\t\t\tfor (let dy = -4; dy <= 4; dy++) {\r\n\t\t\t\tfor (let dx = -4; dx <= 4; dx++) {\r\n\t\t\t\t\tconst dist: int = Math.max(Math.abs(dx), Math.abs(dy));  // Chebyshev/infinity norm\r\n\t\t\t\t\tconst xx: int = x + dx;\r\n\t\t\t\t\tconst yy: int = y + dy;\r\n\t\t\t\t\tif (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\r\n\t\t\t\t\t\tthis.setFunctionModule(xx, yy, dist != 2 && dist != 4);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Draws a 5*5 alignment pattern, with the center module\r\n\t\t// at (x, y). All modules must be in bounds.\r\n\t\tprivate drawAlignmentPattern(x: int, y: int): void {\r\n\t\t\tfor (let dy = -2; dy <= 2; dy++) {\r\n\t\t\t\tfor (let dx = -2; dx <= 2; dx++)\r\n\t\t\t\t\tthis.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Sets the color of a module and marks it as a function module.\r\n\t\t// Only used by the constructor. Coordinates must be in bounds.\r\n\t\tprivate setFunctionModule(x: int, y: int, isDark: boolean): void {\r\n\t\t\tthis.modules[y][x] = isDark;\r\n\t\t\tthis.isFunction[y][x] = true;\r\n\t\t}\r\n\r\n\t\tprivate addEccAndInterleave(data: Readonly<Array<byte>>): Array<byte> {\r\n\t\t\tconst ver: int = this.version;\r\n\t\t\tconst ecl: QrCode.Ecc = this.errorCorrectionLevel;\r\n\t\t\tif (data.length != QrCode.getNumDataCodewords(ver, ecl))\r\n\t\t\t\tthrow \"Invalid argument\";\r\n\t\t\t\r\n\t\t\t// Calculate parameter numbers\r\n\t\t\tconst numBlocks: int = QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\r\n\t\t\tconst blockEccLen: int = QrCode.ECC_CODEWORDS_PER_BLOCK  [ecl.ordinal][ver];\r\n\t\t\tconst rawCodewords: int = Math.floor(QrCode.getNumRawDataModules(ver) / 8);\r\n\t\t\tconst numShortBlocks: int = numBlocks - rawCodewords % numBlocks;\r\n\t\t\tconst shortBlockLen: int = Math.floor(rawCodewords / numBlocks);\r\n\t\t\t\r\n\t\t\t// Split data into blocks and append ECC to each block\r\n\t\t\tlet blocks: Array<Array<byte>> = [];\r\n\t\t\tconst rsDiv: Array<byte> = QrCode.reedSolomonComputeDivisor(blockEccLen);\r\n\t\t\tfor (let i = 0, k = 0; i < numBlocks; i++) {\r\n\t\t\t\tlet dat: Array<byte> = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\r\n\t\t\t\tk += dat.length;\r\n\t\t\t\tconst ecc: Array<byte> = QrCode.reedSolomonComputeRemainder(dat, rsDiv);\r\n\t\t\t\tif (i < numShortBlocks)\r\n\t\t\t\t\tdat.push(0);\r\n\t\t\t\tblocks.push(dat.concat(ecc));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Interleave (not concatenate) the bytes from every block into a single sequence\r\n\t\t\tlet result: Array<byte> = [];\r\n\t\t\tfor (let i = 0; i < blocks[0].length; i++) {\r\n\t\t\t\tblocks.forEach((block, j) => {\r\n\t\t\t\t\t// Skip the padding byte in short blocks\r\n\t\t\t\t\tif (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\r\n\t\t\t\t\t\tresult.push(block[i]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tassert(result.length == rawCodewords);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Draws the given sequence of 8-bit codewords (data and error correction) onto the entire\r\n\t\t// data area of this QR Code. Function modules need to be marked off before this is called.\r\n\t\tprivate drawCodewords(data: Readonly<Array<byte>>): void {\r\n\t\t\tif (data.length != Math.floor(QrCode.getNumRawDataModules(this.version) / 8))\r\n\t\t\t\tthrow \"Invalid argument\";\r\n\t\t\tlet i: int = 0;  // Bit index into the data\r\n\t\t\t// Do the funny zigzag scan\r\n\t\t\tfor (let right = this.size - 1; right >= 1; right -= 2) {  // Index of right column in each column pair\r\n\t\t\t\tif (right == 6)\r\n\t\t\t\t\tright = 5;\r\n\t\t\t\tfor (let vert = 0; vert < this.size; vert++) {  // Vertical counter\r\n\t\t\t\t\tfor (let j = 0; j < 2; j++) {\r\n\t\t\t\t\t\tconst x: int = right - j;  // Actual x coordinate\r\n\t\t\t\t\t\tconst upward: boolean = ((right + 1) & 2) == 0;\r\n\t\t\t\t\t\tconst y: int = upward ? this.size - 1 - vert : vert;  // Actual y coordinate\r\n\t\t\t\t\t\tif (!this.isFunction[y][x] && i < data.length * 8) {\r\n\t\t\t\t\t\t\tthis.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\r\n\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// If this QR Code has any remainder bits (0 to 7), they were assigned as\r\n\t\t\t\t\t\t// 0/false/light by the constructor and are left unchanged by this method\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tassert(i == data.length * 8);\r\n\t\t}\r\n\r\n\t\tprivate applyMask(mask: int): void {\r\n\t\t\tif (mask < 0 || mask > 7)\r\n\t\t\t\tthrow \"Mask value out of range\";\r\n\t\t\tfor (let y = 0; y < this.size; y++) {\r\n\t\t\t\tfor (let x = 0; x < this.size; x++) {\r\n\t\t\t\t\tlet invert: boolean;\r\n\t\t\t\t\tswitch (mask) {\r\n\t\t\t\t\t\tcase 0:  invert = (x + y) % 2 == 0;                                  break;\r\n\t\t\t\t\t\tcase 1:  invert = y % 2 == 0;                                        break;\r\n\t\t\t\t\t\tcase 2:  invert = x % 3 == 0;                                        break;\r\n\t\t\t\t\t\tcase 3:  invert = (x + y) % 3 == 0;                                  break;\r\n\t\t\t\t\t\tcase 4:  invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;  break;\r\n\t\t\t\t\t\tcase 5:  invert = x * y % 2 + x * y % 3 == 0;                        break;\r\n\t\t\t\t\t\tcase 6:  invert = (x * y % 2 + x * y % 3) % 2 == 0;                  break;\r\n\t\t\t\t\t\tcase 7:  invert = ((x + y) % 2 + x * y % 3) % 2 == 0;                break;\r\n\t\t\t\t\t\tdefault:  throw \"Unreachable\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.isFunction[y][x] && invert)\r\n\t\t\t\t\t\tthis.modules[y][x] = !this.modules[y][x];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Calculates and returns the penalty score based on state of this QR Code's current modules.\r\n\t\t// This is used by the automatic mask choice algorithm to find the mask pattern that yields the lowest score.\r\n\t\tprivate getPenaltyScore(): int {\r\n\t\t\tlet result: int = 0;\r\n\t\t\t\r\n\t\t\t// Adjacent modules in row having same color, and finder-like patterns\r\n\t\t\tfor (let y = 0; y < this.size; y++) {\r\n\t\t\t\tlet runColor = false;\r\n\t\t\t\tlet runX = 0;\r\n\t\t\t\tlet runHistory = [0,0,0,0,0,0,0];\r\n\t\t\t\tfor (let x = 0; x < this.size; x++) {\r\n\t\t\t\t\tif (this.modules[y][x] == runColor) {\r\n\t\t\t\t\t\trunX++;\r\n\t\t\t\t\t\tif (runX == 5)\r\n\t\t\t\t\t\t\tresult += QrCode.PENALTY_N1;\r\n\t\t\t\t\t\telse if (runX > 5)\r\n\t\t\t\t\t\t\tresult++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.finderPenaltyAddHistory(runX, runHistory);\r\n\t\t\t\t\t\tif (!runColor)\r\n\t\t\t\t\t\t\tresult += this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\r\n\t\t\t\t\t\trunColor = this.modules[y][x];\r\n\t\t\t\t\t\trunX = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresult += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * QrCode.PENALTY_N3;\r\n\t\t\t}\r\n\t\t\t// Adjacent modules in column having same color, and finder-like patterns\r\n\t\t\tfor (let x = 0; x < this.size; x++) {\r\n\t\t\t\tlet runColor = false;\r\n\t\t\t\tlet runY = 0;\r\n\t\t\t\tlet runHistory = [0,0,0,0,0,0,0];\r\n\t\t\t\tfor (let y = 0; y < this.size; y++) {\r\n\t\t\t\t\tif (this.modules[y][x] == runColor) {\r\n\t\t\t\t\t\trunY++;\r\n\t\t\t\t\t\tif (runY == 5)\r\n\t\t\t\t\t\t\tresult += QrCode.PENALTY_N1;\r\n\t\t\t\t\t\telse if (runY > 5)\r\n\t\t\t\t\t\t\tresult++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.finderPenaltyAddHistory(runY, runHistory);\r\n\t\t\t\t\t\tif (!runColor)\r\n\t\t\t\t\t\t\tresult += this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\r\n\t\t\t\t\t\trunColor = this.modules[y][x];\r\n\t\t\t\t\t\trunY = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresult += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * QrCode.PENALTY_N3;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// 2*2 blocks of modules having same color\r\n\t\t\tfor (let y = 0; y < this.size - 1; y++) {\r\n\t\t\t\tfor (let x = 0; x < this.size - 1; x++) {\r\n\t\t\t\t\tconst color: boolean = this.modules[y][x];\r\n\t\t\t\t\tif (  color == this.modules[y][x + 1] &&\r\n\t\t\t\t\t      color == this.modules[y + 1][x] &&\r\n\t\t\t\t\t      color == this.modules[y + 1][x + 1])\r\n\t\t\t\t\t\tresult += QrCode.PENALTY_N2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Balance of dark and light modules\r\n\t\t\tlet dark: int = 0;\r\n\t\t\tfor (const row of this.modules)\r\n\t\t\t\tdark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\r\n\t\t\tconst total: int = this.size * this.size;  // Note that size is odd, so dark/total != 1/2\r\n\t\t\t// Compute the smallest integer k >= 0 such that (45-5k)% <= dark/total <= (55+5k)%\r\n\t\t\tconst k: int = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\r\n\t\t\tassert(0 <= k && k <= 9);\r\n\t\t\tresult += k * QrCode.PENALTY_N4;\r\n\t\t\tassert(0 <= result && result <= 2568888);  // Non-tight upper bound based on default values of PENALTY_N1, ..., N4\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tprivate getAlignmentPatternPositions(): Array<int> {\r\n\t\t\tif (this.version == 1)\r\n\t\t\t\treturn [];\r\n\t\t\telse {\r\n\t\t\t\tconst numAlign: int = Math.floor(this.version / 7) + 2;\r\n\t\t\t\tconst step: int = (this.version == 32) ? 26 :\r\n\t\t\t\t\tMath.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\r\n\t\t\t\tlet result: Array<int> = [6];\r\n\t\t\t\tfor (let pos = this.size - 7; result.length < numAlign; pos -= step)\r\n\t\t\t\t\tresult.splice(1, 0, pos);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate static getNumRawDataModules(ver: int): int {\r\n\t\t\tif (ver < QrCode.MIN_VERSION || ver > QrCode.MAX_VERSION)\r\n\t\t\t\tthrow \"Version number out of range\";\r\n\t\t\tlet result: int = (16 * ver + 128) * ver + 64;\r\n\t\t\tif (ver >= 2) {\r\n\t\t\t\tconst numAlign: int = Math.floor(ver / 7) + 2;\r\n\t\t\t\tresult -= (25 * numAlign - 10) * numAlign - 55;\r\n\t\t\t\tif (ver >= 7)\r\n\t\t\t\t\tresult -= 36;\r\n\t\t\t}\r\n\t\t\tassert(208 <= result && result <= 29648);\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tprivate static getNumDataCodewords(ver: int, ecl: QrCode.Ecc): int {\r\n\t\t\treturn Math.floor(QrCode.getNumRawDataModules(ver) / 8) -\r\n\t\t\t\tQrCode.ECC_CODEWORDS_PER_BLOCK    [ecl.ordinal][ver] *\r\n\t\t\t\tQrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Returns a Reed-Solomon ECC generator polynomial for the given degree. This could be\r\n\t\t// implemented as a lookup table over all possible parameter values, instead of as an algorithm.\r\n\t\tprivate static reedSolomonComputeDivisor(degree: int): Array<byte> {\r\n\t\t\tif (degree < 1 || degree > 255)\r\n\t\t\t\tthrow \"Degree out of range\";\r\n\t\t\t// Polynomial coefficients are stored from highest to lowest power, excluding the leading term which is always 1.\r\n\t\t\t// For example the polynomial x^3 + 255x^2 + 8x + 93 is stored as the uint8 array [255, 8, 93].\r\n\t\t\tlet result: Array<byte> = [];\r\n\t\t\tfor (let i = 0; i < degree - 1; i++)\r\n\t\t\t\tresult.push(0);\r\n\t\t\tresult.push(1);  // Start off with the monomial x^0\r\n\r\n\t\t\tlet root = 1;\r\n\t\t\tfor (let i = 0; i < degree; i++) {\r\n\t\t\t\t// Multiply the current product by (x - r^i)\r\n\t\t\t\tfor (let j = 0; j < result.length; j++) {\r\n\t\t\t\t\tresult[j] = QrCode.reedSolomonMultiply(result[j], root);\r\n\t\t\t\t\tif (j + 1 < result.length)\r\n\t\t\t\t\t\tresult[j] ^= result[j + 1];\r\n\t\t\t\t}\r\n\t\t\t\troot = QrCode.reedSolomonMultiply(root, 0x02);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Returns the Reed-Solomon error correction codeword for the given data and divisor polynomials.\r\n\t\tprivate static reedSolomonComputeRemainder(data: Readonly<Array<byte>>, divisor: Readonly<Array<byte>>): Array<byte> {\r\n\t\t\tlet result: Array<byte> = divisor.map(_ => 0);\r\n\t\t\tfor (const b of data) {  // Polynomial division\r\n\t\t\t\tconst factor: byte = b ^ (result.shift() as byte);\r\n\t\t\t\tresult.push(0);\r\n\t\t\t\tdivisor.forEach((coef, i) =>\r\n\t\t\t\t\tresult[i] ^= QrCode.reedSolomonMultiply(coef, factor));\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tprivate static reedSolomonMultiply(x: byte, y: byte): byte {\r\n\t\t\tif (x >>> 8 != 0 || y >>> 8 != 0)\r\n\t\t\t\tthrow \"Byte out of range\";\r\n\t\t\t// Russian peasant multiplication\r\n\t\t\tlet z: int = 0;\r\n\t\t\tfor (let i = 7; i >= 0; i--) {\r\n\t\t\t\tz = (z << 1) ^ ((z >>> 7) * 0x11D);\r\n\t\t\t\tz ^= ((y >>> i) & 1) * x;\r\n\t\t\t}\r\n\t\t\tassert(z >>> 8 == 0);\r\n\t\t\treturn z as byte;\r\n\t\t}\r\n\r\n\t\tprivate finderPenaltyCountPatterns(runHistory: Readonly<Array<int>>): int {\r\n\t\t\tconst n: int = runHistory[1];\r\n\t\t\tassert(n <= this.size * 3);\r\n\t\t\tconst core: boolean = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\r\n\t\t\treturn (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0)\r\n\t\t\t     + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Must be called at the end of a line (row or column) of modules. A helper function for getPenaltyScore().\r\n\t\tprivate finderPenaltyTerminateAndCount(currentRunColor: boolean, currentRunLength: int, runHistory: Array<int>): int {\r\n\t\t\tif (currentRunColor) {  // Terminate dark run\r\n\t\t\t\tthis.finderPenaltyAddHistory(currentRunLength, runHistory);\r\n\t\t\t\tcurrentRunLength = 0;\r\n\t\t\t}\r\n\t\t\tcurrentRunLength += this.size;  // Add light border to final run\r\n\t\t\tthis.finderPenaltyAddHistory(currentRunLength, runHistory);\r\n\t\t\treturn this.finderPenaltyCountPatterns(runHistory);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Pushes the given value to the front and drops the last value. A helper function for getPenaltyScore().\r\n\t\tprivate finderPenaltyAddHistory(currentRunLength: int, runHistory: Array<int>): void {\r\n\t\t\tif (runHistory[0] == 0)\r\n\t\t\t\tcurrentRunLength += this.size;  // Add light border to initial run\r\n\t\t\trunHistory.pop();\r\n\t\t\trunHistory.unshift(currentRunLength);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t/*-- Constants and tables --*/\r\n\t\t\r\n\t\t// The minimum version number supported in the QR Code Model 2 standard.\r\n\t\tpublic static readonly MIN_VERSION: int =  1;\r\n\t\t// The maximum version number supported in the QR Code Model 2 standard.\r\n\t\tpublic static readonly MAX_VERSION: int = 40;\r\n\t\t\r\n\t\t// For use in getPenaltyScore(), when evaluating which mask is best.\r\n\t\tprivate static readonly PENALTY_N1: int =  3;\r\n\t\tprivate static readonly PENALTY_N2: int =  3;\r\n\t\tprivate static readonly PENALTY_N3: int = 40;\r\n\t\tprivate static readonly PENALTY_N4: int = 10;\r\n\t\t\r\n\t\tprivate static readonly ECC_CODEWORDS_PER_BLOCK: Array<Array<int>> = [\r\n\t\t\t// Version: (note that index 0 is for padding, and is set to an illegal value)\r\n\t\t\t//0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\r\n\t\t\t[-1,  7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],  // Low\r\n\t\t\t[-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],  // Medium\r\n\t\t\t[-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],  // Quartile\r\n\t\t\t[-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],  // High\r\n\t\t];\r\n\t\t\r\n\t\tprivate static readonly NUM_ERROR_CORRECTION_BLOCKS: Array<Array<int>> = [\r\n\t\t\t// Version: (note that index 0 is for padding, and is set to an illegal value)\r\n\t\t\t//0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\r\n\t\t\t[-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4,  4,  4,  4,  4,  6,  6,  6,  6,  7,  8,  8,  9,  9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],  // Low\r\n\t\t\t[-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5,  5,  8,  9,  9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],  // Medium\r\n\t\t\t[-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8,  8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],  // Quartile\r\n\t\t\t[-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81],  // High\r\n\t\t];\r\n\t\t\r\n\t}\r\n\r\n\tfunction appendBits(val: int, len: int, bb: Array<bit>): void {\r\n\t\tif (len < 0 || len > 31 || val >>> len != 0)\r\n\t\t\tthrow \"Value out of range\";\r\n\t\tfor (let i = len - 1; i >= 0; i--)  // Append bit by bit\r\n\t\t\tbb.push((val >>> i) & 1);\r\n\t}\r\n\t\r\n\t\r\n\t// Returns true iff the i'th bit of x is set to 1.\r\n\tfunction getBit(x: int, i: int): boolean {\r\n\t\treturn ((x >>> i) & 1) != 0;\r\n\t}\r\n\t\r\n\t\r\n\t// Throws an exception if the given condition is false.\r\n\tfunction assert(cond: boolean): void {\r\n\t\tif (!cond)\r\n\t\t\tthrow \"Assertion error\";\r\n\t}\r\n\r\n\texport class QrSegment {\r\n\r\n\t\tpublic static makeBytes(data: Readonly<Array<byte>>): QrSegment {\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tfor (const b of data)\r\n\t\t\t\tappendBits(b, 8, bb);\r\n\t\t\treturn new QrSegment(QrSegment.Mode.BYTE, data.length, bb);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Returns a segment representing the given string of decimal digits encoded in numeric mode.\r\n\t\tpublic static makeNumeric(digits: string): QrSegment {\r\n\t\t\tif (!QrSegment.isNumeric(digits))\r\n\t\t\t\tthrow \"String contains non-numeric characters\";\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tfor (let i = 0; i < digits.length; ) {  // Consume up to 3 digits per iteration\r\n\t\t\t\tconst n: int = Math.min(digits.length - i, 3);\r\n\t\t\t\tappendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\r\n\t\t\t\ti += n;\r\n\t\t\t}\r\n\t\t\treturn new QrSegment(QrSegment.Mode.NUMERIC, digits.length, bb);\r\n\t\t}\r\n\r\n\t\tpublic static makeAlphanumeric(text: string): QrSegment {\r\n\t\t\tif (!QrSegment.isAlphanumeric(text))\r\n\t\t\t\tthrow \"String contains unencodable characters in alphanumeric mode\";\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tlet i: int;\r\n\t\t\tfor (i = 0; i + 2 <= text.length; i += 2) {  // Process groups of 2\r\n\t\t\t\tlet temp: int = QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\r\n\t\t\t\ttemp += QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\r\n\t\t\t\tappendBits(temp, 11, bb);\r\n\t\t\t}\r\n\t\t\tif (i < text.length)  // 1 character remaining\r\n\t\t\t\tappendBits(QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\r\n\t\t\treturn new QrSegment(QrSegment.Mode.ALPHANUMERIC, text.length, bb);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Returns a new mutable list of zero or more segments to represent the given Unicode text string.\r\n\t\t// The result may use various segment modes and switch modes to optimize the length of the bit stream.\r\n\t\tpublic static makeSegments(text: string): Array<QrSegment> {\r\n\t\t\t// Select the most efficient segment encoding automatically\r\n\t\t\tif (text == \"\")\r\n\t\t\t\treturn [];\r\n\t\t\telse if (QrSegment.isNumeric(text))\r\n\t\t\t\treturn [QrSegment.makeNumeric(text)];\r\n\t\t\telse if (QrSegment.isAlphanumeric(text))\r\n\t\t\t\treturn [QrSegment.makeAlphanumeric(text)];\r\n\t\t\telse\r\n\t\t\t\treturn [QrSegment.makeBytes(QrSegment.toUtf8ByteArray(text))];\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Returns a segment representing an Extended Channel Interpretation\r\n\t\t// (ECI) designator with the given assignment value.\r\n\t\tpublic static makeEci(assignVal: int): QrSegment {\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tif (assignVal < 0)\r\n\t\t\t\tthrow \"ECI assignment value out of range\";\r\n\t\t\telse if (assignVal < (1 << 7))\r\n\t\t\t\tappendBits(assignVal, 8, bb);\r\n\t\t\telse if (assignVal < (1 << 14)) {\r\n\t\t\t\tappendBits(0b10, 2, bb);\r\n\t\t\t\tappendBits(assignVal, 14, bb);\r\n\t\t\t} else if (assignVal < 1000000) {\r\n\t\t\t\tappendBits(0b110, 3, bb);\r\n\t\t\t\tappendBits(assignVal, 21, bb);\r\n\t\t\t} else\r\n\t\t\t\tthrow \"ECI assignment value out of range\";\r\n\t\t\treturn new QrSegment(QrSegment.Mode.ECI, 0, bb);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Tests whether the given string can be encoded as a segment in numeric mode.\r\n\t\t// A string is encodable iff each character is in the range 0 to 9.\r\n\t\tpublic static isNumeric(text: string): boolean {\r\n\t\t\treturn QrSegment.NUMERIC_REGEX.test(text);\r\n\t\t}\r\n\r\n\t\tpublic static isAlphanumeric(text: string): boolean {\r\n\t\t\treturn QrSegment.ALPHANUMERIC_REGEX.test(text);\r\n\t\t}\r\n\r\n\t\tpublic constructor(\r\n\t\t\t\t// The mode indicator of this segment.\r\n\t\t\t\tpublic readonly mode: QrSegment.Mode,\r\n\r\n\t\t\t\tpublic readonly numChars: int,\r\n\t\t\t\t\r\n\t\t\t\t// The data bits of this segment. Accessed through getData().\r\n\t\t\t\tprivate readonly bitData: Array<bit>) {\r\n\t\t\t\r\n\t\t\tif (numChars < 0)\r\n\t\t\t\tthrow \"Invalid argument\";\r\n\t\t\tthis.bitData = bitData.slice();  // Make defensive copy\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t/*-- Methods --*/\r\n\t\t\r\n\t\t// Returns a new copy of the data bits of this segment.\r\n\t\tpublic getData(): Array<bit> {\r\n\t\t\treturn this.bitData.slice();  // Make defensive copy\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// (Package-private) Calculates and returns the number of bits needed to encode the given segments at\r\n\t\t// the given version. The result is infinity if a segment has too many characters to fit its length field.\r\n\t\tpublic static getTotalBits(segs: Readonly<Array<QrSegment>>, version: int): number {\r\n\t\t\tlet result: number = 0;\r\n\t\t\tfor (const seg of segs) {\r\n\t\t\t\tconst ccbits: int = seg.mode.numCharCountBits(version);\r\n\t\t\t\tif (seg.numChars >= (1 << ccbits))\r\n\t\t\t\t\treturn Infinity;  // The segment's length doesn't fit the field's bit width\r\n\t\t\t\tresult += 4 + ccbits + seg.bitData.length;\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Returns a new array of bytes representing the given string encoded in UTF-8.\r\n\t\tprivate static toUtf8ByteArray(str: string): Array<byte> {\r\n\t\t\tstr = encodeURI(str);\r\n\t\t\tlet result: Array<byte> = [];\r\n\t\t\tfor (let i = 0; i < str.length; i++) {\r\n\t\t\t\tif (str.charAt(i) != \"%\")\r\n\t\t\t\t\tresult.push(str.charCodeAt(i));\r\n\t\t\t\telse {\r\n\t\t\t\t\tresult.push(parseInt(str.substr(i + 1, 2), 16));\r\n\t\t\t\t\ti += 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t/*-- Constants --*/\r\n\t\t\r\n\t\t// Describes precisely all strings that are encodable in numeric mode.\r\n\t\tprivate static readonly NUMERIC_REGEX: RegExp = /^[0-9]*$/;\r\n\t\t\r\n\t\t// Describes precisely all strings that are encodable in alphanumeric mode.\r\n\t\tprivate static readonly ALPHANUMERIC_REGEX: RegExp = /^[A-Z0-9 $%*+.\\/:-]*$/;\r\n\t\t\r\n\t\t// The set of all legal characters in alphanumeric mode,\r\n\t\t// where each character value maps to the index in the string.\r\n\t\tprivate static readonly ALPHANUMERIC_CHARSET: string = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\nnamespace qrcodegen.QrCode {\r\n\t\r\n\ttype int = number;\r\n\r\n\texport class Ecc {\r\n\r\n\t\tpublic static readonly LOW      = new Ecc(0, 1);  // The QR Code can tolerate about  7% erroneous codewords\r\n\t\tpublic static readonly MEDIUM   = new Ecc(1, 0);  // The QR Code can tolerate about 15% erroneous codewords\r\n\t\tpublic static readonly QUARTILE = new Ecc(2, 3);  // The QR Code can tolerate about 25% erroneous codewords\r\n\t\tpublic static readonly HIGH     = new Ecc(3, 2);  // The QR Code can tolerate about 30% erroneous codewords\r\n\r\n\t\tprivate constructor(\r\n\t\t\t// In the range 0 to 3 (unsigned 2-bit integer).\r\n\t\t\tpublic readonly ordinal: int,\r\n\t\t\t// (Package-private) In the range 0 to 3 (unsigned 2-bit integer).\r\n\t\t\tpublic readonly formatBits: int) {}\r\n\t\t\r\n\t}\r\n}\r\n\r\nnamespace qrcodegen.QrSegment {\r\n\t\r\n\ttype int = number;\r\n\r\n\texport class Mode {\r\n\r\n\t\tpublic static readonly NUMERIC      = new Mode(0x1, [10, 12, 14]);\r\n\t\tpublic static readonly ALPHANUMERIC = new Mode(0x2, [ 9, 11, 13]);\r\n\t\tpublic static readonly BYTE         = new Mode(0x4, [ 8, 16, 16]);\r\n\t\tpublic static readonly KANJI        = new Mode(0x8, [ 8, 10, 12]);\r\n\t\tpublic static readonly ECI          = new Mode(0x7, [ 0,  0,  0]);\r\n\r\n\t\tprivate constructor(\r\n\t\t\t// The mode indicator bits, which is a uint4 value (range 0 to 15).\r\n\t\t\tpublic readonly modeBits: int,\r\n\t\t\t// Number of character count bits for three different version ranges.\r\n\t\t\tprivate readonly numBitsCharCount: [int,int,int]) {}\r\n\t\t\r\n\r\n\t\tpublic numCharCountBits(ver: int): int {\r\n\t\t\treturn this.numBitsCharCount[Math.floor((ver + 7) / 17)];\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\nfunction write(buffer, offs,a1=undefined,a2=undefined,a3=undefined,a4=undefined,a5=undefined) {\r\n\t\tlet args=[];\r\n        args.push(buffer);\r\n        args.push(offs);\r\n        if(a1)\r\n            args.push(a1);\r\n        if(a2)\r\n            args.push(a2);\r\n        if(a3)\r\n            args.push(a3);\r\n        if(a4)\r\n            args.push(a4);\r\n        if(a5)\r\n            args.push(a5);\r\n        for (var i = 2; i < args.length; i++) {\r\n\t\t\tfor (var j = 0; j < args[i].length; j++) {\r\n\t\t\t\tbuffer[offs++] = args[i].charAt(j);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction byte2(w) {\r\n\t\treturn String.fromCharCode((w >> 8) & 255, w & 255);\r\n\t}\r\n\r\n\tfunction byte4(w) {\r\n\t\treturn String.fromCharCode((w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w & 255);\r\n\t}\r\n\r\n\tfunction byte2lsb(w) {\r\n\t\treturn String.fromCharCode(w & 255, (w >> 8) & 255);\r\n\t}\r\n\r\n\tlet PNGlib = function(width,height,depth) {\r\n\r\n\t\tthis.width   = width;\r\n\t\tthis.height  = height;\r\n\t\tthis.depth   = depth;\r\n\r\n\t\t// pixel data and row filter identifier size\r\n\t\tthis.pix_size = height * (width + 1);\r\n\r\n\t\t// deflate header, pix_size, block headers, adler32 checksum\r\n\t\tthis.data_size = 2 + this.pix_size + 5 * Math.floor((0xfffe + this.pix_size) / 0xffff) + 4;\r\n\r\n\t\t// offsets and sizes of Png chunks\r\n\t\tthis.ihdr_offs = 0;\t\t\t\t\t\t\t\t\t// IHDR offset and size\r\n\t\tthis.ihdr_size = 4 + 4 + 13 + 4;\r\n\t\tthis.plte_offs = this.ihdr_offs + this.ihdr_size;\t// PLTE offset and size\r\n\t\tthis.plte_size = 4 + 4 + 3 * depth + 4;\r\n\t\tthis.trns_offs = this.plte_offs + this.plte_size;\t// tRNS offset and size\r\n\t\tthis.trns_size = 4 + 4 + depth + 4;\r\n\t\tthis.idat_offs = this.trns_offs + this.trns_size;\t// IDAT offset and size\r\n\t\tthis.idat_size = 4 + 4 + this.data_size + 4;\r\n\t\tthis.iend_offs = this.idat_offs + this.idat_size;\t// IEND offset and size\r\n\t\tthis.iend_size = 4 + 4 + 4;\r\n\t\tthis.buffer_size  = this.iend_offs + this.iend_size;\t// total PNG size\r\n\r\n\t\tthis.buffer  = new Array();\r\n\t\tthis.palette = new Object();\r\n\t\tthis.pindex  = 0;\r\n\r\n\t\tvar _crc32 = new Array();\r\n\r\n\t\t// initialize buffer with zero bytes\r\n\t\tfor (var i = 0; i < this.buffer_size; i++) {\r\n\t\t\tthis.buffer[i] = \"\\x00\";\r\n\t\t}\r\n\r\n\t\t// initialize non-zero elements\r\n\t\twrite(this.buffer, this.ihdr_offs, byte4(this.ihdr_size - 12), 'IHDR', byte4(width), byte4(height), \"\\x08\\x03\");\r\n\t\twrite(this.buffer, this.plte_offs, byte4(this.plte_size - 12), 'PLTE');\r\n\t\twrite(this.buffer, this.trns_offs, byte4(this.trns_size - 12), 'tRNS');\r\n\t\twrite(this.buffer, this.idat_offs, byte4(this.idat_size - 12), 'IDAT');\r\n\t\twrite(this.buffer, this.iend_offs, byte4(this.iend_size - 12), 'IEND');\r\n\r\n\t\t// initialize deflate header\r\n\t\tvar header = ((8 + (7 << 4)) << 8) | (3 << 6);\r\n\t\theader+= 31 - (header % 31);\r\n\r\n\t\twrite(this.buffer, this.idat_offs + 8, byte2(header));\r\n\r\n\t\t// initialize deflate block headers\r\n\t\tfor (var i = 0; (i << 16) - 1 < this.pix_size; i++) {\r\n\t\t\tvar size, bits;\r\n\t\t\tif (i + 0xffff < this.pix_size) {\r\n\t\t\t\tsize = 0xffff;\r\n\t\t\t\tbits = \"\\x00\";\r\n\t\t\t} else {\r\n\t\t\t\tsize = this.pix_size - (i << 16) - i;\r\n\t\t\t\tbits = \"\\x01\";\r\n\t\t\t}\r\n\t\t\twrite(this.buffer, this.idat_offs + 8 + 2 + (i << 16) + (i << 2), bits, byte2lsb(size), byte2lsb(~size));\r\n\t\t}\r\n\r\n\t\t/* Create crc32 lookup table */\r\n\t\tfor (var i = 0; i < 256; i++) {\r\n\t\t\tvar c = i;\r\n\t\t\tfor (var j = 0; j < 8; j++) {\r\n\t\t\t\tif (c & 1) {\r\n\t\t\t\t\tc = -306674912 ^ ((c >> 1) & 0x7fffffff);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = (c >> 1) & 0x7fffffff;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_crc32[i] = c;\r\n\t\t}\r\n\r\n\t\t// compute the index into a png for a given pixel\r\n\t\tthis.index = function(x,y) {\r\n\t\t\tvar i = y * (this.width + 1) + x + 1;\r\n\t\t\tvar j = this.idat_offs + 8 + 2 + 5 * Math.floor((i / 0xffff) + 1) + i;\r\n\t\t\treturn j;\r\n\t\t}\r\n\r\n\t\t// convert a color and build up the palette\r\n\t\tthis.color = function(red, green, blue, alpha) {\r\n\r\n\t\t\talpha = alpha >= 0 ? alpha : 255;\r\n\t\t\tvar color = (((((alpha << 8) | red) << 8) | green) << 8) | blue;\r\n\r\n\t\t\tif (typeof this.palette[color] == \"undefined\") {\r\n\t\t\t\tif (this.pindex == this.depth) return \"\\x00\";\r\n\r\n\t\t\t\tvar ndx = this.plte_offs + 8 + 3 * this.pindex;\r\n\r\n\t\t\t\tthis.buffer[ndx + 0] = String.fromCharCode(red);\r\n\t\t\t\tthis.buffer[ndx + 1] = String.fromCharCode(green);\r\n\t\t\t\tthis.buffer[ndx + 2] = String.fromCharCode(blue);\r\n\t\t\t\tthis.buffer[this.trns_offs+8+this.pindex] = String.fromCharCode(alpha);\r\n\r\n\t\t\t\tthis.palette[color] = String.fromCharCode(this.pindex++);\r\n\t\t\t}\r\n\t\t\treturn this.palette[color];\r\n\t\t}\r\n\r\n\t\t// output a PNG string, Base64 encoded\r\n\t\tthis.getBase64 = function() {\r\n\r\n\t\t\tvar s = this.getDump();\r\n\r\n\t\t\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\t\t\tvar c1, c2, c3, e1, e2, e3, e4;\r\n\t\t\tvar l = s.length;\r\n\t\t\tvar i = 0;\r\n\t\t\tvar r = \"\";\r\n\r\n\t\t\tdo {\r\n\t\t\t\tc1 = s.charCodeAt(i);\r\n\t\t\t\te1 = c1 >> 2;\r\n\t\t\t\tc2 = s.charCodeAt(i+1);\r\n\t\t\t\te2 = ((c1 & 3) << 4) | (c2 >> 4);\r\n\t\t\t\tc3 = s.charCodeAt(i+2);\r\n\t\t\t\tif (l < i+2) { e3 = 64; } else { e3 = ((c2 & 0xf) << 2) | (c3 >> 6); }\r\n\t\t\t\tif (l < i+3) { e4 = 64; } else { e4 = c3 & 0x3f; }\r\n\t\t\t\tr+= ch.charAt(e1) + ch.charAt(e2) + ch.charAt(e3) + ch.charAt(e4);\r\n\t\t\t} while ((i+= 3) < l);\r\n\t\t\treturn r;\r\n\t\t}\r\n\r\n\t\t// output a PNG string\r\n\t\tthis.getDump = function() {\r\n\r\n\t\t\t// compute adler32 of output pixels + row filter bytes\r\n\t\t\tvar BASE = 65521; /* largest prime smaller than 65536 */\r\n\t\t\tvar NMAX = 5552;  /* NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */\r\n\t\t\tvar s1 = 1;\r\n\t\t\tvar s2 = 0;\r\n\t\t\tvar n = NMAX;\r\n\r\n\t\t\tfor (var y = 0; y < this.height; y++) {\r\n\t\t\t\tfor (var x = -1; x < this.width; x++) {\r\n\t\t\t\t\ts1+= this.buffer[this.index(x, y)].charCodeAt(0);\r\n\t\t\t\t\ts2+= s1;\r\n\t\t\t\t\tif ((n-= 1) == 0) {\r\n\t\t\t\t\t\ts1%= BASE;\r\n\t\t\t\t\t\ts2%= BASE;\r\n\t\t\t\t\t\tn = NMAX;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ts1%= BASE;\r\n\t\t\ts2%= BASE;\r\n\t\t\twrite(this.buffer, this.idat_offs + this.idat_size - 8, byte4((s2 << 16) | s1));\r\n\r\n\t\t\t// compute crc32 of the PNG chunks\r\n\t\t\tfunction crc32(png, offs, size) {\r\n\t\t\t\tvar crc = -1;\r\n\t\t\t\tfor (var i = 4; i < size-4; i += 1) {\r\n\t\t\t\t\tcrc = _crc32[(crc ^ png[offs+i].charCodeAt(0)) & 0xff] ^ ((crc >> 8) & 0x00ffffff);\r\n\t\t\t\t}\r\n\t\t\t\twrite(png, offs+size-4, byte4(crc ^ -1));\r\n\t\t\t}\r\n\r\n\t\t\tcrc32(this.buffer, this.ihdr_offs, this.ihdr_size);\r\n\t\t\tcrc32(this.buffer, this.plte_offs, this.plte_size);\r\n\t\t\tcrc32(this.buffer, this.trns_offs, this.trns_size);\r\n\t\t\tcrc32(this.buffer, this.idat_offs, this.idat_size);\r\n\t\t\tcrc32(this.buffer, this.iend_offs, this.iend_size);\r\n\r\n\t\t\t// convert PNG to string\r\n\t\t\treturn \"\\211PNG\\r\\n\\032\\n\"+this.buffer.join('');\r\n\t\t}\r\n\t}\r\nconst ecl = quick.parent.props?.level ?  qrcodegen.QrCode.Ecc[quick.parent.props.level] : qrcodegen.QrCode.Ecc.LOW;\r\nconst text: string = qrString;\r\n\t\tconst segs: Array<qrcodegen.QrSegment> = qrcodegen.QrSegment.makeSegments(text);\r\n\r\n\t\tconst qr: qrcodegen.QrCode = qrcodegen.QrCode.encodeSegments(segs, ecl);\r\n\t\t\r\ncomponents.EdtrComp_2.width=qr.size*imagesize;\r\ncomponents.EdtrComp_2.height=qr.size*imagesize;\r\nvar p = new PNGlib(qr.size*imagesize, qr.size*imagesize, 256); \r\nfor(var x=0;x<qr.size*imagesize;x++){\r\n\tfor(var y=0;y<qr.size*imagesize;y++){\r\n\t\tp.buffer[p.index(Math.floor(x), Math.floor(y))]\t\t=\tqr.getModule(Math.floor(x/imagesize), Math.floor(y/imagesize))?p.color(0xff,0xff,0xff,0xff):p.color(0,0,0,0xff);\r\n\t}\r\n}\r\ncomponents.EdtrComp_2.src=\"data:image/png;base64,\"+p.getBase64()+\"\";",
                    "TO": 1,
                    "HL": "TS"
                }
            },
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_1"
            },
            "O": {
                "cType": "child"
            }
        },
        {
            "T": "VImg",
            "P": {
                "ID": {
                    "H": "EdtrComp_2",
                    "T": "prop"
                },
                "eager": {
                    "H": "true",
                    "T": "prop"
                },
                "height": {
                    "H": "'200'",
                    "T": "prop"
                },
                "width": {
                    "H": "'200'",
                    "T": "prop"
                },
                "visible": {
                    "H": "true",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_2"
            },
            "O": {
                "cType": "slot"
            }
        }
    ],
    "cJson": [
        {
            "T": "Messaging",
            "P": {
                "ID": {
                    "H": "EdtrComp_1",
                    "T": "prop"
                },
                "externalProps": {
                    "H": "╬[]╠'size'╩╠'content'╩╠'level'╩╩╩",
                    "T": "prop"
                }
            },
            "E": {
                "PostRender": {
                    "H": "var _a, _b, _c, _d, _e;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar imagesize = ((_a = quick.parent.props) === null || _a === void 0 ? void 0 : _a.size) ? Number((_b = quick.parent.props) === null || _b === void 0 ? void 0 : _b.size) : 0;\r\nvar qrString = ((_c = quick.parent.props) === null || _c === void 0 ? void 0 : _c.content) ? String((_d = quick.parent.props) === null || _d === void 0 ? void 0 : _d.content) : '';\r\nvar qrcodegen;\r\n(function (qrcodegen) {\r\n    var QrCode = /** @class */ (function () {\r\n        /*-- Constructor (low level) and fields --*/\r\n        // Creates a new QR Code with the given version number,\r\n        // error correction level, data codeword bytes, and mask number.\r\n        // This is a low-level API that most users should not use directly.\r\n        // A mid-level API is the encodeSegments() function.\r\n        function QrCode(\r\n        // The version number of this QR Code, which is between 1 and 40 (inclusive).\r\n        // This determines the size of this barcode.\r\n        version, \r\n        // The error correction level used in this QR Code.\r\n        errorCorrectionLevel, dataCodewords, msk) {\r\n            this.version = version;\r\n            this.errorCorrectionLevel = errorCorrectionLevel;\r\n            // The modules of this QR Code (false = light, true = dark).\r\n            // Immutable after constructor finishes. Accessed through getModule().\r\n            this.modules = [];\r\n            // Indicates function modules that are not subjected to masking. Discarded when constructor finishes.\r\n            this.isFunction = [];\r\n            // Check scalar arguments\r\n            if (version < QrCode.MIN_VERSION || version > QrCode.MAX_VERSION)\r\n                throw \"Version value out of range\";\r\n            if (msk < -1 || msk > 7)\r\n                throw \"Mask value out of range\";\r\n            this.size = version * 4 + 17;\r\n            // Initialize both grids to be size*size arrays of Boolean false\r\n            var row = [];\r\n            for (var i = 0; i < this.size; i++)\r\n                row.push(false);\r\n            for (var i = 0; i < this.size; i++) {\r\n                this.modules.push(row.slice()); // Initially all light\r\n                this.isFunction.push(row.slice());\r\n            }\r\n            // Compute ECC, draw modules\r\n            this.drawFunctionPatterns();\r\n            var allCodewords = this.addEccAndInterleave(dataCodewords);\r\n            this.drawCodewords(allCodewords);\r\n            // Do masking\r\n            if (msk == -1) { // Automatically choose best mask\r\n                var minPenalty = 1000000000;\r\n                for (var i = 0; i < 8; i++) {\r\n                    this.applyMask(i);\r\n                    this.drawFormatBits(i);\r\n                    var penalty = this.getPenaltyScore();\r\n                    if (penalty < minPenalty) {\r\n                        msk = i;\r\n                        minPenalty = penalty;\r\n                    }\r\n                    this.applyMask(i); // Undoes the mask due to XOR\r\n                }\r\n            }\r\n            assert(0 <= msk && msk <= 7);\r\n            this.mask = msk;\r\n            this.applyMask(msk); // Apply the final choice of mask\r\n            this.drawFormatBits(msk); // Overwrite old format bits\r\n            this.isFunction = [];\r\n        }\r\n        QrCode.encodeText = function (text, ecl) {\r\n            var segs = qrcodegen.QrSegment.makeSegments(text);\r\n            return QrCode.encodeSegments(segs, ecl);\r\n        };\r\n        QrCode.encodeBinary = function (data, ecl) {\r\n            var seg = qrcodegen.QrSegment.makeBytes(data);\r\n            return QrCode.encodeSegments([seg], ecl);\r\n        };\r\n        QrCode.encodeSegments = function (segs, ecl, minVersion, maxVersion, mask, boostEcl) {\r\n            if (minVersion === void 0) { minVersion = 1; }\r\n            if (maxVersion === void 0) { maxVersion = 40; }\r\n            if (mask === void 0) { mask = -1; }\r\n            if (boostEcl === void 0) { boostEcl = true; }\r\n            if (!(QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= QrCode.MAX_VERSION)\r\n                || mask < -1 || mask > 7)\r\n                throw \"Invalid value\";\r\n            // Find the minimal version number to use\r\n            var version;\r\n            var dataUsedBits;\r\n            for (version = minVersion;; version++) {\r\n                var dataCapacityBits_1 = QrCode.getNumDataCodewords(version, ecl) * 8; // Number of data bits available\r\n                var usedBits = QrSegment.getTotalBits(segs, version);\r\n                if (usedBits <= dataCapacityBits_1) {\r\n                    dataUsedBits = usedBits;\r\n                    break; // This version number is found to be suitable\r\n                }\r\n                if (version >= maxVersion) // All versions in the range could not fit the given data\r\n                    throw \"Data too long\";\r\n            }\r\n            // Increase the error correction level while the data still fits in the current version number\r\n            for (var _i = 0, _a = [QrCode.Ecc.MEDIUM, QrCode.Ecc.QUARTILE, QrCode.Ecc.HIGH]; _i < _a.length; _i++) { // From low to high\r\n                var newEcl = _a[_i];\r\n                if (boostEcl && dataUsedBits <= QrCode.getNumDataCodewords(version, newEcl) * 8)\r\n                    ecl = newEcl;\r\n            }\r\n            // Concatenate all segments to create the data bit string\r\n            var bb = [];\r\n            for (var _b = 0, segs_1 = segs; _b < segs_1.length; _b++) {\r\n                var seg = segs_1[_b];\r\n                appendBits(seg.mode.modeBits, 4, bb);\r\n                appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\r\n                for (var _c = 0, _d = seg.getData(); _c < _d.length; _c++) {\r\n                    var b = _d[_c];\r\n                    bb.push(b);\r\n                }\r\n            }\r\n            assert(bb.length == dataUsedBits);\r\n            // Add terminator and pad up to a byte if applicable\r\n            var dataCapacityBits = QrCode.getNumDataCodewords(version, ecl) * 8;\r\n            assert(bb.length <= dataCapacityBits);\r\n            appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\r\n            appendBits(0, (8 - bb.length % 8) % 8, bb);\r\n            assert(bb.length % 8 == 0);\r\n            // Pad with alternating bytes until data capacity is reached\r\n            for (var padByte = 0xEC; bb.length < dataCapacityBits; padByte ^= 0xEC ^ 0x11)\r\n                appendBits(padByte, 8, bb);\r\n            // Pack bits into bytes in big endian\r\n            var dataCodewords = [];\r\n            while (dataCodewords.length * 8 < bb.length)\r\n                dataCodewords.push(0);\r\n            bb.forEach(function (b, i) {\r\n                return dataCodewords[i >>> 3] |= b << (7 - (i & 7));\r\n            });\r\n            // Create the QR Code object\r\n            return new QrCode(version, ecl, dataCodewords, mask);\r\n        };\r\n        QrCode.prototype.getModule = function (x, y) {\r\n            return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\r\n        };\r\n        QrCode.prototype.drawFunctionPatterns = function () {\r\n            // Draw horizontal and vertical timing patterns\r\n            for (var i = 0; i < this.size; i++) {\r\n                this.setFunctionModule(6, i, i % 2 == 0);\r\n                this.setFunctionModule(i, 6, i % 2 == 0);\r\n            }\r\n            // Draw 3 finder patterns (all corners except bottom right; overwrites some timing modules)\r\n            this.drawFinderPattern(3, 3);\r\n            this.drawFinderPattern(this.size - 4, 3);\r\n            this.drawFinderPattern(3, this.size - 4);\r\n            // Draw numerous alignment patterns\r\n            var alignPatPos = this.getAlignmentPatternPositions();\r\n            var numAlign = alignPatPos.length;\r\n            for (var i = 0; i < numAlign; i++) {\r\n                for (var j = 0; j < numAlign; j++) {\r\n                    // Don't draw on the three finder corners\r\n                    if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\r\n                        this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\r\n                }\r\n            }\r\n            // Draw configuration data\r\n            this.drawFormatBits(0); // Dummy mask value; overwritten later in the constructor\r\n            this.drawVersion();\r\n        };\r\n        // Draws two copies of the format bits (with its own error correction code)\r\n        // based on the given mask and this object's error correction level field.\r\n        QrCode.prototype.drawFormatBits = function (mask) {\r\n            // Calculate error correction code and pack bits\r\n            var data = this.errorCorrectionLevel.formatBits << 3 | mask; // errCorrLvl is uint2, mask is uint3\r\n            var rem = data;\r\n            for (var i = 0; i < 10; i++)\r\n                rem = (rem << 1) ^ ((rem >>> 9) * 0x537);\r\n            var bits = (data << 10 | rem) ^ 0x5412; // uint15\r\n            assert(bits >>> 15 == 0);\r\n            // Draw first copy\r\n            for (var i = 0; i <= 5; i++)\r\n                this.setFunctionModule(8, i, getBit(bits, i));\r\n            this.setFunctionModule(8, 7, getBit(bits, 6));\r\n            this.setFunctionModule(8, 8, getBit(bits, 7));\r\n            this.setFunctionModule(7, 8, getBit(bits, 8));\r\n            for (var i = 9; i < 15; i++)\r\n                this.setFunctionModule(14 - i, 8, getBit(bits, i));\r\n            // Draw second copy\r\n            for (var i = 0; i < 8; i++)\r\n                this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\r\n            for (var i = 8; i < 15; i++)\r\n                this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\r\n            this.setFunctionModule(8, this.size - 8, true); // Always dark\r\n        };\r\n        // Draws two copies of the version bits (with its own error correction code),\r\n        // based on this object's version field, iff 7 <= version <= 40.\r\n        QrCode.prototype.drawVersion = function () {\r\n            if (this.version < 7)\r\n                return;\r\n            // Calculate error correction code and pack bits\r\n            var rem = this.version; // version is uint6, in the range [7, 40]\r\n            for (var i = 0; i < 12; i++)\r\n                rem = (rem << 1) ^ ((rem >>> 11) * 0x1F25);\r\n            var bits = this.version << 12 | rem; // uint18\r\n            assert(bits >>> 18 == 0);\r\n            // Draw two copies\r\n            for (var i = 0; i < 18; i++) {\r\n                var color = getBit(bits, i);\r\n                var a = this.size - 11 + i % 3;\r\n                var b = Math.floor(i / 3);\r\n                this.setFunctionModule(a, b, color);\r\n                this.setFunctionModule(b, a, color);\r\n            }\r\n        };\r\n        // Draws a 9*9 finder pattern including the border separator,\r\n        // with the center module at (x, y). Modules can be out of bounds.\r\n        QrCode.prototype.drawFinderPattern = function (x, y) {\r\n            for (var dy = -4; dy <= 4; dy++) {\r\n                for (var dx = -4; dx <= 4; dx++) {\r\n                    var dist = Math.max(Math.abs(dx), Math.abs(dy)); // Chebyshev/infinity norm\r\n                    var xx = x + dx;\r\n                    var yy = y + dy;\r\n                    if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\r\n                        this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\r\n                }\r\n            }\r\n        };\r\n        // Draws a 5*5 alignment pattern, with the center module\r\n        // at (x, y). All modules must be in bounds.\r\n        QrCode.prototype.drawAlignmentPattern = function (x, y) {\r\n            for (var dy = -2; dy <= 2; dy++) {\r\n                for (var dx = -2; dx <= 2; dx++)\r\n                    this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\r\n            }\r\n        };\r\n        // Sets the color of a module and marks it as a function module.\r\n        // Only used by the constructor. Coordinates must be in bounds.\r\n        QrCode.prototype.setFunctionModule = function (x, y, isDark) {\r\n            this.modules[y][x] = isDark;\r\n            this.isFunction[y][x] = true;\r\n        };\r\n        QrCode.prototype.addEccAndInterleave = function (data) {\r\n            var ver = this.version;\r\n            var ecl = this.errorCorrectionLevel;\r\n            if (data.length != QrCode.getNumDataCodewords(ver, ecl))\r\n                throw \"Invalid argument\";\r\n            // Calculate parameter numbers\r\n            var numBlocks = QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\r\n            var blockEccLen = QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\r\n            var rawCodewords = Math.floor(QrCode.getNumRawDataModules(ver) / 8);\r\n            var numShortBlocks = numBlocks - rawCodewords % numBlocks;\r\n            var shortBlockLen = Math.floor(rawCodewords / numBlocks);\r\n            // Split data into blocks and append ECC to each block\r\n            var blocks = [];\r\n            var rsDiv = QrCode.reedSolomonComputeDivisor(blockEccLen);\r\n            for (var i = 0, k = 0; i < numBlocks; i++) {\r\n                var dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\r\n                k += dat.length;\r\n                var ecc = QrCode.reedSolomonComputeRemainder(dat, rsDiv);\r\n                if (i < numShortBlocks)\r\n                    dat.push(0);\r\n                blocks.push(dat.concat(ecc));\r\n            }\r\n            // Interleave (not concatenate) the bytes from every block into a single sequence\r\n            var result = [];\r\n            var _loop_1 = function (i) {\r\n                blocks.forEach(function (block, j) {\r\n                    // Skip the padding byte in short blocks\r\n                    if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\r\n                        result.push(block[i]);\r\n                });\r\n            };\r\n            for (var i = 0; i < blocks[0].length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            assert(result.length == rawCodewords);\r\n            return result;\r\n        };\r\n        // Draws the given sequence of 8-bit codewords (data and error correction) onto the entire\r\n        // data area of this QR Code. Function modules need to be marked off before this is called.\r\n        QrCode.prototype.drawCodewords = function (data) {\r\n            if (data.length != Math.floor(QrCode.getNumRawDataModules(this.version) / 8))\r\n                throw \"Invalid argument\";\r\n            var i = 0; // Bit index into the data\r\n            // Do the funny zigzag scan\r\n            for (var right = this.size - 1; right >= 1; right -= 2) { // Index of right column in each column pair\r\n                if (right == 6)\r\n                    right = 5;\r\n                for (var vert = 0; vert < this.size; vert++) { // Vertical counter\r\n                    for (var j = 0; j < 2; j++) {\r\n                        var x_1 = right - j; // Actual x coordinate\r\n                        var upward = ((right + 1) & 2) == 0;\r\n                        var y_1 = upward ? this.size - 1 - vert : vert; // Actual y coordinate\r\n                        if (!this.isFunction[y_1][x_1] && i < data.length * 8) {\r\n                            this.modules[y_1][x_1] = getBit(data[i >>> 3], 7 - (i & 7));\r\n                            i++;\r\n                        }\r\n                        // If this QR Code has any remainder bits (0 to 7), they were assigned as\r\n                        // 0/false/light by the constructor and are left unchanged by this method\r\n                    }\r\n                }\r\n            }\r\n            assert(i == data.length * 8);\r\n        };\r\n        QrCode.prototype.applyMask = function (mask) {\r\n            if (mask < 0 || mask > 7)\r\n                throw \"Mask value out of range\";\r\n            for (var y_2 = 0; y_2 < this.size; y_2++) {\r\n                for (var x_2 = 0; x_2 < this.size; x_2++) {\r\n                    var invert = void 0;\r\n                    switch (mask) {\r\n                        case 0:\r\n                            invert = (x_2 + y_2) % 2 == 0;\r\n                            break;\r\n                        case 1:\r\n                            invert = y_2 % 2 == 0;\r\n                            break;\r\n                        case 2:\r\n                            invert = x_2 % 3 == 0;\r\n                            break;\r\n                        case 3:\r\n                            invert = (x_2 + y_2) % 3 == 0;\r\n                            break;\r\n                        case 4:\r\n                            invert = (Math.floor(x_2 / 3) + Math.floor(y_2 / 2)) % 2 == 0;\r\n                            break;\r\n                        case 5:\r\n                            invert = x_2 * y_2 % 2 + x_2 * y_2 % 3 == 0;\r\n                            break;\r\n                        case 6:\r\n                            invert = (x_2 * y_2 % 2 + x_2 * y_2 % 3) % 2 == 0;\r\n                            break;\r\n                        case 7:\r\n                            invert = ((x_2 + y_2) % 2 + x_2 * y_2 % 3) % 2 == 0;\r\n                            break;\r\n                        default: throw \"Unreachable\";\r\n                    }\r\n                    if (!this.isFunction[y_2][x_2] && invert)\r\n                        this.modules[y_2][x_2] = !this.modules[y_2][x_2];\r\n                }\r\n            }\r\n        };\r\n        // Calculates and returns the penalty score based on state of this QR Code's current modules.\r\n        // This is used by the automatic mask choice algorithm to find the mask pattern that yields the lowest score.\r\n        QrCode.prototype.getPenaltyScore = function () {\r\n            var result = 0;\r\n            // Adjacent modules in row having same color, and finder-like patterns\r\n            for (var y_3 = 0; y_3 < this.size; y_3++) {\r\n                var runColor = false;\r\n                var runX = 0;\r\n                var runHistory = [0, 0, 0, 0, 0, 0, 0];\r\n                for (var x_3 = 0; x_3 < this.size; x_3++) {\r\n                    if (this.modules[y_3][x_3] == runColor) {\r\n                        runX++;\r\n                        if (runX == 5)\r\n                            result += QrCode.PENALTY_N1;\r\n                        else if (runX > 5)\r\n                            result++;\r\n                    }\r\n                    else {\r\n                        this.finderPenaltyAddHistory(runX, runHistory);\r\n                        if (!runColor)\r\n                            result += this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\r\n                        runColor = this.modules[y_3][x_3];\r\n                        runX = 1;\r\n                    }\r\n                }\r\n                result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * QrCode.PENALTY_N3;\r\n            }\r\n            // Adjacent modules in column having same color, and finder-like patterns\r\n            for (var x_4 = 0; x_4 < this.size; x_4++) {\r\n                var runColor = false;\r\n                var runY = 0;\r\n                var runHistory = [0, 0, 0, 0, 0, 0, 0];\r\n                for (var y_4 = 0; y_4 < this.size; y_4++) {\r\n                    if (this.modules[y_4][x_4] == runColor) {\r\n                        runY++;\r\n                        if (runY == 5)\r\n                            result += QrCode.PENALTY_N1;\r\n                        else if (runY > 5)\r\n                            result++;\r\n                    }\r\n                    else {\r\n                        this.finderPenaltyAddHistory(runY, runHistory);\r\n                        if (!runColor)\r\n                            result += this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\r\n                        runColor = this.modules[y_4][x_4];\r\n                        runY = 1;\r\n                    }\r\n                }\r\n                result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * QrCode.PENALTY_N3;\r\n            }\r\n            // 2*2 blocks of modules having same color\r\n            for (var y_5 = 0; y_5 < this.size - 1; y_5++) {\r\n                for (var x_5 = 0; x_5 < this.size - 1; x_5++) {\r\n                    var color = this.modules[y_5][x_5];\r\n                    if (color == this.modules[y_5][x_5 + 1] &&\r\n                        color == this.modules[y_5 + 1][x_5] &&\r\n                        color == this.modules[y_5 + 1][x_5 + 1])\r\n                        result += QrCode.PENALTY_N2;\r\n                }\r\n            }\r\n            // Balance of dark and light modules\r\n            var dark = 0;\r\n            for (var _i = 0, _a = this.modules; _i < _a.length; _i++) {\r\n                var row = _a[_i];\r\n                dark = row.reduce(function (sum, color) { return sum + (color ? 1 : 0); }, dark);\r\n            }\r\n            var total = this.size * this.size; // Note that size is odd, so dark/total != 1/2\r\n            // Compute the smallest integer k >= 0 such that (45-5k)% <= dark/total <= (55+5k)%\r\n            var k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\r\n            assert(0 <= k && k <= 9);\r\n            result += k * QrCode.PENALTY_N4;\r\n            assert(0 <= result && result <= 2568888); // Non-tight upper bound based on default values of PENALTY_N1, ..., N4\r\n            return result;\r\n        };\r\n        QrCode.prototype.getAlignmentPatternPositions = function () {\r\n            if (this.version == 1)\r\n                return [];\r\n            else {\r\n                var numAlign = Math.floor(this.version / 7) + 2;\r\n                var step = (this.version == 32) ? 26 :\r\n                    Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\r\n                var result = [6];\r\n                for (var pos = this.size - 7; result.length < numAlign; pos -= step)\r\n                    result.splice(1, 0, pos);\r\n                return result;\r\n            }\r\n        };\r\n        QrCode.getNumRawDataModules = function (ver) {\r\n            if (ver < QrCode.MIN_VERSION || ver > QrCode.MAX_VERSION)\r\n                throw \"Version number out of range\";\r\n            var result = (16 * ver + 128) * ver + 64;\r\n            if (ver >= 2) {\r\n                var numAlign = Math.floor(ver / 7) + 2;\r\n                result -= (25 * numAlign - 10) * numAlign - 55;\r\n                if (ver >= 7)\r\n                    result -= 36;\r\n            }\r\n            assert(208 <= result && result <= 29648);\r\n            return result;\r\n        };\r\n        QrCode.getNumDataCodewords = function (ver, ecl) {\r\n            return Math.floor(QrCode.getNumRawDataModules(ver) / 8) -\r\n                QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] *\r\n                    QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\r\n        };\r\n        // Returns a Reed-Solomon ECC generator polynomial for the given degree. This could be\r\n        // implemented as a lookup table over all possible parameter values, instead of as an algorithm.\r\n        QrCode.reedSolomonComputeDivisor = function (degree) {\r\n            if (degree < 1 || degree > 255)\r\n                throw \"Degree out of range\";\r\n            // Polynomial coefficients are stored from highest to lowest power, excluding the leading term which is always 1.\r\n            // For example the polynomial x^3 + 255x^2 + 8x + 93 is stored as the uint8 array [255, 8, 93].\r\n            var result = [];\r\n            for (var i = 0; i < degree - 1; i++)\r\n                result.push(0);\r\n            result.push(1); // Start off with the monomial x^0\r\n            var root = 1;\r\n            for (var i = 0; i < degree; i++) {\r\n                // Multiply the current product by (x - r^i)\r\n                for (var j = 0; j < result.length; j++) {\r\n                    result[j] = QrCode.reedSolomonMultiply(result[j], root);\r\n                    if (j + 1 < result.length)\r\n                        result[j] ^= result[j + 1];\r\n                }\r\n                root = QrCode.reedSolomonMultiply(root, 0x02);\r\n            }\r\n            return result;\r\n        };\r\n        // Returns the Reed-Solomon error correction codeword for the given data and divisor polynomials.\r\n        QrCode.reedSolomonComputeRemainder = function (data, divisor) {\r\n            var result = divisor.map(function (_) { return 0; });\r\n            var _loop_2 = function (b) {\r\n                var factor = b ^ result.shift();\r\n                result.push(0);\r\n                divisor.forEach(function (coef, i) {\r\n                    return result[i] ^= QrCode.reedSolomonMultiply(coef, factor);\r\n                });\r\n            };\r\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\r\n                var b = data_1[_i];\r\n                _loop_2(b);\r\n            }\r\n            return result;\r\n        };\r\n        QrCode.reedSolomonMultiply = function (x, y) {\r\n            if (x >>> 8 != 0 || y >>> 8 != 0)\r\n                throw \"Byte out of range\";\r\n            // Russian peasant multiplication\r\n            var z = 0;\r\n            for (var i = 7; i >= 0; i--) {\r\n                z = (z << 1) ^ ((z >>> 7) * 0x11D);\r\n                z ^= ((y >>> i) & 1) * x;\r\n            }\r\n            assert(z >>> 8 == 0);\r\n            return z;\r\n        };\r\n        QrCode.prototype.finderPenaltyCountPatterns = function (runHistory) {\r\n            var n = runHistory[1];\r\n            assert(n <= this.size * 3);\r\n            var core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\r\n            return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0)\r\n                + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\r\n        };\r\n        // Must be called at the end of a line (row or column) of modules. A helper function for getPenaltyScore().\r\n        QrCode.prototype.finderPenaltyTerminateAndCount = function (currentRunColor, currentRunLength, runHistory) {\r\n            if (currentRunColor) { // Terminate dark run\r\n                this.finderPenaltyAddHistory(currentRunLength, runHistory);\r\n                currentRunLength = 0;\r\n            }\r\n            currentRunLength += this.size; // Add light border to final run\r\n            this.finderPenaltyAddHistory(currentRunLength, runHistory);\r\n            return this.finderPenaltyCountPatterns(runHistory);\r\n        };\r\n        // Pushes the given value to the front and drops the last value. A helper function for getPenaltyScore().\r\n        QrCode.prototype.finderPenaltyAddHistory = function (currentRunLength, runHistory) {\r\n            if (runHistory[0] == 0)\r\n                currentRunLength += this.size; // Add light border to initial run\r\n            runHistory.pop();\r\n            runHistory.unshift(currentRunLength);\r\n        };\r\n        /*-- Constants and tables --*/\r\n        // The minimum version number supported in the QR Code Model 2 standard.\r\n        QrCode.MIN_VERSION = 1;\r\n        // The maximum version number supported in the QR Code Model 2 standard.\r\n        QrCode.MAX_VERSION = 40;\r\n        // For use in getPenaltyScore(), when evaluating which mask is best.\r\n        QrCode.PENALTY_N1 = 3;\r\n        QrCode.PENALTY_N2 = 3;\r\n        QrCode.PENALTY_N3 = 40;\r\n        QrCode.PENALTY_N4 = 10;\r\n        QrCode.ECC_CODEWORDS_PER_BLOCK = [\r\n            // Version: (note that index 0 is for padding, and is set to an illegal value)\r\n            //0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\r\n            [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\r\n            [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\r\n            [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\r\n            [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\r\n        ];\r\n        QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\r\n            // Version: (note that index 0 is for padding, and is set to an illegal value)\r\n            //0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\r\n            [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\r\n            [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\r\n            [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\r\n            [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81],\r\n        ];\r\n        return QrCode;\r\n    }());\r\n    qrcodegen.QrCode = QrCode;\r\n    function appendBits(val, len, bb) {\r\n        if (len < 0 || len > 31 || val >>> len != 0)\r\n            throw \"Value out of range\";\r\n        for (var i = len - 1; i >= 0; i--) // Append bit by bit\r\n            bb.push((val >>> i) & 1);\r\n    }\r\n    // Returns true iff the i'th bit of x is set to 1.\r\n    function getBit(x, i) {\r\n        return ((x >>> i) & 1) != 0;\r\n    }\r\n    // Throws an exception if the given condition is false.\r\n    function assert(cond) {\r\n        if (!cond)\r\n            throw \"Assertion error\";\r\n    }\r\n    var QrSegment = /** @class */ (function () {\r\n        function QrSegment(\r\n        // The mode indicator of this segment.\r\n        mode, numChars, \r\n        // The data bits of this segment. Accessed through getData().\r\n        bitData) {\r\n            this.mode = mode;\r\n            this.numChars = numChars;\r\n            this.bitData = bitData;\r\n            if (numChars < 0)\r\n                throw \"Invalid argument\";\r\n            this.bitData = bitData.slice(); // Make defensive copy\r\n        }\r\n        QrSegment.makeBytes = function (data) {\r\n            var bb = [];\r\n            for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\r\n                var b = data_2[_i];\r\n                appendBits(b, 8, bb);\r\n            }\r\n            return new QrSegment(QrSegment.Mode.BYTE, data.length, bb);\r\n        };\r\n        // Returns a segment representing the given string of decimal digits encoded in numeric mode.\r\n        QrSegment.makeNumeric = function (digits) {\r\n            if (!QrSegment.isNumeric(digits))\r\n                throw \"String contains non-numeric characters\";\r\n            var bb = [];\r\n            for (var i = 0; i < digits.length;) { // Consume up to 3 digits per iteration\r\n                var n = Math.min(digits.length - i, 3);\r\n                appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\r\n                i += n;\r\n            }\r\n            return new QrSegment(QrSegment.Mode.NUMERIC, digits.length, bb);\r\n        };\r\n        QrSegment.makeAlphanumeric = function (text) {\r\n            if (!QrSegment.isAlphanumeric(text))\r\n                throw \"String contains unencodable characters in alphanumeric mode\";\r\n            var bb = [];\r\n            var i;\r\n            for (i = 0; i + 2 <= text.length; i += 2) { // Process groups of 2\r\n                var temp = QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\r\n                temp += QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\r\n                appendBits(temp, 11, bb);\r\n            }\r\n            if (i < text.length) // 1 character remaining\r\n                appendBits(QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\r\n            return new QrSegment(QrSegment.Mode.ALPHANUMERIC, text.length, bb);\r\n        };\r\n        // Returns a new mutable list of zero or more segments to represent the given Unicode text string.\r\n        // The result may use various segment modes and switch modes to optimize the length of the bit stream.\r\n        QrSegment.makeSegments = function (text) {\r\n            // Select the most efficient segment encoding automatically\r\n            if (text == \"\")\r\n                return [];\r\n            else if (QrSegment.isNumeric(text))\r\n                return [QrSegment.makeNumeric(text)];\r\n            else if (QrSegment.isAlphanumeric(text))\r\n                return [QrSegment.makeAlphanumeric(text)];\r\n            else\r\n                return [QrSegment.makeBytes(QrSegment.toUtf8ByteArray(text))];\r\n        };\r\n        // Returns a segment representing an Extended Channel Interpretation\r\n        // (ECI) designator with the given assignment value.\r\n        QrSegment.makeEci = function (assignVal) {\r\n            var bb = [];\r\n            if (assignVal < 0)\r\n                throw \"ECI assignment value out of range\";\r\n            else if (assignVal < (1 << 7))\r\n                appendBits(assignVal, 8, bb);\r\n            else if (assignVal < (1 << 14)) {\r\n                appendBits(2, 2, bb);\r\n                appendBits(assignVal, 14, bb);\r\n            }\r\n            else if (assignVal < 1000000) {\r\n                appendBits(6, 3, bb);\r\n                appendBits(assignVal, 21, bb);\r\n            }\r\n            else\r\n                throw \"ECI assignment value out of range\";\r\n            return new QrSegment(QrSegment.Mode.ECI, 0, bb);\r\n        };\r\n        // Tests whether the given string can be encoded as a segment in numeric mode.\r\n        // A string is encodable iff each character is in the range 0 to 9.\r\n        QrSegment.isNumeric = function (text) {\r\n            return QrSegment.NUMERIC_REGEX.test(text);\r\n        };\r\n        QrSegment.isAlphanumeric = function (text) {\r\n            return QrSegment.ALPHANUMERIC_REGEX.test(text);\r\n        };\r\n        /*-- Methods --*/\r\n        // Returns a new copy of the data bits of this segment.\r\n        QrSegment.prototype.getData = function () {\r\n            return this.bitData.slice(); // Make defensive copy\r\n        };\r\n        // (Package-private) Calculates and returns the number of bits needed to encode the given segments at\r\n        // the given version. The result is infinity if a segment has too many characters to fit its length field.\r\n        QrSegment.getTotalBits = function (segs, version) {\r\n            var result = 0;\r\n            for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\r\n                var seg = segs_2[_i];\r\n                var ccbits = seg.mode.numCharCountBits(version);\r\n                if (seg.numChars >= (1 << ccbits))\r\n                    return Infinity; // The segment's length doesn't fit the field's bit width\r\n                result += 4 + ccbits + seg.bitData.length;\r\n            }\r\n            return result;\r\n        };\r\n        // Returns a new array of bytes representing the given string encoded in UTF-8.\r\n        QrSegment.toUtf8ByteArray = function (str) {\r\n            str = encodeURI(str);\r\n            var result = [];\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (str.charAt(i) != \"%\")\r\n                    result.push(str.charCodeAt(i));\r\n                else {\r\n                    result.push(parseInt(str.substr(i + 1, 2), 16));\r\n                    i += 2;\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        /*-- Constants --*/\r\n        // Describes precisely all strings that are encodable in numeric mode.\r\n        QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\r\n        // Describes precisely all strings that are encodable in alphanumeric mode.\r\n        QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\r\n        // The set of all legal characters in alphanumeric mode,\r\n        // where each character value maps to the index in the string.\r\n        QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\r\n        return QrSegment;\r\n    }());\r\n    qrcodegen.QrSegment = QrSegment;\r\n})(qrcodegen || (qrcodegen = {}));\r\n(function (qrcodegen) {\r\n    var QrCode;\r\n    (function (QrCode) {\r\n        var Ecc = /** @class */ (function () {\r\n            function Ecc(\r\n            // In the range 0 to 3 (unsigned 2-bit integer).\r\n            ordinal, \r\n            // (Package-private) In the range 0 to 3 (unsigned 2-bit integer).\r\n            formatBits) {\r\n                this.ordinal = ordinal;\r\n                this.formatBits = formatBits;\r\n            }\r\n            Ecc.LOW = new Ecc(0, 1); // The QR Code can tolerate about  7% erroneous codewords\r\n            Ecc.MEDIUM = new Ecc(1, 0); // The QR Code can tolerate about 15% erroneous codewords\r\n            Ecc.QUARTILE = new Ecc(2, 3); // The QR Code can tolerate about 25% erroneous codewords\r\n            Ecc.HIGH = new Ecc(3, 2); // The QR Code can tolerate about 30% erroneous codewords\r\n            return Ecc;\r\n        }());\r\n        QrCode.Ecc = Ecc;\r\n    })(QrCode = qrcodegen.QrCode || (qrcodegen.QrCode = {}));\r\n})(qrcodegen || (qrcodegen = {}));\r\n(function (qrcodegen) {\r\n    var QrSegment;\r\n    (function (QrSegment) {\r\n        var Mode = /** @class */ (function () {\r\n            function Mode(\r\n            // The mode indicator bits, which is a uint4 value (range 0 to 15).\r\n            modeBits, \r\n            // Number of character count bits for three different version ranges.\r\n            numBitsCharCount) {\r\n                this.modeBits = modeBits;\r\n                this.numBitsCharCount = numBitsCharCount;\r\n            }\r\n            Mode.prototype.numCharCountBits = function (ver) {\r\n                return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\r\n            };\r\n            Mode.NUMERIC = new Mode(0x1, [10, 12, 14]);\r\n            Mode.ALPHANUMERIC = new Mode(0x2, [9, 11, 13]);\r\n            Mode.BYTE = new Mode(0x4, [8, 16, 16]);\r\n            Mode.KANJI = new Mode(0x8, [8, 10, 12]);\r\n            Mode.ECI = new Mode(0x7, [0, 0, 0]);\r\n            return Mode;\r\n        }());\r\n        QrSegment.Mode = Mode;\r\n    })(QrSegment = qrcodegen.QrSegment || (qrcodegen.QrSegment = {}));\r\n})(qrcodegen || (qrcodegen = {}));\r\nfunction write(buffer, offs, a1, a2, a3, a4, a5) {\r\n    if (a1 === void 0) { a1 = undefined; }\r\n    if (a2 === void 0) { a2 = undefined; }\r\n    if (a3 === void 0) { a3 = undefined; }\r\n    if (a4 === void 0) { a4 = undefined; }\r\n    if (a5 === void 0) { a5 = undefined; }\r\n    var args = [];\r\n    args.push(buffer);\r\n    args.push(offs);\r\n    if (a1)\r\n        args.push(a1);\r\n    if (a2)\r\n        args.push(a2);\r\n    if (a3)\r\n        args.push(a3);\r\n    if (a4)\r\n        args.push(a4);\r\n    if (a5)\r\n        args.push(a5);\r\n    for (var i = 2; i < args.length; i++) {\r\n        for (var j = 0; j < args[i].length; j++) {\r\n            buffer[offs++] = args[i].charAt(j);\r\n        }\r\n    }\r\n}\r\nfunction byte2(w) {\r\n    return String.fromCharCode((w >> 8) & 255, w & 255);\r\n}\r\nfunction byte4(w) {\r\n    return String.fromCharCode((w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w & 255);\r\n}\r\nfunction byte2lsb(w) {\r\n    return String.fromCharCode(w & 255, (w >> 8) & 255);\r\n}\r\nvar PNGlib = function (width, height, depth) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.depth = depth;\r\n    // pixel data and row filter identifier size\r\n    this.pix_size = height * (width + 1);\r\n    // deflate header, pix_size, block headers, adler32 checksum\r\n    this.data_size = 2 + this.pix_size + 5 * Math.floor((0xfffe + this.pix_size) / 0xffff) + 4;\r\n    // offsets and sizes of Png chunks\r\n    this.ihdr_offs = 0; // IHDR offset and size\r\n    this.ihdr_size = 4 + 4 + 13 + 4;\r\n    this.plte_offs = this.ihdr_offs + this.ihdr_size; // PLTE offset and size\r\n    this.plte_size = 4 + 4 + 3 * depth + 4;\r\n    this.trns_offs = this.plte_offs + this.plte_size; // tRNS offset and size\r\n    this.trns_size = 4 + 4 + depth + 4;\r\n    this.idat_offs = this.trns_offs + this.trns_size; // IDAT offset and size\r\n    this.idat_size = 4 + 4 + this.data_size + 4;\r\n    this.iend_offs = this.idat_offs + this.idat_size; // IEND offset and size\r\n    this.iend_size = 4 + 4 + 4;\r\n    this.buffer_size = this.iend_offs + this.iend_size; // total PNG size\r\n    this.buffer = new Array();\r\n    this.palette = new Object();\r\n    this.pindex = 0;\r\n    var _crc32 = new Array();\r\n    // initialize buffer with zero bytes\r\n    for (var i = 0; i < this.buffer_size; i++) {\r\n        this.buffer[i] = \"\\x00\";\r\n    }\r\n    // initialize non-zero elements\r\n    write(this.buffer, this.ihdr_offs, byte4(this.ihdr_size - 12), 'IHDR', byte4(width), byte4(height), \"\\x08\\x03\");\r\n    write(this.buffer, this.plte_offs, byte4(this.plte_size - 12), 'PLTE');\r\n    write(this.buffer, this.trns_offs, byte4(this.trns_size - 12), 'tRNS');\r\n    write(this.buffer, this.idat_offs, byte4(this.idat_size - 12), 'IDAT');\r\n    write(this.buffer, this.iend_offs, byte4(this.iend_size - 12), 'IEND');\r\n    // initialize deflate header\r\n    var header = ((8 + (7 << 4)) << 8) | (3 << 6);\r\n    header += 31 - (header % 31);\r\n    write(this.buffer, this.idat_offs + 8, byte2(header));\r\n    // initialize deflate block headers\r\n    for (var i = 0; (i << 16) - 1 < this.pix_size; i++) {\r\n        var size, bits;\r\n        if (i + 0xffff < this.pix_size) {\r\n            size = 0xffff;\r\n            bits = \"\\x00\";\r\n        }\r\n        else {\r\n            size = this.pix_size - (i << 16) - i;\r\n            bits = \"\\x01\";\r\n        }\r\n        write(this.buffer, this.idat_offs + 8 + 2 + (i << 16) + (i << 2), bits, byte2lsb(size), byte2lsb(~size));\r\n    }\r\n    /* Create crc32 lookup table */\r\n    for (var i = 0; i < 256; i++) {\r\n        var c = i;\r\n        for (var j = 0; j < 8; j++) {\r\n            if (c & 1) {\r\n                c = -306674912 ^ ((c >> 1) & 0x7fffffff);\r\n            }\r\n            else {\r\n                c = (c >> 1) & 0x7fffffff;\r\n            }\r\n        }\r\n        _crc32[i] = c;\r\n    }\r\n    // compute the index into a png for a given pixel\r\n    this.index = function (x, y) {\r\n        var i = y * (this.width + 1) + x + 1;\r\n        var j = this.idat_offs + 8 + 2 + 5 * Math.floor((i / 0xffff) + 1) + i;\r\n        return j;\r\n    };\r\n    // convert a color and build up the palette\r\n    this.color = function (red, green, blue, alpha) {\r\n        alpha = alpha >= 0 ? alpha : 255;\r\n        var color = (((((alpha << 8) | red) << 8) | green) << 8) | blue;\r\n        if (typeof this.palette[color] == \"undefined\") {\r\n            if (this.pindex == this.depth)\r\n                return \"\\x00\";\r\n            var ndx = this.plte_offs + 8 + 3 * this.pindex;\r\n            this.buffer[ndx + 0] = String.fromCharCode(red);\r\n            this.buffer[ndx + 1] = String.fromCharCode(green);\r\n            this.buffer[ndx + 2] = String.fromCharCode(blue);\r\n            this.buffer[this.trns_offs + 8 + this.pindex] = String.fromCharCode(alpha);\r\n            this.palette[color] = String.fromCharCode(this.pindex++);\r\n        }\r\n        return this.palette[color];\r\n    };\r\n    // output a PNG string, Base64 encoded\r\n    this.getBase64 = function () {\r\n        var s = this.getDump();\r\n        var ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        var c1, c2, c3, e1, e2, e3, e4;\r\n        var l = s.length;\r\n        var i = 0;\r\n        var r = \"\";\r\n        do {\r\n            c1 = s.charCodeAt(i);\r\n            e1 = c1 >> 2;\r\n            c2 = s.charCodeAt(i + 1);\r\n            e2 = ((c1 & 3) << 4) | (c2 >> 4);\r\n            c3 = s.charCodeAt(i + 2);\r\n            if (l < i + 2) {\r\n                e3 = 64;\r\n            }\r\n            else {\r\n                e3 = ((c2 & 0xf) << 2) | (c3 >> 6);\r\n            }\r\n            if (l < i + 3) {\r\n                e4 = 64;\r\n            }\r\n            else {\r\n                e4 = c3 & 0x3f;\r\n            }\r\n            r += ch.charAt(e1) + ch.charAt(e2) + ch.charAt(e3) + ch.charAt(e4);\r\n        } while ((i += 3) < l);\r\n        return r;\r\n    };\r\n    // output a PNG string\r\n    this.getDump = function () {\r\n        // compute adler32 of output pixels + row filter bytes\r\n        var BASE = 65521; /* largest prime smaller than 65536 */\r\n        var NMAX = 5552; /* NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */\r\n        var s1 = 1;\r\n        var s2 = 0;\r\n        var n = NMAX;\r\n        for (var y = 0; y < this.height; y++) {\r\n            for (var x = -1; x < this.width; x++) {\r\n                s1 += this.buffer[this.index(x, y)].charCodeAt(0);\r\n                s2 += s1;\r\n                if ((n -= 1) == 0) {\r\n                    s1 %= BASE;\r\n                    s2 %= BASE;\r\n                    n = NMAX;\r\n                }\r\n            }\r\n        }\r\n        s1 %= BASE;\r\n        s2 %= BASE;\r\n        write(this.buffer, this.idat_offs + this.idat_size - 8, byte4((s2 << 16) | s1));\r\n        // compute crc32 of the PNG chunks\r\n        function crc32(png, offs, size) {\r\n            var crc = -1;\r\n            for (var i = 4; i < size - 4; i += 1) {\r\n                crc = _crc32[(crc ^ png[offs + i].charCodeAt(0)) & 0xff] ^ ((crc >> 8) & 0x00ffffff);\r\n            }\r\n            write(png, offs + size - 4, byte4(crc ^ -1));\r\n        }\r\n        crc32(this.buffer, this.ihdr_offs, this.ihdr_size);\r\n        crc32(this.buffer, this.plte_offs, this.plte_size);\r\n        crc32(this.buffer, this.trns_offs, this.trns_size);\r\n        crc32(this.buffer, this.idat_offs, this.idat_size);\r\n        crc32(this.buffer, this.iend_offs, this.iend_size);\r\n        // convert PNG to string\r\n        return \"\\211PNG\\r\\n\\032\\n\" + this.buffer.join('');\r\n    };\r\n};\r\nvar ecl = ((_e = quick.parent.props) === null || _e === void 0 ? void 0 : _e.level) ? qrcodegen.QrCode.Ecc[quick.parent.props.level] : qrcodegen.QrCode.Ecc.LOW;\r\nvar text = qrString;\r\nvar segs = qrcodegen.QrSegment.makeSegments(text);\r\nvar qr = qrcodegen.QrCode.encodeSegments(segs, ecl);\r\ncomponents.EdtrComp_2.width = qr.size * imagesize;\r\ncomponents.EdtrComp_2.height = qr.size * imagesize;\r\nvar p = new PNGlib(qr.size * imagesize, qr.size * imagesize, 256);\r\nfor (var x = 0; x < qr.size * imagesize; x++) {\r\n    for (var y = 0; y < qr.size * imagesize; y++) {\r\n        p.buffer[p.index(Math.floor(x), Math.floor(y))] = qr.getModule(Math.floor(x / imagesize), Math.floor(y / imagesize)) ? p.color(0xff, 0xff, 0xff, 0xff) : p.color(0, 0, 0, 0xff);\r\n    }\r\n}\r\ncomponents.EdtrComp_2.src = \"data:image/png;base64,\" + p.getBase64() + \"\";\r\n//# ",
                    "TO": 1,
                    "HL": "JS"
                }
            },
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_1"
            },
            "O": {
                "cType": "child",
                "compDomClasses": "newDropBorder"
            }
        },
        {
            "T": "VImg",
            "P": {
                "ID": {
                    "H": "EdtrComp_2",
                    "T": "prop"
                },
                "eager": {
                    "H": "╬true╩╩",
                    "T": "prop"
                },
                "height": {
                    "H": "╬'200'╩╩",
                    "T": "prop"
                },
                "width": {
                    "H": "╬'200'╩╩",
                    "T": "prop"
                },
                "visible": {
                    "H": "╬true╩╩",
                    "T": "prop"
                }
            },
            "E": {},
            "C": {},
            "_Editor": {
                "eID": "EdtrComp_2"
            },
            "O": {
                "cType": "slot",
                "compDomClasses": "v-image v-responsive theme--light newDropBorder"
            }
        }
    ],
    "lrids": {},
    "clrids": {}
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pjson);


/***/ }),

/***/ "../../common/qshell/src/helpers/DoryHelper.ts":
/*!*****************************************************!*\
  !*** ../../common/qshell/src/helpers/DoryHelper.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoryHelper": () => (/* binding */ DoryHelper)
/* harmony export */ });
/* harmony import */ var _dory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../dory */ "../../common/dory/index.ts");
/* harmony import */ var _shrimp_interfaces_quick_IExternalLocalizationFunc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shrimp/interfaces/quick/IExternalLocalizationFunc */ "../../common/shrimp/interfaces/quick/IExternalLocalizationFunc.ts");
/* harmony import */ var _shrimp_interfaces_quick_IRoleBaseAuthorizationFunc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shrimp/interfaces/quick/IRoleBaseAuthorizationFunc */ "../../common/shrimp/interfaces/quick/IRoleBaseAuthorizationFunc.ts");
/* harmony import */ var _shrimp_interfaces_quick_IUXManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shrimp/interfaces/quick/IUXManager */ "../../common/shrimp/interfaces/quick/IUXManager.ts");
/* harmony import */ var _interfaces_construction_CompInstanceTracker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../interfaces/construction/CompInstanceTracker */ "../../common/qshell/src/interfaces/construction/CompInstanceTracker.ts");
/* harmony import */ var _interfaces_construction_IComponentManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interfaces/construction/IComponentManager */ "../../common/qshell/src/interfaces/construction/IComponentManager.ts");
/* harmony import */ var _interfaces_construction_ICookieManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../interfaces/construction/ICookieManager */ "../../common/qshell/src/interfaces/construction/ICookieManager.ts");
/* harmony import */ var _interfaces_construction_ICryptographyManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../interfaces/construction/ICryptographyManager */ "../../common/qshell/src/interfaces/construction/ICryptographyManager.ts");
/* harmony import */ var _interfaces_construction_IGlobalMethods__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../interfaces/construction/IGlobalMethods */ "../../common/qshell/src/interfaces/construction/IGlobalMethods.ts");
/* harmony import */ var _interfaces_construction_IHostTriggerer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../interfaces/construction/IHostTriggerer */ "../../common/qshell/src/interfaces/construction/IHostTriggerer.ts");
/* harmony import */ var _interfaces_construction_ILanguageExtensions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../interfaces/construction/ILanguageExtensions */ "../../common/qshell/src/interfaces/construction/ILanguageExtensions.ts");
/* harmony import */ var _interfaces_construction_INavigationManager__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../interfaces/construction/INavigationManager */ "../../common/qshell/src/interfaces/construction/INavigationManager.ts");
/* harmony import */ var _interfaces_construction_INetworkManager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../interfaces/construction/INetworkManager */ "../../common/qshell/src/interfaces/construction/INetworkManager.ts");
/* harmony import */ var _interfaces_construction_IPlatformManager__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../interfaces/construction/IPlatformManager */ "../../common/qshell/src/interfaces/construction/IPlatformManager.ts");
/* harmony import */ var _interfaces_construction_IProcessManager__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../interfaces/construction/IProcessManager */ "../../common/qshell/src/interfaces/construction/IProcessManager.ts");
/* harmony import */ var _interfaces_construction_IQJsonRetriever__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../interfaces/construction/IQJsonRetriever */ "../../common/qshell/src/interfaces/construction/IQJsonRetriever.ts");
/* harmony import */ var _interfaces_construction_IRegionalManager__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../interfaces/construction/IRegionalManager */ "../../common/qshell/src/interfaces/construction/IRegionalManager.ts");
/* harmony import */ var _interfaces_construction_IStoreManager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../interfaces/construction/IStoreManager */ "../../common/qshell/src/interfaces/construction/IStoreManager.ts");
/* harmony import */ var _managers_shellManager__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../managers/shellManager */ "../../common/qshell/src/managers/shellManager.ts");
/* harmony import */ var _QJsonHelpers_QJsonPool__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./QJsonHelpers/QJsonPool */ "../../common/qshell/src/helpers/QJsonHelpers/QJsonPool.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




















var DoryHelper = /** @class */ (function () {
    function DoryHelper(_a) {
        var doryInstName = _a.doryInstName, context = _a.context, renderer = _a.renderer, operatorCollection = _a.operatorCollection;
        this.store = null;
        this.cookie = null;
        this.isEditor = false;
        this.contextManager = context;
        var langImpl = this.contextManager.GetItemSingle(_interfaces_construction_ILanguageExtensions__WEBPACK_IMPORTED_MODULE_10__.LanguageExtensionsContextName);
        this.shellManager = new _managers_shellManager__WEBPACK_IMPORTED_MODULE_18__.ShellManager(langImpl);
        this.Dory = this.createDoryInstance(operatorCollection, doryInstName, renderer);
    }
    DoryHelper.prototype.createDoryInstance = function (operatorCollection, doryInstName, renderer) {
        var _this = this;
        var _a;
        var self = this;
        var globalMethods = this.contextManager.GetItemSingle(_interfaces_construction_IGlobalMethods__WEBPACK_IMPORTED_MODULE_8__.GlobalMethodsContextName);
        var componentManager = this.contextManager.GetItemSingle(_interfaces_construction_IComponentManager__WEBPACK_IMPORTED_MODULE_5__.ComponentManagerContextName);
        var navigationManager = this.contextManager.GetItemSingle(_interfaces_construction_INavigationManager__WEBPACK_IMPORTED_MODULE_11__.NavigationManagerContextName);
        var qjsonRetriever = this.contextManager.GetItemSingle(_interfaces_construction_IQJsonRetriever__WEBPACK_IMPORTED_MODULE_15__.QJsonRetrieverContextName);
        var compInstTracker = this.contextManager.GetItemSingle(_interfaces_construction_CompInstanceTracker__WEBPACK_IMPORTED_MODULE_4__.CompInstanceTrackerContextName);
        var externalLocalizationFunc = this.contextManager.GetItemSingle(_shrimp_interfaces_quick_IExternalLocalizationFunc__WEBPACK_IMPORTED_MODULE_1__.ExternalLocalizationFuncContextName);
        var roleBaseAuthFunc = this.contextManager.GetItemSingle(_shrimp_interfaces_quick_IRoleBaseAuthorizationFunc__WEBPACK_IMPORTED_MODULE_2__.RoleBaseAuthorizationFuncContextName);
        var storeManager = this.contextManager.GetItemSingle(_interfaces_construction_IStoreManager__WEBPACK_IMPORTED_MODULE_17__.StoreManagerContextName);
        var cookieManager = this.contextManager.GetItemSingle(_interfaces_construction_ICookieManager__WEBPACK_IMPORTED_MODULE_6__.CookieManagerContextName);
        var uxManager = this.contextManager.GetItemSingle(_shrimp_interfaces_quick_IUXManager__WEBPACK_IMPORTED_MODULE_3__.UXManagerContextName);
        var regionalManager = this.contextManager.GetItemSingle(_interfaces_construction_IRegionalManager__WEBPACK_IMPORTED_MODULE_16__.RegionalManagerContextName);
        var processManager = this.contextManager.GetItemSingle(_interfaces_construction_IProcessManager__WEBPACK_IMPORTED_MODULE_14__.ProcessManagerContextName);
        var networkManager = self.contextManager.GetItemSingle(_interfaces_construction_INetworkManager__WEBPACK_IMPORTED_MODULE_12__.NetworkManagerContextName);
        var cryptoManager = self.contextManager.GetItemSingle(_interfaces_construction_ICryptographyManager__WEBPACK_IMPORTED_MODULE_7__.CryptographyContextName);
        var hostTriggererImpl = this.contextManager.GetItemSingle(_interfaces_construction_IHostTriggerer__WEBPACK_IMPORTED_MODULE_9__.HostTriggererContextName);
        var platformManager = this.contextManager.GetItemSingle(_interfaces_construction_IPlatformManager__WEBPACK_IMPORTED_MODULE_13__.PlatformManagerContextName);
        var createComponent = function (options) {
            var retVal = componentManager.createComponent(options);
            retVal.lockedFields = {};
            retVal.lockedFields["visible"] = _this.initRoleBaseAuthFunc(options);
            return retVal;
        };
        var componentHasProp = function (_a) {
            var componentName = _a.componentName, propName = _a.propName;
            return componentManager.componentHasProp(componentName, propName);
        };
        var createContainerView = function (compUID) {
            var _a;
            var retVal = (_a = componentManager.createContainerView) === null || _a === void 0 ? void 0 : _a.call(componentManager, compUID);
            return retVal;
        };
        var updateContainerView = function (options) {
            var _a;
            (_a = componentManager.updateContainerView) === null || _a === void 0 ? void 0 : _a.call(componentManager, options);
        };
        var dory = (0,_dory__WEBPACK_IMPORTED_MODULE_0__.InitDory)({ doryInstName: doryInstName });
        var retrieveCjson = function (_a) {
            var qjsonPath = _a.qjsonPath;
            return __awaiter(_this, void 0, void 0, function () {
                var qjsonPool, qjson;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            qjsonPool = self.contextManager.GetItemSingle(_QJsonHelpers_QJsonPool__WEBPACK_IMPORTED_MODULE_19__.QJsonPool.contextName);
                            qjson = qjsonPool === null || qjsonPool === void 0 ? void 0 : qjsonPool.getCJson(qjsonPath);
                            if (qjson) {
                                return [2 /*return*/, qjson];
                            }
                            return [4 /*yield*/, (qjsonPool === null || qjsonPool === void 0 ? void 0 : qjsonPool.retrieveAndFillQjsonAsync({ qjson: { type: "path", path: qjsonPath }, dory: dory }))];
                        case 1:
                            qjson = _b.sent();
                            return [2 /*return*/, qjson];
                    }
                });
            });
        };
        dory.SetOperatorCollection(operatorCollection);
        dory.SetShellGlobalConfiguration({
            coreComponentOverrider: componentManager.coreComponentOverrider,
            componentInstanceTracker: compInstTracker,
            historyBasedConf: {
                componentHasProp: componentHasProp,
                createComponent: createComponent,
                isEditor: this.isEditor,
                retrieveCjson: retrieveCjson,
                createContainerView: createContainerView,
                updateContainerView: updateContainerView
            },
            go: function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return __awaiter(this, void 0, void 0, function () {
                    var goArgs, navigationParams;
                    return __generator(this, function (_a) {
                        if (args == undefined) {
                            return [2 /*return*/];
                        }
                        goArgs = __assign({}, args);
                        if (args.length == 1) {
                            navigationParams = { url: goArgs[0] };
                        }
                        else {
                            navigationParams = { url: goArgs };
                        }
                        (navigationManager === null || navigationManager === void 0 ? void 0 : navigationManager.go) && args.length > 1 ? navigationManager.go(navigationParams) : renderer === null || renderer === void 0 ? void 0 : renderer.Render({ pjsonPath: goArgs[0] });
                        return [2 /*return*/];
                    });
                });
            },
            go2: function (qjsonPath, options) {
                if (dory.platformType !== "Web") {
                    return renderer === null || renderer === void 0 ? void 0 : renderer.Render({ pjsonPath: qjsonPath });
                }
                if (!(options === null || options === void 0 ? void 0 : options.newTab)) {
                    return renderer === null || renderer === void 0 ? void 0 : renderer.Render({ pjsonPath: qjsonPath });
                }
                navigationManager.go2(qjsonPath, options, function () { return renderer === null || renderer === void 0 ? void 0 : renderer.Render({ pjsonPath: qjsonPath }); });
            },
            hostTrigger: function (functionName, params, pageNameArray) {
                var _a;
                return (_a = hostTriggererImpl === null || hostTriggererImpl === void 0 ? void 0 : hostTriggererImpl.hostTrigger) === null || _a === void 0 ? void 0 : _a.call(hostTriggererImpl, functionName, params, pageNameArray);
            },
            processManager: processManager,
            triggerPreviousPage: navigationManager === null || navigationManager === void 0 ? void 0 : navigationManager.backOverride,
            storeAccess: storeManager,
            cookieAccess: cookieManager,
            lridHelper: externalLocalizationFunc ? function (label) {
                var returnVal;
                try {
                    returnVal = externalLocalizationFunc(label);
                }
                catch (error) {
                    returnVal = '';
                }
                return returnVal;
            } : undefined,
            roleBaseViewHelper: function (key) {
                try {
                    return roleBaseAuthFunc(key);
                }
                catch (error) {
                    return true;
                }
            },
            resetTimeTextField: function (component) {
                component.$refs.input.value = null;
            },
            platform: platformManager,
            setTheme: function (themeName) {
                return uxManager.setTheme(themeName);
            },
            getThemeList: function () {
                var themeList = uxManager.getThemeList();
                if (!themeList) {
                    return [];
                }
                //if (!(themeList instanceof Array)) { return themeList;}
                else {
                    return themeList;
                }
            },
            addTheme: function (themeName) {
                return uxManager.addTheme(themeName);
            },
            removeTheme: function (themeName) {
                return uxManager.removeTheme(themeName);
            },
            getRegionList: function () {
                var regionList = regionalManager.getRegionList();
                if (!regionList) {
                    return [];
                }
                else {
                    return regionList;
                }
            },
            getCurrentRegion: function () {
                var region = regionalManager.getRegion();
                // return regionalManager.getRegion;
                // const region = regionalManager.getRegion;
                if (!region) {
                    return "";
                }
                else {
                    return region;
                }
            },
            getFormattingDefinitionByCurrentRegion: regionalManager.getFormattingDefinitionByCurrentRegion.bind(regionalManager),
            redirect: function (_a) {
                var url = _a.url, options = _a.options;
                navigationManager.redirect({ url: url, options: options });
            },
            setRegion: function (regionName) {
                return regionalManager.setRegion(regionName);
            },
            // getThemeList: function () {
            //     const themeList = uxManager.getThemeList();
            //     if (!themeList) { return undefined; }
            //     if (!(themeList instanceof Array)) { return themeList;}
            //     return { default: themeList };
            // },
            network: networkManager,
            shellGlobalMethods: globalMethods,
            osGlobalObjects: this.shellManager.PollyFill(),
            compPropsAutoLrid: true,
            formatConfiguration: {
                dateFormat: function () {
                    return "YYYY/MM/DD";
                },
                moneyFormat: function () {
                    return "tr-TR";
                }
            },
            redirectTo: function (_a) {
                var url = _a.url;
                if (navigationManager.redirectFunc)
                    navigationManager.redirectFunc({ url: url });
            },
            getUrl: function (options) {
                if (navigationManager.getUrl) {
                    return navigationManager.getUrl(options);
                }
                return;
            },
            performance: globalMethods.performance,
            dynamicCompHandler: !this.isEditor ? globalMethods.dynamicCompHandler : undefined,
            deleteComponent: !this.isEditor ? globalMethods.deleteComponent : undefined,
            exportToXlsxHandler: globalMethods.exportToXlsxHandler,
            setComponentClass: globalMethods.setComponentClass,
            setComponentsProperty: globalMethods.setComponentsProperty,
            setVisibility: componentManager.setVisibility,
            getComponentValue: componentManager.getComponentValue,
            setComponentValue: componentManager.setComponentValue,
            onComponentDestroy: componentManager.onComponentDestroy,
            createComponentQValue: componentManager.createComponentQValue,
            onLRChange: regionalManager.onLRChange,
            setDarkTheme: uxManager.setDarkTheme,
            clearPageClose: globalMethods.clearPageClose,
            setPageClose: globalMethods.setPageClose,
            intoView: globalMethods.intoView,
            YOffset: globalMethods.YOffset,
            XOffset: globalMethods.XOffset,
            toTop: globalMethods.toTop,
            getEnvironmentVariable: globalMethods.getEnvironmentVariable,
            getYamlLogType: globalMethods.getYamlLogType,
            getPageTitle: globalMethods.getPageTitle,
            setPageTitle: globalMethods.setPageTitle,
            getFavicon: globalMethods.getFavicon,
            cryptoGenerateKeyPair: cryptoManager.cryptoGenerateKeyPair,
            cryptoSha512: cryptoManager.cryptoSha512,
            cryptoSign: cryptoManager.cryptoSign,
            cryptoStore: cryptoManager.cryptoStore,
            getMinEngineLogType: globalMethods.getMinEngineLogType,
            downloadHandler: globalMethods.downloadHandler,
        });
        dory.SetTSComponentWrapper((_a = componentManager.tsComponentWrapper) === null || _a === void 0 ? void 0 : _a.call(componentManager));
        return dory;
    };
    //TODO Tipini yaz nulable
    DoryHelper.prototype.initRoleBaseAuthFunc = function (options) {
        var roleBaseAuthFunc = this.contextManager.GetItemSingle(_shrimp_interfaces_quick_IRoleBaseAuthorizationFunc__WEBPACK_IMPORTED_MODULE_2__.RoleBaseAuthorizationFuncContextName);
        if (options.props && options.props["useRoleBaseAuthorization"] && roleBaseAuthFunc) {
            return true;
        }
        return false;
    };
    DoryHelper.prototype.delayTillPostDisplay = function (cb) {
        (this.doryJr || this.Dory).delayTillPostDisplay(cb);
    };
    return DoryHelper;
}());



/***/ }),

/***/ "../../common/qshell/src/helpers/QJsonHelpers/QJsonCollector.ts":
/*!**********************************************************************!*\
  !*** ../../common/qshell/src/helpers/QJsonHelpers/QJsonCollector.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QJsonCollector": () => (/* binding */ QJsonCollector)
/* harmony export */ });
/* harmony import */ var _shrimp_interfaces_Scripting_LangCalc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/interfaces/Scripting/LangCalc */ "../../common/shrimp/interfaces/Scripting/LangCalc.ts");
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};


var compPromise = "component promise";
var QJsonCollector = /** @class */ (function () {
    function QJsonCollector(_a) {
        var moduleManager = _a.moduleManager;
        this.moduleManager = moduleManager;
    }
    QJsonCollector.prototype.collectQJson = function (cJson, dory, qjsonRetrieve, qLang) {
        var promiseList = null;
        var self = this;
        var traverseJson = function (childCJson) {
            var _this = this;
            if (!childCJson) {
                return;
            }
            childCJson.forEach(function (comp) { return __awaiter(_this, void 0, void 0, function () {
                var qJsonPaths, compProm;
                var _a;
                return __generator(this, function (_b) {
                    if (!comp) {
                        return [2 /*return*/];
                    }
                    qJsonPaths = [];
                    if (comp.T == "CustomComponent" || comp.T == "RenderingComponent") {
                        qJsonPaths.push(dory.Evaluate({ script: (_a = comp.P.QJsonPath) === null || _a === void 0 ? void 0 : _a.H, response: null, lang: _shrimp_interfaces_Scripting_LangCalc__WEBPACK_IMPORTED_MODULE_0__.LangCalc.getLang({ ctrl: comp, qLang: qLang }) }));
                    }
                    else {
                        compProm = self.moduleManager.CheckComponent(comp.T, comp.CP);
                        if (compProm) {
                            promiseList = promiseList || [];
                            promiseList === null || promiseList === void 0 ? void 0 : promiseList.push({ prom: compProm, qJsonPath: compPromise, result: -1 });
                        }
                    }
                    if (qJsonPaths) {
                        qJsonPaths.forEach(function (qJsonPath) {
                            if (!qJsonPath) {
                                return;
                            }
                            var qjsonProm = qjsonRetrieve(qJsonPath);
                            promiseList = promiseList || [];
                            promiseList.push({ prom: qjsonProm, qJsonPath: qJsonPath, result: -1 });
                        });
                    }
                    if (comp.C) {
                        Object.keys(comp.C).forEach(function (childKey) { return traverseJson(comp.C[childKey].c); });
                    }
                    return [2 /*return*/];
                });
            }); });
        };
        traverseJson(cJson);
        var subPromiseList = [];
        var retrieveCounter = 0;
        return new Promise(function (resolve, reject) {
            if (!promiseList) {
                resolve(promiseList);
                return;
            }
            promiseList.forEach(function (promiseItem) {
                promiseItem.prom.then(function (justQJson) {
                    promiseItem.result++;
                    if (promiseItem.qJsonPath == compPromise) {
                        return;
                    }
                    var subProm = self.collectQJson(justQJson.cJson, dory, qjsonRetrieve, qLang);
                    subPromiseList.push(subProm);
                    subProm.then(function (resolved) {
                        if (resolved) {
                            promiseItem.subPromiseList = promiseItem.subPromiseList || [];
                            promiseItem.subPromiseList.push(resolved);
                        }
                    });
                }).catch(function (err) {
                    _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "Error on collectQJson can't find qjson: " + promiseItem.qJsonPath + "." });
                }).finally(function () {
                    if (++retrieveCounter == promiseList.length) {
                        Promise.all(subPromiseList).then(function () { return resolve(promiseList); });
                    }
                });
            });
        });
    };
    return QJsonCollector;
}());



/***/ }),

/***/ "../../common/qshell/src/helpers/QJsonHelpers/QJsonPool.ts":
/*!*****************************************************************!*\
  !*** ../../common/qshell/src/helpers/QJsonHelpers/QJsonPool.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QJsonPool": () => (/* binding */ QJsonPool)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _shrimp_helpers_qjsonParser_QJsonExtractHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shrimp/helpers/qjsonParser/QJsonExtractHelper */ "../../common/shrimp/helpers/qjsonParser/QJsonExtractHelper.ts");
/* harmony import */ var _shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shrimp/interfaces/IPromiseData */ "../../common/shrimp/interfaces/IPromiseData.ts");
/* harmony import */ var _customComponents_QCaptcha__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../customComponents/QCaptcha */ "../../common/qshell/src/customComponents/QCaptcha.ts");
/* harmony import */ var _customComponents_QDynamicFields__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../customComponents/QDynamicFields */ "../../common/qshell/src/customComponents/QDynamicFields.ts");
/* harmony import */ var _customComponents_QLegend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../customComponents/QLegend */ "../../common/qshell/src/customComponents/QLegend.ts");
/* harmony import */ var _customComponents_QQRCode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../customComponents/QQRCode */ "../../common/qshell/src/customComponents/QQRCode.ts");
/* harmony import */ var _QJsonCollector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./QJsonCollector */ "../../common/qshell/src/helpers/QJsonHelpers/QJsonCollector.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var QJsonPool = /** @class */ (function () {
    function QJsonPool(_a) {
        var qjsonRetriever = _a.qjsonRetriever, moduleManager = _a.moduleManager, context = _a.context;
        this.contextName = QJsonPool.contextName;
        this.qJsonPool = { QLegend: _customComponents_QLegend__WEBPACK_IMPORTED_MODULE_5__["default"], QCaptcha: _customComponents_QCaptcha__WEBPACK_IMPORTED_MODULE_3__["default"], QDynamicFields: _customComponents_QDynamicFields__WEBPACK_IMPORTED_MODULE_4__["default"], QQRCode: _customComponents_QQRCode__WEBPACK_IMPORTED_MODULE_6__["default"] };
        this.qjsonRetriever = qjsonRetriever;
        this.moduleManager = moduleManager;
        this.qjsonCollector = new _QJsonCollector__WEBPACK_IMPORTED_MODULE_7__.QJsonCollector({ moduleManager: moduleManager });
        this.qJsonPool = {};
        this.context = context;
        this.ResetPool();
    }
    Object.defineProperty(QJsonPool.prototype, "Dory", {
        get: function () {
            return this._Dory;
        },
        set: function (v) {
            this._Dory = v;
        },
        enumerable: false,
        configurable: true
    });
    QJsonPool.prototype.ResetPool = function () {
        this.qJsonPool = { "qjson://QLegend": _customComponents_QLegend__WEBPACK_IMPORTED_MODULE_5__["default"], "qjson://QCaptcha": _customComponents_QCaptcha__WEBPACK_IMPORTED_MODULE_3__["default"], "qjson://QDynamicFields": _customComponents_QDynamicFields__WEBPACK_IMPORTED_MODULE_4__["default"], "qjson://QQRCode": _customComponents_QQRCode__WEBPACK_IMPORTED_MODULE_6__["default"] };
    };
    Object.defineProperty(QJsonPool.prototype, "ModuleManager", {
        get: function () {
            return this.moduleManager;
        },
        enumerable: false,
        configurable: true
    });
    QJsonPool.prototype.retrieveAndFillQjsonAsync = function (_a) {
        var _b, _c;
        var qjson = _a.qjson, dory = _a.dory;
        return __awaiter(this, void 0, void 0, function () {
            var self, qshellContext, shellConfigs, qjsonRetrieveFunc, qjsonContent, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        self = this;
                        qshellContext = this.context.GetItemSingle("QShell");
                        shellConfigs = ((_b = qshellContext) === null || _b === void 0 ? void 0 : _b.getRender()).DoryInst.GetShellConfiguration();
                        qjsonRetrieveFunc = function (qjsonPath, fixSyncResolve) {
                            var promData = (0,_shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_2__.CreatePromiseData)(undefined, { fixSyncResolve: fixSyncResolve });
                            var qjson = self.qJsonPool[qjsonPath];
                            if (qjson) {
                                promData.resolver(qjson);
                                return promData.promise;
                            }
                            else {
                                var qjsonPromise = self.qjsonRetriever.retrieveQJsonAsync(qjsonPath, function (qJsonString) {
                                    var _a;
                                    try {
                                        qjson = _shrimp_helpers_qjsonParser_QJsonExtractHelper__WEBPACK_IMPORTED_MODULE_1__.QJsonExtractHelper.qJsonExtractor(qJsonString);
                                        self.qJsonPool[qjsonPath] = qjson;
                                    }
                                    catch (ex) {
                                        _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "qjson error: " + qjsonPath + " has error", logType: _shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Trace, additional: ex, minEngineLogLevel: (_a = shellConfigs.getMinEngineLogType) === null || _a === void 0 ? void 0 : _a.call(shellConfigs) });
                                        promData.reject(ex);
                                        throw ex;
                                    }
                                    promData.resolver(qjson);
                                }, function (reason) {
                                    promData.reject(reason);
                                });
                                if (!self.Dory.GetEditor()) {
                                    self.qJsonPool[qjsonPath] = qjsonPromise;
                                }
                                return promData.promise;
                            }
                        };
                        if (!(qjson.type == "content")) return [3 /*break*/, 1];
                        _d = qjson.content;
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, qjsonRetrieveFunc(qjson.path, true)];
                    case 2:
                        _d = _e.sent();
                        _e.label = 3;
                    case 3:
                        qjsonContent = _d;
                        return [4 /*yield*/, this.qjsonCollector.collectQJson(qjsonContent.cJson, dory, qjsonRetrieveFunc, (_c = qjsonContent.opt) === null || _c === void 0 ? void 0 : _c.QL)];
                    case 4:
                        _e.sent();
                        return [2 /*return*/, qjsonContent];
                }
            });
        });
    };
    QJsonPool.prototype.getCJson = function (qjsonPath) {
        return this.qJsonPool[qjsonPath];
    };
    QJsonPool.contextName = "QJsonPool";
    return QJsonPool;
}());



/***/ }),

/***/ "../../common/qshell/src/helpers/Renderer.ts":
/*!***************************************************!*\
  !*** ../../common/qshell/src/helpers/Renderer.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoryRenderer": () => (/* binding */ DoryRenderer),
/* harmony export */   "Renderer": () => (/* binding */ Renderer)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/hook */ "../../common/shrimp/helpers/hook.ts");
/* harmony import */ var _interfaces_construction_IRegionalManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../interfaces/construction/IRegionalManager */ "../../common/qshell/src/interfaces/construction/IRegionalManager.ts");
/* harmony import */ var _DoryHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DoryHelper */ "../../common/qshell/src/helpers/DoryHelper.ts");
/* harmony import */ var _QJsonHelpers_QJsonPool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./QJsonHelpers/QJsonPool */ "../../common/qshell/src/helpers/QJsonHelpers/QJsonPool.ts");
/* harmony import */ var _RendererChild__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RendererChild */ "../../common/qshell/src/helpers/RendererChild.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





var Renderer = /** @class */ (function () {
    function Renderer(_a) {
        var context = _a.context, doryInstanceName = _a.doryInstanceName, operatorCollection = _a.operatorCollection;
        this.BeforeRenderStartHook = new _shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_0__.Hook("BeforeRenderStartHook");
        this.context = context;
        this.Dory = new _DoryHelper__WEBPACK_IMPORTED_MODULE_2__.DoryHelper({ context: this.context, doryInstName: doryInstanceName, renderer: this, operatorCollection: operatorCollection }).Dory;
        this.settingsQJsons = this.Dory.SettingsQJsonContext;
    }
    Object.defineProperty(Renderer.prototype, "PageCompletedHook", {
        get: function () {
            return this.Dory.PageCompletedHook;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Renderer.prototype, "PageRenderStartedHook", {
        get: function () {
            return this.Dory.PageRenderStartedHook;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Renderer.prototype, "DisplayHook", {
        get: function () {
            return this.Dory.DisplayHook;
        },
        enumerable: false,
        configurable: true
    });
    Renderer.prototype.Render = function (_a) {
        var pjsonPath = _a.pjsonPath, compParentInst = _a.compParentInst, storeItems = _a.storeItems, pageId = _a.pageId, pageName = _a.pageName, pjsonContent = _a.pjsonContent;
        return __awaiter(this, void 0, void 0, function () {
            var qjsonPool, qjsonData, qJSon;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.BeforeRenderStartHook.triggerer();
                        qjsonPool = this.context.GetItemSingle(_QJsonHelpers_QJsonPool__WEBPACK_IMPORTED_MODULE_3__.QJsonPool.contextName);
                        if (!pjsonContent && !pjsonPath) {
                            return [2 /*return*/];
                        }
                        qjsonData = pjsonContent ? { type: "content", content: pjsonContent } : { type: "path", path: pjsonPath };
                        return [4 /*yield*/, (qjsonPool === null || qjsonPool === void 0 ? void 0 : qjsonPool.retrieveAndFillQjsonAsync({ qjson: qjsonData, dory: this.Dory }))];
                    case 1:
                        qJSon = _b.sent();
                        if (!qJSon) {
                            return [2 /*return*/];
                        }
                        pageName = pageName !== null && pageName !== void 0 ? pageName : (pjsonPath ? this.getPageName(pjsonPath) : Math.random().toString());
                        this.Dory.Render({ qjson: qJSon, compParentInst: compParentInst, storeItems: storeItems, pageId: pageId, pageName: pageName });
                        return [2 /*return*/];
                }
            });
        });
    };
    Renderer.prototype.CreateChildRenderer = function (compUIDPrefix) {
        return new _RendererChild__WEBPACK_IMPORTED_MODULE_4__.DoryRendererChild(this, compUIDPrefix);
    };
    Renderer.prototype.SetLRType = function (LRType) {
        var _a;
        this.Dory.SetLRType(LRType);
        var region = this.context.GetItemSingle(_interfaces_construction_IRegionalManager__WEBPACK_IMPORTED_MODULE_1__.RegionalManagerContextName);
        (_a = region === null || region === void 0 ? void 0 : region.onLRChange) === null || _a === void 0 ? void 0 : _a.call(region, LRType === null || LRType === void 0 ? void 0 : LRType.substring(0, 2));
    };
    Renderer.prototype.SetGlobalLRDict = function (GlobalLRDict) {
        this.Dory.SetGlobalLRDict(GlobalLRDict);
    };
    Renderer.prototype.SetSiteSettings = function (siteSettings) {
        this.Dory.SetSiteSettings(siteSettings);
    };
    Renderer.prototype.SetPlatformType = function (platformType) {
        this.Dory.SetPlatformType(platformType);
    };
    Renderer.prototype.SetDisplayCallBack = function (callBackFunc) {
        this.Dory.SetDisplayCallBack({ callBackFunc: callBackFunc });
    };
    ;
    Renderer.prototype.SetPartialDisplayCallBack = function (callBackFunc) {
        this.Dory.SetPartialDisplayCallBack({ callBackFunc: callBackFunc });
    };
    ;
    Renderer.prototype.GetNavigationDemand = function (pageId) {
        return this.Dory.hasHistory(pageId);
    };
    Renderer.prototype.GoHistory = function (navigationDemand) {
        this.Dory.goHistory({ navigationDemand: navigationDemand });
    };
    Renderer.prototype.Back = function () {
        // window.history.back();
        this.Dory.goHistoryBack();
    };
    Renderer.prototype.Forward = function () {
        // window.history.forward();
        this.Dory.goHistoryForward();
    };
    Renderer.prototype.Clear = function () {
        this.Dory.Clear();
    };
    Renderer.prototype.Hibernate = function () {
        this.Dory.CallHibernate();
    };
    Renderer.prototype.CheckComponent = function (_a) {
        var compName = _a.compName;
        var qjsonPool = this.context.GetItemSingle(_QJsonHelpers_QJsonPool__WEBPACK_IMPORTED_MODULE_3__.QJsonPool.contextName);
        return qjsonPool === null || qjsonPool === void 0 ? void 0 : qjsonPool.ModuleManager.CheckComponent(compName, undefined);
    };
    Renderer.prototype.GetComponentCollection = function () {
        return this.Dory.GetComponentCollection();
    };
    Renderer.prototype.getPageName = function (pjsonPath) {
        var qjsonIndex = pjsonPath.indexOf(".qjson");
        if (qjsonIndex < 0) {
            return pjsonPath;
        }
        return pjsonPath.substring(0, qjsonIndex);
    };
    Renderer.prototype.Trigger = function (eventName, parameters) {
        return this.Dory.Trigger(eventName, parameters);
    };
    Renderer.prototype.SetEditMode = function (state) {
        this.Dory.SetEditMode(state);
    };
    return Renderer;
}());

var DoryRenderer = /** @class */ (function (_super) {
    __extends(DoryRenderer, _super);
    function DoryRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DoryRenderer.prototype, "DoryInst", {
        get: function () {
            return this.Dory;
        },
        enumerable: false,
        configurable: true
    });
    return DoryRenderer;
}(Renderer));



/***/ }),

/***/ "../../common/qshell/src/helpers/RendererChild.ts":
/*!********************************************************!*\
  !*** ../../common/qshell/src/helpers/RendererChild.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoryRendererChild": () => (/* binding */ DoryRendererChild),
/* harmony export */   "RendererChild": () => (/* binding */ RendererChild)
/* harmony export */ });
/* harmony import */ var _QJsonHelpers_QJsonPool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./QJsonHelpers/QJsonPool */ "../../common/qshell/src/helpers/QJsonHelpers/QJsonPool.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

var RendererChild = /** @class */ (function () {
    function RendererChild(renderer, compUIDPrefix) {
        this.doryRenderer = renderer;
        this.doryJr = this.doryRenderer.DoryInst.CreateDoryJr({ compUIDPrefix: compUIDPrefix });
    }
    RendererChild.prototype.SetCallbackDisplay = function (callBackFunc) {
        this.doryJr.setCallbackDisplay(callBackFunc);
    };
    RendererChild.prototype.Render = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var qjsonPool, qjsonData, dory;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        qjsonPool = this.doryRenderer.context.GetItemSingle(_QJsonHelpers_QJsonPool__WEBPACK_IMPORTED_MODULE_0__.QJsonPool.contextName);
                        qjsonData = { type: "content", content: options.qjson };
                        dory = this.doryRenderer.DoryInst;
                        return [4 /*yield*/, (qjsonPool === null || qjsonPool === void 0 ? void 0 : qjsonPool.retrieveAndFillQjsonAsync({ qjson: qjsonData, dory: dory }))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, this.doryJr.Render(options)];
                }
            });
        });
    };
    return RendererChild;
}());

var DoryRendererChild = /** @class */ (function (_super) {
    __extends(DoryRendererChild, _super);
    function DoryRendererChild() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DoryRendererChild.prototype, "DoryJrInst", {
        get: function () {
            return this.doryJr;
        },
        enumerable: false,
        configurable: true
    });
    return DoryRendererChild;
}(RendererChild));



/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/CompInstanceTracker.ts":
/*!******************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/CompInstanceTracker.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompInstanceTrackerContextName": () => (/* binding */ CompInstanceTrackerContextName)
/* harmony export */ });
var CompInstanceTrackerContextName = "ComponentInstanceTracker";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/IComponentManager.ts":
/*!****************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/IComponentManager.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentManagerContextName": () => (/* binding */ ComponentManagerContextName)
/* harmony export */ });
var ComponentManagerContextName = "ComponentManager";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/ICookieManager.ts":
/*!*************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/ICookieManager.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CookieManagerContextName": () => (/* binding */ CookieManagerContextName)
/* harmony export */ });
var CookieManagerContextName = "CookieManager";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/ICryptographyManager.ts":
/*!*******************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/ICryptographyManager.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CryptographyContextName": () => (/* binding */ CryptographyContextName)
/* harmony export */ });
var CryptographyContextName = "Cryptography";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/IGlobalMethods.ts":
/*!*************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/IGlobalMethods.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GlobalMethodsContextName": () => (/* binding */ GlobalMethodsContextName)
/* harmony export */ });
var GlobalMethodsContextName = "GlobalMethods";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/IHostTriggerer.ts":
/*!*************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/IHostTriggerer.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HostTriggererContextName": () => (/* binding */ HostTriggererContextName)
/* harmony export */ });
var HostTriggererContextName = "HostTriggerer";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/ILanguageExtensions.ts":
/*!******************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/ILanguageExtensions.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LanguageExtensionsContextName": () => (/* binding */ LanguageExtensionsContextName)
/* harmony export */ });
var LanguageExtensionsContextName = "LanguageExtensions";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/INavigationManager.ts":
/*!*****************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/INavigationManager.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NavigationManagerContextName": () => (/* binding */ NavigationManagerContextName)
/* harmony export */ });
var NavigationManagerContextName = "NavigationManager";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/INetworkManager.ts":
/*!**************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/INetworkManager.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NetworkManagerContextName": () => (/* binding */ NetworkManagerContextName)
/* harmony export */ });
var NetworkManagerContextName = "NetworkManager";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/IPlatformManager.ts":
/*!***************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/IPlatformManager.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PlatformManagerContextName": () => (/* binding */ PlatformManagerContextName)
/* harmony export */ });
var PlatformManagerContextName = "PlatformManager";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/IProcessManager.ts":
/*!**************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/IProcessManager.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProcessManagerContextName": () => (/* binding */ ProcessManagerContextName)
/* harmony export */ });
var ProcessManagerContextName = "ProcessManager";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/IQJsonRetriever.ts":
/*!**************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/IQJsonRetriever.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QJsonRetrieverContextName": () => (/* binding */ QJsonRetrieverContextName)
/* harmony export */ });
var QJsonRetrieverContextName = "QJsonRetriever";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/IRegionalManager.ts":
/*!***************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/IRegionalManager.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RegionalManagerContextName": () => (/* binding */ RegionalManagerContextName)
/* harmony export */ });
var RegionalManagerContextName = "RegionalManager";


/***/ }),

/***/ "../../common/qshell/src/interfaces/construction/IStoreManager.ts":
/*!************************************************************************!*\
  !*** ../../common/qshell/src/interfaces/construction/IStoreManager.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StoreManagerContextName": () => (/* binding */ StoreManagerContextName)
/* harmony export */ });
var StoreManagerContextName = "StoreManager";


/***/ }),

/***/ "../../common/qshell/src/managers/shellManager.ts":
/*!********************************************************!*\
  !*** ../../common/qshell/src/managers/shellManager.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShellManager": () => (/* binding */ ShellManager)
/* harmony export */ });
/* harmony import */ var _shrimp_helpers_shellHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shrimp/helpers/shellHelper */ "../../common/shrimp/helpers/shellHelper.ts");

var ShellManager = /** @class */ (function () {
    function ShellManager(langImpl) {
        var _a;
        this.shell = {};
        this.langImpl = langImpl;
        this.osGlobals = ((_a = this.langImpl) === null || _a === void 0 ? void 0 : _a.createOsGlobalObjects()) || {};
        this.shell = this.osGlobals.shell = this.osGlobals.shell || {};
        (0,_shrimp_helpers_shellHelper__WEBPACK_IMPORTED_MODULE_0__.fixShell)(this.shell);
    }
    Object.defineProperty(ShellManager.prototype, "UserContext", {
        get: function () {
            var _a, _b;
            return (_b = (_a = this.shell).getUserContext) === null || _b === void 0 ? void 0 : _b.call(_a);
        },
        set: function (user) {
            var _a, _b;
            if (!user) {
                return;
            }
            (_b = (_a = this.shell).setUserContext) === null || _b === void 0 ? void 0 : _b.call(_a, user);
        },
        enumerable: false,
        configurable: true
    });
    ShellManager.prototype.PollyFill = function () {
        return this.osGlobals;
    };
    return ShellManager;
}());



/***/ }),

/***/ "../../common/shrimp/context.ts":
/*!**************************************!*\
  !*** ../../common/shrimp/context.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContextManager": () => (/* reexport safe */ _src_context_contextManager__WEBPACK_IMPORTED_MODULE_0__.ContextManager)
/* harmony export */ });
/* harmony import */ var _src_context_contextManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/context/contextManager */ "../../common/shrimp/src/context/contextManager.ts");



/***/ }),

/***/ "../../common/shrimp/helpers/CompJsonMigrator.ts":
/*!*******************************************************!*\
  !*** ../../common/shrimp/helpers/CompJsonMigrator.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompJsonMigrator": () => (/* binding */ CompJsonMigrator)
/* harmony export */ });
/* harmony import */ var _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interfaces/ComponentInterfaces/ICompJson */ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts");
/* harmony import */ var _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/layoutBarHelper */ "../../common/shrimp/helpers/layoutBarHelper.ts");


;
var CompJsonMigrator = /** @class */ (function () {
    function CompJsonMigrator() {
    }
    CompJsonMigrator.fixCtrlOldStyle = function (ctrl, options) {
        var _a, _b;
        if (options === void 0) { options = {}; }
        var notifies = {};
        ctrl.O = ctrl.O || { cType: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.CType.child };
        ctrl.O.cType = ctrl.O.cType || _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.CType.child;
        Object.keys(ctrl.C).forEach(function (childKey) {
            var curChild = ctrl.C[childKey];
            //fix old C type. before IChildJson
            if (Array.isArray(curChild)) {
                ctrl.C[childKey] = { cType: ctrl.O.cType == _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.CType.slot ? _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.CType.slot : _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.CType.child, c: curChild }; // defaulting comp child type to each child itself
            }
        });
        //each P used to be string. fix that
        Object.keys(ctrl.P).forEach(function (propKey) {
            var propValue = ctrl.P[propKey];
            if (typeof (propValue) === "string") {
                ctrl.P[propKey] = { H: propValue, T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop };
            }
        });
        //move old text & class on O to P with type
        var o = ctrl.O;
        if (o.text) {
            ctrl.P.text = { H: o.text, T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.text };
            delete o.text;
        }
        if (o.class) {
            ctrl.P.class = { H: o.class, T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType["class"] };
            delete o.class;
        }
        //move old class to layout.class
        if (options.mode && options.mode == "designtime" && ctrl.P[_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType["class"]]) {
            var oldClass = (_a = ctrl.P[_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType["class"]]) === null || _a === void 0 ? void 0 : _a.H;
            if (oldClass !== "" && (oldClass === null || oldClass === void 0 ? void 0 : oldClass.startsWith("'")) && (oldClass === null || oldClass === void 0 ? void 0 : oldClass.endsWith("'"))) {
                ctrl.O = ctrl.O || {};
                var propClass_1 = [];
                var prepareClass_1 = false;
                var layout_1 = ((_b = ctrl.O) === null || _b === void 0 ? void 0 : _b.layout) || {};
                layout_1.dOpt = layout_1.dOpt || {};
                oldClass === null || oldClass === void 0 ? void 0 : oldClass.substr(1, oldClass.length - 2).split(" ").forEach(function (old) {
                    if (old !== "") {
                        var isFound = false;
                        for (var compType in _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.layoutBarComponentClassList) {
                            isFound = false;
                            if (!(compType === "All" || compType === ctrl.T)) {
                                continue;
                            }
                            var componentClassList = _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.layoutBarComponentClassList[compType];
                            var _loop_1 = function (layoutKey) {
                                var option = old;
                                var breakpoint = "xs";
                                var dOpt = [];
                                if (layoutKey == _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.LayoutOption.column || layoutKey == _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.LayoutOption.spacing || layoutKey == _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.LayoutOption.display) {
                                    var classParts_1 = old.split("-");
                                    if (classParts_1.length > 2) {
                                        breakpoint = classParts_1[1];
                                        option = classParts_1[0] + "-" + classParts_1[2];
                                    }
                                    var result = componentClassList[layoutKey].find(function (opt) { return option.startsWith(opt); });
                                    if (result !== undefined) {
                                        if (classParts_1[0] === _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.LayoutOption.paddingAll || classParts_1[0] === _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.LayoutOption.marginAll) {
                                            var spacingOptions = _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.spacingOptionsPrefix.filter(function (sp) { return sp.startsWith(classParts_1[0][0]) && !sp.startsWith(_helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.LayoutOption.marginAll) && !sp.startsWith(_helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.LayoutOption.paddingAll); });
                                            dOpt = layout_1.dOpt[breakpoint];
                                            if (dOpt === undefined) {
                                                dOpt = [];
                                            }
                                            for (var index = 0; index < spacingOptions.length; index++) {
                                                var element = spacingOptions[index];
                                                if (index === 0) {
                                                    option = "" + element + classParts_1[classParts_1.length - 1];
                                                }
                                                else {
                                                    dOpt.push(layoutKey + ":" + element + classParts_1[classParts_1.length - 1]);
                                                }
                                            }
                                            layout_1.dOpt[breakpoint] = dOpt;
                                        }
                                        isFound = true;
                                    }
                                }
                                else {
                                    var index = componentClassList[layoutKey].findIndex(function (f) { return f == old; });
                                    if (index > -1) {
                                        option = old;
                                        isFound = true;
                                    }
                                }
                                if (isFound) {
                                    prepareClass_1 = true;
                                    dOpt = layout_1.dOpt[breakpoint];
                                    if (dOpt === undefined) {
                                        dOpt = [];
                                    }
                                    //if col-x exists don't add
                                    if (layoutKey === _helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.LayoutOption.column && dOpt.findIndex(function (opt) { return opt.startsWith(_helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.LayoutOption.column + ":"); }) > -1) {
                                        return "break";
                                    }
                                    dOpt.push(layoutKey + ":" + option);
                                    layout_1.dOpt[breakpoint] = dOpt;
                                    return "break";
                                }
                            };
                            for (var layoutKey in componentClassList) {
                                var state_1 = _loop_1(layoutKey);
                                if (state_1 === "break")
                                    break;
                            }
                            if (isFound) {
                                break;
                            }
                        }
                        if (!isFound) {
                            propClass_1.push(old);
                        }
                    }
                });
                if (prepareClass_1) {
                    ctrl.O.layout = layout_1;
                    ctrl.O.layout.class = (0,_helpers_layoutBarHelper__WEBPACK_IMPORTED_MODULE_1__.getOptionsClass)(layout_1.dOpt);
                    notifies["classMigrator"] = { type: "warn", message: "The page migrated the new grid-flex structure. Please check the page layout before the save!" };
                }
                ctrl.P.class = { H: "'" + propClass_1.join(" ") + "'", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType["class"] };
            }
        }
        return notifies;
    };
    return CompJsonMigrator;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/JSLoader.ts":
/*!***********************************************!*\
  !*** ../../common/shrimp/helpers/JSLoader.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JSLoader": () => (/* binding */ JSLoader)
/* harmony export */ });
var JSLoader = /** @class */ (function () {
    function JSLoader(jsName, successCb, failCb, tryCount, noCache, cacheVersion, options) {
        if (noCache === void 0) { noCache = false; }
        if (cacheVersion === void 0) { cacheVersion = 0; }
        if (options === void 0) { options = {}; }
        this.JSName = jsName;
        this.SuccessCB = successCb;
        this.FailCB = failCb;
        this.TryCount = tryCount;
        this.noCache = noCache;
        this.cacheVersion = cacheVersion;
        this.options = options;
    }
    JSLoader.prototype.LoadJS = function (type) {
        var cbObject = this.createCallBackObject(this.JSName, this.SuccessCB, this.FailCB, this.TryCount, this.noCache, this.cacheVersion, this.options);
        cbObject.goLoad(type);
    };
    JSLoader.prototype.createCallBackObject = function (jsName, successCb, failCb, tryCount, noCache, cacheVersion, options) {
        var retryLeft = tryCount;
        var scriptElem;
        var isJSLoaded = false;
        var interval = 100;
        var isBrowser = !!(typeof window !== 'undefined' && window.document);
        var readyRegExp = isBrowser ? /^complete$/ : /^(complete|loaded)$/;
        var cbObject = {
            retryLogic: function (isLoaded) {
                isJSLoaded = isLoaded;
                retryLeft--;
                if (isJSLoaded || retryLeft < 1) {
                    return;
                }
                scriptElem.parentElement.removeChild(scriptElem);
                interval *= 3;
                setTimeout(function () { cbObject.goLoad(); }, interval);
            },
            onScriptLoad: function (evt) {
                cbObject.retryLogic(true);
                var node = evt.currentTarget || evt.srcElement;
                if (evt.type === 'load' || (readyRegExp.test(node.readyState))) {
                    cbObject.clearListeners(evt);
                    if (successCb) {
                        successCb();
                    }
                }
            },
            onScriptError: function (evt) {
                cbObject.clearListeners(evt);
                cbObject.retryLogic(false);
                if (failCb) {
                    failCb(evt);
                }
            },
            addListeners: function () {
                scriptElem.addEventListener('load', cbObject.onScriptLoad, false);
                scriptElem.addEventListener('error', cbObject.onScriptError, false);
            },
            clearListeners: function (evt) {
                var node = evt.currentTarget || evt.srcElement;
                node.removeEventListener('load', cbObject.onScriptLoad, false);
                node.removeEventListener('error', cbObject.onScriptError, false);
            },
            goLoad: function (type) {
                scriptElem = document.createElement('script');
                cbObject.addListeners();
                scriptElem.src = noCache ? jsName + "?v=" + cacheVersion : jsName;
                ;
                scriptElem.type = type || "text/javascript";
                cbObject.setTagProps();
                if (options.charset) {
                    scriptElem.charset = options.charset;
                }
                document.head.appendChild(scriptElem);
            },
            setTagProps: function () {
                if (!options.scriptTagProps) {
                    return;
                }
                var props = options.scriptTagProps;
                Object.keys(props).reduce(function (prev, curKey) { prev[curKey] = props[curKey]; return prev; }, scriptElem);
            }
        };
        return cbObject;
    };
    ;
    return JSLoader;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/QJsonHelper.ts":
/*!**************************************************!*\
  !*** ../../common/shrimp/helpers/QJsonHelper.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompSearchKey": () => (/* binding */ CompSearchKey),
/* harmony export */   "QJsonHelper": () => (/* binding */ QJsonHelper)
/* harmony export */ });
/* harmony import */ var _typeHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
var __values = (undefined && undefined.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var CompSearchKey;
(function (CompSearchKey) {
    CompSearchKey[CompSearchKey["PID"] = 0] = "PID";
    CompSearchKey[CompSearchKey["EditorID"] = 1] = "EditorID";
    CompSearchKey[CompSearchKey["Render"] = 2] = "Render";
})(CompSearchKey || (CompSearchKey = {}));
var QJsonHelper = /** @class */ (function () {
    function QJsonHelper() {
    }
    /**
     * Make the calculation with given pageJson
     * @param pageJson Given pageJson
     * @param callBack Function to be handled. Return false to STOP traversing.
     * @returns boolean
     */
    QJsonHelper.ForEachComp = function (pageJson, callBack) {
        var traverse = function (curJson, path, parentCompJson) {
            for (var i = 0; i < curJson.length; i++) {
                var compJson = curJson[i];
                if (!compJson) {
                    continue;
                }
                path.push(i);
                if (callBack(compJson, path.map(function (item) { return item; }), { compName: compJson.T, eID: compJson._Editor.eID, parentCompJson: parentCompJson }) === false) {
                    return false;
                }
                if (compJson.C) {
                    for (var childNamed in compJson.C) {
                        path.push(childNamed);
                        if (traverse(compJson.C[childNamed].c, path, compJson) === false) {
                            return false;
                        }
                        path.pop();
                    }
                }
                path.pop();
            }
        };
        traverse(pageJson, []);
    };
    /**
     * @deprecated Please use QJsonHelper.FindParentArrayPath
     */
    QJsonHelper.prototype.findParentArrayPath = function (path, pageJson) {
        return QJsonHelper.FindParentArrayPath(path, pageJson);
    };
    /**
     * Find json and path with given path in the given pageJson
     * @param path Sample path: [3,default,2]
     * @param pageJson Given pageJson
     * @returns ICompParentLocation
     */
    QJsonHelper.FindParentArrayPath = function (path, pageJson) {
        var e_1, _a;
        var parent = null;
        var selfIndex = path.pop();
        if (path.length == 0) {
            return { selfIndex: selfIndex, parentArray: pageJson, parent: null };
        }
        var target = pageJson;
        try {
            //Sample path: [3,default,2] --> [ {},{},{},{C:{default: [{}, {}, {BURADASIN}]}}  ]
            for (var path_1 = __values(path), path_1_1 = path_1.next(); !path_1_1.done; path_1_1 = path_1.next()) {
                var curPath = path_1_1.value;
                if (new _typeHelper__WEBPACK_IMPORTED_MODULE_0__.TypeHelper().isObject(target)) {
                    parent = target;
                    target = parent.C[curPath].c;
                }
                else { //array
                    target = target[curPath];
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (path_1_1 && !path_1_1.done && (_a = path_1.return)) _a.call(path_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return { selfIndex: selfIndex, parentArray: target, parent: parent };
    };
    /**
     * @deprecated please use QJsonHelper.FindCompBySearchField
     */
    QJsonHelper.prototype.findCompBySearchField = function (pageJson, value, componentPropertySearchKey) {
        if (componentPropertySearchKey === void 0) { componentPropertySearchKey = CompSearchKey.EditorID; }
        return QJsonHelper.FindCompBySearchField(pageJson, value, componentPropertySearchKey);
    };
    /**
     * Search the given pageJson with key and value parameters
     * @param pageJson Given pageJson
     * @param value To be searched value
     * @param componentPropertySearchKey Search key
     * @returns ICompLocation or null
     */
    QJsonHelper.FindCompBySearchField = function (pageJson, value, componentPropertySearchKey) {
        if (componentPropertySearchKey === void 0) { componentPropertySearchKey = CompSearchKey.EditorID; }
        var retVal = null;
        QJsonHelper.ForEachComp(pageJson, function (compJson, curPath) {
            var _a;
            switch (componentPropertySearchKey) {
                case CompSearchKey.PID:
                    if (compJson.P.ID.H == value) {
                        retVal = { compJson: compJson, curPath: curPath };
                        return false;
                    }
                    break;
                case CompSearchKey.Render:
                    if (((_a = compJson.P["Render"]) === null || _a === void 0 ? void 0 : _a.H) == value) {
                        retVal = { compJson: compJson, curPath: curPath };
                        return false;
                    }
                    break;
                case CompSearchKey.EditorID:
                default:
                    if (compJson._Editor.eID == value) {
                        retVal = { compJson: compJson, curPath: curPath };
                        return false;
                    }
                    break;
            }
            return true;
        });
        return retVal;
    };
    /**
     * Parse event parameters
     * @param eventParameters event parameters QS: x, y, z | TS: x: string, y: {a:number}, z: number
     */
    QJsonHelper.ParseParameters = function (eventParameters, handlerLang) {
        if (eventParameters) {
            var paramConverter = handlerLang == "TS" || handlerLang == "JS" ? (function (item) { return ({ name: item.split(":")[0], type: item.split(":")[1] }); }) : (function (item) { return ({ name: item }); });
            return eventParameters.split(",").map(paramConverter);
        }
        return undefined;
    };
    /**
     * Find component json path by EID
     * @returns path Sample path: [3,default,2]
     */
    QJsonHelper.FindCompPathByEID = function (qjson, compEID) {
        var path;
        QJsonHelper.ForEachComp(qjson, function (comp, curPath) { if (comp._Editor.eID == compEID) {
            path = curPath;
            return false;
        } return true; });
        return path;
    };
    return QJsonHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/arrayHelper.ts":
/*!**************************************************!*\
  !*** ../../common/shrimp/helpers/arrayHelper.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ArrayHelper": () => (/* binding */ ArrayHelper)
/* harmony export */ });
var ArrayHelper = /** @class */ (function () {
    function ArrayHelper() {
    }
    ArrayHelper.findAndRet = function (array, predicate) {
        var len = array.length;
        for (var i = 0; i < len; i++) {
            var retVal = predicate(array[i], i, array);
            if (retVal !== undefined) {
                return retVal;
            }
        }
        return undefined;
    };
    ArrayHelper.InitArray = function (size) {
        var arr = [];
        for (var i = 0; i < size; i++) {
            arr.push(i);
        }
        return arr;
    };
    ArrayHelper.InitEmptyArray = function (size) {
        return Array.from(new Array(size));
    };
    /**
     * Fast way to find last object in a given array
     * @param array to be search in
     * @param key to be last searched  object key
     */
    ArrayHelper.lastIndexOf = function (array, key, value) {
        for (var i = array.length - 1; i >= 0; i--) {
            if (array[i][key] === (value ? value : key))
                return i;
        }
        return -1;
    };
    ;
    /**
     * Change object of index
     * First index can move to the end of the array
     * Last index can move to first index
     * @param array Array to be moved
     * @param oldIndex Old index of object
     * @param newIndex New index of object
     */
    ArrayHelper.arrayMove = function (array, oldIndex, newIndex) {
        if (newIndex < 0) {
            array.splice(array.length - 1, 0, array.splice(oldIndex, 1)[0]);
        }
        else if (newIndex == array.length) {
            array.splice(0, 0, array.splice(oldIndex, 1)[0]);
        }
        else {
            array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);
        }
    };
    ;
    return ArrayHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/bulkManager.ts":
/*!**************************************************!*\
  !*** ../../common/shrimp/helpers/bulkManager.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BulkManager": () => (/* binding */ BulkManager)
/* harmony export */ });
var BulkManager = /** @class */ (function () {
    function BulkManager() {
    }
    /**
     * Vomit the bulk messages into callback function of the shell
     * @param message Log message that to be added
     */
    BulkManager.prototype.writeMessage = function (message) {
        var _a;
        (_a = this.logHandler) === null || _a === void 0 ? void 0 : _a.call(this, message);
    };
    return BulkManager;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/catcher.ts":
/*!**********************************************!*\
  !*** ../../common/shrimp/helpers/catcher.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "catcher": () => (/* binding */ catcher)
/* harmony export */ });
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ "../../common/shrimp/helpers/logger.ts");

var catcher = /** @class */ (function () {
    function catcher() {
    }
    catcher.tryLog = function (_a) {
        var cb = _a.cb, catchLog = _a.catchLog;
        try {
            cb();
        }
        catch (error) {
            var logMessage = catchLog ? catchLog(error) : "tryLog error happened";
            _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: logMessage, error: error, logType: _logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error });
        }
    };
    return catcher;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/clonable.ts":
/*!***********************************************!*\
  !*** ../../common/shrimp/helpers/clonable.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Clonable": () => (/* binding */ Clonable)
/* harmony export */ });
/* harmony import */ var _typeHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");

var Clonable = /** @class */ (function () {
    function Clonable() {
    }
    Clonable.DeepClone = function (obj) {
        var clone = obj.CreateSelf();
        var th = new _typeHelper__WEBPACK_IMPORTED_MODULE_0__.TypeHelper();
        Object.keys(obj).forEach(function (key) { return clone[key] = th.cloneObject(obj[key]); });
        return clone;
    };
    return Clonable;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/compDiffHelper.ts":
/*!*****************************************************!*\
  !*** ../../common/shrimp/helpers/compDiffHelper.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComparisonEnum": () => (/* binding */ ComparisonEnum),
/* harmony export */   "ValueStatus": () => (/* binding */ ValueStatus),
/* harmony export */   "ValueTypeClasses": () => (/* binding */ ValueTypeClasses),
/* harmony export */   "compDiffHelper": () => (/* binding */ compDiffHelper)
/* harmony export */ });
/* harmony import */ var _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interfaces/ComponentInterfaces/ICompJson */ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts");
/* harmony import */ var _typeHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");


var ValueTypeClasses;
(function (ValueTypeClasses) {
    ValueTypeClasses["saved"] = "sftt-value-saved";
    ValueTypeClasses["updated"] = "sftt-value-updated";
    ValueTypeClasses["removed"] = "sftt-value-removed";
    ValueTypeClasses["none"] = "";
})(ValueTypeClasses || (ValueTypeClasses = {}));
var ValueStatus;
(function (ValueStatus) {
    ValueStatus["saved"] = "saved";
    ValueStatus["updated"] = "updated";
    ValueStatus["removed"] = "removed";
    ValueStatus["none"] = "none";
})(ValueStatus || (ValueStatus = {}));
var ComparisonEnum;
(function (ComparisonEnum) {
    ComparisonEnum["labelField"] = "label";
    ComparisonEnum["valueField"] = "internalValue";
    ComparisonEnum["compareValueField"] = "compareValue";
    ComparisonEnum["compareTextValue"] = "compareText";
    ComparisonEnum["compareTableValue"] = "compareTableValue";
    ComparisonEnum["tooltipCompType"] = "Tooltip";
})(ComparisonEnum || (ComparisonEnum = {}));
var compDiffHelper = /** @class */ (function () {
    function compDiffHelper() {
    }
    /**
     * Compares component with the given old and new value.
     * Returns:
     * "saved" when there is no old value and new value is not empty,
     * "updated" when there is an old value different than the new value
     * "removed" when there is an old value and no new value     *
     * @param props Props of the component will be compared with the given list
     * @param valueList Value list of the component includes the old and new value
     */
    compDiffHelper.valueCompare = function (_a) {
        var value = _a.value, compareValue = _a.compareValue, compareDataField = _a.compareDataField;
        var typeHelper = new _typeHelper__WEBPACK_IMPORTED_MODULE_1__.TypeHelper();
        if (value === compareValue || (compareValue === undefined && !compareDataField)) {
            return ValueStatus.none;
        }
        if ((value === undefined || value === null || value === "") && compareValue) {
            return ValueStatus.removed;
        }
        else if (value && (compareValue === undefined || compareValue === null || compareValue === "")) {
            return ValueStatus.saved;
        }
        else if (value != compareValue) {
            if (typeHelper.isObject(value) && typeHelper.isObject(compareValue) && JSON.stringify(value) == JSON.stringify(compareValue)) {
                return ValueStatus.none;
            }
            return ValueStatus.updated;
        }
        return ValueStatus.none;
    };
    compDiffHelper.multipleValueCompare = function (value, compareValue) {
        var _a, _b;
        var statu = ValueStatus.none;
        if (!compareValue) {
            return statu;
        }
        var valueList = value ? value.reduce(function (prev, cur) {
            prev[cur.value] = cur.value;
            return prev;
        }, {}) : {};
        var compareValueList = compareValue ? compareValue.reduce(function (prev, cur) {
            prev[cur.value] = cur.value;
            return prev;
        }, {}) : {};
        var valueDiffResult = (_a = value) === null || _a === void 0 ? void 0 : _a.filter(function (item) {
            return !compareValueList[item.value];
        });
        var compareValueDiffResult = (_b = compareValue) === null || _b === void 0 ? void 0 : _b.filter(function (item) {
            return !valueList[item.value];
        });
        if (Object.keys(valueList).length <= 0 && Object.keys(compareValueList).length > 0) {
            statu = ValueStatus.removed;
        }
        else if (Object.keys(valueList).length > 0 && Object.keys(compareValueList).length <= 0) {
            statu = ValueStatus.saved;
        }
        else if ((valueDiffResult && valueDiffResult.length > 0) || (compareValueDiffResult && compareValueDiffResult.length > 0)) {
            statu = ValueStatus.updated;
        }
        return statu;
    };
    compDiffHelper.getValueCompareClass = function (_a) {
        var value = _a.value, compareValue = _a.compareValue, compareDataField = _a.compareDataField;
        var statu = ValueStatus.none;
        if (!compareDataField && (Array.isArray(value) || Array.isArray(compareValue))) {
            statu = this.multipleValueCompare(value, compareValue);
        }
        else {
            statu = this.valueCompare({ value: value, compareValue: compareValue, compareDataField: compareDataField });
        }
        return ValueTypeClasses[statu];
    };
    compDiffHelper.decideTooltipContent = function (_a) {
        var componentInstance = _a.componentInstance, toolTipValue = _a.toolTipValue;
        if (Array.isArray(toolTipValue) && toolTipValue.length >= 0) {
            return toolTipValue.reduce(function (prev, cur) {
                prev += " | " + cur.text;
                return prev;
            }, "").slice(3);
        }
        return componentInstance[ComparisonEnum.compareTextValue] ? componentInstance[ComparisonEnum.compareTextValue] || toolTipValue : toolTipValue;
    };
    compDiffHelper.propValueListener = function (_a) {
        var _this = this;
        var compCollection = _a.compCollection, propKey = _a.propKey, props = _a.props;
        compCollection.WatchCreatedFields(function (updatedComp) {
            var componentInstance = updatedComp.instance;
            var componentCollection = compCollection;
            if (!componentInstance) {
                return;
            }
            // let compObj = { compareValue: componentInstance[propKey] }
            var valueProp = Object.getOwnPropertyDescriptor(componentInstance.constructor.prototype, propKey);
            if (valueProp) {
                var set_1 = valueProp.set, get_1 = valueProp.get;
                Object.defineProperty(componentInstance, propKey, {
                    get: function () {
                        return get_1 === null || get_1 === void 0 ? void 0 : get_1.call(componentInstance);
                    },
                    set: function (v) {
                        set_1 === null || set_1 === void 0 ? void 0 : set_1.call(componentInstance, v);
                    }
                });
            }
            else if (Object.getOwnPropertyDescriptor(componentInstance, propKey)) {
                throw "There is no implementation on converted component instance from component collection";
            }
            else {
                var val_1, textValue_1 = undefined, tableValue_1 = undefined, valueStatus_1 = ValueTypeClasses.none;
                if (!Object.getOwnPropertyDescriptor(componentInstance, ComparisonEnum.compareTextValue)) {
                    Object.defineProperty(componentInstance, ComparisonEnum.compareTextValue, {
                        get: function () { return textValue_1; },
                        set: function (v) {
                            var _a, _b;
                            textValue_1 = v;
                            _this.displayTooltip({ compCollection: compCollection, toolTipValue: v, valueStatus: valueStatus_1 });
                            (_b = (_a = componentInstance.$el) === null || _a === void 0 ? void 0 : _a.setAttribute) === null || _b === void 0 ? void 0 : _b.call(_a, "class", componentInstance.$el.className);
                        }
                    });
                }
                if (!Object.getOwnPropertyDescriptor(componentInstance, ComparisonEnum.compareTableValue)) {
                    Object.defineProperty(componentInstance, ComparisonEnum.compareTableValue, {
                        get: function () { return tableValue_1; },
                        set: function (v) {
                            var _a, _b;
                            tableValue_1 = v;
                            (_b = (_a = componentInstance.$el) === null || _a === void 0 ? void 0 : _a.setAttribute) === null || _b === void 0 ? void 0 : _b.call(_a, "class", componentInstance.$el.className);
                        }
                    });
                }
                Object.defineProperty(componentInstance, propKey, {
                    get: function () {
                        return val_1;
                    },
                    set: function (newValue) {
                        var _a, _b;
                        val_1 = newValue;
                        if (!props.CompareDataField && !compDiffHelper.componentValueList[componentCollection.compType].classCompare) {
                            var calculatedClasses = compDiffHelper.calcComparisonClass(compCollection);
                            valueStatus_1 = calculatedClasses.valueCompare;
                            compCollection.class = componentCollection.compDomClass = calculatedClasses.class;
                            _this.displayTooltip({ compCollection: compCollection, toolTipValue: newValue, valueStatus: valueStatus_1 });
                            (_b = (_a = componentInstance.$el) === null || _a === void 0 ? void 0 : _a.setAttribute) === null || _b === void 0 ? void 0 : _b.call(_a, "class", componentInstance.$el.className);
                        }
                    }
                });
            }
        });
    };
    compDiffHelper.displayTooltip = function (_a) {
        var compCollection = _a.compCollection, toolTipValue = _a.toolTipValue, valueStatus = _a.valueStatus;
        var compareComponent = compDiffHelper.componentValueList[compCollection.compType];
        var componentInstance = compCollection.component;
        if (compareComponent && valueStatus != ValueTypeClasses.none) {
            toolTipValue = compDiffHelper.decideTooltipContent({ componentInstance: componentInstance, toolTipValue: toolTipValue });
            compCollection.parentCompCollection.component["disabled"] = false;
            compCollection.parentCompCollection.component["toolTipContent"] = toolTipValue;
        }
        else if (compareComponent) {
            compCollection.parentCompCollection.component["disabled"] = true;
            compCollection.parentCompCollection.component["toolTipContent"] = undefined;
        }
    };
    compDiffHelper.calcComparisonClass = function (compCollection) {
        var classValue = compDiffHelper.removeValueClass(compCollection.class);
        var compareComponent = compDiffHelper.componentValueList[compCollection.compType];
        var valueCompare = compDiffHelper.getValueCompareClass({ value: compCollection.component[compareComponent.valueField], compareValue: compCollection.component[ComparisonEnum.compareValueField] });
        return { class: classValue + " ", valueCompare: valueCompare };
    };
    compDiffHelper.removeValueClass = function (componentClass) {
        var finalClass = componentClass !== null && componentClass !== void 0 ? componentClass : "";
        if (componentClass) {
            finalClass = componentClass.split("sftt-value-").join("");
        }
        return finalClass.trim();
    };
    /**
     * Compare given parameters and set the Tooltip, Chip and Label fields
     * @param compJson Reference component json
     * @param valueField Setted for the current value
     * @param compareValue Compare value
     * @param compareDataField Field that will be compared on
     * @param headerValue Whenever each column is setted, set the fields based on this param
     */
    compDiffHelper.compareAndSetFields = function (_a) {
        var compJson = _a.compJson, valueField = _a.valueField, compareValue = _a.compareValue, compareDataField = _a.compareDataField, headerValue = _a.headerValue;
        //Find the compare object from the given compareValue based on the current valueField array
        var comparableObj = compareValue.find(function (compObj) { return compObj[compareDataField] === valueField[compareDataField]; });
        if (comparableObj && compJson.c[0].P["toolTipContent"]) {
            compJson.c[0].P["toolTipContent"].H = comparableObj[headerValue];
            var comparedClass = compDiffHelper.getValueCompareClass({ value: valueField[headerValue], compareValue: comparableObj[headerValue], compareDataField: true });
            compJson.c[0].C["default"].c[0].P["color"].H = comparedClass;
            if (valueField[headerValue] !== undefined) {
                compJson.c[0].C["default"].c[0].C["default"].c[0].P["text"].H = comparedClass == ValueTypeClasses.removed ? comparableObj[headerValue] : valueField[headerValue];
            }
        }
    };
    /**
     * Create Tooltip within the VChip component if the slot is empty
     * @param compJson Current compJson
     * @param props Check slot fields on the headers prop
     */
    compDiffHelper.createChipComponentOnNonSlotChilds = function (compJson, props) {
        for (var index = 0, arrLength = props["headers"].length; index < arrLength; index++) {
            var header = props["headers"][index];
            if (!compJson.C["item." + header.value]) {
                compJson.C["item." + header.value] = { c: [compDiffHelper.createChipComponent(compJson)], cType: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.CType.scopedSlot };
            }
        }
    };
    /**
     * Create tooltip and chip component
     * @param compJson Reference component json
     */
    compDiffHelper.createChipComponent = function (compJson) {
        var chipChildComponent = { c: [{ T: "QLabel", P: { ID: { H: compJson.P.ID.H + "_compareLabel", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop }, "text": { H: " ", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop, DE: true } }, C: {}, E: {}, _Editor: { eID: compJson.P.ID.H + "_compareLabel" } }], cType: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.CType.slot };
        var chipComponent = { T: "VChip", P: { ID: { H: compJson.P.ID.H + "_compareChip", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop }, "color": { H: " ", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop, DE: true } }, E: {}, C: { "default": chipChildComponent }, _Editor: { eID: compJson.P.ID.H + "_compareChip" } };
        var tooltipComponent = { T: "Tooltip", P: { ID: { H: compJson.P.ID.H + "_compareTooltip", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop }, "toolTipContent": { H: " ", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop, DE: true }, "position": { H: "╬'top'╩╩", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop, DE: true } }, E: {}, C: { "default": { c: [chipComponent], cType: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.CType.slot } }, _Editor: { eID: compJson.P.ID.H + "_compareTooltip" } };
        return tooltipComponent;
    };
    compDiffHelper.replaceTooltipComponent = function (parentComp, childComp) {
        var childKey, childIndex;
        for (var key in parentComp.C) {
            if (Object.prototype.hasOwnProperty.call(parentComp.C, key)) {
                var children = parentComp.C[key];
                childIndex = children.c.findIndex(function (compJson) { return compJson.T == childComp.T; });
                if (childIndex != -1) {
                    childKey = key;
                    break;
                }
            }
        }
        parentComp.C[childKey].c[childIndex] = compDiffHelper.createTooltipJson(childComp);
    };
    /**
     * Creates a new tooltip json based on referenced child comp. ChildComp parameter will be placed into the new tooltip
     * @param childComp replaced component and will be referenced by new tooltip comp
     * @returns Tooltip json: ICompJson
     */
    compDiffHelper.createTooltipJson = function (childComp) {
        var tooltipJson = {
            T: ComparisonEnum.tooltipCompType,
            P: { ID: { H: childComp.P.ID.H + "_tooltip", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop }, "disabled": { H: "╬true╩╩", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop }, "position": { H: "╬'top'╩╩", T: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.PType.prop } },
            E: {},
            C: { "default": { c: [childComp], cType: _interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_0__.CType.slot } },
            _Editor: { eID: childComp._Editor.eID + "_tooltip" },
            O: {
                layout: {
                    class: "sftt-compare-value-tooltip",
                    dOpt: {}
                }
            }
        };
        return tooltipJson;
    };
    compDiffHelper.componentValueList = {
        VTextField: { labelField: ComparisonEnum.labelField, valueField: ComparisonEnum.valueField },
        VSelect: { labelField: ComparisonEnum.labelField, valueField: ComparisonEnum.valueField },
        VCombobox: { labelField: ComparisonEnum.labelField, valueField: ComparisonEnum.valueField },
        VRadioGroup: { labelField: ComparisonEnum.labelField, valueField: ComparisonEnum.valueField },
        VCheckbox: { labelField: ComparisonEnum.labelField, valueField: ComparisonEnum.valueField },
        VInlineDatepicker: { labelField: ComparisonEnum.labelField, valueField: ComparisonEnum.valueField, applyClassName: "textFieldClass" },
        VDataTable: { labelField: ComparisonEnum.labelField, valueField: "items", classCompare: true },
        VInlineTimePicker: { labelField: ComparisonEnum.labelField, valueField: "value", applyClassName: "textFieldClass" }
    };
    compDiffHelper.comparisonComponent = "QLegend";
    return compDiffHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/compUIDHelper.ts":
/*!****************************************************!*\
  !*** ../../common/shrimp/helpers/compUIDHelper.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompUIDHelper": () => (/* binding */ CompUIDHelper)
/* harmony export */ });
var CompUIDHelper = /** @class */ (function () {
    function CompUIDHelper() {
    }
    /**
     * Gets First compID from compUID.
     * @example "CustComp.MainComp.topBtn" -> {root: "CustComp", sub: "MainComp.topBtn"}
     * @example "topBtn" -> {root: "topBtn"}
     */
    CompUIDHelper.GetRootCompId = function (compUID) {
        var dotIndex = compUID.indexOf(".");
        if (dotIndex == -1) {
            return { rootCompId: compUID };
        }
        var rootCompId = compUID.substring(0, dotIndex);
        var subCompUID = compUID.substring(dotIndex + 1, compUID.length);
        return { rootCompId: rootCompId, subCompUID: subCompUID };
    };
    CompUIDHelper.CompIDConcat = function (compUIDPrefix, compId) {
        if (!compUIDPrefix) {
            return compId;
        } // carefull  "", and undefined
        return compUIDPrefix + "." + compId;
    };
    return CompUIDHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/cssHelper.ts":
/*!************************************************!*\
  !*** ../../common/shrimp/helpers/cssHelper.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CssHelper": () => (/* binding */ CssHelper)
/* harmony export */ });
var CssHelper = /** @class */ (function () {
    function CssHelper() {
    }
    CssHelper.IncludeCSS = function (cssPath) {
        var externalCSSPath = document.createElement("link");
        externalCSSPath.setAttribute("rel", "stylesheet");
        externalCSSPath.setAttribute("type", "text/css");
        externalCSSPath.setAttribute("href", cssPath);
        document.head.appendChild(externalCSSPath);
        return externalCSSPath;
    };
    CssHelper.IncludeCSSString = function (css) {
        var cssStringTag = document.createElement("style");
        cssStringTag.innerHTML = css;
        document.head.appendChild(cssStringTag);
    };
    return CssHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/customCompHelper.ts":
/*!*******************************************************!*\
  !*** ../../common/shrimp/helpers/customCompHelper.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "customCompHelper": () => (/* binding */ customCompHelper)
/* harmony export */ });
var customCompHelper = /** @class */ (function () {
    function customCompHelper() {
        this.onDeleteCompList = ["QLegend", "QCaptcha", "QDynamicFields", "QQRCode"];
        this.customCompList = ["QLegend", "QCaptcha", "QDynamicFields", "QQRCode"];
    }
    return customCompHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/domHelper.ts":
/*!************************************************!*\
  !*** ../../common/shrimp/helpers/domHelper.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DomHelper": () => (/* binding */ DomHelper)
/* harmony export */ });
function objectKeys(object) {
    return Object.keys(object);
}
;
var DomHelper = /** @class */ (function () {
    function DomHelper() {
    }
    DomHelper.CreateDom = function (tag, options) {
        return DomHelper.UpdateDom(document.createElement(tag), options);
    };
    DomHelper.UpdateDom = function (el, options) {
        if (!options) {
            return el;
        }
        if (options.id) {
            el.id = options.id;
        }
        if (options.classes) {
            options.classes.forEach(function (cls) { return el.classList.add(cls); });
        }
        if (options.children) {
            DomHelper.AppendChildren(el, options.children);
        }
        if (options.text) {
            el.innerText = options.text;
        }
        if (options.style) {
            objectKeys(options.style).forEach(function (styleKey) { return el.style[styleKey] = options.style[styleKey]; });
        }
        if (options.attrs) {
            objectKeys(options.attrs).forEach(function (attr) { return el.setAttribute(attr, options.attrs[attr]); });
        }
        if (options.events) {
            objectKeys(options.events).forEach(function (eventName) { return el.addEventListener(eventName, options.events[eventName]); });
        }
        return el;
    };
    DomHelper.CreateDiv = function (options) {
        return DomHelper.UpdateDom(document.createElement("div"), options);
    };
    DomHelper.CreateStyle = function (styleString) {
        var style = document.createElement("style");
        style.appendChild(document.createTextNode(styleString));
        return style;
    };
    DomHelper.ClearChildren = function (parent) {
        while (parent.firstChild) {
            parent.removeChild(parent.firstChild);
        }
    };
    DomHelper.AppendChildren = function (parent, children, options) {
        if (options === void 0) { options = {}; }
        if (options.clear) {
            DomHelper.ClearChildren(parent);
        }
        if (children instanceof Array) {
            children.forEach(function (child) { return parent.appendChild(child); });
        }
        else {
            parent.appendChild(children);
        }
    };
    DomHelper.ToggleClass = function (element, cls, status) {
        var add = status === true || (status === undefined && !element.classList.contains(cls));
        if (add) {
            element.classList.add(cls);
        }
        else {
            element.classList.remove(cls);
        }
        return add;
    };
    DomHelper.findCompInNodeArray = function (cb, childNodeArray) {
        if (!childNodeArray) {
            return;
        }
        for (var index = 0, arrLength = childNodeArray.length; index < arrLength; index++) {
            var childNode = childNodeArray[index];
            if (cb(childNode)) {
                return;
            }
            ;
            DomHelper.findCompInNodeArray(cb, childNode["children"]);
        }
    };
    return DomHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/download.ts":
/*!***********************************************!*\
  !*** ../../common/shrimp/helpers/download.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Download": () => (/* binding */ Download)
/* harmony export */ });
// download.js v4.21, by dandavis; 2008-2018. [MIT] see http://danml.com/download.html for tests/usage
// v1 landed a FF+Chrome compatible way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime
// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs
// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.
// v4 adds AMD/UMD, commonJS, and plain browser support
// v4.1 adds url download capability via solo URL argument (same domain/CORS only)
// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors
// https://github.com/rndme/download
var Download = /** @class */ (function () {
    function Download() {
    }
    Download.prototype.downloadInner = function (data, strFileName, strMimeType) {
        var _self = this;
        var Blob = window.Blob;
        var XMLHttpRequest = window.XMLHttpRequest;
        var self = window; // this script is only for browsers anyway...
        var defaultMime = 'application/octet-stream'; // this default mime also triggers iframe downloads
        var mimeType = strMimeType || defaultMime;
        var payload = data;
        var url = !strFileName && !strMimeType && payload;
        var anchor = document.createElement('a');
        var toString = function (a) {
            return String(a);
        };
        var MyBlob = self.Blob || self.MozBlob || self.WebKitBlob || toString;
        var fileName = strFileName || 'download';
        var blob;
        var reader;
        MyBlob = MyBlob.call ? MyBlob.bind(self) : Blob;
        if (String(this) === 'true') {
            // reverse arguments, allowing download.bind(true, "text/xml", "export.xml") to act as a callback
            payload = [payload, mimeType];
            mimeType = payload[0];
            payload = payload[1];
        }
        if (url && url.length < 2048) {
            // if no filename and no mime, assume a url was passed as the only argument
            fileName = url
                .split('/')
                .pop()
                .split('?')[0];
            anchor.href = url; // assign href prop to temp anchor
            if (anchor.href.indexOf(url) !== -1) {
                // if the browser determines that it's a potentially valid url path:
                var ajax = new XMLHttpRequest();
                ajax.open('GET', url, true);
                ajax.responseType = 'blob';
                ajax.onload = function (e) {
                    _self.downloadInner(e.target.response, fileName, defaultMime);
                };
                setTimeout(function () {
                    ajax.send();
                }, 0); // allows setting custom ajax headers using the return:
                return ajax;
            } // end if valid url?
        } // end if url?
        // go ahead and download dataURLs right away
        if (/^data:([\w+-]+\/[\w+.-]+)?[,;]/.test(payload)) {
            if (payload.length > 1024 * 1024 * 1.999 && MyBlob !== toString) {
                payload = dataUrlToBlob(payload);
                mimeType = payload.type || defaultMime;
            }
            else {
                return navigator.msSaveBlob // IE10 can't do a[download], only Blobs:
                    ? navigator.msSaveBlob(dataUrlToBlob(payload), fileName)
                    : saver(payload, null); // everyone else can save dataURLs un-processed
            }
        }
        else {
            // not data url, is it a string with special needs?
            if (/([\x80-\xff])/.test(payload)) {
                var i = 0;
                var tempUiArr = new Uint8Array(payload.length);
                var mx = tempUiArr.length;
                for (i; i < mx; ++i)
                    tempUiArr[i] = payload.charCodeAt(i);
                payload = new MyBlob([tempUiArr], { type: mimeType });
            }
        }
        blob = payload instanceof MyBlob ? payload : new MyBlob([payload], { type: mimeType });
        function dataUrlToBlob(strUrl) {
            var parts = strUrl.split(/[:;,]/);
            var type = parts[1];
            var indexDecoder = strUrl.indexOf('charset') > 0 ? 3 : 2;
            var decoder = parts[indexDecoder] === 'base64' ? window.atob : decodeURIComponent;
            var binData = decoder(parts.pop());
            var mx = binData.length;
            var i = 0;
            var uiArr = new Uint8Array(mx);
            for (i; i < mx; ++i)
                uiArr[i] = binData.charCodeAt(i);
            return new MyBlob([uiArr], { type: type });
        }
        function saver(url, winMode) {
            if ('download' in anchor) {
                // html5 A[download]
                anchor.href = url;
                anchor.setAttribute('download', fileName);
                anchor.className = 'download-js-link';
                anchor.innerHTML = 'downloading...';
                anchor.style.display = 'none';
                var listener = anchor.addEventListener('click', function (e) {
                    e.stopPropagation();
                    this.removeEventListener('click', listener);
                });
                document.body.appendChild(anchor);
                setTimeout(function () {
                    anchor.click();
                    document.body.removeChild(anchor);
                    if (winMode === true) {
                        setTimeout(function () {
                            self.URL.revokeObjectURL(anchor.href);
                        }, 250);
                    }
                }, 66);
                return true;
            }
            // handle non-a[download] safari as best we can:
            if (/(Version)\/(\d+)\.(\d+)(?:\.(\d+))?.*Safari\//.test(navigator.userAgent)) {
                if (/^data:/.test(url))
                    url = 'data:' + url.replace(/^data:([\w/\-+]+)/, defaultMime);
                if (!window.open(url)) {
                    // popup blocked, offer direct download:
                    if (window.confirm('Displaying New Document\n\nUse Save As... to download, then click back to return to this page.')) {
                        window.location.href = url;
                    }
                }
                return true;
            }
            // do iframe dataURL download (old ch+FF):
            var f = document.createElement('iframe');
            document.body.appendChild(f);
            if (!winMode && /^data:/.test(url)) {
                // force a mime that will download:
                url = 'data:' + url.replace(/^data:([\w/\-+]+)/, defaultMime);
            }
            f.src = url;
            setTimeout(function () {
                document.body.removeChild(f);
            }, 333);
        } // end saver
        if (navigator.msSaveBlob) {
            // IE10+ : (has Blob, but not a[download] or URL)
            return navigator.msSaveBlob(blob, fileName);
        }
        if (self.URL) {
            // simple fast and modern way using Blob and URL:
            saver(self.URL.createObjectURL(blob), true);
        }
        else {
            // handle non-Blob()+non-URL browsers:
            if (typeof blob === 'string' || blob.constructor === toString) {
                try {
                    return saver('data:' + mimeType + ';base64,' + self.btoa(blob), null);
                }
                catch (y) {
                    return saver('data:' + mimeType + ',' + encodeURIComponent(blob), null);
                }
            }
            // Blob but not URL support:
            reader = new window.FileReader();
            reader.onload = function (e) {
                saver(this.result, null);
            };
            reader.readAsDataURL(blob);
        }
        return true;
    }; /* end download() */
    return Download;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/hook.ts":
/*!*******************************************!*\
  !*** ../../common/shrimp/helpers/hook.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Hook": () => (/* binding */ Hook)
/* harmony export */ });
/* harmony import */ var _catcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./catcher */ "../../common/shrimp/helpers/catcher.ts");
/* harmony import */ var _stringHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringHelper */ "../../common/shrimp/helpers/stringHelper.ts");


var Hook = /** @class */ (function () {
    function Hook(hookName, options) {
        if (options === void 0) { options = {}; }
        this.subscribers = [];
        this.hookStateListeners = [];
        this.hookName = hookName;
        this.triggerPostSubscribersWithCb = options.triggerPostSubscribersWithCb || false;
        options.manageState = options.manageState || false;
        this.hookState = { triggered: false, triggerArgs: [], active: options.manageState };
    }
    Object.defineProperty(Hook.prototype, "TriggerPostSubscribersWithCb", {
        get: function () {
            return this.triggerPostSubscribersWithCb;
        },
        set: function (v) {
            this.triggerPostSubscribersWithCb = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Hook.prototype, "subscriberCount", {
        get: function () {
            return this.subscribers.length;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Hook.prototype, "hasSubscribers", {
        get: function () {
            return this.subscriberCount > 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Hook.prototype, "hasPostSubscribers", {
        get: function () {
            var _a, _b;
            return (((_a = this.postSubscribers) === null || _a === void 0 ? void 0 : _a.hasPostSubscribers) || ((_b = this.postSubscribers) === null || _b === void 0 ? void 0 : _b.hasSubscribers)) === true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Hook.prototype, "triggerer", {
        get: function () {
            return this.trigger;
        },
        enumerable: false,
        configurable: true
    });
    Hook.prototype.trigger = function () {
        var _this = this;
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (this.hookState.active) {
            this.hookState.triggered = true;
            this.hookState.triggerArgs = args;
        }
        this.subscribers.forEach(function (sub) { return _this.tryTriggerSubscriber(sub, args); });
        if (!this.triggerPostSubscribersWithCb)
            (_a = this.postSubscribers) === null || _a === void 0 ? void 0 : _a.triggerer.apply(this.postSubscribers, args);
    };
    Hook.prototype.tryTriggerSubscriber = function (sub, args) {
        var _this = this;
        _catcher__WEBPACK_IMPORTED_MODULE_0__.catcher.tryLog({ cb: function () { return sub.apply(null, args); }, catchLog: function () { return _this.getHookName() + " subscriber failed"; } });
    };
    Hook.prototype.getHookName = function () {
        var retVal = this.hookName;
        if (!_stringHelper__WEBPACK_IMPORTED_MODULE_1__.StringHelper.endsWith(retVal.toLowerCase(), "hook")) {
            retVal += " hook";
        }
        return retVal;
    };
    Hook.prototype.ResetAndStartState = function () {
        this.hookState.triggerArgs = [];
        this.hookState.active = true;
        this.hookState.triggered = false;
        this.hookStateListeners.forEach(function (cb) { return cb.apply(null); });
    };
    Hook.prototype.DisableState = function () {
        this.hookState.triggerArgs = [];
        this.hookState.active = false;
        this.hookState.triggered = false;
    };
    Hook.prototype.IsTriggered = function () {
        if (!this.hookState.active) {
            throw new Error("IsTriggered can not be checked on a non manageState Hook: " + this.hookName);
        }
        return this.hookState.triggered;
    };
    Hook.prototype.triggerPostSubscribers = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.postSubscribers) === null || _a === void 0 ? void 0 : _a.triggerer.apply(this.postSubscribers, args);
    };
    //#region subscribers
    Hook.prototype.subscribe = function (cb) {
        this.subscribers.push(cb);
        this.hookState.active && this.hookState.triggered && this.tryTriggerSubscriber(cb, this.hookState.triggerArgs);
    };
    Hook.prototype.unsubscribe = function (cb) {
        this.subscribers = this.subscribers.filter(function (sub) { return sub != cb; }); // splice is fastest but this is safest, because of immutability, because of forEach traversals
    };
    Hook.prototype.clearSubscribers = function () {
        this.subscribers = [];
    };
    //#endregion
    //#region postSubscribers
    Hook.prototype.postSubscribe = function (cb) {
        if (!this.postSubscribers) {
            this.postSubscribers = new Hook(this.hookName + "_Post", { manageState: this.hookState.active });
            this.postSubscribers.hookState = this.hookState;
        }
        this.postSubscribers.subscribe(cb);
    };
    Hook.prototype.postUnsubscribe = function (cb) {
        var _a;
        (_a = this.postSubscribers) === null || _a === void 0 ? void 0 : _a.unsubscribe(cb);
    };
    Hook.prototype.clearPostSubscribers = function (forced) {
        var _a;
        if (forced === void 0) { forced = false; }
        (_a = this.postSubscribers) === null || _a === void 0 ? void 0 : _a.clearSubscribers();
        if (forced || !this.hasPostSubscribers) {
            this.postSubscribers = undefined;
        }
    };
    //#endregion
    Hook.prototype.listenHookState = function (cb) {
        this.hookStateListeners.push(cb);
    };
    Hook.prototype.forceClearAllSubscibers = function () {
        this.clearPostSubscribers(true);
        this.clearSubscribers();
    };
    return Hook;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/httpHeaderHelper.ts":
/*!*******************************************************!*\
  !*** ../../common/shrimp/helpers/httpHeaderHelper.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HTTPHeader": () => (/* binding */ HTTPHeader)
/* harmony export */ });
var HTTPHeader = /** @class */ (function () {
    function HTTPHeader() {
    }
    HTTPHeader.createDefaultHeaders = function (dory, request) {
        request.headers = request.headers || {};
        request.headers["Content-Language"] = request.headers["Content-Language"] || dory.GetLRType();
    };
    return HTTPHeader;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/layoutBarHelper.ts":
/*!******************************************************!*\
  !*** ../../common/shrimp/helpers/layoutBarHelper.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LayoutOption": () => (/* binding */ LayoutOption),
/* harmony export */   "alignOptions": () => (/* binding */ alignOptions),
/* harmony export */   "columnOptions": () => (/* binding */ columnOptions),
/* harmony export */   "directionOptions": () => (/* binding */ directionOptions),
/* harmony export */   "getOptionsClass": () => (/* binding */ getOptionsClass),
/* harmony export */   "justifyOptions": () => (/* binding */ justifyOptions),
/* harmony export */   "layoutBarComponentClassList": () => (/* binding */ layoutBarComponentClassList),
/* harmony export */   "spacingOptionsPrefix": () => (/* binding */ spacingOptionsPrefix),
/* harmony export */   "spacingPrefix": () => (/* binding */ spacingPrefix),
/* harmony export */   "textColorOptions": () => (/* binding */ textColorOptions),
/* harmony export */   "textEmphasisOptions": () => (/* binding */ textEmphasisOptions),
/* harmony export */   "typographyOptions": () => (/* binding */ typographyOptions),
/* harmony export */   "wrapOptions": () => (/* binding */ wrapOptions)
/* harmony export */ });
var LayoutOption;
(function (LayoutOption) {
    LayoutOption["display"] = "d";
    LayoutOption["column"] = "c";
    LayoutOption["flexDirection"] = "fd";
    LayoutOption["align"] = "a";
    LayoutOption["justify"] = "j";
    LayoutOption["wrap"] = "w";
    LayoutOption["spacing"] = "sp";
    LayoutOption["textTypography"] = "tt";
    LayoutOption["textColor"] = "tc";
    LayoutOption["textEmphasis"] = "te";
    LayoutOption["marginTop"] = "mt";
    LayoutOption["marginRight"] = "mr";
    LayoutOption["marginBottom"] = "mb";
    LayoutOption["marginLeft"] = "ml";
    LayoutOption["marginAll"] = "ma";
    LayoutOption["paddingTop"] = "pt";
    LayoutOption["paddingRight"] = "pr";
    LayoutOption["paddingBottom"] = "pb";
    LayoutOption["paddingLeft"] = "pl";
    LayoutOption["paddingAll"] = "pa";
    LayoutOption["italic"] = "fi";
})(LayoutOption || (LayoutOption = {}));
var spacingPrefix = "sp";
var colPrefix = "col-";
var displayOptions = [{ text: "", key: "d-flex" }];
var columnOptions = [{ text: "0", key: "d-none" }, { text: "1", key: "col-1" }, { text: "2", key: "col-2" }, { text: "3", key: "col-3" }, { text: "4", key: "col-4" }, { text: "5", key: "col-5" }, { text: "6", key: "col-6" }, { text: "7", key: "col-7" }, { text: "8", key: "col-8" }, { text: "9", key: "col-9" }, { text: "10", key: "col-10" }, { text: "11", key: "col-11" }, { text: "12", key: "col-12" }, { text: "auto", key: "col-auto" }];
var directionOptions = [{ text: "Horizontal", key: "flex-row", iconClass: "mdi mdi20 mdi-chevron-triple-right" }, { text: "Vertical", key: "flex-column", iconClass: "mdi mdi20 mdi-chevron-triple-down" }];
var justifyOptions = [{ text: "Start", key: "justify-start", iconClass: "icon icon-justify-horizontal-start" }, { text: "End", key: "justify-end", iconClass: "icon icon-justify-horizontal-end" }, { text: "Center", key: "justify-center", iconClass: "icon icon-justify-horizontal-center" }, { text: "Space Between", key: "justify-space-between", iconClass: "icon icon-horizontal-space-between" }, { text: "Space Arround", key: "justify-space-around", iconClass: "icon icon-horizontal-space-around" }];
var alignOptions = [{ text: "Start", key: "align-start", iconClass: "icon icon-align-vertical-top" }, { text: "End", key: "align-end", iconClass: "icon icon-align-vertical-bottom" }, { text: "Center", key: "align-center", iconClass: "icon icon-align-vertical-center" }, { text: "Stretch", key: "align-stretch", iconClass: "icon icon-stretch-vertical" }, { text: "Baseline", key: "align-baseline", iconClass: "icon icon-baseline-top" }];
var wrapOptions = [{ text: "No Wrap", key: "flex-nowrap" }, { text: "Wrap", key: "flex-wrap" }];
var typographyOptions = [{ text: "", key: "" }, { text: "Heading 1", key: "text-h1" }, { text: "Heading 2", key: "text-h2" }, { text: "Heading 3", key: "text-h3" }, { text: "Heading 4", key: "text-h4" }, { text: "Heading 5", key: "text-h5" }, { text: "Heading 6", key: "text-h6" }, { text: "Subtitle 1", key: "text-subtitle-1" }, { text: "Subtitle 2", key: "text-subtitle-2" }, { text: "Body 1", key: "text-body-1" }, { text: "Body 2", key: "text-body-2" }, { text: "Button", key: "text-button" }, { text: "Caption", key: "text-caption" }, { text: "Overline", key: "text-overline" }];
var textColorOptions = [{ text: "", key: "" }, { text: "primary", key: "primary--text" }, { text: "Secondary", key: "secondary--text" }, { text: "Accent", key: "accent--text" }, { text: "Success", key: "success--text" }, { text: "Error", key: "error--text" }, { text: "Info", key: "info--text" }, { text: "Warning", key: "warning--text" }];
var textEmphasisOptions = [{ text: "Black", key: "font-weight-black" }, { text: "Bold", key: "font-weight-bold" }, { text: "Medium", key: "font-weight-medium" }, { text: "Regular", key: "font-weight-regular" }, { text: "Light", key: "font-weight-light" }, { text: "Thin", key: "font-weight-thin" }];
var spacingOptionsPrefix = ["mt-", "mr-", "mb-", "ml-", "ma-", "pt-", "pr-", "pb-", "pl-", "pa-"];
var allComponentClassList = {};
allComponentClassList[spacingPrefix] = spacingOptionsPrefix;
var qlabelClassList = {};
qlabelClassList[LayoutOption.textTypography] = typographyOptions.map(function (opt) { return opt.key; });
qlabelClassList[LayoutOption.textColor] = textColorOptions.map(function (opt) { return opt.key; });
qlabelClassList[LayoutOption.textEmphasis] = textEmphasisOptions.map(function (opt) { return opt.key; });
var vColClassList = {};
vColClassList[LayoutOption.display] = displayOptions.map(function (opt) { return opt.key; });
vColClassList[LayoutOption.column] = columnOptions.map(function (opt) { return opt.key; });
vColClassList[LayoutOption.flexDirection] = directionOptions.map(function (opt) { return opt.key; });
vColClassList[LayoutOption.justify] = justifyOptions.map(function (opt) { return opt.key; });
vColClassList[LayoutOption.align] = alignOptions.map(function (opt) { return opt.key; });
var layoutBarComponentClassList = {};
layoutBarComponentClassList["All"] = allComponentClassList;
layoutBarComponentClassList["QLabel"] = qlabelClassList;
layoutBarComponentClassList["VCol"] = vColClassList;
function getOptionsClass(dOpt) {
    var tempOpt = [];
    Object.keys(dOpt).forEach(function (key) {
        var options = [];
        dOpt[key].forEach(function (opt) {
            //from 'fd:flex-row' to 'flex-row' and "te:font-bold,fontblack" to [font-bold, font-black] 
            var splitOpt = opt.split(":");
            splitOpt[1].split(",").forEach(function (sOpt) {
                options.push(sOpt);
            });
        });
        if (key === "xs") {
            tempOpt = tempOpt.concat(options);
        }
        else {
            options.forEach(function (opt) {
                //from 'flex-row' to flex-{breakpoint}-row
                var splitOpt = opt.split("-");
                splitOpt.splice(1, 0, key);
                tempOpt.push(splitOpt.join("-"));
            });
        }
    });
    return tempOpt.join(" ");
}



/***/ }),

/***/ "../../common/shrimp/helpers/logger.ts":
/*!*********************************************!*\
  !*** ../../common/shrimp/helpers/logger.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogType": () => (/* reexport safe */ _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType),
/* harmony export */   "Logger": () => (/* binding */ Logger)
/* harmony export */ });
/* harmony import */ var _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interfaces/ComponentInterfaces/ILogger */ "../../common/shrimp/interfaces/ComponentInterfaces/ILogger.ts");
/* harmony import */ var _bulkManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bulkManager */ "../../common/shrimp/helpers/bulkManager.ts");
/* harmony import */ var _windowHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./windowHelper */ "../../common/shrimp/helpers/windowHelper.ts");



// Log type values are equal to their acceptable byte size
// 1 char * 2 = 1 byte

var Singularizer = /** @class */ (function () {
    function Singularizer() {
    }
    Singularizer.trySingularize = function (name, instance) {
        if (!this.singularized(name)) {
            _windowHelper__WEBPACK_IMPORTED_MODULE_2__.WindowHelper.Instance.Window[name] = instance;
            return true;
        }
        return false;
    };
    Singularizer.singularized = function (name) {
        return _windowHelper__WEBPACK_IMPORTED_MODULE_2__.WindowHelper.Instance.Window[name];
    };
    Singularizer.getFreeName = function (name) {
        var _a;
        var win = (_a = _windowHelper__WEBPACK_IMPORTED_MODULE_2__.WindowHelper === null || _windowHelper__WEBPACK_IMPORTED_MODULE_2__.WindowHelper === void 0 ? void 0 : _windowHelper__WEBPACK_IMPORTED_MODULE_2__.WindowHelper.Instance.Window) !== null && _a !== void 0 ? _a : {};
        var counter = 0;
        while (win[name + "_" + ++counter])
            ;
        return name + "_" + counter;
    };
    return Singularizer;
}());
var Logger = /** @class */ (function () {
    function Logger() {
        // i know this functions are static but in rallyshell we have shrimp not quick_shrimp.
        // and the first caller of the functions are throws 'not implemented exception' because of lazy load.
        return { Log: this.Log };
    }
    Object.defineProperty(Logger, "LogBulkManager", {
        get: function () {
            if (!Logger.logBulkManager) {
                Logger.logBulkManager = Singularizer.singularized(Logger.windowName);
            }
            return Logger.logBulkManager;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Whenever the shell initiates its callback, this handling also will be initiated as well
     * ? Static may change? Will see
     * @param timer Seconds of writing down the messages
     * @param callBack Function that handles the messages, comes from shell.
     */
    Logger.Init = function (_a) {
        var callBack = _a.callBack, clear = _a.clear;
        this.logBulkManager = new _bulkManager__WEBPACK_IMPORTED_MODULE_1__.BulkManager();
        this.logBulkManager.logHandler = callBack;
        Singularizer.trySingularize(this.windowName, this.logBulkManager);
    };
    /**
     * Console log function
     * @param logMessage Message that to be written to the console
     * @param logType console type(Debug, Trace, Warning, Error)
     * @param backgroundColor message background color
     * @param color message text color
     * @param additional additional info for logging
     * @param yamlLogType
     * @returns void
     */
    Logger.Log = function (_a) {
        var logMessage = _a.logMessage, _b = _a.logType, logType = _b === void 0 ? _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Trace : _b, error = _a.error, _c = _a.backgroundColor, backgroundColor = _c === void 0 ? null : _c, _d = _a.textColor, textColor = _d === void 0 ? null : _d, _e = _a.additional, additional = _e === void 0 ? null : _e, source = _a.source, _f = _a.isClientLog, isClientLog = _f === void 0 ? false : _f, yamlLogType = _a.yamlLogType, minEngineLogLevel = _a.minEngineLogLevel;
        var colorOptions = backgroundColor || textColor ? "background: " + backgroundColor + "; color: " + textColor : null;
        var targetLog;
        switch (true) {
            case logType == _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.MobilDebug && this.logLevel.indexOf(_interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.MobilDebug) > -1:
                targetLog = console.log;
                break;
            case (logType == _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Debug && this.logLevel.indexOf(_interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Debug) > -1):
            case (logType == _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Trace && this.logLevel.indexOf(_interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Trace) > -1):
                targetLog = console.log;
                break;
            case (logType == _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error && this.logLevel.indexOf(_interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error) > -1):
                targetLog = console.error;
                break;
            case (logType == _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning && this.logLevel.indexOf(_interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning) > -1):
                targetLog = console.warn;
                break;
            case true:
                break;
        }
        var params = [logMessage];
        if (colorOptions && typeof logMessage === "string") {
            params[0] = '%c' + logMessage;
            params.push(colorOptions);
        }
        if (error) {
            params.push(error);
        }
        if (additional) {
            params.push(additional);
        }
        if (source) { // MUST BE LAST!!!! (used in mobile sim. -> editor logging)
            params.push({ source: source });
        }
        targetLog === null || targetLog === void 0 ? void 0 : targetLog.apply(console, params);
        if (isClientLog || (isClientLog && yamlLogType && yamlLogType <= logType) || minEngineLogLevel && minEngineLogLevel <= logType) {
            this.prepareClientLog(logMessage, logType);
        }
    };
    /**
     * Log messages are controlled by their size and add them to the bulk array with type, date and caller function name
     * @param logMessage Message that will be written to the server
     * @param logType Type of log message
     */
    Logger.prepareClientLog = function (logMessage, logType) {
        var _a;
        var currentDateFormat = new Date(Date.now());
        var clientDate = currentDateFormat.getFullYear() + "." + ("0" + (currentDateFormat.getMonth() + 1)).slice(-2) + "." + ("0" + currentDateFormat.getDate()).slice(-2) + " " +
            currentDateFormat.getHours() + ':' + ("0" + currentDateFormat.getMinutes()).slice(-2) + ':' + ("0" + currentDateFormat.getSeconds()).slice(-2) + ':' + currentDateFormat.getMilliseconds();
        ;
        var message;
        var whoCallMe = this.getCalleFunctionName();
        if (typeof logMessage !== "string" && logType > 0) {
            try {
                message = this.shorten(JSON.stringify(logMessage), logType);
            }
            catch (error) {
                message = "Can not stringfy the given log. Type of log data is: " + Object.prototype.toString.call(logMessage);
            }
        }
        else {
            message = this.shorten(logMessage, logType);
        }
        (_a = Logger.LogBulkManager) === null || _a === void 0 ? void 0 : _a.writeMessage({ message: message, type: _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType[logType], time: clientDate, caller: whoCallMe });
    };
    /**
     * Can't call Log.calle.caller beacuse of the TypeScript classes are on "strict mode"
     * JS doesn't allow to arguments.callee.caller on strict mode
     * So just throw an simple Error and get the latest function name
     * returns String
     */
    Logger.getCalleFunctionName = function () {
        // try {
        //     throw new Error();
        // }
        // catch (e) {
        //     try {
        //         return e.stack.split('at ')[4].split(' ')[0];
        //     } catch (e) {
        //         return '';
        //     }
        // }
        return '';
    };
    /**
     * Clears the bulk of messages
     */
    Logger.clearLogs = function () {
        var _a, _b;
        (_b = (_a = Logger.LogBulkManager) === null || _a === void 0 ? void 0 : _a.clear) === null || _b === void 0 ? void 0 : _b.call(_a);
    };
    /**
     * Trim the message with size of the log type
     * @param logMessage log message
     * @param logType Log type that will be controlled
     */
    Logger.shorten = function (logMessage, logType) {
        if (logType > logMessage.length) {
            return logMessage;
        }
        else {
            return "Non trimmed message size is: " + logMessage.length;
        }
    };
    ;
    /**
     * @deprecated do not use. Use Logger.Log(...)
     */
    Logger.prototype.Log = function (options) {
        return Logger.Log(options);
    };
    Logger.windowName = Singularizer.getFreeName("shrimp_shelldorynemo_pulsar_lbm");
    Logger.logLevel = [_interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.MobilDebug, _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Trace, _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Debug, _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning, _interfaces_ComponentInterfaces_ILogger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error];
    return Logger;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/namedComponentHelper.ts":
/*!***********************************************************!*\
  !*** ../../common/shrimp/helpers/namedComponentHelper.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NamedComponentHelper": () => (/* binding */ NamedComponentHelper)
/* harmony export */ });
/* harmony import */ var _interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interfaces/IPromiseData */ "../../common/shrimp/interfaces/IPromiseData.ts");
/* harmony import */ var _JSLoader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./JSLoader */ "../../common/shrimp/helpers/JSLoader.ts");


var NamedComponentHelper = /** @class */ (function () {
    function NamedComponentHelper() {
    }
    NamedComponentHelper.prototype.loadNamedComponent = function (compName, compPath, options, compVersion) {
        var prom = (0,_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_0__.CreatePromiseData)();
        var compModuleCb = function (module) { return prom.resolver(module); };
        if (options.compModel) {
            var script = document.createElement("script");
            if (!options.compModel.files) {
                return undefined;
            }
            script.innerHTML = options.compModel.files[compName + ".js"]; // web is packed
            script["data-custom-onload"] = compModuleCb;
            try {
                document.head.appendChild(script);
                script.src = compName; //if document.currentScript fails, fallback to src search code inside component pack.
            }
            catch (ex) {
                prom.reject(ex);
            }
        }
        else {
            var options_1 = { scriptTagProps: { "data-custom-onload": compModuleCb } };
            new _JSLoader__WEBPACK_IMPORTED_MODULE_1__.JSLoader(compPath, undefined, function (evt) { prom.reject(evt); }, 1, true, compVersion !== null && compVersion !== void 0 ? compVersion : new Date().getTime(), options_1).LoadJS();
        }
        return prom.promise;
    };
    return NamedComponentHelper;
}());

/* Named Comp Test helper
{
    "T": "Hello","C": {},"E": {},
    "P": {"ID": {"H": "EdtrComp_4634","T": "prop"}},
    "_Editor": {"eID": "EdtrComp_4634"},"O": {"cType": "child"}
},

gm_28353825.pimManager.pims.Hello = {Component: {Name: "Hello", ID: 123213, HasInfo: false,IconUrl:"",CompPath: "alper:id1",Properties: []}}
fetch("http://127.0.0.1:5501/packages/flowComponents/dist/hello.js").then(response => response.text().then(body => window.alper= body))


window.postMessage({id: "123", msg: {type: "getNamedCompResponse", compModel: {pim: {}, files: {"hello.js": alper}}}, replyId: ev.data.id}, "*")
*/


/***/ }),

/***/ "../../common/shrimp/helpers/objectInjectionHelper.ts":
/*!************************************************************!*\
  !*** ../../common/shrimp/helpers/objectInjectionHelper.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ObjectInjectionHelper": () => (/* binding */ ObjectInjectionHelper)
/* harmony export */ });
var ObjectInjectionHelper = /** @class */ (function () {
    function ObjectInjectionHelper() {
    }
    ObjectInjectionHelper.injectMethod = function (obj, methodName, cb, options) {
        if (options === void 0) { options = { override: false }; }
        // debugger
        // if(!options.override){
        //     throw new Error ("This method already exists, you cannot override it.")
        // }
        Object.defineProperty(obj, methodName, { set: function () { }, get: function () { return cb; } });
    };
    return ObjectInjectionHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/objectStore.ts":
/*!**************************************************!*\
  !*** ../../common/shrimp/helpers/objectStore.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GetObjectStore": () => (/* binding */ GetObjectStore)
/* harmony export */ });
var appWideStore;
/**
 * project wide object store helper
 */
function GetObjectStore() {
    return appWideStore || (appWideStore = new ObjectStore());
}
var ObjectData = /** @class */ (function () {
    function ObjectData(value) {
        this.watches = [];
        this.value = value;
    }
    ObjectData.prototype.getValue = function () {
        return this.value;
    };
    ObjectData.prototype.addWatch = function (cb) {
        this.watches.push(cb);
    };
    ObjectData.prototype.setValue = function (value) {
        var _this = this;
        var oldValue = this.value;
        this.value = value;
        this.watches.forEach(function (cb) { return cb(_this.value, oldValue); });
    };
    return ObjectData;
}());
var ObjectStore = /** @class */ (function () {
    function ObjectStore() {
        this.data = {};
    }
    ObjectStore.prototype.getObject = function (name, create) {
        if (create === void 0) { create = true; }
        var object = this.data[name];
        if (!object && create) {
            object = new ObjectData(null);
            this.data[name] = object;
        }
        return object;
    };
    ObjectStore.prototype.retrieveObject = function (name) {
        var object = this.getObject(name, false);
        return object && object.getValue();
    };
    ObjectStore.prototype.storeObject = function (name, value) {
        var object = this.getObject(name);
        object.setValue(value);
        return object;
    };
    ObjectStore.prototype.watch = function (name, cb) {
        var object = this.getObject(name);
        object.addWatch(cb);
        return object;
    };
    return ObjectStore;
}());


/***/ }),

/***/ "../../common/shrimp/helpers/scripting/PageScripting.ts":
/*!**************************************************************!*\
  !*** ../../common/shrimp/helpers/scripting/PageScripting.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PageScripting": () => (/* binding */ PageScripting)
/* harmony export */ });
var PageScripting = /** @class */ (function () {
    function PageScripting(cFiles) {
        this.cFiles = cFiles;
    }
    PageScripting.prototype.GetPageClass = function () {
        if (this.pageClassGenerated) {
            return this.pageClass;
        }
        this.pageClass = this.createPageClass();
        this.pageClassGenerated = true;
        return this.pageClass;
    };
    PageScripting.prototype.GetPageInstance = function () {
        if (this.pageInst) {
            return this.pageInst;
        }
        return this.pageInst = this.createPageInstance();
    };
    PageScripting.prototype.createPageInstance = function () {
        var pageClass = this.GetPageClass();
        if (!pageClass) {
            return undefined;
        }
        var pageInst = new pageClass();
        return pageInst;
    };
    PageScripting.prototype.createPageClass = function () {
        if (!this.cFiles) {
            return undefined;
        }
        var cFiles = this.cFiles;
        var script = Object.keys(cFiles).map(function (fileName) { return cFiles[fileName]; }).join("\r\n");
        var pageGenerator = new Function("exports", script);
        var exports = {};
        pageGenerator(exports);
        if (!exports.Page) {
            return undefined;
        }
        return exports.Page;
    };
    return PageScripting;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/shellHelper.ts":
/*!**************************************************!*\
  !*** ../../common/shrimp/helpers/shellHelper.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fixShell": () => (/* binding */ fixShell)
/* harmony export */ });
function fixShell(shell) {
    if (!shell.getUserContext) {
        var userContext_1 = { userId: "" };
        shell.getUserContext = function () { return userContext_1; };
        shell.setUserContext = function (user) { userContext_1 = user; };
    }
}



/***/ }),

/***/ "../../common/shrimp/helpers/singularizer.ts":
/*!***************************************************!*\
  !*** ../../common/shrimp/helpers/singularizer.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Singularizer": () => (/* binding */ Singularizer)
/* harmony export */ });
var Singularizer = /** @class */ (function () {
    function Singularizer() {
    }
    Singularizer.trySingularize = function (name, targetObject, instance) {
        var retVal = targetObject[name];
        if (!retVal) {
            retVal = targetObject[name] = instance;
        }
        return retVal;
    };
    return Singularizer;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/stringHelper.ts":
/*!***************************************************!*\
  !*** ../../common/shrimp/helpers/stringHelper.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StringHelper": () => (/* binding */ StringHelper)
/* harmony export */ });
/* harmony import */ var _arrayHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayHelper */ "../../common/shrimp/helpers/arrayHelper.ts");

var StringHelper = /** @class */ (function () {
    function StringHelper() {
    }
    /** Function that count occurrences of a substring in a string;
     * @author Vitim.us https://gist.github.com/victornpb/7736865
     * @see http://stackoverflow.com/questions/4009756/how-to-count-string-occurrence-in-string/7924240#7924240
     */
    StringHelper.OccurenceCount = function (value, searchString, allowOverlapping) {
        value += "";
        searchString += "";
        if (searchString.length <= 0)
            return (value.length + 1);
        var n = 0, pos = 0, step = allowOverlapping ? 1 : searchString.length;
        while (true) {
            pos = value.indexOf(searchString, pos);
            if (pos >= 0) {
                ++n;
                pos += step;
            }
            else
                break;
        }
        return n;
    };
    StringHelper.RepeatString = function (value, repeatCount) {
        return _arrayHelper__WEBPACK_IMPORTED_MODULE_0__.ArrayHelper.InitEmptyArray(repeatCount + 1).join(value);
    };
    StringHelper.TrimStart = function (str, removeString) {
        if (!str || !removeString) {
            return str;
        }
        while (true) {
            var index = str.indexOf(removeString);
            if (index != 0) {
                return str;
            }
            str = str.substring(removeString.length);
        }
    };
    StringHelper.endsWith = function (self, search, this_len) {
        if (this_len === undefined || this_len > self.length) {
            this_len = self.length;
        }
        return self.substring(this_len - search.length, this_len) === search;
    };
    /**
     * Returns a random string
     * @param length Length of generated random string
     */
    StringHelper.randomStringGenerator = function (length) {
        var result = '';
        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        var charactersLength = characters.length;
        for (var i = 0; i < length; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        return result;
    };
    StringHelper.capitalizeString = function (input) {
        ///<summary>Capitialize first letter of a string</summary>
        return input.charAt(0).toUpperCase() + input.slice(1);
    };
    ;
    /**
     * Change char in string
     * @param str String that to be changed
     * @param index Index of string
     * @param chr Char
     */
    StringHelper.setCharAt = function (str, index, chr) {
        if (index < 0) {
            return str;
        }
        if (index > str.length) {
            index = str.length - 1;
        }
        return str.substr(0, index) + chr + str.substr(index + 1);
    };
    return StringHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/thresholdedTrigger.ts":
/*!*********************************************************!*\
  !*** ../../common/shrimp/helpers/thresholdedTrigger.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "thresholdedTrigger": () => (/* binding */ thresholdedTrigger)
/* harmony export */ });
function thresholdedTrigger(id, cb, msTimeout) {
    if (id) {
        clearTimeout(id);
    }
    var timerId = setTimeout(cb, msTimeout);
    return timerId;
}


/***/ }),

/***/ "../../common/shrimp/helpers/typeHelper.ts":
/*!*************************************************!*\
  !*** ../../common/shrimp/helpers/typeHelper.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TypeHelper": () => (/* binding */ TypeHelper)
/* harmony export */ });
var TypeHelper = /** @class */ (function () {
    function TypeHelper() {
    }
    TypeHelper.prototype.isJsonString = function (param) {
        try {
            JSON.parse(param);
        }
        catch (e) {
            return false;
        }
        return true;
    };
    TypeHelper.prototype.GetObjectType = function (param) {
        return Object.prototype.toString.call(param);
    };
    ;
    /** @deprecated use instanceof for typescript type distinction intellisense. ex: if (variable instanceof Array)*/
    TypeHelper.prototype.isArray = function (param) {
        return this.GetObjectType(param) == "[object Array]";
    };
    ;
    TypeHelper.prototype.isString = function (param) {
        return this.GetObjectType(param) === "[object String]";
    };
    ;
    TypeHelper.prototype.isNumber = function (param) {
        return this.GetObjectType(param) === "[object Number]";
    };
    ;
    TypeHelper.prototype.isNull = function (param) {
        return param === null || param === undefined;
    };
    ;
    TypeHelper.prototype.isFunction = function (param) {
        return this.GetObjectType(param) === "[object Function]";
    };
    ;
    TypeHelper.prototype.isObject = function (param) {
        return this.GetObjectType(param) === "[object Object]";
    };
    ;
    TypeHelper.prototype.isBool = function (param) {
        return this.GetObjectType(param) === "[object Boolean]";
    };
    ;
    TypeHelper.prototype.isBooleanConstructor = function (param) {
        return (param === null || param === void 0 ? void 0 : param.toString()) == "function Boolean() { [native code] }";
    };
    TypeHelper.prototype.isStringConstructor = function (param) {
        return (param === null || param === void 0 ? void 0 : param.toString()) == "function String() { [native code] }";
    };
    TypeHelper.prototype.isArrayConstructor = function (param) {
        return (param === null || param === void 0 ? void 0 : param.toString()) == "function Array() { [native code] }";
    };
    TypeHelper.prototype.isObjectConstructor = function (param) {
        return (param === null || param === void 0 ? void 0 : param.toString()) == "function Object() { [native code] }";
    };
    TypeHelper.prototype.isNumberConstructor = function (param) {
        return (param === null || param === void 0 ? void 0 : param.toString()) == "function Number() { [native code] }";
    };
    TypeHelper.prototype.isDateString = function (param) {
        if (!this.isString(param)) {
            return false;
        }
        return !isNaN(Date.parse(param));
    };
    ;
    TypeHelper.prototype.isDate = function (param) {
        return this.GetObjectType(param) === "[object Date]";
    };
    TypeHelper.prototype.isFile = function (param) {
        return this.GetObjectType(param) === "[object File]";
    };
    TypeHelper.prototype.isBlob = function (param) {
        var MyBlob = new Blob([param]);
        return MyBlob instanceof Blob; // true
    };
    TypeHelper.prototype.cloneObject = function (obj) {
        var copy;
        // Handle the 3 simple types, and null or undefined
        if (null == obj || "object" != typeof obj) {
            return obj;
        }
        // Handle Date
        if (obj instanceof Date) {
            copy = new Date();
            copy.setTime(obj.getTime());
            return copy;
        }
        // Handle Array
        if (Array.isArray(obj)) {
            copy = [];
            for (var i = 0, len = obj.length; i < len; i++) {
                copy[i] = this.cloneObject(obj[i]);
            }
            return copy;
        }
        // Handle Object
        if (typeof obj === "object") {
            copy = obj.constructor && obj.constructor.length < 1 ? new obj.constructor() : {};
            for (var attr in obj) {
                if (obj.hasOwnProperty(attr)) {
                    copy[attr] = this.cloneObject(obj[attr]);
                }
            }
            return copy;
        }
        throw new Error("Unable to copy obj! Its type isn't supported.");
    };
    ;
    return TypeHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/validationHelper.ts":
/*!*******************************************************!*\
  !*** ../../common/shrimp/helpers/validationHelper.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ValidationHelper": () => (/* binding */ ValidationHelper)
/* harmony export */ });
var ValidationHelper = /** @class */ (function () {
    function ValidationHelper() {
    }
    ValidationHelper.prototype.checkVKN = function (kno) {
        var v1 = 0;
        var v2 = 0;
        var v3 = 0;
        var v4 = 0;
        var v5 = 0;
        var v6 = 0;
        var v7 = 0;
        var v8 = 0;
        var v9 = 0;
        var v11 = 0;
        var v22 = 0;
        var v33 = 0;
        var v44 = 0;
        var v55 = 0;
        var v66 = 0;
        var v77 = 0;
        var v88 = 0;
        var v99 = 0;
        var v_last_digit = 0;
        var toplam = 0;
        /* desen isimli düzenli ifade cümleciği kodun bu versiyonunda, ileriki satırlarda kullanılmamaktadır. Ancak; kullanıcı tarafından sisteme belirtilen değerin, sayısal bir değer olup olmadığını kontrol etmek için, basamak işlemlerinden hemen önce desen.test(kno.charAt(basamaksayisi)) şeklinde kullanabilirsiniz. Uyarı için desenz 'e teşekkürler. */
        var desen = /[0-9]{10}/;
        if (kno) {
            //kno = (<string>kno).padStart(10, '0');
            if (kno.length == 10) {
                v1 = (Number(kno.charAt(0)) + 9) % 10;
                v2 = (Number(kno.charAt(1)) + 8) % 10;
                v3 = (Number(kno.charAt(2)) + 7) % 10;
                v4 = (Number(kno.charAt(3)) + 6) % 10;
                v5 = (Number(kno.charAt(4)) + 5) % 10;
                v6 = (Number(kno.charAt(5)) + 4) % 10;
                v7 = (Number(kno.charAt(6)) + 3) % 10;
                v8 = (Number(kno.charAt(7)) + 2) % 10;
                v9 = (Number(kno.charAt(8)) + 1) % 10;
                v_last_digit = Number(kno.charAt(9));
                v11 = (v1 * 512) % 9;
                v22 = (v2 * 256) % 9;
                v33 = (v3 * 128) % 9;
                v44 = (v4 * 64) % 9;
                v55 = (v5 * 32) % 9;
                v66 = (v6 * 16) % 9;
                v77 = (v7 * 8) % 9;
                v88 = (v8 * 4) % 9;
                v99 = (v9 * 2) % 9;
                if (v1 != 0 && v11 == 0)
                    v11 = 9;
                if (v2 != 0 && v22 == 0)
                    v22 = 9;
                if (v3 != 0 && v33 == 0)
                    v33 = 9;
                if (v4 != 0 && v44 == 0)
                    v44 = 9;
                if (v5 != 0 && v55 == 0)
                    v55 = 9;
                if (v6 != 0 && v66 == 0)
                    v66 = 9;
                if (v7 != 0 && v77 == 0)
                    v77 = 9;
                if (v8 != 0 && v88 == 0)
                    v88 = 9;
                if (v9 != 0 && v99 == 0)
                    v99 = 9;
                toplam = v11 + v22 + v33 + v44 + v55 + v66 + v77 + v88 + v99;
                if (toplam % 10 == 0)
                    toplam = 0;
                else
                    toplam = (10 - (toplam % 10));
                return toplam == v_last_digit;
            }
            else
                return false;
        }
    };
    ValidationHelper.prototype.checkTCKN = function (value) {
        value = value === null || value === void 0 ? void 0 : value.toString();
        if (value) {
            var isEleven = /^[0-9]{11}$/.test(value);
            var totalX = 0;
            for (var i = 0; i < 10; i++) {
                totalX += Number(value.substr(i, 1));
            }
            var isRuleX = totalX % 10 == value.substr(10, 1);
            var totalY1 = 0;
            var totalY2 = 0;
            for (var i = 0; i < 10; i += 2) {
                totalY1 += Number(value.substr(i, 1));
            }
            for (var i = 1; i < 10; i += 2) {
                totalY2 += Number(value.substr(i, 1));
            }
            var isRuleY = ((totalY1 * 7) - totalY2) % 10 == value.substr(9, 0);
            return isEleven && isRuleX && isRuleY;
        }
    };
    return ValidationHelper;
}());



/***/ }),

/***/ "../../common/shrimp/helpers/windowHelper.ts":
/*!***************************************************!*\
  !*** ../../common/shrimp/helpers/windowHelper.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WindowHelper": () => (/* binding */ WindowHelper)
/* harmony export */ });
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _singularizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./singularizer */ "../../common/shrimp/helpers/singularizer.ts");


var undefinedType = "undefined";
var WindowHelper = /** @class */ (function () {
    function WindowHelper() {
        this.doc = typeof (document) !== undefinedType ? document : {
            addEventListener: function (type, listener, options) {
                //might simulate this in future...
                _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "Enviroment does not support document. Triggering document.addEventListener now, type is: " + type, logType: _logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Warning });
                listener({ target: { readyState: this.readyState } });
            },
            createElement: function (tagName, options) {
                return { tagName: tagName, options: options };
            },
            readyState: "complete"
        };
        this.hist = typeof (history) !== undefinedType ? history : {
            pushState: function (data, title, url) {
                //might log data and url with additional data in logging
                _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "history.pushState not supported on Node. title: " + title, logType: _logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Debug });
            }
        };
        this.win = typeof (window) !== undefinedType ? window : {
            setInterval: setInterval,
            clearInterval: clearInterval,
            setTimeout: setTimeout,
            clearTimeout: clearTimeout,
            atob: atob,
            btoa: btoa
        };
        this.helperWorker = {
            worker: function (scriptURL, options) {
                return typeof (Worker) !== undefinedType ? new Worker(scriptURL, options) : undefined;
            }
        };
        // this.eventListeners = this.wrapEventListeners();
    }
    Object.defineProperty(WindowHelper.prototype, "onPopState", {
        set: function (value) {
            if (typeof (window) !== undefinedType) {
                window.onpopstate = value;
            }
            else {
                _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "onPopState not supported on Node.", logType: _logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Debug });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WindowHelper.prototype, "document", {
        get: function () {
            return this.doc;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WindowHelper.prototype, "history", {
        get: function () {
            return this.hist;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WindowHelper.prototype, "Window", {
        get: function () {
            return this.win;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WindowHelper.prototype, "Worker", {
        get: function () {
            return this.helperWorker;
        },
        enumerable: false,
        configurable: true
    });
    WindowHelper.Instance = _singularizer__WEBPACK_IMPORTED_MODULE_1__.Singularizer.trySingularize("theOneWindow", new WindowHelper().Window, new WindowHelper());
    return WindowHelper;
}());



/***/ }),

/***/ "../../common/shrimp/interfaces/ComponentInterfaces/ElementLocation.ts":
/*!*****************************************************************************!*\
  !*** ../../common/shrimp/interfaces/ComponentInterfaces/ElementLocation.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ElementLocation": () => (/* binding */ ElementLocation)
/* harmony export */ });
var ElementLocation;
(function (ElementLocation) {
    ElementLocation["Before"] = "Before";
    ElementLocation["After"] = "After";
    ElementLocation["Default"] = "Default";
})(ElementLocation || (ElementLocation = {}));


/***/ }),

/***/ "../../common/shrimp/interfaces/ComponentInterfaces/IAlert.ts":
/*!********************************************************************!*\
  !*** ../../common/shrimp/interfaces/ComponentInterfaces/IAlert.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlertButtonType": () => (/* binding */ AlertButtonType),
/* harmony export */   "AlertType": () => (/* binding */ AlertType),
/* harmony export */   "ErrorSource": () => (/* binding */ ErrorSource)
/* harmony export */ });
var ErrorSource;
(function (ErrorSource) {
    ErrorSource["Page"] = "Page";
    ErrorSource["Network"] = "Network";
    ErrorSource["Validation"] = "Validation";
})(ErrorSource || (ErrorSource = {}));
var AlertType;
(function (AlertType) {
    AlertType["Warning"] = "Warning";
    AlertType["Info"] = "Info";
    AlertType["Success"] = "Success";
    AlertType["Error"] = "Error";
})(AlertType || (AlertType = {}));
var AlertButtonType;
(function (AlertButtonType) {
    AlertButtonType["Confirm"] = "Confirm";
    AlertButtonType["Cancel"] = "Cancel";
})(AlertButtonType || (AlertButtonType = {}));


/***/ }),

/***/ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts":
/*!***********************************************************************!*\
  !*** ../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CType": () => (/* binding */ CType),
/* harmony export */   "PType": () => (/* binding */ PType)
/* harmony export */ });
var PType;
(function (PType) {
    PType["class"] = "class";
    PType["text"] = "text";
    PType["prop"] = "prop";
    PType["attr"] = "attr";
})(PType || (PType = {}));
/**
 * C type of component
 */
var CType;
(function (CType) {
    /**
     * Normal child type
     */
    CType["child"] = "child";
    /**
     * Slot type
     */
    CType["slot"] = "slot";
    /**
     * Callback typed child creator function -> scopedSlotCreatorFunc
     */
    CType["scopedSlot"] = "scopedSlot";
})(CType || (CType = {}));


/***/ }),

/***/ "../../common/shrimp/interfaces/ComponentInterfaces/IComponentCollection.ts":
/*!**********************************************************************************!*\
  !*** ../../common/shrimp/interfaces/ComponentInterfaces/IComponentCollection.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateLightComponentCollection": () => (/* binding */ CreateLightComponentCollection)
/* harmony export */ });
function CreateLightComponentCollection(_a) {
    var compType = _a.compType, compId = _a.compId, parentCompCollection = _a.parentCompCollection, compDomClass = _a.compDomClass, component = _a.component;
    var doryJr;
    return {
        compId: compId,
        compType: compType,
        parentCompCollection: parentCompCollection,
        compDomClass: compDomClass,
        component: component,
        GetCompUID: function () {
            if (!parentCompCollection) {
                return compId;
            } // this should be fixed. This is just wrong. How ? -> Move to dory, use new ComponentCollection and merge with renderingManager's way of creation. | move logic to createComponent in IComponentManager(s)
            var uid = parentCompCollection.GetCompUID();
            var lastDotIndex = uid.lastIndexOf(".");
            uid = lastDotIndex ? uid.substring(0, lastDotIndex + 1) : "";
            return uid + compId;
        },
        SetDoryJr: function (value) { return doryJr = value; },
        GetDoryJr: function () { return doryJr; },
        RootHistoryItem: undefined,
    };
}


/***/ }),

/***/ "../../common/shrimp/interfaces/ComponentInterfaces/ILogger.ts":
/*!*********************************************************************!*\
  !*** ../../common/shrimp/interfaces/ComponentInterfaces/ILogger.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogType": () => (/* binding */ LogType)
/* harmony export */ });
var LogType;
(function (LogType) {
    LogType[LogType["Debug"] = 0] = "Debug";
    LogType[LogType["MobilDebug"] = 1000] = "MobilDebug";
    LogType[LogType["Trace"] = 200000] = "Trace";
    LogType[LogType["Warning"] = 500000] = "Warning";
    LogType[LogType["Error"] = 1000000] = "Error"; // 500Kb
})(LogType || (LogType = {}));


/***/ }),

/***/ "../../common/shrimp/interfaces/ComponentInterfaces/IPropExtension.ts":
/*!****************************************************************************!*\
  !*** ../../common/shrimp/interfaces/ComponentInterfaces/IPropExtension.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IPropOverrideType": () => (/* binding */ IPropOverrideType)
/* harmony export */ });
var IPropOverrideType;
(function (IPropOverrideType) {
    IPropOverrideType["Append"] = "Append";
    IPropOverrideType["Override"] = "Override";
    IPropOverrideType["Replace"] = "Replace";
})(IPropOverrideType || (IPropOverrideType = {}));


/***/ }),

/***/ "../../common/shrimp/interfaces/ComponentInterfaces/IPropSupport.ts":
/*!**************************************************************************!*\
  !*** ../../common/shrimp/interfaces/ComponentInterfaces/IPropSupport.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IPropSupport": () => (/* binding */ IPropSupport)
/* harmony export */ });
var IPropSupport;
(function (IPropSupport) {
    IPropSupport["store"] = "store";
})(IPropSupport || (IPropSupport = {}));


/***/ }),

/***/ "../../common/shrimp/interfaces/ComponentInterfaces/TSComponentBase.ts":
/*!*****************************************************************************!*\
  !*** ../../common/shrimp/interfaces/ComponentInterfaces/TSComponentBase.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TSComponentBase": () => (/* binding */ TSComponentBase)
/* harmony export */ });
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var TSComponentBase = /** @class */ (function () {
    function TSComponentBase(_a) {
        var _this = this;
        var events = _a.events, selfEventList = _a.selfEventList;
        this.selfEvents = {};
        selfEventList.forEach(function (event) {
            _this.selfEvents[event] = events[event];
            delete events[event];
        });
    }
    TSComponentBase.prototype.emit = function (eventName) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var targetEvent = this.selfEvents[eventName];
        if (!targetEvent) {
            return;
        }
        return targetEvent.apply.apply(targetEvent, __spreadArray([this], __read(args), false));
    };
    return TSComponentBase;
}());



/***/ }),

/***/ "../../common/shrimp/interfaces/IPromiseData.ts":
/*!******************************************************!*\
  !*** ../../common/shrimp/interfaces/IPromiseData.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreatePromiseData": () => (/* binding */ CreatePromiseData),
/* harmony export */   "PromiseAllSettled": () => (/* binding */ PromiseAllSettled)
/* harmony export */ });
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var syncResolved = false;
new Promise(function (res) { return res(); }).then(function () { return syncResolved = true; });
typeof (doNothing) != "undefined" && doNothing();
var syncResolveProblem = syncResolved === true; // platform has sync resolve problem or not
/**
 * @param timeout timeout time in ms, undefined if infinite
 */
function CreatePromiseData(timeout, opt) {
    if (opt === void 0) { opt = {}; }
    var syncResolveFixer = function (cb) { return syncResolveProblem && opt.fixSyncResolve ? function (value) { return setTimeout(function () { return cb(value); }); } : cb; };
    var resolver = undefined, reject = undefined;
    var timer;
    var startTimer = function (timeout) {
        if (timer) {
            clearTimeout(timer);
        }
        timer = setTimeout(function () { reject(new Error("The operation has timed out. timeoutValue  : " + timeout)); }, timeout);
    };
    if (timeout) {
        startTimer(timeout);
    }
    return {
        startTimer: startTimer,
        promise: new Promise(function (res, rej) { resolver = syncResolveFixer(res); reject = rej; }),
        resolver: resolver,
        reject: reject
    };
}
function PromiseAllSettled(proms) {
    var _this = this;
    var retProm = CreatePromiseData();
    var left = proms.length;
    proms.forEach(function (prom) { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, , 2, 3]);
                    return [4 /*yield*/, prom];
                case 1:
                    _a.sent();
                    return [3 /*break*/, 3];
                case 2:
                    if (--left <= 0) {
                        retProm.resolver(prom);
                    }
                    return [7 /*endfinally*/];
                case 3: return [2 /*return*/];
            }
        });
    }); });
    return retProm.promise;
}


/***/ }),

/***/ "../../common/shrimp/interfaces/RenderingInterfaces/IDory.ts":
/*!*******************************************************************!*\
  !*** ../../common/shrimp/interfaces/RenderingInterfaces/IDory.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoryContextName": () => (/* binding */ DoryContextName)
/* harmony export */ });
var DoryContextName = "Dory";


/***/ }),

/***/ "../../common/shrimp/interfaces/Scripting/IEvaluator.ts":
/*!**************************************************************!*\
  !*** ../../common/shrimp/interfaces/Scripting/IEvaluator.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TsFilterKeysGlobals": () => (/* binding */ TsFilterKeysGlobals)
/* harmony export */ });
var TsFilterKeysGlobals = {
    Math: true, regex: true, typeOf: true, Date: true, Number: true, JSON: true, string: true, Object: true, js: true,
};


/***/ }),

/***/ "../../common/shrimp/interfaces/Scripting/LangCalc.ts":
/*!************************************************************!*\
  !*** ../../common/shrimp/interfaces/Scripting/LangCalc.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LangCalc": () => (/* binding */ LangCalc)
/* harmony export */ });
var LangCalc = /** @class */ (function () {
    function LangCalc() {
    }
    LangCalc.getLang = function (_a) {
        var _b, _c;
        var self = _a.self, ctrl = _a.ctrl, qJson = _a.qJson, qLang = _a.qLang;
        return self || ((_b = ctrl === null || ctrl === void 0 ? void 0 : ctrl.O) === null || _b === void 0 ? void 0 : _b.CL) || (((_c = qJson === null || qJson === void 0 ? void 0 : qJson.opt) === null || _c === void 0 ? void 0 : _c.QL) || qLang);
    };
    return LangCalc;
}());



/***/ }),

/***/ "../../common/shrimp/interfaces/quick/IExternalLocalizationFunc.ts":
/*!*************************************************************************!*\
  !*** ../../common/shrimp/interfaces/quick/IExternalLocalizationFunc.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExternalLocalizationFuncContextName": () => (/* binding */ ExternalLocalizationFuncContextName)
/* harmony export */ });
var ExternalLocalizationFuncContextName = "ExternalLocalizationFunc";


/***/ }),

/***/ "../../common/shrimp/interfaces/quick/INavigationDemand.ts":
/*!*****************************************************************!*\
  !*** ../../common/shrimp/interfaces/quick/INavigationDemand.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "INavigationDemandType": () => (/* binding */ INavigationDemandType)
/* harmony export */ });
var INavigationDemandType;
(function (INavigationDemandType) {
    INavigationDemandType["forward"] = "forward";
    INavigationDemandType["back"] = "back";
})(INavigationDemandType || (INavigationDemandType = {}));


/***/ }),

/***/ "../../common/shrimp/interfaces/quick/IRoleBaseAuthorizationFunc.ts":
/*!**************************************************************************!*\
  !*** ../../common/shrimp/interfaces/quick/IRoleBaseAuthorizationFunc.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoleBaseAuthorizationFuncContextName": () => (/* binding */ RoleBaseAuthorizationFuncContextName)
/* harmony export */ });
var RoleBaseAuthorizationFuncContextName = "RoleBaseAuthorizationFunc";


/***/ }),

/***/ "../../common/shrimp/interfaces/quick/IUXManager.ts":
/*!**********************************************************!*\
  !*** ../../common/shrimp/interfaces/quick/IUXManager.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UXManagerContextName": () => (/* binding */ UXManagerContextName)
/* harmony export */ });
var UXManagerContextName = "UXManager";


/***/ }),

/***/ "../../common/shrimp/interfaces/quick/IWebSDK.ts":
/*!*******************************************************!*\
  !*** ../../common/shrimp/interfaces/quick/IWebSDK.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompGroupType": () => (/* binding */ CompGroupType)
/* harmony export */ });
var CompGroupType;
(function (CompGroupType) {
    CompGroupType["Vuetify"] = "Vuetify";
    CompGroupType["DevExpress"] = "DevExpress";
    CompGroupType["Sprinkle"] = "Sprinkle";
    CompGroupType["Chart"] = "Chart";
    CompGroupType["Local"] = "Local";
    CompGroupType["GoldenLayout"] = "GoldenLayout";
})(CompGroupType || (CompGroupType = {}));


/***/ }),

/***/ "../../common/shrimp/omniScriptCompiler/Node.ts":
/*!******************************************************!*\
  !*** ../../common/shrimp/omniScriptCompiler/Node.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Node": () => (/* binding */ node)
/* harmony export */ });
/* harmony import */ var _Parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Parser */ "../../common/shrimp/omniScriptCompiler/Parser.js");
/* harmony import */ var _Token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Token */ "../../common/shrimp/omniScriptCompiler/Token.ts");


var node = /** @class */ (function () {
    function node(token) {
        if (token == null) {
            throw "(Parser)token is null";
        }
        this.token = token;
        this.left = null;
        this.right = null;
        this.parent = null;
        this.TokObject = _Parser__WEBPACK_IMPORTED_MODULE_0__.ParseObj.Parse.Dict[this.token.type + "s"][this.token.value];
        this.TokObject = this.TokObject == null ? _Parser__WEBPACK_IMPORTED_MODULE_0__.ParseObj.Parse.Dict[this.token.type + "s"].main : this.TokObject;
        if (this.TokObject == null) {
            throw "(Parser)token is not an expected token: " + this.Summarize();
        }
    }
    node.prototype.Summarize = function () {
        return this.token.Summarize();
    };
    node.prototype.ShortSummarize = function () {
        var shortSum = this.token.type;
        switch (this.token.type) {
            case _Token__WEBPACK_IMPORTED_MODULE_1__.Token.Types.operator:
                shortSum += "<<" + this.token.value + ">>";
                break;
        }
        return shortSum;
    };
    return node;
}());



/***/ }),

/***/ "../../common/shrimp/omniScriptCompiler/QSCError.ts":
/*!**********************************************************!*\
  !*** ../../common/shrimp/omniScriptCompiler/QSCError.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QSCError": () => (/* binding */ QSCError)
/* harmony export */ });
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var QSCError = /** @class */ (function (_super) {
    __extends(QSCError, _super);
    function QSCError(_a) {
        var intelliMsg = _a.intelliMsg, message = _a.message, stLine = _a.stLine, stColumn = _a.stColumn, eLine = _a.eLine, eColumn = _a.eColumn, responsibleNode = _a.responsibleNode;
        var _this = _super.call(this, message) || this;
        _this.intelliMsg = intelliMsg;
        _this.stLine = stLine;
        _this.stColumn = stColumn;
        _this.name = QSCError.ErrorName;
        _this.eLine = eLine;
        _this.eColumn = eColumn;
        _this.responsibleNode = responsibleNode;
        return _this;
    }
    QSCError.ErrorName = "QSCError";
    return QSCError;
}(Error));

;


/***/ }),

/***/ "../../common/shrimp/omniScriptCompiler/Token.ts":
/*!*******************************************************!*\
  !*** ../../common/shrimp/omniScriptCompiler/Token.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Token": () => (/* binding */ Token)
/* harmony export */ });
var Token = /** @class */ (function () {
    function Token(type, value, position, endPosition) {
        this.type = type;
        this.value = value;
        this.position = position;
        this.endPosition = endPosition;
    }
    Token.prototype.Summarize = function () {
        var pos = this.position == null ? " @?" : " @line:" + this.position.line + "-column:" + this.position.column;
        pos += this.endPosition != null ? " to: @line" + this.endPosition.line + "-column:" + this.endPosition.column : "";
        return "type: " + this.type + " value: " + this.value + pos;
    };
    Token.reservedIdentifierTypes = {
        response: "native",
        data: "native",
        "true": "boolean",
        "false": "boolean",
        "null": "null"
    };
    Token.Types = {
        identifier: "identifier",
        keyword: "keyword",
        string: "string",
        number: "number",
        operator: "operator"
    };
    return Token;
}());



/***/ }),

/***/ "../../common/shrimp/performance.ts":
/*!******************************************!*\
  !*** ../../common/shrimp/performance.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PerfManager": () => (/* reexport safe */ _src_Performance_PerfManager__WEBPACK_IMPORTED_MODULE_0__.PerfManager),
/* harmony export */   "PerfSingles": () => (/* reexport safe */ _src_Performance_PerfSingles__WEBPACK_IMPORTED_MODULE_1__.PerfSingles)
/* harmony export */ });
/* harmony import */ var _src_Performance_PerfManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Performance/PerfManager */ "../../common/shrimp/src/Performance/PerfManager.ts");
/* harmony import */ var _src_Performance_PerfSingles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Performance/PerfSingles */ "../../common/shrimp/src/Performance/PerfSingles.ts");




/***/ }),

/***/ "../../common/shrimp/src/Performance/PerfManager.ts":
/*!**********************************************************!*\
  !*** ../../common/shrimp/src/Performance/PerfManager.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PerfManager": () => (/* binding */ PerfManager)
/* harmony export */ });
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
// WTH in node and mobile ?
var perf; // | import("perf_hooks").Performance;
if (typeof performance != "undefined") {
    perf = performance;
}
var PerfManager = /** @class */ (function () {
    function PerfManager() {
        this.isActive = false;
    }
    Object.defineProperty(PerfManager.prototype, "IsActive", {
        get: function () {
            return this.isActive;
        },
        enumerable: false,
        configurable: true
    });
    PerfManager.prototype.Activate = function () {
        if (typeof perf == "undefined") {
            return;
        }
        this.isActive = true;
    };
    PerfManager.prototype.Reset = function () {
        if (!this.IsActive) {
            return;
        }
        perf.clearMarks();
        // if (!(<any>perf).getEntriesByName) { return };
        // perf = <Performance>perf;
        perf.clearMeasures();
    };
    PerfManager.prototype.Measure = function (name, codeBlock) {
        return __awaiter(this, void 0, void 0, function () {
            var retVal;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.Start(name);
                        return [4 /*yield*/, codeBlock()];
                    case 1:
                        retVal = _a.sent();
                        this.End(name);
                        return [2 /*return*/, retVal];
                }
            });
        });
    };
    PerfManager.prototype.Start = function (name) {
        if (!this.IsActive) {
            return;
        }
        perf.mark(this.getStartName(name));
    };
    PerfManager.prototype.End = function (name, perfableObject) {
        if (!this.IsActive) {
            return;
        }
        var endName = this.getEndName(name);
        perf.mark(endName);
        var x = perf.measure(name, this.getStartName(name), endName); // .measure returns in chrome but not in IE
        if (perfableObject) {
            if (!x) {
                var measures = perf.getMeasures()[name]; // try to extract measure for non returning perf.measure
                x = { duration: measures[measures.length - 1], startTime: 0 };
            }
            if (x) {
                if (!perfableObject.duration) {
                    perfableObject.duration = [x.duration];
                    perfableObject.sum = x.duration;
                    perfableObject.startTime = x.startTime;
                    perfableObject.endTime = (x.startTime + x.duration);
                }
                else {
                    perfableObject.duration.push(x.duration);
                    perfableObject.sum += x.duration;
                    perfableObject.startTime = x.startTime;
                    perfableObject.endTime = (x.startTime + x.duration);
                }
            }
        }
    };
    PerfManager.prototype.GetAvg = function (name) {
        if (!this.IsActive) {
            return undefined;
        }
        // if (!(<any>perf).getEntriesByName) { return };
        // perf = <Performance>perf;
        var entries = name ? perf.getEntriesByName(name) : perf.getEntriesByType("measure");
        return this.avg(entries);
    };
    PerfManager.prototype.GetSum = function (name) {
        if (!this.IsActive) {
            return undefined;
        }
        // if (!(<any>perf).getEntriesByName) { return };
        // perf = <Performance>perf;
        var entries = name ? perf.getEntriesByName(name) : perf.getEntriesByType("measure");
        return this.sum(entries);
    };
    PerfManager.prototype.GetList = function (name) {
        if (!this.IsActive) {
            return undefined;
        }
        var entries = name ? perf.getEntriesByName(name) : perf.getEntriesByType("measure");
        return entries;
    };
    PerfManager.prototype.avg = function (entries) {
        var entriesCumulative = entries.reduce(function (prev, cur) { prev.sum += cur.duration; prev.counter++; return prev; }, { sum: 0, counter: 0 });
        return entriesCumulative.sum / entriesCumulative.counter;
    };
    PerfManager.prototype.sum = function (entries) {
        return entries.reduce(function (prev, cur) { prev += cur.duration; return prev; }, 0);
    };
    PerfManager.prototype.getStartName = function (name) {
        return name + " start";
    };
    PerfManager.prototype.getEndName = function (name) {
        return name + " end";
    };
    return PerfManager;
}());



/***/ }),

/***/ "../../common/shrimp/src/Performance/PerfSingles.ts":
/*!**********************************************************!*\
  !*** ../../common/shrimp/src/Performance/PerfSingles.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PerfSingles": () => (/* binding */ PerfSingles)
/* harmony export */ });
/* harmony import */ var _PerfManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PerfManager */ "../../common/shrimp/src/Performance/PerfManager.ts");

var PerfSingles = /** @class */ (function () {
    function PerfSingles() {
        //Instance
        this.perfSingles = {};
    }
    PerfSingles.Register = function () {
        PerfSingles.findSelf();
    };
    PerfSingles.Activate = function (name) {
        var targetPerf = this.findSelf().findPerf(name);
        targetPerf.Activate();
    };
    PerfSingles.Instance = function (name) {
        return this.findSelf().findPerf(name);
    };
    PerfSingles.Reset = function () {
        this.findSelf().perfSingles = {};
    };
    PerfSingles.findSelf = function () {
        if (PerfSingles.self) {
            return PerfSingles.self;
        }
        if (typeof window === "undefined") {
            return PerfSingles.self = new PerfSingles();
        }
        return PerfSingles.self = window["perfQuickShrimp"] = window["perfQuickShrimp"] || new PerfSingles();
    };
    PerfSingles.prototype.findPerf = function (name) {
        var targetPerf = name ? this.perfSingles[name] : this.perfSingle;
        if (targetPerf) {
            return targetPerf;
        }
        targetPerf = name ? this.perfSingles[name] = new _PerfManager__WEBPACK_IMPORTED_MODULE_0__.PerfManager() : this.perfSingle = new _PerfManager__WEBPACK_IMPORTED_MODULE_0__.PerfManager();
        return targetPerf;
    };
    PerfSingles.prototype.Activate = function (name) {
        var targetPerf = this.findPerf(name);
        targetPerf.Activate();
    };
    return PerfSingles;
}());

PerfSingles.Register();


/***/ }),

/***/ "../../common/shrimp/src/context/contextManager.ts":
/*!*********************************************************!*\
  !*** ../../common/shrimp/src/context/contextManager.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContextManager": () => (/* binding */ ContextManager)
/* harmony export */ });
var ContextManager = /** @class */ (function () {
    function ContextManager() {
        this.contextItems = {};
    }
    /**
     * Register item to context
     * @param item item to register
     */
    ContextManager.prototype.RegisterItem = function (item, options) {
        if (options === void 0) { options = { override: false }; }
        var contextGroup = this.contextItems[item.contextName];
        if (!contextGroup || options.override) {
            contextGroup = [];
            this.contextItems[item.contextName] = contextGroup;
        }
        contextGroup.push(item);
    };
    ContextManager.prototype.GetOrCreate = function (contextItemName, contextCreatorCb) {
        var contextItem = this.GetItemSingle(contextItemName);
        if (!contextItem) {
            contextItem = contextCreatorCb();
            this.RegisterItem(contextItem);
        }
        return contextItem;
    };
    /**
     * Gets last Item. Use ! if it must exist.
     */
    ContextManager.prototype.GetItemSingle = function (contextItemName) {
        var contextGroup = this.GetItemGroup(contextItemName);
        if (!contextGroup) {
            return undefined;
        }
        return contextGroup[contextGroup.length - 1]; //contextItem.name
    };
    ContextManager.prototype.GetItemGroup = function (contextItemName) {
        return this.contextItems[contextItemName] || null;
    };
    ContextManager.prototype.ClearItemGroup = function (contextItemName) {
        delete this.contextItems[contextItemName];
    };
    ContextManager.prototype.ClearItem = function (c) {
        var itemGroup = this.GetItemGroup(c.contextName);
        if (!itemGroup) {
            return;
        }
        var itemIndex = itemGroup.indexOf(c);
        itemGroup.splice(itemIndex, 1);
    };
    /**
     * Shallow copy of self
     * @param fields if specified, only puts those fields in the clone
     */
    ContextManager.prototype.Clone = function (fields) {
        var _this = this;
        var contextCopy = new ContextManager();
        var keys = fields !== null && fields !== void 0 ? fields : Object.keys(this.contextItems);
        keys.forEach(function (contextKey) { return contextCopy.contextItems[contextKey] = _this.contextItems[contextKey].map(function (item) { return item; }); });
        return contextCopy;
    };
    /**
     * Get Contexts registered context item keys
     */
    ContextManager.prototype.GetKeys = function () {
        return Object.keys(this.contextItems);
    };
    return ContextManager;
}());



/***/ }),

/***/ "../../library/quickInputFormat/quickInputFormat.ts":
/*!**********************************************************!*\
  !*** ../../library/quickInputFormat/quickInputFormat.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QuickInputFormat": () => (/* binding */ QuickInputFormat)
/* harmony export */ });
/* harmony import */ var _src_core_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/core/context */ "../../library/quickInputFormat/src/core/context.ts");

var QuickInputFormat = /** @class */ (function () {
    function QuickInputFormat(inputElm, options, context) {
        if (context === void 0) { context = new _src_core_context__WEBPACK_IMPORTED_MODULE_0__.Context(inputElm, options); }
        this.context = context;
    }
    QuickInputFormat.prototype.run = function () {
        this.context.inputFormat.run();
    };
    QuickInputFormat.prototype.getUnmaskValue = function () {
        return this.context.inputFormat.getUnMaskedValue();
    };
    return QuickInputFormat;
}());



/***/ }),

/***/ "../../library/quickInputFormat/src/compositors/decimal.ts":
/*!*****************************************************************!*\
  !*** ../../library/quickInputFormat/src/compositors/decimal.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Decimal": () => (/* binding */ Decimal)
/* harmony export */ });
var Decimal = /** @class */ (function () {
    function Decimal(context) {
        this.context = context;
        this.numberValue = "";
        this._maskedValue = "";
        this._unmaskedValue = "";
        this._skipInputEvent = false;
    }
    Decimal.prototype.compose = function () {
        var _this = this;
        var inputElm = this.context.inputElm;
        var options = this.context.options;
        var radixPointASCII = options.radixPoint ? options.radixPoint.charCodeAt(0) : undefined;
        {
            inputElm.setAttribute("inputmode", "decimal");
        }
        //value get set
        {
            var valueProperty_1 = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, "value");
            Object.defineProperty(inputElm, "value", {
                get: function () { return valueProperty_1.get.call(inputElm); },
                set: function (v) {
                    var chechVal = v == _this.numberValue ? true : false;
                    v = _this.changeValue(v, options);
                    valueProperty_1.set.call(inputElm, v);
                    if (!chechVal) {
                        _this._skipInputEvent = true;
                        inputElm.dispatchEvent(new Event('input', { 'bubbles': true }));
                    }
                }
            });
        }
        //rightAlign
        {
            (options.rightAlign == false) ? (inputElm.style.textAlign = "left") : (inputElm.style.textAlign = "right");
        }
        //placeholder
        {
            if (options.placeholder) {
                inputElm.placeholder = options.placeholder;
            }
        }
        //sadece sayısal değerler
        {
            inputElm.addEventListener("keypress", function (ev) {
                var target = ev.target;
                var ASCIICode = (ev.which) ? ev.which : ev.keyCode;
                //45 = -
                if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57) && (radixPointASCII && ASCIICode != radixPointASCII) && ASCIICode != 45) {
                    ev.preventDefault();
                    return false;
                }
                //radixPoint
                else if (ASCIICode == radixPointASCII && options.radixPoint) {
                    var radixPointIndex = target.value.indexOf(options.radixPoint);
                    if (radixPointIndex != -1 || target.selectionStart == 0) {
                        target.setSelectionRange(radixPointIndex + 1, radixPointIndex + 1);
                        ev.preventDefault();
                        return false;
                    }
                    target.value += options.radixPoint;
                    var cursorPos = radixPointIndex == -1 ? target.value.length : radixPointIndex;
                    target.setSelectionRange(cursorPos, cursorPos);
                    ev.preventDefault();
                    return false;
                }
                //allowMinus
                else if (ASCIICode == 45) {
                    if (options.allowMinus) {
                        var negativeSymbol = target.value.indexOf('-');
                        if (negativeSymbol != -1) {
                            target.setSelectionRange(negativeSymbol + 1, negativeSymbol + 1);
                            ev.preventDefault();
                            return false;
                        }
                        target.value = "-" + target.value;
                        negativeSymbol = target.value.indexOf('-');
                        var cursorPos = negativeSymbol == -1 ? target.value.length : negativeSymbol;
                        target.setSelectionRange(cursorPos + 1, cursorPos + 1);
                        ev.preventDefault();
                        return false;
                    }
                    else {
                        ev.preventDefault();
                        return false;
                    }
                }
                return true;
            });
        }
        //input kontrolü ve formatlama
        {
            inputElm.addEventListener("input", function (ev) {
                if (_this._skipInputEvent) {
                    _this._skipInputEvent = false;
                    return ev.preventDefault();
                }
                var target = ev.target;
                var cursorPos = target.selectionStart;
                var originalLength = target.value.length;
                var val = _this.formatValue(target.value, options);
                var radixPos = -1;
                target.value = val;
                // if(inputElm._value)
                if (options.radixPoint)
                    radixPos = val.indexOf(options.radixPoint);
                var updatedLength = val.length;
                cursorPos = updatedLength - originalLength + cursorPos;
                cursorPos > radixPos ? cursorPos += 1 : cursorPos;
                target.setSelectionRange(cursorPos, cursorPos);
            }, true);
        }
        {
            inputElm.addEventListener("change", function (event) {
                var target = event.target;
                var val = target.value;
                // event.preventDefault();
                // if(!options.preventPaste){
                //     let pastedVal = event.clipboardData.getData('text');
                //     if(this.validate(pastedVal, options)){
                //         let val = this.formatValue(pastedVal, options);
                //         this.setValue(compCol, val);
                //     }
                // }
            });
        }
        //blur event --> min, enforceDigitsOnBlur, radixPoint position
        {
            inputElm.addEventListener("blur", function (ev) {
                var target = ev.target;
                if (options.min) {
                    var numbVal = _this.convertToNumber(target.value, options);
                    if (numbVal < options.min) {
                        inputElm.value = _this.formatValue(options.min.toString(), options);
                    }
                }
                if (options.enforceDigitsOnBlur) {
                    var val = _this.alignDigits(target.value, options);
                    _this.numberValue = val;
                    inputElm.value = val;
                }
            });
        }
        //paste event
        {
            inputElm.addEventListener("paste", function (event) {
                var target = event.target;
                event.preventDefault();
                if (!options.preventPaste && event.clipboardData) {
                    var pastedVal = event.clipboardData.getData('text');
                    if (_this.validate(pastedVal, options)) {
                        var val = _this.formatValue(pastedVal, options);
                        target.value = val;
                    }
                }
            });
        }
    };
    Decimal.prototype.changeValue = function (val, options) {
        val = this.formatValue(val, options);
        // val = this.alignDigits(val, options);
        return val;
    };
    Decimal.prototype.formatValue = function (val, options) {
        if (val == this.numberValue) {
            return this.numberValue;
        }
        var leftSide = "", rightSide = "";
        var radixPos = -1;
        val = this.deleteLeadingZero(val, options);
        val = this.deleteBeforeNegativeSymbol(val, options);
        var thousands = /\B(?=(\d{3})+(?!\d))/g;
        if (options.groupSeparator) {
            val = val.replaceAll(options.groupSeparator, '');
            if (options.radixPoint) {
                radixPos = val.indexOf(options.radixPoint);
                if (radixPos >= 0) {
                    leftSide = val.substring(0, radixPos).replaceAll(thousands, options.groupSeparator);
                    rightSide = val.substring(radixPos + 1);
                    if (options.digits) {
                        rightSide = rightSide.slice(0, Number(options.digits));
                    }
                    val = leftSide + options.radixPoint + rightSide;
                }
                else {
                    val = val.replaceAll(thousands, options.groupSeparator);
                }
            }
            else {
                val = val.replaceAll(thousands, options.groupSeparator);
            }
        }
        if (options.max) {
            var isTrue = Number(options.max) < this.convertToNumber(val, options);
            if (isTrue)
                return this.numberValue;
        }
        this.numberValue = val;
        return val;
    };
    Decimal.prototype.getUnmaskedValue = function () {
        return this.unMask(this.numberValue, this.context.options);
    };
    Decimal.prototype.unMask = function (maskedValue, options) {
        if (options.groupSeparator) {
            maskedValue = maskedValue.replaceAll(options.groupSeparator, "");
        }
        return maskedValue;
    };
    Decimal.prototype.validate = function (value, options) {
        var groupSeparator = '\\' + options.groupSeparator;
        var radixPoint = '\\' + options.radixPoint;
        var validateRegex = new RegExp("^[-]?(([1-9]\\d{0,2})(" + groupSeparator + "\\d{3})*|(\\d*))(" + radixPoint + "\\d+)?$", 'gi');
        return validateRegex.test(value);
    };
    Decimal.prototype.convertToNumber = function (maskedValue, options) {
        if (maskedValue && maskedValue != '') {
            if (options.groupSeparator) {
                maskedValue = maskedValue.replaceAll(options.groupSeparator, '');
            }
            if (options.radixPoint && options.radixPoint != '.') {
                maskedValue = maskedValue.replace(options.radixPoint, '.');
            }
            return Number(maskedValue);
        }
        return 0;
    };
    Decimal.prototype.alignDigits = function (val, options) {
        if (!val || val == "") {
            val = "0";
        }
        var buffer = val.split('');
        if (options.radixPoint && options.digits) {
            if (buffer.length > 0 && options.digits > 0) {
                var radixPosition = buffer.indexOf(options.radixPoint);
                if (radixPosition === -1) {
                    buffer.push(options.radixPoint);
                    radixPosition = buffer.length - 1;
                }
                for (var i = 1; i <= options.digits; i++) {
                    if (!isFinite(Number(buffer[radixPosition + i]))) {
                        buffer[radixPosition + i] = "0";
                    }
                }
            }
        }
        return buffer.join('');
    };
    Decimal.prototype.deleteLeadingZero = function (val, options) {
        var isSymbolDeleted = false;
        if (options.allowMinus) {
            var negativeSymbolPos = val.indexOf('-');
            if (negativeSymbolPos != -1) {
                isSymbolDeleted = true;
                val = val.substring(negativeSymbolPos + 1);
            }
        }
        val = val.replace(/^0+/, '');
        if (val.length == 0)
            val = '0';
        if (isSymbolDeleted) {
            val = '-' + val;
        }
        return val;
    };
    Decimal.prototype.deleteBeforeNegativeSymbol = function (val, options) {
        if (options.allowMinus) {
            var negativeSymbolPos = val.indexOf('-');
            val = val.substring(negativeSymbolPos);
        }
        return val;
    };
    return Decimal;
}());



/***/ }),

/***/ "../../library/quickInputFormat/src/core/context.ts":
/*!**********************************************************!*\
  !*** ../../library/quickInputFormat/src/core/context.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Context": () => (/* binding */ Context)
/* harmony export */ });
/* harmony import */ var _inputFormat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../inputFormat */ "../../library/quickInputFormat/src/inputFormat.ts");

var Context = /** @class */ (function () {
    function Context(inputElm, options) {
        this.inputElm = inputElm;
        this.options = options;
        this.inputFormat = new _inputFormat__WEBPACK_IMPORTED_MODULE_0__.InputFormat(this);
    }
    return Context;
}());



/***/ }),

/***/ "../../library/quickInputFormat/src/inputFormat.ts":
/*!*********************************************************!*\
  !*** ../../library/quickInputFormat/src/inputFormat.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputFormat": () => (/* binding */ InputFormat)
/* harmony export */ });
/* harmony import */ var _compositors_decimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compositors/decimal */ "../../library/quickInputFormat/src/compositors/decimal.ts");

var compositorDict = {
    decimal: _compositors_decimal__WEBPACK_IMPORTED_MODULE_0__.Decimal,
};
var InputFormat = /** @class */ (function () {
    function InputFormat(context, compDict) {
        if (compDict === void 0) { compDict = new compositorDict[context.options.alias](context); }
        this.context = context;
        this.compDict = compDict;
    }
    InputFormat.prototype.run = function () {
        this.compDict.compose();
    };
    InputFormat.prototype.getUnMaskedValue = function () {
        return this.compDict.getUnmaskedValue();
    };
    return InputFormat;
}());



/***/ }),

/***/ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=script&lang=ts&":
/*!************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=script&lang=ts& ***!
  \************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vue__WEBPACK_IMPORTED_MODULE_0__["default"].extend({
    name: "DError",
    props: {
        visible: {
            type: Boolean,
            default: true
        },
        componentName: {
            type: String,
            default: null
        },
        componentID: {
            type: String,
            default: null
        },
        errorMessage: {
            type: String,
            default: null
        }
    },
    destroyed: function () {
        var _a;
        (_a = this.$el) === null || _a === void 0 ? void 0 : _a.remove();
    }
}));


/***/ }),

/***/ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/Ghost.vue?vue&type=script&lang=ts&":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/Ghost.vue?vue&type=script&lang=ts& ***!
  \***********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vue__WEBPACK_IMPORTED_MODULE_0__["default"].extend({
    name: "Ghost",
    props: {
        text: {
            default: 'home',
        }
    },
    mounted: function () {
    },
    destroyed: function () {
        var _a;
        (_a = this.$el) === null || _a === void 0 ? void 0 : _a.remove();
    }
}));


/***/ }),

/***/ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=script&lang=ts&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=script&lang=ts& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");
/* harmony import */ var golden_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! golden-layout */ "../../node_modules/golden-layout/dist/goldenlayout.js");
/* harmony import */ var golden_layout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(golden_layout__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _GoldenLayoutHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GoldenLayoutHelper */ "./src/components/quick/GoldenLayout/GoldenLayoutHelper.ts");
var __values = (undefined && undefined.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vue__WEBPACK_IMPORTED_MODULE_2__["default"].extend({
    name: "GoldenLayout",
    data: function () {
        return {
            config: {
                settings: { showPopoutIcon: false, selectionEnabled: true },
                dimensions: {},
                content: [
                    {
                        type: "stack",
                        id: "default",
                        content: [
                            {
                                type: "component",
                                componentName: "component",
                                title: "default",
                                componentState: {
                                    id: "default",
                                    text: "default",
                                    class: "default" + (Math.random() * 100000).toFixed(0),
                                },
                            },
                        ],
                    },
                ],
            },
            getGoldenLayout: null,
            getContentItems: null,
            getComponentInCreation: null,
            componentCb: null,
            StateChangedForDesign: false,
            closedPanes: [],
            containerWidth: 0,
            containerHeight: 0,
            childWindows: []
        };
    },
    props: {
        _renderingProps: {
            default: {
                context: undefined,
                isEditMode: undefined,
            },
        },
        width: {
            type: String,
            default: "1200px",
        },
        height: {
            type: String,
            default: "700px",
        },
        glConfig: {
            type: Object,
            default: null,
        },
        childNames: {
            type: Array,
            default: ["default"],
        },
        dimensions: {
            type: Object
        }
    },
    methods: {
        getClosedPanes: function () {
            return this.closedPanes;
        },
        getConfig: function () {
            return this.getGoldenLayout().toConfig();
        },
        setConfig: function (val) {
            var _this = this;
            var _a;
            this.getGoldenLayout().config = val;
            this.getGoldenLayout().root.contentItems.forEach(function (item) {
                item.remove();
            });
            (_a = val.content) === null || _a === void 0 ? void 0 : _a.forEach(function (item) {
                _this.getGoldenLayout().root.addChild(item);
            });
            this.StateChangedForDesign = true;
        },
        findContentItem: function (paneName) {
            var self = this;
            var contentItems = self.getContentItems();
            var contentItem = contentItems.find(function (item) { return item.config.componentState.id == paneName; });
            return contentItem;
        },
        changeTitle: function (childName, newTitle) {
            var self = this;
            var contentItem = self.findContentItem(childName);
            contentItem.setTitle(newTitle);
        },
        removePane: function (paneName) {
            var self = this;
            var pane = self.findContentItem(paneName);
            var childArray = [];
            childArray.push(paneName);
            self.removeItem(childArray);
            pane.remove();
            self.$emit("paneClosed", paneName);
        },
        //do not open or inform below methods to quick users.
        addItem: function (_a) {
            var childName = _a.childName, config = _a.config;
            var newItem = {
                type: "component",
                componentName: "component",
                title: childName,
                componentState: {
                    id: childName,
                    text: childName,
                    class: childName + (Math.random() * 100000).toFixed(0),
                },
            };
            if (config) {
                newItem = config;
            }
            var gl = this.getGoldenLayout();
            gl.root.contentItems[0].addChild(newItem);
            this.childNames.push(childName);
            var glConfig = gl.toConfig();
            this.$emit("paneCreated", childName);
            return glConfig;
        },
        goldenLayoutInit: function (stateChangedForDesign) {
            this.StateChangedForDesign = stateChangedForDesign;
        },
        removeItem: function (deletedChildNames) {
            var self = this;
            var dory = this._renderingProps.context().GetItemSingle("Dory");
            var historyItem = this._renderingProps.context().GetItemSingle("HistoryManager").currentLevel().last();
            var pjson = historyItem.qjson.pJson.find(function (i) { return i.T == "GoldenLayout"; });
            deletedChildNames.forEach(function (childName) {
                var _a, _b;
                if (self._renderingProps.isEditMode) {
                    self.childNames.splice(self.childNames.indexOf(childName), 1);
                }
                if (pjson.C[childName] && !self._renderingProps.isEditMode) {
                    self.closedPanes.push(childName);
                }
                (_b = (_a = self.componentCb().children) === null || _a === void 0 ? void 0 : _a[childName]) === null || _b === void 0 ? void 0 : _b.map(function (child) { return child.compId; }).forEach(function (childNameToDelete) { return dory.DestroyComponentCollectionByID(childNameToDelete); });
                // remove after 02.07.2022
                // let contentItems = self.getContentItems();
                // let contentItemIndex = contentItems.findIndex((item) => item.config.componentState.id == childName);
                // contentItems.splice(contentItemIndex, 1);
                self.$emit("paneClosed", childName);
            });
            self.$emit("GL_stateChanged", self.getGoldenLayout().toConfig(), self.childNames);
        },
        customChildAppender: function (_a) {
            var childName = _a.childName, createdComps = _a.createdComps;
            var index = this.closedPanes.findIndex(function (item) { return item == childName; });
            if (index > -1) {
                this.closedPanes.splice(index, 1);
            }
            this.addItem({ childName: childName });
        },
        appendDomElements: function (container, componentConfig) {
            var _a, _b;
            if (componentConfig.fromWindow) {
                container.getElement()[0].innerHTML = '<div class="' + componentConfig.class + '"></div>';
                componentConfig.fromWindow = false;
            }
            else {
                if (!this.componentCb) {
                    var componentCb_1 = this.getComponentInCreation(); //renderingProps da  __domEl var mı bak.
                    this.componentCb = function () {
                        return componentCb_1;
                    };
                }
                var domElements = (_b = (_a = this.componentCb().children) === null || _a === void 0 ? void 0 : _a[componentConfig.id]) === null || _b === void 0 ? void 0 : _b.map(function (i) { return i.domElement; });
                if (!domElements) {
                    return;
                }
                container.getElement()[0].innerHTML = '<div class="' + componentConfig.class + '"><div class="innerWindow"></div>';
                domElements.forEach(function (domElement) {
                    if (domElement) {
                        container.getElement()[0].getElementsByClassName("innerWindow")[0].append(domElement);
                    }
                });
            }
        },
        onStackClose: function (stack) {
            var self = this;
            stack.header.controlsContainer.find(".lm_close").off("click").click(function () {
                var childNames = [];
                for (var index = 0; index < stack.config.content.length; index++) {
                    var element = stack.config.content[index];
                    var childName = element.componentState.id;
                    childNames.push(childName);
                }
                self.removeItem(childNames); // to delete child jsons in goldenLayout before stack remove
                self.StateChangedForDesign = self._renderingProps.isEditMode ? false : true; // to save new goldenLayout config. after stack remove gl will emit layoutChanged event and GoldenLayoutTracker will be triggered.
                stack.remove();
            });
        },
        resizeObserver: function () {
            var self = this;
            var resizeObserver = new ResizeObserver(function (entries) {
                entries.forEach(function (entry) {
                    if (self.containerWidth != entry.target.clientWidth || self.containerHeight != entry.target.clientHeight) {
                        self.containerWidth = entry.target.clientWidth;
                        self.containerHeight = entry.target.clientHeight;
                        self.getGoldenLayout().updateSize();
                    }
                });
            });
            resizeObserver.observe(this.$refs["layoutContainer"]);
        },
        // remove after 02.07.2022
        // addContentItem(contentItem) {
        //   let contentItems = this.getContentItems();
        //   let checkExistencialCrisis = contentItems.find(i => i.config.componentState.id == contentItem.config.componentState.id);
        //   if (!checkExistencialCrisis) {
        //     contentItems.push(contentItem);
        //   }
        // },
        closeChildWindows: function () {
            var self = this;
            if (self.childWindows) {
                self.childWindows.forEach(function (glWindow) {
                    if (!glWindow.childWindow.closed) {
                        glWindow.childWindow.close();
                    }
                });
            }
        },
    },
    mounted: function () {
        var e_1, _a;
        var self = this;
        // ensure that the following are only done in the mounted lifecycle.
        self.closedPanes = [];
        var parentContainer = this.$refs["layoutContainer"];
        window.parentContainer = parentContainer;
        if (!parentContainer) {
            return;
        }
        // create a new GL instance.
        if (this.glConfig) {
            this.config = this.glConfig;
        }
        this.config.dimensions = this.dimensions || this.config.dimensions;
        var context = this._renderingProps.context();
        var rc = context.GetItemSingle("RenderingContext");
        this.getComponentInCreation = function () { return rc.componentInCreation; };
        var layout = new (golden_layout__WEBPACK_IMPORTED_MODULE_0___default())(this.config, parentContainer);
        this.resizeObserver();
        layout.registerComponent("component", function (container, componentConfig) {
            var _a, _b;
            if (componentConfig.fromWindow) {
                container.getElement()[0].innerHTML = '<div class="' + componentConfig.class + '"></div>';
                componentConfig.fromWindow = false;
            }
            else {
                if (!self.componentCb) {
                    var componentCb_2 = self.getComponentInCreation(); //renderingProps da  __domEl var mı bak.
                    self.componentCb = function () { return componentCb_2; };
                }
                var domElements = (_b = (_a = self.componentCb().children) === null || _a === void 0 ? void 0 : _a[componentConfig.id]) === null || _b === void 0 ? void 0 : _b.map(function (i) { return i.domElement; });
                if (!domElements) {
                    return;
                }
                container.getElement()[0].innerHTML = '<div class="' + componentConfig.class + '"><div class="innerWindow"></div>';
                domElements.forEach(function (domElement) {
                    if (domElement) {
                        container.getElement()[0].getElementsByClassName("innerWindow")[0].append(domElement);
                        container.getElement()[0].style.overflow = "overlay";
                    }
                });
            }
        });
        // attach the state change listener
        layout.on("stateChanged", function () {
            if (self.StateChangedForDesign) {
                self.StateChangedForDesign = false;
            }
            else {
                self.$emit("GL_stateChanged", self.getGoldenLayout().toConfig(), self.childNames);
            }
        });
        layout.on("stackCreated", function (stack) {
            _GoldenLayoutHelper__WEBPACK_IMPORTED_MODULE_1__.initPopOut.call(self, stack);
            self.onStackClose(stack);
        });
        layout.on("tabCreated", function (tab) {
            // self.addContentItem(tab.contentItem);
            self.$emit("paneCreated", tab.contentItem.config.componentState.text);
            tab.closeElement.off("click").click(function () {
                var childName = tab.contentItem.config.componentState.text;
                self.removeItem([childName]); // to delete child jsons in goldenLayout before tab remove.
                self.StateChangedForDesign = self._renderingProps.isEditMode ? false : true; // to save new goldenLayout config. after tab remove gl will emit layoutChanged event and GoldenLayoutTracker will be triggered.
                tab.contentItem.remove();
            });
        });
        this.getContentItems = function () {
            var _a, _b;
            var contentItems = [];
            (_b = (_a = self.getGoldenLayout())._getAllContentItems) === null || _b === void 0 ? void 0 : _b.call(_a).forEach(function (item) {
                if (item.config.type == "component") {
                    contentItems.push(item);
                }
            });
            return contentItems;
        };
        // initiatialize the layout
        layout.init();
        this.getGoldenLayout = function () { return layout; };
        var head = document.getElementsByTagName("head");
        var isCssExist = false;
        try {
            for (var _b = __values(head[0].children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (item.href && item.href.includes("goldenlayout-base")) {
                    isCssExist = true;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (!isCssExist) {
            var glBaseCssTag = document.createElement("link");
            glBaseCssTag.href =
                "https://golden-layout.com/files/latest/css/goldenlayout-base.css";
            glBaseCssTag.rel = "stylesheet";
            glBaseCssTag.type = "text/css";
            var glLightCssTag = document.createElement("link");
            glLightCssTag.href =
                "https://golden-layout.com/files/latest/css/goldenlayout-light-theme.css";
            glLightCssTag.rel = "stylesheet";
            glLightCssTag.type = "text/css";
            head[0].appendChild(glBaseCssTag);
            head[0].appendChild(glLightCssTag);
        }
    },
    destroyed: function () {
        var _a;
        (_a = this.$el) === null || _a === void 0 ? void 0 : _a.remove();
    },
}));


/***/ }),

/***/ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=script&lang=ts&":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=script&lang=ts& ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vue__WEBPACK_IMPORTED_MODULE_0__["default"].extend({
    name: "GeneralWrapper",
    props: {
        __domElements: {
            type: Object,
            default: null
        },
        width: {
            type: String
        },
        height: {
            type: String
        },
        customStyle: {
            type: Boolean
        },
        customClass: {
            type: String
        },
        vElemnt: {
            type: Object
        },
        createCompo: {
            type: Object
        }
    },
    computed: {
        computedClass: function () {
            return this.customClass;
        },
        computedStyle: function () {
            if (this.customStyle) {
                return "width:" + this.width + "; height:" + this.height + "; position: relative; margin: auto";
            }
            return undefined;
        }
    },
    mounted: function () {
        var self = this;
        var holderDiv = self.$refs["holder"];
        holderDiv.appendChild(self.__domElements);
    }
}));


/***/ }),

/***/ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=script&lang=ts&":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=script&lang=ts& ***!
  \***********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vue__WEBPACK_IMPORTED_MODULE_0__["default"].extend({
    name: "TSComponentWrapper",
    props: {
        _renderingProps: {
            default: {
                context: undefined,
                events: undefined,
                props: undefined,
                targetLocalComponent: undefined
            }
        }
    },
    methods: {
        GetProps: function (propsCB) {
            return this._renderingProps.targetLocalComponent().GetProps(propsCB);
        },
        GetEvents: function (eventsCB) {
            return this._renderingProps.targetLocalComponent().GetEvents(eventsCB);
        },
        GetQJson: function () {
            var _a, _b;
            return (_b = (_a = this._renderingProps.targetLocalComponent()).GetQJson) === null || _b === void 0 ? void 0 : _b.call(_a);
        },
        OutBoundProps: function (props) {
            var _this = this;
            var self = this;
            Object.keys(props).forEach(function (prop) {
                var _a;
                if ((_a = props[prop]) === null || _a === void 0 ? void 0 : _a.watcher) {
                    var propDesc = {};
                    propDesc.get = props[prop].get;
                    propDesc.set = props[prop].set;
                    Object.defineProperty(self, prop, propDesc);
                }
                else {
                    _this[prop] = props[prop];
                }
            });
        },
        OutBoundEvents: function (events) {
            var _this = this;
            Object.keys(events).forEach(function (event) {
                _this[event] = events[event];
            });
        }
    },
    mounted: function () {
        var self = this;
        var tlc = this._renderingProps.targetLocalComponent();
        var rendered = tlc.Render(this);
        self.$refs["comp-wrapper"].appendChild(rendered);
        Object.getOwnPropertyNames(tlc.__proto__)
            .forEach(function (propName) {
            if (typeof tlc.__proto__[propName] == 'function') {
                if (propName != "constructor")
                    self[propName] = tlc.__proto__[propName].bind(tlc);
                // wrappedComponent[prop] =() => { var args = Array.prototype.slice.call(arguments); return localComponent.__proto__[prop].apply(localComponent, args);}
                // wrappedComponent[prop]=(<any>localComponent).__proto__[prop].bind(localComponent);
            }
        });
    },
    destroyed: function () {
        var _a, _b, _c, _d;
        (_d = (_b = (_a = this._renderingProps).targetLocalComponent) === null || _b === void 0 ? void 0 : (_c = _b.call(_a)).$destroy) === null || _d === void 0 ? void 0 : _d.call(_c);
    }
}));


/***/ }),

/***/ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/init/root.vue?vue&type=script&lang=ts&":
/*!**********************************************************************************************************************************************************************!*\
  !*** ../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/init/root.vue?vue&type=script&lang=ts& ***!
  \**********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_urlHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/urlHelper */ "../../common/shrimp/helpers/urlHelper.ts");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: "root",
    props: {},
    data: function () {
        var mdiPath = _common_shrimp_helpers_urlHelper__WEBPACK_IMPORTED_MODULE_0__.UrlHelper.concatUrl(_common_shrimp_helpers_urlHelper__WEBPACK_IMPORTED_MODULE_0__.UrlHelper.getScriptRoot(), "../../library/mdi/css/materialdesignicons.min.css");
        return {
            mdiPath: mdiPath,
        };
    },
    created: function () { },
    methods: {}
});


/***/ }),

/***/ "./src/WebSDK.ts":
/*!***********************!*\
  !*** ./src/WebSDK.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WebSDK": () => (/* binding */ WebSDK)
/* harmony export */ });
/* harmony import */ var _common_qshell__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../common/qshell */ "../../common/qshell/index.ts");
/* harmony import */ var _common_shrimp_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/shrimp/context */ "../../common/shrimp/context.ts");
/* harmony import */ var _common_shrimp_helpers_JSLoader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/shrimp/helpers/JSLoader */ "../../common/shrimp/helpers/JSLoader.ts");
/* harmony import */ var _common_shrimp_helpers_lazyLoader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/shrimp/helpers/lazyLoader */ "../../common/shrimp/helpers/lazyLoader.ts");
/* harmony import */ var _common_shrimp_helpers_qjsonParser_QJsonExtractHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../common/shrimp/helpers/qjsonParser/QJsonExtractHelper */ "../../common/shrimp/helpers/qjsonParser/QJsonExtractHelper.ts");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");
/* harmony import */ var _components_providers_ComponentProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/providers/ComponentProvider */ "./src/components/providers/ComponentProvider.ts");
/* harmony import */ var _implementation_CookieManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./implementation/CookieManager */ "./src/implementation/CookieManager.ts");
/* harmony import */ var _implementation_HostTriggerer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./implementation/HostTriggerer */ "./src/implementation/HostTriggerer.ts");
/* harmony import */ var _implementation_LanguageExtensions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./implementation/LanguageExtensions */ "./src/implementation/LanguageExtensions.ts");
/* harmony import */ var _implementation_ModuleManagerImpl__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./implementation/ModuleManagerImpl */ "./src/implementation/ModuleManagerImpl.ts");
/* harmony import */ var _implementation_NetworkManagerImpl__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./implementation/NetworkManagerImpl */ "./src/implementation/NetworkManagerImpl.ts");
/* harmony import */ var _implementation_operators_ComponentOperator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./implementation/operators/ComponentOperator */ "./src/implementation/operators/ComponentOperator.ts");
/* harmony import */ var _implementation_PlatformManagerImp__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./implementation/PlatformManagerImp */ "./src/implementation/PlatformManagerImp.ts");
/* harmony import */ var _implementation_QJsonRetrieverImpl__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./implementation/QJsonRetrieverImpl */ "./src/implementation/QJsonRetrieverImpl.ts");
/* harmony import */ var _implementation_RegionalManagerImpl__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./implementation/RegionalManagerImpl */ "./src/implementation/RegionalManagerImpl.ts");
/* harmony import */ var _implementation_StoreManager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./implementation/StoreManager */ "./src/implementation/StoreManager.ts");
/* harmony import */ var _implementation_UXManagerImpl__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./implementation/UXManagerImpl */ "./src/implementation/UXManagerImpl.ts");
/* harmony import */ var _managers_RendererManager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./managers/RendererManager */ "./src/managers/RendererManager.ts");
/* harmony import */ var _managers_WindowHistoryManager__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./managers/WindowHistoryManager */ "./src/managers/WindowHistoryManager.ts");
/* harmony import */ var _managers_DataManager__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./managers/DataManager */ "./src/managers/DataManager.ts");
/* harmony import */ var _build_legacy__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../build/legacy */ "./build/legacy.ts");
/* harmony import */ var _common_shrimp_helpers_urlHelper__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../common/shrimp/helpers/urlHelper */ "../../common/shrimp/helpers/urlHelper.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
// Polyfills






















 // Do not erase. First path calculation is triggered.
// import { PageManager } from "./managers/PageManager";
var WebSDK = /** @class */ (function () {
    function WebSDK(settings, services, environmentInfo) {
        var _this = this;
        var _a, _b, _c, _d;
        this.config = { SiteSettings: { compSettings: undefined } };
        this.platformType = "Web";
        this.settingsWrapper = { settings: settings || {} };
        var servicesWrapper = WebSDK.servicesWrapper = { services: services || {} };
        if ((_a = services === null || services === void 0 ? void 0 : services.extensions) === null || _a === void 0 ? void 0 : _a.customFunctions) {
            var customFuncs = (_b = services === null || services === void 0 ? void 0 : services.extensions) === null || _b === void 0 ? void 0 : _b.customFunctions;
            Object.keys(customFuncs).forEach(function (key) {
                _this.config[key] = customFuncs[key];
            });
        }
        this.initContainerServices(servicesWrapper);
        var websdkContext = this.websdkContext = new _common_shrimp_context__WEBPACK_IMPORTED_MODULE_1__.ContextManager();
        this.dataManager = new _managers_DataManager__WEBPACK_IMPORTED_MODULE_19__.DataManager();
        this.dataManager.environmentName = environmentInfo === null || environmentInfo === void 0 ? void 0 : environmentInfo.environmentName;
        websdkContext.RegisterItem(this.dataManager);
        this.storeManager = new _implementation_StoreManager__WEBPACK_IMPORTED_MODULE_15__.StoreManager({ contextName: "StoreManager" });
        this.UpdateWebSDKSettings(settings);
        this.cookieManager = new _implementation_CookieManager__WEBPACK_IMPORTED_MODULE_6__.CookieManager({ contextName: "CookieManager" });
        this.ux = new _implementation_UXManagerImpl__WEBPACK_IMPORTED_MODULE_16__.UXManagerImpl(this.settingsWrapper, servicesWrapper);
        this.hostTriggererImp = new _implementation_HostTriggerer__WEBPACK_IMPORTED_MODULE_7__.HostTriggererImp(servicesWrapper);
        this.platformManagerImp = new _implementation_PlatformManagerImp__WEBPACK_IMPORTED_MODULE_12__.PlatformManagerImp(servicesWrapper);
        this.region = new _implementation_RegionalManagerImpl__WEBPACK_IMPORTED_MODULE_14__.RegionalManagerImpl(this.settingsWrapper);
        websdkContext.RegisterItem(this.region);
        this.qJsonRetriever = new _implementation_QJsonRetrieverImpl__WEBPACK_IMPORTED_MODULE_13__["default"]({ contextName: 'QJsonRetriever', network: this.network, settingsWrapper: this.settingsWrapper });
        this.moduleManager = new _implementation_ModuleManagerImpl__WEBPACK_IMPORTED_MODULE_9__.ModuleManager((_d = (_c = this.settingsWrapper) === null || _c === void 0 ? void 0 : _c.settings) === null || _d === void 0 ? void 0 : _d.versions);
        this.languageExtensions = new _implementation_LanguageExtensions__WEBPACK_IMPORTED_MODULE_8__.LanguageExtensions(servicesWrapper);
        this.websdkContext.RegisterItem(this.languageExtensions);
        this.qshell = new _common_qshell__WEBPACK_IMPORTED_MODULE_0__.QShell({
            qjsonRetriever: this.qJsonRetriever, moduleManager: this.moduleManager, network: this.network, ux: this.ux, region: this.region,
            hostTriggerer: this.hostTriggererImp, platformType: this.platformType, platformManager: this.platformManagerImp,
        }, {
            componentOperator: new _implementation_operators_ComponentOperator__WEBPACK_IMPORTED_MODULE_11__.ComponentOperator()
        });
        this.rendererManager = new _managers_RendererManager__WEBPACK_IMPORTED_MODULE_17__.RendererManager(this.storeManager, this.settingsWrapper, servicesWrapper, websdkContext);
        this.windowHistoryManager = new _managers_WindowHistoryManager__WEBPACK_IMPORTED_MODULE_18__.WindowHistoryManager("WindowHistoryManager", this.settingsWrapper, this.rendererManager, servicesWrapper);
        if (services === null || services === void 0 ? void 0 : services.navigationManager) {
            this.config.navigationManager = services.navigationManager;
        }
        this.init();
    }
    WebSDK.prototype.UpdateSettings = function (allSettings) {
        if (allSettings.containerServices) {
            this.UpdateServices(allSettings.containerServices);
        }
        if (allSettings.websdkSettings) {
            this.UpdateWebSDKSettings(allSettings.websdkSettings);
        }
    };
    WebSDK.getPlateauIAM = function () {
        var _a, _b;
        return (_b = (_a = WebSDK.servicesWrapper.services).getPlateauIAM) === null || _b === void 0 ? void 0 : _b.call(_a);
    };
    WebSDK.prototype.SetExternalQJsonRetriever = function (externalQJsonRetriever) {
        this.qJsonRetriever.SetExternalQJsonRetriever(externalQJsonRetriever);
        this.moduleManager.SetExternalQJsonRetriever(externalQJsonRetriever);
    };
    WebSDK.prototype.subscribeStoreData = function (name, cb) {
        this.storeManager.subscribe(name, cb);
    };
    WebSDK.prototype.unSubscribeStoreData = function (name, cb) {
        this.storeManager.unsubscribe(name, cb);
    };
    WebSDK.prototype.UpdateServices = function (services) {
        WebSDK.servicesWrapper.services = services;
        this.languageExtensions.manageShellObject();
    };
    WebSDK.prototype.UpdateWebSDKSettings = function (settings) {
        this.settingsWrapper.settings = settings;
        this.setQJsonUrlPrefix(this.settingsWrapper.settings.qjsonURLPrefix);
        this.setServiceUrlPrefix(this.settingsWrapper.settings.serviceURL);
        this.setServiceDefaultHeader(this.settingsWrapper.settings.defaultServiceHeader);
        this.setSelectedServiceUrl(this.settingsWrapper.settings.selectedServiceUrl);
        this.setRegionalDefinition(this.settingsWrapper.settings.regionalDefinition);
        this.setProxySettingsYamlContent(this.settingsWrapper.settings.settingsProxyYaml);
        this.network = new _implementation_NetworkManagerImpl__WEBPACK_IMPORTED_MODULE_10__["default"]('NetworkManager', this.settingsWrapper, WebSDK.servicesWrapper, this.storeManager);
    };
    WebSDK.prototype.initContainerServices = function (servicesWrapper) {
        var _this = this;
        servicesWrapper.services.getContainerName = function () { var _a; return (_a = _this.settingsWrapper.settings.backendInf) === null || _a === void 0 ? void 0 : _a.containerName; };
        servicesWrapper.services.extensions = servicesWrapper.services.extensions || {};
        servicesWrapper.services.print = servicesWrapper.services.print || (function (data) {
            var url = "http://localhost:4852/BranchDeviceConnector/PrinterServiceRest/PrintFileContent?responseFormat=json";
            return _this.network.postHeader({ headers: { "Content-Type": "application/json" }, url: url, body: JSON.stringify(data.parameters[0]) });
        });
    };
    WebSDK.prototype.LoadModuleCompLists = function (modulePaths) {
        if (!modulePaths) {
            return Promise.resolve();
        }
        var count = 0;
        var length = Object.keys(modulePaths).length;
        return new Promise(function (res, rej) {
            Object.keys(modulePaths).forEach(function (key) {
                new _common_shrimp_helpers_JSLoader__WEBPACK_IMPORTED_MODULE_2__.JSLoader(modulePaths[key], function () {
                    count++;
                    window.vuetify_microUI.ml[key].modulePath = modulePaths[key];
                    if (count == length) {
                        res(window.vuetify_microUI.ml);
                    }
                }, function (evt) {
                    count++;
                    if (count == length) {
                        rej(key);
                    }
                }, 1, true, new Date().getTime()).LoadJS();
            });
        });
    };
    WebSDK.prototype.init = function () {
        var vuetify_microUI = window.vuetify_microUI = { ml: {} };
        var domaincomponentList = [];
        vuetify_microUI.registerModule = function (moduleFileName) {
            return {
                registerCompNames: function (compNames) {
                    vuetify_microUI.ml[moduleFileName.replace(".js", "")] = { componentNames: compNames, modulePath: undefined };
                    Object.keys(compNames).forEach(function (name) {
                        domaincomponentList.push(name);
                    });
                },
                registerComponent: function (compName, comp) {
                    vue__WEBPACK_IMPORTED_MODULE_22__["default"].component(compName.default.name, compName.default);
                },
            };
        };
    };
    WebSDK.prototype.LoadPipeline = function () {
        return __awaiter(this, void 0, void 0, function () {
            var qJsonString, qJsonExtracted;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.settingsWrapper.settings.pipelineqjson) {
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, _common_shrimp_helpers_lazyLoader__WEBPACK_IMPORTED_MODULE_3__.LazyLoader.FetchModuleBody(this.settingsWrapper.settings.pipelineqjson)];
                    case 1:
                        qJsonString = (_a.sent()).body;
                        qJsonExtracted = _common_shrimp_helpers_qjsonParser_QJsonExtractHelper__WEBPACK_IMPORTED_MODULE_4__.QJsonExtractHelper.qJsonExtractor(qJsonString);
                        if (!qJsonExtracted) {
                            throw new Error("pipeline.qjson has error");
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    WebSDK.prototype.LoadAlert = function () {
        return __awaiter(this, void 0, void 0, function () {
            var qJsonString, qJsonExtracted;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.settingsWrapper.settings.alertqjson) {
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, _common_shrimp_helpers_lazyLoader__WEBPACK_IMPORTED_MODULE_3__.LazyLoader.FetchModuleBody(this.settingsWrapper.settings.alertqjson)];
                    case 1:
                        qJsonString = (_a.sent()).body;
                        qJsonExtracted = _common_shrimp_helpers_qjsonParser_QJsonExtractHelper__WEBPACK_IMPORTED_MODULE_4__.QJsonExtractHelper.qJsonExtractor(qJsonString);
                        if (!qJsonExtracted) {
                            throw new Error("alert.qjson has error");
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    WebSDK.prototype.LoadLoading = function () {
        return __awaiter(this, void 0, void 0, function () {
            var qJsonString, qJsonExtracted;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.settingsWrapper.settings.loadingqjson) {
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, _common_shrimp_helpers_lazyLoader__WEBPACK_IMPORTED_MODULE_3__.LazyLoader.FetchModuleBody(this.settingsWrapper.settings.loadingqjson)];
                    case 1:
                        qJsonString = (_a.sent()).body;
                        qJsonExtracted = _common_shrimp_helpers_qjsonParser_QJsonExtractHelper__WEBPACK_IMPORTED_MODULE_4__.QJsonExtractHelper.qJsonExtractor(qJsonString);
                        if (!qJsonExtracted) {
                            throw new Error("loading.qjson has error");
                        }
                        return [2 /*return*/, qJsonExtracted];
                }
            });
        });
    };
    WebSDK.prototype.LoadGlobalLocalization = function () {
        return __awaiter(this, void 0, void 0, function () {
            var qJsonString, qJsonExtracted;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.settingsWrapper.settings.globalLocalizationqjson) {
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, _common_shrimp_helpers_lazyLoader__WEBPACK_IMPORTED_MODULE_3__.LazyLoader.FetchModuleBody(this.settingsWrapper.settings.globalLocalizationqjson)];
                    case 1:
                        qJsonString = (_a.sent()).body;
                        qJsonExtracted = _common_shrimp_helpers_qjsonParser_QJsonExtractHelper__WEBPACK_IMPORTED_MODULE_4__.QJsonExtractHelper.qJsonExtractor(qJsonString);
                        if (!qJsonExtracted) {
                            throw new Error("globalLocalization.qjson has error");
                        }
                        // this.pageManager.setGlobalLocalizationQJson(qJsonExtracted);
                        return [2 /*return*/, qJsonExtracted];
                }
            });
        });
    };
    WebSDK.prototype.CreateRenderer = function (_a) {
        var _this = this;
        var mountPoint = _a.mountPoint, config = _a.config;
        if (config) {
            Object.keys(config).forEach(function (item) {
                _this.config[item] = config[item];
            });
        }
        return this.rendererManager.createRenderer({ mountPoint: mountPoint, qshell: this.qshell, config: this.config, windowHistoryManager: this.windowHistoryManager });
    };
    WebSDK.prototype.GetDomContainer = function (renderer) {
        return this.rendererManager.getDomContainer(renderer);
    };
    WebSDK.prototype.GetParentInstance = function (renderer) {
        return this.rendererManager.getParentInstance(renderer);
    };
    WebSDK.prototype.Clear = function (renderer) {
        this.rendererManager.clear(renderer);
    };
    WebSDK.prototype.setComponentOverrider = function (cb) {
        return _components_providers_ComponentProvider__WEBPACK_IMPORTED_MODULE_5__.ComponentProvider.setOverrideComp(cb);
    };
    WebSDK.prototype.GetComponentList = function (compGroupNameArray) {
        return _components_providers_ComponentProvider__WEBPACK_IMPORTED_MODULE_5__.ComponentProvider.getComponentList(compGroupNameArray);
    };
    /**
     * Set domain prefix of qJson retriever in nemo
     * @param prefix Domain prefix of retriever
     */
    WebSDK.prototype.setQJsonUrlPrefix = function (prefix) {
        this.settingsWrapper.settings.qjsonURLPrefix = (prefix === null || prefix === void 0 ? void 0 : prefix.endsWith("/")) ? prefix.substring(0, prefix.length - 1) : prefix;
    };
    WebSDK.prototype.setServiceUrlPrefix = function (prefix) {
        this.settingsWrapper.settings.serviceURL = (prefix === null || prefix === void 0 ? void 0 : prefix.endsWith("/")) ? prefix.substring(0, prefix.length - 1) : prefix;
    };
    WebSDK.prototype.setServiceDefaultHeader = function (header) {
        this.settingsWrapper.settings.defaultServiceHeader = header;
    };
    WebSDK.prototype.setSelectedServiceUrl = function (url) {
        this.settingsWrapper.settings.selectedServiceUrl = url;
    };
    WebSDK.prototype.setProxySettingsYamlContent = function (content) {
        this.settingsWrapper.settings.settingsProxyYaml = content;
    };
    WebSDK.prototype.setBackEndInfHeaders = function (backendInf) {
        this.settingsWrapper.settings.backendInf = backendInf;
    };
    WebSDK.prototype.setRegionalDefinition = function (regionalSettings) {
        this.settingsWrapper.settings.regionalDefinition = regionalSettings;
    };
    WebSDK.prototype.setGlobalLR = function (regionalSettings) {
        this.settingsWrapper.settings.regionalDefinition = regionalSettings;
    };
    WebSDK.prototype.setEnvironment = function (env) {
        this.rendererManager.setEnvironment(env);
    };
    WebSDK.prototype.setYamlLogType = function (logType) {
        this.rendererManager.setYamlLogType(logType);
    };
    WebSDK.prototype.setPageTitle = function (title) {
        this.settingsWrapper.settings.title;
    };
    WebSDK.prototype.setFavicon = function (favicon) {
        this.settingsWrapper.settings.favicon;
    };
    WebSDK.prototype.getUXManager = function () {
        return this.ux;
    };
    WebSDK.prototype.migrateLegacySettings = function (settings) {
        return _build_legacy__WEBPACK_IMPORTED_MODULE_20__.Legacy.migrateLegacySettings(settings);
    };
    return WebSDK;
}());



/***/ }),

/***/ "./src/components/providers/ChartComponents.ts":
/*!*****************************************************!*\
  !*** ./src/components/providers/ChartComponents.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "chartLibrary": () => (/* binding */ chartLibrary)
/* harmony export */ });
/* harmony import */ var chart_js_auto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chart.js/auto */ "../../node_modules/chart.js/auto/auto.mjs");

var chartLibrary = { Doughnut: chart_js_auto__WEBPACK_IMPORTED_MODULE_0__["default"], Bar: chart_js_auto__WEBPACK_IMPORTED_MODULE_0__["default"], Line: chart_js_auto__WEBPACK_IMPORTED_MODULE_0__["default"] };



/***/ }),

/***/ "./src/components/providers/ComponentPropertyMapping.ts":
/*!**************************************************************!*\
  !*** ./src/components/providers/ComponentPropertyMapping.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LocalPropMapping": () => (/* binding */ LocalPropMapping),
/* harmony export */   "VuetifyPropMapping": () => (/* binding */ VuetifyPropMapping)
/* harmony export */ });
var VuetifyPropMapping = {
    "VTextField": "internalValue",
    "VExpansionPanels": "internalValue",
    "VSwitch": "inputValue",
    "VCheckbox": "inputValue"
};
var LocalPropMapping = {
    "VInlineDatepicker": "internalValue"
};



/***/ }),

/***/ "./src/components/providers/ComponentProvider.ts":
/*!*******************************************************!*\
  !*** ./src/components/providers/ComponentProvider.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentProvider": () => (/* binding */ ComponentProvider)
/* harmony export */ });
/* harmony import */ var _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../common/shrimp/interfaces/quick/IWebSDK */ "../../common/shrimp/interfaces/quick/IWebSDK.ts");
/* harmony import */ var _DevexpressComponents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DevexpressComponents */ "./src/components/providers/DevexpressComponents.ts");
/* harmony import */ var _LocalComponents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LocalComponents */ "./src/components/providers/LocalComponents.ts");
/* harmony import */ var _VuetifyComponents__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./VuetifyComponents */ "./src/components/providers/VuetifyComponents.ts");
/* harmony import */ var _ChartComponents__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ChartComponents */ "./src/components/providers/ChartComponents.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};





var ComponentProvider = /** @class */ (function () {
    function ComponentProvider() {
    }
    ComponentProvider.checkComponents = function (name) {
        if (_ChartComponents__WEBPACK_IMPORTED_MODULE_4__.chartLibrary[name] || _VuetifyComponents__WEBPACK_IMPORTED_MODULE_3__.vuetifyLibrary[name] || _LocalComponents__WEBPACK_IMPORTED_MODULE_2__.GoldenLayoutComponents[name] || ComponentProvider.editorcompList[name]) {
            return true;
        }
        var lazyComponent = _LocalComponents__WEBPACK_IMPORTED_MODULE_2__.localComponents[name] || _DevexpressComponents__WEBPACK_IMPORTED_MODULE_1__.devExpressLibrary[name];
        if (lazyComponent) {
            if (lazyComponent.loaded === false) {
                return new Promise(function (res, rej) {
                    var _a, _b;
                    (_b = (_a = lazyComponent.importFunc()).then) === null || _b === void 0 ? void 0 : _b.call(_a, function () {
                        res(true);
                    });
                });
            }
            return true;
        }
        return false;
    };
    ComponentProvider.getLibrary = function (companyLibraryGroup) {
        var componentLibrary = __assign(__assign(__assign(__assign({}, _VuetifyComponents__WEBPACK_IMPORTED_MODULE_3__.vuetifyLibrary), _DevexpressComponents__WEBPACK_IMPORTED_MODULE_1__.devExpressLibrary), _ChartComponents__WEBPACK_IMPORTED_MODULE_4__.chartLibrary), _LocalComponents__WEBPACK_IMPORTED_MODULE_2__.GoldenLayoutComponents);
        return componentLibrary;
    };
    ComponentProvider.setOverrideComp = function (cb) {
        ComponentProvider.overrideComp = cb;
    };
    ComponentProvider.getComponentList = function (companyLibraryGroup) {
        var componentLibrary = {};
        if (companyLibraryGroup.includes(_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Vuetify)) {
            componentLibrary[_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Vuetify] = _VuetifyComponents__WEBPACK_IMPORTED_MODULE_3__.vuetifyLibrary;
        }
        if (companyLibraryGroup.includes(_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.DevExpress)) {
            componentLibrary[_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.DevExpress] = _DevexpressComponents__WEBPACK_IMPORTED_MODULE_1__.devExpressLibrary;
        }
        if (companyLibraryGroup.includes(_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Chart)) {
            componentLibrary[_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Chart] = _ChartComponents__WEBPACK_IMPORTED_MODULE_4__.chartLibrary;
        }
        if (companyLibraryGroup.includes(_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Local)) {
            componentLibrary[_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Local] = _LocalComponents__WEBPACK_IMPORTED_MODULE_2__.localComponents;
        }
        if (companyLibraryGroup.includes(_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.GoldenLayout)) {
            componentLibrary[_common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.GoldenLayout] = _LocalComponents__WEBPACK_IMPORTED_MODULE_2__.GoldenLayoutComponents;
        }
        return componentLibrary;
    };
    ComponentProvider.getComponentProps = function (companyLibraryGroup, name) {
        return ComponentProvider.getLibrary(companyLibraryGroup)[name].props;
    };
    ComponentProvider.getComponentEvents = function (companyLibraryGroup, name) {
        return ComponentProvider.getLibrary(companyLibraryGroup)[name].methods;
    };
    ComponentProvider.getComponentConst = function (name) {
        var _a;
        var overrideCompParent = (_a = ComponentProvider.overrideComp) === null || _a === void 0 ? void 0 : _a.call(ComponentProvider, name);
        var returnTarget;
        if (overrideCompParent) {
            returnTarget = { compInstance: overrideCompParent, CompType: _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Vuetify };
        }
        else if (_VuetifyComponents__WEBPACK_IMPORTED_MODULE_3__.vuetifyLibrary[name]) {
            returnTarget = { compInstance: _VuetifyComponents__WEBPACK_IMPORTED_MODULE_3__.vuetifyLibrary[name], CompType: _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Vuetify };
        }
        else if (_LocalComponents__WEBPACK_IMPORTED_MODULE_2__.localComponents[name]) {
            returnTarget = { compInstance: _LocalComponents__WEBPACK_IMPORTED_MODULE_2__.localComponents[name].module ? _LocalComponents__WEBPACK_IMPORTED_MODULE_2__.localComponents[name].module : _LocalComponents__WEBPACK_IMPORTED_MODULE_2__.localComponents[name], CompType: _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Local };
        }
        else if (_DevexpressComponents__WEBPACK_IMPORTED_MODULE_1__.devExpressLibrary[name]) {
            returnTarget = { compInstance: _DevexpressComponents__WEBPACK_IMPORTED_MODULE_1__.devExpressLibrary[name].module, CompType: _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.DevExpress };
            returnTarget.compInstance.options.name = name;
        }
        else if (_ChartComponents__WEBPACK_IMPORTED_MODULE_4__.chartLibrary[name]) {
            returnTarget = { compInstance: _ChartComponents__WEBPACK_IMPORTED_MODULE_4__.chartLibrary[name], CompType: _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Chart };
        }
        else if (_LocalComponents__WEBPACK_IMPORTED_MODULE_2__.GoldenLayoutComponents[name]) {
            returnTarget = { compInstance: _LocalComponents__WEBPACK_IMPORTED_MODULE_2__.GoldenLayoutComponents[name], CompType: _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.GoldenLayout };
        }
        return returnTarget;
    };
    ComponentProvider.editorcompList = {
        "Messaging": 1,
        "QTimer": 1,
        "QIdleTimer": 1
    };
    return ComponentProvider;
}());

;


/***/ }),

/***/ "./src/components/providers/DevexpressComponents.ts":
/*!**********************************************************!*\
  !*** ./src/components/providers/DevexpressComponents.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "devExpressLibrary": () => (/* binding */ devExpressLibrary)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

var devExpressLib = /** @class */ (function () {
    function devExpressLib() {
    }
    devExpressLib.importFuncDataGrid = function () {
        return __awaiter(this, void 0, void 0, function () {
            var dxDataGridComponentSet, lib;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        dxDataGridComponentSet = ["DxColumn", "DxEditing", "DxSorting", "DxPager", "DxScrolling", "DxPaging", "DxHeaderFilter", "DxFilterRow", "DxSelection", "DxSearchPanel", "DxExport", "DxRowDragging", "DxMasterDetail", "DxSummary", "DxTotalItem", "DxStateStoring", "DxColumnChooser", "DxColumnFixing", "DxDataGrid"];
                        return [4 /*yield*/, Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_devextreme-vue_core_index_js-node_modules_devextreme_ui_button_js"), __webpack_require__.e("vendors-node_modules_devextreme_ui_grid_core_ui_grid_core_adaptivity_js-node_modules_devextre-905f08"), __webpack_require__.e("vendors-node_modules_devextreme-vue_data-grid_js")]).then(__webpack_require__.bind(__webpack_require__, /*! devextreme-vue/data-grid */ "../../node_modules/devextreme-vue/data-grid.js"))];
                    case 1:
                        lib = _a.sent();
                        dxDataGridComponentSet.forEach(function (comp) {
                            devExpressLib.devExpressLibrary[comp].loaded = true;
                            devExpressLib.devExpressLibrary[comp].module = lib[comp];
                            lib[comp].options.name = comp;
                            vue__WEBPACK_IMPORTED_MODULE_0__["default"].component(comp, lib[comp]);
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    devExpressLib.importFuncTreeList = function () {
        return __awaiter(this, void 0, void 0, function () {
            var dxTreeListComponentSet, lib;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        dxTreeListComponentSet = ["DxTreeList"];
                        return [4 /*yield*/, Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_devextreme-vue_core_index_js-node_modules_devextreme_ui_button_js"), __webpack_require__.e("vendors-node_modules_devextreme_ui_grid_core_ui_grid_core_adaptivity_js-node_modules_devextre-905f08"), __webpack_require__.e("vendors-node_modules_devextreme-vue_tree-list_js")]).then(__webpack_require__.bind(__webpack_require__, /*! devextreme-vue/tree-list */ "../../node_modules/devextreme-vue/tree-list.js"))];
                    case 1:
                        lib = _a.sent();
                        dxTreeListComponentSet.forEach(function (comp) {
                            devExpressLib.devExpressLibrary[comp].loaded = true;
                            devExpressLib.devExpressLibrary[comp].module = lib[comp];
                            lib[comp].options.name = comp;
                            vue__WEBPACK_IMPORTED_MODULE_0__["default"].component(comp, lib[comp]);
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    devExpressLib.importFuncButton = function () {
        return __awaiter(this, void 0, void 0, function () {
            var dxButtonComponentSet, lib;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        dxButtonComponentSet = ["DxButton"];
                        return [4 /*yield*/, Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_devextreme-vue_core_index_js-node_modules_devextreme_ui_button_js"), __webpack_require__.e("node_modules_devextreme-vue_button_js")]).then(__webpack_require__.bind(__webpack_require__, /*! devextreme-vue/button */ "../../node_modules/devextreme-vue/button.js"))];
                    case 1:
                        lib = _a.sent();
                        dxButtonComponentSet.forEach(function (comp) {
                            devExpressLib.devExpressLibrary[comp].loaded = true;
                            devExpressLib.devExpressLibrary[comp].module = lib[comp];
                            lib[comp].options.name = comp;
                            vue__WEBPACK_IMPORTED_MODULE_0__["default"].component(comp, lib[comp]);
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    devExpressLib.devExpressLibrary = {
        DxDataGrid: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxColumn: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxSorting: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxPager: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxScrolling: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxPaging: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxHeaderFilter: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxFilterRow: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxSelection: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxSearchPanel: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxExport: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxRowDragging: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxMasterDetail: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxStateStoring: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxSummary: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxTotalItem: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxColumnChooser: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxColumnFixing: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxEditing: {
            importFunc: function () { return devExpressLib.importFuncDataGrid(); },
            loaded: false, module: undefined
        },
        DxTreeList: {
            importFunc: function () { return devExpressLib.importFuncTreeList(); },
            loaded: false, module: undefined
        },
        DxButton: {
            importFunc: function () { return devExpressLib.importFuncButton(); },
            loaded: false, module: undefined
        }
    };
    return devExpressLib;
}());
var devExpressLibrary = devExpressLib.devExpressLibrary;



/***/ }),

/***/ "./src/components/providers/LocalComponents.ts":
/*!*****************************************************!*\
  !*** ./src/components/providers/LocalComponents.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GoldenLayoutComponents": () => (/* binding */ GoldenLayoutComponents),
/* harmony export */   "localComponents": () => (/* binding */ localComponents)
/* harmony export */ });
/* harmony import */ var _quick_DError_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../quick/DError.vue */ "./src/components/quick/DError.vue");
/* harmony import */ var _quick_Ghost_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../quick/Ghost.vue */ "./src/components/quick/Ghost.vue");
/* harmony import */ var _quick_GoldenLayout_GoldenLayoutWrapper_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../quick/GoldenLayout/GoldenLayoutWrapper.vue */ "./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue");
/* harmony import */ var _quick_LocalComponentWrappers_TSComponentWrapper_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quick/LocalComponentWrappers/TSComponentWrapper.vue */ "./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue");
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};




var localLib = /** @class */ (function () {
    function localLib() {
    }
    localLib.localLibrary = {
        DError: _quick_DError_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
        TSComponentWrapper: _quick_LocalComponentWrappers_TSComponentWrapper_vue__WEBPACK_IMPORTED_MODULE_3__["default"],
        Ghost: _quick_Ghost_vue__WEBPACK_IMPORTED_MODULE_1__["default"],
        GroupBox: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_GroupBox_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/GroupBox.vue */ "./src/components/quick/GroupBox.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.GroupBox.loaded = true;
                    localComponents.GroupBox.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        VContainer: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_VuetifyComponentWrappers_VContainer_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/VuetifyComponentWrappers/VContainer.vue */ "./src/components/quick/VuetifyComponentWrappers/VContainer.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.VContainer.loaded = true;
                    localComponents.VContainer.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        VCol: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_VuetifyComponentWrappers_VCol_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/VuetifyComponentWrappers/VCol.vue */ "./src/components/quick/VuetifyComponentWrappers/VCol.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.VCol.loaded = true;
                    localComponents.VCol.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        VRow: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_VuetifyComponentWrappers_VRow_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/VuetifyComponentWrappers/VRow.vue */ "./src/components/quick/VuetifyComponentWrappers/VRow.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.VRow.loaded = true;
                    localComponents.VRow.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QLabel: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_QLabel_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QLabel.vue */ "./src/components/quick/QLabel.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QLabel.loaded = true;
                    localComponents.QLabel.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QDocumentViewer: {
            importFunc: function () {
                var promList = [];
                promList.push(Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_pdfvuer_dist_pdfvuer_umd_js"), __webpack_require__.e("src_components_quick_QDocumentViewer_vue")]).then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QDocumentViewer.vue */ "./src/components/quick/QDocumentViewer.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QDocumentViewer.loaded = true;
                    localComponents.QDocumentViewer.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QPhoneInput: {
            importFunc: function () {
                var promList = [];
                promList.push(Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_v-mask_dist_v-mask_esm_js-node_modules_libphonenumber-js_min_exports_AsY-a65ec8"), __webpack_require__.e("src_components_quick_QPhoneInput_vue")]).then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QPhoneInput.vue */ "./src/components/quick/QPhoneInput.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QPhoneInput.loaded = true;
                    localComponents.QPhoneInput.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QLightBox: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_QLightBox_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QLightBox.vue */ "./src/components/quick/QLightBox.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QLightBox.loaded = true;
                    localComponents.QLightBox.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        VInlineDatepicker: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_VInlineDatepicker_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/VInlineDatepicker.vue */ "./src/components/quick/VInlineDatepicker.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.VInlineDatepicker.loaded = true;
                    localComponents.VInlineDatepicker.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QReCaptcha: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_QReCaptcha_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QReCaptcha.vue */ "./src/components/quick/QReCaptcha.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QReCaptcha.loaded = true;
                    localComponents.QReCaptcha.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        DataGrid: {
            importFunc: function () {
                var promList = [];
                promList.push(Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_devextreme-vue_core_index_js-node_modules_devextreme_ui_button_js"), __webpack_require__.e("vendors-node_modules_devextreme_ui_grid_core_ui_grid_core_adaptivity_js-node_modules_devextre-905f08"), __webpack_require__.e("vendors-node_modules_devextreme-vue_data-grid_js"), __webpack_require__.e("src_components_quick_DevExpress_DataGrid_vue")]).then(__webpack_require__.bind(__webpack_require__, /*! ../quick/DevExpress/DataGrid.vue */ "./src/components/quick/DevExpress/DataGrid.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.DataGrid.loaded = true;
                    localComponents.DataGrid.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        CustomAvatarComp: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_CustomAvatarComp_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/CustomAvatarComp.vue */ "./src/components/quick/CustomAvatarComp.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.CustomAvatarComp.loaded = true;
                    localComponents.CustomAvatarComp.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QTableCell: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_QTableCell_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QTableCell.vue */ "./src/components/quick/QTableCell.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QTableCell.loaded = true;
                    localComponents.QTableCell.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QRichText: {
            importFunc: function () {
                var promList = [];
                promList.push(Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_vuetify_dist_vuetify_min_css"), __webpack_require__.e("vendors-node_modules_tiptap-vuetify_dist_bundle-esm_js-node_modules_tiptap-vuetify_dist_main_css"), __webpack_require__.e("src_components_quick_QRichText_vue-data_image_png_base64_iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYA-2f8b57")]).then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QRichText.vue */ "./src/components/quick/QRichText.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QRichText.loaded = true;
                    localComponents.QRichText.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        Tooltip: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_Tooltip_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/Tooltip.vue */ "./src/components/quick/Tooltip.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.Tooltip.loaded = true;
                    localComponents.Tooltip.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        LiveConnection: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_LiveConnection_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/LiveConnection.vue */ "./src/components/quick/LiveConnection.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.LiveConnection.loaded = true;
                    localComponents.LiveConnection.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        VPdfFileViewer: {
            importFunc: function () {
                var promList = [];
                promList.push(Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_pdfvuer_dist_pdfvuer_umd_js"), __webpack_require__.e("src_components_quick_QDocumentViewer_vue"), __webpack_require__.e("src_components_quick_VuetifyComponentWrappers_VPdfFileViewer_vue")]).then(__webpack_require__.bind(__webpack_require__, /*! ../quick/VuetifyComponentWrappers/VPdfFileViewer.vue */ "./src/components/quick/VuetifyComponentWrappers/VPdfFileViewer.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.VPdfFileViewer.loaded = true;
                    localComponents.VPdfFileViewer.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QImgZoom: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_QImgZoom_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QImgZoom.vue */ "./src/components/quick/QImgZoom.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QImgZoom.loaded = true;
                    localComponents.QImgZoom.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        VInlineTimePicker: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_VInlineTimePicker_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/VInlineTimePicker.vue */ "./src/components/quick/VInlineTimePicker.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.VInlineTimePicker.loaded = true;
                    localComponents.VInlineTimePicker.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QTutorial: {
            importFunc: function () {
                var promList = [];
                promList.push(Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_intro_js_intro_js-node_modules_intro_js_minified_introjs_min_css"), __webpack_require__.e("src_components_quick_QTutorial_vue")]).then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QTutorial.vue */ "./src/components/quick/QTutorial.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QTutorial.loaded = true;
                    localComponents.QTutorial.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        CustomComponent: {},
        CustomChild: {},
        QLegend: {},
        QCaptcha: {},
        QQRCode: {},
        QDynamicFields: {},
        QQrReader: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_QQrReader_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QQrReader.vue */ "./src/components/quick/QQrReader.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QQrReader.loaded = true;
                    localComponents.QQrReader.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QMenu: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_QMenu_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QMenu.vue */ "./src/components/quick/QMenu.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QMenu.loaded = true;
                    localComponents.QMenu.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QFrame: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_QFrame_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QFrame.vue */ "./src/components/quick/QFrame.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QFrame.loaded = true;
                    localComponents.QFrame.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QVideo: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_QVideo_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QVideo.vue */ "./src/components/quick/QVideo.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QVideo.loaded = true;
                    localComponents.QVideo.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        QMap: {
            importFunc: function () {
                var promList = [];
                promList.push(Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_gmap-vue_dist_main_js"), __webpack_require__.e("src_components_quick_QMap_vue")]).then(__webpack_require__.bind(__webpack_require__, /*! ../quick/QMap.vue */ "./src/components/quick/QMap.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.QMap.loaded = true;
                    localComponents.QMap.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        },
        VSubElement: {
            importFunc: function () {
                var promList = [];
                promList.push(__webpack_require__.e(/*! import() */ "src_components_quick_VuetifyComponentWrappers_VSubElement_vue").then(__webpack_require__.bind(__webpack_require__, /*! ../quick/VuetifyComponentWrappers/VSubElement.vue */ "./src/components/quick/VuetifyComponentWrappers/VSubElement.vue")));
                return Promise.allSettled(promList).then(function (_a) {
                    var _b = __read(_a, 1), lib = _b[0];
                    localComponents.VSubElement.loaded = true;
                    localComponents.VSubElement.module = lib.value.default;
                });
            },
            loaded: false, module: undefined
        }
    };
    return localLib;
}());
var localComponents = localLib.localLibrary;
var GoldenLayoutComponents = {
    GoldenLayout: _quick_GoldenLayout_GoldenLayoutWrapper_vue__WEBPACK_IMPORTED_MODULE_2__["default"]
};



/***/ }),

/***/ "./src/components/providers/VuetifyComponents.ts":
/*!*******************************************************!*\
  !*** ./src/components/providers/VuetifyComponents.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "vuetifyLibrary": () => (/* binding */ vuetifyLibrary)
/* harmony export */ });
/* harmony import */ var vuetify_lib_components_VAlert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vuetify/lib/components/VAlert */ "../../node_modules/vuetify/lib/components/VAlert/index.js");
/* harmony import */ var vuetify_lib_components_VAppBar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vuetify/lib/components/VAppBar */ "../../node_modules/vuetify/lib/components/VAppBar/VAppBar.js");
/* harmony import */ var vuetify_lib_components_VAutocomplete__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vuetify/lib/components/VAutocomplete */ "../../node_modules/vuetify/lib/components/VAutocomplete/index.js");
/* harmony import */ var vuetify_lib_components_VAvatar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vuetify/lib/components/VAvatar */ "../../node_modules/vuetify/lib/components/VAvatar/index.js");
/* harmony import */ var vuetify_lib_components_VBadge__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! vuetify/lib/components/VBadge */ "../../node_modules/vuetify/lib/components/VBadge/index.js");
/* harmony import */ var vuetify_lib_components_VBanner__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! vuetify/lib/components/VBanner */ "../../node_modules/vuetify/lib/components/VBanner/index.js");
/* harmony import */ var vuetify_lib_components_VBottomNavigation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vuetify/lib/components/VBottomNavigation */ "../../node_modules/vuetify/lib/components/VBottomNavigation/index.js");
/* harmony import */ var vuetify_lib_components_VBottomSheet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vuetify/lib/components/VBottomSheet */ "../../node_modules/vuetify/lib/components/VBottomSheet/index.js");
/* harmony import */ var vuetify_lib_components_VBreadcrumbs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vuetify/lib/components/VBreadcrumbs */ "../../node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbs.js");
/* harmony import */ var vuetify_lib_components_VBreadcrumbs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vuetify/lib/components/VBreadcrumbs */ "../../node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbsItem.js");
/* harmony import */ var vuetify_lib_components_VBreadcrumbs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vuetify/lib/components/VBreadcrumbs */ "../../node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbsDivider.js");
/* harmony import */ var vuetify_lib_components_VBtn__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vuetify/lib/components/VBtn */ "../../node_modules/vuetify/lib/components/VBtn/index.js");
/* harmony import */ var vuetify_lib_components_VBtnToggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! vuetify/lib/components/VBtnToggle */ "../../node_modules/vuetify/lib/components/VBtnToggle/index.js");
/* harmony import */ var vuetify_lib_components_VCard__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vuetify/lib/components/VCard */ "../../node_modules/vuetify/lib/components/VCard/VCard.js");
/* harmony import */ var vuetify_lib_components_VCarousel__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! vuetify/lib/components/VCarousel */ "../../node_modules/vuetify/lib/components/VCarousel/VCarousel.js");
/* harmony import */ var vuetify_lib_components_VCarousel__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! vuetify/lib/components/VCarousel */ "../../node_modules/vuetify/lib/components/VCarousel/VCarouselItem.js");
/* harmony import */ var vuetify_lib_components_VCheckbox__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vuetify/lib/components/VCheckbox */ "../../node_modules/vuetify/lib/components/VCheckbox/VCheckbox.js");
/* harmony import */ var vuetify_lib_components_VChip__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! vuetify/lib/components/VChip */ "../../node_modules/vuetify/lib/components/VChip/index.js");
/* harmony import */ var vuetify_lib_components_VChipGroup__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! vuetify/lib/components/VChipGroup */ "../../node_modules/vuetify/lib/components/VChipGroup/index.js");
/* harmony import */ var vuetify_lib_components_VCombobox__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! vuetify/lib/components/VCombobox */ "../../node_modules/vuetify/lib/components/VCombobox/index.js");
/* harmony import */ var vuetify_lib_components_VDataIterator__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! vuetify/lib/components/VDataIterator */ "../../node_modules/vuetify/lib/components/VDataIterator/VDataIterator.js");
/* harmony import */ var vuetify_lib_components_VDataTable__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! vuetify/lib/components/VDataTable */ "../../node_modules/vuetify/lib/components/VDataTable/VDataTable.js");
/* harmony import */ var vuetify_lib_components_VDataTable__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! vuetify/lib/components/VDataTable */ "../../node_modules/vuetify/lib/components/VDataTable/VEditDialog.js");
/* harmony import */ var vuetify_lib_components_VDatePicker__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! vuetify/lib/components/VDatePicker */ "../../node_modules/vuetify/lib/components/VDatePicker/VDatePicker.js");
/* harmony import */ var vuetify_lib_components_VDialog__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! vuetify/lib/components/VDialog */ "../../node_modules/vuetify/lib/components/VDialog/index.js");
/* harmony import */ var vuetify_lib_components_VDivider__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! vuetify/lib/components/VDivider */ "../../node_modules/vuetify/lib/components/VDivider/index.js");
/* harmony import */ var vuetify_lib_components_VExpansionPanel__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! vuetify/lib/components/VExpansionPanel */ "../../node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanel.js");
/* harmony import */ var vuetify_lib_components_VExpansionPanel__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! vuetify/lib/components/VExpansionPanel */ "../../node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanels.js");
/* harmony import */ var vuetify_lib_components_VExpansionPanel__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! vuetify/lib/components/VExpansionPanel */ "../../node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelContent.js");
/* harmony import */ var vuetify_lib_components_VExpansionPanel__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! vuetify/lib/components/VExpansionPanel */ "../../node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelHeader.js");
/* harmony import */ var vuetify_lib_components_VFileInput__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! vuetify/lib/components/VFileInput */ "../../node_modules/vuetify/lib/components/VFileInput/index.js");
/* harmony import */ var vuetify_lib_components_VFooter__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! vuetify/lib/components/VFooter */ "../../node_modules/vuetify/lib/components/VFooter/index.js");
/* harmony import */ var vuetify_lib_components_VForm__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! vuetify/lib/components/VForm */ "../../node_modules/vuetify/lib/components/VForm/index.js");
/* harmony import */ var vuetify_lib_components_VIcon__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! vuetify/lib/components/VIcon */ "../../node_modules/vuetify/lib/components/VIcon/index.js");
/* harmony import */ var vuetify_lib_components_VImg__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! vuetify/lib/components/VImg */ "../../node_modules/vuetify/lib/components/VImg/index.js");
/* harmony import */ var vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! vuetify/lib/components/VList */ "../../node_modules/vuetify/lib/components/VList/VList.js");
/* harmony import */ var vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! vuetify/lib/components/VList */ "../../node_modules/vuetify/lib/components/VList/VListGroup.js");
/* harmony import */ var vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! vuetify/lib/components/VList */ "../../node_modules/vuetify/lib/components/VList/VListItemGroup.js");
/* harmony import */ var vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! vuetify/lib/components/VList */ "../../node_modules/vuetify/lib/components/VList/VListItem.js");
/* harmony import */ var vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! vuetify/lib/components/VList */ "../../node_modules/vuetify/lib/components/VList/VListItemAvatar.js");
/* harmony import */ var vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! vuetify/lib/components/VList */ "../../node_modules/vuetify/lib/components/VList/VListItemAction.js");
/* harmony import */ var vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! vuetify/lib/components/VList */ "../../node_modules/vuetify/lib/components/VList/index.js");
/* harmony import */ var vuetify_lib_components_VMenu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuetify/lib/components/VMenu */ "../../node_modules/vuetify/lib/components/VMenu/VMenu.js");
/* harmony import */ var vuetify_lib_components_VNavigationDrawer__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! vuetify/lib/components/VNavigationDrawer */ "../../node_modules/vuetify/lib/components/VNavigationDrawer/index.js");
/* harmony import */ var vuetify_lib_components_VOverflowBtn__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! vuetify/lib/components/VOverflowBtn */ "../../node_modules/vuetify/lib/components/VOverflowBtn/index.js");
/* harmony import */ var vuetify_lib_components_VOverlay__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! vuetify/lib/components/VOverlay */ "../../node_modules/vuetify/lib/components/VOverlay/index.js");
/* harmony import */ var vuetify_lib_components_VPagination__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! vuetify/lib/components/VPagination */ "../../node_modules/vuetify/lib/components/VPagination/index.js");
/* harmony import */ var vuetify_lib_components_VParallax__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! vuetify/lib/components/VParallax */ "../../node_modules/vuetify/lib/components/VParallax/index.js");
/* harmony import */ var vuetify_lib_components_VProgressCircular__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! vuetify/lib/components/VProgressCircular */ "../../node_modules/vuetify/lib/components/VProgressCircular/index.js");
/* harmony import */ var vuetify_lib_components_VProgressLinear__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! vuetify/lib/components/VProgressLinear */ "../../node_modules/vuetify/lib/components/VProgressLinear/index.js");
/* harmony import */ var vuetify_lib_components_VRadioGroup__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! vuetify/lib/components/VRadioGroup */ "../../node_modules/vuetify/lib/components/VRadioGroup/VRadioGroup.js");
/* harmony import */ var vuetify_lib_components_VRadioGroup__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! vuetify/lib/components/VRadioGroup */ "../../node_modules/vuetify/lib/components/VRadioGroup/VRadio.js");
/* harmony import */ var vuetify_lib_components_VRangeSlider__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! vuetify/lib/components/VRangeSlider */ "../../node_modules/vuetify/lib/components/VRangeSlider/index.js");
/* harmony import */ var vuetify_lib_components_VRating__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! vuetify/lib/components/VRating */ "../../node_modules/vuetify/lib/components/VRating/index.js");
/* harmony import */ var vuetify_lib_components_VSelect__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! vuetify/lib/components/VSelect */ "../../node_modules/vuetify/lib/components/VSelect/index.js");
/* harmony import */ var vuetify_lib_components_VSheet__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! vuetify/lib/components/VSheet */ "../../node_modules/vuetify/lib/components/VSheet/index.js");
/* harmony import */ var vuetify_lib_components_VSkeletonLoader__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! vuetify/lib/components/VSkeletonLoader */ "../../node_modules/vuetify/lib/components/VSkeletonLoader/index.js");
/* harmony import */ var vuetify_lib_components_VSlideGroup__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! vuetify/lib/components/VSlideGroup */ "../../node_modules/vuetify/lib/components/VSlideGroup/VSlideGroup.js");
/* harmony import */ var vuetify_lib_components_VSlideGroup__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! vuetify/lib/components/VSlideGroup */ "../../node_modules/vuetify/lib/components/VSlideGroup/VSlideItem.js");
/* harmony import */ var vuetify_lib_components_VSlider__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! vuetify/lib/components/VSlider */ "../../node_modules/vuetify/lib/components/VSlider/index.js");
/* harmony import */ var vuetify_lib_components_VSnackbar__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! vuetify/lib/components/VSnackbar */ "../../node_modules/vuetify/lib/components/VSnackbar/VSnackbar.js");
/* harmony import */ var vuetify_lib_components_VSparkline__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! vuetify/lib/components/VSparkline */ "../../node_modules/vuetify/lib/components/VSparkline/VSparkline.js");
/* harmony import */ var vuetify_lib_components_VStepper__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! vuetify/lib/components/VStepper */ "../../node_modules/vuetify/lib/components/VStepper/VStepper.js");
/* harmony import */ var vuetify_lib_components_VStepper__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! vuetify/lib/components/VStepper */ "../../node_modules/vuetify/lib/components/VStepper/index.js");
/* harmony import */ var vuetify_lib_components_VStepper__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! vuetify/lib/components/VStepper */ "../../node_modules/vuetify/lib/components/VStepper/VStepperStep.js");
/* harmony import */ var vuetify_lib_components_VStepper__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! vuetify/lib/components/VStepper */ "../../node_modules/vuetify/lib/components/VStepper/VStepperContent.js");
/* harmony import */ var vuetify_lib_components_VSwitch__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! vuetify/lib/components/VSwitch */ "../../node_modules/vuetify/lib/components/VSwitch/index.js");
/* harmony import */ var vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! vuetify/lib/components/VTabs */ "../../node_modules/vuetify/lib/components/VTabs/VTabs.js");
/* harmony import */ var vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! vuetify/lib/components/VTabs */ "../../node_modules/vuetify/lib/components/VTabs/VTab.js");
/* harmony import */ var vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! vuetify/lib/components/VTabs */ "../../node_modules/vuetify/lib/components/VTabs/VTabsItems.js");
/* harmony import */ var vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! vuetify/lib/components/VTabs */ "../../node_modules/vuetify/lib/components/VTabs/VTabItem.js");
/* harmony import */ var vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! vuetify/lib/components/VTabs */ "../../node_modules/vuetify/lib/components/VTabs/VTabsSlider.js");
/* harmony import */ var vuetify_lib_components_VTextarea__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! vuetify/lib/components/VTextarea */ "../../node_modules/vuetify/lib/components/VTextarea/index.js");
/* harmony import */ var vuetify_lib_components_VTextField__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! vuetify/lib/components/VTextField */ "../../node_modules/vuetify/lib/components/VTextField/index.js");
/* harmony import */ var vuetify_lib_components_VTimeline__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! vuetify/lib/components/VTimeline */ "../../node_modules/vuetify/lib/components/VTimeline/VTimeline.js");
/* harmony import */ var vuetify_lib_components_VTimeline__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! vuetify/lib/components/VTimeline */ "../../node_modules/vuetify/lib/components/VTimeline/VTimelineItem.js");
/* harmony import */ var vuetify_lib_components_VTimePicker__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! vuetify/lib/components/VTimePicker */ "../../node_modules/vuetify/lib/components/VTimePicker/VTimePicker.js");
/* harmony import */ var vuetify_lib_components_VToolbar__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! vuetify/lib/components/VToolbar */ "../../node_modules/vuetify/lib/components/VToolbar/VToolbar.js");
/* harmony import */ var vuetify_lib_components_VTooltip__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! vuetify/lib/components/VTooltip */ "../../node_modules/vuetify/lib/components/VTooltip/index.js");
/* harmony import */ var vuetify_lib_components_VTreeview__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! vuetify/lib/components/VTreeview */ "../../node_modules/vuetify/lib/components/VTreeview/VTreeview.js");

























































var vuetifyLibrary = {
    VMenu: vuetify_lib_components_VMenu__WEBPACK_IMPORTED_MODULE_0__["default"],
    VAppBar: vuetify_lib_components_VAppBar__WEBPACK_IMPORTED_MODULE_1__["default"],
    VAlert: vuetify_lib_components_VAlert__WEBPACK_IMPORTED_MODULE_2__["default"],
    VAutocomplete: vuetify_lib_components_VAutocomplete__WEBPACK_IMPORTED_MODULE_3__["default"],
    VAvatar: vuetify_lib_components_VAvatar__WEBPACK_IMPORTED_MODULE_4__["default"],
    VBottomNavigation: vuetify_lib_components_VBottomNavigation__WEBPACK_IMPORTED_MODULE_5__["default"],
    VBottomSheet: vuetify_lib_components_VBottomSheet__WEBPACK_IMPORTED_MODULE_6__["default"],
    VBreadcrumbs: vuetify_lib_components_VBreadcrumbs__WEBPACK_IMPORTED_MODULE_7__["default"],
    VBreadcrumbsItem: vuetify_lib_components_VBreadcrumbs__WEBPACK_IMPORTED_MODULE_8__["default"],
    VBreadcrumbsDivider: vuetify_lib_components_VBreadcrumbs__WEBPACK_IMPORTED_MODULE_9__["default"],
    VBtn: vuetify_lib_components_VBtn__WEBPACK_IMPORTED_MODULE_10__["default"],
    VBtnToggle: vuetify_lib_components_VBtnToggle__WEBPACK_IMPORTED_MODULE_11__["default"],
    VCard: vuetify_lib_components_VCard__WEBPACK_IMPORTED_MODULE_12__["default"],
    VCarousel: vuetify_lib_components_VCarousel__WEBPACK_IMPORTED_MODULE_13__["default"],
    VCarouselItem: vuetify_lib_components_VCarousel__WEBPACK_IMPORTED_MODULE_14__["default"],
    VCheckbox: vuetify_lib_components_VCheckbox__WEBPACK_IMPORTED_MODULE_15__["default"],
    VStepper: vuetify_lib_components_VStepper__WEBPACK_IMPORTED_MODULE_16__["default"],
    VStepperHeader: vuetify_lib_components_VStepper__WEBPACK_IMPORTED_MODULE_17__.VStepperHeader,
    VStepperStep: vuetify_lib_components_VStepper__WEBPACK_IMPORTED_MODULE_18__["default"],
    VStepperItems: vuetify_lib_components_VStepper__WEBPACK_IMPORTED_MODULE_17__.VStepperItems,
    VStepperContent: vuetify_lib_components_VStepper__WEBPACK_IMPORTED_MODULE_19__["default"],
    VSparkline: vuetify_lib_components_VSparkline__WEBPACK_IMPORTED_MODULE_20__["default"],
    VChip: vuetify_lib_components_VChip__WEBPACK_IMPORTED_MODULE_21__["default"],
    VChipGroup: vuetify_lib_components_VChipGroup__WEBPACK_IMPORTED_MODULE_22__["default"],
    VCombobox: vuetify_lib_components_VCombobox__WEBPACK_IMPORTED_MODULE_23__["default"],
    VDataTable: vuetify_lib_components_VDataTable__WEBPACK_IMPORTED_MODULE_24__["default"],
    VDatePicker: vuetify_lib_components_VDatePicker__WEBPACK_IMPORTED_MODULE_25__["default"],
    VDialog: vuetify_lib_components_VDialog__WEBPACK_IMPORTED_MODULE_26__["default"],
    VDivider: vuetify_lib_components_VDivider__WEBPACK_IMPORTED_MODULE_27__["default"],
    VEditDialog: vuetify_lib_components_VDataTable__WEBPACK_IMPORTED_MODULE_28__["default"],
    VExpansionPanel: vuetify_lib_components_VExpansionPanel__WEBPACK_IMPORTED_MODULE_29__["default"],
    VExpansionPanels: vuetify_lib_components_VExpansionPanel__WEBPACK_IMPORTED_MODULE_30__["default"],
    VExpansionPanelContent: vuetify_lib_components_VExpansionPanel__WEBPACK_IMPORTED_MODULE_31__["default"],
    VExpansionPanelHeader: vuetify_lib_components_VExpansionPanel__WEBPACK_IMPORTED_MODULE_32__["default"],
    VFileInput: vuetify_lib_components_VFileInput__WEBPACK_IMPORTED_MODULE_33__["default"],
    VFooter: vuetify_lib_components_VFooter__WEBPACK_IMPORTED_MODULE_34__["default"],
    VForm: vuetify_lib_components_VForm__WEBPACK_IMPORTED_MODULE_35__["default"],
    VIcon: vuetify_lib_components_VIcon__WEBPACK_IMPORTED_MODULE_36__["default"],
    VImg: vuetify_lib_components_VImg__WEBPACK_IMPORTED_MODULE_37__["default"],
    VList: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_38__["default"],
    VListGroup: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_39__["default"],
    VListItemGroup: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_40__["default"],
    VListItem: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_41__["default"],
    VListItemAvatar: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_42__["default"],
    VListItemAction: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_43__["default"],
    VListItemTitle: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_44__.VListItemTitle,
    VListItemSubtitle: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_44__.VListItemSubtitle,
    VListItemActionText: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_44__.VListItemActionText,
    VListItemContent: vuetify_lib_components_VList__WEBPACK_IMPORTED_MODULE_44__.VListItemContent,
    VNavigationDrawer: vuetify_lib_components_VNavigationDrawer__WEBPACK_IMPORTED_MODULE_45__["default"],
    VOverflowBtn: vuetify_lib_components_VOverflowBtn__WEBPACK_IMPORTED_MODULE_46__["default"],
    VOverlay: vuetify_lib_components_VOverlay__WEBPACK_IMPORTED_MODULE_47__["default"],
    VPagination: vuetify_lib_components_VPagination__WEBPACK_IMPORTED_MODULE_48__["default"],
    VParallax: vuetify_lib_components_VParallax__WEBPACK_IMPORTED_MODULE_49__["default"],
    VProgressCircular: vuetify_lib_components_VProgressCircular__WEBPACK_IMPORTED_MODULE_50__["default"],
    VProgressLinear: vuetify_lib_components_VProgressLinear__WEBPACK_IMPORTED_MODULE_51__["default"],
    VRadioGroup: vuetify_lib_components_VRadioGroup__WEBPACK_IMPORTED_MODULE_52__["default"],
    VRadio: vuetify_lib_components_VRadioGroup__WEBPACK_IMPORTED_MODULE_53__["default"],
    VRangeSlider: vuetify_lib_components_VRangeSlider__WEBPACK_IMPORTED_MODULE_54__["default"],
    VRating: vuetify_lib_components_VRating__WEBPACK_IMPORTED_MODULE_55__["default"],
    VSheet: vuetify_lib_components_VSheet__WEBPACK_IMPORTED_MODULE_56__["default"],
    VSkeletonLoader: vuetify_lib_components_VSkeletonLoader__WEBPACK_IMPORTED_MODULE_57__["default"],
    VSelect: vuetify_lib_components_VSelect__WEBPACK_IMPORTED_MODULE_58__["default"],
    VSlider: vuetify_lib_components_VSlider__WEBPACK_IMPORTED_MODULE_59__["default"],
    VSwitch: vuetify_lib_components_VSwitch__WEBPACK_IMPORTED_MODULE_60__["default"],
    VTabs: vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_61__["default"],
    VTab: vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_62__["default"],
    VTabsItems: vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_63__["default"],
    VTabItem: vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_64__["default"],
    VTabsSlider: vuetify_lib_components_VTabs__WEBPACK_IMPORTED_MODULE_65__["default"],
    VTextField: vuetify_lib_components_VTextField__WEBPACK_IMPORTED_MODULE_66__["default"],
    VTextarea: vuetify_lib_components_VTextarea__WEBPACK_IMPORTED_MODULE_67__["default"],
    VToolbar: vuetify_lib_components_VToolbar__WEBPACK_IMPORTED_MODULE_68__["default"],
    VTooltip: vuetify_lib_components_VTooltip__WEBPACK_IMPORTED_MODULE_69__["default"],
    VTimeline: vuetify_lib_components_VTimeline__WEBPACK_IMPORTED_MODULE_70__["default"],
    VTimelineItem: vuetify_lib_components_VTimeline__WEBPACK_IMPORTED_MODULE_71__["default"],
    VTimePicker: vuetify_lib_components_VTimePicker__WEBPACK_IMPORTED_MODULE_72__["default"],
    VTreeview: vuetify_lib_components_VTreeview__WEBPACK_IMPORTED_MODULE_73__["default"],
    VSlideGroup: vuetify_lib_components_VSlideGroup__WEBPACK_IMPORTED_MODULE_74__["default"],
    VSlideItem: vuetify_lib_components_VSlideGroup__WEBPACK_IMPORTED_MODULE_75__["default"],
    VSnackbar: vuetify_lib_components_VSnackbar__WEBPACK_IMPORTED_MODULE_76__["default"],
    VBadge: vuetify_lib_components_VBadge__WEBPACK_IMPORTED_MODULE_77__["default"],
    VDataIterator: vuetify_lib_components_VDataIterator__WEBPACK_IMPORTED_MODULE_78__["default"],
    VBanner: vuetify_lib_components_VBanner__WEBPACK_IMPORTED_MODULE_79__["default"]
};



/***/ }),

/***/ "./src/components/providers/VuetifyDirectiveMap.ts":
/*!*********************************************************!*\
  !*** ./src/components/providers/VuetifyDirectiveMap.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VuetifyDirectiveMap": () => (/* binding */ VuetifyDirectiveMap)
/* harmony export */ });
var VuetifyDirectiveMap = /** @class */ (function () {
    function VuetifyDirectiveMap() {
    }
    VuetifyDirectiveMap.convertDricetiveToVuetify = function (directive) {
        var retVal;
        switch (directive.name) {
            case "click-outside":
                var clickOutside = { name: directive.name, value: { handler: directive.value.handler, closeConditional: directive.value.options.closeConditional, include: directive.value.options.include } };
                retVal = clickOutside;
                break;
            case "intersect":
                var intersection = { name: directive.name, value: directive.value, modifiers: { once: directive.value.options.once, quiet: directive.value.options.quiet } };
                retVal = intersection;
                break;
            case "mutation":
                var mutation = { name: directive.name, value: directive.value, modifiers: directive.value.options.modifiers };
                retVal = mutation;
                break;
            case "resize":
                var resize = { name: directive.name, value: directive.value.handler, options: directive.value.options };
                retVal = resize;
                break;
            case "ripple":
                var ripple = { name: directive.name, value: directive.value.options.handler };
                retVal = ripple;
                break;
            case "scroll":
                var scroll_1 = { name: directive.name, value: directive.value, modifiers: { self: directive.value.options.self } };
                retVal = scroll_1;
                break;
            case "touch":
                var touch = { name: directive.name, value: directive.value };
                retVal = touch;
                break;
            default:
                break;
        }
        return retVal;
    };
    return VuetifyDirectiveMap;
}());



/***/ }),

/***/ "./src/components/quick/Chart/ChartComponentManager.ts":
/*!*************************************************************!*\
  !*** ./src/components/quick/Chart/ChartComponentManager.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChartComponentManager": () => (/* binding */ ChartComponentManager)
/* harmony export */ });
/* harmony import */ var _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../common/shrimp/interfaces/quick/IWebSDK */ "../../common/shrimp/interfaces/quick/IWebSDK.ts");
/* harmony import */ var _LocalComponentWrappers_GeneralWrapper_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../LocalComponentWrappers/GeneralWrapper.vue */ "./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue");
/* harmony import */ var chart_js_auto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chart.js/auto */ "../../node_modules/chart.js/auto/auto.mjs");
/* harmony import */ var chartjs_plugin_datalabels__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! chartjs-plugin-datalabels */ "../../node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js");




var ChartComponentManager = /** @class */ (function () {
    function ChartComponentManager() {
        chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"].register(chartjs_plugin_datalabels__WEBPACK_IMPORTED_MODULE_3__["default"]);
        // // Change default options for ALL charts
        // Chart.defaults.set('plugins.datalabels', {
        //     color: 'white',
        //     font: {
        //         weight: 'bold'
        //     }
        // });
    }
    ChartComponentManager.prototype.createChildTypeChartComponent = function (props, target, componentName, parentInstance) {
        var _a;
        var _b, _c;
        var rightToLeft = (_c = (_b = parentInstance === null || parentInstance === void 0 ? void 0 : parentInstance.$vuetify) === null || _b === void 0 ? void 0 : _b.rtl) !== null && _c !== void 0 ? _c : false;
        var instance, el;
        (_a = this.createInnerChart(props, target, componentName, rightToLeft), instance = _a.instance, el = _a.el);
        props.__domElements = el;
        props.customStyle = true;
        var createdComp = new _LocalComponentWrappers_GeneralWrapper_vue__WEBPACK_IMPORTED_MODULE_1__["default"]({ parent: parentInstance, propsData: props });
        createdComp.$mount();
        return { instance: instance, el: createdComp.$el };
    };
    ChartComponentManager.prototype.createSlotTypeChartComponent = function (props, target, componentName, retVal, parentInstance) {
        var _a;
        var _b, _c;
        var rightToLeft = (_c = (_b = parentInstance === null || parentInstance === void 0 ? void 0 : parentInstance.$vuetify) === null || _b === void 0 ? void 0 : _b.rtl) !== null && _c !== void 0 ? _c : false;
        var instance, el;
        (_a = this.createInnerChart(props, target, componentName, rightToLeft), instance = _a.instance, el = _a.el);
        props.__domElements = el;
        var createdComp = new _LocalComponentWrappers_GeneralWrapper_vue__WEBPACK_IMPORTED_MODULE_1__["default"]({ parent: parentInstance, propsData: props });
        var vel = createdComp.$createElement(createdComp.$options.name, { props: props });
        retVal = { vel: vel, instance: instance, compGroupType: _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_0__.CompGroupType.Chart };
        return { createdComp: createdComp, retVal: retVal };
    };
    ChartComponentManager.prototype.createInnerChart = function (props, target, componentName, rightToLeft) {
        var comp = document.createElement("canvas");
        comp.setAttribute("aria-label", "Chart");
        comp.setAttribute("role", "img");
        var createdComp = new target.compInstance(comp, this.chartOptions(componentName, props, rightToLeft));
        return { instance: createdComp, el: createdComp["canvas"] };
    };
    ChartComponentManager.prototype.chartOptions = function (componentName, props, rightToLeft) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9;
        var type = componentName.toLowerCase();
        var options = {};
        var plugins = [chartjs_plugin_datalabels__WEBPACK_IMPORTED_MODULE_3__["default"]];
        var data = { labels: props.labels, datasets: this.chartPropSetter(props) };
        if (componentName == "Bar") {
            options = {
                indexAxis: (_a = props.indexAxis) !== null && _a !== void 0 ? _a : 'x',
                scales: {
                    x: {
                        grid: {
                            display: (_b = props.xDisplay) !== null && _b !== void 0 ? _b : true,
                            drawOnChartArea: (_c = props.xDrawOnChartArea) !== null && _c !== void 0 ? _c : true,
                            drawBorder: true
                        }
                    },
                    y: {
                        beginAtZero: true,
                        grid: {
                            display: (_d = props.yDisplay) !== null && _d !== void 0 ? _d : true,
                            drawOnChartArea: (_e = props.yDrawOnChartArea) !== null && _e !== void 0 ? _e : true,
                            drawBorder: true
                        }
                    }
                },
                plugins: {
                    // Change options for ALL labels of THIS CHART
                    datalabels: this.chartDataLabelsPropSetter(props),
                    title: {
                        display: (_f = props.titleDisplay) !== null && _f !== void 0 ? _f : false,
                        text: (_g = props.title) !== null && _g !== void 0 ? _g : "",
                        font: {
                            size: (_h = props.titleFontSize) !== null && _h !== void 0 ? _h : 12
                        }
                    },
                    legend: {
                        rtl: rightToLeft,
                        textDirection: rightToLeft ? "rtl" : "ltr",
                        display: (_j = props.legendDisplay) !== null && _j !== void 0 ? _j : true,
                        position: (_k = props.legendPosition) !== null && _k !== void 0 ? _k : "top",
                        labels: {
                            // This more specific font property overrides the global property
                            font: {
                                size: (_l = props.legendFontSize) !== null && _l !== void 0 ? _l : 12
                            }
                        }
                    },
                    tooltip: {
                        rtl: rightToLeft,
                        textDirection: rightToLeft ? "rtl" : "ltr",
                        bodyFont: {
                            family: props.tooltipBodyFontFamily,
                            size: (_m = props.tooltipBodyFontSize) !== null && _m !== void 0 ? _m : 12,
                            style: props.tooltipBodyFontStyle,
                            weight: props.tooltipBodyFontWeight,
                            lineHeight: props.tooltipBodyFontLineHeight
                        }
                    }
                }
            };
            return { type: type, data: data, options: options, plugins: plugins };
        }
        else if (componentName == "Doughnut") {
            if (props.insideText) {
                var plugin = this.getDoughnutInsideTextPlugin();
                plugins.push(plugin);
            }
            options = {
                elements: {
                    center: {
                        text: props.insideText,
                        color: '#FF6384',
                        fontStyle: 'Arial',
                        sidePadding: 20,
                        minFontSize: 25,
                        lineHeight: 25 // Default is 25 (in px), used for when text wraps
                    }
                },
                responsive: (_o = props.responsive) !== null && _o !== void 0 ? _o : true,
                animation: {
                    animateScale: true,
                    animateRotate: true
                },
                plugins: {
                    // Change options for ALL labels of THIS CHART
                    datalabels: this.chartDataLabelsPropSetter(props),
                    title: {
                        display: (_p = props.titleDisplay) !== null && _p !== void 0 ? _p : true,
                        text: (_q = props.title) !== null && _q !== void 0 ? _q : "",
                        font: {
                            size: (_r = props.titleFontSize) !== null && _r !== void 0 ? _r : 12
                        }
                    },
                    legend: {
                        rtl: rightToLeft,
                        textDirection: rightToLeft ? "rtl" : "ltr",
                        display: (_s = props.legendDisplay) !== null && _s !== void 0 ? _s : true,
                        position: (_t = props.legendPosition) !== null && _t !== void 0 ? _t : "top",
                        labels: {
                            // This more specific font property overrides the global property
                            font: {
                                size: (_u = props.legendFontSize) !== null && _u !== void 0 ? _u : 12
                            }
                        }
                    },
                    tooltip: {
                        rtl: rightToLeft,
                        textDirection: rightToLeft ? "rtl" : "ltr",
                        bodyFont: {
                            family: props.tooltipBodyFontFamily,
                            size: (_v = props.tooltipBodyFontSize) !== null && _v !== void 0 ? _v : 12,
                            style: props.tooltipBodyFontStyle,
                            weight: props.tooltipBodyFontWeight,
                            lineHeight: props.tooltipBodyFontLineHeight
                        }
                    }
                },
                cutout: (_w = props.cutoutPercentage) !== null && _w !== void 0 ? _w : 50,
                aspectRatio: (_x = props.aspectRatio) !== null && _x !== void 0 ? _x : 2
            };
            return { type: type, data: data, options: options, plugins: plugins };
        }
        else if (componentName == "Line") {
            options = {
                scales: {
                    x: {
                        grid: {
                            display: (_y = props.xDisplay) !== null && _y !== void 0 ? _y : true,
                            drawOnChartArea: (_z = props.xDrawOnChartArea) !== null && _z !== void 0 ? _z : true,
                            drawBorder: true
                        }
                    },
                    y: {
                        beginAtZero: true,
                        grid: {
                            display: (_0 = props.yDisplay) !== null && _0 !== void 0 ? _0 : true,
                            drawOnChartArea: (_1 = props.yDrawOnChartArea) !== null && _1 !== void 0 ? _1 : true,
                            drawBorder: true
                        }
                    }
                },
                plugins: {
                    // Change options for ALL labels of THIS CHART
                    datalabels: this.chartDataLabelsPropSetter(props),
                    filler: {
                        propagate: false,
                    },
                    title: {
                        display: (_2 = props.titleDisplay) !== null && _2 !== void 0 ? _2 : false,
                        text: (_3 = props.title) !== null && _3 !== void 0 ? _3 : "",
                        font: {
                            size: (_4 = props.titleFontSize) !== null && _4 !== void 0 ? _4 : 12
                        }
                    },
                    legend: {
                        rtl: rightToLeft,
                        textDirection: rightToLeft ? "rtl" : "ltr",
                        display: (_5 = props.legendDisplay) !== null && _5 !== void 0 ? _5 : true,
                        position: (_6 = props.legendPosition) !== null && _6 !== void 0 ? _6 : "top",
                        labels: {
                            // This more specific font property overrides the global property
                            font: {
                                size: (_7 = props.legendFontSize) !== null && _7 !== void 0 ? _7 : 12
                            }
                        }
                    },
                    tooltip: {
                        rtl: rightToLeft,
                        textDirection: rightToLeft ? "rtl" : "ltr",
                        bodyFont: {
                            family: props.tooltipBodyFontFamily,
                            size: (_8 = props.tooltipBodyFontSize) !== null && _8 !== void 0 ? _8 : 12,
                            style: props.tooltipBodyFontStyle,
                            weight: props.tooltipBodyFontWeight,
                            lineHeight: props.tooltipBodyFontLineHeight
                        }
                    }
                },
                interaction: {
                    intersect: false,
                },
                elements: {
                    line: {
                        tension: (_9 = props.tension) !== null && _9 !== void 0 ? _9 : "0"
                    }
                }
            };
            return { type: type, data: data, options: options, plugins: plugins };
        }
    };
    ChartComponentManager.prototype.chartDataLabelsPropSetter = function (props) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
        var dataLabelProp = {
            align: (_a = props.labelAlign) !== null && _a !== void 0 ? _a : "center",
            anchor: (_b = props.labelAnchor) !== null && _b !== void 0 ? _b : "center",
            backgroundColor: props.labelBackgroundColor,
            borderColor: props.labelBorderColor,
            borderRadius: (_c = props.labelBorderRadius) !== null && _c !== void 0 ? _c : 0,
            borderWidth: (_d = props.labelBorderWidth) !== null && _d !== void 0 ? _d : 0,
            clamp: (_e = props.labelClamp) !== null && _e !== void 0 ? _e : false,
            clip: (_f = props.labelClip) !== null && _f !== void 0 ? _f : false,
            color: props.labelColor,
            display: (_g = props.labelDisplay) !== null && _g !== void 0 ? _g : false,
            font: this.chartDataLabelsFontPropSetter(props),
            formatter: props.labelFormatter,
            labels: props.labelLabels,
            listeners: props.labelListeners,
            offset: (_h = props.labelOffset) !== null && _h !== void 0 ? _h : "4",
            opacity: (_j = props.labelOpacity) !== null && _j !== void 0 ? _j : 1,
            padding: this.chartDataLabelsPaddingPropSetter(props),
            rotation: (_k = props.labelRotation) !== null && _k !== void 0 ? _k : 0,
            textAlign: (_l = props.labelTextAlign) !== null && _l !== void 0 ? _l : "start",
            textStrokeColor: props.labelTextStrokeColor,
            textStrokeWidth: (_m = props.labelTextStrokeWidth) !== null && _m !== void 0 ? _m : 0,
            textShadowBlur: (_o = props.labelTextShadowBlur) !== null && _o !== void 0 ? _o : 0,
            textShadowColor: props.labelTextShadowColor
        };
        return dataLabelProp;
    };
    ChartComponentManager.prototype.chartDataLabelsPaddingPropSetter = function (props) {
        var _a, _b, _c, _d;
        return {
            top: (_a = props.labelPaddingTop) !== null && _a !== void 0 ? _a : 4,
            right: (_b = props.labelPaddingRight) !== null && _b !== void 0 ? _b : 4,
            bottom: (_c = props.labelPaddingBottom) !== null && _c !== void 0 ? _c : 4,
            left: (_d = props.labelPaddingLeft) !== null && _d !== void 0 ? _d : 4
        };
    };
    ChartComponentManager.prototype.chartDataLabelsFontPropSetter = function (props) {
        var _a, _b;
        return {
            family: props.labelFontFamily,
            size: props.labelFontSize,
            style: props.labelFontStyle,
            weight: (_a = props.labelFontWeight) !== null && _a !== void 0 ? _a : "normal",
            lineHeight: (_b = props.labelFontLineHeight) !== null && _b !== void 0 ? _b : "1.2"
        };
    };
    ChartComponentManager.prototype.chartPropSetter = function (props) {
        var _a, _b, _c;
        return [{
                backgroundColor: props.backgroundColor,
                borderColor: props.borderColor,
                borderSkipped: props.borderSkipped,
                borderWidth: props.borderWidth,
                data: props.data,
                hoverBackgroundColor: props.hoverBackgroundColor,
                hoverBorderColor: props.hoverBorderColor,
                hoverBorderWidth: (_a = props.hoverBorderWidth) !== null && _a !== void 0 ? _a : 1,
                label: props.label || '',
                order: props.order,
                xAxisID: props.xAxisID,
                yAxisID: props.yAxisID,
                barPercentage: (_b = props.barPercentage) !== null && _b !== void 0 ? _b : 0.9,
                categoryPercentage: (_c = props.categoryPercentage) !== null && _c !== void 0 ? _c : 0.8,
                barThickness: props.barThickness,
                maxBarThickness: props.maxBarThickness,
                minBarLength: props.minBarLength,
                fill: props.fill
            }];
    };
    ChartComponentManager.prototype.getDoughnutInsideTextPlugin = function () {
        var plugin = {
            beforeDraw: function (chart) {
                // Get options from the center object in options
                var centerConfig = chart.config.options.elements.center;
                var fontStyle = centerConfig.fontStyle || 'Arial';
                var txt = centerConfig.text;
                var color = centerConfig.color || '#000';
                var maxFontSize = centerConfig.maxFontSize || 75;
                var sidePadding = centerConfig.sidePadding || 20;
                var innerRadius = chart._metasets[chart._metasets.length - 1].controller.innerRadius;
                var sidePaddingCalculated = (sidePadding / 100) * (innerRadius * 2);
                // Start with a base font of 30px
                chart.ctx.font = "30px " + fontStyle;
                // Get the width of the string and also the width of the element minus 10 to give it 5px side padding
                var stringWidth = chart.ctx.measureText(txt).width;
                var elementWidth = (innerRadius * 2) - sidePaddingCalculated;
                // Find out how much the font can grow in width.
                var widthRatio = elementWidth / stringWidth;
                var newFontSize = Math.floor(30 * widthRatio);
                var elementHeight = (innerRadius * 2);
                // Pick a new font size so it will not be larger than the height of label.
                var fontSizeToUse = Math.min(newFontSize, elementHeight, maxFontSize);
                var minFontSize = centerConfig.minFontSize;
                var lineHeight = centerConfig.lineHeight || 25;
                var wrapText = false;
                if (minFontSize === undefined) {
                    minFontSize = 20;
                }
                if (minFontSize && fontSizeToUse < minFontSize) {
                    fontSizeToUse = minFontSize;
                    wrapText = true;
                }
                // Set font settings to draw it correctly.
                chart.ctx.textAlign = 'center';
                chart.ctx.textBaseline = 'middle';
                var centerX = ((chart.chartArea.left + chart.chartArea.right) / 2);
                var centerY = ((chart.chartArea.top + chart.chartArea.bottom) / 2);
                chart.ctx.font = fontSizeToUse + "px " + fontStyle;
                chart.ctx.fillStyle = color;
                if (!wrapText) {
                    chart.ctx.fillText(txt, centerX, centerY);
                    return;
                }
                var words = txt.split(' ');
                var line = '';
                var lines = [];
                // Break words up into multiple lines if necessary
                for (var n = 0; n < words.length; n++) {
                    var testLine = line + words[n] + ' ';
                    var metrics = chart.ctx.measureText(testLine);
                    var testWidth = metrics.width;
                    if (testWidth > elementWidth && n > 0) {
                        lines.push(line);
                        line = words[n] + ' ';
                    }
                    else {
                        line = testLine;
                    }
                }
                // Move the center up depending on line height and number of lines
                centerY -= (lines.length / 2) * lineHeight;
                for (var n = 0; n < lines.length; n++) {
                    chart.ctx.fillText(lines[n], centerX, centerY);
                    centerY += lineHeight;
                }
                //Draw text in center
                chart.ctx.fillText(line, centerX, centerY);
            }
        };
        return plugin;
    };
    return ChartComponentManager;
}());



/***/ }),

/***/ "./src/components/quick/GoldenLayout/GoldenLayoutHelper.ts":
/*!*****************************************************************!*\
  !*** ./src/components/quick/GoldenLayout/GoldenLayoutHelper.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initPopOut": () => (/* binding */ initPopOut)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../common/shrimp/helpers/windowHelper */ "../../common/shrimp/helpers/windowHelper.ts");

function initPopOut(stack) {
    var self = this;
    var popoutButton = document.createElement("li");
    popoutButton.className = "lm_popout";
    stack.header.controlsContainer.prepend(popoutButton);
    (function (popoutButton, stack) {
        var item = undefined;
        var mainWindow = window;
        popoutButton.onclick = function () {
            if (self._renderingProps.isEditMode) {
                return;
            }
            var className = item.config.componentState.class;
            var randomNumber = (Math.random() * 10000).toFixed(0); // todo math random kaldıralacak.
            var windId = "wind" + randomNumber;
            var newWindow = window.open("", windId, "height=700,width=1000");
            self.childWindows.push({ windId: windId, childWindow: newWindow });
            if (newWindow) {
                newWindow.onload = function () {
                    if (newWindow) {
                        if (newWindow.ranOnce) {
                            return;
                        }
                        else {
                            newWindow.ranOnce = true;
                        }
                        var popoutOuterElement = document.getElementsByClassName(className)[0].children[0];
                        var div = document.createElement("DIV");
                        newWindow.document.write("<!DOCTYPE html><html><head><title>" + item.config.title + "</title></head><body></body></html>");
                        newWindow.document.body.append(div);
                        div.className = "lm_content " + mainWindow.document.getElementsByClassName("v-application")[0].getAttribute("class");
                        div.style.width = "100%";
                        div.style.height = "100%";
                        div.style.overflow = "scroll";
                        div.style.display = "grid";
                        div.append(popoutOuterElement);
                        var currentPageSChildren = document.head.children;
                        for (var i = 0; i < currentPageSChildren.length; i++) {
                            var child = currentPageSChildren[i];
                            if (child.tagName == "LINK") {
                                var AChild = child;
                                var cssLink = newWindow.document.createElement("link");
                                cssLink.rel = "stylesheet";
                                cssLink.type = "text/css";
                                cssLink.href = AChild.href;
                                newWindow.document.head.appendChild(cssLink);
                            }
                            else if (child.tagName == "STYLE") {
                                var style = newWindow.document.createElement("style");
                                style.type = "text/css";
                                style.innerHTML = child.innerHTML;
                                newWindow.document.head.appendChild(style);
                            }
                        }
                        newWindow.stateCopy = {
                            componentState: { class: item.config.componentState.class, text: item.config.componentState.text, fromWindow: true, },
                            title: item.config.title,
                            type: "component",
                            componentName: item.config.componentName,
                        };
                        newWindow.onbeforeunload = function () {
                            self.addItem({ config: newWindow.stateCopy });
                            var popinDiv = mainWindow.document.getElementsByClassName(newWindow.stateCopy.componentState.class)[0];
                            popinDiv.appendChild(newWindow.document.getElementsByClassName("innerWindow")[0]);
                            self.childWindows.splice(self.childWindows.findIndex(function (i) { return i.windId == windId; }), 1);
                        };
                        overrideAppendChild(self.childWindows);
                        // addEventListeners(newWindow);
                        item.remove();
                    }
                };
                if (newWindow.document && newWindow.document.readyState == "complete" /* ah chrome ah */) {
                    newWindow.onload();
                }
            }
        };
        // Add the colorDropdown to the header
        // Update the color initially and whenever the tab changes
        stack.on("activeContentItemChanged", function (contentItem) {
            item = contentItem;
            self.$emit("activeContentItemChanged", contentItem);
        });
    })(popoutButton, stack);
}

function overrideAppendChild(childWindows) {
    var currDocument = _common_shrimp_helpers_windowHelper__WEBPACK_IMPORTED_MODULE_0__.WindowHelper.Instance.document;
    (function (origAppendChild) {
        currDocument.body.appendChild = function (node) {
            if (currDocument.hasFocus()) {
                origAppendChild.apply(window.document.body, [node]);
                return node;
            }
            for (var i = 0; i < childWindows.length; i++) {
                if (childWindows[i].childWindow.document.hasFocus()) {
                    childWindows[i].childWindow.document.body.appendChild(node);
                    break;
                }
            }
            return node;
        };
    })(currDocument.body.appendChild);
}


/***/ }),

/***/ "./src/implementation/ComponentInstanceTrackerImpl.ts":
/*!************************************************************!*\
  !*** ./src/implementation/ComponentInstanceTrackerImpl.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentInstanceTracker": () => (/* binding */ ComponentInstanceTracker)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/compDiffHelper */ "../../common/shrimp/helpers/compDiffHelper.ts");
/* harmony import */ var _common_shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/ComponentInterfaces/ICompJson */ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts");
/* harmony import */ var _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/quick/IWebSDK */ "../../common/shrimp/interfaces/quick/IWebSDK.ts");
/* harmony import */ var _managers_extension_extensionData_VTextFieldFormattingExtensionData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../managers/extension/extensionData/VTextFieldFormattingExtensionData */ "./src/managers/extension/extensionData/VTextFieldFormattingExtensionData.ts");
/* harmony import */ var _managers_extension_ExtensionManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../managers/extension/ExtensionManager */ "./src/managers/extension/ExtensionManager.ts");
/* harmony import */ var _managers_extension_InstanceInjectionManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../managers/extension/InstanceInjectionManager */ "./src/managers/extension/InstanceInjectionManager.ts");
/* harmony import */ var _operators_ComponentDOMAttrsHelper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operators/ComponentDOMAttrsHelper */ "./src/implementation/operators/ComponentDOMAttrsHelper.ts");







var ComponentInstanceTracker = /** @class */ (function () {
    function ComponentInstanceTracker(options) {
        this.contextName = "sadsadsad";
        this.servicesWrapper = options.servicesWrapper;
        this.settingsWrapper = options.settingsWrapper;
        this.websdkContext = options.websdkContext;
    }
    ComponentInstanceTracker.prototype.TrackCompInstance = function (compData) {
        this.newCompInstanceAndDomTracker(compData);
    };
    ComponentInstanceTracker.prototype.newCompInstanceAndDomTracker = function (_a) {
        var _this = this;
        var asChildType = _a.asChildType, asChildName = _a.asChildName, component = _a.component, compCollection = _a.compCollection, attrs = _a.attrs, postRenderExecutor = _a.postRenderExecutor, props = _a.props;
        compCollection.WatchCreatedFields(function (field) {
            var listeners = ComponentInstanceTracker.componentDOMListeners();
            for (var key in listeners) {
                if (Object.prototype.hasOwnProperty.call(listeners, key)) {
                    var listener = listeners[key];
                    listener(compCollection);
                }
            }
        });
        _operators_ComponentDOMAttrsHelper__WEBPACK_IMPORTED_MODULE_6__.ComponentDOMAttrsHelper.createDOMAttrsOnCompInstance(compCollection);
        if (asChildType != _common_shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_1__.CType.slot && asChildType != _common_shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_1__.CType.scopedSlot) {
            _managers_extension_ExtensionManager__WEBPACK_IMPORTED_MODULE_4__.ExtensionManager.ManageComponent(compCollection, attrs, this.settingsWrapper, this.websdkContext);
            _managers_extension_InstanceInjectionManager__WEBPACK_IMPORTED_MODULE_5__.InstanceInjectionManager.Manage(compCollection);
            return;
        }
        var vel = component.vel;
        var compInstancePropName = "componentInstance";
        var compInstProp = Object.getOwnPropertyDescriptor(vel, compInstancePropName);
        var val = compInstProp.value;
        compInstProp.set = function (value) {
            var _a;
            val = value;
            _this.fixSlotsFromDefault(value);
            value.$mount(); // is this really necessary ?
            if (((_a = compCollection.additionals) === null || _a === void 0 ? void 0 : _a.createdComp) && compCollection.component) {
                compCollection.additionals.createdComp.$destroy();
                compCollection.additionals.createdComp = undefined;
            }
            if (component.compGroupType != _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_2__.CompGroupType.Chart) {
                compCollection.SetComponentCreatedFields({ createdComponent: { instance: value, el: value.$el, compGroupType: component.compGroupType } });
            }
        };
        compInstProp.get = function () { return val; };
        delete compInstProp.writable;
        delete compInstProp.value;
        Object.defineProperty(vel, compInstancePropName, compInstProp);
        // Dom
        var domEl = vel.elm;
        Object.defineProperty(vel, "elm", {
            set: function (value) {
                domEl = value;
                domEl.id = compCollection.compId;
                compCollection.SetComponentCreatedFields({ createdComponent: { el: domEl, compGroupType: component.compGroupType } });
                _this.componentDomLocator(compCollection, compCollection.component, compCollection.asChildIndex, postRenderExecutor);
                _managers_extension_ExtensionManager__WEBPACK_IMPORTED_MODULE_4__.ExtensionManager.UpdateComponent(compCollection, attrs, _this.settingsWrapper, _this.websdkContext);
            }, get: function () { return domEl; }
        });
        _managers_extension_ExtensionManager__WEBPACK_IMPORTED_MODULE_4__.ExtensionManager.ManageComponent(compCollection, attrs, this.settingsWrapper, this.websdkContext);
        //InstanceInjectionManager.Manage(compCollection);
    };
    /**
     * Look child component slotType and fix it to the right place where it's needed to be real place which can be found in vnode.data.slot
     * @param compInstance Component instance that will be looked on its children
     */
    ComponentInstanceTracker.prototype.fixSlotsFromDefault = function (compInstance) {
        for (var key in compInstance.$slots) {
            if (Object.prototype.hasOwnProperty.call(compInstance.$slots, key)) {
                var childNodeKey = compInstance.$slots[key];
                for (var index = (childNodeKey === null || childNodeKey === void 0 ? void 0 : childNodeKey.length) - 1; index >= 0; index--) {
                    var childNode = childNodeKey[index];
                    if (childNode.data.slot && key != childNode.data.slot) {
                        compInstance.$slots[childNode.data.slot] = compInstance.$slots[childNode.data.slot] || [];
                        compInstance.$slots[childNode.data.slot][index] = childNode;
                        childNodeKey.splice(index, 1);
                    }
                }
            }
        }
    };
    ComponentInstanceTracker.prototype.componentDomLocator = function (compCollection, compInst, index, postRenderExecutor) {
        var _a, _b;
        //WebSDK'da domLocator OLMAMALI. Dom locator DesignTime ile ilgili, Runtime ile ilgili değil. Burası Qeditor -> Dory(componentInstanceTracker subscribe olunan bir array olmalı) arasında çözülmeli.
        var compDomLocator = (_b = (_a = this.servicesWrapper.services).getCompDomLocator) === null || _b === void 0 ? void 0 : _b.call(_a, compCollection.compType);
        if (!compDomLocator) {
            return;
        }
        postRenderExecutor(function () {
            var compDom = compDomLocator(compInst, index) || compInst.$el;
            compCollection.SetComponentCreatedFields({ createdComponent: { instance: compInst, el: compDom } });
        });
    };
    /**
     * Listen component dom changes on this method
     * @returns key fields
     */
    ComponentInstanceTracker.componentDOMListeners = function () {
        return {
            setAttribute: function (componentCollection) {
                var _a, _b;
                if (!componentCollection.component || !componentCollection.component.$el) {
                    return;
                }
                var componentEl = componentCollection.component.$el;
                var preventPaste = (_b = (_a = componentCollection.component.attrs$) === null || _a === void 0 ? void 0 : _a.preventPaste) !== null && _b !== void 0 ? _b : false;
                if (preventPaste) {
                    var inputComp = _managers_extension_extensionData_VTextFieldFormattingExtensionData__WEBPACK_IMPORTED_MODULE_3__.VTextFieldFormattingExtensionData.findInputDOM(componentCollection.component);
                    if (inputComp && inputComp.elm) {
                        inputComp.elm.onpaste = function (e) {
                            e.preventDefault();
                            return false;
                        };
                        inputComp.elm.ondrag = function (e) {
                            e.preventDefault();
                            return false;
                        };
                        inputComp.elm.ondrop = function (e) {
                            e.preventDefault();
                            return false;
                        };
                    }
                }
                if (!componentEl.origSetAttribute) {
                    componentEl.origSetAttribute = componentEl.setAttribute;
                }
                componentEl.setAttribute = (function (context, orig) {
                    return function () {
                        var args = Array.prototype.slice.call(arguments);
                        var compareComponent = _common_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.componentValueList[componentCollection.compType];
                        if (compareComponent && componentCollection.compareComponent) {
                            componentCollection.class = _common_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.removeValueClass(componentCollection.class);
                            args[1] = _common_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.removeValueClass(args[1]);
                            var comparedClass = "";
                            if (componentCollection.component[_common_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ComparisonEnum.compareValueField] !== componentCollection.component[compareComponent.valueField]) {
                                comparedClass = _common_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.compDiffHelper.getValueCompareClass({ value: componentCollection.component[compareComponent.valueField], compareValue: componentCollection.component[_common_shrimp_helpers_compDiffHelper__WEBPACK_IMPORTED_MODULE_0__.ComparisonEnum.compareValueField] });
                                args[1] += " " + comparedClass;
                            }
                            if (compareComponent.applyClassName) {
                                componentCollection.component[compareComponent.applyClassName] = comparedClass;
                            }
                        }
                        else if (args[1] && args[1].indexOf && args[1].indexOf(componentCollection.class) < 0 && args[0] == 'class') {
                            args[1] += " " + componentCollection.class;
                        }
                        return orig === null || orig === void 0 ? void 0 : orig.apply(context, args);
                    };
                })(componentEl, componentEl.origSetAttribute);
            },
        };
    };
    return ComponentInstanceTracker;
}());



/***/ }),

/***/ "./src/implementation/ComponentManagerImpl.ts":
/*!****************************************************!*\
  !*** ./src/implementation/ComponentManagerImpl.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentManagerImpl": () => (/* binding */ ComponentManagerImpl)
/* harmony export */ });
/* harmony import */ var _common_shrimp_interfaces_ComponentInterfaces_ElementLocation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/ComponentInterfaces/ElementLocation */ "../../common/shrimp/interfaces/ComponentInterfaces/ElementLocation.ts");
/* harmony import */ var _common_shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/ComponentInterfaces/ICompJson */ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts");
/* harmony import */ var _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/quick/IWebSDK */ "../../common/shrimp/interfaces/quick/IWebSDK.ts");
/* harmony import */ var _components_providers_VuetifyDirectiveMap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/providers/VuetifyDirectiveMap */ "./src/components/providers/VuetifyDirectiveMap.ts");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");
/* harmony import */ var _components_providers_ComponentPropertyMapping__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/providers/ComponentPropertyMapping */ "./src/components/providers/ComponentPropertyMapping.ts");
/* harmony import */ var _components_providers_ComponentProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/providers/ComponentProvider */ "./src/components/providers/ComponentProvider.ts");
/* harmony import */ var _components_quick_Chart_ChartComponentManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/quick/Chart/ChartComponentManager */ "./src/components/quick/Chart/ChartComponentManager.ts");
/* harmony import */ var _components_quick_LocalComponentWrappers_GeneralWrapper_vue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/quick/LocalComponentWrappers/GeneralWrapper.vue */ "./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue");
/* harmony import */ var _components_quick_LocalComponentWrappers_TSComponentWrapper_vue__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/quick/LocalComponentWrappers/TSComponentWrapper.vue */ "./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue");
/* harmony import */ var _operators_ComponentDOMAttrsHelper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operators/ComponentDOMAttrsHelper */ "./src/implementation/operators/ComponentDOMAttrsHelper.ts");











var ComponentManagerImpl = /** @class */ (function () {
    function ComponentManagerImpl(contextName, parentInstance) {
        this.contextName = contextName;
        this.parentInstance = parentInstance;
    }
    ComponentManagerImpl.prototype.componentHasProp = function (componentName, propName) {
        return true;
    };
    ComponentManagerImpl.prototype.compPropModifier = function (compName, props) {
        if (_components_providers_ComponentPropertyMapping__WEBPACK_IMPORTED_MODULE_4__.VuetifyPropMapping[compName]) {
            var val = props["value"];
            var modifiedProp = _components_providers_ComponentPropertyMapping__WEBPACK_IMPORTED_MODULE_4__.VuetifyPropMapping[compName];
            props[modifiedProp] = val;
        }
    };
    ComponentManagerImpl.prototype.createComponent = function (_a) {
        var _b, _c;
        var _d, _e, _f, _g, _h, _j;
        var componentName = _a.componentName, props = _a.props, events = _a.events, asChildType = _a.asChildType, asChildName = _a.asChildName, slots = _a.slots, scopedSlots = _a.scopedSlots, compClass = _a.compClass, text = _a.text, attrs = _a.attrs, componentCollection = _a.componentCollection, directives = _a.directives;
        var compCollection = componentCollection;
        var historyLRManager = (_d = props._renderingProps) === null || _d === void 0 ? void 0 : _d.context().GetItemSingle("HistoryItemBasedLRManager");
        var rightToLeft = (_e = historyLRManager === null || historyLRManager === void 0 ? void 0 : historyLRManager.LRTypeRTL) !== null && _e !== void 0 ? _e : false;
        this.parentInstance.$vuetify.rtl = rightToLeft; //Vapplicationa denk geliyor
        props.rtl = rightToLeft; // vue
        props.rtlEnabled = rightToLeft; //devex
        if (props.src && props.src.includes('data:image/tiff')) {
            props.src = _operators_ComponentDOMAttrsHelper__WEBPACK_IMPORTED_MODULE_9__.ComponentDOMAttrsHelper.convertTiffToImage(props.src);
        }
        var target = _components_providers_ComponentProvider__WEBPACK_IMPORTED_MODULE_5__.ComponentProvider.getComponentConst(componentName);
        if (!target) {
            target = { compInstance: vue__WEBPACK_IMPORTED_MODULE_10__["default"].component(componentName) };
        }
        var scopedFuncs = {};
        if (scopedSlots) {
            Object.keys(scopedSlots).forEach(function (key) {
                scopedFuncs[key] = function (scopeObject) { return scopedSlots[key](scopeObject).map(function (compColl) { return compColl.vDomElement; }); };
            });
        }
        var createdComp;
        var retVal = {};
        var classDict;
        compClass === null || compClass === void 0 ? void 0 : compClass.split(" ").forEach(function (classKey) {
            if (classKey) {
                classDict = classDict || {};
                classDict[classKey] = true;
            }
        });
        this.compPropModifier(componentName, props);
        var vuetifyDirectives;
        if (directives && directives.length > 0) {
            vuetifyDirectives = [];
            for (var index = 0; index < directives.length; index++) {
                var directive = directives[index];
                vuetifyDirectives.push(_components_providers_VuetifyDirectiveMap__WEBPACK_IMPORTED_MODULE_3__.VuetifyDirectiveMap.convertDricetiveToVuetify(directive));
            }
        }
        switch (asChildType) {
            case _common_shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_1__.CType.slot:
            case _common_shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_1__.CType.scopedSlot:
                if (target.CompType == _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_2__.CompGroupType.Chart) {
                    props.customStyle = true;
                    (_b = new _components_quick_Chart_ChartComponentManager__WEBPACK_IMPORTED_MODULE_6__.ChartComponentManager().createSlotTypeChartComponent(props, target, componentName, retVal, this.parentInstance), createdComp = _b.createdComp, retVal = _b.retVal);
                    return retVal;
                }
                var flatSlots = void 0;
                createdComp = new target.compInstance({
                    parent: this.parentInstance,
                    propsData: props,
                    staticClass: compClass
                });
                compCollection.additionals = compCollection.additionals || {};
                compCollection.additionals.createdComp = createdComp;
                if (slots) {
                    flatSlots = Object.keys(slots).map(function (key) { return ({ inst: slots[key], key: key }); })
                        .reduce(function (prev, cur) { cur.inst.forEach(function (curChild) { curChild["context"] = createdComp; }); return prev.concat(cur.inst); }, []);
                }
                if (text) {
                    flatSlots = [{ text: text, data: {} }];
                }
                var vel = createdComp.$createElement(createdComp.$options.name, {
                    props: props,
                    on: events,
                    scopedSlots: scopedSlots ? scopedFuncs : undefined,
                    class: classDict,
                    key: props.ID,
                    slot: asChildName,
                    attrs: attrs,
                    directives: vuetifyDirectives //directives: ComponentDirectiveInjector.injectSlotDirective()
                }, flatSlots);
                if (!compClass) {
                    (_g = (_f = vel === null || vel === void 0 ? void 0 : vel["context"]) === null || _f === void 0 ? void 0 : _f.$options) === null || _g === void 0 ? true : delete _g.staticClass;
                }
                //This section added for DevExpress Component's wrapper problem fix.
                if (!vel.componentOptions) {
                    vel.componentOptions = {};
                    vel.componentOptions["propsData"] = createdComp.$options["propsData"];
                    vel.componentOptions["Ctor"] = createdComp.$options["_Ctor"][0];
                    vel.componentOptions["children"] = flatSlots ? flatSlots : null;
                    vel.componentOptions["events"] = events;
                }
                retVal = { vel: vel, compGroupType: target.CompType };
                return retVal;
            case _common_shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_1__.CType.child:
            default:
                if (target.CompType == _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_2__.CompGroupType.Chart) {
                    (_c = this.createChartComp(props, target, componentName, retVal), createdComp = _c.createdComp, retVal = _c.retVal);
                    return retVal;
                }
                createdComp = new target.compInstance({
                    parent: this.parentInstance,
                    propsData: props
                });
                if (attrs) {
                    createdComp.$attrs = attrs;
                }
                if (createdComp['customCompClass'] && compClass) {
                    createdComp['customCompClass'] = compClass;
                }
                else if (classDict) {
                    createdComp.classes = classDict;
                }
                for (var key in events) {
                    createdComp.$on(key, events[key]);
                }
                if (slots) {
                    createdComp.$slots = slots;
                }
                if (scopedSlots) {
                    createdComp.$scopedSlots = scopedFuncs;
                }
                createdComp.$mount();
                if (compClass && classDict && ((_j = (_h = createdComp.$el) === null || _h === void 0 ? void 0 : _h.classList) === null || _j === void 0 ? void 0 : _j.toString().indexOf(compClass)) < 0) {
                    Object.keys(classDict).forEach(function (classKey) { var _a; return (_a = createdComp.$el) === null || _a === void 0 ? void 0 : _a.classList.add(classKey); });
                }
                createdComp.$el.id = props.ID; // This line added also selenium tests but difference with createdComp.id is some vuetify components has problems. (VBtn has no id property on createdComp)
                retVal = { instance: createdComp, el: createdComp.$el, compGroupType: target.CompType };
                return retVal;
        }
    };
    ComponentManagerImpl.prototype.createChartComp = function (props, target, componentName, retVal) {
        var _a;
        var instance, el;
        (_a = new _components_quick_Chart_ChartComponentManager__WEBPACK_IMPORTED_MODULE_6__.ChartComponentManager().createChildTypeChartComponent(props, target, componentName, this.parentInstance), instance = _a.instance, el = _a.el);
        props.__domElements = el;
        var createdComp = new _components_quick_LocalComponentWrappers_GeneralWrapper_vue__WEBPACK_IMPORTED_MODULE_7__["default"]({ parent: this.parentInstance, propsData: props });
        createdComp.$mount();
        retVal = { instance: instance, el: createdComp.$el, compGroupType: target.CompType };
        return { createdComp: createdComp, retVal: retVal };
    };
    ComponentManagerImpl.prototype.createContainerView = function (compUID) {
        return document.createElement("div");
    };
    ComponentManagerImpl.prototype.updateContainerView = function (_a) {
        var givenObject = _a.givenObject, elements = _a.elements;
        if (!elements) {
            return;
        }
        if (typeof elements === "string") {
            givenObject.innerHTML = elements;
        }
        else {
            givenObject.innerHTML = "<div></div>";
            elements.forEach(function (element) {
                givenObject.appendChild(element);
            });
        }
    };
    ComponentManagerImpl.prototype.tsComponentWrapper = function () {
        return _components_quick_LocalComponentWrappers_TSComponentWrapper_vue__WEBPACK_IMPORTED_MODULE_8__["default"];
    };
    /**
     * Add new slot(VDomElement) to the parent component and mount it
     * @param parentCompCollection Parent component collection created new component
     * @param slot Created component vDomElement that will be pushed into the parentcompslot array
     * @param compLocater Location of new component will be placed into
     */
    ComponentManagerImpl.prototype.addNewSlotToParentComp = function (_a) {
        var parentCompCollection = _a.parentCompCollection, slots = _a.slots, compLocater = _a.compLocater, childName = _a.childName;
        if (!parentCompCollection.component) {
            return;
        }
        var slotComponents = parentCompCollection.component.$slots[childName] = parentCompCollection.component.$slots[childName] || [];
        if (compLocater == _common_shrimp_interfaces_ComponentInterfaces_ElementLocation__WEBPACK_IMPORTED_MODULE_0__.ElementLocation.After) {
            slots.forEach(function (slot) { return slotComponents.unshift(slot); });
        }
        else {
            slots.forEach(function (slot) { return slotComponents.push(slot); });
        }
        parentCompCollection.component.$mount();
    };
    ComponentManagerImpl.prototype.setVisibility = function (compColl, compVisibility) {
        // compColl.domElement!.style.setProperty("display", compVisibility ? "" : "none", compVisibility ? "" : "important");
        var _a, _b, _c, _d, _e;
        //ask before judge..
        var compStyle = (_c = (_b = (_a = compColl.domElement) === null || _a === void 0 ? void 0 : _a.getAttribute) === null || _b === void 0 ? void 0 : _b.call(_a, 'style')) !== null && _c !== void 0 ? _c : "";
        var displayNoneCss = "display: none !important";
        if (compVisibility) {
            compStyle = compStyle.indexOf(displayNoneCss) >= 0 ? compStyle.replace(displayNoneCss, '') : compStyle;
        }
        else {
            compStyle = compStyle.indexOf(displayNoneCss) >= 0 ? compStyle : compStyle + " " + displayNoneCss;
        }
        (_e = (_d = compColl.domElement).setAttribute) === null || _e === void 0 ? void 0 : _e.call(_d, 'style', compStyle);
    };
    ComponentManagerImpl.prototype.getComponentValue = function (compColl) {
        var _a;
        var valueProp = "";
        switch (compColl.compGroupType) {
            case _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_2__.CompGroupType.Local:
                valueProp = (_a = _components_providers_ComponentPropertyMapping__WEBPACK_IMPORTED_MODULE_4__.LocalPropMapping[compColl.compType]) !== null && _a !== void 0 ? _a : "value";
                return compColl.component[valueProp];
        }
        if (compColl.component.internalValue !== undefined) {
            return compColl.component.internalValue;
        }
        return compColl.component.value;
    };
    ComponentManagerImpl.prototype.setComponentValue = function (compColl, value) {
        var _a;
        var valueProp = "";
        switch (compColl.compGroupType) {
            case _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_2__.CompGroupType.Local:
                valueProp = (_a = _components_providers_ComponentPropertyMapping__WEBPACK_IMPORTED_MODULE_4__.LocalPropMapping[compColl.compType]) !== null && _a !== void 0 ? _a : "value";
                compColl.component[valueProp] = value;
                break;
            default:
                if (compColl.compType === 'VCheckbox') {
                    compColl.component['inputValue'] = value;
                }
                else {
                    compColl.component.value = value;
                }
                compColl.component.internalValue = value;
                break;
        }
    };
    ComponentManagerImpl.prototype.onComponentDestroy = function (_a) {
        var _b, _c, _d, _e;
        var parentComponent = _a.parentComponent, childVDomElement = _a.childVDomElement, childKey = _a.childKey;
        var childIndex = (_b = parentComponent === null || parentComponent === void 0 ? void 0 : parentComponent.$slots[childKey]) === null || _b === void 0 ? void 0 : _b.findIndex(function (vDom) { return vDom == childVDomElement; });
        if (childIndex === undefined) {
            return;
        }
        (_d = (_c = parentComponent === null || parentComponent === void 0 ? void 0 : parentComponent.$slots) === null || _c === void 0 ? void 0 : _c[childKey]) === null || _d === void 0 ? void 0 : _d.splice(childIndex, 1);
        (_e = parentComponent === null || parentComponent === void 0 ? void 0 : parentComponent.$mount) === null || _e === void 0 ? void 0 : _e.call(parentComponent);
    };
    ComponentManagerImpl.prototype.createComponentQValue = function (compCollection) {
        var _this = this;
        if (!compCollection.component) {
            return;
        }
        var valueKey = "qValue";
        var valueProp = Object.getOwnPropertyDescriptor(compCollection.component, valueKey);
        if (!valueProp) {
            Object.defineProperty(compCollection.component, valueKey, {
                get: function () { return _this.getComponentValue(compCollection); },
                set: function (v) { return _this.setComponentValue(compCollection, v); }
            });
        }
    };
    return ComponentManagerImpl;
}());



/***/ }),

/***/ "./src/implementation/CookieManager.ts":
/*!*********************************************!*\
  !*** ./src/implementation/CookieManager.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CookieManager": () => (/* binding */ CookieManager)
/* harmony export */ });
var CookieManager = /** @class */ (function () {
    function CookieManager(_a) {
        var contextName = _a.contextName;
        this.contextName = contextName;
    }
    CookieManager.prototype.setCookie = function (_a) {
        var key = _a.key, cookieValue = _a.cookieValue;
        var c_value = "";
        if (cookieValue.value) {
            c_value = escape(cookieValue.value);
        }
        else {
            var i, x, y, ARRcookies = document.cookie.split(";");
            for (i = 0; i < ARRcookies.length; i++) {
                x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
                y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
                x = x.replace(/^\s+|\s+$/g, "");
                if (x == key) {
                    c_value = unescape(y);
                    break;
                }
            }
        }
        if (c_value !== "") {
            var cookie = key + "=" + c_value + ";path=/;";
            if (cookieValue.expire) {
                if (typeof cookieValue.expire === "number") {
                    cookie += "Max-Age=" + cookieValue.expire + ";";
                }
                if (typeof cookieValue.expire === "string") {
                    cookie += "expires=" + new Date(cookieValue.expire).toUTCString() + ";";
                }
            }
            document.cookie = cookie;
        }
    };
    CookieManager.prototype.clearCookies = function () {
        var cookies = document.cookie.split(";");
        for (var i = 0; i < cookies.length; i++) {
            var key = cookies[i].split("=")[0];
            document.cookie = key + "=; Max-Age=-99999999;";
        }
    };
    CookieManager.prototype.getItemFromCookies = function (_a) {
        var key = _a.key;
        var i, x, y, ARRcookies = document.cookie.split(";");
        for (i = 0; i < ARRcookies.length; i++) {
            x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
            y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
            x = x.replace(/^\s+|\s+$/g, "");
            if (x == key) {
                return unescape(y);
            }
        }
        return undefined;
    };
    CookieManager.prototype.getAllCookies = function () {
        var retVal = document.cookie.split(";").reduce(function (prev, cookieItem) {
            var eqIndex = cookieItem.indexOf("=");
            prev[cookieItem.substr(0, eqIndex)] = cookieItem.substr(eqIndex + 1);
            return prev;
        }, {});
        return retVal;
    };
    CookieManager.prototype.removeItemFromCookies = function (_a) {
        var key = _a.key;
        document.cookie = key + "=;path=/;Max-Age=-99999999;";
    };
    return CookieManager;
}());



/***/ }),

/***/ "./src/implementation/CryptographyManager.ts":
/*!***************************************************!*\
  !*** ./src/implementation/CryptographyManager.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CryptographyManager": () => (/* binding */ CryptographyManager)
/* harmony export */ });
var CryptographyManager = /** @class */ (function () {
    function CryptographyManager(_a) {
        var contextName = _a.contextName;
        this.contextName = contextName;
    }
    CryptographyManager.prototype.cryptoGenerateKeyPair = function () {
        return {};
    };
    CryptographyManager.prototype.cryptoStore = function (keyPair) {
        return;
    };
    CryptographyManager.prototype.cryptoSha512 = function (value) {
        return "";
    };
    CryptographyManager.prototype.cryptoSign = function (value, privateKey, options) {
        return "";
    };
    return CryptographyManager;
}());



/***/ }),

/***/ "./src/implementation/DownloadManager.ts":
/*!***********************************************!*\
  !*** ./src/implementation/DownloadManager.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DownloadManager": () => (/* binding */ DownloadManager)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_download__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/download */ "../../common/shrimp/helpers/download.ts");
/* harmony import */ var _common_shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");


var DownloadManager = /** @class */ (function () {
    function DownloadManager() {
        this.generalDownload = new _common_shrimp_helpers_download__WEBPACK_IMPORTED_MODULE_0__.Download();
    }
    DownloadManager.prototype.RequestHandler = function (request) {
        var formElement = document.createElement("form");
        formElement.method = request.http;
        formElement.action = request.url;
        formElement.target = "blank";
        document.body.appendChild(formElement);
        if (request.data) {
            Object.keys(request.data).map(function (val) {
                var formInput = document.createElement("input");
                formInput.value = request.data[val];
                formInput.name = val;
                formInput.type = "hidden";
                return formInput;
            }).forEach(function (formInput) { return formElement.appendChild(formInput); });
        }
        formElement.submit();
        document.body.removeChild(formElement);
    };
    DownloadManager.prototype.extractFileNameFromHeader = function (headers) {
        var _a;
        var disposition = headers["content-disposition"] || headers["Content-Disposition"];
        if (!disposition) {
            return null;
        }
        var responseFilename = (_a = /filename="([^;]*);?"/i.exec(disposition)) !== null && _a !== void 0 ? _a : /filename=([^;]*);?/i.exec(disposition);
        if (responseFilename && responseFilename.length > 1) {
            return responseFilename[1];
        }
        return null;
    };
    DownloadManager.prototype.download = function (data, fileName) {
        var typeHelper = new _common_shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_1__.TypeHelper();
        try {
            if (!typeHelper.isBlob(data)) {
                data = new Blob([data]);
            }
        }
        catch (error) {
            return;
        }
        return this.generalDownload.downloadInner(data, fileName, "text/plain");
    };
    return DownloadManager;
}());



/***/ }),

/***/ "./src/implementation/ExportManager.ts":
/*!*********************************************!*\
  !*** ./src/implementation/ExportManager.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExportManager": () => (/* binding */ ExportManager)
/* harmony export */ });
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xlsx */ "../../node_modules/xlsx/xlsx.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xlsx__WEBPACK_IMPORTED_MODULE_0__);

var ExportManager = /** @class */ (function () {
    function ExportManager(_a) {
        var fileName = _a.fileName, items = _a.items, headers = _a.headers, sheetName = _a.sheetName;
        this.fileName = fileName;
        this.items = items;
        this.headers = headers;
        this.sheetName = sheetName;
    }
    ExportManager.prototype.getItemValue = function (item, itemKey) {
        if (!item || !itemKey) {
            return "";
        }
        var index = itemKey.indexOf(".");
        if (index > -1) {
            var newKey = itemKey.substring(0, index);
            return this.getItemValue(item[newKey], itemKey.substring(index + 1));
        }
        else {
            return item[itemKey];
        }
    };
    ExportManager.prototype.exportToXlsx = function () {
        var _this = this;
        //Create a worksheet and add headers
        var ws = xlsx__WEBPACK_IMPORTED_MODULE_0___default().utils.aoa_to_sheet([
            this.headers.map(function (header) { return header["text"]; })
        ]);
        if (this.items && this.items.length > 0) {
            //Add items to new worksheet
            xlsx__WEBPACK_IMPORTED_MODULE_0___default().utils.sheet_add_aoa(ws, this.items.map(function (item) { return _this.headers.map(function (header) {
                return _this.getItemValue(item, header["value"]);
            }); }), { origin: -1 });
        }
        var wb = xlsx__WEBPACK_IMPORTED_MODULE_0___default().utils.book_new();
        xlsx__WEBPACK_IMPORTED_MODULE_0___default().utils.book_append_sheet(wb, ws, this.sheetName);
        xlsx__WEBPACK_IMPORTED_MODULE_0___default().writeFile(wb, this.fileName + ".xlsx");
    };
    return ExportManager;
}());



/***/ }),

/***/ "./src/implementation/GlobalMethodsImpl.ts":
/*!*************************************************!*\
  !*** ./src/implementation/GlobalMethodsImpl.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GlobalMethodsImpl": () => (/* binding */ GlobalMethodsImpl)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_domHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/domHelper */ "../../common/shrimp/helpers/domHelper.ts");
/* harmony import */ var _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _common_shrimp_interfaces_ComponentInterfaces_ElementLocation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/ComponentInterfaces/ElementLocation */ "../../common/shrimp/interfaces/ComponentInterfaces/ElementLocation.ts");
/* harmony import */ var _common_shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/ComponentInterfaces/IAlert */ "../../common/shrimp/interfaces/ComponentInterfaces/IAlert.ts");
/* harmony import */ var _common_shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/ComponentInterfaces/ICompJson */ "../../common/shrimp/interfaces/ComponentInterfaces/ICompJson.ts");
/* harmony import */ var _common_shrimp_interfaces_ComponentInterfaces_IComponentCollection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/ComponentInterfaces/IComponentCollection */ "../../common/shrimp/interfaces/ComponentInterfaces/IComponentCollection.ts");
/* harmony import */ var _ComponentManagerImpl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ComponentManagerImpl */ "./src/implementation/ComponentManagerImpl.ts");
/* harmony import */ var _DownloadManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./DownloadManager */ "./src/implementation/DownloadManager.ts");
/* harmony import */ var _ExportManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ExportManager */ "./src/implementation/ExportManager.ts");









var GlobalMethodsImpl = /** @class */ (function () {
    function GlobalMethodsImpl(_a) {
        var contextName = _a.contextName, parentInstance = _a.parentInstance, config = _a.config, errorContainerTarget = _a.errorContainerTarget, settingsWrapper = _a.settingsWrapper;
        this.contextName = contextName;
        this.parentInstance = parentInstance;
        this.config = config;
        this.errorContainerTarget = errorContainerTarget;
        GlobalMethodsImpl.settingsWrapper = settingsWrapper;
        if (GlobalMethodsImpl.settingsWrapper.settings.title) {
            this.setPageTitle(GlobalMethodsImpl.settingsWrapper.settings.title);
        }
        if (GlobalMethodsImpl.settingsWrapper.settings.favicon) {
            this.setFavicon(GlobalMethodsImpl.settingsWrapper.settings.favicon);
        }
    }
    GlobalMethodsImpl.prototype.setRenderer = function (renderer) {
        GlobalMethodsImpl.renderer = renderer;
    };
    GlobalMethodsImpl.prototype.alert = function (options, parameters) {
        var _a, _b, _c, _d, _e, _f;
        if ((_a = this.config) === null || _a === void 0 ? void 0 : _a.alert) {
            this.config.alert(options, parameters);
            return;
        }
        if (GlobalMethodsImpl.renderer) {
            var alertQjson = GlobalMethodsImpl.renderer.settingsQJsons.GetAlertQjson();
            if (alertQjson) {
                this.createAlert(alertQjson, options, parameters);
                return;
            }
        }
        var alertIcon;
        var compManagerImpl = new _ComponentManagerImpl__WEBPACK_IMPORTED_MODULE_6__.ComponentManagerImpl(this.contextName, this.parentInstance);
        switch ((_b = options.category) === null || _b === void 0 ? void 0 : _b.toLowerCase()) {
            case _common_shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__.AlertType.Info.toLowerCase():
                alertIcon = "mdi-information";
                break;
            case _common_shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__.AlertType.Success.toLowerCase():
                alertIcon = "mdi-check-circle";
                break;
            case _common_shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__.AlertType.Warning.toLowerCase():
                alertIcon = "mdi-alert-circle";
                break;
            case _common_shrimp_interfaces_ComponentInterfaces_IAlert__WEBPACK_IMPORTED_MODULE_3__.AlertType.Error.toLowerCase():
                alertIcon = "mdi-close-circle";
                break;
            default:
                break;
        }
        var alertProps = {
            border: "left",
            closeIcon: "mdi-close",
            color: (_c = options.category) === null || _c === void 0 ? void 0 : _c.toLowerCase(),
            coloredBorder: true,
            dismissible: true,
            elevation: 4,
            icon: alertIcon
        };
        var alertTitleComp = GlobalMethodsImpl.createLabelComp(true, compManagerImpl, options.title);
        var alertTextComp = GlobalMethodsImpl.createLabelComp(false, compManagerImpl, options.text);
        var compColl = (0,_common_shrimp_interfaces_ComponentInterfaces_IComponentCollection__WEBPACK_IMPORTED_MODULE_5__.CreateLightComponentCollection)({ compType: "VAlert", compId: "quick_alert_eval_" });
        var alertCompEl = compManagerImpl.createComponent({ componentName: compColl.compType, props: alertProps, events: undefined, asChildType: null, slots: { default: [alertTitleComp.vel, (_e = (_d = options.error) === null || _d === void 0 ? void 0 : _d.errorMessage) !== null && _e !== void 0 ? _e : alertTextComp.vel,] }, scopedSlots: undefined, compClass: undefined, componentCollection: compColl });
        (_f = this.errorContainerTarget.firstChild) === null || _f === void 0 ? void 0 : _f.remove();
        this.errorContainerTarget.appendChild(alertCompEl.el);
    };
    GlobalMethodsImpl.prototype.createAlert = function (qjson, options, parameters) {
        var _a;
        if (!GlobalMethodsImpl.renderer) {
            return;
        }
        var alertRoot = document.createElement("div");
        var alertRootParent = document.createElement("div");
        alertRootParent.appendChild(alertRoot);
        var childRenderer = GlobalMethodsImpl.renderer.CreateChildRenderer("quialert");
        childRenderer.SetCallbackDisplay(function (domEls, pageId, pageName, navDir, override) {
            domEls.forEach(function (domEl) {
                alertRoot.appendChild(domEl);
            });
        });
        var approveEventName, cancelEventName;
        var buttonApplier = {
            Confirm: function (eventName) { return approveEventName = eventName; },
            Cancel: function (eventName) { return cancelEventName = eventName; }
        };
        (_a = options.actionButtons) === null || _a === void 0 ? void 0 : _a.forEach(function (actionButton) { return buttonApplier[actionButton.type](actionButton.clickEventName); });
        var createEventTriggerer = function (eventName) {
            return function () {
                if (!(parameters === null || parameters === void 0 ? void 0 : parameters.ownerComponent) || !eventName) {
                    return;
                }
                parameters.ownerComponent.events.Trigger({ eventName: eventName });
            };
        };
        childRenderer.Render({
            qjson: qjson,
            props: { title: options.title, text: options.text, category: options.category, actionButtons: options.actionButtons, error: options.error, additionals: options.additionals },
            events: { onCancel: createEventTriggerer(cancelEventName), onConfirm: createEventTriggerer(approveEventName) },
            compParentInst: null,
            noHistory: true,
            pageId: parameters.currentPageId,
        });
    };
    GlobalMethodsImpl.createLabelComp = function (title, compManagerImpl, labelText) {
        var props = {
            text: labelText !== null && labelText !== void 0 ? labelText : "Default Text",
            tagType: "paragraph"
        };
        var compColl = (0,_common_shrimp_interfaces_ComponentInterfaces_IComponentCollection__WEBPACK_IMPORTED_MODULE_5__.CreateLightComponentCollection)({ compType: "QLabel", compId: title ? "quick_alert_title_eval_" : "alert_quick_text_eval_" });
        return compManagerImpl.createComponent({ componentName: compColl.compType, props: props, asChildType: _common_shrimp_interfaces_ComponentInterfaces_ICompJson__WEBPACK_IMPORTED_MODULE_4__.CType.slot, compClass: title ? "font-weight-bold" : undefined, componentCollection: compColl });
    };
    GlobalMethodsImpl.prototype.performance = function () {
        return performance.now();
    };
    GlobalMethodsImpl.prototype.getDeepLinkParams = function () {
        // TODO - move to Quick_Shrimp
        var UrlHelper = /** @class */ (function () {
            function UrlHelper() {
            }
            UrlHelper.ParseQuery = function (queryString) {
                var query = {};
                var pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');
                for (var i = 0; i < pairs.length; i++) {
                    var pair = pairs[i].split('=');
                    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');
                }
                return query;
            };
            return UrlHelper;
        }());
        return UrlHelper.ParseQuery(window.location.search);
    };
    GlobalMethodsImpl.prototype.dynamicCompHandler = function (_a) {
        var createdComps = _a.createdComps, compLocater = _a.compLocater, parentCollection = _a.parentCollection, childName = _a.childName;
        if (parentCollection && createdComps[0].vDomElement) {
            return new _ComponentManagerImpl__WEBPACK_IMPORTED_MODULE_6__.ComponentManagerImpl(this.contextName, this.parentInstance).addNewSlotToParentComp({ parentCompCollection: parentCollection, slots: createdComps.map(function (item) { return item.vDomElement; }), compLocater: compLocater, childName: childName });
        }
        else {
            return GlobalMethodsImpl.decideCompLocation({ createdComps: createdComps.map(function (item) { return item.domElement; }), parentComp: parentCollection, location: compLocater, childName: childName });
        }
    };
    /**
     * Place the new created component dom element in the page.
     * If it' s editor page, it will not be rendered. It might be rendered at the end of page, but it brokes the page layout
     * @param createdComp New component dom element
     * @param parentComp Reference component dom element. If it is now exit, new comp will be append as a last child
     * @param location Indicates the new component will be placed
     */
    GlobalMethodsImpl.decideCompLocation = function (_a) {
        var _b, _c, _d;
        var createdComps = _a.createdComps, parentComp = _a.parentComp, location = _a.location, childName = _a.childName;
        if (parentComp) {
            if ((_b = parentComp.component) === null || _b === void 0 ? void 0 : _b.customChildAppender) {
                (_c = parentComp.component) === null || _c === void 0 ? void 0 : _c.customChildAppender({ childName: childName, createdComps: createdComps });
                return;
            }
            if (childName) {
                throw "NOTIMPLEMENTED";
            }
            var parentCompEl_1 = (_d = parentComp.component) === null || _d === void 0 ? void 0 : _d.$el;
            switch (location) {
                case _common_shrimp_interfaces_ComponentInterfaces_ElementLocation__WEBPACK_IMPORTED_MODULE_2__.ElementLocation.Before: {
                    if (parentCompEl_1.children.length == 0) {
                        createdComps.forEach(function (createdComp) {
                            parentCompEl_1.appendChild(createdComp);
                        });
                    }
                    else {
                        createdComps.forEach(function (createdComp) {
                            parentCompEl_1.insertBefore(createdComp, parentCompEl_1.childNodes[0]);
                        });
                    }
                    break;
                }
                case _common_shrimp_interfaces_ComponentInterfaces_ElementLocation__WEBPACK_IMPORTED_MODULE_2__.ElementLocation.After: {
                    createdComps.forEach(function (createdComp) {
                        parentCompEl_1.appendChild(createdComp);
                    });
                    break;
                }
                default:
                    createdComps.forEach(function (createdComp) {
                        document.getElementsByClassName("shellContainerTarget")[0].appendChild(createdComp);
                    });
                    break;
            }
        }
        else {
            createdComps.forEach(function (createdComp) {
                document.getElementsByClassName("shellContainerTarget")[0].appendChild(createdComp);
            });
        }
    };
    GlobalMethodsImpl.prototype.deleteComponent = function (compCollection) {
        var _a;
        var compDomEl = (_a = compCollection.component) === null || _a === void 0 ? void 0 : _a.$el;
        if (!compDomEl) {
            _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "Component dom element couldn' t be found at the current page", minEngineLogLevel: this.getMinEngineLogType() });
            return;
        }
        compDomEl.remove();
    };
    GlobalMethodsImpl.prototype.setPageTitle = function (value) {
        var title = document.getElementsByTagName("title");
        if (title.length != 0) {
            title[0].remove();
        }
        var newTitle = _common_shrimp_helpers_domHelper__WEBPACK_IMPORTED_MODULE_0__.DomHelper.CreateDom("title");
        newTitle.text = value;
        document.head.prepend(newTitle);
    };
    GlobalMethodsImpl.prototype.setFavicon = function (favicon) {
        GlobalMethodsImpl.settingsWrapper.settings.favicon = favicon;
        var newfavicon = _common_shrimp_helpers_domHelper__WEBPACK_IMPORTED_MODULE_0__.DomHelper.CreateDom("link", { id: "qui-favicon", attrs: { href: favicon, rel: "icon" } });
        var oldicon = document.getElementById("qui-favicon");
        if (oldicon) {
            oldicon.remove();
        }
        document.head.prepend(newfavicon);
    };
    GlobalMethodsImpl.prototype.exportToXlsxHandler = function (_a) {
        var fileName = _a.fileName, items = _a.items, headers = _a.headers, sheetName = _a.sheetName;
        var exportManager = new _ExportManager__WEBPACK_IMPORTED_MODULE_8__.ExportManager({ fileName: fileName, items: items, headers: headers, sheetName: sheetName });
        exportManager.exportToXlsx();
    };
    GlobalMethodsImpl.prototype.downloadHandler = function (responseFile) {
        if (!responseFile) {
            return;
        }
        var downloadManager = new _DownloadManager__WEBPACK_IMPORTED_MODULE_7__.DownloadManager();
        var responseFilename = responseFile.name || "data.xls";
        // Check if response has headers(fully axios response) or headers are given from QJson
        // if (responseFile.headers || responseHeaders) {
        //     let headers = responseFile.headers || responseHeaders;
        //     responseFilename = downloadManager.extractFileNameFromHeader(headers) || responseFilename;
        // }
        var blobFile = responseFile;
        if (responseFile.data) {
            blobFile = responseFile.data;
        }
        return downloadManager.download(blobFile, responseFilename);
    };
    GlobalMethodsImpl.prototype.setComponentClass = function (compCollection, classes) {
        if (!compCollection.component) {
            return;
        }
        classes.forEach(function (classKey) {
            compCollection.component.classes = compCollection.component.classes || {};
            compCollection.component.classes[classKey] = true;
        });
        compCollection.component.$mount();
    };
    ;
    GlobalMethodsImpl.prototype.setComponentsProperty = function (componentCollection, propertyName, propertyValue) {
        var setPropertyValueDeep = function (coll) {
            Object.keys(coll).map(function (item) {
                coll[item].forEach(function (comp) {
                    if (comp.component) {
                        comp.component[propertyName] = propertyValue;
                    }
                    if (comp === null || comp === void 0 ? void 0 : comp.children) {
                        setPropertyValueDeep(comp.children);
                    }
                });
            });
        };
        if ((componentCollection === null || componentCollection === void 0 ? void 0 : componentCollection.component) && !(componentCollection === null || componentCollection === void 0 ? void 0 : componentCollection.children)) {
            componentCollection.component[propertyName] = propertyValue;
        }
        else {
            setPropertyValueDeep(componentCollection.children);
        }
    };
    GlobalMethodsImpl.prototype.clearPageClose = function () {
        GlobalMethodsImpl.onCloseIsActive = false;
    };
    GlobalMethodsImpl.prototype.setPageClose = function () {
        GlobalMethodsImpl.onCloseIsActive = true;
        window.addEventListener("beforeunload", function (event) {
            var _a;
            if (GlobalMethodsImpl.onCloseIsActive) {
                (_a = GlobalMethodsImpl.renderer) === null || _a === void 0 ? void 0 : _a.Trigger("onPageClose");
                // set a truthy value to property returnValue
                event.returnValue = "page closed";
            }
        });
    };
    GlobalMethodsImpl.prototype.intoView = function (component) {
        var _a;
        (_a = component.$el) === null || _a === void 0 ? void 0 : _a.scrollIntoView();
    };
    ;
    GlobalMethodsImpl.prototype.YOffset = function () {
        return window.scrollY;
    };
    GlobalMethodsImpl.prototype.XOffset = function () {
        return window.scrollX;
    };
    ;
    GlobalMethodsImpl.prototype.toTop = function () {
        var shellContainerDiv = document.getElementsByClassName("shellContainerTarget")[0];
        shellContainerDiv.scrollIntoView();
    };
    ;
    GlobalMethodsImpl.prototype.getEnvironmentVariable = function () {
        return GlobalMethodsImpl.settingsWrapper.settings.environment;
    };
    ;
    GlobalMethodsImpl.prototype.setEnvironment = function (env) {
        GlobalMethodsImpl.settingsWrapper.settings.environment = env;
    };
    ;
    GlobalMethodsImpl.prototype.getYamlLogType = function () {
        var yamlLogType = GlobalMethodsImpl.settingsWrapper.settings.yamlLogType;
        return yamlLogType ? _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType[yamlLogType] : _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Trace;
    };
    GlobalMethodsImpl.prototype.setYamlLogType = function (logType) {
        GlobalMethodsImpl.settingsWrapper.settings.yamlLogType = _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType[logType];
    };
    GlobalMethodsImpl.prototype.getPageTitle = function () {
        var title = GlobalMethodsImpl.settingsWrapper.settings.title;
        console.log(title);
        return title;
    };
    ;
    GlobalMethodsImpl.prototype.getFavicon = function () {
        var favicon = GlobalMethodsImpl.settingsWrapper.settings.favicon;
        return favicon;
    };
    GlobalMethodsImpl.prototype.getMinEngineLogType = function () {
        return GlobalMethodsImpl.settingsWrapper.settings.minEngineLogLevel ? _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType[GlobalMethodsImpl.settingsWrapper.settings.minEngineLogLevel] : undefined;
    };
    ;
    GlobalMethodsImpl.onCloseIsActive = false;
    return GlobalMethodsImpl;
}());



/***/ }),

/***/ "./src/implementation/HostTriggerer.ts":
/*!*********************************************!*\
  !*** ./src/implementation/HostTriggerer.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HostTriggererImp": () => (/* binding */ HostTriggererImp)
/* harmony export */ });
var HostTriggererImp = /** @class */ (function () {
    function HostTriggererImp(servicesWrapper) {
        this.contextName = "context";
        this.servicesWrapper = servicesWrapper;
    }
    HostTriggererImp.prototype.hostTrigger = function (functionName, params, pageNameArray) {
        var _a, _b;
        return (_b = (_a = this.servicesWrapper.services).hostTriggerCb) === null || _b === void 0 ? void 0 : _b.call(_a, functionName, params, pageNameArray);
    };
    return HostTriggererImp;
}());



/***/ }),

/***/ "./src/implementation/LanguageExtensions.ts":
/*!**************************************************!*\
  !*** ./src/implementation/LanguageExtensions.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LanguageExtensions": () => (/* binding */ LanguageExtensions)
/* harmony export */ });
/* harmony import */ var devextreme_data_array_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/data/array_store */ "../../node_modules/devextreme/data/array_store.js");
/* harmony import */ var devextreme_data_array_store__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(devextreme_data_array_store__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var devextreme_data_custom_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/data/custom_store */ "../../node_modules/devextreme/data/custom_store.js");
/* harmony import */ var devextreme_data_custom_store__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(devextreme_data_custom_store__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var devextreme_data_data_source__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! devextreme/data/data_source */ "../../node_modules/devextreme/data/data_source.js");
/* harmony import */ var devextreme_data_data_source__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(devextreme_data_data_source__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_shrimp_helpers_shellHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/shellHelper */ "../../common/shrimp/helpers/shellHelper.ts");




var LanguageExtensions = /** @class */ (function () {
    function LanguageExtensions(servicesWrapper) {
        this.contextName = LanguageExtensions.ContextName;
        this.servicesWrapper = servicesWrapper;
        this.osGlobal = this.createOsGlobalObjectsInternal();
    }
    LanguageExtensions.prototype.manageShellObject = function () {
        var _this = this;
        var map = [
            { shellKey: "isAuthenticated", serviceKey: "authenticatedCb" },
            { shellKey: "getResource", serviceKey: "resourceCb" },
            { shellKey: "callMessageBox", serviceKey: "callMessageBox" },
            { shellKey: "getUserContext", serviceKey: "userContextCb" },
            { shellKey: "getCustomerContext", serviceKey: "customerContextCb" },
            { shellKey: "getStoreData", serviceKey: "getStoreDataCb" },
            { shellKey: "print", serviceKey: "print" },
            { shellKey: "scan", serviceKey: "scan" },
            { shellKey: "ocr", serviceKey: "ocr" },
            { shellKey: "biometric", serviceKey: "biometric" },
            { shellKey: "logout", serviceKey: "logout" },
            { shellKey: "getContainerName", serviceKey: "getContainerName" },
            { shellKey: "extensions", serviceKey: "extensions" },
        ];
        map.forEach(function (item) { return _this.osGlobal.shell[item.shellKey] = _this.servicesWrapper.services[item.serviceKey]; });
        (0,_common_shrimp_helpers_shellHelper__WEBPACK_IMPORTED_MODULE_3__.fixShell)(this.osGlobal.shell);
    };
    LanguageExtensions.prototype.createOsGlobalObjects = function () {
        return this.osGlobal;
    };
    LanguageExtensions.prototype.createOsGlobalObjectsInternal = function () {
        var sc = this.servicesWrapper.services;
        var hasDevExLibrary = true; //functiondan alacak
        var langObjects = {
            shell: {},
            devex: {}
        };
        if (sc) {
            var shell = {
                isAuthenticated: sc.authenticatedCb,
                getResource: sc.resourceCb,
                callMessageBox: sc.callMessageBox,
                getUserContext: sc.userContextCb,
                getCustomerContext: sc.customerContextCb,
                getStoreData: sc.getStoreDataCb,
                print: sc.print,
                scan: sc.scan,
                ocr: sc.ocr,
                biometric: sc.biometric,
                logout: sc.logout,
                getContainerName: sc.getContainerName,
                extensions: sc.extensions
            };
            langObjects.shell = shell;
        }
        if (hasDevExLibrary) {
            var devex = {
                createDataSource: function (_a) {
                    var _b, _c;
                    var ownerComp = _a.ownerComp, parameters = _a.parameters;
                    var store = (_b = (parameters && parameters[0] && parameters[0].store)) !== null && _b !== void 0 ? _b : (_c = arguments === null || arguments === void 0 ? void 0 : arguments[0]) === null || _c === void 0 ? void 0 : _c.store;
                    return new (devextreme_data_data_source__WEBPACK_IMPORTED_MODULE_2___default())({
                        store: store
                        //Gelebilecek issuelar için not:
                        // "reshapeOnPush: true" 
                        // ^Bu olmadan tablonun sonuna insert olmuyo. Bu varken de push methodunda index çalışmıyo. 
                        //Tablo sonuna push methoduyla insert yapılmak istenirse index setlenmeli.
                    });
                },
                createCustomStore: function (_a) {
                    var _b, _c, _d, _e, _f, _g;
                    var ownerComp = _a.ownerComp, parameters = _a.parameters;
                    var loadUrl = (_b = (parameters && parameters[0] && parameters[0].loadUrl)) !== null && _b !== void 0 ? _b : (_c = arguments === null || arguments === void 0 ? void 0 : arguments[0]) === null || _c === void 0 ? void 0 : _c.loadUrl;
                    var key = (_d = (parameters && parameters[0] && parameters[0].key)) !== null && _d !== void 0 ? _d : (_e = arguments === null || arguments === void 0 ? void 0 : arguments[0]) === null || _e === void 0 ? void 0 : _e.key;
                    var load = (_f = (parameters && parameters[0] && parameters[0].load)) !== null && _f !== void 0 ? _f : (_g = arguments === null || arguments === void 0 ? void 0 : arguments[0]) === null || _g === void 0 ? void 0 : _g.load;
                    if (!load) {
                        load = function (loadOptions) {
                            var params = '?';
                            [
                                'skip',
                                'take',
                                'requireTotalCount',
                                'requireGroupCount',
                                'sort',
                                'filter',
                                'totalSummary',
                                'group',
                                'groupSummary',
                            ].forEach(function (i) {
                                if (i in loadOptions && (loadOptions[i] != '' || loadOptions[i] != null || loadOptions[i] != null != undefined)) {
                                    params += i + "=" + JSON.stringify(loadOptions[i]) + "&";
                                }
                            });
                            params = params.slice(0, -1);
                            return fetch(loadUrl + params)
                                .then(function (response) { return response.json(); })
                                .then(function (data) { return ({
                                data: data.data,
                                totalCount: data.totalCount,
                                summary: data.summary,
                                groupCount: data.groupCount,
                            }); })
                                .catch(function () { throw new Error('Data Loading Error'); });
                        };
                    }
                    return new (devextreme_data_custom_store__WEBPACK_IMPORTED_MODULE_1___default())({
                        load: load,
                        key: key
                    });
                },
                createArrayStore: function (_a) {
                    var _b, _c, _d, _e;
                    var ownerComp = _a.ownerComp, parameters = _a.parameters;
                    var key = (_b = (parameters && parameters[0] && parameters[0].key)) !== null && _b !== void 0 ? _b : (_c = arguments === null || arguments === void 0 ? void 0 : arguments[0]) === null || _c === void 0 ? void 0 : _c.key;
                    var data = (_d = (parameters && parameters[0] && parameters[0].data)) !== null && _d !== void 0 ? _d : (_e = arguments === null || arguments === void 0 ? void 0 : arguments[0]) === null || _e === void 0 ? void 0 : _e.data;
                    return new (devextreme_data_array_store__WEBPACK_IMPORTED_MODULE_0___default())({
                        key: key,
                        data: data
                    });
                }
            };
            langObjects.devex = devex;
        }
        return langObjects;
    };
    LanguageExtensions.ContextName = "LanguageExtensions";
    return LanguageExtensions;
}());



/***/ }),

/***/ "./src/implementation/ModuleManagerImpl.ts":
/*!*************************************************!*\
  !*** ./src/implementation/ModuleManagerImpl.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ModuleManager": () => (/* binding */ ModuleManager)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_JSLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/JSLoader */ "../../common/shrimp/helpers/JSLoader.ts");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");
/* harmony import */ var _components_providers_ComponentProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/providers/ComponentProvider */ "./src/components/providers/ComponentProvider.ts");
/* harmony import */ var _common_shrimp_helpers_namedComponentHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/namedComponentHelper */ "../../common/shrimp/helpers/namedComponentHelper.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




var ModuleManager = /** @class */ (function () {
    function ModuleManager(namedCompsVersions) {
        this.namedCompsVersions = namedCompsVersions;
    }
    ModuleManager.prototype.SetExternalQJsonRetriever = function (externalQJsonRetriever) {
        this.externalQJsonRetriever = externalQJsonRetriever;
    };
    ModuleManager.prototype.getNamedCompsVersions = function (compName) {
        var _a, _b;
        return (_b = (_a = this.namedCompsVersions) === null || _a === void 0 ? void 0 : _a.namedComponents) === null || _b === void 0 ? void 0 : _b[compName];
    };
    ModuleManager.prototype.checkNamedComponent = function (compName, compPath) {
        return __awaiter(this, void 0, void 0, function () {
            var compModel, _a, compVersion, module, comp;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.externalQJsonRetriever) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.externalQJsonRetriever.getNamedCompModel(compPath)];
                    case 1:
                        _a = _b.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        _a = undefined;
                        _b.label = 3;
                    case 3:
                        compModel = _a;
                        compVersion = this.getNamedCompsVersions(compName);
                        return [4 /*yield*/, new _common_shrimp_helpers_namedComponentHelper__WEBPACK_IMPORTED_MODULE_2__.NamedComponentHelper().loadNamedComponent(compName, compPath, { compModel: compModel }, compVersion)];
                    case 4:
                        module = _b.sent();
                        comp = module.default;
                        vue__WEBPACK_IMPORTED_MODULE_3__["default"].component(comp.name, comp);
                        return [2 /*return*/];
                }
            });
        });
    };
    ModuleManager.prototype.CheckComponent = function (compName, compPath) {
        //check if component needs lazy load and return true if it does. And call success when loaded.
        //return false if component is allready loaded.
        if (compPath) {
            return this.checkNamedComponent(compName, compPath);
        }
        var checkComponentRes = _components_providers_ComponentProvider__WEBPACK_IMPORTED_MODULE_1__.ComponentProvider.checkComponents(compName);
        if (checkComponentRes instanceof Promise) {
            return checkComponentRes;
        }
        if (checkComponentRes) {
            return undefined;
        }
        else {
            var path = "";
            var vuetify_microUI_1 = window.vuetify_microUI;
            var targetDomainComp_1;
            Object.keys(vuetify_microUI_1.ml).find(function (key) {
                if (vuetify_microUI_1.ml[key] != undefined) {
                    var targetModule = vuetify_microUI_1.ml[key];
                    var domainComp = targetModule.componentNames[compName];
                    if (!domainComp) {
                        return undefined;
                    }
                    targetDomainComp_1 = domainComp;
                    var modulePath = targetModule.modulePath;
                    var suffix = compName + ".js";
                    var pathSplitIndex = modulePath.indexOf("compVNames");
                    if (pathSplitIndex == -1) {
                        pathSplitIndex = modulePath.lastIndexOf("/") + 1;
                        suffix = targetDomainComp_1.file;
                    }
                    path = modulePath.substring(0, pathSplitIndex) + suffix;
                    return true;
                }
            });
            if (!targetDomainComp_1 || targetDomainComp_1.loaded) {
                return undefined;
            }
            return new Promise(function (res, rej) {
                new _common_shrimp_helpers_JSLoader__WEBPACK_IMPORTED_MODULE_0__.JSLoader(path, function () {
                    var target = vue__WEBPACK_IMPORTED_MODULE_3__["default"].component(compName);
                    res(target['options']);
                    targetDomainComp_1.loaded = true;
                }, function (evt) {
                    rej(evt);
                }, 1, true, new Date().getTime()).LoadJS();
            });
        }
    };
    return ModuleManager;
}());



/***/ }),

/***/ "./src/implementation/NavigationManagerImpl.ts":
/*!*****************************************************!*\
  !*** ./src/implementation/NavigationManagerImpl.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NavigationManagerImpl": () => (/* binding */ NavigationManagerImpl)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _managers_DataManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../managers/DataManager */ "./src/managers/DataManager.ts");
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};


var NavigationManagerImpl = /** @class */ (function () {
    function NavigationManagerImpl(_a) {
        var contextName = _a.contextName, config = _a.config, websdkContext = _a.websdkContext;
        this.go = undefined;
        this.contextName = contextName;
        this.websdkContext = websdkContext;
        if (config) {
            this.createFunctions(config);
        }
    }
    NavigationManagerImpl.prototype.go2 = function (qjsonPath, options, cb) {
        var _a;
        var environmentName = (_a = this.websdkContext.GetItemSingle(_managers_DataManager__WEBPACK_IMPORTED_MODULE_1__.DataManager.ContextName)) === null || _a === void 0 ? void 0 : _a.environmentName;
        if (environmentName !== "qui") {
            //log sdk multitab not implemented
            cb ? cb() : null;
            return;
        }
        qjsonPath = qjsonPath.substring(0, qjsonPath.lastIndexOf("."));
        window.open(window.origin + qjsonPath + "?copyStore=" + (options === null || options === void 0 ? void 0 : options.store));
    };
    NavigationManagerImpl.prototype.createFunctions = function (config) {
        var _a, _b;
        if ((_a = config.navigationManager) === null || _a === void 0 ? void 0 : _a.go) {
            this.go = function (_a) {
                var _b;
                var url = _a.url;
                if (Object.keys(url).length != 3 || new _common_shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__.TypeHelper().isString(url)) {
                    if (Object.keys(url).length > 1)
                        url = url[0];
                    return config.navigationManager.go({ url: url });
                }
                else
                    return (_b = config.navigationManager).go.apply(_b, __spreadArray([], __read(Object.values(url)), false));
            };
        }
        if (((_b = config.navigationManager) === null || _b === void 0 ? void 0 : _b.triggerPreviousPage) !== undefined) {
            this.backOverride = config.navigationManager.triggerPreviousPage;
        }
    };
    NavigationManagerImpl.prototype.getUrl = function (options) {
        var retVal = window.location.href;
        if (options === null || options === void 0 ? void 0 : options.noQueryString) {
            retVal = retVal.replace(window.location.search, '');
        }
        return retVal;
    };
    NavigationManagerImpl.prototype.backOverride = function () {
        window.history.back();
    };
    NavigationManagerImpl.prototype.redirectFunc = function (_a) {
        var url = _a.url;
        window.location.href = url;
    };
    NavigationManagerImpl.prototype.redirect = function (_a) {
        var url = _a.url, options = _a.options;
        window.open(url, options === null || options === void 0 ? void 0 : options.target);
    };
    return NavigationManagerImpl;
}());



/***/ }),

/***/ "./src/implementation/NetworkManagerImpl.ts":
/*!**************************************************!*\
  !*** ./src/implementation/NetworkManagerImpl.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "../../node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _managers_network_request_RequestHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../managers/network/request/RequestHandler */ "./src/managers/network/request/RequestHandler.ts");
/* harmony import */ var _managers_network_response_ErrorHandler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../managers/network/response/ErrorHandler */ "./src/managers/network/response/ErrorHandler.ts");
/* harmony import */ var _managers_network_response_SuccessHandler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../managers/network/response/SuccessHandler */ "./src/managers/network/response/SuccessHandler.ts");
/* harmony import */ var _managers_network_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../managers/network/utils */ "./src/managers/network/utils.ts");
/* harmony import */ var _WebSDK__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../WebSDK */ "./src/WebSDK.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};







var NetworkManagerImpl = /** @class */ (function () {
    function NetworkManagerImpl(contextName, settingsWrapper, servicesWrapper, storeManager) {
        this.typeHelper = new _common_shrimp_helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__.TypeHelper();
        this.contextName = contextName;
        this.settingsWrapper = settingsWrapper;
        this.storeManager = storeManager;
        this.servicesWrapper = servicesWrapper;
        axios__WEBPACK_IMPORTED_MODULE_1___default().interceptors.request.use(function (request) { return (0,_managers_network_request_RequestHandler__WEBPACK_IMPORTED_MODULE_2__["default"])(request, settingsWrapper, storeManager); });
        axios__WEBPACK_IMPORTED_MODULE_1___default().interceptors.response.use(function (response) { return (0,_managers_network_response_SuccessHandler__WEBPACK_IMPORTED_MODULE_4__["default"])(response, storeManager); }, function (error) { return (0,_managers_network_response_ErrorHandler__WEBPACK_IMPORTED_MODULE_3__["default"])(error, storeManager); });
    }
    NetworkManagerImpl.prototype.checkPlateauIAM = function (qjson) {
        var _a, _b, _c;
        return __awaiter(this, void 0, void 0, function () {
            var securePage, unsecurePages, i, queryString, queryParam;
            return __generator(this, function (_d) {
                if (_WebSDK__WEBPACK_IMPORTED_MODULE_6__.WebSDK.getPlateauIAM()) {
                    securePage = true;
                    unsecurePages = (_b = (_a = _WebSDK__WEBPACK_IMPORTED_MODULE_6__.WebSDK.getPlateauIAM().settingsIAM) === null || _a === void 0 ? void 0 : _a.iam) === null || _b === void 0 ? void 0 : _b.unsecurePages;
                    if (unsecurePages) {
                        for (i = 0; i < unsecurePages.length; i++) {
                            if (unsecurePages[i] === qjson)
                                securePage = false;
                        }
                    }
                    if (!_WebSDK__WEBPACK_IMPORTED_MODULE_6__.WebSDK.getPlateauIAM().isAuthenticated() && securePage) {
                        queryString = qjson.split("?");
                        queryParam = "";
                        if (queryString.length == 2)
                            queryParam = queryString[1];
                        window.location.href = window.location.protocol + '//' + window.location.host + ((_c = this.settingsWrapper.settings.rootqjson) === null || _c === void 0 ? void 0 : _c.replace(".qjson", "")) + "?" + queryParam;
                    }
                }
                return [2 /*return*/];
            });
        });
    };
    NetworkManagerImpl.prototype.getConfiguration = function (config, headers, withCredentials, timeout) {
        var _a, _b, _c;
        if (headers || this.settingsWrapper.settings.defaultServiceHeader) {
            config = config || {};
            //config.headers = headers;
            config.headers = {};
            config.headers[_managers_network_request_RequestHandler__WEBPACK_IMPORTED_MODULE_2__.headerTransportKey] = (_a = JSON.stringify(headers)) !== null && _a !== void 0 ? _a : JSON.stringify(this.settingsWrapper.settings.defaultServiceHeader);
        }
        var isDevData = (_c = (_b = this.storeManager).getItemFromLocalStorage) === null || _c === void 0 ? void 0 : _c.call(_b, { key: 'isDev' });
        if (isDevData) {
            var parsedData_1 = JSON.parse(isDevData);
            config = config || {};
            config.headers = config.headers || {};
            Object.keys(parsedData_1).forEach(function (key) { config.headers[key] = parsedData_1[key]; });
        }
        if (withCredentials) {
            config = config || {};
            config.withCredentials = withCredentials;
        }
        if (timeout) {
            config = config || {};
            config.timeout = timeout;
        }
        return config;
    };
    NetworkManagerImpl.prototype.manageOtherDomains = function (url, qjsonRetrive) {
        if (!_managers_network_utils__WEBPACK_IMPORTED_MODULE_5__["default"].isDirectUrl(url)) {
            //FOR DIFFERENT DOMAINS
            if (this.servicesWrapper.services.getURL) {
                if (qjsonRetrive) {
                    url = this.servicesWrapper.services.getURL(url, "ui") || url;
                }
                else {
                    url = this.servicesWrapper.services.getURL(url, "service") || url;
                }
            }
            if (url.indexOf("?") == -1) {
                url += "?ver=" + Math.random();
            }
        }
        return url;
    };
    NetworkManagerImpl.prototype.getUrl = function (url, urlParams, qjsonRetrive) {
        if (qjsonRetrive === void 0) { qjsonRetrive = false; }
        var paramKeys = urlParams ? Object.keys(urlParams) : null;
        var retVal = "";
        var prefix = "";
        if (urlParams && paramKeys && paramKeys.length > 0) {
            prefix = url.indexOf("?") < 0 ? "?" : (url.endsWith("&") ? "" : "&");
            retVal = paramKeys.map(function (prop) {
                return [prop, urlParams[prop]].map(encodeURIComponent).join("=");
            }).join("&");
        }
        var finalUrl = url + prefix + retVal;
        if (qjsonRetrive && this.settingsWrapper.settings.qjsonURLPrefix && !_managers_network_utils__WEBPACK_IMPORTED_MODULE_5__["default"].isDirectUrl(url)) {
            url = url.startsWith("/") ? url.substring(1, url.length) : url;
            finalUrl = this.settingsWrapper.settings.qjsonURLPrefix + "/" + url;
        }
        else if (!qjsonRetrive && this.settingsWrapper.settings.serviceURL && !_managers_network_utils__WEBPACK_IMPORTED_MODULE_5__["default"].isDirectUrl(url)) {
            url = url.startsWith("/") ? url.substring(1, url.length) : url;
            finalUrl = this.settingsWrapper.settings.serviceURL + "/" + url + prefix + retVal;
        }
        else if (this.settingsWrapper.settings.settingsProxyYaml) {
            var localProxy = this.settingsWrapper.settings.settingsProxyYaml["localProxy"];
            var foundedUrlKey = Object.keys(localProxy).find(function (item) { return url.includes(item); });
            if (foundedUrlKey && localProxy[foundedUrlKey]) {
                var checkPath = localProxy[foundedUrlKey].startsWith('http');
                finalUrl = checkPath ? localProxy[foundedUrlKey] + url.replace(foundedUrlKey, '') + prefix + retVal : finalUrl;
            }
        }
        finalUrl = this.manageOtherDomains(finalUrl, qjsonRetrive);
        return finalUrl;
    };
    NetworkManagerImpl.prototype.openLoading = function (options) {
        var _a, _b;
        if (!(options === null || options === void 0 ? void 0 : options.disableLoading)) {
            var loadingCounter = 0;
            if ((_a = this.storeManager) === null || _a === void 0 ? void 0 : _a.get) {
                var currentCount = this.storeManager.get("loadingCounter");
                if (currentCount && typeof currentCount === "string") {
                    loadingCounter = Number.parseInt(currentCount);
                }
            }
            if ((_b = this.storeManager) === null || _b === void 0 ? void 0 : _b.set) {
                this.storeManager.set("loadingCounter", (loadingCounter + 1).toString());
            }
        }
    };
    NetworkManagerImpl.prototype.closeLoading = function (options) {
        var _a, _b;
        if (!(options === null || options === void 0 ? void 0 : options.disableLoading)) {
            var loadingCounter = 0;
            if ((_a = this.storeManager) === null || _a === void 0 ? void 0 : _a.get) {
                var currentCount = this.storeManager.get("loadingCounter");
                if (currentCount && typeof currentCount === "string") {
                    loadingCounter = Number.parseInt(currentCount);
                }
            }
            if ((_b = this.storeManager) === null || _b === void 0 ? void 0 : _b.set) {
                this.storeManager.set("loadingCounter", (loadingCounter - 1).toString());
            }
        }
    };
    NetworkManagerImpl.prototype.axiosCommon = function (type, url, body, axiosConfig, options) {
        return __awaiter(this, void 0, void 0, function () {
            var axiosResponse, _a, ex_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 13, , 14]);
                        this.openLoading(options);
                        axiosResponse = void 0;
                        _a = type;
                        switch (_a) {
                            case "get": return [3 /*break*/, 1];
                            case "post": return [3 /*break*/, 3];
                            case "patch": return [3 /*break*/, 5];
                            case "put": return [3 /*break*/, 7];
                            case "delete": return [3 /*break*/, 9];
                        }
                        return [3 /*break*/, 11];
                    case 1: return [4 /*yield*/, axios__WEBPACK_IMPORTED_MODULE_1___default().get(url, axiosConfig)];
                    case 2:
                        axiosResponse = _b.sent();
                        return [3 /*break*/, 12];
                    case 3: return [4 /*yield*/, axios__WEBPACK_IMPORTED_MODULE_1___default().post(url, body, axiosConfig)];
                    case 4:
                        axiosResponse = _b.sent();
                        return [3 /*break*/, 12];
                    case 5: return [4 /*yield*/, axios__WEBPACK_IMPORTED_MODULE_1___default().patch(url, body, axiosConfig)];
                    case 6:
                        axiosResponse = _b.sent();
                        return [3 /*break*/, 12];
                    case 7: return [4 /*yield*/, axios__WEBPACK_IMPORTED_MODULE_1___default().put(url, body, axiosConfig)];
                    case 8:
                        axiosResponse = _b.sent();
                        return [3 /*break*/, 12];
                    case 9: return [4 /*yield*/, axios__WEBPACK_IMPORTED_MODULE_1___default()["delete"](url, axiosConfig)];
                    case 10:
                        axiosResponse = _b.sent();
                        return [3 /*break*/, 12];
                    case 11: return [3 /*break*/, 12];
                    case 12:
                        this.closeLoading(options);
                        return [2 /*return*/, axiosResponse];
                    case 13:
                        ex_1 = _b.sent();
                        this.closeLoading(options);
                        throw ex_1;
                    case 14: return [2 /*return*/];
                }
            });
        });
    };
    NetworkManagerImpl.prototype.getQjson = function (_a) {
        var url = _a.url, urlParams = _a.urlParams, headers = _a.headers;
        return this.axiosCommon("get", this.getUrl(url, urlParams, true), undefined, this.getConfiguration(undefined, headers, undefined, undefined), undefined);
    };
    NetworkManagerImpl.prototype.get = function (_a) {
        var url = _a.url, urlParams = _a.urlParams, headers = _a.headers, config = _a.config, options = _a.options;
        return this.axiosCommon("get", this.getUrl(url, urlParams), undefined, this.getConfiguration(config, headers, options === null || options === void 0 ? void 0 : options.withCredentials, options === null || options === void 0 ? void 0 : options.timeout), options);
    };
    NetworkManagerImpl.prototype.post = function (_a) {
        var url = _a.url, urlParams = _a.urlParams, body = _a.body, headers = _a.headers, config = _a.config, options = _a.options;
        return this.axiosCommon("post", this.getUrl(url, urlParams), body, this.getConfiguration(config, headers, options === null || options === void 0 ? void 0 : options.withCredentials, options === null || options === void 0 ? void 0 : options.timeout), options);
    };
    NetworkManagerImpl.prototype.postHeader = function (_a) {
        var url = _a.url, urlParams = _a.urlParams, body = _a.body, headers = _a.headers, config = _a.config;
        return this.axiosCommon("post", this.getUrl(url, urlParams), body, { headers: headers }, undefined);
    };
    NetworkManagerImpl.prototype.patch = function (_a) {
        var url = _a.url, urlParams = _a.urlParams, body = _a.body, headers = _a.headers, options = _a.options;
        return this.axiosCommon("patch", this.getUrl(url, urlParams), body, this.getConfiguration(undefined, headers, options === null || options === void 0 ? void 0 : options.withCredentials, options === null || options === void 0 ? void 0 : options.timeout), options);
    };
    NetworkManagerImpl.prototype.multipart = function (_a) {
        var url = _a.url, urlParams = _a.urlParams, body = _a.body, headers = _a.headers, options = _a.options;
        var formData = new FormData();
        if (body && this.typeHelper.isObject(body)) {
            Object.keys(body).map(function (item) {
                formData.append(item, body[item]);
            });
        }
        else {
            formData.append("data", body);
        }
        var multiFormHeader = { 'Content-Type': 'multipart/form-data' };
        headers = __assign(__assign({}, headers), multiFormHeader);
        var axiosConfig = this.getConfiguration(undefined, headers, options === null || options === void 0 ? void 0 : options.withCredentials, options === null || options === void 0 ? void 0 : options.timeout);
        return this.axiosCommon("post", this.getUrl(url, urlParams), formData, axiosConfig, options);
    };
    NetworkManagerImpl.prototype.put = function (_a) {
        var url = _a.url, urlParams = _a.urlParams, body = _a.body, headers = _a.headers, options = _a.options;
        return this.axiosCommon("put", this.getUrl(url, urlParams), body, this.getConfiguration(undefined, headers, options === null || options === void 0 ? void 0 : options.withCredentials, options === null || options === void 0 ? void 0 : options.timeout), options);
    };
    NetworkManagerImpl.prototype.delete = function (_a) {
        var url = _a.url, urlParams = _a.urlParams, headers = _a.headers, body = _a.body, options = _a.options;
        var axiosConfig = this.getConfiguration(undefined, headers, options === null || options === void 0 ? void 0 : options.withCredentials, options === null || options === void 0 ? void 0 : options.timeout);
        if (axiosConfig) {
            axiosConfig.data = body;
        }
        return this.axiosCommon("delete", this.getUrl(url, urlParams), undefined, axiosConfig, options);
    };
    return NetworkManagerImpl;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NetworkManagerImpl);


/***/ }),

/***/ "./src/implementation/PlatformManagerImp.ts":
/*!**************************************************!*\
  !*** ./src/implementation/PlatformManagerImp.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PlatformManagerImp": () => (/* binding */ PlatformManagerImp)
/* harmony export */ });
var PlatformManagerImp = /** @class */ (function () {
    function PlatformManagerImp(servicesWrapper) {
        this.contextName = "context";
        this.servicesWrapper = servicesWrapper;
    }
    PlatformManagerImp.prototype.getDeviceId = function () {
        var _a, _b;
        return (_b = (_a = this.servicesWrapper.services).getDeviceIdCb) === null || _b === void 0 ? void 0 : _b.call(_a);
    };
    return PlatformManagerImp;
}());



/***/ }),

/***/ "./src/implementation/ProcessManager.ts":
/*!**********************************************!*\
  !*** ./src/implementation/ProcessManager.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProcessManager": () => (/* binding */ ProcessManager)
/* harmony export */ });
var ProcessManager = /** @class */ (function () {
    function ProcessManager(_a) {
        var contextName = _a.contextName, config = _a.config;
        this.getMetadata = undefined;
        this.setMetadata = undefined;
        this.changeProcessMetadata = undefined;
        this.contextName = contextName;
        if (config) {
            this.createFunctions(config);
        }
    }
    ProcessManager.prototype.createFunctions = function (config) {
        var _a, _b, _c;
        if ((_a = config.processManager) === null || _a === void 0 ? void 0 : _a.getMetadata) {
            this.getMetadata = function () {
                return config.processManager.getMetadata();
            };
        }
        if ((_b = config.processManager) === null || _b === void 0 ? void 0 : _b.setMetadata) {
            this.setMetadata = function (_a) {
                var Metadata = _a.Metadata;
                return config.processManager.setMetadata({ Metadata: Metadata });
            };
        }
        if ((_c = config.processManager) === null || _c === void 0 ? void 0 : _c.changeProcessMetadata) {
            this.changeProcessMetadata = function (_a) {
                var _b = _a.key, key = _b === void 0 ? '' : _b, onSuccessFunc = _a.onSuccessFunc;
                return config.processManager.changeProcessMetadata({ key: key, onSuccessFunc: onSuccessFunc });
            };
        }
    };
    return ProcessManager;
}());



/***/ }),

/***/ "./src/implementation/QJsonRetrieverImpl.ts":
/*!**************************************************!*\
  !*** ./src/implementation/QJsonRetrieverImpl.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/IPromiseData */ "../../common/shrimp/interfaces/IPromiseData.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

var QJsonRetrieverImpl = /** @class */ (function () {
    function QJsonRetrieverImpl(_a) {
        var contextName = _a.contextName, network = _a.network, settingsWrapper = _a.settingsWrapper;
        this.contextName = contextName;
        this.network = network;
        this.settingsWrapper = settingsWrapper;
    }
    Object.defineProperty(QJsonRetrieverImpl.prototype, "qjsonDirectPath", {
        get: function () {
            return this.settingsWrapper.settings.qjsonDirectPath === false ? false : true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QJsonRetrieverImpl.prototype, "qjsonUrlPrefix", {
        get: function () {
            return this.settingsWrapper.settings.qjsonURLPrefix;
        },
        enumerable: false,
        configurable: true
    });
    QJsonRetrieverImpl.prototype.arrangeQJsonPath = function (qjsonPath) {
        if (this.qjsonDirectPath) {
            return qjsonPath;
        }
        var path = qjsonPath; // sample static/qjsons/login
        if (path.startsWith("static/") || path.startsWith("microui/")) { // for QUI pages 
            return path;
        }
        var firstSlash = path.indexOf("/"); // for old microUI pages go(modul/qjson) -> go("customer/create") --> microui/customer/qjson/create
        if (firstSlash >= 0) {
            var moduleName = path.substring(0, firstSlash);
            var qJsonName = path.substring(firstSlash + 1);
            path = "microui/" + moduleName + "/qjson/" + qJsonName;
        }
        return path;
    };
    QJsonRetrieverImpl.prototype.SetExternalQJsonRetriever = function (externalQJsonRetriever) {
        this.externalQJsonRetriever = externalQJsonRetriever;
    };
    QJsonRetrieverImpl.prototype.willExternalHandle = function (externalRetriever, qjsonPath) {
        if (!externalRetriever.qjsonHandling) {
            return true;
        }
        var qjsonHandlingArr = Array.isArray(externalRetriever.qjsonHandling) ? externalRetriever.qjsonHandling : [externalRetriever.qjsonHandling];
        for (var i = 0; i < qjsonHandlingArr.length; i++) {
            var item = qjsonHandlingArr[i];
            if (item.type == "prefix" && qjsonPath.startsWith(item.value)) {
                return true;
            }
            if (item.type == "contains" && qjsonPath.indexOf(item.value) != -1) {
                return true;
            }
        }
        return false;
    };
    QJsonRetrieverImpl.prototype.retrieveQJsonAsync = function (qjsonPath, success, fail) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var externalRetriever, prom_1, url, qjsonURLAddresses, foundedKey, started, prefix, retVal;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.network.checkPlateauIAM(qjsonPath)];
                    case 1:
                        _b.sent();
                        externalRetriever = this.externalQJsonRetriever;
                        if (externalRetriever && this.willExternalHandle(externalRetriever, qjsonPath)) {
                            prom_1 = (0,_common_shrimp_interfaces_IPromiseData__WEBPACK_IMPORTED_MODULE_0__.CreatePromiseData)(10000);
                            externalRetriever.getQjson(qjsonPath).then(function (qjson) {
                                if (qjson) {
                                    success(qjson);
                                    prom_1.resolver({ data: qjson, status: 200, statusText: "OK." });
                                }
                            }).catch(function (error) {
                                fail(error);
                                prom_1.reject(error);
                            });
                            return [2 /*return*/, prom_1.promise];
                        }
                        if ((_a = this.qjsonUrlPrefix) === null || _a === void 0 ? void 0 : _a.startsWith('{')) {
                            qjsonURLAddresses = JSON.parse(this.qjsonUrlPrefix);
                            qjsonPath.startsWith('/') && delete qjsonURLAddresses['/'];
                            foundedKey = Object.keys(qjsonURLAddresses).find(function (key) { return qjsonPath.includes(key) && qjsonPath.startsWith('/'); });
                            if (foundedKey && qjsonURLAddresses[foundedKey]) {
                                url = qjsonURLAddresses[foundedKey] + "/" + qjsonPath.replace(foundedKey, '');
                            }
                            else {
                                url = qjsonURLAddresses['/'] + "/" + qjsonPath;
                            }
                        }
                        else {
                            started = qjsonPath.startsWith("/");
                            qjsonPath = this.arrangeQJsonPath(started ? qjsonPath.substring(1) : qjsonPath);
                            prefix = this.qjsonUrlPrefix || "";
                            url = (prefix || started ? prefix + "/" : "") + qjsonPath;
                        }
                        retVal = this.network.getQjson({ url: url });
                        retVal.then(function (response) { return success(response.data); }).catch(function (error) { return fail(error); });
                        return [2 /*return*/, retVal];
                }
            });
        });
    };
    return QJsonRetrieverImpl;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (QJsonRetrieverImpl);


/***/ }),

/***/ "./src/implementation/RegionalManagerImpl.ts":
/*!***************************************************!*\
  !*** ./src/implementation/RegionalManagerImpl.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RegionalManagerImpl": () => (/* binding */ RegionalManagerImpl)
/* harmony export */ });
/* harmony import */ var devextreme_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/localization */ "../../node_modules/devextreme/localization.js");
/* harmony import */ var devextreme_localization_messages_tr_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/localization/messages/tr.json */ "../../node_modules/devextreme/localization/messages/tr.json");


var RegionalManagerImpl = /** @class */ (function () {
    function RegionalManagerImpl(settingsWrapper) {
        this.contextName = RegionalManagerImpl.ContextName;
        this.currentRegion = "tr";
        this.settingsWrapper = settingsWrapper;
    }
    RegionalManagerImpl.prototype.getRegionList = function () {
        var _a;
        var result = Array();
        var i;
        // for (i = 0; i < 2; i++) {
        for (i = 0; i < (((_a = this.settingsWrapper.settings.regionalDefinition) === null || _a === void 0 ? void 0 : _a.length) || 0); i++) {
            result.push(this.settingsWrapper.settings.regionalDefinition[i].region);
        }
        // for(this.settings!.regionalDefinition?.region)
        // result = this.settings?.regionalDefinition?.region;
        return result;
    };
    RegionalManagerImpl.prototype.setRegion = function (regionName) {
        this.currentRegion = regionName;
    };
    RegionalManagerImpl.prototype.getRegion = function () {
        return this.currentRegion;
    };
    RegionalManagerImpl.prototype.getFormattingDefinitionByCurrentRegion = function () {
        var _this = this;
        var _a;
        //    return this.settings?.regionalDefinition!.region[this.currentRegion];
        var result = (_a = this.settingsWrapper.settings.regionalDefinition) === null || _a === void 0 ? void 0 : _a.filter(function (obj) {
            return obj.region === _this.currentRegion;
        });
        if (result != undefined) {
            return result[0].FormattingDefinition;
        }
        else {
            return undefined;
        }
    };
    RegionalManagerImpl.prototype.onLRChange = function (language) {
        var _a;
        language = language || "tr";
        var regionalType = (_a = this.settingsWrapper.settings.regionalDefinition) === null || _a === void 0 ? void 0 : _a.find(function (region) { return region.region == language; });
        if (regionalType && regionalType.devExLocaleCDNAddress) {
            // trMessages should be changed with the dynamic load messages.
            // See https://js.devexpress.com/Documentation/Guide/Common/Localization/ 
            if (language == "tr") {
                devextreme_localization_messages_tr_json__WEBPACK_IMPORTED_MODULE_1__.tr["dxDataGrid-headerFilterEmptyValue"] = "(Boş)";
            }
            (0,devextreme_localization__WEBPACK_IMPORTED_MODULE_0__.loadMessages)(devextreme_localization_messages_tr_json__WEBPACK_IMPORTED_MODULE_1__);
            (0,devextreme_localization__WEBPACK_IMPORTED_MODULE_0__.locale)(language);
        }
        else {
            (0,devextreme_localization__WEBPACK_IMPORTED_MODULE_0__.locale)(language);
        }
    };
    RegionalManagerImpl.ContextName = "RegionalManagerImpl";
    return RegionalManagerImpl;
}());



/***/ }),

/***/ "./src/implementation/StoreManager.ts":
/*!********************************************!*\
  !*** ./src/implementation/StoreManager.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StoreManager": () => (/* binding */ StoreManager)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/hook */ "../../common/shrimp/helpers/hook.ts");

var StoreManager = /** @class */ (function () {
    function StoreManager(_a) {
        var contextName = _a.contextName;
        this.contextName = contextName;
        this.dataStore = {};
        this.hooks = {};
    }
    StoreManager.prototype.set = function (name, value) {
        var _a;
        var old = this.dataStore[name];
        this.dataStore[name] = value;
        (_a = this.hooks[name]) === null || _a === void 0 ? void 0 : _a.triggerer(old, value);
    };
    StoreManager.prototype.get = function (name) {
        return this.dataStore[name];
    };
    StoreManager.prototype.delete = function (name) {
        // todo
    };
    StoreManager.prototype.subscribe = function (name, cb) {
        var currentHook = this.hooks[name] = this.hooks[name] || new _common_shrimp_helpers_hook__WEBPACK_IMPORTED_MODULE_0__.Hook("StoreManager_" + name);
        currentHook.subscribe(cb);
    };
    StoreManager.prototype.unsubscribe = function (name, cb) {
        var currentHook = this.hooks[name];
        if (!currentHook) {
            return;
        }
        currentHook.unsubscribe(cb);
    };
    StoreManager.prototype.setSessionStorage = function (_a) {
        var key = _a.key, value = _a.value;
        window.sessionStorage.setItem(key, value);
    };
    StoreManager.prototype.clearSessionStorage = function () {
        window.sessionStorage.clear();
    };
    StoreManager.prototype.getItemFromSessionStorage = function (_a) {
        var key = _a.key;
        return window.sessionStorage.getItem(key);
    };
    StoreManager.prototype.removeItemFromSessionStorage = function (_a) {
        var key = _a.key;
        window.sessionStorage.removeItem(key);
    };
    StoreManager.prototype.setLocalStorage = function (_a) {
        var key = _a.key, value = _a.value;
        window.localStorage.setItem(key, value);
    };
    StoreManager.prototype.clearLocalStorage = function () {
        window.localStorage.clear();
    };
    StoreManager.prototype.getItemFromLocalStorage = function (_a) {
        var key = _a.key;
        return window.localStorage.getItem(key);
    };
    StoreManager.prototype.removeItemFromLocalStorage = function (_a) {
        var key = _a.key;
        window.localStorage.removeItem(key);
    };
    return StoreManager;
}());



/***/ }),

/***/ "./src/implementation/UXManagerImpl.ts":
/*!*********************************************!*\
  !*** ./src/implementation/UXManagerImpl.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UXManagerImpl": () => (/* binding */ UXManagerImpl)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_cssHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/cssHelper */ "../../common/shrimp/helpers/cssHelper.ts");
/* harmony import */ var _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/quick/IWebSDK */ "../../common/shrimp/interfaces/quick/IWebSDK.ts");
/* harmony import */ var _GlobalMethodsImpl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GlobalMethodsImpl */ "./src/implementation/GlobalMethodsImpl.ts");




var UXManagerImpl = /** @class */ (function () {
    function UXManagerImpl(settingsWrapper, servicesWrapper) {
        this.contextName = "context";
        this.servicesWrapper = servicesWrapper;
        this.settingsWrapper = settingsWrapper;
        this.uxHelper = new uxHelper(this.settingsWrapper);
    }
    UXManagerImpl.prototype.getThemeList = function () {
        if (this.servicesWrapper.services.getThemeListCb) {
            return this.servicesWrapper.services.getThemeListCb();
        }
        return this.uxHelper.getThemeList();
    };
    UXManagerImpl.prototype.setTheme = function (themeName) {
        if (this.servicesWrapper.services.setThemeCb) {
            return this.servicesWrapper.services.setThemeCb(themeName);
        }
        this.uxHelper.setTheme(themeName);
    };
    UXManagerImpl.prototype.addTheme = function (themeName) {
        if (this.servicesWrapper.services.addThemeCb) {
            return this.servicesWrapper.services.addThemeCb(themeName);
        }
        this.uxHelper.addTheme(themeName);
    };
    UXManagerImpl.prototype.removeTheme = function (themeName) {
        if (this.servicesWrapper.services.removeThemeCb) {
            return this.servicesWrapper.services.removeThemeCb(themeName);
        }
        this.uxHelper.removeTheme(themeName);
    };
    UXManagerImpl.prototype.setDarkTheme = function (compCollection, isDark) {
        var _a, _b;
        var vuetifyTheme = (_b = (_a = compCollection.component) === null || _a === void 0 ? void 0 : _a["$vuetify"]) === null || _b === void 0 ? void 0 : _b.theme;
        if (!vuetifyTheme || compCollection.compGroupType != _common_shrimp_interfaces_quick_IWebSDK__WEBPACK_IMPORTED_MODULE_2__.CompGroupType.Vuetify || vuetifyTheme.dark === isDark) {
            return;
        }
        compCollection.component["$vuetify"].theme.dark = isDark;
        //this.removeTheme("devextreme");
        this.setTheme("dark");
        // this.removeTheme("goldenlayout");
        // this.addTheme("goldenlayout-dark");
    };
    return UXManagerImpl;
}());

var uxHelper = /** @class */ (function () {
    function uxHelper(settingsWrapper) {
        this.settingsWrapper = settingsWrapper;
    }
    uxHelper.prototype.findThemeFromSettings = function (themeName) {
        var cssPath = this.settingsWrapper.settings.cssPath;
        if (!cssPath) {
            return;
        }
        //this.cssList?.forEach(document.head.removeChild.bind(document.head));
        var targetCssList = cssPath instanceof Array ? cssPath : cssPath[themeName];
        if (!targetCssList) {
            var minLogType = _GlobalMethodsImpl__WEBPACK_IMPORTED_MODULE_3__.GlobalMethodsImpl.settingsWrapper.settings.minEngineLogLevel ? _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType[_GlobalMethodsImpl__WEBPACK_IMPORTED_MODULE_3__.GlobalMethodsImpl.settingsWrapper.settings.minEngineLogLevel] : undefined;
            _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.Log({ logMessage: "Theme " + themeName + " not defined. Check settings.yaml.", logType: _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_1__.LogType.Warning, minEngineLogLevel: minLogType });
            return;
        }
        return targetCssList;
    };
    uxHelper.prototype.addTheme = function (themeName) {
        var cssList = this.findThemeFromSettings(themeName);
        if (cssList) {
            this.cssList = this.cssList || [];
            this.cssList.push(_common_shrimp_helpers_cssHelper__WEBPACK_IMPORTED_MODULE_0__.CssHelper.IncludeCSS(cssList[0]));
        }
    };
    uxHelper.prototype.removeTheme = function (themeName) {
        var _a, _b, _c;
        var cssList = this.findThemeFromSettings(themeName);
        var removeChild = (_a = this.cssList) === null || _a === void 0 ? void 0 : _a.find(function (theme) { return theme.href == (cssList === null || cssList === void 0 ? void 0 : cssList[0]); });
        if (cssList && removeChild) {
            (_b = this.cssList) === null || _b === void 0 ? void 0 : _b.splice((_c = this.cssList) === null || _c === void 0 ? void 0 : _c.indexOf(removeChild), 1);
            document.head.removeChild(removeChild);
        }
    };
    uxHelper.prototype.setTheme = function (themeName) {
        var _a;
        var cssList = this.findThemeFromSettings(themeName);
        if (!cssList)
            return;
        (_a = this.cssList) === null || _a === void 0 ? void 0 : _a.forEach(document.head.removeChild.bind(document.head));
        this.cssList = cssList.map(_common_shrimp_helpers_cssHelper__WEBPACK_IMPORTED_MODULE_0__.CssHelper.IncludeCSS);
    };
    uxHelper.prototype.getThemeList = function () {
        var cssPath = this.settingsWrapper.settings.cssPath;
        if (!cssPath || cssPath instanceof Array) {
            return [];
        }
        var themeList = [];
        Object.keys(cssPath).forEach(function (themeName) {
            themeList.push(themeName);
        });
        return themeList;
    };
    return uxHelper;
}());


/***/ }),

/***/ "./src/implementation/operators/ComponentDOMAttrsHelper.ts":
/*!*****************************************************************!*\
  !*** ./src/implementation/operators/ComponentDOMAttrsHelper.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentDOMAttrsHelper": () => (/* binding */ ComponentDOMAttrsHelper)
/* harmony export */ });
var ComponentDOMAttrsHelper = /** @class */ (function () {
    function ComponentDOMAttrsHelper() {
    }
    /**
     * Create HTML attributes as property on component instance.
     * Listen changes on these properties to set attributes on the real field and mount the component again.
     * @param compCollection Component collection that attributes will be set on its instance
     */
    ComponentDOMAttrsHelper.createDOMAttrsOnCompInstance = function (compCollection) {
        var _this = this;
        var compAttrs = ComponentDOMAttrsHelper.componentDOMAttributes;
        if (compAttrs[compCollection.compType]) {
            compCollection.WatchCreatedFields(function (field) {
                if (field.instance) {
                    Object.keys(compAttrs[compCollection.compType]).forEach(function (attribute) {
                        var _a, _b;
                        var attrValue;
                        if (!Object.getOwnPropertyDescriptor(field.instance, attribute)) {
                            switch (attribute) {
                                case 'avoidClearableTabIndex':
                                    if ((_b = (_a = compCollection.component) === null || _a === void 0 ? void 0 : _a.$attrs) === null || _b === void 0 ? void 0 : _b.avoidClearableTabIndex) {
                                        _this.AvoidClearableTabIndex(compCollection);
                                    }
                                    break;
                                case 'src':
                                    attrValue = field.instance['src'];
                                    Object.defineProperty(field.instance, attribute, {
                                        get: function () { return attrValue; },
                                        set: function (value) {
                                            var _a;
                                            attrValue = value.includes('data:image/tiff') ? ComponentDOMAttrsHelper.convertTiffToImage(value) : value;
                                            if (field.instance.$props) {
                                                field.instance.$props[attribute] = attrValue;
                                                field.instance['currentSrc'] = attrValue;
                                            }
                                            (_a = field.instance) === null || _a === void 0 ? void 0 : _a.$mount();
                                        }
                                    });
                                    break;
                                default:
                                    Object.defineProperty(field.instance, attribute, {
                                        get: function () { return attrValue; },
                                        set: function (value) {
                                            var _a;
                                            var _b;
                                            attrValue = value;
                                            field.instance.attrs$ = field.instance.attrs$ || {};
                                            field.instance.$attrs = field.instance.attrs$ || (_a = {}, _a[attribute] = value, _a);
                                            field.instance.attrs$[attribute] = value;
                                            (_b = field.instance) === null || _b === void 0 ? void 0 : _b.$mount();
                                        }
                                    });
                                    break;
                            }
                        }
                    });
                }
            });
        }
    };
    ComponentDOMAttrsHelper.convertTiffToImage = function (attribute) {
        var UTIF = __webpack_require__(/*! utif */ "../../node_modules/utif/UTIF.js");
        var base64ToArrayBuffer = function (base64) {
            var binary_string = window.atob(base64);
            var len = binary_string.length;
            var bytes = new Uint8Array(len);
            for (var i = 0; i < len; i++) {
                bytes[i] = binary_string.charCodeAt(i);
            }
            return bytes;
        };
        var data = attribute.replace(/^data:image\/\w+;base64,/, "");
        var buffer_data = base64ToArrayBuffer(data);
        var ifds = UTIF.decode(buffer_data);
        UTIF.decodeImage(buffer_data, ifds[0]);
        var rgba = UTIF.toRGBA8(ifds[0]);
        var widht = ifds[0].width;
        var height = ifds[0].height;
        var canvas = document.createElement('canvas');
        canvas.width = widht;
        canvas.height = height;
        var ctx = canvas.getContext("2d");
        var imgData = new ImageData(new Uint8ClampedArray(rgba.buffer), widht, height);
        ctx === null || ctx === void 0 ? void 0 : ctx.putImageData(imgData, 0, 0);
        return canvas.toDataURL();
    };
    ComponentDOMAttrsHelper.AvoidClearableTabIndex = function (compCollection) {
        var _a, _b;
        var textFieldBtnDom = (_b = (_a = compCollection.component) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.querySelector('button');
        if ((textFieldBtnDom === null || textFieldBtnDom === void 0 ? void 0 : textFieldBtnDom.getAttribute('aria-label')) == 'clear icon') {
            textFieldBtnDom.setAttribute('tabindex', '-1');
        }
    };
    /**
     * List of components that needs to set on the DOM
     */
    ComponentDOMAttrsHelper.componentDOMAttributes = {
        VCombobox: {
            step: true,
            preventPaste: true,
            tabindex: true,
            avoidClearableTabIndex: true
        },
        VTextField: {
            maxlength: true,
            tabindex: true,
            step: true,
            preventPaste: true,
            avoidClearableTabIndex: true
        },
        VSelect: {
            tabindex: true
        },
        VBtn: {
            tabindex: true
        },
        VAutocomplete: {
            maxlength: true,
            tabindex: true,
            avoidClearableTabIndex: true
        },
        VImg: {
            src: true
        },
        QImgZoom: {
            src: true
        }
    };
    return ComponentDOMAttrsHelper;
}());



/***/ }),

/***/ "./src/implementation/operators/ComponentOperator.ts":
/*!***********************************************************!*\
  !*** ./src/implementation/operators/ComponentOperator.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentOperator": () => (/* binding */ ComponentOperator)
/* harmony export */ });
var ComponentOperator = /** @class */ (function () {
    function ComponentOperator() {
        this.compListOfText = ["VIcon"];
    }
    ComponentOperator.prototype.setClassString = function (compColl, classString) {
        if (!compColl.domElement) {
            return;
        }
        compColl.domElement.className = classString;
    };
    ComponentOperator.prototype.getClassString = function (compColl) {
        var _a;
        if (!compColl.domElement) {
            return "";
        }
        return (_a = compColl.domElement) === null || _a === void 0 ? void 0 : _a.className;
    };
    ComponentOperator.prototype.setTextAndMount = function (compColl, text) {
        if (!compColl.component) {
            return;
        }
        ;
        compColl.component.$slots.default[0].text = text;
        compColl.component.$mount();
    };
    ComponentOperator.prototype.getTextString = function (compColl) {
        if (!compColl.component) {
            return;
        }
        ;
        return compColl.component.$slots.default[0].text;
    };
    return ComponentOperator;
}());



/***/ }),

/***/ "./src/init/VueInitter.ts":
/*!********************************!*\
  !*** ./src/init/VueInitter.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VueInitter": () => (/* binding */ VueInitter)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ "../../node_modules/vue/dist/vue.runtime.esm.js");
/* harmony import */ var vuetify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vuetify */ "../../node_modules/vuetify/dist/vuetify.js");
/* harmony import */ var vuetify__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(vuetify__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _root_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./root.vue */ "./src/init/root.vue");



Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_vuetify_dist_vuetify_min_css"), __webpack_require__.e("data_image_png_base64_iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs_9AAAAGElEQVQYlWNgYGCQwoKxgqG-57c668")]).then(__webpack_require__.bind(__webpack_require__, /*! vuetify/dist/vuetify.min.css */ "../../node_modules/vuetify/dist/vuetify.min.css"));
var VueInitter = /** @class */ (function () {
    function VueInitter() {
    }
    VueInitter.postProcess = function (renderer) {
    };
    VueInitter.GenerateRootInstance = function (_a) {
        var mountPoint = _a.mountPoint;
        var rootComponent = _root_vue__WEBPACK_IMPORTED_MODULE_0__["default"];
        vue__WEBPACK_IMPORTED_MODULE_1__["default"].use((vuetify__WEBPACK_IMPORTED_MODULE_2___default()));
        vue__WEBPACK_IMPORTED_MODULE_1__["default"].config.silent = true;
        var instance = new vue__WEBPACK_IMPORTED_MODULE_1__["default"]({
            el: mountPoint,
            render: function (h) { return h(_root_vue__WEBPACK_IMPORTED_MODULE_0__["default"]); },
            vuetify: new (vuetify__WEBPACK_IMPORTED_MODULE_2___default())({
                theme: {
                    themes: {
                        light: {
                            primary: '#3f51b5',
                            secondary: '#b0bec5',
                            accent: '#8c9eff',
                            error: '#b81c1c',
                        },
                    }
                },
                icons: {
                    iconfont: 'mdi', // default - only for display purposes
                },
            }),
            components: { rootComponent: rootComponent }
        });
        return instance;
    };
    return VueInitter;
}());



/***/ }),

/***/ "./src/managers/AppLayoutManager.ts":
/*!******************************************!*\
  !*** ./src/managers/AppLayoutManager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppLayoutManager": () => (/* binding */ AppLayoutManager)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_thresholdedTrigger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/helpers/thresholdedTrigger */ "../../common/shrimp/helpers/thresholdedTrigger.ts");

var latestLayout;
var timer;
window.addEventListener("resize", function (event) {
    if (!latestLayout) {
        return;
    }
    var cb = function () { return AppLayoutManager.ArrangeAppLayout(latestLayout.vapp, latestLayout.renderer, latestLayout.additionals); };
    timer = (0,_common_shrimp_helpers_thresholdedTrigger__WEBPACK_IMPORTED_MODULE_0__.thresholdedTrigger)(timer, cb, 400);
});
var AppLayoutManager = /** @class */ (function () {
    function AppLayoutManager() {
    }
    AppLayoutManager.ArrangeAppLayout = function (vapp, renderer, additionals) {
        latestLayout = { vapp: vapp, renderer: renderer, additionals: additionals };
        if (additionals === null || additionals === void 0 ? void 0 : additionals.appComputed) {
            vapp.style.paddingTop = additionals.appComputed.paddingTop;
            vapp.style.paddingBottom = additionals.appComputed.paddingBottom;
        }
        else {
            var compDict = renderer.GetComponentCollection();
            if (!compDict) {
                return;
            }
            var styles_1 = {};
            var fixedHandler = function (compDom) {
                var _a;
                var computed = getComputedStyle(compDom);
                if (computed.position == "fixed") {
                    var targetStyle = ((_a = computed.bottom) === null || _a === void 0 ? void 0 : _a.startsWith("0")) ? "paddingBottom" : "paddingTop";
                    styles_1[targetStyle] = computed.height;
                }
            };
            var compItems_1 = {
                VAppBar: fixedHandler,
                VFooter: fixedHandler,
            };
            var traverseCompDict_1 = function (compDicts) {
                var jrCompDicts = [];
                compDicts.forEach(function (compDict) { return Object.keys(compDict).forEach(function (compId) {
                    var _a;
                    var compColl = compDict[compId];
                    (_a = compItems_1[compColl.compType]) === null || _a === void 0 ? void 0 : _a.call(compItems_1, compColl.domElement);
                    var doryJr = compColl.GetDoryJr();
                    if (!doryJr) {
                        return;
                    }
                    jrCompDicts.push(doryJr.GetComponentCollection());
                }); });
                if (!jrCompDicts.length) {
                    return;
                }
                traverseCompDict_1(jrCompDicts);
            };
            traverseCompDict_1([compDict]);
            vapp.style.paddingTop = styles_1.paddingTop || "";
            vapp.style.paddingBottom = styles_1.paddingBottom || "";
            var existingAdditionals = renderer.DoryInst.GetAdditionals({ targetHistoryItem: "last" });
            if (!existingAdditionals) {
                existingAdditionals = {};
                renderer.DoryInst.SetAdditionals({ additionals: existingAdditionals });
            }
            existingAdditionals.appComputed = { paddingTop: vapp.style.paddingTop, paddingBottom: vapp.style.paddingBottom };
        }
    };
    return AppLayoutManager;
}());



/***/ }),

/***/ "./src/managers/DataManager.ts":
/*!*************************************!*\
  !*** ./src/managers/DataManager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataManager": () => (/* binding */ DataManager)
/* harmony export */ });
var DataManager = /** @class */ (function () {
    function DataManager() {
        this.contextName = DataManager.ContextName;
    }
    DataManager.ContextName = "DataManager";
    return DataManager;
}());



/***/ }),

/***/ "./src/managers/RendererManager.ts":
/*!*****************************************!*\
  !*** ./src/managers/RendererManager.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RendererManager": () => (/* binding */ RendererManager)
/* harmony export */ });
/* harmony import */ var _common_shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/quick/INavigationDemand */ "../../common/shrimp/interfaces/quick/INavigationDemand.ts");
/* harmony import */ var _implementation_ComponentInstanceTrackerImpl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../implementation/ComponentInstanceTrackerImpl */ "./src/implementation/ComponentInstanceTrackerImpl.ts");
/* harmony import */ var _implementation_ComponentManagerImpl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../implementation/ComponentManagerImpl */ "./src/implementation/ComponentManagerImpl.ts");
/* harmony import */ var _implementation_CookieManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../implementation/CookieManager */ "./src/implementation/CookieManager.ts");
/* harmony import */ var _implementation_CryptographyManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../implementation/CryptographyManager */ "./src/implementation/CryptographyManager.ts");
/* harmony import */ var _implementation_GlobalMethodsImpl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../implementation/GlobalMethodsImpl */ "./src/implementation/GlobalMethodsImpl.ts");
/* harmony import */ var _implementation_LanguageExtensions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../implementation/LanguageExtensions */ "./src/implementation/LanguageExtensions.ts");
/* harmony import */ var _implementation_NavigationManagerImpl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../implementation/NavigationManagerImpl */ "./src/implementation/NavigationManagerImpl.ts");
/* harmony import */ var _implementation_ProcessManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../implementation/ProcessManager */ "./src/implementation/ProcessManager.ts");
/* harmony import */ var _init_VueInitter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../init/VueInitter */ "./src/init/VueInitter.ts");
/* harmony import */ var _AppLayoutManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./AppLayoutManager */ "./src/managers/AppLayoutManager.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};











var RendererManager = /** @class */ (function () {
    function RendererManager(storeManager, settingsWrapper, servicesWrapper, websdkContext) {
        this.renderers = new WeakMap();
        this.servicesWrapper = servicesWrapper;
        this.settingsWrapper = settingsWrapper;
        this.websdkContext = websdkContext;
        this.storeManager = storeManager;
    }
    RendererManager.prototype.createRenderer = function (_a) {
        var _this = this;
        var mountPoint = _a.mountPoint, qshell = _a.qshell, config = _a.config, windowHistoryManager = _a.windowHistoryManager;
        var doryInstanceName = RendererManager.doryPrefix + (RendererManager.doryCounter++).toString(); //post increment -> next one will be 1
        var mountParent = mountPoint.parentElement;
        var rootInst = _init_VueInitter__WEBPACK_IMPORTED_MODULE_9__.VueInitter.GenerateRootInstance({ mountPoint: mountPoint });
        var shellContainerTarget = mountParent.getElementsByClassName("shellContainerTarget")[0];
        var errorContainerTarget = mountParent.getElementsByClassName("errorContainerTarget")[0];
        var websdkContext = this.websdkContext, servicesWrapper = this.servicesWrapper;
        var componentManager = new _implementation_ComponentManagerImpl__WEBPACK_IMPORTED_MODULE_2__.ComponentManagerImpl('ComponentManager', rootInst);
        var componentInstanceTracker = new _implementation_ComponentInstanceTrackerImpl__WEBPACK_IMPORTED_MODULE_1__.ComponentInstanceTracker({ settingsWrapper: this.settingsWrapper, servicesWrapper: servicesWrapper, websdkContext: websdkContext });
        var langExtensions = websdkContext.GetItemSingle(_implementation_LanguageExtensions__WEBPACK_IMPORTED_MODULE_6__.LanguageExtensions.ContextName);
        this.globalMethods = new _implementation_GlobalMethodsImpl__WEBPACK_IMPORTED_MODULE_5__.GlobalMethodsImpl({ contextName: 'GlobalMethods', parentInstance: rootInst, config: config, errorContainerTarget: errorContainerTarget, settingsWrapper: this.settingsWrapper });
        var navigationManager = new _implementation_NavigationManagerImpl__WEBPACK_IMPORTED_MODULE_7__.NavigationManagerImpl({ contextName: 'NavigationManager', config: config, websdkContext: websdkContext });
        var cookieManager = new _implementation_CookieManager__WEBPACK_IMPORTED_MODULE_3__.CookieManager({ contextName: "CookieManager" });
        var processManager = new _implementation_ProcessManager__WEBPACK_IMPORTED_MODULE_8__.ProcessManager({ contextName: "ProcessManager", config: config });
        var cryptoManager = new _implementation_CryptographyManager__WEBPACK_IMPORTED_MODULE_4__.CryptographyManager({ contextName: "CryptographyManager" });
        var renderer = qshell.CreateRenderer({
            componentManager: componentManager,
            globalMethods: this.globalMethods,
            doryInstanceName: doryInstanceName,
            componentInstanceTracker: componentInstanceTracker,
            langExtensions: langExtensions,
            navigationManager: navigationManager,
            storeManager: this.storeManager,
            cookieManager: cookieManager,
            processManager: processManager,
            config: config,
            cryptoManager: cryptoManager
        });
        var url = new URL(window.location.href);
        var searchParams = url.searchParams;
        if (searchParams && searchParams.get("copyStore") === "true") {
            var storeClone = (window.opener && window.opener.doryRenderer).DoryInst.CloneStores();
            renderer.DoryInst.SetStoreKeys(storeClone);
        }
        var loadingRoot;
        this.storeManager.subscribe("loadingCounter", function (oldValue, newValue) { return __awaiter(_this, void 0, void 0, function () {
            var loadingQJson, loadingRootParent, childRenderer;
            var _a;
            return __generator(this, function (_b) {
                if (this.servicesWrapper.services.extensions.loadingCounter) {
                    ((_a = this.servicesWrapper.services) === null || _a === void 0 ? void 0 : _a.extensions).loadingCounter(oldValue, newValue);
                }
                else {
                    loadingQJson = renderer.settingsQJsons.GetLoadingQjson();
                    if (loadingQJson) {
                        if (!loadingRoot) {
                            loadingRoot = document.createElement("div");
                            loadingRootParent = document.createElement("div");
                            loadingRootParent.appendChild(loadingRoot);
                            document.body.appendChild(loadingRootParent);
                        }
                        if (newValue == 1) {
                            childRenderer = renderer.CreateChildRenderer("loading");
                            childRenderer.SetCallbackDisplay(function (domEls, pageId, pageName, navDir, override) {
                                if (self.storeManager.get("loadingCounter") > 0) { //TODO: temp fix for lazyload async render
                                    domEls.forEach(function (domEl) {
                                        loadingRoot.appendChild(domEl);
                                    });
                                }
                            });
                            childRenderer.Render({
                                qjson: loadingQJson,
                                props: {},
                                events: {},
                                compParentInst: null,
                                noHistory: true
                            });
                        }
                        else if (newValue <= 0) {
                            loadingRoot.innerHTML = "";
                        }
                    }
                }
                return [2 /*return*/];
            });
        }); });
        this.lastRenderer = renderer;
        this.windowHistoryManager = windowHistoryManager;
        if (this.globalMethods.setRenderer) {
            this.globalMethods.setRenderer(this.lastRenderer);
        }
        var self = this;
        renderer.PageCompletedHook.subscribe(function (options) {
            //arrange layout for normal page open, back is on displayCallBack
            _AppLayoutManager__WEBPACK_IMPORTED_MODULE_10__.AppLayoutManager.ArrangeAppLayout(mountParent.firstElementChild.firstElementChild, renderer, undefined);
        });
        renderer.SetDisplayCallBack(function (elements, pageId, pageName, navigationDirection, additionals) {
            var _a, _b;
            var firstChild;
            while (firstChild = shellContainerTarget.firstChild) {
                shellContainerTarget.removeChild(firstChild);
            }
            if (navigationDirection) {
                //arrange layout for back, normal page open is on ^^PageComplete^^
                _AppLayoutManager__WEBPACK_IMPORTED_MODULE_10__.AppLayoutManager.ArrangeAppLayout(mountParent.firstElementChild.firstElementChild, renderer, additionals);
            }
            //#region Code 1234: controldict component array özelliği eklendiğinde bu özellik kaldırılacak. 
            //Özellik eklendiğinde kaldırılacak kodlar Code 1234 diye aratarak bulunabilir.
            var nextSiblingList = [];
            Array.from(document.getElementsByClassName("v-tooltip__content"))
                .forEach(function (element) {
                element.classList.remove("menuable__content__active");
                element.style.display = "none";
                nextSiblingList.push(element);
                element.remove();
            });
            if (nextSiblingList && nextSiblingList.length > 0) {
                var newAdditionals = { nextSiblingList: nextSiblingList };
                var targetHistoryItem = navigationDirection == _common_shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.back ? "last" : "previous";
                renderer.DoryInst.SetAdditionals({ additionals: newAdditionals, targetHistoryItem: targetHistoryItem });
            }
            if (additionals) {
                (_a = additionals.nextSiblingList) === null || _a === void 0 ? void 0 : _a.forEach(function (element) {
                    var _a, _b;
                    shellContainerTarget.parentElement.parentElement.insertBefore(element, (_b = (_a = shellContainerTarget.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.nextSibling);
                });
            }
            //#endregion
            elements.forEach(function (element) { return shellContainerTarget.appendChild(element); });
            (_b = self.windowHistoryManager) === null || _b === void 0 ? void 0 : _b.pushState(pageId, pageName, navigationDirection);
        });
        renderer.SetPartialDisplayCallBack(function (elements, pageId, pageName, navigationDemand, override, doryJr, additionals) {
            var _a;
            //#region Code 1234: kaldrılacak
            var nextSiblingList = [];
            Array.from(document.getElementsByClassName("v-tooltip__content"))
                .forEach(function (element) {
                element.classList.remove("menuable__content__active");
                element.style.display = "none";
                nextSiblingList.push(element);
                element.remove();
            });
            if (nextSiblingList && nextSiblingList.length > 0) {
                var targetHistoryItem = navigationDemand == _common_shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_0__.INavigationDemandType.back ? "last" : "previous";
                doryJr === null || doryJr === void 0 ? void 0 : doryJr.SetAdditionals({ additionals: nextSiblingList, targetHistoryItem: targetHistoryItem });
            }
            if (additionals && additionals.length > 0) {
                additionals.forEach(function (element) {
                    var _a, _b;
                    shellContainerTarget.parentElement.parentElement.insertBefore(element, (_b = (_a = shellContainerTarget.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.nextSibling);
                });
            }
            //#endregion
            (_a = self.windowHistoryManager) === null || _a === void 0 ? void 0 : _a.pushState(pageId, pageName, navigationDemand, override);
        });
        this.renderers.set(renderer, { rootInst: rootInst, domContainer: shellContainerTarget });
        window.doryRenderer = renderer;
        _init_VueInitter__WEBPACK_IMPORTED_MODULE_9__.VueInitter.postProcess(renderer);
        return renderer;
    };
    RendererManager.prototype.getLastRenderer = function () {
        return this.lastRenderer;
    };
    RendererManager.prototype.getDomContainer = function (renderer) {
        var rendererData = this.renderers.get(renderer);
        return rendererData.domContainer;
    };
    RendererManager.prototype.getParentInstance = function (renderer) {
        var rendererData = this.renderers.get(renderer);
        return rendererData.rootInst;
    };
    RendererManager.prototype.clear = function (renderer) {
        renderer.Clear();
        var rendererData = this.renderers.get(renderer);
        rendererData.rootInst.$destroy();
    };
    RendererManager.prototype.setEnvironment = function (env) {
        this.globalMethods.setEnvironment(env);
    };
    RendererManager.prototype.setYamlLogType = function (logType) {
        this.globalMethods.setYamlLogType(logType);
    };
    RendererManager.doryPrefix = "dory_";
    RendererManager.doryCounter = 0; // dory instance mechanism runs statically
    return RendererManager;
}());



/***/ }),

/***/ "./src/managers/WindowHistoryManager.ts":
/*!**********************************************!*\
  !*** ./src/managers/WindowHistoryManager.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WindowHistoryManager": () => (/* binding */ WindowHistoryManager)
/* harmony export */ });
/* harmony import */ var _build_legacy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../build/legacy */ "./build/legacy.ts");
/* harmony import */ var _common_shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/shrimp/interfaces/quick/INavigationDemand */ "../../common/shrimp/interfaces/quick/INavigationDemand.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};


var WindowHistoryManager = /** @class */ (function () {
    function WindowHistoryManager(contexName, settingsWrapper, rendererManager, servicesWrapper) {
        this.contextName = contexName;
        this.settingsWrapper = settingsWrapper;
        this.servicesWrapper = servicesWrapper;
        this.rendererManager = rendererManager;
        this.Init();
    }
    WindowHistoryManager.prototype.pushState = function (pageId, pageName, navigationDirection, override) {
        var _a, _b, _c;
        return __awaiter(this, void 0, void 0, function () {
            var protocolAndPath, state, queryString, url;
            return __generator(this, function (_d) {
                if (((_a = this.settingsWrapper.settings) === null || _a === void 0 ? void 0 : _a.disableRoute) ||
                    this.settingsWrapper.settings.disableBackManagement ||
                    navigationDirection == _common_shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_1__.INavigationDemandType.back ||
                    navigationDirection == _common_shrimp_interfaces_quick_INavigationDemand__WEBPACK_IMPORTED_MODULE_1__.INavigationDemandType.forward) {
                    return [2 /*return*/];
                }
                protocolAndPath = window.location.protocol + '//' + window.location.host;
                pageName = (pageName === null || pageName === void 0 ? void 0 : pageName.startsWith("/")) ? pageName.substring(1) : pageName;
                state = { rendering: true, pageId: pageId };
                if (!override) {
                    if (!pageName) {
                        window.history.pushState(state, '', window.location.href);
                        return [2 /*return*/];
                    }
                    queryString = (_c = (_b = _build_legacy__WEBPACK_IMPORTED_MODULE_0__.Legacy.fixQueryString()) === null || _b === void 0 ? void 0 : _b.replace(".qjson", "")) !== null && _c !== void 0 ? _c : "";
                    url = queryString == "" ? protocolAndPath + "/" + pageName.replace('.qjson', '') : protocolAndPath + queryString;
                    window.history.pushState(state, '', url);
                }
                else {
                    window.history.replaceState(state, '', window.location.href);
                }
                return [2 /*return*/];
            });
        });
    };
    WindowHistoryManager.prototype.Init = function () {
        var self = this;
        if (this.settingsWrapper.settings.disableBackManagement) {
            return;
        }
        var navigationDemand = null;
        (function (origPopstate) {
            window.onpopstate = function (event) {
                var _a, _b;
                if (origPopstate) {
                    origPopstate.call(window, event);
                }
                var activeRenderer = ((_b = (_a = self.servicesWrapper.services).activeRendererCb) === null || _b === void 0 ? void 0 : _b.call(_a)) || self.rendererManager.getLastRenderer();
                navigationDemand = null;
                if (event.state !== null && event.state.rendering && event.state.pageId) {
                    navigationDemand = activeRenderer === null || activeRenderer === void 0 ? void 0 : activeRenderer.GetNavigationDemand(event.state.pageId);
                }
                if (navigationDemand) {
                    activeRenderer === null || activeRenderer === void 0 ? void 0 : activeRenderer.GoHistory(navigationDemand);
                }
            };
        })(window.onpopstate);
    };
    return WindowHistoryManager;
}());



/***/ }),

/***/ "./src/managers/extension/ExtensionManager.ts":
/*!****************************************************!*\
  !*** ./src/managers/extension/ExtensionManager.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExtensionManager": () => (/* binding */ ExtensionManager)
/* harmony export */ });
/* harmony import */ var _extensionData_VTextFieldFormattingExtensionData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extensionData/VTextFieldFormattingExtensionData */ "./src/managers/extension/extensionData/VTextFieldFormattingExtensionData.ts");
//Bu importları DI ile çözme durumumuz olabilir.

var ExtensionManager = /** @class */ (function () {
    function ExtensionManager() {
    }
    ExtensionManager.initialze = function (compCol) {
        compCol.component.extention = {};
    };
    ExtensionManager.ManageComponent = function (compCollection, attrs, settingsWrapper, websdkContext) {
        if (!compCollection.component)
            return;
        this.initialze(compCollection);
        if (ExtensionManager.extensionDomLocator[compCollection.compType])
            ExtensionManager.extensionDomLocator[compCollection.compType](compCollection, attrs, settingsWrapper, websdkContext);
    };
    ExtensionManager.UpdateComponent = function (compCollection, attrs, settingsWrapper, websdkContext) {
        if (!compCollection.component)
            return;
        this.initialze(compCollection);
        if (ExtensionManager.extensionDomLocator[compCollection.compType])
            ExtensionManager.extensionDomLocator[compCollection.compType](compCollection, attrs, settingsWrapper, websdkContext);
    };
    ExtensionManager.extensionDomLocator = {
        'VTextField': function (compCollection, attrs, settingsWrapper, websdkContext) {
            var formattingData = new _extensionData_VTextFieldFormattingExtensionData__WEBPACK_IMPORTED_MODULE_0__.VTextFieldFormattingExtensionData(settingsWrapper, websdkContext);
            formattingData.create(compCollection, attrs);
        },
        'VCombobox': function (compCollection, attrs, settingsWrapper, websdkContext) {
            var formattingData = new _extensionData_VTextFieldFormattingExtensionData__WEBPACK_IMPORTED_MODULE_0__.VTextFieldFormattingExtensionData(settingsWrapper, websdkContext);
            formattingData.create(compCollection, attrs);
        },
    };
    return ExtensionManager;
}());



/***/ }),

/***/ "./src/managers/extension/InstanceInjectionManager.ts":
/*!************************************************************!*\
  !*** ./src/managers/extension/InstanceInjectionManager.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InstanceInjectionManager": () => (/* binding */ InstanceInjectionManager)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_objectInjectionHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../common/shrimp/helpers/objectInjectionHelper */ "../../common/shrimp/helpers/objectInjectionHelper.ts");

var InstanceInjectionManager = /** @class */ (function () {
    function InstanceInjectionManager() {
    }
    InstanceInjectionManager.Manage = function (compCollection) {
        var compManager = this.compExtDic[compCollection.compType];
        if (!compManager) {
            return;
        }
        var compFieldAttacher = function (component) {
            if (!component) {
                return;
            }
            compManager(component);
        };
        compFieldAttacher(compCollection.component);
        compCollection.WatchCreatedFields(function (created) {
            if (!created.instance) {
                return;
            }
            compFieldAttacher(created.instance);
        });
    };
    InstanceInjectionManager.compExtDic = {
        'VFileInput': function (compInst) {
            _common_shrimp_helpers_objectInjectionHelper__WEBPACK_IMPORTED_MODULE_0__.ObjectInjectionHelper.injectMethod(compInst, "browse", function () {
                compInst['$refs'].input.click();
            });
        }
    };
    return InstanceInjectionManager;
}());



/***/ }),

/***/ "./src/managers/extension/extensionData/VTextFieldFormattingExtensionData.ts":
/*!***********************************************************************************!*\
  !*** ./src/managers/extension/extensionData/VTextFieldFormattingExtensionData.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VTextFieldFormattingExtensionData": () => (/* binding */ VTextFieldFormattingExtensionData)
/* harmony export */ });
/* harmony import */ var inputmask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! inputmask */ "../../node_modules/inputmask/dist/inputmask.js");
/* harmony import */ var inputmask__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(inputmask__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_shrimp_helpers_domHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../common/shrimp/helpers/domHelper */ "../../common/shrimp/helpers/domHelper.ts");
/* harmony import */ var _implementation_RegionalManagerImpl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../implementation/RegionalManagerImpl */ "./src/implementation/RegionalManagerImpl.ts");
/* harmony import */ var _library_quickInputFormat_quickInputFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../library/quickInputFormat/quickInputFormat */ "../../library/quickInputFormat/quickInputFormat.ts");




var VTextFieldFormattingExtensionData = /** @class */ (function () {
    function VTextFieldFormattingExtensionData(settingsWrapper, websdkContext) {
        var _this = this;
        this.datadata = ["groupSeparator", "radixPoint", "enforceDigitsOnBlur", "digits", "digitsOptional"];
        this.ibanStructures = "(AL99 9999 9999 9999 9999 9999 9999)|(AD99 9999 9999 9999 9999 9999)|" +
            "(AT99 9999 9999 9999 9999)|(AZ99 9999 9999 9999 9999 9999 9999)|(BH99 AAAA 9999 9999 9999 99)|" +
            "(BY99 AAAA 9999 9999 9999 9999 9999)|(BE99 9999 9999 9999)|(BA99 9999 9999 9999 99)|" +
            "(BR99 9999 9999 9999 9999 9999 999A 9)|(BG99 AAAA 9999 9999 9999 99)|(CR99 9999 9999 9999 9999 99)|" +
            "(HR99 9999 9999 9999 9999 9)|(CY99 9999 9999 9999 9999 9999 9999)|(CZ99 9999 9999 9999 9999 9999)|" +
            "(DK99 9999 9999 9999 99)|(DO99 9999 9999 9999 9999 9999 9999)|(EG99 9999 9999 9999 9999 9999 9999)|" +
            "(SV99 AAAA 9999 9999 9999 9999 9999)|(EE99 9999 9999 9999 9999)|(FO99 9999 9999 9999 99)|" +
            "(FI99 9999 9999 9999 99)|(FR99 9999 9999 9999 9999 9999 999)|(GE99 AA99 9999 9999 9999 99)|" +
            "(DE99 9999 9999 9999 9999 99)|(GI99 AAAA 9999 9999 9999 9999)|(GR99 9999 9999 9999 9999 9999 999)|" +
            "(GL99 9999 9999 9999 99)|(GT99 AAAA 9999 9999 9999 9999 9999)|(VA99 9999 9999 9999 9999 99)|" +
            "(HU99 9999 9999 9999 9999 9999 9999)|(JO99 AAAA 9999 9999 9999 9999 9999 99)|(KZ99 9999 9999 9999 9999)|" +
            "(XK99 9999 9999 9999 9999)|(KW99 AAAA 9999 9999 9999 9999 9999 99)|(LV99 AAAA 9999 9999 9999 9)|" +
            "(LB99 9999 9999 9999 9999 9999 9999)|(LY99 9999 9999 9999 9999 9999 9)|(LI99 9999 9999 9999 9999 9)|" +
            "(LT99 9999 9999 9999 9999)|(LU99 9999 9999 9999 9999)|(MT99 AAAA 9999 9999 9999 9999 9999 999)|" +
            "(MD99 AA99 9999 9999 9999 9999)|(MC99 9999 9999 9999 9999 9999 999)|(ME99 9999 9999 9999 9999 99)|" +
            "(NL99 AAAA 9999 9999 99)|(MK99 9999 9999 9999 999)|(NO99 9999 9999 999)|" +
            "(PK99 AAAA 9999 9999 9999 9999)|(PS99 AAAA 9999 9999 9999 9999 9999 9)|(PL99 9999 9999 9999 9999 9999 9999)|" +
            "(PT99 9999 9999 9999 9999 9999 9)|(QA99 AAAA 9999 9999 9999 9999 9999 9)|(RO99 AAAA 9999 9999 9999 9999)|" +
            "(SM99 A999 9999 9999 9999 9999 9999)|(SA99 9999 9999 9999 9999 9999)|(RS99 9999 9999 9999 9999 99)|" +
            "(SK99 9999 9999 9999 9999 9999)|(SI99 9999 9999 9999 999)|(ES99 9999 9999 9999 9999 9999)|" +
            "(SE99 9999 9999 9999 9999 9999)|(CH99 9999 9999 9999 9999 9)|(TN99 9999 9999 9999 9999 9999)|" +
            "(TR99 9999 9999 9999 9999 9999 99)|(UA99 9999 9999 9999 9999 9999 9999 9)|(AE99 9999 9999 9999 9999 999)|" +
            "(GB99 AAAA 9999 9999 9999 99)|(VG99 AAAA 9999 9999 9999 9999)|(IS99 9999 9999 9999 9999 9999 99)|" +
            "(IQ99 AAAA 9999 9999 9999 999)|(IE99 AAAA 9999 9999 9999 99)|(IL99 9999 9999 9999 9999 999)|(IT99 A999 9999 9999 9999 9999 999)";
        this.extensionDictionary = {
            'number': function (componentCollection, attrs) {
                var formatValues = attrs.formatValues;
                formatValues = _this.setDefaultConfigurations(componentCollection.component, formatValues, _this.websdkContext);
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, formatValues, attrs.preventPaste);
            },
            'bigdecimal': function (componentCollection, attrs) {
                var formatValues = attrs.formatValues;
                formatValues = _this.setDefaultConfigurations(componentCollection.component, formatValues, _this.websdkContext);
                formatValues.onBeforeMask = function (value, opts) {
                    return value;
                };
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, formatValues, attrs.preventPaste);
            },
            'creditcard': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { "mask": "9999 ", "repeat": 4, "greedy": false, "jitMasking": true }, attrs.preventPaste);
            },
            'phone': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { "jitMasking": true }, attrs.preventPaste, '999 999 99 99');
            },
            'email': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { "jitMasking": true }, attrs.preventPaste, "email");
            },
            'ipaddress': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { "jitMasking": true }, attrs.preventPaste, "ip");
            },
            'iban': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { "jitMasking": true, casing: "upper" }, attrs.preventPaste, _this.ibanStructures);
            },
            'onlyAlphabetic': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { regex: '[öçşüığÖÇŞÜĞİa-zA-Z ]+', "greedy": false, "jitMasking": true }, attrs.preventPaste);
            },
            'alphaNumeric': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { regex: '^[a-zA-ZiışğüçöİIŞĞÜÇÖ0-9\.]*$' }, attrs.preventPaste);
            },
            'turkishMobilePhone': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { regex: '^5([0-9]\{2} )([0-9]\{3} )([0-9]\{2} )([0-9]\{2})$', "greedy": false }, attrs.preventPaste);
            },
            'internationalPhone': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { "mask": "(+(999) 999 9999|+(999) 999 999 9999|+(999) 99 999 9999|+(999) 9999 9999|+(99) 9999999999|+(99) 9999 9999|+(99) 99999999|+(9) 999 999 9999)" }, attrs.preventPaste);
            },
            'multipleEmails': function (componentCollection, attrs) {
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { regex: '^(([a-zA-Z0-9\.\-_]+)@((\[[0-9]\{1,3}\.[0-9]\{1,3}\.[0-9]\{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]\{2,4}|[0-9]\{1,3})(\]?)( *; *| *$))*$' }, attrs.preventPaste);
            },
            'regex': function (componentCollection, attrs) {
                var formatValues = attrs.formatValues;
                return VTextFieldFormattingExtensionData.createNewInputMask(componentCollection, { regex: formatValues === null || formatValues === void 0 ? void 0 : formatValues.regex, "jitMasking": true }, attrs.preventPaste);
            }
        };
        this.settingsWrapper = settingsWrapper;
        this.websdkContext = websdkContext;
    }
    VTextFieldFormattingExtensionData.prototype.create = function (compCollection, attrs) {
        var _this = this;
        if (!compCollection.component) {
            return;
        }
        this.initialize(compCollection, attrs);
        var compFieldAttacher = function (component) {
            var formatValue = null;
            Object.defineProperty(component, "formatValues", {
                set: function (value) {
                    formatValue = value;
                    attrs["formatValues"] = value;
                    _this.initialize(compCollection, attrs);
                }, get: function () { return formatValue; }
            });
            var format = null;
            Object.defineProperty(component, "format", {
                set: function (value) {
                    format = value;
                    attrs["format"] = value;
                    _this.initialize(compCollection, attrs);
                }, get: function () { return format; }
            });
        };
        compFieldAttacher(compCollection.component);
        compCollection.WatchCreatedFields(function (created) {
            if (!created.instance) {
                return;
            }
            compFieldAttacher(created.instance);
        });
    };
    VTextFieldFormattingExtensionData.createNewInputMask = function (componentCollection, opts, preventPaste, maskType) {
        var _a, _b;
        var _domElement = componentCollection.component.$el;
        opts.onBeforePaste = function (pastedValue, options) { return VTextFieldFormattingExtensionData.beforePaste(componentCollection.component, pastedValue, options, preventPaste); };
        var selector = ((_b = (_a = _domElement === null || _domElement === void 0 ? void 0 : _domElement.querySelectorAll) === null || _a === void 0 ? void 0 : _a.call(_domElement, 'input')) === null || _b === void 0 ? void 0 : _b[0]) || undefined;
        if (opts.quick == true) {
            opts.preventPaste = preventPaste;
            var inputDom = this.findInputDOM(componentCollection.component);
            var quickMask_1 = new _library_quickInputFormat_quickInputFormat__WEBPACK_IMPORTED_MODULE_3__.QuickInputFormat(inputDom.elm, opts);
            quickMask_1.run();
            componentCollection.component.extention["getUnmaskedValue"] = componentCollection.component["getUnmaskedValue"] = function () {
                return quickMask_1.getUnmaskValue();
            };
            opts = {};
            maskType = undefined;
            selector = undefined;
        }
        else {
            opts = opts;
        }
        var mask = maskType ? new (inputmask__WEBPACK_IMPORTED_MODULE_0___default())(maskType, opts) : new (inputmask__WEBPACK_IMPORTED_MODULE_0___default())(opts);
        if (selector) {
            mask.mask(selector);
            componentCollection.component.extention["getUnmaskedValue"] = componentCollection.component["getUnmaskedValue"] = function () {
                var _a;
                //return mask.unmaskedvalue(); ????
                return ((_a = componentCollection.domElement) === null || _a === void 0 ? void 0 : _a.querySelectorAll('input'))[0].inputmask.unmaskedvalue();
            };
        }
        return mask;
    };
    VTextFieldFormattingExtensionData.prototype.initialize = function (compCollection, attrs) {
        if (attrs && attrs["format"] && compCollection.domElement && this.extensionDictionary[attrs["format"]]) {
            this.extensionDictionary[attrs["format"]](compCollection, attrs);
            // compCollection.component!.extention["getUnmaskedValue"] = compCollection.component!["getUnmaskedValue"] = () => {
            //     return (<any>compCollection.domElement?.querySelectorAll('input'))[0].inputmask.unmaskedvalue();
            // }
        }
    };
    VTextFieldFormattingExtensionData.prototype.setDefaultConfigurations = function (component, attrs, websdkContext) {
        var _this = this;
        var _a, _b, _c, _d, _e;
        if (!attrs)
            return {};
        // ? What if CompCollection has props on it, then check the DiscardFormat prop on the collection instead of the instance
        if (((_b = (_a = component.$options) === null || _a === void 0 ? void 0 : _a.propsData) === null || _b === void 0 ? void 0 : _b.DiscardFormat) === true || ((_e = (_d = (_c = component.$vnode) === null || _c === void 0 ? void 0 : _c["data"]) === null || _d === void 0 ? void 0 : _d.props) === null || _e === void 0 ? void 0 : _e.DiscardFormat) === true)
            return attrs;
        var params = JSON.parse(JSON.stringify(attrs));
        var currentFormattingDefinition = websdkContext.GetItemSingle(_implementation_RegionalManagerImpl__WEBPACK_IMPORTED_MODULE_2__.RegionalManagerImpl.ContextName).getFormattingDefinitionByCurrentRegion();
        if (currentFormattingDefinition) {
            var formatDef = currentFormattingDefinition;
            Object.keys(formatDef).map(function (key, index) {
                if (_this.datadata.includes(key)) {
                    if (formatDef[key].overwrite) {
                        params[key] = formatDef[key].value;
                    }
                    else {
                        if (params[key] == undefined) {
                            params[key] = formatDef[key].value;
                        }
                    }
                }
            });
        }
        return params;
    };
    VTextFieldFormattingExtensionData.maskComplete = function (component, preventPaste) {
        var _a;
        // Index of the input component(tag) in children array may change depends on the textfield props
        // It can be seen in 0 or 1 index 
        var inputDOM = VTextFieldFormattingExtensionData.findInputDOM(component);
        var inputComp = inputDOM === null || inputDOM === void 0 ? void 0 : inputDOM["context"];
        if (inputComp) {
            var value = "";
            if (preventPaste) {
                if (inputDOM && inputDOM.elm && inputDOM.elm.value) {
                    inputDOM.elm.value = value;
                }
                inputComp["lazyValue"] = value;
            }
            else {
                value = (_a = inputDOM === null || inputDOM === void 0 ? void 0 : inputDOM.elm) === null || _a === void 0 ? void 0 : _a.value;
                inputComp["lazyValue"] = value;
            }
            if (inputComp.listeners$ && inputComp.listeners$.input) {
                inputComp.listeners$.input(value);
            }
        }
    };
    VTextFieldFormattingExtensionData.findInputDOM = function (component) {
        var inputChildArray = component["_vnode"].children[0].children[0].children;
        var inputComp;
        _common_shrimp_helpers_domHelper__WEBPACK_IMPORTED_MODULE_1__.DomHelper.findCompInNodeArray(function (node) {
            if (node.tag == "input") {
                inputComp = node;
                return true;
            }
            return false;
        }, inputChildArray);
        return inputComp;
    };
    VTextFieldFormattingExtensionData.beforePaste = function (component, pastedValue, opts, preventPaste) {
        var _a;
        // Index of the input component(tag) in children array may change depends on the textfield props
        // It can be seen in 0 or 1 index 
        if (preventPaste) {
            pastedValue = "";
        }
        var inputComp = (_a = VTextFieldFormattingExtensionData.findInputDOM(component)) === null || _a === void 0 ? void 0 : _a["context"];
        if (!inputComp) {
            return pastedValue;
        }
        inputComp["lazyValue"] = pastedValue;
        setTimeout(function () {
            VTextFieldFormattingExtensionData.maskComplete(component, preventPaste);
        }, 0);
        return pastedValue;
    };
    return VTextFieldFormattingExtensionData;
}());



/***/ }),

/***/ "./src/managers/network/request/RequestHandler.ts":
/*!********************************************************!*\
  !*** ./src/managers/network/request/RequestHandler.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "headerTransportKey": () => (/* binding */ headerTransportKey)
/* harmony export */ });
/* harmony import */ var _WebSDK__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../WebSDK */ "./src/WebSDK.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ "./src/managers/network/utils.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};


var headerTransportKey = "{99bf6fd6-4fe4-4bb7-a6fc-68b00e2ba71a}";
var RequestHandler = function (request, settingsWrapper, storeManager) { return __awaiter(void 0, void 0, void 0, function () {
    var qjsonHeaders, e_1;
    var _a, _b, _c, _d;
    return __generator(this, function (_e) {
        switch (_e.label) {
            case 0:
                _e.trys.push([0, 3, , 4]);
                qjsonHeaders = {};
                if (request.headers[headerTransportKey]) {
                    try {
                        qjsonHeaders = JSON.parse(request.headers[headerTransportKey]);
                        delete request.headers[headerTransportKey];
                    }
                    catch (e) { }
                }
                if (!_utils__WEBPACK_IMPORTED_MODULE_1__["default"].isHandlerEnabled(request)) return [3 /*break*/, 2];
                if (request.headers['Content-Type'] === '' || request.headers['Content-Type'] === null) {
                    request.headers['Content-Type'] == 'application/json';
                }
                request.headers["Content-Language"] = qjsonHeaders["Content-Language"] || undefined;
                Object.keys(qjsonHeaders).forEach(function (key) { return request.headers[key] = qjsonHeaders[key]; });
                settingsYamlManipulation({ settings: settingsWrapper.settings, request: request, qjsonHeaders: qjsonHeaders });
                return [4 /*yield*/, ((_a = _WebSDK__WEBPACK_IMPORTED_MODULE_0__.WebSDK.getPlateauIAM()) === null || _a === void 0 ? void 0 : _a.refreshPromise())];
            case 1:
                _e.sent();
                if ((_c = (_b = settingsWrapper.settings.backendInf) === null || _b === void 0 ? void 0 : _b.iam) === null || _c === void 0 ? void 0 : _c.active) {
                    request.headers['Authorization'] = 'Bearer ' + ((_d = _WebSDK__WEBPACK_IMPORTED_MODULE_0__.WebSDK.getPlateauIAM()) === null || _d === void 0 ? void 0 : _d.getToken()); // write latest token. whether refreshed or not.
                }
                _e.label = 2;
            case 2: return [3 /*break*/, 4];
            case 3:
                e_1 = _e.sent();
                return [3 /*break*/, 4];
            case 4: return [2 /*return*/, request];
        }
    });
}); };
function settingsYamlManipulation(_a) {
    var settings = _a.settings, request = _a.request, qjsonHeaders = _a.qjsonHeaders;
    //if (settings && settings.backendInf && settings.backendInf.Backend && settings.backendInf.PredefinedBackendHeaders && settings.backendInf.Header) {
    if (settings && settings.backendInf && settings.backendInf.PredefinedBackendHeaders && settings.backendInf.Header) {
        var checkExeptionList = false;
        var headerExceptionValue = headerExceptionValue = settings.backendInf.HeaderExceptionList;
        if (headerExceptionValue == undefined)
            headerExceptionValue = {};
        Object.keys(headerExceptionValue).forEach(function (loginvalue) {
            var _a;
            var l = request.url;
            if ((_a = request.url) === null || _a === void 0 ? void 0 : _a.toString().includes(headerExceptionValue[loginvalue])) {
                checkExeptionList = true;
            }
        });
        if (checkExeptionList)
            return request;
        //request.headers['Backend'] = settings.backendInf.Backend;
        //SETTİNGS.YAML DOSYASI İÇERİSİNDEN DEĞERLERİ DİREK ALIP REQUEST HEADERA BASAN KISIM
        var settingRally = {};
        if (settings.backendInf.PredefinedBackendHeaders) {
            settingRally = settings.backendInf.PredefinedBackendHeaders.Rally;
        }
        Object.keys(settingRally).forEach(function (value) {
            request.headers[value] = settingRally[value].value;
        });
        var headerList_1 = settings.backendInf.Header;
        if (headerList_1) {
            Object.keys(headerList_1).forEach(function (header) {
                var _a, _b;
                //var prefiledHeaderList = JSON.stringify(settingRally)
                //Header değerimizdeki değer rally objesinin içindekiyle eşleşiyorsa ve overwrite değeri true ise ez
                /*           if (settingRally[header].overwrite && prefiledHeaderList.includes(header)) {
                 */
                if (!settingRally[header] || ((_a = settingRally[header]) === null || _a === void 0 ? void 0 : _a.overwrite) != 'true') {
                    if (headerList_1[header].value && headerList_1[header].value.startsWith("cs:")) {
                        if ((_b = _WebSDK__WEBPACK_IMPORTED_MODULE_0__.WebSDK.servicesWrapper.services.extensions) === null || _b === void 0 ? void 0 : _b.getHeader) {
                            request.headers[header] = _WebSDK__WEBPACK_IMPORTED_MODULE_0__.WebSDK.servicesWrapper.services.extensions.getHeader(request.url, headerList_1[header].value.substring(3));
                        }
                        else {
                            request.headers[header] = "NotFound getHeader for key :" + headerList_1[header].value;
                        }
                    }
                    else {
                        request.headers[header] = headerList_1[header].value;
                    }
                }
            });
        }
        var preFiledListContent = JSON.stringify(settingRally);
        var headerListContent = JSON.stringify(headerList_1);
        for (var property in qjsonHeaders) {
            if (!preFiledListContent.includes(property) && !headerListContent.includes(property)) {
                request.headers[property] = qjsonHeaders[property];
            }
            if (qjsonHeaders && headerListContent.includes(property)) {
                Object.keys(settingRally).forEach(function (value) {
                    if (headerList_1[property].overwrite) {
                        request.headers[property] = qjsonHeaders[property];
                    }
                });
            }
            else {
                if (qjsonHeaders && preFiledListContent.includes(property)) {
                    Object.keys(settingRally).forEach(function (value) {
                        if (settingRally[property].overwrite) {
                            request.headers[property] = qjsonHeaders[property];
                        }
                    });
                }
            }
        }
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RequestHandler);


/***/ }),

/***/ "./src/managers/network/response/ErrorHandler.ts":
/*!*******************************************************!*\
  !*** ./src/managers/network/response/ErrorHandler.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../common/shrimp/helpers/logger */ "../../common/shrimp/helpers/logger.ts");
/* harmony import */ var _implementation_GlobalMethodsImpl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../implementation/GlobalMethodsImpl */ "./src/implementation/GlobalMethodsImpl.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ "./src/managers/network/utils.ts");



var errorHandler = (function (error, storeManager) {
    if (_utils__WEBPACK_IMPORTED_MODULE_2__["default"].isHandlerEnabled(error.config)) {
        var minLogType = _implementation_GlobalMethodsImpl__WEBPACK_IMPORTED_MODULE_1__.GlobalMethodsImpl.settingsWrapper.settings.minEngineLogLevel ? _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType[_implementation_GlobalMethodsImpl__WEBPACK_IMPORTED_MODULE_1__.GlobalMethodsImpl.settingsWrapper.settings.minEngineLogLevel] : undefined;
        if (error.response) {
            // The request was made and the server responded with a status code
            // that falls out of the range of 2xx
            _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "", additional: { data: error.response.data, status: error.response.status }, logType: _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: minLogType });
        }
        else if (error.request) {
            // The request was made but no response was received
            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of
            // http.ClientRequest in node.js
            _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "", additional: error.request, logType: _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: minLogType });
        }
        else {
            // Something happened in setting up the request that triggered an Error
            _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.Log({ logMessage: "Error", additional: error.message, logType: _common_shrimp_helpers_logger__WEBPACK_IMPORTED_MODULE_0__.LogType.Error, minEngineLogLevel: minLogType });
        }
    }
    return Promise.reject(error);
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (errorHandler);


/***/ }),

/***/ "./src/managers/network/response/SuccessHandler.ts":
/*!*********************************************************!*\
  !*** ./src/managers/network/response/SuccessHandler.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./src/managers/network/utils.ts");

var SuccessHandler = function (response, storeManager) {
    if (_utils__WEBPACK_IMPORTED_MODULE_0__["default"].isHandlerEnabled(response.config)) {
        // Handle responses
    }
    return response;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SuccessHandler);


/***/ }),

/***/ "./src/managers/network/utils.ts":
/*!***************************************!*\
  !*** ./src/managers/network/utils.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var isHandlerEnabled = function (config) {
    if (!config)
        return false;
    return config.hasOwnProperty('handlerEnabled') && !config.handlerEnabled ?
        false : true;
};
function isDirectUrl(url) {
    return url.startsWith("http:") || url.startsWith("https:") || url.startsWith("blob:");
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ isHandlerEnabled: isHandlerEnabled, isDirectUrl: isDirectUrl });


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css&":
/*!************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css& ***!
  \************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "\n.d-alert[data-v-090eaf96] {\n  border-color: rgba(0, 0, 0, 0.12);\n  border-radius: 0;\n  border-width: 4px 0 0 0;\n  border-style: solid;\n  color: #212121;\n  display: flex;\n  font-size: 14px;\n  margin: 4px auto;\n  padding: 16px;\n  position: relative;\n  transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n  background-color: #FF6B6B !important;\n}\n.d-alert p[data-v-090eaf96] {\n  color: 212121;\n  margin-left: 20px;\n}\n/* .error_message {\n   margin-left: 20px;\n} */\n", "",{"version":3,"sources":["webpack://./src/components/quick/DError.vue"],"names":[],"mappings":";AA0CA;EACA,iCAAA;EACA,gBAAA;EACA,uBAAA;EACA,mBAAA;EACA,cAAA;EACA,aAAA;EACA,eAAA;EACA,gBAAA;EACA,aAAA;EACA,kBAAA;EACA,gDAAA;EACA,oCAAA;AACA;AACA;EACA,aAAA;EACA,iBAAA;AACA;AACA;;GAEA","sourcesContent":["<template>\n  <div class=\"d-alert\">\n    <div>\n      <i aria-hidden=\"true\" style=\"font-size: 36px\" class=\"mdi mdi-close-circle\"></i>\n    </div>\n    <div class=\"error_message\">\n      <p style=\"font-size:16px\"><b>Component Name: {{componentName}}</b></p>\n      <p>ID: <span class=\"font-weight-bold font-italic\">{{componentID}}</span></p>\n      <p>Error Message: {{errorMessage}}</p>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\n\nexport default Vue.extend({\n  name: \"DError\",\n  props: {\n    visible: {\n      type: Boolean,\n      default: true\n    },\n    componentName: {\n      type: String,\n      default: null\n    },\n    componentID: {\n      type: String,\n      default: null\n    },\n    errorMessage: {\n      type: String,\n      default: null\n    }\n  },\n  destroyed() {\n      this.$el?.remove();\n   }\n});\n</script>\n<style scoped>\n.d-alert {\n  border-color: rgba(0, 0, 0, 0.12);\n  border-radius: 0;\n  border-width: 4px 0 0 0;\n  border-style: solid;\n  color: #212121;\n  display: flex;\n  font-size: 14px;\n  margin: 4px auto;\n  padding: 16px;\n  position: relative;\n  transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n  background-color: #FF6B6B !important;\n}\n.d-alert p {\n  color: 212121;\n  margin-left: 20px;\n}\n/* .error_message {\n   margin-left: 20px;\n} */\n</style>\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../common/shrimp/omniScriptCompiler/Compressor.js":
/*!************************************************************!*\
  !*** ../../common/shrimp/omniScriptCompiler/Compressor.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Compress": () => (/* binding */ Compress)
/* harmony export */ });
/* harmony import */ var _helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");

    var directions = {
        left: "╣",
        right: "╠",
        up: "╩",
        array: "╬",
        "null": "■"
    };
    var compressNode = function (node) {
        ///<param name="node" value="new Isbank.OmniScript.Node()">node to be compressed</param>
        var typeHelper = new _helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__.TypeHelper();

        if (node === null) {
            return directions.null;
        }
        var nodeString = node.token.value;
        if (node.token.type === compress.TokenTypes.string) {
            nodeString = "'" + nodeString + "'";
        }
        if (node.left !== null) {
            var leftArray = node.left;
            
            if (!typeHelper.isArray(node.left)) {
                leftArray = [leftArray];
            }

            for (var i = 0; i < leftArray.length; i++) {
                nodeString += directions.left;
                if (typeHelper.isArray(leftArray[i])) {
                    nodeString += compressForest(leftArray[i]);
                } else {
                    nodeString += compressNode(leftArray[i]);
                }
            }
        }

        if (node.right !== null) {
            var rightArray = node.right;

            if (!typeHelper.isArray(rightArray)) {
                rightArray = [rightArray];
            }

            for (var i = 0; i < rightArray.length; i++) {
                nodeString += directions.right;
                if (typeHelper.isArray(rightArray[i])) {
                    nodeString += compressForest(rightArray[i]);
                } else {
                    nodeString += compressNode(rightArray[i]);
                }
            }
        }

        return nodeString + directions.up;
    };
    var compressTree = function (tree) {
        ///<param name="tree" value="new Isbank.OmniScript.Node()">tree to be compressed</param>
        var curNode = tree;
        var treeString = compressNode(curNode);
        return treeString;
    };
    var compressForest = function (forest) {
        ///<param name="forest" value="[new Isbank.OmniScript.Node()]">Forest of trees to be compressed</param>
        var forestString = "";
        var tree = null;
        for (var i = 0; i < forest.length ; i++) {
            tree = forest[i];
            forestString += directions.array + compressTree(tree);
        }
        return forestString + directions.up;
    };
    var Compress = function (forest) {
        ///<param name="forest" value="[new Isbank.OmniScript.Node()]">Forest of trees to be compressed</param>
        return compressForest(forest);
    };
    
    var compress = Compress;

    compress.TokenTypes = {
        identifier: "identifier",
        keyword: "keyword",
        string: "string",
        number: "number",
        operator: "operator"
    };

    

/***/ }),

/***/ "../../common/shrimp/omniScriptCompiler/Lexer.js":
/*!*******************************************************!*\
  !*** ../../common/shrimp/omniScriptCompiler/Lexer.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Lex": () => (/* binding */ Lex)
/* harmony export */ });
/* harmony import */ var _helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _QSCError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QSCError */ "../../common/shrimp/omniScriptCompiler/QSCError.ts");
/* harmony import */ var _Token__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Token */ "../../common/shrimp/omniScriptCompiler/Token.ts");




var Lex = function (dataInput, lexContext, returnOnExess) {
        var char;
        var token; // token that is being filled on cumulatively and has NOT been added
        var prevToken; // token that has been filled previously and has BEEN added to list
        var tokens = [];
        var numbers = "0123456789";
        var characters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_";
        var operators = "(){}[]+-*/!?:%.&|><=\,";
        var longOperators = { "++": 1,/* "--": 1, "+=": 1, "*=": 1, "-=": 1, "/=": 1,*/ "&&": 1, "||": 1, "==": 1, ">=": 1, "<=": 1, "!=": 1 };
        var commentOperators = {"//": 1};
        var stringOperators = { "'": 1 };
        var context = lexContext || { i: 0, data: dataInput || "", line: 1, column: 1 };
        var willReturn = false;
        var space = " ";
        var tab = "\t";

        var keywords = {
            "if": {
                expectedNextTokenValue: "(",
                acceptablePrevTokens: "else"
            },
            "else": {
                expectedNextTokenValue: "{",
                acceptablePrevTokens: "}"
            },
            "foreach": {
                expectedNextTokenValue: "(",
                acceptablePrevTokens: null
            },
            "in": {
                expectedNextTokenValue: { type: _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.identifier },
                acceptablePrevTokens: { type: _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.identifier }
            },
            "break": {
                expectedNextTokenValue: null,
                acceptablePrevTokens: null
            },
            "continue": {
                expectedNextTokenValue: null,
                acceptablePrevTokens: null
            }
        };
        var stringEscapeds = {
            "{": function(){
                return "{";
            },
            "\\": function(){
                return "\\";
            },
            "t": function(){
                return "\t";
            },
            "n": function(){
                return "\n";
            }
        };
        var inStringOperators = {
            "{": function() {
                // string içinde geçen { -> Merhaba {Customer.Name}
                addToken();
    
                var innerTokens = Lex(context.data, context, { "{": 1, "}": -1 });
                for (var i = 0; i < innerTokens.length; i++) {
                    tokens.push(innerTokens[i]);
                }
                token = tokens[tokens.length - 1];
                if (token.value != "}") {
                    error("string statements must end with }" + token.Summarize(), "string statement must end with } " + token.value);
                }
                willReturn = checkExessReturn(token.value);
                prevToken = token;
                token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.string, "", getPoz());
                token.position.column++; // continuation of string for next char
            },
            "\\": function() {
                var nextChar = peekNext();
                var escaper = stringEscapeds[nextChar];
                if (!escaper){
                    return;
                }
                token.value += escaper();
                next();
            }
        }

        function checkPrevToken(token, prevToken) {
            ///<param name="prevToken" value="new Isbank.OmniScript.Token();"></param>
            if (prevToken == null) {
                return;
            }
            var accPrevTokens = keywords[token.value].acceptablePrevTokens;
            if (accPrevTokens == null) {
                error("Keyword: " + token.Summarize() + " must be first token in a line.", token.type + ": " + token.value + " must be first token in a line.");
            }

            if (new _helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__.TypeHelper().isObject(accPrevTokens)) {
                if (accPrevTokens.type != prevToken.type) {
                    error("Keyword: " + token.Summarize() + " can not have " + prevToken.Summarize() + " before", token.type + ": " + token.value + " can not have '" + prevToken.value + "' before");
                }
            } else {
                if (accPrevTokens != prevToken.value) {
                    error("Keyword: " + token.Summarize() + " can not have " + prevToken.Summarize() + " before", token.type + ": " + token.value + " can not have '" + prevToken.value + "' before");
                }
            }
        }

        function isLongOperator(op) {
            return longOperators[op || token.value] == 1;
        }
        function isCommentLongOperator(){
            return commentOperators[token.value] == 1;
        }

        function addToken() {
            if (token != null) {
                if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.identifier && keywords.hasOwnProperty(token.value) && keywords[token.value] != null) {
                    token.type = _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.keyword;
                    checkPrevToken(token, prevToken);
                } else if (prevToken != null && prevToken.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.keyword) {
                    var expNextToken = keywords[prevToken.value].expectedNextTokenValue;
                    if (!expNextToken) {
                        error("Token: " + prevToken.Summarize() + " does not accept anything after it", prevToken.type + ": " + prevToken.value + " does not accept anything after it");
                    } else if (new _helpers_typeHelper__WEBPACK_IMPORTED_MODULE_0__.TypeHelper().isObject(expNextToken)) {
                        if (expNextToken.type != token.type) {
                            error("Token: " + token.Summarize() + " can not come after " + prevToken.Summarize(), token.type + ": " + token.value + " can not come after '" + prevToken.value + "'");
                        }
                    } else {
                        if (expNextToken != token.value) {
                            error("Token: " + token.Summarize() + " can not come after " + prevToken.Summarize(), token.type + ": " + token.value + " can not come after '" + prevToken.value + "'");
                        }
                    }
                }

                tokens.push(token);
                prevToken = token;
                token = null;
            }
        }

        function isStringOp(curChar) {
            return stringOperators[curChar || char] == 1;
        }
        function isNumber(curChar) {
            return numbers.indexOf(curChar || char) > -1;
        }
        function isCharacter(curChar) {
            return characters.indexOf(curChar || char) > -1;
        }
        function isOperator(curChar) {
            return operators.indexOf(curChar || char) > -1;
        }

        function getPoz() {
            return { line: context.line, column: context.column };
        }

        function error(consoleMsg, msg) {
            msg = msg || consoleMsg;
            throw new _QSCError__WEBPACK_IMPORTED_MODULE_1__.QSCError({ intelliMsg: msg, message: "(Lexer)line: " + context.line + " column: " + context.column + "-> " + consoleMsg,
                stLine: context.line, stColumn: context.column,
                eLine: context.line, eColumn: context.column + 2
             });
        }
        function peekNext() {
            if (context.i + 1 >= context.data.length) {
                return null;
            }
            return context.data[context.i + 1];
        }
        function next() {
            context.i++;
            context.column++;
        }
        function prev() {
            context.i--;
            context.column--;
        }

        function isTokenizer() {
            return char === space || char === tab;
        }


        function checkNewLine() {
            if (char === "\n") {
                return true;
            } else if (char === "\r" && peekNext() === "\n") {
                next();
                return true;
            }
        }

        function checkExessReturn(curChar) {
            var targetChar = curChar || char;
            if (returnOnExess === null || returnOnExess === undefined) {
                return false;
            }
            if (returnOnExess[targetChar] === undefined) {
                return false;
            }

            returnOnExess.value = (returnOnExess.value || 0) + returnOnExess[targetChar];
            if (returnOnExess.value > 0) {
                return false;
            }
            return true;
        }

        while (context.i < context.data.length && !willReturn) {
            char = context.data[context.i];

            willReturn = checkExessReturn();
            if (checkNewLine()) {

                addToken();
                context.line++;
                context.column = 0;
                prevToken = null;
            } else {
                if (token == null) {
                    if (isTokenizer()) {
                        addToken();
                    } else if (isNumber()) {
                        token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.number, char, getPoz());
                    } else if (isStringOp()) {
                        token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.string, "", getPoz());
                    } else if (isCharacter()) {
                        token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.identifier, char, getPoz());
                    } else if (isOperator()) {
                        token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.operator, char, getPoz());
                    } else {
                        error("char: " + char + " is not a permitted char");
                    }
                } else {
                    if (isTokenizer()) {
                        if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.string) {
                            token.value += char;
                        } else {
                            addToken();
                        }
                    } else if (isCharacter()) {
                        if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.number || token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.keyword) {
                            error("char: " + char + " can not come after: " + token.Summarize(), "char: " + char + " can not come after: " + token.value);
                        } else if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.operator) {
                            addToken();
                            token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.identifier, char, getPoz());
                        } else { // string & identifier
                            token.value += char;
                        }
                    } else if (isStringOp()) {
                        if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.operator) {
                            addToken();
                            token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.string, "", getPoz());
                        } else if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.string) {
                            if (isStringOp(context.data[context.i + 1])) {
                                if (char === context.data[context.i + 1]) {
                                    token.value += char;
                                    next();
                                } else {
                                    addToken();
                                }
                            } else {
                                addToken();
                            }
                        } else {
                            error("char: " + char + " can not come after: " + token.Summarize(), "char: " + char + " can not come after: " + token.value);
                        }
                    } else if (isNumber()) {
                        if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.operator) {
                            addToken();
                            token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.number, char, getPoz());
                        } else if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.keyword) {
                            error("number: " + char + " can not come after: " + token.Summarize(), "number: " + char + " can not come after: " + token.value);
                        } else {
                            token.value += char;
                        }
                    } else if (isOperator()) {
                        if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.string) {
                            var opFunc = inStringOperators[char];
                            if (opFunc){
                                opFunc();
                            }else{
                                token.value += char;
                            }
                        } else if (token.type != _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.operator) {
                            addToken();

                            token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.operator, char, getPoz());
                        } else {
                            token.value += char;
                            if (isCommentLongOperator()){
                                token.type = "comment";
                                do{
                                    token.value += char;
                                    next();
                                    char = context.data[context.i];
                                }while(char && !checkNewLine())
                                prev();
                                token = null; // might use comment tokens in some other time or place. or dimension :)
                            } else if (!isLongOperator()) {
                                // maybe error ??
                                token.value = token.value.substring(0, token.value.length - 1);
                                addToken();
                                token = new _Token__WEBPACK_IMPORTED_MODULE_2__.Token(_Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.operator, char, getPoz());
                            }
                        }
                    } else {
                        if (token.type == _Token__WEBPACK_IMPORTED_MODULE_2__.Token.Types.string) {
                            var opFunc = inStringOperators[char];
                            if (opFunc){
                                opFunc();
                            }else{
                                token.value += char;
                            }
                        } else {
                            error("char: " + char + " is not a permitted char");
                        }
                    }
                }
            }

            if (!willReturn) {
                next();
            }
        }
        addToken();

        return tokens;
    };




/***/ }),

/***/ "../../common/shrimp/omniScriptCompiler/Parser.js":
/*!********************************************************!*\
  !*** ../../common/shrimp/omniScriptCompiler/Parser.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ParseObj": () => (/* binding */ ParseObj)
/* harmony export */ });
/* harmony import */ var _Node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Node */ "../../common/shrimp/omniScriptCompiler/Node.ts");
/* harmony import */ var _Token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Token */ "../../common/shrimp/omniScriptCompiler/Token.ts");
/* harmony import */ var _helpers_typeHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/typeHelper */ "../../common/shrimp/helpers/typeHelper.ts");
/* harmony import */ var _QSCError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./QSCError */ "../../common/shrimp/omniScriptCompiler/QSCError.ts");





function ParseContext(tokenInputs) {
    this.tokenInputs = tokenInputs;
    this.i = 0;
    this.innerParseClosure = false;
    this.innerParseClosureRetval = null;
    this.innerParseEntryReasons = [];
}
ParseContext.prototype.getInnerParseEntryReason = function(){
    var resLength = this.innerParseEntryReasons.length;
    return resLength ? this.innerParseEntryReasons[resLength - 1] : null;
};
ParseContext.prototype.setInnerParseEntryReason = function (newReason) {
    var oldEntryReason = this.getInnerParseEntryReason();
    this.innerParseEntryReasons.push(newReason);
    return oldEntryReason;
};
ParseContext.prototype.popInnerParseEntryReason = function(){
    this.innerParseEntryReasons.pop();
};
ParseContext.prototype.searchInnerParseEntryReason = function(searchReason){
    for (var i = this.innerParseEntryReasons.length - 1; i >= 0; i--){
        if (this.innerParseEntryReasons[i] == searchReason){
            return true;
        }
    }
    return false;
};

var Parse = function (tokenInputs, parseOptions) {
    ///<param name="tokenInputs" type="[Token]" value="[new Token()]">Lexed tokens</param>
    ///<param name="parseOptions" value="{lineBreakMode: ''}">lineBreakMode: return | multiline | discard</param>
    var forest = [];
    var tree = null;
    var prevNode = null;
    var curNode = null;
    // var rootParse = Object.prototype.toString.call(this).constructor.name != ParseContext.name;
    // var parseContext = !rootParse ? this : new ParseContext(tokenInputs);
    var rootParse = this === undefined;
    var parseContext = !rootParse ? this : new ParseContext(tokenInputs);

    var tokens = parseContext.tokenInputs || [];
    var options = parseOptions || {
    };
    options.lineBreakMode = options.lineBreakMode || "multiline";


    if (tokens.length == 0) {
        return forest;
    }
    while (parseContext.i < tokens.length && !parseContext.innerParseClosure) {
        curNode = new _Node__WEBPACK_IMPORTED_MODULE_0__.Node(tokens[parseContext.i]);

        if (options.lineBreakMode != "discard") {
            if (prevNode != null && curNode.token.position.line != prevNode.token.position.line) {
                if (options.lineBreakMode == "return") {
                    parseContext.innerParseClosure = true;
                    break;
                } else { // multiline
                    if (curNode.TokObject.closer === true && rootParse === false) {
                        //if this is a closer no line breaking, will be returning allready
                        prevNode = null;
                    } else {
                        forest.push(tree);
                        tree = null;
                        prevNode = null;
                    }
                }
            }
        }


        if (tree == null) {
            if (!curNode.TokObject.canBeFirst) {
                throw createError("(Parser)Statement can not start with " + curNode.Summarize(),
                    "Statement can not start with " + curNode.token.value, curNode, null);
            }
            switch (curNode.token.type) {
                case Lex.tok.operator:
                    if (curNode.token.value == "(") {
                        curNode = Lex.operators["("].CanBeTaken.call(parseContext, null, curNode);
                    }
                    break;
                case Lex.tok.keyword:
                    curNode = curNode.TokObject.CanBeTaken.call(parseContext, null, curNode);

                    break;
            }

            tree = curNode;
        } else {
            var taken = null;
            if (curNode.TokObject.CanBeTaken != null) {
                taken = curNode.TokObject.CanBeTaken.call(parseContext, prevNode, curNode);
            }
            if (taken == false) {
                throw createError(prevNode.ShortSummarize() + " can not be preceed by " + curNode.ShortSummarize(),
                    prevNode.token.value + " can not be preceeded by " + curNode.token.value, curNode, null);
            }
            if (taken == null) {
                var taken = prevNode.TokObject.CanTake.call(parseContext, curNode, prevNode);

                if (taken == null || taken == false) {
                    throw createError(curNode.ShortSummarize() + " can not preceed " + prevNode.ShortSummarize(),
                        curNode.token.value + " can not preceed " + prevNode.token.value, curNode, null);
                }
            }
            if (parseContext.innerParseClosure == false && parseContext.innerParseClosureRetval != null) {
                if (parseContext.innerParseClosureRetval.retTokenValue.indexOf(prevNode.token.value) != 0) {
                    throw createError("matching " + parseContext.innerParseClosureRetval.retTokenValue.substring(0, 1) + " can not be found for " + parseContext.innerParseClosureRetval.retTokenValue.substring(1, 1) + ".",
                        null, parseContext.innerParseClosureRetval.retResponsible, null);
                }
                prevNode.token.endPosition = parseContext.innerParseClosureRetval.retEndPosition;
                prevNode.token.value = parseContext.innerParseClosureRetval.retTokenValue;
                prevNode.TokObject = parseContext.innerParseClosureRetval.retTokObject;
                parseContext.innerParseClosureRetval = null;
            }
            if (taken !== true) {
                curNode = taken;
            }
        }

        while (tree.parent != null) {
            tree = tree.parent;
        }
        prevNode = curNode;
        parseContext.i++;
    }
    if (parseContext.innerParseClosure) {
        parseContext.i--;
        parseContext.innerParseClosure = false;
    }

    if (tree != null) {
        forest.push(tree);
    }

    return forest;
};

var parse = Parse;

var CanTakeOperatorPlus = function (node, self) {
    ///<param name="node" value="new Node()"></param>
    ///<param name="self" value="new Node()"></param>
    switch (node.token.type) {
        case Lex.tok.string:
            switch (self.token.value) {
                case "+":
                    postfix(node, self);
                    return true;
            }
        case Lex.tok.identifier:
            postfix(node, self);
            return true;
        case Lex.tok.number:
            postfix(node, self);
            return true;
        case Lex.tok.operator:
            switch (node.token.value) {
                case "+":
                case "*":
                case "/":
                case "-":
                case "&&":
                case "||":
                    if (!self.right){
                        return false;
                    }
                    infix(node, self);
                    return true;
                case "!":
                    postfix(node, self);
                    return true;
            }
            return false;
    }
};

var peekNext = function () {
    ///<summary></summary>
    ///<returns type="Isbank.OmniScript.Token" value="new Isbank.OmniScript.Token()"></returns>
    if (this.tokenInputs.length <= this.i + 1) {
        return null;
    }
    return this.tokenInputs[this.i + 1]
};

var checkNext = function (expectedTokenValue) {
    var retVal = null;
    var nextToken = peekNext.call(this);
    if (nextToken === null) {
        return expectedTokenValue === null;
    }
    if (nextToken.value === expectedTokenValue && nextToken.type != "string") {
        retVal = true;
    } else {
        retVal = false;
    }

    return retVal;
};
var assertNext = function (expectedTokenValue) {
    var checkRet = checkNext.call(this, expectedTokenValue);
    if (checkRet === true) {
        this.i++;
        return;
    } else if (checkRet === false) {
        unexpectedToken.call(this, expectedTokenValue);
    }

};
var unexpectedToken = function (expectedTokenValue) {
    var expected = expectedTokenValue;

    if (new _helpers_typeHelper__WEBPACK_IMPORTED_MODULE_2__.TypeHelper().isArray(expected)) {
        expected = expected.join(",");
    }
    throw createError("(Parser)Unexpected token: " + this.tokenInputs[this.i].Summarize() + " Expected: " + expected,
        "Unexpected token: " + this.tokenInputs[this.i].value + " Expected: " + expected, null, this.tokenInputs[this.i]);
};

var assertRetResp = function (expectedTokenValue) {
    var expecteds = expectedTokenValue;
    if (!new _helpers_typeHelper__WEBPACK_IMPORTED_MODULE_2__.TypeHelper().isArray(expecteds)) {
        expecteds = [expecteds];
    }

    var found = false;
    for (var i = 0; i < expecteds.length && !found; i++) {
        if (this.innerParseClosureRetval.retResponsible.token.value == expecteds[i]) {
            found = true;
        }
    }

    if (!found) {
        unexpectedToken.call(this, expectedTokenValue);
    }
};
var assertEntryReasonExistInStack = function(reasonToSearch){
    if (!this.searchInnerParseEntryReason(reasonToSearch)) {
        throw createError(this.tokenInputs[this.i].Summarize() + " can only be used inside " + reasonToSearch + " body",
            this.tokenInputs[this.i].value + " can only be used inside " + reasonToSearch + " body", null, this.tokenInputs[this.i].value);
    }
};

var Lex = {
    tok: {
        operator: _Token__WEBPACK_IMPORTED_MODULE_1__.Token.Types.operator,
        string: _Token__WEBPACK_IMPORTED_MODULE_1__.Token.Types.string,
        number: _Token__WEBPACK_IMPORTED_MODULE_1__.Token.Types.number,
        identifier: _Token__WEBPACK_IMPORTED_MODULE_1__.Token.Types.identifier,
        keyword: _Token__WEBPACK_IMPORTED_MODULE_1__.Token.Types.keyword
    },
    strings: {
        main: {
            canBeFirst: true,
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.operator:
                        if (node.token.value === "{") {
                            self.right = [];
                            var statementCounter = 0;
                            var next = null, loop = false;
                            do {
                                this.i++;
                                loop = false;
                                var parsedForest = parse.call(this, null, { lineBreakMode: "return" }); // string statements can not be multiline / 56041 for now... (*)
                                //(*) -> still using forest for future prevention of evaluator changes :)
                                assertRetResp.call(this, "}");
                                self.right.push(parsedForest);
                                self.token.value += ("{" + statementCounter++ + "}");
                                this.innerParseClosureRetval = null;
                                next = peekNext.call(this);
                                if (next !== null && next.type === Lex.tok.string) {
                                    self.token.value += next.value;
                                    this.i++;
                                    next = peekNext.call(this);
                                    if (next !== null && next.value === "{") {
                                        loop = true;
                                        this.i++;
                                    }
                                }
                            } while (loop);
                            return self;
                        } else {
                            infix(node, self);
                        }
                        return true;
                }
            }
        }
    },
    numbers: {
        main: {
            canBeFirst: true,
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.operator:
                        infix(node, self);
                        return true;
                }
            }
        }
    },
    identifiers: {
        main: {
            canBeFirst: true,
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.operator:
                        infix(node, self);
                        return true;
                }
            }
        }
    },
    keywords: {
        "if": {
            canBeFirst: true,
            CanBeTaken: function (node, self) {
                ///<param name="self" value="new Node()"></param>
                if (node != null) {
                    return false;
                }
                
                var myEntryReason = this.getInnerParseEntryReason();

                var setInnerParseContext = function () {
                    if (myEntryReason === "elseif") {
                        this.innerParseClosure = true;
                    } else {
                        this.innerParseClosureRetval = null;
                    }
                }
                assertNext.call(this, "(");
                this.i++;
                self.left = parse.call(this, null, { lineBreakMode: "discard" })[0];
                assertRetResp.call(this, ")");
                this.innerParseClosureRetval = null;

                assertNext.call(this, "{");
                this.i++;
                this.setInnerParseEntryReason("if");
                self.right = [parse.call(this, null, { lineBreakMode: "multiline" }), null];
                this.popInnerParseEntryReason();
                assertRetResp.call(this, "}");

                if (checkNext.call(this, "else") === true) {
                    this.innerParseClosureRetval = null;
                    this.i++;
                    if (checkNext.call(this, "if") === true) {  // else if {
                        this.i++;
                        this.setInnerParseEntryReason("elseif");
                        self.right[1] = parse.call(this, null, { lineBreakMode: "multiline" });
                        this.popInnerParseEntryReason();
                        // check } maybe ??
                        setInnerParseContext.call(this);
                    } else { //else {
                        assertNext.call(this, "{");
                        this.i++;
                        this.setInnerParseEntryReason("else");
                        self.right[1] = parse.call(this, null, { lineBreakMode: "multiline" });
                        this.popInnerParseEntryReason();
                        assertRetResp.call(this, "}");
                        setInnerParseContext.call(this);
                    }
                } else {
                    setInnerParseContext.call(this);
                }

                return self;
            }
        },
        "foreach": {
            canBeFirst: true,
            CanBeTaken: function (node, self) {
                ///<param name="self" value="new Node()"></param>
                if (node != null) {
                    return false;
                }

                var setInnerParseContext = function () {
                    this.innerParseClosureRetval = null;
                }

                assertNext.call(this, "(");

                var identifier = peekNext.call(this);
                if (identifier.type != Lex.tok.identifier) {
                    return false;
                }
                this.i++;

                var inn = peekNext.call(this);
                this.i++;
                if (inn.type != Lex.tok.keyword || inn.value != "in") {
                    unexpectedToken.call(this, "in");
                }

                this.i++;
                inn = new _Node__WEBPACK_IMPORTED_MODULE_0__.Node(inn);
                identifier = new _Node__WEBPACK_IMPORTED_MODULE_0__.Node(identifier);
                inn.right = parse.call(this, null, { lineBreakMode: "return" })[0];
                inn.left = identifier;
                self.left = inn;

                assertRetResp.call(this, ")");
                this.innerParseClosureRetval = null;

                assertNext.call(this, "{");
                this.i++;
                this.setInnerParseEntryReason("foreach");
                self.right = [parse.call(this, null, { lineBreakMode: "multiline" })];
                this.popInnerParseEntryReason();
                assertRetResp.call(this, "}");

                setInnerParseContext.call(this);

                return self;
            }
        },
        "in": {
            canBeFirst: false,
            CanBeTaken: function () {
                return false;
            }
        },
        "break": {
            canBeFirst: true,
            CanBeTaken: function (node, self) {
                if (node != null) {
                    return false;
                }
                assertEntryReasonExistInStack.call(this, "foreach");
                return self;
            }
        },
        "continue": {
            canBeFirst: true,
            CanBeTaken: function (node, self) {
                if (node != null) {
                    return false;
                }
                assertEntryReasonExistInStack.call(this, "foreach");
                return self;
            }
        }
    },
    operators: {
        "()": {
            wasOpenable: true,
            concatable: true,
            canBeFirst: false,
            value: "()",
            presedence: -1,
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                infix(node, self);
                return true;
            }
        },
        "(": {
            openable: true,
            canBeFirst: true, presedence: -1,
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                var parsed = [];
                while (true) {
                    parsed.push(parse.call(this, null, { lineBreakMode: "return" })[0]);
                    if (this.innerParseClosureRetval.retResponsible.token.value == ",") {
                        this.innerParseClosureRetval = null;
                        this.i++;
                    } else {
                        break;
                    }
                }

                postfix(parsed, self);
                return self;
            },
            CanBeTaken: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                if (node == null) {
                    this.i++;
                    var parsed = parse.call(this, null, { lineBreakMode: "return" })[0];
                    this.innerParseClosureRetval = null;
                    return parsed;
                }

                switch (node.token.type) {
                    case Lex.tok.operator:
                        if (node.TokObject.wasOpenable === true) {
                            // calling an openable. no differecent than identifier
                            infix(self, node);
                            return true;
                        }
                        // self is presedence operator
                        this.i++;
                        var parsed = parse.call(this, null, { lineBreakMode: "return" })[0];
                        this.innerParseClosureRetval = null;
                        postfix(parsed, node);
                        return parsed;
                    case Lex.tok.number:
                        return false;
                    case Lex.tok.identifier:
                        infix(self, node);
                        return true;
                }

            }
        },
        ")": {
            canBeFirst: false, presedence: 9,
            closer: true,
            CanBeTaken: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>

                if (node != null) {
                    switch (node.token.type) {
                        case Lex.tok.operator:
                            //if (node.TokObject.openable != true && node.TokObject.wasOpenable != true) {
                            //    return false;
                            //} evaluator -> and2
                            if (node.token.value == "(") { // açılmanın üstüne kapama -> ()
                                node.token.value = Lex.operators["()"].value;
                                node.TokObject = Lex.operators["()"];
                                node.token.endPosition = self.token.position;
                                return node;
                            }
                            break;
                    }
                }

                this.innerParseClosure = true;
                this.innerParseClosureRetval = {
                    retTokenValue: Lex.operators["()"].value,
                    retTokObject: Lex.operators["()"],
                    retEndPosition: self.token.position,
                    retResponsible: self
                };
                return true;
            }
        },
        "{}": {
            concatable: true,
            canBeFirst: false,
            value: "{}",
            wasOpenable: true,
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.operator:
                        switch (node.token.value) {
                            case Lex.operators["!"]:
                                return false;
                        }
                        infix(node, self);
                        return true;
                }
            }
        },
        "{": {
            openable: true,
            canBeFirst: true, value: "{",
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                var parsed = [];
                var curParsed = null;
                while (true) {
                    curParsed = parse.call(this, null, { lineBreakMode: "discard" })[0];
                    assertRetResp.call(this, ["}", ","]);
                    if (curParsed.token.value != "=") {
                        throw createError("(Parser)object creation scope <<{}>> must consist of assignments <<=>>, not expected: " + curParsed.Summarize(),
                            "object creation scope <<{}>> must consist of assignments <<=>>, not expected: " + curParsed.token.value, curParsed, null);
                    }
                    parsed.push(curParsed);
                    if (this.innerParseClosureRetval.retResponsible.token.value == ",") {
                        this.innerParseClosureRetval = null;
                        this.i++;
                    } else {
                        break;
                    }
                }

                postfix(parsed, self);
                return self;
            }
        },
        "}": {
            value: "}",
            canBeFirst: true,
            closer: true,
            CanBeTaken: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                if (node != null) {
                    switch (node.token.type) {
                        case Lex.tok.operator:
                            if (node.TokObject.openable != true && node.TokObject.wasOpenable != true) {
                                return false;
                            }
                            if (node.token.value == "{") { // açılmanın üstüne kapama -> {}
                                node.token.value = Lex.operators["{}"].value;
                                node.TokObject = Lex.operators["{}"];
                                node.token.endPosition = self.token.position;
                                return node;
                            }
                            break;
                    }
                }

                this.innerParseClosure = true;
                this.innerParseClosureRetval = {
                    retTokenValue: Lex.operators["{}"].value,
                    retTokObject: Lex.operators["{}"],
                    retEndPosition: self.token.position,
                    retResponsible: self
                };
                return true;
            }
        },
        "[]": {
            wasOpenable: true,
            concatable: true,
            canBeFirst: false,
            presedence: -1,
            value: "[]",
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.operator:
                        switch (node.token.value) {
                            case Lex.operators["["]:
                            case Lex.operators["!"]:
                                return false;
                        }
                        infix(node, self);
                        return true;
                }
            }
        },
        "[": {
            openable: true,
            presedence: -1,
            value: "[",
            canBeFirst: true,
            CanBeTaken: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.operator:
                        if (node.TokObject.wasOpenable === true || node.TokObject.openable === true || node.token.value === "=") {
                            return null; // be handled with [].CanTake, ().CanTake || (.CanTake...
                        }
                        throw createError("(Parser)not implemented 16", "not implemented 16", node, null); //concat two arrays maybe ?? [2,3]+[4,5,6]
                        return true;
                    case Lex.tok.number:
                        return false;
                    case Lex.tok.identifier:
                        infix(self, node);
                        return true;
                }
            },
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>

                var parsed = [];
                while (true) {
                    parsed.push(parse.call(this, null, { lineBreakMode: "return" })[0]);
                    if (this.innerParseClosureRetval.retResponsible.token.value == ",") {
                        this.innerParseClosureRetval = null;
                        this.i++;
                    } else {
                        break;
                    }
                }

                postfix(parsed, self);
                return self;
            }
        },
        "]": {
            value: "]",
            canBeFirst: false,
            closer: true,
            CanBeTaken: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                if (node != null) {
                    switch (node.token.type) {
                        case Lex.tok.operator:
                            if (node.token.value == "[") { // açılmanın üstüne kapama -> []
                                node.token.value = Lex.operators["[]"].value;
                                node.TokObject = Lex.operators["[]"];
                                node.token.endPosition = self.token.position;
                                return node;
                            }
                            if (node.TokObject.wasOpenable != true) {
                                return false;
                            }
                    }
                }

                this.innerParseClosure = true;
                this.innerParseClosureRetval = {
                    retTokenValue: Lex.operators["[]"].value,
                    retTokObject: Lex.operators["[]"],
                    retEndPosition: self.token.position,
                    retResponsible: self
                };
                return true;
            }
        },
        "+": {
            concatable: false,
            canBeFirst: false, presedence: 5,
            CanTake: CanTakeOperatorPlus
        },
        "-": {
            concatable: false,
            canBeFirst: true, presedence: 5,
            CanTake: CanTakeOperatorPlus
        },
        "*": {
            concatable: false,
            canBeFirst: false, presedence: 6,
            CanTake: CanTakeOperatorPlus
        },
        "/": {
            concatable: false,
            canBeFirst: false, presedence: 6,
            CanTake: CanTakeOperatorPlus
        },
        "&&": {
            concatable: false,
            canBeFirst: false, presedence: 2,
            CanTake: CanTakeOperatorPlus
        },
        "||": {
            concatable: false,
            canBeFirst: false, presedence: 2,
            CanTake: CanTakeOperatorPlus
        },
        "!": {
            canBeFirst: true, concatable: false,
            presedence: 7,
            CanBeTaken: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.number:
                    case Lex.tok.identifier:
                    case Lex.tok.string:
                        return false;
                }
            },
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.operator:
                        return false;
                }
                postfix(node, self);
                return true;
            }
        },
        "?": {
            canBeFirst: false
        },
        ":": {
            canBeFirst: false,
            CanTake: function () {
                //sadece dışarısı object creation'larda ({a=5}) = kullanılmalı hatasını versin diye. Başka bir amaç yok...
                return true;
            }
        },
        "%": {
            canBeFirst: false
        },
        ".": {
            concatable: true,
            presedence: 8,
            canBeFirst: false,
            CanBeTaken: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.identifier:
                        infix(self, node);
                        return true;
                }
            },
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.identifier:
                        postfix(node, self);
                        return true;
                }
            }
        },
        "&": {
            canBeFirst: false
        },
        "|": {
            canBeFirst: false
        },
        ">": {
            concatable: false,
            canBeFirst: false, presedence: 4,
            CanTake: CanTakeOperatorPlus
        },
        "<": {
            concatable: false,
            canBeFirst: false, presedence: 4,
            CanTake: CanTakeOperatorPlus
        },
        ">=": {
            concatable: false,
            canBeFirst: false, presedence: 4,
            CanTake: CanTakeOperatorPlus
        },
        "<=": {
            concatable: false,
            canBeFirst: false, presedence: 4,
            CanTake: CanTakeOperatorPlus
        },
        "==": {
            concatable: false,
            canBeFirst: false, presedence: 4,
            CanTake: CanTakeOperatorPlus
        },
        "!=": {
            concatable: false,
            canBeFirst: false, presedence: 4,
            CanTake: CanTakeOperatorPlus
        },
        "=": {
            canBeFirst: false, presedence: -1,
            CanBeTaken: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                var head = node;
                while (head.parent != null) {
                    // burada scope'ı ayırmak lazım. SM.go(alper{a=5,b=6}
                    head = head.parent;
                }
                var permitted = {
                    "[]": 1, identifier: 1, ".": 1, string: 1
                };
                if (permitted[head.token.type] == null && permitted[head.token.value] == null) {
                    throw createError("(Parser)left hand side of = has errors: " + self.Summarize(),
                        "left hand side of = has errors: " + self.token.value, self, null);
                }
                infix(self, node);
                return true;
            },
            CanTake: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                var parsed = parse.call(this, null, { lineBreakMode: "return" })[0];
                switch (node.token.type) {
                    case Lex.tok.operator:
                        if (node.token.value == "=") {
                            return false;
                        }
                        break;
                }
                postfix(parsed, self);
                if (this.innerParseClosureRetval != null) {
                    var retRespTokVal = this.innerParseClosureRetval.retResponsible.token.value;
                    if (retRespTokVal == "," || retRespTokVal == "}" || retRespTokVal == ")") { // bitiş sona gelmesi değil de , dolayısı ile
                        this.innerParseClosure = true; // benim değil, üstten girenin
                    }
                }
                return parsed;
            }
        },
        ",": {
            canBeFirst: false, presedence: -1,
            CanBeTaken: function (node, self) {
                ///<param name="node" value="new Node()"></param>
                ///<param name="self" value="new Node()"></param>
                switch (node.token.type) {
                    case Lex.tok.operator:
                        if (node.TokObject.wasOpenable != true) {
                            //if (node.token.value != "()") {
                            return false;
                        }
                        break;
                }

                this.innerParseClosure = true;
                this.innerParseClosureRetval = {
                    retTokenValue: null,
                    retTokObject: null,
                    retEndPosition: null,
                    retResponsible: self
                };

                return true;
            }
        }
    }
};

Parse.Dict = Lex;

var postfix = function (newNode, self) {
    ///<param name="newNode" value="new Node()"></param>
    ///<param name="self" value="new Node()"></param>
    if (!new _helpers_typeHelper__WEBPACK_IMPORTED_MODULE_2__.TypeHelper().isArray(newNode)) {
        newNode = [newNode];
    }
    for (var i = 0; i < newNode.length; i++) {
        if (newNode[i].parent != null) {
            throw createError("(Parser)unexpected postfix: newnodes parent is not null: " + newNode[i].Summarize(),
                "unexpected postfix: newnodes parent is not null:" + newNode[i].token.value, newNode[i], null);
        }
        newNode[i].parent = self;
    }

    if (self.right == null) {
        self.right = newNode.length > 1 ? newNode : newNode[0];
    } else {
        throw createError("(Parser)unexpected postfix: selfs right is not null" + self.Summarize(),
            "unexpected postfix: selfs right is not null" + self.token.value, self, null);
    }
};

var putInPlace = function (destNode, sourceNode) {
    ///<param name="destNode" value="new Node()"></param>
    ///<param name="sourceNode" value="new Node()"></param>
    if (destNode.parent == null) {
        destNode.parent = sourceNode;
        if (sourceNode.left == null) {
            sourceNode.left = destNode;
        } else if (sourceNode.right == null) {
            sourceNode.right = destNode;
        } else {
            throw createError("(Parser)Can not put in place source has both left and right: " + sourceNode.Summarize(),
                "Can not put in place source has both left and right: " + sourceNode.token.value, sourceNode, null);
        }
    } else {
        destNode.parent.right = sourceNode;
        sourceNode.parent = destNode.parent;
        destNode.parent = sourceNode;
        if (sourceNode.left == null) {
            sourceNode.left = destNode;
        } else {
            throw createError("(Parser)Can not put in place, incomming source nodes left is not null: " + sourceNode.Summarize(),
                "Can not put in place, incomming source nodes left is not null: " + sourceNode.token.value, sourceNode, null);
        }
    }
};



var infix = function (newNode, self) {
    ///<param name="newNode" value="new Node()"></param>
    ///<param name="self" value="new Node()"></param>
    if (self.parent == null) {
        self.parent = newNode;
        if (newNode.left == null) {
            newNode.left = self;
        } else {
            throw createError("(Parser)unexpected infix: newNode left is not null " + newNode.Summarize(),
                "unexpected infix: newNode left is not null " + newNode.token.value, newNode, null);
        }
    } else {
        var target = self;
        while (true) {
            if (target.parent == null || target.parent.TokObject.presedence < newNode.TokObject.presedence) {
                break;
            }
            if (newNode.TokObject.presedence == -1 && target.parent.TokObject.concatable != true) {
                break;
            }
            target = target.parent;
        }
        putInPlace(target, newNode);
    }
};

var parseExObj = function (message, responsibleNode) {
    return {
        message: "(Parser)" + message,
        responsibleNode: responsibleNode
    };
};

/**
 * 
 * @param {string} consoleMsg 
 * @param {string | undefined} msg 
 * @param {Node | undefined} responsibleNode 
 * @param {Token | undefined} responsibleToken
 */
var createError = function (consoleMsg, msg, responsibleNode, responsibleToken) {
    var pos = { line: 0, column: 0 };
    var endPos = { line: 0, column: 0 };
    if (responsibleNode) {
        pos = (responsibleNode.token && responsibleNode.token.position) || pos;
        endPos = (responsibleNode.token && responsibleNode.token.endPosition) || endPos;
    } else if (responsibleToken) {
        pos = responsibleToken.position || pos;
        endPos = responsibleToken.endPosition || endPos;
    }


    return new _QSCError__WEBPACK_IMPORTED_MODULE_3__.QSCError({
        message: consoleMsg, intelliMsg: msg,
        stLine: pos.line, stColumn: pos.line,
        eLine: endPos.line, eColumn: endPos.column,
        responsibleNode: responsibleNode
    });
};

var ParseObj = { Parse: Parse };



/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css&":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_style_index_0_id_090eaf96_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css& */ "./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css&");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_style_index_0_id_090eaf96_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_style_index_0_id_090eaf96_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_style_index_0_id_090eaf96_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_style_index_0_id_090eaf96_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./src/components/quick/DError.vue":
/*!*****************************************!*\
  !*** ./src/components/quick/DError.vue ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _DError_vue_vue_type_template_id_090eaf96_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DError.vue?vue&type=template&id=090eaf96&scoped=true& */ "./src/components/quick/DError.vue?vue&type=template&id=090eaf96&scoped=true&");
/* harmony import */ var _DError_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DError.vue?vue&type=script&lang=ts& */ "./src/components/quick/DError.vue?vue&type=script&lang=ts&");
/* harmony import */ var _DError_vue_vue_type_style_index_0_id_090eaf96_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css& */ "./src/components/quick/DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _DError_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__["default"],
  _DError_vue_vue_type_template_id_090eaf96_scoped_true___WEBPACK_IMPORTED_MODULE_0__.render,
  _DError_vue_vue_type_template_id_090eaf96_scoped_true___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  "090eaf96",
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/components/quick/DError.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/components/quick/Ghost.vue":
/*!****************************************!*\
  !*** ./src/components/quick/Ghost.vue ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Ghost_vue_vue_type_template_id_0177576d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Ghost.vue?vue&type=template&id=0177576d& */ "./src/components/quick/Ghost.vue?vue&type=template&id=0177576d&");
/* harmony import */ var _Ghost_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ghost.vue?vue&type=script&lang=ts& */ "./src/components/quick/Ghost.vue?vue&type=script&lang=ts&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _Ghost_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Ghost_vue_vue_type_template_id_0177576d___WEBPACK_IMPORTED_MODULE_0__.render,
  _Ghost_vue_vue_type_template_id_0177576d___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/components/quick/Ghost.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue":
/*!*******************************************************************!*\
  !*** ./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _GoldenLayoutWrapper_vue_vue_type_template_id_2701f7f6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoldenLayoutWrapper.vue?vue&type=template&id=2701f7f6& */ "./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=template&id=2701f7f6&");
/* harmony import */ var _GoldenLayoutWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GoldenLayoutWrapper.vue?vue&type=script&lang=ts& */ "./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=script&lang=ts&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _GoldenLayoutWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__["default"],
  _GoldenLayoutWrapper_vue_vue_type_template_id_2701f7f6___WEBPACK_IMPORTED_MODULE_0__.render,
  _GoldenLayoutWrapper_vue_vue_type_template_id_2701f7f6___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue":
/*!************************************************************************!*\
  !*** ./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _GeneralWrapper_vue_vue_type_template_id_4df67c86___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralWrapper.vue?vue&type=template&id=4df67c86& */ "./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=template&id=4df67c86&");
/* harmony import */ var _GeneralWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GeneralWrapper.vue?vue&type=script&lang=ts& */ "./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=script&lang=ts&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _GeneralWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__["default"],
  _GeneralWrapper_vue_vue_type_template_id_4df67c86___WEBPACK_IMPORTED_MODULE_0__.render,
  _GeneralWrapper_vue_vue_type_template_id_4df67c86___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/components/quick/LocalComponentWrappers/GeneralWrapper.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue":
/*!****************************************************************************!*\
  !*** ./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _TSComponentWrapper_vue_vue_type_template_id_22eeacd0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TSComponentWrapper.vue?vue&type=template&id=22eeacd0& */ "./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=template&id=22eeacd0&");
/* harmony import */ var _TSComponentWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TSComponentWrapper.vue?vue&type=script&lang=ts& */ "./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=script&lang=ts&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _TSComponentWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__["default"],
  _TSComponentWrapper_vue_vue_type_template_id_22eeacd0___WEBPACK_IMPORTED_MODULE_0__.render,
  _TSComponentWrapper_vue_vue_type_template_id_22eeacd0___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/init/root.vue":
/*!***************************!*\
  !*** ./src/init/root.vue ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _root_vue_vue_type_template_id_599a6278___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./root.vue?vue&type=template&id=599a6278& */ "./src/init/root.vue?vue&type=template&id=599a6278&");
/* harmony import */ var _root_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./root.vue?vue&type=script&lang=ts& */ "./src/init/root.vue?vue&type=script&lang=ts&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _root_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_1__["default"],
  _root_vue_vue_type_template_id_599a6278___WEBPACK_IMPORTED_MODULE_0__.render,
  _root_vue_vue_type_template_id_599a6278___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/init/root.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/components/quick/DError.vue?vue&type=script&lang=ts&":
/*!******************************************************************!*\
  !*** ./src/components/quick/DError.vue?vue&type=script&lang=ts& ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DError.vue?vue&type=script&lang=ts& */ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=script&lang=ts&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/components/quick/Ghost.vue?vue&type=script&lang=ts&":
/*!*****************************************************************!*\
  !*** ./src/components/quick/Ghost.vue?vue&type=script&lang=ts& ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_Ghost_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ghost.vue?vue&type=script&lang=ts& */ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/Ghost.vue?vue&type=script&lang=ts&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_Ghost_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=script&lang=ts&":
/*!********************************************************************************************!*\
  !*** ./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=script&lang=ts& ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_GoldenLayoutWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoldenLayoutWrapper.vue?vue&type=script&lang=ts& */ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=script&lang=ts&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_GoldenLayoutWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=script&lang=ts&":
/*!*************************************************************************************************!*\
  !*** ./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=script&lang=ts& ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneralWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneralWrapper.vue?vue&type=script&lang=ts& */ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=script&lang=ts&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneralWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=script&lang=ts&":
/*!*****************************************************************************************************!*\
  !*** ./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=script&lang=ts& ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_TSComponentWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TSComponentWrapper.vue?vue&type=script&lang=ts& */ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=script&lang=ts&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_TSComponentWrapper_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/init/root.vue?vue&type=script&lang=ts&":
/*!****************************************************!*\
  !*** ./src/init/root.vue?vue&type=script&lang=ts& ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_root_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/ts-loader/index.js??clonedRuleSet-1!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./root.vue?vue&type=script&lang=ts& */ "../../node_modules/ts-loader/index.js??clonedRuleSet-1!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/init/root.vue?vue&type=script&lang=ts&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_lib_index_js_vue_loader_options_root_vue_vue_type_script_lang_ts___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/components/quick/DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css&":
/*!**************************************************************************************************!*\
  !*** ./src/components/quick/DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css& ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_style_index_0_id_090eaf96_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=style&index=0&id=090eaf96&scoped=true&lang=css&");


/***/ }),

/***/ "./src/components/quick/DError.vue?vue&type=template&id=090eaf96&scoped=true&":
/*!************************************************************************************!*\
  !*** ./src/components/quick/DError.vue?vue&type=template&id=090eaf96&scoped=true& ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_template_id_090eaf96_scoped_true___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_template_id_090eaf96_scoped_true___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DError_vue_vue_type_template_id_090eaf96_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DError.vue?vue&type=template&id=090eaf96&scoped=true& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=template&id=090eaf96&scoped=true&");


/***/ }),

/***/ "./src/components/quick/Ghost.vue?vue&type=template&id=0177576d&":
/*!***********************************************************************!*\
  !*** ./src/components/quick/Ghost.vue?vue&type=template&id=0177576d& ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Ghost_vue_vue_type_template_id_0177576d___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Ghost_vue_vue_type_template_id_0177576d___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Ghost_vue_vue_type_template_id_0177576d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ghost.vue?vue&type=template&id=0177576d& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/Ghost.vue?vue&type=template&id=0177576d&");


/***/ }),

/***/ "./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=template&id=2701f7f6&":
/*!**************************************************************************************************!*\
  !*** ./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=template&id=2701f7f6& ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_GoldenLayoutWrapper_vue_vue_type_template_id_2701f7f6___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_GoldenLayoutWrapper_vue_vue_type_template_id_2701f7f6___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_GoldenLayoutWrapper_vue_vue_type_template_id_2701f7f6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoldenLayoutWrapper.vue?vue&type=template&id=2701f7f6& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=template&id=2701f7f6&");


/***/ }),

/***/ "./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=template&id=4df67c86&":
/*!*******************************************************************************************************!*\
  !*** ./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=template&id=4df67c86& ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneralWrapper_vue_vue_type_template_id_4df67c86___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneralWrapper_vue_vue_type_template_id_4df67c86___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneralWrapper_vue_vue_type_template_id_4df67c86___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneralWrapper.vue?vue&type=template&id=4df67c86& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=template&id=4df67c86&");


/***/ }),

/***/ "./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=template&id=22eeacd0&":
/*!***********************************************************************************************************!*\
  !*** ./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=template&id=22eeacd0& ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TSComponentWrapper_vue_vue_type_template_id_22eeacd0___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TSComponentWrapper_vue_vue_type_template_id_22eeacd0___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TSComponentWrapper_vue_vue_type_template_id_22eeacd0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TSComponentWrapper.vue?vue&type=template&id=22eeacd0& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=template&id=22eeacd0&");


/***/ }),

/***/ "./src/init/root.vue?vue&type=template&id=599a6278&":
/*!**********************************************************!*\
  !*** ./src/init/root.vue?vue&type=template&id=599a6278& ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_root_vue_vue_type_template_id_599a6278___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_root_vue_vue_type_template_id_599a6278___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_root_vue_vue_type_template_id_599a6278___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./root.vue?vue&type=template&id=599a6278& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/init/root.vue?vue&type=template&id=599a6278&");


/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=template&id=090eaf96&scoped=true&":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/DError.vue?vue&type=template&id=090eaf96&scoped=true& ***!
  \***************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "d-alert" }, [
    _vm._m(0),
    _vm._v(" "),
    _c("div", { staticClass: "error_message" }, [
      _c("p", { staticStyle: { "font-size": "16px" } }, [
        _c("b", [_vm._v("Component Name: " + _vm._s(_vm.componentName))]),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("ID: "),
        _c("span", { staticClass: "font-weight-bold font-italic" }, [
          _vm._v(_vm._s(_vm.componentID)),
        ]),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("Error Message: " + _vm._s(_vm.errorMessage))]),
    ]),
  ])
}
var staticRenderFns = [
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("i", {
        staticClass: "mdi mdi-close-circle",
        staticStyle: { "font-size": "36px" },
        attrs: { "aria-hidden": "true" },
      }),
    ])
  },
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/Ghost.vue?vue&type=template&id=0177576d&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/Ghost.vue?vue&type=template&id=0177576d& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { ref: "ghost" })
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=template&id=2701f7f6&":
/*!*****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/GoldenLayout/GoldenLayoutWrapper.vue?vue&type=template&id=2701f7f6& ***!
  \*****************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", {
    ref: "layoutContainer",
    style: "width:" + _vm.width + "; height:" + _vm.height + ";",
    attrs: { id: "layoutContainer" },
  })
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=template&id=4df67c86&":
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/GeneralWrapper.vue?vue&type=template&id=4df67c86& ***!
  \**********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", {
    ref: "holder",
    class: _vm.computedClass,
    style: _vm.computedStyle,
  })
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=template&id=22eeacd0&":
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/quick/LocalComponentWrappers/TSComponentWrapper.vue?vue&type=template&id=22eeacd0& ***!
  \**************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { ref: "comp-wrapper" })
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/init/root.vue?vue&type=template&id=599a6278&":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/init/root.vue?vue&type=template&id=599a6278& ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("v-app", [
    _c("link", {
      attrs: { rel: "stylesheet", type: "text/css", href: _vm.mdiPath },
    }),
    _vm._v(" "),
    _c("div", { ref: "errorDiv", staticClass: "errorContainerTarget" }),
    _vm._v(" "),
    _c("div", {
      ref: "root",
      staticClass: "shellContainerTarget",
      staticStyle: { width: "100%" },
    }),
  ])
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "?7064":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?5869":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?3790":
/*!************************!*\
  !*** stream (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ })

}]);
//# sourceMappingURL=node_modules_moment_locale_sync_recursive_-src_WebSDK_ts.js.map